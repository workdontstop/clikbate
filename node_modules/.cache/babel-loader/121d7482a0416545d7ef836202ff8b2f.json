{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\Clikbate\\\\src\\\\upload\\\\VideoFFmpeg.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { createFFmpeg } from '@ffmpeg/ffmpeg';\nimport { fetchFile, toBlobURL } from '@ffmpeg/util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoFFmpegx = ({\n  VideoUrl\n}) => {\n  _s();\n  const [recordedVideoUrl, setRecordedVideoUrl] = useState(null);\n  const ffmpegRef = useRef(null);\n  if (!ffmpegRef.current) {\n    ffmpegRef.current = createFFmpeg({\n      log: true\n    });\n  }\n  const loadFFmpeg = async () => {\n    const ffmpeg = ffmpegRef.current;\n    const baseURL = 'https://unpkg.com/@ffmpeg/core-mt@0.12.5/dist/umd';\n    await ffmpeg.load({\n      coreURL: await toBlobURL(`${baseURL}/ffmpeg-core.js`, 'text/javascript'),\n      wasmURL: await toBlobURL(`${baseURL}/ffmpeg-core.wasm`, 'application/wasm'),\n      workerURL: await toBlobURL(`${baseURL}/ffmpeg-core.worker.js`, 'text/javascript')\n    });\n  };\n  const processVideo = async sourceVideoUrl => {\n    const ffmpeg = ffmpegRef.current;\n    if (!ffmpeg.isLoaded()) {\n      await loadFFmpeg();\n    }\n    alert('kk');\n    ffmpeg.FS('writeFile', 'input.webm', await fetchFile(sourceVideoUrl));\n    await ffmpeg.run('-ss', '00:01:00', '-i', 'input.webm', '-t', '10', '-c:v', 'libx264', '-c:a', 'aac', 'output.mp4');\n    const data = ffmpeg.FS('readFile', 'output.mp4');\n    const url = URL.createObjectURL(new Blob([data.buffer], {\n      type: 'video/mp4'\n    }));\n    setRecordedVideoUrl(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => processVideo(VideoUrl),\n      children: \"Process Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), recordedVideoUrl && /*#__PURE__*/_jsxDEV(\"video\", {\n      src: recordedVideoUrl,\n      controls: true,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoFFmpegx, \"1WrjxgCYSKmwKSxQQiVoz2Mos6A=\");\n_c = VideoFFmpegx;\nexport const VideoFFmpeg = /*#__PURE__*/React.memo(VideoFFmpegx);\n_c2 = VideoFFmpeg;\nvar _c, _c2;\n$RefreshReg$(_c, \"VideoFFmpegx\");\n$RefreshReg$(_c2, \"VideoFFmpeg\");","map":{"version":3,"names":["React","useState","useRef","createFFmpeg","fetchFile","toBlobURL","jsxDEV","_jsxDEV","VideoFFmpegx","VideoUrl","_s","recordedVideoUrl","setRecordedVideoUrl","ffmpegRef","current","log","loadFFmpeg","ffmpeg","baseURL","load","coreURL","wasmURL","workerURL","processVideo","sourceVideoUrl","isLoaded","alert","FS","run","data","url","URL","createObjectURL","Blob","buffer","type","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","controls","style","width","_c","VideoFFmpeg","memo","_c2","$RefreshReg$"],"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/Clikbate/src/upload/VideoFFmpeg.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { createFFmpeg } from '@ffmpeg/ffmpeg';\r\nimport { fetchFile, toBlobURL } from '@ffmpeg/util';\r\n\r\nconst VideoFFmpegx = ({ VideoUrl }: any) => {\r\n    const [recordedVideoUrl, setRecordedVideoUrl] = useState(null);\r\n    const ffmpegRef = useRef(null);\r\n\r\n    if (!ffmpegRef.current) {\r\n        ffmpegRef.current = createFFmpeg({ log: true });\r\n    }\r\n\r\n    const loadFFmpeg = async () => {\r\n        const ffmpeg: any = ffmpegRef.current;\r\n        const baseURL = 'https://unpkg.com/@ffmpeg/core-mt@0.12.5/dist/umd';\r\n        await ffmpeg.load({\r\n            coreURL: await toBlobURL(`${baseURL}/ffmpeg-core.js`, 'text/javascript'),\r\n            wasmURL: await toBlobURL(`${baseURL}/ffmpeg-core.wasm`, 'application/wasm'),\r\n            workerURL: await toBlobURL(`${baseURL}/ffmpeg-core.worker.js`, 'text/javascript')\r\n        });\r\n    };\r\n\r\n    const processVideo = async (sourceVideoUrl: any) => {\r\n\r\n        const ffmpeg: any = ffmpegRef.current;\r\n        if (!ffmpeg.isLoaded()) {\r\n            await loadFFmpeg();\r\n        }\r\n\r\n        alert('kk');\r\n        ffmpeg.FS('writeFile', 'input.webm', await fetchFile(sourceVideoUrl));\r\n        await ffmpeg.run('-ss', '00:01:00', '-i', 'input.webm', '-t', '10', '-c:v', 'libx264', '-c:a', 'aac', 'output.mp4');\r\n        const data = ffmpeg.FS('readFile', 'output.mp4');\r\n        const url: any = URL.createObjectURL(new Blob([data.buffer], { type: 'video/mp4' }));\r\n        setRecordedVideoUrl(url);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => processVideo(VideoUrl)}>Process Video</button>\r\n            {recordedVideoUrl && <video src={recordedVideoUrl} controls style={{ width: '100%' }}></video>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const VideoFFmpeg = React.memo(VideoFFmpegx);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}