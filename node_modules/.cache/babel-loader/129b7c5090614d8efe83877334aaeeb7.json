{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\TaskbarSuperphotoImageView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskbarSuperphotoImageViewx({\n  fadex,\n  setfadex,\n  AddMainImageRef,\n  index,\n  MainImageFiltersRef,\n  finalImage,\n  ray,\n  Originalray,\n  setOriginalRay\n}) {\n  _s();\n\n  const [fade, setfade] = useState(false);\n  useEffect(() => {\n    setfade(true);\n    setTimeout(() => {\n      setfade(false);\n    }, 2000);\n  }, [MainImageFiltersRef.current]);\n  const Timer = useRef(null);\n  const callOriginal = useCallback(() => {\n    setfadex(true);\n\n    if (Timer.current) {\n      clearTimeout(Timer.current);\n    }\n\n    Timer.current = setTimeout(() => {\n      setfadex(false);\n    }, 3000);\n  }, [fadex]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: fadex ? /*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: () => {\n        callOriginal();\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      src: finalImage[index],\n      alt: `Image ${index}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: () => {\n        callOriginal();\n      },\n      className: ray[index] === 1 ? 'fadeboyinFilter' : \"\",\n      ref: AddMainImageRef,\n      style: {\n        cursor: 'pointer'\n      },\n      src: MainImageFiltersRef.current[index] ? MainImageFiltersRef.current[index].src : null,\n      alt: `Image ${index}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }, this)\n  }, void 0, false);\n}\n\n_s(TaskbarSuperphotoImageViewx, \"XkmE/ZHAbdgJzXVhLyUvBFiF5LI=\");\n\n_c = TaskbarSuperphotoImageViewx;\nexport const TaskbarSuperphotoImageView = /*#__PURE__*/React.memo(TaskbarSuperphotoImageViewx);\n_c2 = TaskbarSuperphotoImageView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskbarSuperphotoImageViewx\");\n$RefreshReg$(_c2, \"TaskbarSuperphotoImageView\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/TaskbarSuperphotoImageView.tsx"],"names":["React","useRef","useEffect","useCallback","useState","TaskbarSuperphotoImageViewx","fadex","setfadex","AddMainImageRef","index","MainImageFiltersRef","finalImage","ray","Originalray","setOriginalRay","fade","setfade","setTimeout","current","Timer","callOriginal","clearTimeout","cursor","src","TaskbarSuperphotoImageView","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IACIC,MADJ,EAEIC,SAFJ,EAGIC,WAHJ,EAIIC,QAJJ,QAMO,OANP;;;;AAqCA,SAASC,2BAAT,CAAqC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,eAAnB;AAAoCC,EAAAA,KAApC;AAA2CC,EAAAA,mBAA3C;AAAgEC,EAAAA,UAAhE;AAA4EC,EAAAA,GAA5E;AAAiFC,EAAAA,WAAjF;AAA8FC,EAAAA;AAA9F,CAArC,EAAuK;AAAA;;AAGnK,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,KAAD,CAAhC;AAKAF,EAAAA,SAAS,CAAC,MAAM;AAEZc,IAAAA,OAAO,CAAC,IAAD,CAAP;AAEAC,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAFS,EAEP,IAFO,CAAV;AAMH,GAVQ,EAUN,CAACN,mBAAmB,CAACQ,OAArB,CAVM,CAAT;AAcA,QAAMC,KAAK,GAAGlB,MAAM,CAAuC,IAAvC,CAApB;AAEA,QAAMmB,YAAY,GAAGjB,WAAW,CAAC,MAAM;AAEnCI,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AAEA,QAAIY,KAAK,CAACD,OAAV,EAAmB;AACfG,MAAAA,YAAY,CAACF,KAAK,CAACD,OAAP,CAAZ;AACH;;AAGDC,IAAAA,KAAK,CAACD,OAAN,GAAgBD,UAAU,CAAC,MAAM;AAC7BV,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,KAFyB,EAEvB,IAFuB,CAA1B;AAIH,GAb+B,EAa7B,CAACD,KAAD,CAb6B,CAAhC;AAiBA,sBACI;AAAA,cAKKA,KAAK,gBAAG;AAAK,MAAA,OAAO,EAAE,MAAM;AACzBc,QAAAA,YAAY;AACf,OAFQ;AAGL,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAHF;AAGyB,MAAA,GAAG,EAAEX,UAAU,CAACF,KAAD,CAHxC;AAIL,MAAA,GAAG,EAAG,SAAQA,KAAM;AAJf;AAAA;AAAA;AAAA;AAAA,YAAH,gBAMA;AAEE,MAAA,OAAO,EAAE,MAAM;AACXW,QAAAA,YAAY;AACf,OAJH;AAOE,MAAA,SAAS,EAAER,GAAG,CAACH,KAAD,CAAH,KAAe,CAAf,GAAmB,iBAAnB,GAAuC,EAPpD;AAOwD,MAAA,GAAG,EAAED,eAP7D;AAO8E,MAAA,KAAK,EAAE;AAAEc,QAAAA,MAAM,EAAE;AAAV,OAPrF;AAO4G,MAAA,GAAG,EACzGZ,mBAAmB,CAACQ,OAApB,CAA4BT,KAA5B,IACMC,mBAAmB,CAACQ,OAApB,CAA4BT,KAA5B,EAAmCc,GADzC,GAEM,IAVZ;AAYE,MAAA,GAAG,EAAG,SAAQd,KAAM;AAZtB;AAAA;AAAA;AAAA;AAAA;AAXV,mBADJ;AA6BH;;GAtEQJ,2B;;KAAAA,2B;AAwET,OAAO,MAAMmB,0BAA0B,gBAAGxB,KAAK,CAACyB,IAAN,CAAWpB,2BAAX,CAAnC;MAAMmB,0B","sourcesContent":["import React, {\r\n    useRef,\r\n    useEffect,\r\n    useCallback,\r\n    useState,\r\n    useLayoutEffect,\r\n} from \"react\";\r\nimport ControlPointDuplicateIcon from \"@mui/icons-material/ControlPointDuplicate\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport Axios from \"axios\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport date from \"date-and-time\";\r\nimport { UserInfoUpdatePROFILE } from \"../log/actions/UserdataAction\";\r\nimport { UserInfoUpdateBILLBOARD } from \"../log/actions/UserdataAction\";\r\nimport { usePalette } from \"react-palette\";\r\nimport { UpdateColorAction } from \"../GlobalActions\";\r\nimport EditTwoToneIcon from \"@mui/icons-material/EditTwoTone\";\r\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\r\nimport { UpdateUploadData } from \"../GlobalActions\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\nimport CropIcon from '@mui/icons-material/Crop';\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { TaskbarCrop } from \"./TaskbarCrop\";\r\nimport set from \"date-fns/set/index.js\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TaskbarSuperphotoImageViewx({ fadex, setfadex, AddMainImageRef, index, MainImageFiltersRef, finalImage, ray, Originalray, setOriginalRay }: any): JSX.Element {\r\n\r\n\r\n    const [fade, setfade] = useState(false);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setfade(true)\r\n\r\n        setTimeout(() => {\r\n            setfade(false)\r\n        }, 2000);\r\n\r\n\r\n\r\n    }, [MainImageFiltersRef.current])\r\n\r\n\r\n\r\n    const Timer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n    const callOriginal = useCallback(() => {\r\n\r\n        setfadex(true)\r\n\r\n        if (Timer.current) {\r\n            clearTimeout(Timer.current);\r\n        }\r\n\r\n\r\n        Timer.current = setTimeout(() => {\r\n            setfadex(false)\r\n        }, 3000);\r\n\r\n    }, [fadex])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n\r\n            {fadex ? <img onClick={() => {\r\n                callOriginal();\r\n            }}\r\n                style={{ cursor: 'pointer' }} src={finalImage[index]}\r\n                alt={`Image ${index}`} />\r\n\r\n                : <img\r\n\r\n                    onClick={() => {\r\n                        callOriginal();\r\n                    }}\r\n\r\n\r\n                    className={ray[index] === 1 ? 'fadeboyinFilter' : \"\"} ref={AddMainImageRef} style={{ cursor: 'pointer' }} src={\r\n                        MainImageFiltersRef.current[index]\r\n                            ? MainImageFiltersRef.current[index].src\r\n                            : null\r\n                    }\r\n                    alt={`Image ${index}`} />}\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport const TaskbarSuperphotoImageView = React.memo(TaskbarSuperphotoImageViewx);\r\n"]},"metadata":{},"sourceType":"module"}