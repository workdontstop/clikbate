{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport \"typeface-roboto\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Home from \"./Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    loggedIn\n  } = useSelector(state => ({ ...state.IsLoggedReducer\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loggedIn ? null : /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 31\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"xpNgjK+NU/G+1sDza7x4tLg5hOQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/App.tsx"],"names":["useSelector","useDispatch","Home","App","dispatch","loggedIn","state","IsLoggedReducer"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAO,iBAAP;AAkBA,SAAyBA,WAAzB,EAAsCC,WAAtC,QAAyD,aAAzD;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAGA,SAASC,GAAT,GAA4B;AAAA;;AAC1B,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAAeL,WAAW,CAAEM,KAAD,KAAqB,EACpD,GAAGA,KAAK,CAACC;AAD2C,GAArB,CAAD,CAAhC;AAIA,sBAAO;AAAA,cAAGF,QAAQ,GAAG,IAAH,gBAAU,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAArB,mBAAP;AACD;;GARQF,G;UACUF,W,EAEID,W;;;KAHdG,G;AAUT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport \"typeface-roboto\";\nimport { useMemo, useState, useEffect, useRef, useCallback } from \"react\";\nimport SuperstarzIconLight from \"./images/s.png\";\nimport SuperstarzIconDark from \"./images/sd.png\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  createMuiTheme,\n  MuiThemeProvider,\n} from \"@material-ui/core\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Option } from \"./log/Option\";\nimport { LoginButtons } from \"./log/LogButtons\";\nimport * as CSS from \"csstype\";\nimport { ModalLog } from \"./log/ModalLog\";\nimport { isBrowser, isTablet } from \"react-device-detect\";\nimport Supercheck from \"./Supercheck\";\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\nimport Home from \"./Home\";\nimport IsLoggedReducer from \"./log/reducers/IsloggedReducer\";\n\nfunction App(): JSX.Element {\n  const dispatch = useDispatch();\n\n  const { loggedIn } = useSelector((state: boolean) => ({\n    ...state.IsLoggedReducer,\n  }));\n\n  return <>{loggedIn ? null : <Home />}</>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}