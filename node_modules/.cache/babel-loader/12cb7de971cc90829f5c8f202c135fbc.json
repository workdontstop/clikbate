{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\Slider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Arrow } from \"./Arrow\";\nimport { Dots } from \"./Dots\";\nimport { SliderNumber } from \"./SliderNumber\";\nimport { Grid } from \"@material-ui/core\";\nimport { animated, useTransition } from \"react-spring\";\nimport { matchPc } from \"../DetectDevice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sliderx({\n  slides\n}) {\n  _s();\n\n  const [sliderIndex, setSliderIndex] = useState(0);\n  const [sliderIndexSlow, setSliderIndexSlow] = useState(0);\n  const [allowAutoPlay, setAllowAutoPlay] = useState(true); /// const getWidth = () => window.innerWidth;\n  ///var newGetWidth = getWidth() * slides.length;\n\n  const waitChangeIndexTimer = useRef(null);\n  const waitChangeIndexTimer2 = useRef(null);\n  const handleTouchMoveTimer = useRef(null);\n  const autoPlayTimer = useRef(null);\n  const SlideimageRef = useRef(null);\n  const SlideimageRefthumb = useRef(null);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [touchPosition, setTouchPosition] = useState(null); ///\n  ///\n  ///\n  /// SPRING TRANSITION WITH INDEX\n\n  const transitions = useTransition(sliderIndex, {\n    key: sliderIndex,\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    config: {\n      duration: 2950\n    }\n  }); ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\n\n  const sliderFirstImageOnLoad = item => {\n    if (item === 0) {\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\n        setImageHeight(SlideimageRef.current.clientHeight);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\n\n\n  const sliderFirstImageOnLoadthumb = item => {\n    if (item === 0 && imageHeight === 0) {\n      if (SlideimageRefthumb.current && SlideimageRefthumb.current.clientHeight) {\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n\n  const handleTouchStart = e => {\n    e.preventDefault(); ////onMouseDown onMouseMove\n    ////touchDown = e.clientX\n\n    const touchDown = e.touches[0].clientX;\n    setTouchPosition(touchDown);\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH MOVE EVENT\n\n\n  const handleTouchMove = e => {\n    if (allowAutoPlay) {\n      e.preventDefault();\n\n      if (handleTouchMoveTimer.current) {\n        clearTimeout(handleTouchMoveTimer.current);\n      }\n\n      handleTouchMoveTimer.current = setTimeout(function () {\n        const touchDown = touchPosition;\n\n        if (touchDown === null) {\n          return;\n        } ////currentTouch = e.clientX\n\n\n        const currentTouch = e.touches[0].clientX;\n        const diff = touchDown - currentTouch;\n\n        if (diff > 40) {\n          nextSlide();\n        } else if (diff < -40) {\n          prevSlide();\n        } else {}\n\n        setTouchPosition(null);\n        return false;\n      }, 200);\n    } else {}\n\n    return false;\n  }; ///\n  ///\n  ///\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\n\n\n  const waitChangeIndex = (data, state) => {\n    if (waitChangeIndexTimer.current) {\n      clearTimeout(waitChangeIndexTimer.current);\n    }\n\n    waitChangeIndexTimer.current = setTimeout(function () {\n      setSliderIndexSlow(state => data);\n    }, 500);\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE\n\n\n  const nextSlide = () => {\n    ///set((state) => (state + 1) % slides.length);\n    if (sliderIndex === slides.length - 1) {\n      setSliderIndex(sliderIndex => 0);\n      waitChangeIndex(0, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex + 1);\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\n    }\n  }; ///\n  ///\n  ///\n  /// PREV SLIDE\n\n\n  const prevSlide = () => {\n    if (sliderIndex === 0) {\n      setSliderIndex(sliderIndex => slides.length - 1);\n      waitChangeIndex(slides.length - 1, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex - 1);\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\n    }\n  };\n\n  const SliderAutoPlay = () => {\n    if (allowAutoPlay) {\n      setAllowAutoPlay(false);\n      autoPlayTimer.current = setInterval(function () {\n        setSliderIndex(state => (state + 1) % slides.length);\n\n        if (waitChangeIndexTimer2.current) {\n          clearTimeout(waitChangeIndexTimer2.current);\n        }\n\n        waitChangeIndexTimer2.current = setTimeout(function () {\n          setSliderIndexSlow(state => (state + 1) % slides.length);\n        }, 500);\n      }, 4000);\n    } else {\n      setAllowAutoPlay(true);\n\n      if (autoPlayTimer.current) {\n        clearInterval(autoPlayTimer.current);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// CHANGE SLIDER CONTENT USING  DOTS\n\n\n  const GotoDots = clickedDot => {\n    setSliderIndex(sliderIndex => clickedDot);\n    waitChangeIndex(clickedDot, sliderIndex);\n  };\n  /* useEffect(() => {\r\n    const t = setInterval(() => set(state => (state + 1) % slides.length), 4000)\r\n    return () => clearTimeout(t)\r\n  }, []) */\n\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    xs: 12,\n    style: {\n      position: \"relative\",\n      height: `${imageHeight}px`,\n      opacity: imageHeight === 0 ? 0 : 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(SliderNumber, {\n      activeSlide: sliderIndexSlow,\n      total: slides.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Arrow, {\n      allowAutoPlay: allowAutoPlay,\n      direction: \"left\",\n      clickSlideprev: prevSlide,\n      clickSlidenext: nextSlide,\n      imageHeight: imageHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), transitions((style, i) => /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      item: true,\n      children: [/*#__PURE__*/_jsxDEV(animated.img, {\n        ref: SlideimageRefthumb,\n        onLoad: () => {\n          sliderFirstImageOnLoadthumb(i);\n        },\n        className: \"turlightbillboard\",\n        style: { ...style,\n          height: \"auto\",\n          width: \"100%\",\n          objectFit: \"contain\",\n          position: \"absolute\",\n          top: \"0\",\n          left: \"0\"\n        },\n        src: `./images/thumbs/${slides[i]}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(animated.img, {\n        ref: SlideimageRef,\n        onClick: SliderAutoPlay,\n        onLoad: () => {\n          sliderFirstImageOnLoad(i);\n        },\n        className: \"turlightbillboard\",\n        style: { ...style,\n          cursor: \"pointer\",\n          height: \"auto\",\n          width: \"100%\",\n          objectFit: \"contain\",\n          position: \"absolute\",\n          top: \"0\",\n          left: \"0\",\n          padding: \"0px\",\n          paddingLeft: matchPc ? \"14px\" : \"0px\",\n          paddingRight: matchPc ? \"16px\" : \"0px\",\n          zIndex: 1\n        },\n        src: `./images/${slides[i]}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this)), \" \", /*#__PURE__*/_jsxDEV(Dots, {\n      GotoDots: GotoDots,\n      slides: slides,\n      activeSlide: sliderIndexSlow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sliderx, \"1dM3FZ53oO3pyJE7WtZS6NsGZBg=\", false, function () {\n  return [useTransition];\n});\n\n_c = Sliderx;\nexport const Slider = /*#__PURE__*/React.memo(Sliderx);\n_c2 = Slider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Sliderx\");\n$RefreshReg$(_c2, \"Slider\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/Slider.tsx"],"names":["React","useState","useRef","Arrow","Dots","SliderNumber","Grid","animated","useTransition","matchPc","Sliderx","slides","sliderIndex","setSliderIndex","sliderIndexSlow","setSliderIndexSlow","allowAutoPlay","setAllowAutoPlay","waitChangeIndexTimer","waitChangeIndexTimer2","handleTouchMoveTimer","autoPlayTimer","SlideimageRef","SlideimageRefthumb","imageHeight","setImageHeight","touchPosition","setTouchPosition","transitions","key","from","opacity","enter","leave","config","duration","sliderFirstImageOnLoad","item","current","clientHeight","sliderFirstImageOnLoadthumb","handleTouchStart","e","preventDefault","touchDown","touches","clientX","handleTouchMove","clearTimeout","setTimeout","currentTouch","diff","nextSlide","prevSlide","waitChangeIndex","data","state","length","SliderAutoPlay","setInterval","clearInterval","GotoDots","clickedDot","position","height","style","i","width","objectFit","top","left","cursor","padding","paddingLeft","paddingRight","zIndex","Slider","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Arrow } from \"./Arrow\";\r\nimport { Dots } from \"./Dots\";\r\nimport { SliderNumber } from \"./SliderNumber\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { animated, useTransition } from \"react-spring\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\n\r\nfunction Sliderx({ slides }: any): JSX.Element {\r\n  const [sliderIndex, setSliderIndex] = useState(0);\r\n  const [sliderIndexSlow, setSliderIndexSlow] = useState(0);\r\n  const [allowAutoPlay, setAllowAutoPlay] = useState(true);\r\n\r\n  /// const getWidth = () => window.innerWidth;\r\n  ///var newGetWidth = getWidth() * slides.length;\r\n\r\n  const waitChangeIndexTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const waitChangeIndexTimer2 = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const handleTouchMoveTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const autoPlayTimer = useRef<ReturnType<typeof setInterval> | null>(null);\r\n\r\n  const SlideimageRef = useRef<HTMLImageElement>(null);\r\n  const SlideimageRefthumb = useRef<HTMLImageElement>(null);\r\n\r\n  const [imageHeight, setImageHeight] = useState(0);\r\n  const [touchPosition, setTouchPosition] = useState(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SPRING TRANSITION WITH INDEX\r\n  const transitions = useTransition(sliderIndex, {\r\n    key: sliderIndex,\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n    config: { duration: 2950 },\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\r\n  const sliderFirstImageOnLoad = (item: number) => {\r\n    if (item === 0) {\r\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\r\n        setImageHeight(SlideimageRef.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\r\n  const sliderFirstImageOnLoadthumb = (item: number) => {\r\n    if (item === 0 && imageHeight === 0) {\r\n      if (\r\n        SlideimageRefthumb.current &&\r\n        SlideimageRefthumb.current.clientHeight\r\n      ) {\r\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const handleTouchStart = (e: any) => {\r\n    e.preventDefault();\r\n    ////onMouseDown onMouseMove\r\n    ////touchDown = e.clientX\r\n    const touchDown = e.touches[0].clientX;\r\n    setTouchPosition(touchDown);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH MOVE EVENT\r\n  const handleTouchMove = (e: any) => {\r\n    if (allowAutoPlay) {\r\n      e.preventDefault();\r\n      if (handleTouchMoveTimer.current) {\r\n        clearTimeout(handleTouchMoveTimer.current);\r\n      }\r\n      handleTouchMoveTimer.current = setTimeout(function () {\r\n        const touchDown = touchPosition;\r\n\r\n        if (touchDown === null) {\r\n          return;\r\n        }\r\n        ////currentTouch = e.clientX\r\n        const currentTouch = e.touches[0].clientX;\r\n        const diff = touchDown - currentTouch;\r\n\r\n        if (diff > 40) {\r\n          nextSlide();\r\n        } else if (diff < -40) {\r\n          prevSlide();\r\n        } else {\r\n        }\r\n\r\n        setTouchPosition(null);\r\n        return false;\r\n      }, 200);\r\n    } else {\r\n    }\r\n    return false;\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\r\n  const waitChangeIndex = (data: number, state: any) => {\r\n    if (waitChangeIndexTimer.current) {\r\n      clearTimeout(waitChangeIndexTimer.current);\r\n    }\r\n    waitChangeIndexTimer.current = setTimeout(function () {\r\n      setSliderIndexSlow((state) => data);\r\n    }, 500);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const nextSlide = () => {\r\n    ///set((state) => (state + 1) % slides.length);\r\n    if (sliderIndex === slides.length - 1) {\r\n      setSliderIndex((sliderIndex) => 0);\r\n      waitChangeIndex(0, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex) => sliderIndex + 1);\r\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PREV SLIDE\r\n  const prevSlide = () => {\r\n    if (sliderIndex === 0) {\r\n      setSliderIndex((sliderIndex) => slides.length - 1);\r\n      waitChangeIndex(slides.length - 1, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex) => sliderIndex - 1);\r\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\r\n    }\r\n  };\r\n\r\n  const SliderAutoPlay = () => {\r\n    if (allowAutoPlay) {\r\n      setAllowAutoPlay(false);\r\n      autoPlayTimer.current = setInterval(function () {\r\n        setSliderIndex((state) => (state + 1) % slides.length);\r\n        if (waitChangeIndexTimer2.current) {\r\n          clearTimeout(waitChangeIndexTimer2.current);\r\n        }\r\n        waitChangeIndexTimer2.current = setTimeout(function () {\r\n          setSliderIndexSlow((state) => (state + 1) % slides.length);\r\n        }, 500);\r\n      }, 4000);\r\n    } else {\r\n      setAllowAutoPlay(true);\r\n      if (autoPlayTimer.current) {\r\n        clearInterval(autoPlayTimer.current);\r\n      }\r\n    }\r\n  };\r\n  ///\r\n  ///\r\n  ///\r\n  /// CHANGE SLIDER CONTENT USING  DOTS\r\n  const GotoDots = (clickedDot: number) => {\r\n    setSliderIndex((sliderIndex) => clickedDot);\r\n    waitChangeIndex(clickedDot, sliderIndex);\r\n  };\r\n\r\n  /* useEffect(() => {\r\n    const t = setInterval(() => set(state => (state + 1) % slides.length), 4000)\r\n    return () => clearTimeout(t)\r\n  }, []) */\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      onTouchStart={handleTouchStart}\r\n      onTouchMove={handleTouchMove}\r\n      xs={12}\r\n      style={{\r\n        position: \"relative\",\r\n        height: `${imageHeight}px`,\r\n        opacity: imageHeight === 0 ? 0 : 1,\r\n      }}\r\n    >\r\n      <SliderNumber activeSlide={sliderIndexSlow} total={slides.length} />\r\n      <Arrow\r\n        allowAutoPlay={allowAutoPlay}\r\n        direction=\"left\"\r\n        clickSlideprev={prevSlide}\r\n        clickSlidenext={nextSlide}\r\n        imageHeight={imageHeight}\r\n      />\r\n      {transitions((style, i) => (\r\n        <Grid key={i} xs={12} item>\r\n          <animated.img\r\n            ref={SlideimageRefthumb}\r\n            onLoad={() => {\r\n              sliderFirstImageOnLoadthumb(i);\r\n            }}\r\n            className=\"turlightbillboard\"\r\n            style={{\r\n              ...style,\r\n              height: \"auto\",\r\n              width: \"100%\",\r\n              objectFit: \"contain\",\r\n              position: \"absolute\",\r\n              top: \"0\",\r\n              left: \"0\",\r\n            }}\r\n            src={`./images/thumbs/${slides[i]}`}\r\n          />\r\n\r\n          <animated.img\r\n            ref={SlideimageRef}\r\n            onClick={SliderAutoPlay}\r\n            onLoad={() => {\r\n              sliderFirstImageOnLoad(i);\r\n            }}\r\n            className=\"turlightbillboard\"\r\n            style={{\r\n              ...style,\r\n              cursor: \"pointer\",\r\n              height: \"auto\",\r\n              width: \"100%\",\r\n              objectFit: \"contain\",\r\n              position: \"absolute\",\r\n              top: \"0\",\r\n              left: \"0\",\r\n              padding: \"0px\",\r\n              paddingLeft: matchPc ? \"14px\" : \"0px\",\r\n              paddingRight: matchPc ? \"16px\" : \"0px\",\r\n              zIndex: 1,\r\n            }}\r\n            src={`./images/${slides[i]}`}\r\n          />\r\n        </Grid>\r\n      ))}{\" \"}\r\n      <Dots GotoDots={GotoDots} slides={slides} activeSlide={sliderIndexSlow} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport const Slider = React.memo(Sliderx);\r\n"]},"metadata":{},"sourceType":"module"}