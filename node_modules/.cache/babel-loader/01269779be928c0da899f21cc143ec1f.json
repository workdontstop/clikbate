{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\Slider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Arrow from \"./Arrow\";\nimport Dots from \"./Dots\";\nimport { Grid } from \"@material-ui/core\";\nimport { animated, useTransition } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Slider = ({\n  slides\n}) => {\n  _s();\n\n  const [index, set] = useState(0);\n\n  const getWidth = () => window.innerWidth; ///var newGetWidth = getWidth() * slides.length;\n\n\n  const transitions = useTransition(index, {\n    key: index,\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    config: {\n      duration: 1000\n    }\n  });\n  /**  useEffect(() => {\r\n    const t = setInterval(\r\n      () => set((state) => (state + 0) % slides.length),\r\n      2000\r\n    );\r\n    return () => clearTimeout(t);\r\n  }, []);    */\n\n  const nextSlide = () => {\n    set(state => (state + 1) % slides.length);\n  };\n\n  const prevSlide = () => {\n    if (index === 0) {\n      set(slides.length - 1);\n    } else {\n      set(index - 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [transitions((style, i) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(animated.img, {\n          style: { ...style,\n            height: \"auto\",\n            width: \"20%\",\n            objectFit: \"contain\",\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            backgroundColor: \"#00ccff\"\n          },\n          src: slides[i]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)), \" \", /*#__PURE__*/_jsxDEV(Arrow, {\n        direction: \"left\",\n        clickSlide: prevSlide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Arrow, {\n        direction: \"right\",\n        clickSlide: nextSlide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dots, {\n        slides: slides,\n        activeSlide: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"2PPFw8RYVLnNjnuL8Tj2z/Ohs70=\", false, function () {\n  return [useTransition];\n});\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/Slider.tsx"],"names":["React","useState","Arrow","Dots","Grid","animated","useTransition","Slider","slides","index","set","getWidth","window","innerWidth","transitions","key","from","opacity","enter","leave","config","duration","nextSlide","state","length","prevSlide","style","i","height","width","objectFit","position","top","left","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AAGA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAgBC,IAAhB,QAA4B,mBAA5B;AACA,SAAoBC,QAApB,EAA8BC,aAA9B,QAAmD,cAAnD;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAQC,GAAR,IAAeT,QAAQ,CAAC,CAAD,CAA7B;;AACA,QAAMU,QAAQ,GAAG,MAAMC,MAAM,CAACC,UAA9B,CAFkC,CAGlC;;;AAEA,QAAMC,WAAW,GAAGR,aAAa,CAACG,KAAD,EAAQ;AACvCM,IAAAA,GAAG,EAAEN,KADkC;AAEvCO,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAFiC;AAGvCC,IAAAA,KAAK,EAAE;AAAED,MAAAA,OAAO,EAAE;AAAX,KAHgC;AAIvCE,IAAAA,KAAK,EAAE;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAJgC;AAKvCG,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ;AAL+B,GAAR,CAAjC;AAQA;AACF;AACA;AACA;AACA;AACA;AACA;;AAEE,QAAMC,SAAS,GAAG,MAAM;AACtBZ,IAAAA,GAAG,CAAEa,KAAD,IAAW,CAACA,KAAK,GAAG,CAAT,IAAcf,MAAM,CAACgB,MAAjC,CAAH;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACtB,QAAIhB,KAAK,KAAK,CAAd,EAAiB;AACfC,MAAAA,GAAG,CAACF,MAAM,CAACgB,MAAP,GAAgB,CAAjB,CAAH;AACD,KAFD,MAEO;AACLd,MAAAA,GAAG,CAACD,KAAK,GAAG,CAAT,CAAH;AACD;AACF,GAND;;AAQA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,iBACGK,WAAW,CAAC,CAACY,KAAD,EAAQC,CAAR,kBACX,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE,QAAC,QAAD,CAAU,GAAV;AACE,UAAA,KAAK,EAAE,EACL,GAAGD,KADE;AAELE,YAAAA,MAAM,EAAE,MAFH;AAGLC,YAAAA,KAAK,EAAE,KAHF;AAILC,YAAAA,SAAS,EAAE,SAJN;AAKLC,YAAAA,QAAQ,EAAE,UALL;AAMLC,YAAAA,GAAG,EAAE,GANA;AAOLC,YAAAA,IAAI,EAAE,GAPD;AAQLC,YAAAA,eAAe,EAAE;AARZ,WADT;AAWE,UAAA,GAAG,EAAE1B,MAAM,CAACmB,CAAD;AAXb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADU,CADd,EAiBM,GAjBN,eAkBE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAwB,QAAA,UAAU,EAAEF;AAApC;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,UAAU,EAAEH;AAArC;AAAA;AAAA;AAAA;AAAA,cAnBF,eAoBE,QAAC,IAAD;AAAM,QAAA,MAAM,EAAEd,MAAd;AAAsB,QAAA,WAAW,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA3DD;;GAAMF,M;UAKgBD,a;;;KALhBC,M;AA6DN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport Slide from \"./Slide\";\r\nimport Arrow from \"./Arrow\";\r\nimport Dots from \"./Dots\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\nimport { useSpring, animated, useTransition } from \"react-spring\";\r\n\r\nconst Slider = ({ slides }: any) => {\r\n  const [index, set] = useState(0);\r\n  const getWidth = () => window.innerWidth;\r\n  ///var newGetWidth = getWidth() * slides.length;\r\n\r\n  const transitions = useTransition(index, {\r\n    key: index,\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n    config: { duration: 1000 },\r\n  });\r\n\r\n  /**  useEffect(() => {\r\n    const t = setInterval(\r\n      () => set((state) => (state + 0) % slides.length),\r\n      2000\r\n    );\r\n    return () => clearTimeout(t);\r\n  }, []);    */\r\n\r\n  const nextSlide = () => {\r\n    set((state) => (state + 1) % slides.length);\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    if (index === 0) {\r\n      set(slides.length - 1);\r\n    } else {\r\n      set(index - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        {transitions((style, i) => (\r\n          <Grid item xs={6}>\r\n            <animated.img\r\n              style={{\r\n                ...style,\r\n                height: \"auto\",\r\n                width: \"20%\",\r\n                objectFit: \"contain\",\r\n                position: \"absolute\",\r\n                top: \"0\",\r\n                left: \"0\",\r\n                backgroundColor: \"#00ccff\",\r\n              }}\r\n              src={slides[i]}\r\n            />\r\n          </Grid>\r\n        ))}{\" \"}\r\n        <Arrow direction=\"left\" clickSlide={prevSlide} />\r\n        <Arrow direction=\"right\" clickSlide={nextSlide} />\r\n        <Dots slides={slides} activeSlide={index} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n"]},"metadata":{},"sourceType":"module"}