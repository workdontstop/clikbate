{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\TextFieldLogin.tsx\";\nimport React from \"react\";\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TextfIeldLoginx({\n  updateLoginvalues,\n  rawLoginValues,\n  ShowLoginPasswordForaWhile,\n  loginShowPassword,\n  size,\n  passwordType\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: passwordType ? /*#__PURE__*/_jsxDEV(TextField, {\n      size: size,\n      style: {\n        transform: \"scale(0.93)\",\n        width: \"99%\",\n        paddingBottom: \"40px\",\n        zIndex: 1\n      },\n      label: \"Password\",\n      onChange: updateLoginvalues,\n      type: loginShowPassword ? \"text\" : \"password\",\n      name: \"inputedPassword\",\n      value: rawLoginValues.inputedPassword,\n      variant: \"standard\",\n      InputProps: {\n        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"end\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: ShowLoginPasswordForaWhile,\n            onMouseDown: ShowLoginPasswordForaWhile,\n            \"aria-label\": \"toggle password visibility\",\n            children: loginShowPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n      size: size,\n      style: {\n        transform: \"scale(0.93)\",\n        width: \"99%\",\n        paddingBottom: \"70px\"\n      },\n      label: \"Username\",\n      margin: \"normal\",\n      type: \"text\",\n      onChange: updateLoginvalues,\n      name: \"inputedUsername\",\n      value: rawLoginValues.inputedUsername,\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = TextfIeldLoginx;\nexport default TextfIeldLogin;\nexport const TextFieldSignup = /*#__PURE__*/React.memo(TextFieldSignupx);\n_c2 = TextFieldSignup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextfIeldLoginx\");\n$RefreshReg$(_c2, \"TextFieldSignup\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/TextFieldLogin.tsx"],"names":["React","IconButton","InputAdornment","TextField","VisibilityOffIcon","VisibilityIcon","TextfIeldLoginx","updateLoginvalues","rawLoginValues","ShowLoginPasswordForaWhile","loginShowPassword","size","passwordType","transform","width","paddingBottom","zIndex","inputedPassword","endAdornment","inputedUsername","TextfIeldLogin","TextFieldSignup","memo","TextFieldSignupx"],"mappings":";AAAA,OAAOA,KAAP,MAAgE,OAAhE;AAEA,SACEC,UADF,EAEEC,cAFF,EAMEC,SANF,QAQO,mBARP;AASA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;;;AAGA,SAASC,eAAT,CAAyB;AACvBC,EAAAA,iBADuB;AAEvBC,EAAAA,cAFuB;AAGvBC,EAAAA,0BAHuB;AAIvBC,EAAAA,iBAJuB;AAKvBC,EAAAA,IALuB;AAMvBC,EAAAA;AANuB,CAAzB,EAOiC;AAC/B,sBACE;AAAA,cACGA,YAAY,gBACX,QAAC,SAAD;AACE,MAAA,IAAI,EAAED,IADR;AAEE,MAAA,KAAK,EAAE;AACLE,QAAAA,SAAS,EAAE,aADN;AAELC,QAAAA,KAAK,EAAE,KAFF;AAGLC,QAAAA,aAAa,EAAE,MAHV;AAILC,QAAAA,MAAM,EAAE;AAJH,OAFT;AAQE,MAAA,KAAK,EAAC,UARR;AASE,MAAA,QAAQ,EAAET,iBATZ;AAUE,MAAA,IAAI,EAAEG,iBAAiB,GAAG,MAAH,GAAY,UAVrC;AAWE,MAAA,IAAI,EAAC,iBAXP;AAYE,MAAA,KAAK,EAAEF,cAAc,CAACS,eAZxB;AAaE,MAAA,OAAO,EAAC,UAbV;AAcE,MAAA,UAAU,EAAE;AACVC,QAAAA,YAAY,eACV,QAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC,KAAzB;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,OAAO,EAAET,0BADX;AAEE,YAAA,WAAW,EAAEA,0BAFf;AAGE,0BAAW,4BAHb;AAAA,sBAKGC,iBAAiB,gBAChB,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,oBADgB,gBAGhB,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFQ;AAdd;AAAA;AAAA;AAAA;AAAA,YADW,gBAkCX,QAAC,SAAD;AACE,MAAA,IAAI,EAAEC,IADR;AAEE,MAAA,KAAK,EAAE;AACLE,QAAAA,SAAS,EAAE,aADN;AAELC,QAAAA,KAAK,EAAE,KAFF;AAGLC,QAAAA,aAAa,EAAE;AAHV,OAFT;AAOE,MAAA,KAAK,EAAC,UAPR;AAQE,MAAA,MAAM,EAAC,QART;AASE,MAAA,IAAI,EAAC,MATP;AAUE,MAAA,QAAQ,EAAER,iBAVZ;AAWE,MAAA,IAAI,EAAC,iBAXP;AAYE,MAAA,KAAK,EAAEC,cAAc,CAACW,eAZxB;AAaE,MAAA,OAAO,EAAC;AAbV;AAAA;AAAA;AAAA;AAAA;AAnCJ,mBADF;AAsDD;;KA9DQb,e;AAgET,eAAec,cAAf;AAEA,OAAO,MAAMC,eAAe,gBAAGrB,KAAK,CAACsB,IAAN,CAAWC,gBAAX,CAAxB;MAAMF,e","sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport ModalFormLoginError from \"./ModalFormLoginError\";\r\nimport {\r\n  IconButton,\r\n  InputAdornment,\r\n  Grid,\r\n  DialogContent,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport { ItextfIeldLogin } from \"./appFolder-Interfaces\";\r\n\r\nfunction TextfIeldLoginx({\r\n  updateLoginvalues,\r\n  rawLoginValues,\r\n  ShowLoginPasswordForaWhile,\r\n  loginShowPassword,\r\n  size,\r\n  passwordType,\r\n}: ItextfIeldLogin): JSX.Element {\r\n  return (\r\n    <>\r\n      {passwordType ? (\r\n        <TextField\r\n          size={size}\r\n          style={{\r\n            transform: \"scale(0.93)\",\r\n            width: \"99%\",\r\n            paddingBottom: \"40px\",\r\n            zIndex: 1,\r\n          }}\r\n          label=\"Password\"\r\n          onChange={updateLoginvalues}\r\n          type={loginShowPassword ? \"text\" : \"password\"}\r\n          name=\"inputedPassword\"\r\n          value={rawLoginValues.inputedPassword}\r\n          variant=\"standard\"\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={ShowLoginPasswordForaWhile}\r\n                  onMouseDown={ShowLoginPasswordForaWhile}\r\n                  aria-label=\"toggle password visibility\"\r\n                >\r\n                  {loginShowPassword ? (\r\n                    <VisibilityIcon />\r\n                  ) : (\r\n                    <VisibilityOffIcon />\r\n                  )}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      ) : (\r\n        <TextField\r\n          size={size}\r\n          style={{\r\n            transform: \"scale(0.93)\",\r\n            width: \"99%\",\r\n            paddingBottom: \"70px\",\r\n          }}\r\n          label=\"Username\"\r\n          margin=\"normal\"\r\n          type=\"text\"\r\n          onChange={updateLoginvalues}\r\n          name=\"inputedUsername\"\r\n          value={rawLoginValues.inputedUsername}\r\n          variant=\"standard\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TextfIeldLogin;\r\n\r\nexport const TextFieldSignup = React.memo(TextFieldSignupx);\r\n"]},"metadata":{},"sourceType":"module"}