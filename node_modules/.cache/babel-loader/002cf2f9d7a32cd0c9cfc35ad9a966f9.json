{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\clikbate\\\\src\\\\upload\\\\UploadProfilePic.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useCallback, useState, useLayoutEffect } from \"react\";\nimport { Grid, DialogContent } from \"@material-ui/core\";\nimport { matchTablet, matchMobile } from \"../DetectDevice\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Axios from \"axios\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport { UserInfoUpdatePROFILE } from \"../log/actions/UserdataAction\";\nimport { UserInfoUpdateBILLBOARD } from \"../log/actions/UserdataAction\";\nimport { usePalette } from \"react-palette\";\nimport { UpdateColorAction } from \"../GlobalActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UploadProfilePicx({\n  showModalUploadProfile,\n  cropimageProfile,\n  profileimageSource,\n  typex,\n  uploadClose,\n  billdefaultbill,\n  sliderIndex\n}) {\n  _s();\n  const cropCanvasRefx = useRef(null);\n  const dispatch = useDispatch();\n  const [CropImageHolder, setCropImageHolder] = useState(null);\n  const hdcanvasvalue = 1;\n  const getpreviewFixedWidthRef = useRef(null);\n  const getCropHeightRef = useRef(null);\n  const getCropWidthMobileRef = useRef(null);\n  const getCropWidthMobileReflong = useRef(null);\n  const getCropWidthMobileRefHD = useRef(null);\n  const getCropHeightRefsingle = useRef(null);\n  const getFixedCropWidthRef = useRef(null);\n  const [myCropWidth, setmyCropWidth] = useState(0);\n  const [myCropHeight, setmyCropHeight] = useState(0);\n  const [matchTabletMobile, setmatchTabletMobile] = useState(false);\n  const [getpreviewFixedWidth, setgetpreviewFixedWidth] = useState(0);\n  const [screenH, setscreenH] = useState(0);\n  const {\n    data,\n    loading,\n    error\n  } = usePalette(cropimageProfile);\n  const [waitONLOAD, setwaitONLOAD] = useState(true);\n  const [getCropHeightRealImageRatio, setgetCropHeightRealImageRatio] = useState(0);\n  const [getCropWidthMobile, setgetCropWidthMobile] = useState(0);\n  const [getCropWidthMobileHD, setgetCropWidthMobileHD] = useState(0);\n  const [widelongboxmobileimage, setwidelongboxmobileimage] = useState(false);\n  const [widelongboxmobileimagex, setwidelongboxmobileimagex] = useState(false);\n  const [OriginalImageWidth, setOriginalImageWidth] = useState(0);\n  const [OriginalImageHeight, setOriginalImageHeight] = useState(0);\n  const [cropwidth, setcropwidth] = useState(0);\n  const [cropheight, setcropheight] = useState(0);\n  const [WideImageCheck, setWideImageCheck] = useState(false);\n  const [SourceWidthForCropX, setSourceWidthForCropX] = useState(0);\n  const [SourceWidthForCropY, setSourceWidthForCropY] = useState(0);\n  const [BoxCropActivated, setBoxCropActivated] = useState(true);\n  const [zoom, setzoom] = useState(1);\n  const [crop, setcrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [optionscropshow, setoptionscropshow] = useState(true);\n  const [superLoadFadex, setsuperLoadFadex] = useState(false);\n  const [s3finaldata, sets3finaldata] = useState([0, 0]);\n  var s3finaldatax = [...s3finaldata];\n  const [quality, setquality] = useState(1);\n  const callQuality = () => {\n    if (typex === \"Profile\") {\n      setquality(1.1);\n    } else {\n      setquality(1.5);\n    }\n  };\n  useEffect(() => {\n    callQuality();\n  }, [typex]);\n\n  //\n  //\n  //\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\n  const animation = useSpring({\n    config: {\n      duration: 600\n    },\n    opacity: showModalUploadProfile ? 1 : 0,\n    transform: showModalUploadProfile ? `translateY(0%)` : `translateY(-100%)`,\n    padding: \"0px\"\n  });\n\n  ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({\n    ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env;\n  const cropscrollRef = useRef(null);\n  const cropTOPLEVELScrollRef = useRef(null);\n\n  ///\n  ///\n  ///\n  ///GET DIMENSIONS AND  SCREEN HEIGHT\n  useLayoutEffect(() => {\n    if (matchTablet || matchMobile) {\n      setmatchTabletMobile(true);\n    }\n    if (getpreviewFixedWidthRef.current && getpreviewFixedWidthRef.current.clientWidth) {\n      setgetpreviewFixedWidth(getpreviewFixedWidthRef.current.clientWidth);\n    }\n    if (getCropHeightRefsingle.current && getCropHeightRefsingle.current.clientHeight) {\n      setscreenH(getCropHeightRefsingle.current.clientHeight);\n    }\n    if (profileimageSource.length === 1) {\n      setwaitONLOAD(false);\n      if (getCropHeightRefsingle.current && getCropHeightRefsingle.current.clientHeight || getCropHeightRef.current) {\n        if (matchTabletMobile) {\n          setmyCropHeight(getCropWidthMobileRef.current.clientWidth * hdcanvasvalue);\n          setmyCropWidth(getCropWidthMobileRef.current.clientWidth * hdcanvasvalue);\n        } else {\n          if (typex === \"Profile\") {\n            setmyCropWidth(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue);\n            setmyCropHeight(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue);\n          } else {\n            if (WideImageCheck) {\n              setmyCropWidth(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue + getCropHeightRefsingle.current.clientHeight * 0);\n              setmyCropHeight(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue - getCropHeightRefsingle.current.clientHeight * 0.22);\n            } else {\n              setmyCropWidth(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue + getCropHeightRefsingle.current.clientHeight * 0.2);\n              setmyCropHeight(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue - getCropHeightRefsingle.current.clientHeight * 0.32);\n            }\n          }\n        }\n        setgetCropHeightRealImageRatio(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue);\n      }\n    } else {\n      if (getCropHeightRef.current && getCropHeightRef.current.clientHeight) {\n        if (matchTabletMobile) {\n          setmyCropHeight(getCropWidthMobileRef.current.clientWidth * hdcanvasvalue);\n          setmyCropWidth(getCropWidthMobileRef.current.clientWidth * hdcanvasvalue);\n        } else {\n          setmyCropHeight(getCropHeightRef.current.clientHeight * hdcanvasvalue);\n          setmyCropWidth(getCropHeightRef.current.clientHeight * hdcanvasvalue);\n        }\n        setgetCropHeightRealImageRatio(getCropHeightRef.current.clientHeight);\n      }\n    }\n    if (getCropWidthMobileRef.current && getCropWidthMobileRef.current.clientWidth) {\n      setgetCropWidthMobile(getCropWidthMobileRef.current.clientWidth);\n    }\n    if (getCropWidthMobileRefHD.current && getCropWidthMobileRefHD.current.clientWidth) {\n      setgetCropWidthMobileHD(getCropWidthMobileRefHD.current.clientWidth);\n    }\n  }, [profileimageSource, typex, WideImageCheck]);\n  const draw = useCallback((ctx, dimensions, type, axis, allowZoomedAxis) => {\n    var allowZoomedaxis, aa;\n    if (typex === \"Profile\") {\n      aa = -(dimensions * zoom) / 4;\n    } else {\n      aa = axis;\n    }\n    if (zoom === 1) {\n      allowZoomedaxis = 0;\n    } else {\n      allowZoomedaxis = allowZoomedAxis;\n    }\n    if (type === 1) {\n      ctx.drawImage(CropImageHolder, aa, allowZoomedaxis, dimensions * zoom, myCropHeight * quality * zoom);\n    } else if (type === 2) {\n      ctx.drawImage(CropImageHolder, allowZoomedaxis, axis, myCropWidth * quality * zoom, dimensions * zoom);\n    } else {\n      ctx.drawImage(CropImageHolder, 0, 0, OriginalImageWidth, OriginalImageHeight);\n    }\n  }, [OriginalImageWidth, OriginalImageHeight, CropImageHolder, myCropHeight, myCropWidth, zoom, typex]);\n  useLayoutEffect(() => {\n    const Newcropimage = new Image();\n    Newcropimage.src = cropimageProfile;\n    Newcropimage.onload = function () {\n      if (CropImageHolder === Newcropimage) {} else {\n        setCropImageHolder(Newcropimage);\n      }\n      var data1 = 0;\n      var data2 = 0;\n      var RatioNewcropimageNaturalHeight = Newcropimage.naturalHeight / myCropHeight;\n      var NewcropimageWidth = Newcropimage.naturalWidth / RatioNewcropimageNaturalHeight;\n      var RatioNewcropimageNaturalWidth = Newcropimage.naturalWidth / getCropWidthMobileHD;\n      var NewcropimageHeight = Newcropimage.naturalHeight / RatioNewcropimageNaturalWidth;\n      var RatioNewcropimageNaturalWidthxx = Newcropimage.naturalWidth / getCropWidthMobile;\n      var NewcropimageHeightxx = Newcropimage.naturalHeight / RatioNewcropimageNaturalWidthxx;\n\n      ////// CANVAS  CROPPER DIMENSIONS  PC MOBILE(canvaswidth)\n\n      if (matchTabletMobile && NewcropimageHeightxx < screenH) {\n        setwidelongboxmobileimage(true);\n        setwidelongboxmobileimagex(true);\n        if (OriginalImageHeight === NewcropimageHeight) {} else {\n          setOriginalImageHeight(NewcropimageHeight);\n          data2 = NewcropimageHeight;\n        }\n        //\n        if (OriginalImageWidth === getCropWidthMobileHD) {} else {\n          setOriginalImageWidth(getCropWidthMobileHD);\n          data1 = getCropWidthMobileHD;\n        }\n      } else {\n        setwidelongboxmobileimage(false);\n        setwidelongboxmobileimagex(false);\n        if (OriginalImageWidth === NewcropimageWidth) {} else {\n          setOriginalImageWidth(NewcropimageWidth);\n          data1 = NewcropimageWidth;\n        }\n        ///\n        if (OriginalImageHeight === myCropHeight) {} else {\n          setOriginalImageHeight(myCropHeight);\n          data2 = myCropHeight;\n        }\n      }\n      ////// CANVAS  CROPPER DIMENSIONS  PC MOBILE(canvaswidth)\n\n      if (Newcropimage.naturalWidth > Newcropimage.naturalHeight) {\n        setWideImageCheck(true);\n      } else {\n        setWideImageCheck(false);\n      }\n      if (cropwidth === data1) {} else {\n        setcropwidth(data1);\n      }\n      if (cropheight === data2) {} else {\n        setcropheight(data2);\n      }\n    };\n  }, [cropimageProfile, showModalUploadProfile]);\n\n  ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    id,\n    username,\n    billboard1,\n    billboardstate,\n    billboardthumb1,\n    billboard2,\n    billboardthumb2,\n    image,\n    imageThumb\n  } = useSelector(state => ({\n    ...state.UserdataReducer\n  }));\n  const idReducer = id;\n  const usernameReducer = username;\n  const billboard1Reducer = billboard1;\n  const billboardstateReducer = billboardstate;\n  function blobToBase64(blob) {\n    return new Promise((resolve, _) => {\n      const reader = new FileReader();\n      reader.onloadend = () => resolve(reader.result);\n      reader.readAsDataURL(blob);\n    });\n  }\n  const postbillboardData = useCallback((hdBlob, thumbBlob, hdBase64) => {\n    var gg = \"\";\n    GetSecureURL(hdBlob, thumbBlob, hdBase64, true, gg);\n  }, [idReducer, blobToBase64]);\n  const GetSecureURL = (hdBlob, thumbBlob, hdBase64, billboard, color) => {\n    Axios.post(`${REACT_APP_SUPERSTARZ_URL}/get_signed_url_4upload`).then(response => {\n      setsuperLoadFadex(false);\n      var url = response.data.url;\n      setsuperLoadFadex(true);\n      PutImageInS3WithURL(thumbBlob, url, url.urlHD, hdBlob, hdBase64, false, billboard, color);\n    }).catch(function (error) {\n      setsuperLoadFadex(false);\n      alert(\"caption erroerrr\");\n    });\n  };\n  const PutImageInS3WithURL = useCallback((thumbBlob, ur, urlx, a, b, allow, billboard, color) => {\n    Axios.put(urlx, a).then(response => {\n      //// setsuperLoadFadex(false);\n      console.log(response);\n      if (response.status === 200) {\n        setsuperLoadFadex(true);\n        if (allow) {\n          let imagelinkhh = urlx.split(\"?\")[0];\n          let imagelink = imagelinkhh.split(\"/\").pop();\n          var bi = 0;\n          if (sliderIndex === 0) {\n            bi = 1;\n          } else {\n            bi = 0;\n          }\n          if (billboard) {\n            var zzaatak = {\n              imagedata: s3finaldatax[0],\n              imagedataThumb: imagelink,\n              id: idReducer,\n              type: bi\n            };\n            UpdateBillboardDatabaseStatus200(zzaatak, b);\n          } else {\n            var datak = {\n              imagedata: s3finaldatax[0],\n              imagedataThumb: imagelink,\n              imagedataOld: billboard1,\n              imagedataThumbOld: billboardthumb1,\n              imagedataOld2: billboard1,\n              imagedataThumbOld2: billboardthumb1,\n              id: idReducer,\n              color: color.darkVibrant,\n              color2: color.darkVibrant\n            };\n            UpdateProfileDatabaseStatus200(datak, b, color);\n          }\n        } else {\n          let imagelinkx = urlx.split(\"?\")[0];\n          s3finaldatax[0] = imagelinkx.split(\"/\").pop();\n          PutImageInS3WithURL(thumbBlob, ur, ur.urlThumb, thumbBlob, b, true, billboard, color);\n        }\n      }\n    }).catch(function (error) {\n      setsuperLoadFadex(false);\n      alert(\"caption erroerrr\");\n    });\n  }, [idReducer, s3finaldatax, billboard1Reducer, billboardstateReducer, sliderIndex]);\n  const UpdateBillboardDatabaseStatus200 = (datak, b) => {\n    Axios.put(`${REACT_APP_SUPERSTARZ_URL}/billboard_upload_data`, {\n      values: datak\n    }).then(response => {\n      if (response.data.message === \"billboard image uploaded\") {\n        const data = {\n          billboard1: datak.imagedata,\n          billboard2: datak.imagedata\n        };\n        setTimeout(() => {\n          dispatch(UserInfoUpdateBILLBOARD(data, datak.type));\n          uploadClose(3);\n          setsuperLoadFadex(false);\n        }, 1500);\n\n        ///window.location.reload(true);\n      }\n    }).catch(function (error) {\n      setsuperLoadFadex(false);\n      alert(\" error\");\n    });\n  };\n  const UpdateProfileDatabaseStatus200 = (datak, b, color) => {\n    Axios.put(`${REACT_APP_SUPERSTARZ_URL}/profile_upload_data`, {\n      values: datak\n    }).then(response => {\n      if (response.data.message === \"profile image data updated\") {\n        var colorboy = {\n          color1: color.darkVibrant,\n          color2: color.darkVibrant,\n          colortype: 0\n        };\n        dispatch(UpdateColorAction(colorboy, 1));\n        const data = {\n          image: datak.imagedata\n        };\n        setTimeout(() => {\n          dispatch(UserInfoUpdatePROFILE(data));\n          uploadClose(4);\n          setsuperLoadFadex(false);\n        }, 1500);\n      }\n    }).catch(function (error) {\n      setsuperLoadFadex(false);\n      alert(\" error\");\n    });\n  };\n  const postProfiledata = useCallback((hdBlob, thumbBlob, hdBase64, gg) => {\n    setsuperLoadFadex(true);\n    GetSecureURL(hdBlob, thumbBlob, hdBase64, false, gg);\n  }, [idReducer, s3finaldata]);\n  const drawcropper = (upl, gg) => {\n    if (CropImageHolder && cropCanvasRefx.current) {\n      const ctx = cropCanvasRefx.current.getContext(\"2d\");\n      var nn = myCropHeight * quality;\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / nn;\n      var NewBoxRatioWidth_WIDEIMAGE = OriginalImageWidth / RatiofromOriginalandfixedHeight;\n      if (SourceWidthForCropX === NewBoxRatioWidth_WIDEIMAGE) {} else {\n        setSourceWidthForCropX(NewBoxRatioWidth_WIDEIMAGE);\n      }\n      var bb = myCropWidth * quality;\n      var RatiofromOriginalandfixedHeightx = OriginalImageWidth / bb;\n      var NewBoxRatioWidth_LONGIMAGE = OriginalImageHeight / RatiofromOriginalandfixedHeightx;\n      if (SourceWidthForCropY === NewBoxRatioWidth_LONGIMAGE) {} else {\n        setSourceWidthForCropY(NewBoxRatioWidth_LONGIMAGE);\n      }\n      var ratioh = OriginalImageWidth * 3 / OriginalImageWidth;\n      var ratiow = OriginalImageHeight * 3 / OriginalImageHeight;\n      if (BoxCropActivated) {\n        cropCanvasRefx.current.width = myCropWidth * quality;\n        cropCanvasRefx.current.height = myCropHeight * quality;\n      } else {\n        cropCanvasRefx.current.width = OriginalImageWidth;\n        cropCanvasRefx.current.height = OriginalImageHeight;\n      }\n      var centerpreview = cropCanvasRefx.current.width / 1.5 - NewBoxRatioWidth_LONGIMAGE / 1.5;\n      var xtraZoom = myCropHeight / NewBoxRatioWidth_WIDEIMAGE;\n      var centerCropCanvas = cropCanvasRefx.current.width / 2 - NewBoxRatioWidth_WIDEIMAGE / 2;\n\n      //////////////////////////CSS CALCULATION MOBILE PC\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / getCropHeightRealImageRatio;\n      var newcropCSSWidth = OriginalImageWidth / RatiofromOriginalandfixedHeight;\n      ///\n      var RatiofromOriginalandfixedWidth = OriginalImageWidth / getCropWidthMobile;\n      var newcropCSSHeight = OriginalImageHeight / RatiofromOriginalandfixedWidth;\n      //////////////////////////CSS CALCULATION MOBILE PC\n\n      if (BoxCropActivated) {\n        var xx = myCropWidth * zoom;\n        var RatiofromOriginalandfixedHeightx = OriginalImageWidth / xx;\n        var NewBoxRatioWidth_LONGIMAGEx = OriginalImageHeight / RatiofromOriginalandfixedHeightx;\n        var xxx = NewBoxRatioWidth_LONGIMAGE * zoom;\n        var RatiofromOriginalandfixedWidthx = OriginalImageHeight / xxx;\n        var NewBoxRatioWidth_WIDEIMAGEx = OriginalImageWidth / RatiofromOriginalandfixedWidthx;\n        var xx2 = NewBoxRatioWidth_WIDEIMAGE * zoom;\n        var RatiofromOriginalandfixedHeightx2 = OriginalImageWidth / xx2;\n        var NewBoxRatioWidth_LONGIMAGEx2 = OriginalImageHeight / RatiofromOriginalandfixedHeightx2;\n        var xxx2 = myCropHeight * zoom;\n        var RatiofromOriginalandfixedWidthx2 = OriginalImageHeight / xxx2;\n        var NewBoxRatioWidth_WIDEIMAGEx2 = OriginalImageWidth / RatiofromOriginalandfixedWidthx2;\n        if (OriginalImageWidth > OriginalImageHeight) {\n          if (OriginalImageHeight === OriginalImageWidth) {\n            requestAnimationFrame(async () => {\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, 0, crop.x);\n              try {\n                if (upl === 1) {\n                  var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\n                  var datathumb = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 0.05);\n                  const res = await fetch(data);\n                  const datax = await res.blob();\n                  const resdatathumb = await fetch(datathumb);\n                  const datathumbx = await resdatathumb.blob();\n                  if (typex === \"Profile\") {\n                    var base64String = await blobToBase64(datax);\n                    postProfiledata(datax, datathumbx, base64String, gg);\n                  } else {\n                    var base64String = await blobToBase64(datax);\n                    postbillboardData(datax, datathumbx, base64String);\n                  }\n                }\n              } catch {\n                console.log(\"upload profile pic\");\n              }\n            });\n          } else {\n            requestAnimationFrame(async () => {\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, crop.x, crop.y);\n              try {\n                if (upl === 1) {\n                  var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\n                  var datathumb = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 0.05);\n                  const res = await fetch(data);\n                  const datax = await res.blob();\n                  const resdatathumb = await fetch(datathumb);\n                  const datathumbx = await resdatathumb.blob();\n                  if (typex === \"Profile\") {\n                    var base64String = await blobToBase64(datax);\n                    postProfiledata(datax, datathumbx, base64String, gg);\n                  } else {\n                    var base64String = await blobToBase64(datax);\n                    postbillboardData(datax, datathumbx, base64String);\n                  }\n                }\n              } catch {\n                console.log(\"upload profile pic\");\n              }\n            });\n          }\n        } else {\n          if (OriginalImageHeight === OriginalImageWidth) {\n            requestAnimationFrame(async () => {\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, 0, crop.x);\n              try {\n                if (upl === 1) {\n                  var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\n                  var datathumb = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 0.05);\n                  const res = await fetch(data);\n                  const datax = await res.blob();\n                  const resdatathumb = await fetch(datathumb);\n                  const datathumbx = await resdatathumb.blob();\n                  if (typex === \"Profile\") {\n                    var base64String = await blobToBase64(datax);\n                    postProfiledata(datax, datathumbx, base64String, gg);\n                  } else {\n                    var base64String = await blobToBase64(datax);\n                    postbillboardData(datax, datathumbx, base64String);\n                  }\n                }\n              } catch {\n                console.log(\"upload profile pic\");\n              }\n            });\n          } else {\n            requestAnimationFrame(async () => {\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, crop.y, crop.x);\n              try {\n                if (upl === 1) {\n                  var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\n                  var datathumb = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 0.05);\n                  const res = await fetch(data);\n                  const datax = await res.blob();\n                  const resdatathumb = await fetch(datathumb);\n                  const datathumbx = await resdatathumb.blob();\n                  if (typex === \"Profile\") {\n                    var base64String = await blobToBase64(datax);\n                    postProfiledata(datax, datathumbx, base64String, gg);\n                  } else {\n                    var base64String = await blobToBase64(datax);\n                    postbillboardData(datax, datathumbx, base64String);\n                  }\n                }\n              } catch {\n                console.log(\"upload profile pic\");\n              }\n            });\n          }\n        }\n      } else {\n        requestAnimationFrame(async () => {\n          draw(ctx, 0, 3, 0, crop.x);\n          try {\n            if (upl === 1) {\n              var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\n              var datathumb = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 0.05);\n              const res = await fetch(data);\n              const datax = await res.blob();\n              const resdatathumb = await fetch(datathumb);\n              const datathumbx = await resdatathumb.blob();\n              if (typex === \"Profile\") {\n                var base64String = await blobToBase64(datax);\n                postProfiledata(datax, datathumbx, base64String, gg);\n              } else {\n                var base64String = await blobToBase64(datax);\n                postbillboardData(datax, datathumbx, base64String);\n              }\n            }\n          } catch {\n            console.log(\"upload profile pic\");\n          }\n        });\n      }\n    }\n  };\n  useLayoutEffect(() => {\n    drawcropper(0, data);\n  }, [CropImageHolder, BoxCropActivated, OriginalImageWidth, OriginalImageHeight, widelongboxmobileimage, myCropHeight, crop, zoom, data]);\n  const done = () => {\n    drawcropper(1, data);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showModalUploadProfile ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: darkmodeReducer ? \"dialog-container\" : \"dialog-container\",\n      style: {\n        padding: \"0px\",\n        height: \"100vh\",\n        position: \"fixed\",\n        zIndex: 100,\n        cursor: \"default\",\n        overflow: \"hidden\"\n      },\n      children: [superLoadFadex ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          style: {\n            backgroundColor: darkmodeReducer ? \"rgba(50,50,50,0.65)\" : \"rgba(250,250,250,0.65)\",\n            position: \"fixed\",\n            top: \"0px\",\n            width: \"100%\",\n            height: \"100%\",\n            zIndex: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 15\n        }, this), \" \"]\n      }, void 0, true) : null, /*#__PURE__*/_jsxDEV(animated.div, {\n        ref: cropscrollRef,\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(DialogContent, {\n          ref: cropTOPLEVELScrollRef,\n          className: matchMobile || matchTablet ? darkmodeReducer ? \" dontallowhighlighting modal-containerDarkmob\" : \" dontallowhighlighting  modal-containerLightmob \" : darkmodeReducer ? \" dontallowhighlighting modal-containerDark  postscroll-dark \" : \" dontallowhighlighting  modal-containerLight  postscroll-light \",\n          style: {\n            padding: \"0px\",\n            height: \"100vh\",\n            overflow: \"hidden\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            style: {\n              padding: \"0px\",\n              bottom: typex === \"Profile\" ? \"13.6vh\" : WideImageCheck ? \"33vh\" : \"43vh\",\n              margin: \"auto\",\n              width: `100%`,\n              height: \"0px\",\n              position: \"absolute\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              alignContent: \"center\",\n              zIndex: 5,\n              alignSelf: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              style: {\n                padding: \"0px\",\n                height: \"0px\",\n                margin: \"auto\",\n                display: \"grid\",\n                alignItems: \"center\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 959,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              style: {\n                padding: \"0px\",\n                height: \"0px\",\n                margin: \"auto\",\n                display: \"grid\",\n                alignItems: \"center\"\n              },\n              children: optionscropshow ? /*#__PURE__*/_jsxDEV(CheckIcon, {\n                onClick: done,\n                className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \",\n                style: {\n                  margin: \"auto\",\n                  fontSize: matchTabletMobile ? \"4.8vh\" : \"2.9vw\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 983,\n                columnNumber: 21\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 971,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              style: {\n                padding: \"0px\",\n                height: \"0px\",\n                margin: \"auto\",\n                display: \"grid\",\n                alignItems: \"center\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            style: {\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: cropCanvasRefx,\n              style: {\n                padding: \"0px\",\n                margin: \"auto\",\n                zIndex: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1012,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1011,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 890,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        height: \"100%\",\n        position: \"fixed\",\n        top: \"-800vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getpreviewFixedWidthRef,\n          xs: 5,\n          style: {\n            padding: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getFixedCropWidthRef,\n          xs: 4,\n          style: {\n            padding: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropHeightRef,\n          xs: 12,\n          style: {\n            height: \"92%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1056,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropWidthMobileRef,\n          xs: 12,\n          style: {\n            padding: \"0px\",\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropWidthMobileReflong,\n          xs: 12,\n          style: {\n            padding: \"0px\",\n            width: \"150%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1070,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropWidthMobileRefHD,\n          style: {\n            padding: \"0px\",\n            width: \"150%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropHeightRefsingle,\n          xs: 12,\n          style: {\n            height: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1083,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1031,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1027,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UploadProfilePicx, \"2bValO5KtpHKdQe1TfESGF/pglM=\", false, function () {\n  return [useDispatch, usePalette, useSpring, useSelector, useSelector];\n});\n_c = UploadProfilePicx;\nexport const UploadProfilePic = /*#__PURE__*/React.memo(UploadProfilePicx);\n_c2 = UploadProfilePic;\nvar _c, _c2;\n$RefreshReg$(_c, \"UploadProfilePicx\");\n$RefreshReg$(_c2, \"UploadProfilePic\");","map":{"version":3,"names":["React","useRef","useEffect","useCallback","useState","useLayoutEffect","Grid","DialogContent","matchTablet","matchMobile","useSpring","animated","useSelector","useDispatch","Axios","CheckIcon","UserInfoUpdatePROFILE","UserInfoUpdateBILLBOARD","usePalette","UpdateColorAction","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadProfilePicx","showModalUploadProfile","cropimageProfile","profileimageSource","typex","uploadClose","billdefaultbill","sliderIndex","_s","cropCanvasRefx","dispatch","CropImageHolder","setCropImageHolder","hdcanvasvalue","getpreviewFixedWidthRef","getCropHeightRef","getCropWidthMobileRef","getCropWidthMobileReflong","getCropWidthMobileRefHD","getCropHeightRefsingle","getFixedCropWidthRef","myCropWidth","setmyCropWidth","myCropHeight","setmyCropHeight","matchTabletMobile","setmatchTabletMobile","getpreviewFixedWidth","setgetpreviewFixedWidth","screenH","setscreenH","data","loading","error","waitONLOAD","setwaitONLOAD","getCropHeightRealImageRatio","setgetCropHeightRealImageRatio","getCropWidthMobile","setgetCropWidthMobile","getCropWidthMobileHD","setgetCropWidthMobileHD","widelongboxmobileimage","setwidelongboxmobileimage","widelongboxmobileimagex","setwidelongboxmobileimagex","OriginalImageWidth","setOriginalImageWidth","OriginalImageHeight","setOriginalImageHeight","cropwidth","setcropwidth","cropheight","setcropheight","WideImageCheck","setWideImageCheck","SourceWidthForCropX","setSourceWidthForCropX","SourceWidthForCropY","setSourceWidthForCropY","BoxCropActivated","setBoxCropActivated","zoom","setzoom","crop","setcrop","x","y","optionscropshow","setoptionscropshow","superLoadFadex","setsuperLoadFadex","s3finaldata","sets3finaldata","s3finaldatax","quality","setquality","callQuality","animation","config","duration","opacity","transform","padding","darkmode","state","GlobalReducer","darkmodeReducer","REACT_APP_SUPERSTARZ_URL","process","env","cropscrollRef","cropTOPLEVELScrollRef","current","clientWidth","clientHeight","length","draw","ctx","dimensions","type","axis","allowZoomedAxis","allowZoomedaxis","aa","drawImage","Newcropimage","Image","src","onload","data1","data2","RatioNewcropimageNaturalHeight","naturalHeight","NewcropimageWidth","naturalWidth","RatioNewcropimageNaturalWidth","NewcropimageHeight","RatioNewcropimageNaturalWidthxx","NewcropimageHeightxx","id","username","billboard1","billboardstate","billboardthumb1","billboard2","billboardthumb2","image","imageThumb","UserdataReducer","idReducer","usernameReducer","billboard1Reducer","billboardstateReducer","blobToBase64","blob","Promise","resolve","_","reader","FileReader","onloadend","result","readAsDataURL","postbillboardData","hdBlob","thumbBlob","hdBase64","gg","GetSecureURL","billboard","color","post","then","response","url","PutImageInS3WithURL","urlHD","catch","alert","ur","urlx","a","b","allow","put","console","log","status","imagelinkhh","split","imagelink","pop","bi","zzaatak","imagedata","imagedataThumb","UpdateBillboardDatabaseStatus200","datak","imagedataOld","imagedataThumbOld","imagedataOld2","imagedataThumbOld2","darkVibrant","color2","UpdateProfileDatabaseStatus200","imagelinkx","urlThumb","values","message","setTimeout","colorboy","color1","colortype","postProfiledata","drawcropper","upl","getContext","nn","RatiofromOriginalandfixedHeight","NewBoxRatioWidth_WIDEIMAGE","bb","RatiofromOriginalandfixedHeightx","NewBoxRatioWidth_LONGIMAGE","ratioh","ratiow","width","height","centerpreview","xtraZoom","centerCropCanvas","newcropCSSWidth","RatiofromOriginalandfixedWidth","newcropCSSHeight","xx","NewBoxRatioWidth_LONGIMAGEx","xxx","RatiofromOriginalandfixedWidthx","NewBoxRatioWidth_WIDEIMAGEx","xx2","RatiofromOriginalandfixedHeightx2","NewBoxRatioWidth_LONGIMAGEx2","xxx2","RatiofromOriginalandfixedWidthx2","NewBoxRatioWidth_WIDEIMAGEx2","requestAnimationFrame","toDataURL","datathumb","res","fetch","datax","resdatathumb","datathumbx","base64String","done","children","className","style","position","zIndex","cursor","overflow","container","backgroundColor","top","fileName","_jsxFileName","lineNumber","columnNumber","div","ref","bottom","margin","display","justifyContent","alignItems","alignContent","alignSelf","item","xs","onClick","fontSize","_c","UploadProfilePic","memo","_c2","$RefreshReg$"],"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/clikbate/src/upload/UploadProfilePic.tsx"],"sourcesContent":["import React, {\r\n  useRef,\r\n  useEffect,\r\n  useCallback,\r\n  useState,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport ControlPointDuplicateIcon from \"@mui/icons-material/ControlPointDuplicate\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport Axios from \"axios\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport date from \"date-and-time\";\r\nimport { UserInfoUpdatePROFILE } from \"../log/actions/UserdataAction\";\r\nimport { UserInfoUpdateBILLBOARD } from \"../log/actions/UserdataAction\";\r\nimport { usePalette } from \"react-palette\";\r\nimport { UpdateColorAction } from \"../GlobalActions\";\r\n\r\nfunction UploadProfilePicx({\r\n  showModalUploadProfile,\r\n  cropimageProfile,\r\n  profileimageSource,\r\n  typex,\r\n  uploadClose,\r\n  billdefaultbill,\r\n  sliderIndex\r\n}: any): JSX.Element {\r\n  const cropCanvasRefx: any = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [CropImageHolder, setCropImageHolder] = useState<any>(null);\r\n\r\n  const hdcanvasvalue = 1;\r\n\r\n  const getpreviewFixedWidthRef = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropHeightRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropWidthMobileRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropWidthMobileReflong: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropWidthMobileRefHD: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropHeightRefsingle: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getFixedCropWidthRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const [myCropWidth, setmyCropWidth] = useState(0);\r\n\r\n  const [myCropHeight, setmyCropHeight] = useState(0);\r\n\r\n  const [matchTabletMobile, setmatchTabletMobile] = useState<boolean>(false);\r\n\r\n  const [getpreviewFixedWidth, setgetpreviewFixedWidth] = useState(0);\r\n\r\n  const [screenH, setscreenH] = useState(0);\r\n\r\n  const { data, loading, error } = usePalette(cropimageProfile);\r\n\r\n  const [waitONLOAD, setwaitONLOAD] = useState<boolean>(true);\r\n\r\n  const [getCropHeightRealImageRatio, setgetCropHeightRealImageRatio] =\r\n    useState(0);\r\n\r\n  const [getCropWidthMobile, setgetCropWidthMobile] = useState(0);\r\n\r\n  const [getCropWidthMobileHD, setgetCropWidthMobileHD] = useState(0);\r\n\r\n  const [widelongboxmobileimage, setwidelongboxmobileimage] =\r\n    useState<boolean>(false);\r\n\r\n  const [widelongboxmobileimagex, setwidelongboxmobileimagex] =\r\n    useState<boolean>(false);\r\n\r\n  const [OriginalImageWidth, setOriginalImageWidth] = useState<number>(0);\r\n  const [OriginalImageHeight, setOriginalImageHeight] = useState<number>(0);\r\n\r\n  const [cropwidth, setcropwidth] = useState(0);\r\n\r\n  const [cropheight, setcropheight] = useState(0);\r\n\r\n  const [WideImageCheck, setWideImageCheck] = useState<boolean>(false);\r\n\r\n  const [SourceWidthForCropX, setSourceWidthForCropX] = useState(0);\r\n\r\n  const [SourceWidthForCropY, setSourceWidthForCropY] = useState(0);\r\n\r\n  const [BoxCropActivated, setBoxCropActivated] = useState<boolean>(true);\r\n\r\n  const [zoom, setzoom] = useState<any>(1);\r\n\r\n  const [crop, setcrop] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [optionscropshow, setoptionscropshow] = useState<boolean>(true);\r\n\r\n  const [superLoadFadex, setsuperLoadFadex] = useState<boolean>(false);\r\n\r\n  const [s3finaldata, sets3finaldata] = useState<any>([0, 0]);\r\n\r\n  var s3finaldatax = [...s3finaldata];\r\n\r\n  const [quality, setquality] = useState(1);\r\n\r\n  const callQuality = () => {\r\n    if (typex === \"Profile\") {\r\n      setquality(1.1);\r\n    } else {\r\n      setquality(1.5);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callQuality();\r\n  }, [typex]);\r\n\r\n  //\r\n  //\r\n  //\r\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 600,\r\n    },\r\n    opacity: showModalUploadProfile ? 1 : 0,\r\n    transform: showModalUploadProfile ? `translateY(0%)` : `translateY(-100%)`,\r\n    padding: \"0px\",\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n  const cropscrollRef = useRef<any>(null);\r\n  const cropTOPLEVELScrollRef: any = useRef(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///GET DIMENSIONS AND  SCREEN HEIGHT\r\n  useLayoutEffect(() => {\r\n    if (matchTablet || matchMobile) {\r\n      setmatchTabletMobile(true);\r\n    }\r\n    if (\r\n      getpreviewFixedWidthRef.current &&\r\n      getpreviewFixedWidthRef.current.clientWidth\r\n    ) {\r\n      setgetpreviewFixedWidth(getpreviewFixedWidthRef.current.clientWidth);\r\n    }\r\n\r\n    if (\r\n      getCropHeightRefsingle.current &&\r\n      getCropHeightRefsingle.current.clientHeight\r\n    ) {\r\n      setscreenH(getCropHeightRefsingle.current.clientHeight);\r\n    }\r\n\r\n    if (profileimageSource.length === 1) {\r\n      setwaitONLOAD(false);\r\n      if (\r\n        (getCropHeightRefsingle.current &&\r\n          getCropHeightRefsingle.current.clientHeight) ||\r\n        getCropHeightRef.current\r\n      ) {\r\n        if (matchTabletMobile) {\r\n          setmyCropHeight(\r\n            getCropWidthMobileRef.current.clientWidth * hdcanvasvalue\r\n          );\r\n          setmyCropWidth(\r\n            getCropWidthMobileRef.current.clientWidth * hdcanvasvalue\r\n          );\r\n        } else {\r\n          if (typex === \"Profile\") {\r\n            setmyCropWidth(\r\n              getCropHeightRefsingle.current.clientHeight * hdcanvasvalue\r\n            );\r\n\r\n            setmyCropHeight(\r\n              getCropHeightRefsingle.current.clientHeight * hdcanvasvalue\r\n            );\r\n          } else {\r\n            if (WideImageCheck) {\r\n              setmyCropWidth(\r\n                getCropHeightRefsingle.current.clientHeight * hdcanvasvalue +\r\n                getCropHeightRefsingle.current.clientHeight * 0\r\n              );\r\n\r\n              setmyCropHeight(\r\n                getCropHeightRefsingle.current.clientHeight * hdcanvasvalue -\r\n                getCropHeightRefsingle.current.clientHeight * 0.22\r\n              );\r\n            } else {\r\n              setmyCropWidth(\r\n                getCropHeightRefsingle.current.clientHeight * hdcanvasvalue +\r\n                getCropHeightRefsingle.current.clientHeight * 0.2\r\n              );\r\n\r\n              setmyCropHeight(\r\n                getCropHeightRefsingle.current.clientHeight * hdcanvasvalue -\r\n                getCropHeightRefsingle.current.clientHeight * 0.32\r\n              );\r\n            }\r\n          }\r\n        }\r\n\r\n        setgetCropHeightRealImageRatio(\r\n          getCropHeightRefsingle.current.clientHeight * hdcanvasvalue\r\n        );\r\n      }\r\n    } else {\r\n      if (getCropHeightRef.current && getCropHeightRef.current.clientHeight) {\r\n        if (matchTabletMobile) {\r\n          setmyCropHeight(\r\n            getCropWidthMobileRef.current.clientWidth * hdcanvasvalue\r\n          );\r\n          setmyCropWidth(\r\n            getCropWidthMobileRef.current.clientWidth * hdcanvasvalue\r\n          );\r\n        } else {\r\n          setmyCropHeight(\r\n            getCropHeightRef.current.clientHeight * hdcanvasvalue\r\n          );\r\n          setmyCropWidth(getCropHeightRef.current.clientHeight * hdcanvasvalue);\r\n        }\r\n\r\n        setgetCropHeightRealImageRatio(getCropHeightRef.current.clientHeight);\r\n      }\r\n    }\r\n\r\n    if (\r\n      getCropWidthMobileRef.current &&\r\n      getCropWidthMobileRef.current.clientWidth\r\n    ) {\r\n      setgetCropWidthMobile(getCropWidthMobileRef.current.clientWidth);\r\n    }\r\n\r\n    if (\r\n      getCropWidthMobileRefHD.current &&\r\n      getCropWidthMobileRefHD.current.clientWidth\r\n    ) {\r\n      setgetCropWidthMobileHD(getCropWidthMobileRefHD.current.clientWidth);\r\n    }\r\n  }, [profileimageSource, typex, WideImageCheck]);\r\n\r\n  const draw = useCallback(\r\n    (\r\n      ctx: any,\r\n      dimensions: any,\r\n      type: number,\r\n      axis: number,\r\n      allowZoomedAxis: number\r\n    ) => {\r\n      var allowZoomedaxis, aa;\r\n\r\n      if (typex === \"Profile\") {\r\n        aa = -(dimensions * zoom) / 4;\r\n      } else {\r\n        aa = axis;\r\n      }\r\n\r\n      if (zoom === 1) {\r\n        allowZoomedaxis = 0;\r\n      } else {\r\n        allowZoomedaxis = allowZoomedAxis;\r\n      }\r\n      if (type === 1) {\r\n        ctx.drawImage(\r\n          CropImageHolder,\r\n          aa,\r\n          allowZoomedaxis,\r\n          dimensions * zoom,\r\n          myCropHeight * quality * zoom\r\n        );\r\n      } else if (type === 2) {\r\n        ctx.drawImage(\r\n          CropImageHolder,\r\n          allowZoomedaxis,\r\n          axis,\r\n          myCropWidth * quality * zoom,\r\n          dimensions * zoom\r\n        );\r\n      } else {\r\n        ctx.drawImage(\r\n          CropImageHolder,\r\n          0,\r\n          0,\r\n          OriginalImageWidth,\r\n          OriginalImageHeight\r\n        );\r\n      }\r\n    },\r\n    [\r\n      OriginalImageWidth,\r\n      OriginalImageHeight,\r\n      CropImageHolder,\r\n      myCropHeight,\r\n      myCropWidth,\r\n      zoom,\r\n      typex,\r\n    ]\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    const Newcropimage: any = new Image();\r\n\r\n    Newcropimage.src = cropimageProfile;\r\n    Newcropimage.onload = function () {\r\n      if (CropImageHolder === Newcropimage) {\r\n      } else {\r\n        setCropImageHolder(Newcropimage);\r\n      }\r\n\r\n      var data1: number = 0;\r\n      var data2: number = 0;\r\n\r\n      var RatioNewcropimageNaturalHeight =\r\n        Newcropimage.naturalHeight / myCropHeight;\r\n      var NewcropimageWidth =\r\n        Newcropimage.naturalWidth / RatioNewcropimageNaturalHeight;\r\n\r\n      var RatioNewcropimageNaturalWidth =\r\n        Newcropimage.naturalWidth / getCropWidthMobileHD;\r\n      var NewcropimageHeight =\r\n        Newcropimage.naturalHeight / RatioNewcropimageNaturalWidth;\r\n\r\n      var RatioNewcropimageNaturalWidthxx =\r\n        Newcropimage.naturalWidth / getCropWidthMobile;\r\n      var NewcropimageHeightxx =\r\n        Newcropimage.naturalHeight / RatioNewcropimageNaturalWidthxx;\r\n\r\n      ////// CANVAS  CROPPER DIMENSIONS  PC MOBILE(canvaswidth)\r\n\r\n      if (matchTabletMobile && NewcropimageHeightxx < screenH) {\r\n        setwidelongboxmobileimage(true);\r\n        setwidelongboxmobileimagex(true);\r\n\r\n        if (OriginalImageHeight === NewcropimageHeight) {\r\n        } else {\r\n          setOriginalImageHeight(NewcropimageHeight);\r\n          data2 = NewcropimageHeight;\r\n        }\r\n        //\r\n        if (OriginalImageWidth === getCropWidthMobileHD) {\r\n        } else {\r\n          setOriginalImageWidth(getCropWidthMobileHD);\r\n          data1 = getCropWidthMobileHD;\r\n        }\r\n      } else {\r\n        setwidelongboxmobileimage(false);\r\n        setwidelongboxmobileimagex(false);\r\n        if (OriginalImageWidth === NewcropimageWidth) {\r\n        } else {\r\n          setOriginalImageWidth(NewcropimageWidth);\r\n          data1 = NewcropimageWidth;\r\n        }\r\n        ///\r\n        if (OriginalImageHeight === myCropHeight) {\r\n        } else {\r\n          setOriginalImageHeight(myCropHeight);\r\n          data2 = myCropHeight;\r\n        }\r\n      }\r\n      ////// CANVAS  CROPPER DIMENSIONS  PC MOBILE(canvaswidth)\r\n\r\n      if (Newcropimage.naturalWidth > Newcropimage.naturalHeight) {\r\n        setWideImageCheck(true);\r\n      } else {\r\n        setWideImageCheck(false);\r\n      }\r\n\r\n      if (cropwidth === data1) {\r\n      } else {\r\n        setcropwidth(data1);\r\n      }\r\n\r\n      if (cropheight === data2) {\r\n      } else {\r\n        setcropheight(data2);\r\n      }\r\n    };\r\n  }, [cropimageProfile, showModalUploadProfile]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootUserdataReducer {\r\n    UserdataReducer: {\r\n      id: number;\r\n      username: string;\r\n      billboardstate: number;\r\n      billboard1: string;\r\n      billboardthumb1: string;\r\n      billboard2: string;\r\n      billboardthumb2: string;\r\n      image: string;\r\n      imageThumb: string;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const { id, username, billboard1, billboardstate, billboardthumb1, billboard2, billboardthumb2, image, imageThumb } = useSelector(\r\n    (state: RootUserdataReducer) => ({\r\n      ...state.UserdataReducer,\r\n    })\r\n  );\r\n\r\n  const idReducer = id;\r\n  const usernameReducer = username;\r\n  const billboard1Reducer = billboard1;\r\n  const billboardstateReducer = billboardstate;\r\n\r\n  function blobToBase64(blob: any) {\r\n    return new Promise((resolve, _) => {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => resolve(reader.result);\r\n      reader.readAsDataURL(blob);\r\n    });\r\n  }\r\n\r\n  const postbillboardData = useCallback(\r\n    (hdBlob: any, thumbBlob: any, hdBase64: any) => {\r\n      var gg = \"\";\r\n      GetSecureURL(hdBlob, thumbBlob, hdBase64, true, gg);\r\n    },\r\n    [idReducer, blobToBase64]\r\n  );\r\n\r\n  const GetSecureURL = (\r\n    hdBlob: any,\r\n    thumbBlob: any,\r\n    hdBase64: any,\r\n    billboard: boolean,\r\n    color: any\r\n  ) => {\r\n    Axios.post(`${REACT_APP_SUPERSTARZ_URL}/get_signed_url_4upload`)\r\n      .then((response) => {\r\n        setsuperLoadFadex(false);\r\n        var url = response.data.url;\r\n        setsuperLoadFadex(true);\r\n        PutImageInS3WithURL(\r\n          thumbBlob,\r\n          url,\r\n          url.urlHD,\r\n          hdBlob,\r\n          hdBase64,\r\n          false,\r\n          billboard,\r\n          color\r\n        );\r\n      })\r\n      .catch(function (error) {\r\n        setsuperLoadFadex(false);\r\n        alert(\"caption erroerrr\");\r\n      });\r\n  };\r\n\r\n  const PutImageInS3WithURL = useCallback(\r\n    (\r\n      thumbBlob: any,\r\n      ur: any,\r\n      urlx: any,\r\n      a: any,\r\n      b: any,\r\n      allow: boolean,\r\n      billboard: boolean,\r\n      color: any\r\n    ) => {\r\n      Axios.put(urlx, a)\r\n        .then((response) => {\r\n          //// setsuperLoadFadex(false);\r\n          console.log(response);\r\n          if (response.status === 200) {\r\n            setsuperLoadFadex(true);\r\n\r\n\r\n            if (allow) {\r\n              let imagelinkhh = urlx.split(\"?\")[0];\r\n              let imagelink = imagelinkhh.split(\"/\").pop();\r\n\r\n\r\n\r\n              var bi = 0;\r\n\r\n              if (sliderIndex === 0) {\r\n\r\n                bi = 1;\r\n              } else {\r\n\r\n                bi = 0;\r\n              }\r\n\r\n              if (billboard) {\r\n\r\n                var zzaatak = {\r\n                  imagedata: s3finaldatax[0],\r\n                  imagedataThumb: imagelink,\r\n                  id: idReducer,\r\n                  type: bi,\r\n                };\r\n\r\n                UpdateBillboardDatabaseStatus200(zzaatak, b);\r\n              } else {\r\n                var datak = {\r\n                  imagedata: s3finaldatax[0],\r\n                  imagedataThumb: imagelink,\r\n                  imagedataOld: billboard1,\r\n                  imagedataThumbOld: billboardthumb1,\r\n                  imagedataOld2: billboard1,\r\n                  imagedataThumbOld2: billboardthumb1,\r\n                  id: idReducer,\r\n                  color: color.darkVibrant,\r\n                  color2: color.darkVibrant,\r\n                };\r\n\r\n                UpdateProfileDatabaseStatus200(datak, b, color);\r\n              }\r\n            } else {\r\n              let imagelinkx = urlx.split(\"?\")[0];\r\n\r\n              s3finaldatax[0] = imagelinkx.split(\"/\").pop();\r\n\r\n\r\n              PutImageInS3WithURL(\r\n                thumbBlob,\r\n                ur,\r\n                ur.urlThumb,\r\n                thumbBlob,\r\n                b,\r\n                true,\r\n                billboard,\r\n                color\r\n              );\r\n            }\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          setsuperLoadFadex(false);\r\n          alert(\"caption erroerrr\");\r\n        });\r\n    },\r\n    [idReducer, s3finaldatax, billboard1Reducer, billboardstateReducer, sliderIndex]\r\n  );\r\n\r\n  const UpdateBillboardDatabaseStatus200 = (datak: any, b: any) => {\r\n    Axios.put(`${REACT_APP_SUPERSTARZ_URL}/billboard_upload_data`, {\r\n      values: datak,\r\n    })\r\n      .then((response) => {\r\n\r\n        if (response.data.message === \"billboard image uploaded\") {\r\n\r\n\r\n          const data = {\r\n            billboard1: datak.imagedata,\r\n            billboard2: datak.imagedata,\r\n          };\r\n\r\n\r\n\r\n          setTimeout(() => {\r\n\r\n            dispatch(UserInfoUpdateBILLBOARD(data, datak.type));\r\n            uploadClose(3);\r\n            setsuperLoadFadex(false);\r\n          }, 1500)\r\n\r\n\r\n\r\n          ///window.location.reload(true);\r\n\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        setsuperLoadFadex(false);\r\n        alert(\" error\");\r\n      });\r\n  };\r\n\r\n  const UpdateProfileDatabaseStatus200 = (datak: any, b: any, color: any) => {\r\n    Axios.put(`${REACT_APP_SUPERSTARZ_URL}/profile_upload_data`, {\r\n      values: datak,\r\n    })\r\n      .then((response) => {\r\n\r\n        if (response.data.message === \"profile image data updated\") {\r\n          var colorboy = {\r\n            color1: color.darkVibrant,\r\n            color2: color.darkVibrant,\r\n            colortype: 0,\r\n          };\r\n          dispatch(UpdateColorAction(colorboy, 1));\r\n          const data = {\r\n            image: datak.imagedata,\r\n          };\r\n\r\n          setTimeout(() => {\r\n\r\n            dispatch(UserInfoUpdatePROFILE(data));\r\n            uploadClose(4);\r\n            setsuperLoadFadex(false);\r\n          }, 1500)\r\n\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        setsuperLoadFadex(false);\r\n        alert(\" error\");\r\n      });\r\n  };\r\n\r\n  const postProfiledata = useCallback(\r\n    (hdBlob: any, thumbBlob: any, hdBase64: any, gg: any) => {\r\n      setsuperLoadFadex(true);\r\n      GetSecureURL(hdBlob, thumbBlob, hdBase64, false, gg);\r\n    },\r\n    [idReducer, s3finaldata]\r\n  );\r\n\r\n  const drawcropper = (upl: number, gg: any) => {\r\n    if (CropImageHolder && cropCanvasRefx.current) {\r\n      const ctx = cropCanvasRefx.current.getContext(\"2d\");\r\n      var nn = myCropHeight * quality;\r\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / nn;\r\n      var NewBoxRatioWidth_WIDEIMAGE =\r\n        OriginalImageWidth / RatiofromOriginalandfixedHeight;\r\n\r\n      if (SourceWidthForCropX === NewBoxRatioWidth_WIDEIMAGE) {\r\n      } else {\r\n        setSourceWidthForCropX(NewBoxRatioWidth_WIDEIMAGE);\r\n      }\r\n      var bb = myCropWidth * quality;\r\n      var RatiofromOriginalandfixedHeightx = OriginalImageWidth / bb;\r\n      var NewBoxRatioWidth_LONGIMAGE =\r\n        OriginalImageHeight / RatiofromOriginalandfixedHeightx;\r\n\r\n      if (SourceWidthForCropY === NewBoxRatioWidth_LONGIMAGE) {\r\n      } else {\r\n        setSourceWidthForCropY(NewBoxRatioWidth_LONGIMAGE);\r\n      }\r\n\r\n      var ratioh = (OriginalImageWidth * 3) / OriginalImageWidth;\r\n      var ratiow = (OriginalImageHeight * 3) / OriginalImageHeight;\r\n\r\n      if (BoxCropActivated) {\r\n        cropCanvasRefx.current.width = myCropWidth * quality;\r\n        cropCanvasRefx.current.height = myCropHeight * quality;\r\n      } else {\r\n        cropCanvasRefx.current.width = OriginalImageWidth;\r\n        cropCanvasRefx.current.height = OriginalImageHeight;\r\n      }\r\n\r\n      var centerpreview =\r\n        cropCanvasRefx.current.width / 1.5 - NewBoxRatioWidth_LONGIMAGE / 1.5;\r\n\r\n      var xtraZoom = myCropHeight / NewBoxRatioWidth_WIDEIMAGE;\r\n\r\n      var centerCropCanvas =\r\n        cropCanvasRefx.current.width / 2 - NewBoxRatioWidth_WIDEIMAGE / 2;\r\n\r\n      //////////////////////////CSS CALCULATION MOBILE PC\r\n      var RatiofromOriginalandfixedHeight =\r\n        OriginalImageHeight / getCropHeightRealImageRatio;\r\n      var newcropCSSWidth =\r\n        OriginalImageWidth / RatiofromOriginalandfixedHeight;\r\n      ///\r\n      var RatiofromOriginalandfixedWidth =\r\n        OriginalImageWidth / getCropWidthMobile;\r\n      var newcropCSSHeight =\r\n        OriginalImageHeight / RatiofromOriginalandfixedWidth;\r\n      //////////////////////////CSS CALCULATION MOBILE PC\r\n\r\n      if (BoxCropActivated) {\r\n        var xx = myCropWidth * zoom;\r\n        var RatiofromOriginalandfixedHeightx = OriginalImageWidth / xx;\r\n        var NewBoxRatioWidth_LONGIMAGEx =\r\n          OriginalImageHeight / RatiofromOriginalandfixedHeightx;\r\n\r\n        var xxx = NewBoxRatioWidth_LONGIMAGE * zoom;\r\n        var RatiofromOriginalandfixedWidthx = OriginalImageHeight / xxx;\r\n        var NewBoxRatioWidth_WIDEIMAGEx =\r\n          OriginalImageWidth / RatiofromOriginalandfixedWidthx;\r\n\r\n        var xx2 = NewBoxRatioWidth_WIDEIMAGE * zoom;\r\n        var RatiofromOriginalandfixedHeightx2 = OriginalImageWidth / xx2;\r\n        var NewBoxRatioWidth_LONGIMAGEx2 =\r\n          OriginalImageHeight / RatiofromOriginalandfixedHeightx2;\r\n\r\n        var xxx2 = myCropHeight * zoom;\r\n        var RatiofromOriginalandfixedWidthx2 = OriginalImageHeight / xxx2;\r\n        var NewBoxRatioWidth_WIDEIMAGEx2 =\r\n          OriginalImageWidth / RatiofromOriginalandfixedWidthx2;\r\n\r\n        if (OriginalImageWidth > OriginalImageHeight) {\r\n          if (OriginalImageHeight === OriginalImageWidth) {\r\n            requestAnimationFrame(async () => {\r\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, 0, crop.x);\r\n              try {\r\n                if (upl === 1) {\r\n                  var data = cropCanvasRefx.current.toDataURL(\r\n                    \"image/jpeg\",\r\n                    1.0\r\n                  );\r\n                  var datathumb = cropCanvasRefx.current.toDataURL(\r\n                    \"image/jpeg\",\r\n                    0.05\r\n                  );\r\n                  const res = await fetch(data);\r\n                  const datax = await res.blob();\r\n                  const resdatathumb = await fetch(datathumb);\r\n                  const datathumbx = await resdatathumb.blob();\r\n                  if (typex === \"Profile\") {\r\n                    var base64String = await blobToBase64(datax);\r\n                    postProfiledata(datax, datathumbx, base64String, gg);\r\n                  } else {\r\n                    var base64String = await blobToBase64(datax);\r\n                    postbillboardData(datax, datathumbx, base64String);\r\n                  }\r\n                }\r\n              } catch {\r\n                console.log(\"upload profile pic\");\r\n              }\r\n            });\r\n          } else {\r\n            requestAnimationFrame(async () => {\r\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, crop.x, crop.y);\r\n              try {\r\n                if (upl === 1) {\r\n                  var data = cropCanvasRefx.current.toDataURL(\r\n                    \"image/jpeg\",\r\n                    1.0\r\n                  );\r\n                  var datathumb = cropCanvasRefx.current.toDataURL(\r\n                    \"image/jpeg\",\r\n                    0.05\r\n                  );\r\n                  const res = await fetch(data);\r\n                  const datax = await res.blob();\r\n                  const resdatathumb = await fetch(datathumb);\r\n                  const datathumbx = await resdatathumb.blob();\r\n                  if (typex === \"Profile\") {\r\n                    var base64String = await blobToBase64(datax);\r\n                    postProfiledata(datax, datathumbx, base64String, gg);\r\n                  } else {\r\n                    var base64String = await blobToBase64(datax);\r\n                    postbillboardData(datax, datathumbx, base64String);\r\n                  }\r\n                }\r\n              } catch {\r\n                console.log(\"upload profile pic\");\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          if (OriginalImageHeight === OriginalImageWidth) {\r\n            requestAnimationFrame(async () => {\r\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, 0, crop.x);\r\n\r\n              try {\r\n                if (upl === 1) {\r\n                  var data = cropCanvasRefx.current.toDataURL(\r\n                    \"image/jpeg\",\r\n                    1.0\r\n                  );\r\n                  var datathumb = cropCanvasRefx.current.toDataURL(\r\n                    \"image/jpeg\",\r\n                    0.05\r\n                  );\r\n                  const res = await fetch(data);\r\n                  const datax = await res.blob();\r\n                  const resdatathumb = await fetch(datathumb);\r\n                  const datathumbx = await resdatathumb.blob();\r\n                  if (typex === \"Profile\") {\r\n                    var base64String = await blobToBase64(datax);\r\n                    postProfiledata(datax, datathumbx, base64String, gg);\r\n                  } else {\r\n                    var base64String = await blobToBase64(datax);\r\n                    postbillboardData(datax, datathumbx, base64String);\r\n                  }\r\n                }\r\n              } catch {\r\n                console.log(\"upload profile pic\");\r\n              }\r\n            });\r\n          } else {\r\n            requestAnimationFrame(async () => {\r\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, crop.y, crop.x);\r\n\r\n              try {\r\n                if (upl === 1) {\r\n                  var data = cropCanvasRefx.current.toDataURL(\r\n                    \"image/jpeg\",\r\n                    1.0\r\n                  );\r\n                  var datathumb = cropCanvasRefx.current.toDataURL(\r\n                    \"image/jpeg\",\r\n                    0.05\r\n                  );\r\n                  const res = await fetch(data);\r\n                  const datax = await res.blob();\r\n                  const resdatathumb = await fetch(datathumb);\r\n                  const datathumbx = await resdatathumb.blob();\r\n                  if (typex === \"Profile\") {\r\n                    var base64String = await blobToBase64(datax);\r\n                    postProfiledata(datax, datathumbx, base64String, gg);\r\n                  } else {\r\n                    var base64String = await blobToBase64(datax);\r\n                    postbillboardData(datax, datathumbx, base64String);\r\n                  }\r\n                }\r\n              } catch {\r\n                console.log(\"upload profile pic\");\r\n              }\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        requestAnimationFrame(async () => {\r\n          draw(ctx, 0, 3, 0, crop.x);\r\n\r\n          try {\r\n            if (upl === 1) {\r\n              var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\r\n              var datathumb = cropCanvasRefx.current.toDataURL(\r\n                \"image/jpeg\",\r\n                0.05\r\n              );\r\n              const res = await fetch(data);\r\n              const datax = await res.blob();\r\n              const resdatathumb = await fetch(datathumb);\r\n              const datathumbx = await resdatathumb.blob();\r\n              if (typex === \"Profile\") {\r\n                var base64String = await blobToBase64(datax);\r\n                postProfiledata(datax, datathumbx, base64String, gg);\r\n              } else {\r\n                var base64String = await blobToBase64(datax);\r\n                postbillboardData(datax, datathumbx, base64String);\r\n              }\r\n            }\r\n          } catch {\r\n            console.log(\"upload profile pic\");\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    drawcropper(0, data);\r\n  }, [\r\n    CropImageHolder,\r\n    BoxCropActivated,\r\n    OriginalImageWidth,\r\n    OriginalImageHeight,\r\n    widelongboxmobileimage,\r\n    myCropHeight,\r\n    crop,\r\n    zoom,\r\n    data,\r\n  ]);\r\n\r\n  const done = () => {\r\n    drawcropper(1, data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModalUploadProfile ? (\r\n        <DialogContent\r\n          className={darkmodeReducer ? \"dialog-container\" : \"dialog-container\"}\r\n          style={{\r\n            padding: \"0px\",\r\n            height: \"100vh\",\r\n            position: \"fixed\",\r\n            zIndex: 100,\r\n            cursor: \"default\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          {superLoadFadex ? (\r\n            <>\r\n              <Grid\r\n                container\r\n                style={{\r\n                  backgroundColor: darkmodeReducer\r\n                    ? \"rgba(50,50,50,0.65)\"\r\n                    : \"rgba(250,250,250,0.65)\",\r\n                  position: \"fixed\",\r\n                  top: \"0px\",\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  zIndex: 10,\r\n                }}\r\n              ></Grid>{\" \"}\r\n            </>\r\n          ) : null}\r\n\r\n          <animated.div ref={cropscrollRef} style={animation}>\r\n            <DialogContent\r\n              ref={cropTOPLEVELScrollRef}\r\n              className={\r\n                matchMobile || matchTablet\r\n                  ? darkmodeReducer\r\n                    ? \" dontallowhighlighting modal-containerDarkmob\"\r\n                    : \" dontallowhighlighting  modal-containerLightmob \"\r\n                  : darkmodeReducer\r\n                    ? \" dontallowhighlighting modal-containerDark  postscroll-dark \"\r\n                    : \" dontallowhighlighting  modal-containerLight  postscroll-light \"\r\n              }\r\n              style={{\r\n                padding: \"0px\",\r\n                height: \"100vh\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              <Grid\r\n                container\r\n                style={{\r\n                  padding: \"0px\",\r\n                  bottom:\r\n                    typex === \"Profile\"\r\n                      ? \"13.6vh\"\r\n                      : WideImageCheck\r\n                        ? \"33vh\"\r\n                        : \"43vh\",\r\n                  margin: \"auto\",\r\n                  width: `100%`,\r\n                  height: \"0px\",\r\n                  position: \"absolute\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  alignContent: \"center\",\r\n                  zIndex: 5,\r\n                  alignSelf: \"center\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={4}\r\n                  style={{\r\n                    padding: \"0px\",\r\n                    height: \"0px\",\r\n                    margin: \"auto\",\r\n                    display: \"grid\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                ></Grid>\r\n\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{\r\n                    padding: \"0px\",\r\n                    height: \"0px\",\r\n                    margin: \"auto\",\r\n                    display: \"grid\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  {optionscropshow ? (\r\n                    <CheckIcon\r\n                      onClick={done}\r\n                      className={\r\n                        darkmodeReducer\r\n                          ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \"\r\n                          : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \"\r\n                      }\r\n                      style={{\r\n                        margin: \"auto\",\r\n\r\n                        fontSize: matchTabletMobile ? \"4.8vh\" : \"2.9vw\",\r\n                      }}\r\n                    />\r\n                  ) : null}\r\n                </Grid>\r\n\r\n                <Grid\r\n                  item\r\n                  xs={4}\r\n                  style={{\r\n                    padding: \"0px\",\r\n                    height: \"0px\",\r\n                    margin: \"auto\",\r\n                    display: \"grid\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                ></Grid>\r\n              </Grid>\r\n              <Grid container style={{ width: \"100%\" }}>\r\n                <canvas\r\n                  ref={cropCanvasRefx}\r\n                  style={{\r\n                    padding: \"0px\",\r\n                    margin: \"auto\",\r\n\r\n                    zIndex: 2,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </DialogContent>\r\n          </animated.div>\r\n        </DialogContent>\r\n      ) : null}\r\n\r\n      <Grid\r\n        container\r\n        style={{ height: \"100%\", position: \"fixed\", top: \"-800vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            padding: \"0px\",\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            ref={getpreviewFixedWidthRef}\r\n            xs={5}\r\n            style={{\r\n              padding: \"0px\",\r\n            }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getFixedCropWidthRef}\r\n            xs={4}\r\n            style={{\r\n              padding: \"0px\",\r\n            }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropHeightRef}\r\n            xs={12}\r\n            style={{ height: \"92%\" }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropWidthMobileRef}\r\n            xs={12}\r\n            style={{ padding: \"0px\", width: \"100%\" }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropWidthMobileReflong}\r\n            xs={12}\r\n            style={{ padding: \"0px\", width: \"150%\" }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropWidthMobileRefHD}\r\n            style={{ padding: \"0px\", width: \"150%\" }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropHeightRefsingle}\r\n            xs={12}\r\n            style={{ height: \"100%\" }}\r\n          ></Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const UploadProfilePic = React.memo(UploadProfilePicx);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IACVC,MAAM,EACNC,SAAS,EACTC,WAAW,EACXC,QAAQ,EACRC,eAAe,QACV,OAAO;AAEd,SAASC,IAAI,EAAUC,aAAa,QAAQ,mBAAmB;AAC/D,SAAkBC,WAAW,EAAEC,WAAW,QAAQ,iBAAiB;AACnE,SAASC,SAAS,EAAEC,QAAQ,QAAQ,cAAc;AAElD,SAAyBC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,2BAA2B;AAEjD,SAASC,qBAAqB,QAAQ,+BAA+B;AACrE,SAASC,uBAAuB,QAAQ,+BAA+B;AACvE,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,iBAAiB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErD,SAASC,iBAAiBA,CAAC;EACzBC,sBAAsB;EACtBC,gBAAgB;EAChBC,kBAAkB;EAClBC,KAAK;EACLC,WAAW;EACXC,eAAe;EACfC;AACG,CAAC,EAAe;EAAAC,EAAA;EACnB,MAAMC,cAAmB,GAAGhC,MAAM,CAAC,IAAI,CAAC;EAExC,MAAMiC,QAAQ,GAAGrB,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACsB,eAAe,EAAEC,kBAAkB,CAAC,GAAGhC,QAAQ,CAAM,IAAI,CAAC;EAEjE,MAAMiC,aAAa,GAAG,CAAC;EAEvB,MAAMC,uBAAuB,GAAGrC,MAAM,CAAiB,IAAI,CAAC;EAE5D,MAAMsC,gBAAqB,GAAGtC,MAAM,CAAiB,IAAI,CAAC;EAE1D,MAAMuC,qBAA0B,GAAGvC,MAAM,CAAiB,IAAI,CAAC;EAE/D,MAAMwC,yBAA8B,GAAGxC,MAAM,CAAiB,IAAI,CAAC;EAEnE,MAAMyC,uBAA4B,GAAGzC,MAAM,CAAiB,IAAI,CAAC;EAEjE,MAAM0C,sBAA2B,GAAG1C,MAAM,CAAiB,IAAI,CAAC;EAEhE,MAAM2C,oBAAyB,GAAG3C,MAAM,CAAiB,IAAI,CAAC;EAE9D,MAAM,CAAC4C,WAAW,EAAEC,cAAc,CAAC,GAAG1C,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAM,CAAC2C,YAAY,EAAEC,eAAe,CAAC,GAAG5C,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAM,CAAC6C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG9C,QAAQ,CAAU,KAAK,CAAC;EAE1E,MAAM,CAAC+C,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGhD,QAAQ,CAAC,CAAC,CAAC;EAEnE,MAAM,CAACiD,OAAO,EAAEC,UAAU,CAAC,GAAGlD,QAAQ,CAAC,CAAC,CAAC;EAEzC,MAAM;IAAEmD,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGvC,UAAU,CAACQ,gBAAgB,CAAC;EAE7D,MAAM,CAACgC,UAAU,EAAEC,aAAa,CAAC,GAAGvD,QAAQ,CAAU,IAAI,CAAC;EAE3D,MAAM,CAACwD,2BAA2B,EAAEC,8BAA8B,CAAC,GACjEzD,QAAQ,CAAC,CAAC,CAAC;EAEb,MAAM,CAAC0D,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG3D,QAAQ,CAAC,CAAC,CAAC;EAE/D,MAAM,CAAC4D,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG7D,QAAQ,CAAC,CAAC,CAAC;EAEnE,MAAM,CAAC8D,sBAAsB,EAAEC,yBAAyB,CAAC,GACvD/D,QAAQ,CAAU,KAAK,CAAC;EAE1B,MAAM,CAACgE,uBAAuB,EAAEC,0BAA0B,CAAC,GACzDjE,QAAQ,CAAU,KAAK,CAAC;EAE1B,MAAM,CAACkE,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGnE,QAAQ,CAAS,CAAC,CAAC;EACvE,MAAM,CAACoE,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGrE,QAAQ,CAAS,CAAC,CAAC;EAEzE,MAAM,CAACsE,SAAS,EAAEC,YAAY,CAAC,GAAGvE,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAM,CAACwE,UAAU,EAAEC,aAAa,CAAC,GAAGzE,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAM,CAAC0E,cAAc,EAAEC,iBAAiB,CAAC,GAAG3E,QAAQ,CAAU,KAAK,CAAC;EAEpE,MAAM,CAAC4E,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG7E,QAAQ,CAAC,CAAC,CAAC;EAEjE,MAAM,CAAC8E,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG/E,QAAQ,CAAC,CAAC,CAAC;EAEjE,MAAM,CAACgF,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjF,QAAQ,CAAU,IAAI,CAAC;EAEvE,MAAM,CAACkF,IAAI,EAAEC,OAAO,CAAC,GAAGnF,QAAQ,CAAM,CAAC,CAAC;EAExC,MAAM,CAACoF,IAAI,EAAEC,OAAO,CAAC,GAAGrF,QAAQ,CAAM;IAAEsF,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAErD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGzF,QAAQ,CAAU,IAAI,CAAC;EAErE,MAAM,CAAC0F,cAAc,EAAEC,iBAAiB,CAAC,GAAG3F,QAAQ,CAAU,KAAK,CAAC;EAEpE,MAAM,CAAC4F,WAAW,EAAEC,cAAc,CAAC,GAAG7F,QAAQ,CAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAE3D,IAAI8F,YAAY,GAAG,CAAC,GAAGF,WAAW,CAAC;EAEnC,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGhG,QAAQ,CAAC,CAAC,CAAC;EAEzC,MAAMiG,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIzE,KAAK,KAAK,SAAS,EAAE;MACvBwE,UAAU,CAAC,GAAG,CAAC;IACjB,CAAC,MAAM;MACLA,UAAU,CAAC,GAAG,CAAC;IACjB;EACF,CAAC;EAEDlG,SAAS,CAAC,MAAM;IACdmG,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACzE,KAAK,CAAC,CAAC;;EAEX;EACA;EACA;EACA;EACA,MAAM0E,SAAS,GAAG5F,SAAS,CAAC;IAC1B6F,MAAM,EAAE;MACNC,QAAQ,EAAE;IACZ,CAAC;IACDC,OAAO,EAAEhF,sBAAsB,GAAG,CAAC,GAAG,CAAC;IACvCiF,SAAS,EAAEjF,sBAAsB,GAAI,gBAAe,GAAI,mBAAkB;IAC1EkF,OAAO,EAAE;EACX,CAAC,CAAC;;EAEF;EACA;EACA;EACA;;EAMA,MAAM;IAAEC;EAAS,CAAC,GAAGhG,WAAW,CAAEiG,KAA6B,KAAM;IACnE,GAAGA,KAAK,CAACC;EACX,CAAC,CAAC,CAAC;EAEH,MAAMC,eAAe,GAAGH,QAAQ;EAEhC,MAAM;IAAEI;EAAyB,CAAC,GAAGC,OAAO,CAACC,GAAG;EAChD,MAAMC,aAAa,GAAGlH,MAAM,CAAM,IAAI,CAAC;EACvC,MAAMmH,qBAA0B,GAAGnH,MAAM,CAAC,IAAI,CAAC;;EAE/C;EACA;EACA;EACA;EACAI,eAAe,CAAC,MAAM;IACpB,IAAIG,WAAW,IAAIC,WAAW,EAAE;MAC9ByC,oBAAoB,CAAC,IAAI,CAAC;IAC5B;IACA,IACEZ,uBAAuB,CAAC+E,OAAO,IAC/B/E,uBAAuB,CAAC+E,OAAO,CAACC,WAAW,EAC3C;MACAlE,uBAAuB,CAACd,uBAAuB,CAAC+E,OAAO,CAACC,WAAW,CAAC;IACtE;IAEA,IACE3E,sBAAsB,CAAC0E,OAAO,IAC9B1E,sBAAsB,CAAC0E,OAAO,CAACE,YAAY,EAC3C;MACAjE,UAAU,CAACX,sBAAsB,CAAC0E,OAAO,CAACE,YAAY,CAAC;IACzD;IAEA,IAAI5F,kBAAkB,CAAC6F,MAAM,KAAK,CAAC,EAAE;MACnC7D,aAAa,CAAC,KAAK,CAAC;MACpB,IACGhB,sBAAsB,CAAC0E,OAAO,IAC7B1E,sBAAsB,CAAC0E,OAAO,CAACE,YAAY,IAC7ChF,gBAAgB,CAAC8E,OAAO,EACxB;QACA,IAAIpE,iBAAiB,EAAE;UACrBD,eAAe,CACbR,qBAAqB,CAAC6E,OAAO,CAACC,WAAW,GAAGjF,aAC9C,CAAC;UACDS,cAAc,CACZN,qBAAqB,CAAC6E,OAAO,CAACC,WAAW,GAAGjF,aAC9C,CAAC;QACH,CAAC,MAAM;UACL,IAAIT,KAAK,KAAK,SAAS,EAAE;YACvBkB,cAAc,CACZH,sBAAsB,CAAC0E,OAAO,CAACE,YAAY,GAAGlF,aAChD,CAAC;YAEDW,eAAe,CACbL,sBAAsB,CAAC0E,OAAO,CAACE,YAAY,GAAGlF,aAChD,CAAC;UACH,CAAC,MAAM;YACL,IAAIyC,cAAc,EAAE;cAClBhC,cAAc,CACZH,sBAAsB,CAAC0E,OAAO,CAACE,YAAY,GAAGlF,aAAa,GAC3DM,sBAAsB,CAAC0E,OAAO,CAACE,YAAY,GAAG,CAChD,CAAC;cAEDvE,eAAe,CACbL,sBAAsB,CAAC0E,OAAO,CAACE,YAAY,GAAGlF,aAAa,GAC3DM,sBAAsB,CAAC0E,OAAO,CAACE,YAAY,GAAG,IAChD,CAAC;YACH,CAAC,MAAM;cACLzE,cAAc,CACZH,sBAAsB,CAAC0E,OAAO,CAACE,YAAY,GAAGlF,aAAa,GAC3DM,sBAAsB,CAAC0E,OAAO,CAACE,YAAY,GAAG,GAChD,CAAC;cAEDvE,eAAe,CACbL,sBAAsB,CAAC0E,OAAO,CAACE,YAAY,GAAGlF,aAAa,GAC3DM,sBAAsB,CAAC0E,OAAO,CAACE,YAAY,GAAG,IAChD,CAAC;YACH;UACF;QACF;QAEA1D,8BAA8B,CAC5BlB,sBAAsB,CAAC0E,OAAO,CAACE,YAAY,GAAGlF,aAChD,CAAC;MACH;IACF,CAAC,MAAM;MACL,IAAIE,gBAAgB,CAAC8E,OAAO,IAAI9E,gBAAgB,CAAC8E,OAAO,CAACE,YAAY,EAAE;QACrE,IAAItE,iBAAiB,EAAE;UACrBD,eAAe,CACbR,qBAAqB,CAAC6E,OAAO,CAACC,WAAW,GAAGjF,aAC9C,CAAC;UACDS,cAAc,CACZN,qBAAqB,CAAC6E,OAAO,CAACC,WAAW,GAAGjF,aAC9C,CAAC;QACH,CAAC,MAAM;UACLW,eAAe,CACbT,gBAAgB,CAAC8E,OAAO,CAACE,YAAY,GAAGlF,aAC1C,CAAC;UACDS,cAAc,CAACP,gBAAgB,CAAC8E,OAAO,CAACE,YAAY,GAAGlF,aAAa,CAAC;QACvE;QAEAwB,8BAA8B,CAACtB,gBAAgB,CAAC8E,OAAO,CAACE,YAAY,CAAC;MACvE;IACF;IAEA,IACE/E,qBAAqB,CAAC6E,OAAO,IAC7B7E,qBAAqB,CAAC6E,OAAO,CAACC,WAAW,EACzC;MACAvD,qBAAqB,CAACvB,qBAAqB,CAAC6E,OAAO,CAACC,WAAW,CAAC;IAClE;IAEA,IACE5E,uBAAuB,CAAC2E,OAAO,IAC/B3E,uBAAuB,CAAC2E,OAAO,CAACC,WAAW,EAC3C;MACArD,uBAAuB,CAACvB,uBAAuB,CAAC2E,OAAO,CAACC,WAAW,CAAC;IACtE;EACF,CAAC,EAAE,CAAC3F,kBAAkB,EAAEC,KAAK,EAAEkD,cAAc,CAAC,CAAC;EAE/C,MAAM2C,IAAI,GAAGtH,WAAW,CACtB,CACEuH,GAAQ,EACRC,UAAe,EACfC,IAAY,EACZC,IAAY,EACZC,eAAuB,KACpB;IACH,IAAIC,eAAe,EAAEC,EAAE;IAEvB,IAAIpG,KAAK,KAAK,SAAS,EAAE;MACvBoG,EAAE,GAAG,EAAEL,UAAU,GAAGrC,IAAI,CAAC,GAAG,CAAC;IAC/B,CAAC,MAAM;MACL0C,EAAE,GAAGH,IAAI;IACX;IAEA,IAAIvC,IAAI,KAAK,CAAC,EAAE;MACdyC,eAAe,GAAG,CAAC;IACrB,CAAC,MAAM;MACLA,eAAe,GAAGD,eAAe;IACnC;IACA,IAAIF,IAAI,KAAK,CAAC,EAAE;MACdF,GAAG,CAACO,SAAS,CACX9F,eAAe,EACf6F,EAAE,EACFD,eAAe,EACfJ,UAAU,GAAGrC,IAAI,EACjBvC,YAAY,GAAGoD,OAAO,GAAGb,IAC3B,CAAC;IACH,CAAC,MAAM,IAAIsC,IAAI,KAAK,CAAC,EAAE;MACrBF,GAAG,CAACO,SAAS,CACX9F,eAAe,EACf4F,eAAe,EACfF,IAAI,EACJhF,WAAW,GAAGsD,OAAO,GAAGb,IAAI,EAC5BqC,UAAU,GAAGrC,IACf,CAAC;IACH,CAAC,MAAM;MACLoC,GAAG,CAACO,SAAS,CACX9F,eAAe,EACf,CAAC,EACD,CAAC,EACDmC,kBAAkB,EAClBE,mBACF,CAAC;IACH;EACF,CAAC,EACD,CACEF,kBAAkB,EAClBE,mBAAmB,EACnBrC,eAAe,EACfY,YAAY,EACZF,WAAW,EACXyC,IAAI,EACJ1D,KAAK,CAET,CAAC;EAEDvB,eAAe,CAAC,MAAM;IACpB,MAAM6H,YAAiB,GAAG,IAAIC,KAAK,CAAC,CAAC;IAErCD,YAAY,CAACE,GAAG,GAAG1G,gBAAgB;IACnCwG,YAAY,CAACG,MAAM,GAAG,YAAY;MAChC,IAAIlG,eAAe,KAAK+F,YAAY,EAAE,CACtC,CAAC,MAAM;QACL9F,kBAAkB,CAAC8F,YAAY,CAAC;MAClC;MAEA,IAAII,KAAa,GAAG,CAAC;MACrB,IAAIC,KAAa,GAAG,CAAC;MAErB,IAAIC,8BAA8B,GAChCN,YAAY,CAACO,aAAa,GAAG1F,YAAY;MAC3C,IAAI2F,iBAAiB,GACnBR,YAAY,CAACS,YAAY,GAAGH,8BAA8B;MAE5D,IAAII,6BAA6B,GAC/BV,YAAY,CAACS,YAAY,GAAG3E,oBAAoB;MAClD,IAAI6E,kBAAkB,GACpBX,YAAY,CAACO,aAAa,GAAGG,6BAA6B;MAE5D,IAAIE,+BAA+B,GACjCZ,YAAY,CAACS,YAAY,GAAG7E,kBAAkB;MAChD,IAAIiF,oBAAoB,GACtBb,YAAY,CAACO,aAAa,GAAGK,+BAA+B;;MAE9D;;MAEA,IAAI7F,iBAAiB,IAAI8F,oBAAoB,GAAG1F,OAAO,EAAE;QACvDc,yBAAyB,CAAC,IAAI,CAAC;QAC/BE,0BAA0B,CAAC,IAAI,CAAC;QAEhC,IAAIG,mBAAmB,KAAKqE,kBAAkB,EAAE,CAChD,CAAC,MAAM;UACLpE,sBAAsB,CAACoE,kBAAkB,CAAC;UAC1CN,KAAK,GAAGM,kBAAkB;QAC5B;QACA;QACA,IAAIvE,kBAAkB,KAAKN,oBAAoB,EAAE,CACjD,CAAC,MAAM;UACLO,qBAAqB,CAACP,oBAAoB,CAAC;UAC3CsE,KAAK,GAAGtE,oBAAoB;QAC9B;MACF,CAAC,MAAM;QACLG,yBAAyB,CAAC,KAAK,CAAC;QAChCE,0BAA0B,CAAC,KAAK,CAAC;QACjC,IAAIC,kBAAkB,KAAKoE,iBAAiB,EAAE,CAC9C,CAAC,MAAM;UACLnE,qBAAqB,CAACmE,iBAAiB,CAAC;UACxCJ,KAAK,GAAGI,iBAAiB;QAC3B;QACA;QACA,IAAIlE,mBAAmB,KAAKzB,YAAY,EAAE,CAC1C,CAAC,MAAM;UACL0B,sBAAsB,CAAC1B,YAAY,CAAC;UACpCwF,KAAK,GAAGxF,YAAY;QACtB;MACF;MACA;;MAEA,IAAImF,YAAY,CAACS,YAAY,GAAGT,YAAY,CAACO,aAAa,EAAE;QAC1D1D,iBAAiB,CAAC,IAAI,CAAC;MACzB,CAAC,MAAM;QACLA,iBAAiB,CAAC,KAAK,CAAC;MAC1B;MAEA,IAAIL,SAAS,KAAK4D,KAAK,EAAE,CACzB,CAAC,MAAM;QACL3D,YAAY,CAAC2D,KAAK,CAAC;MACrB;MAEA,IAAI1D,UAAU,KAAK2D,KAAK,EAAE,CAC1B,CAAC,MAAM;QACL1D,aAAa,CAAC0D,KAAK,CAAC;MACtB;IACF,CAAC;EACH,CAAC,EAAE,CAAC7G,gBAAgB,EAAED,sBAAsB,CAAC,CAAC;;EAE9C;EACA;EACA;EACA;;EAeA;EACA;EACA;EACA;EACA,MAAM;IAAEuH,EAAE;IAAEC,QAAQ;IAAEC,UAAU;IAAEC,cAAc;IAAEC,eAAe;IAAEC,UAAU;IAAEC,eAAe;IAAEC,KAAK;IAAEC;EAAW,CAAC,GAAG5I,WAAW,CAC9HiG,KAA0B,KAAM;IAC/B,GAAGA,KAAK,CAAC4C;EACX,CAAC,CACH,CAAC;EAED,MAAMC,SAAS,GAAGV,EAAE;EACpB,MAAMW,eAAe,GAAGV,QAAQ;EAChC,MAAMW,iBAAiB,GAAGV,UAAU;EACpC,MAAMW,qBAAqB,GAAGV,cAAc;EAE5C,SAASW,YAAYA,CAACC,IAAS,EAAE;IAC/B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,CAAC,KAAK;MACjC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAMJ,OAAO,CAACE,MAAM,CAACG,MAAM,CAAC;MAC/CH,MAAM,CAACI,aAAa,CAACR,IAAI,CAAC;IAC5B,CAAC,CAAC;EACJ;EAEA,MAAMS,iBAAiB,GAAGrK,WAAW,CACnC,CAACsK,MAAW,EAAEC,SAAc,EAAEC,QAAa,KAAK;IAC9C,IAAIC,EAAE,GAAG,EAAE;IACXC,YAAY,CAACJ,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAE,IAAI,EAAEC,EAAE,CAAC;EACrD,CAAC,EACD,CAAClB,SAAS,EAAEI,YAAY,CAC1B,CAAC;EAED,MAAMe,YAAY,GAAGA,CACnBJ,MAAW,EACXC,SAAc,EACdC,QAAa,EACbG,SAAkB,EAClBC,KAAU,KACP;IACHjK,KAAK,CAACkK,IAAI,CAAE,GAAEhE,wBAAyB,yBAAwB,CAAC,CAC7DiE,IAAI,CAAEC,QAAQ,IAAK;MAClBnF,iBAAiB,CAAC,KAAK,CAAC;MACxB,IAAIoF,GAAG,GAAGD,QAAQ,CAAC3H,IAAI,CAAC4H,GAAG;MAC3BpF,iBAAiB,CAAC,IAAI,CAAC;MACvBqF,mBAAmB,CACjBV,SAAS,EACTS,GAAG,EACHA,GAAG,CAACE,KAAK,EACTZ,MAAM,EACNE,QAAQ,EACR,KAAK,EACLG,SAAS,EACTC,KACF,CAAC;IACH,CAAC,CAAC,CACDO,KAAK,CAAC,UAAU7H,KAAK,EAAE;MACtBsC,iBAAiB,CAAC,KAAK,CAAC;MACxBwF,KAAK,CAAC,kBAAkB,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC;EAED,MAAMH,mBAAmB,GAAGjL,WAAW,CACrC,CACEuK,SAAc,EACdc,EAAO,EACPC,IAAS,EACTC,CAAM,EACNC,CAAM,EACNC,KAAc,EACdd,SAAkB,EAClBC,KAAU,KACP;IACHjK,KAAK,CAAC+K,GAAG,CAACJ,IAAI,EAAEC,CAAC,CAAC,CACfT,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACAY,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC;MACrB,IAAIA,QAAQ,CAACc,MAAM,KAAK,GAAG,EAAE;QAC3BjG,iBAAiB,CAAC,IAAI,CAAC;QAGvB,IAAI6F,KAAK,EAAE;UACT,IAAIK,WAAW,GAAGR,IAAI,CAACS,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACpC,IAAIC,SAAS,GAAGF,WAAW,CAACC,KAAK,CAAC,GAAG,CAAC,CAACE,GAAG,CAAC,CAAC;UAI5C,IAAIC,EAAE,GAAG,CAAC;UAEV,IAAItK,WAAW,KAAK,CAAC,EAAE;YAErBsK,EAAE,GAAG,CAAC;UACR,CAAC,MAAM;YAELA,EAAE,GAAG,CAAC;UACR;UAEA,IAAIvB,SAAS,EAAE;YAEb,IAAIwB,OAAO,GAAG;cACZC,SAAS,EAAErG,YAAY,CAAC,CAAC,CAAC;cAC1BsG,cAAc,EAAEL,SAAS;cACzBnD,EAAE,EAAEU,SAAS;cACb9B,IAAI,EAAEyE;YACR,CAAC;YAEDI,gCAAgC,CAACH,OAAO,EAAEX,CAAC,CAAC;UAC9C,CAAC,MAAM;YACL,IAAIe,KAAK,GAAG;cACVH,SAAS,EAAErG,YAAY,CAAC,CAAC,CAAC;cAC1BsG,cAAc,EAAEL,SAAS;cACzBQ,YAAY,EAAEzD,UAAU;cACxB0D,iBAAiB,EAAExD,eAAe;cAClCyD,aAAa,EAAE3D,UAAU;cACzB4D,kBAAkB,EAAE1D,eAAe;cACnCJ,EAAE,EAAEU,SAAS;cACbqB,KAAK,EAAEA,KAAK,CAACgC,WAAW;cACxBC,MAAM,EAAEjC,KAAK,CAACgC;YAChB,CAAC;YAEDE,8BAA8B,CAACP,KAAK,EAAEf,CAAC,EAAEZ,KAAK,CAAC;UACjD;QACF,CAAC,MAAM;UACL,IAAImC,UAAU,GAAGzB,IAAI,CAACS,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAEnChG,YAAY,CAAC,CAAC,CAAC,GAAGgH,UAAU,CAAChB,KAAK,CAAC,GAAG,CAAC,CAACE,GAAG,CAAC,CAAC;UAG7ChB,mBAAmB,CACjBV,SAAS,EACTc,EAAE,EACFA,EAAE,CAAC2B,QAAQ,EACXzC,SAAS,EACTiB,CAAC,EACD,IAAI,EACJb,SAAS,EACTC,KACF,CAAC;QACH;MACF;IACF,CAAC,CAAC,CACDO,KAAK,CAAC,UAAU7H,KAAK,EAAE;MACtBsC,iBAAiB,CAAC,KAAK,CAAC;MACxBwF,KAAK,CAAC,kBAAkB,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC,EACD,CAAC7B,SAAS,EAAExD,YAAY,EAAE0D,iBAAiB,EAAEC,qBAAqB,EAAE9H,WAAW,CACjF,CAAC;EAED,MAAM0K,gCAAgC,GAAGA,CAACC,KAAU,EAAEf,CAAM,KAAK;IAC/D7K,KAAK,CAAC+K,GAAG,CAAE,GAAE7E,wBAAyB,wBAAuB,EAAE;MAC7DoG,MAAM,EAAEV;IACV,CAAC,CAAC,CACCzB,IAAI,CAAEC,QAAQ,IAAK;MAElB,IAAIA,QAAQ,CAAC3H,IAAI,CAAC8J,OAAO,KAAK,0BAA0B,EAAE;QAGxD,MAAM9J,IAAI,GAAG;UACX2F,UAAU,EAAEwD,KAAK,CAACH,SAAS;UAC3BlD,UAAU,EAAEqD,KAAK,CAACH;QACpB,CAAC;QAIDe,UAAU,CAAC,MAAM;UAEfpL,QAAQ,CAACjB,uBAAuB,CAACsC,IAAI,EAAEmJ,KAAK,CAAC9E,IAAI,CAAC,CAAC;UACnD/F,WAAW,CAAC,CAAC,CAAC;UACdkE,iBAAiB,CAAC,KAAK,CAAC;QAC1B,CAAC,EAAE,IAAI,CAAC;;QAIR;MAEF;IACF,CAAC,CAAC,CACDuF,KAAK,CAAC,UAAU7H,KAAK,EAAE;MACtBsC,iBAAiB,CAAC,KAAK,CAAC;MACxBwF,KAAK,CAAC,QAAQ,CAAC;IACjB,CAAC,CAAC;EACN,CAAC;EAED,MAAM0B,8BAA8B,GAAGA,CAACP,KAAU,EAAEf,CAAM,EAAEZ,KAAU,KAAK;IACzEjK,KAAK,CAAC+K,GAAG,CAAE,GAAE7E,wBAAyB,sBAAqB,EAAE;MAC3DoG,MAAM,EAAEV;IACV,CAAC,CAAC,CACCzB,IAAI,CAAEC,QAAQ,IAAK;MAElB,IAAIA,QAAQ,CAAC3H,IAAI,CAAC8J,OAAO,KAAK,4BAA4B,EAAE;QAC1D,IAAIE,QAAQ,GAAG;UACbC,MAAM,EAAEzC,KAAK,CAACgC,WAAW;UACzBC,MAAM,EAAEjC,KAAK,CAACgC,WAAW;UACzBU,SAAS,EAAE;QACb,CAAC;QACDvL,QAAQ,CAACf,iBAAiB,CAACoM,QAAQ,EAAE,CAAC,CAAC,CAAC;QACxC,MAAMhK,IAAI,GAAG;UACXgG,KAAK,EAAEmD,KAAK,CAACH;QACf,CAAC;QAEDe,UAAU,CAAC,MAAM;UAEfpL,QAAQ,CAAClB,qBAAqB,CAACuC,IAAI,CAAC,CAAC;UACrC1B,WAAW,CAAC,CAAC,CAAC;UACdkE,iBAAiB,CAAC,KAAK,CAAC;QAC1B,CAAC,EAAE,IAAI,CAAC;MAEV;IACF,CAAC,CAAC,CACDuF,KAAK,CAAC,UAAU7H,KAAK,EAAE;MACtBsC,iBAAiB,CAAC,KAAK,CAAC;MACxBwF,KAAK,CAAC,QAAQ,CAAC;IACjB,CAAC,CAAC;EACN,CAAC;EAED,MAAMmC,eAAe,GAAGvN,WAAW,CACjC,CAACsK,MAAW,EAAEC,SAAc,EAAEC,QAAa,EAAEC,EAAO,KAAK;IACvD7E,iBAAiB,CAAC,IAAI,CAAC;IACvB8E,YAAY,CAACJ,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAE,KAAK,EAAEC,EAAE,CAAC;EACtD,CAAC,EACD,CAAClB,SAAS,EAAE1D,WAAW,CACzB,CAAC;EAED,MAAM2H,WAAW,GAAGA,CAACC,GAAW,EAAEhD,EAAO,KAAK;IAC5C,IAAIzI,eAAe,IAAIF,cAAc,CAACoF,OAAO,EAAE;MAC7C,MAAMK,GAAG,GAAGzF,cAAc,CAACoF,OAAO,CAACwG,UAAU,CAAC,IAAI,CAAC;MACnD,IAAIC,EAAE,GAAG/K,YAAY,GAAGoD,OAAO;MAC/B,IAAI4H,+BAA+B,GAAGvJ,mBAAmB,GAAGsJ,EAAE;MAC9D,IAAIE,0BAA0B,GAC5B1J,kBAAkB,GAAGyJ,+BAA+B;MAEtD,IAAI/I,mBAAmB,KAAKgJ,0BAA0B,EAAE,CACxD,CAAC,MAAM;QACL/I,sBAAsB,CAAC+I,0BAA0B,CAAC;MACpD;MACA,IAAIC,EAAE,GAAGpL,WAAW,GAAGsD,OAAO;MAC9B,IAAI+H,gCAAgC,GAAG5J,kBAAkB,GAAG2J,EAAE;MAC9D,IAAIE,0BAA0B,GAC5B3J,mBAAmB,GAAG0J,gCAAgC;MAExD,IAAIhJ,mBAAmB,KAAKiJ,0BAA0B,EAAE,CACxD,CAAC,MAAM;QACLhJ,sBAAsB,CAACgJ,0BAA0B,CAAC;MACpD;MAEA,IAAIC,MAAM,GAAI9J,kBAAkB,GAAG,CAAC,GAAIA,kBAAkB;MAC1D,IAAI+J,MAAM,GAAI7J,mBAAmB,GAAG,CAAC,GAAIA,mBAAmB;MAE5D,IAAIY,gBAAgB,EAAE;QACpBnD,cAAc,CAACoF,OAAO,CAACiH,KAAK,GAAGzL,WAAW,GAAGsD,OAAO;QACpDlE,cAAc,CAACoF,OAAO,CAACkH,MAAM,GAAGxL,YAAY,GAAGoD,OAAO;MACxD,CAAC,MAAM;QACLlE,cAAc,CAACoF,OAAO,CAACiH,KAAK,GAAGhK,kBAAkB;QACjDrC,cAAc,CAACoF,OAAO,CAACkH,MAAM,GAAG/J,mBAAmB;MACrD;MAEA,IAAIgK,aAAa,GACfvM,cAAc,CAACoF,OAAO,CAACiH,KAAK,GAAG,GAAG,GAAGH,0BAA0B,GAAG,GAAG;MAEvE,IAAIM,QAAQ,GAAG1L,YAAY,GAAGiL,0BAA0B;MAExD,IAAIU,gBAAgB,GAClBzM,cAAc,CAACoF,OAAO,CAACiH,KAAK,GAAG,CAAC,GAAGN,0BAA0B,GAAG,CAAC;;MAEnE;MACA,IAAID,+BAA+B,GACjCvJ,mBAAmB,GAAGZ,2BAA2B;MACnD,IAAI+K,eAAe,GACjBrK,kBAAkB,GAAGyJ,+BAA+B;MACtD;MACA,IAAIa,8BAA8B,GAChCtK,kBAAkB,GAAGR,kBAAkB;MACzC,IAAI+K,gBAAgB,GAClBrK,mBAAmB,GAAGoK,8BAA8B;MACtD;;MAEA,IAAIxJ,gBAAgB,EAAE;QACpB,IAAI0J,EAAE,GAAGjM,WAAW,GAAGyC,IAAI;QAC3B,IAAI4I,gCAAgC,GAAG5J,kBAAkB,GAAGwK,EAAE;QAC9D,IAAIC,2BAA2B,GAC7BvK,mBAAmB,GAAG0J,gCAAgC;QAExD,IAAIc,GAAG,GAAGb,0BAA0B,GAAG7I,IAAI;QAC3C,IAAI2J,+BAA+B,GAAGzK,mBAAmB,GAAGwK,GAAG;QAC/D,IAAIE,2BAA2B,GAC7B5K,kBAAkB,GAAG2K,+BAA+B;QAEtD,IAAIE,GAAG,GAAGnB,0BAA0B,GAAG1I,IAAI;QAC3C,IAAI8J,iCAAiC,GAAG9K,kBAAkB,GAAG6K,GAAG;QAChE,IAAIE,4BAA4B,GAC9B7K,mBAAmB,GAAG4K,iCAAiC;QAEzD,IAAIE,IAAI,GAAGvM,YAAY,GAAGuC,IAAI;QAC9B,IAAIiK,gCAAgC,GAAG/K,mBAAmB,GAAG8K,IAAI;QACjE,IAAIE,4BAA4B,GAC9BlL,kBAAkB,GAAGiL,gCAAgC;QAEvD,IAAIjL,kBAAkB,GAAGE,mBAAmB,EAAE;UAC5C,IAAIA,mBAAmB,KAAKF,kBAAkB,EAAE;YAC9CmL,qBAAqB,CAAC,YAAY;cAChChI,IAAI,CAACC,GAAG,EAAEsG,0BAA0B,EAAE,CAAC,EAAE,CAAC,EAAExI,IAAI,CAACE,CAAC,CAAC;cACnD,IAAI;gBACF,IAAIkI,GAAG,KAAK,CAAC,EAAE;kBACb,IAAIrK,IAAI,GAAGtB,cAAc,CAACoF,OAAO,CAACqI,SAAS,CACzC,YAAY,EACZ,GACF,CAAC;kBACD,IAAIC,SAAS,GAAG1N,cAAc,CAACoF,OAAO,CAACqI,SAAS,CAC9C,YAAY,EACZ,IACF,CAAC;kBACD,MAAME,GAAG,GAAG,MAAMC,KAAK,CAACtM,IAAI,CAAC;kBAC7B,MAAMuM,KAAK,GAAG,MAAMF,GAAG,CAAC7F,IAAI,CAAC,CAAC;kBAC9B,MAAMgG,YAAY,GAAG,MAAMF,KAAK,CAACF,SAAS,CAAC;kBAC3C,MAAMK,UAAU,GAAG,MAAMD,YAAY,CAAChG,IAAI,CAAC,CAAC;kBAC5C,IAAInI,KAAK,KAAK,SAAS,EAAE;oBACvB,IAAIqO,YAAY,GAAG,MAAMnG,YAAY,CAACgG,KAAK,CAAC;oBAC5CpC,eAAe,CAACoC,KAAK,EAAEE,UAAU,EAAEC,YAAY,EAAErF,EAAE,CAAC;kBACtD,CAAC,MAAM;oBACL,IAAIqF,YAAY,GAAG,MAAMnG,YAAY,CAACgG,KAAK,CAAC;oBAC5CtF,iBAAiB,CAACsF,KAAK,EAAEE,UAAU,EAAEC,YAAY,CAAC;kBACpD;gBACF;cACF,CAAC,CAAC,MAAM;gBACNnE,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;cACnC;YACF,CAAC,CAAC;UACJ,CAAC,MAAM;YACL0D,qBAAqB,CAAC,YAAY;cAChChI,IAAI,CAACC,GAAG,EAAEsG,0BAA0B,EAAE,CAAC,EAAExI,IAAI,CAACE,CAAC,EAAEF,IAAI,CAACG,CAAC,CAAC;cACxD,IAAI;gBACF,IAAIiI,GAAG,KAAK,CAAC,EAAE;kBACb,IAAIrK,IAAI,GAAGtB,cAAc,CAACoF,OAAO,CAACqI,SAAS,CACzC,YAAY,EACZ,GACF,CAAC;kBACD,IAAIC,SAAS,GAAG1N,cAAc,CAACoF,OAAO,CAACqI,SAAS,CAC9C,YAAY,EACZ,IACF,CAAC;kBACD,MAAME,GAAG,GAAG,MAAMC,KAAK,CAACtM,IAAI,CAAC;kBAC7B,MAAMuM,KAAK,GAAG,MAAMF,GAAG,CAAC7F,IAAI,CAAC,CAAC;kBAC9B,MAAMgG,YAAY,GAAG,MAAMF,KAAK,CAACF,SAAS,CAAC;kBAC3C,MAAMK,UAAU,GAAG,MAAMD,YAAY,CAAChG,IAAI,CAAC,CAAC;kBAC5C,IAAInI,KAAK,KAAK,SAAS,EAAE;oBACvB,IAAIqO,YAAY,GAAG,MAAMnG,YAAY,CAACgG,KAAK,CAAC;oBAC5CpC,eAAe,CAACoC,KAAK,EAAEE,UAAU,EAAEC,YAAY,EAAErF,EAAE,CAAC;kBACtD,CAAC,MAAM;oBACL,IAAIqF,YAAY,GAAG,MAAMnG,YAAY,CAACgG,KAAK,CAAC;oBAC5CtF,iBAAiB,CAACsF,KAAK,EAAEE,UAAU,EAAEC,YAAY,CAAC;kBACpD;gBACF;cACF,CAAC,CAAC,MAAM;gBACNnE,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;cACnC;YACF,CAAC,CAAC;UACJ;QACF,CAAC,MAAM;UACL,IAAIvH,mBAAmB,KAAKF,kBAAkB,EAAE;YAC9CmL,qBAAqB,CAAC,YAAY;cAChChI,IAAI,CAACC,GAAG,EAAEyG,0BAA0B,EAAE,CAAC,EAAE,CAAC,EAAE3I,IAAI,CAACE,CAAC,CAAC;cAEnD,IAAI;gBACF,IAAIkI,GAAG,KAAK,CAAC,EAAE;kBACb,IAAIrK,IAAI,GAAGtB,cAAc,CAACoF,OAAO,CAACqI,SAAS,CACzC,YAAY,EACZ,GACF,CAAC;kBACD,IAAIC,SAAS,GAAG1N,cAAc,CAACoF,OAAO,CAACqI,SAAS,CAC9C,YAAY,EACZ,IACF,CAAC;kBACD,MAAME,GAAG,GAAG,MAAMC,KAAK,CAACtM,IAAI,CAAC;kBAC7B,MAAMuM,KAAK,GAAG,MAAMF,GAAG,CAAC7F,IAAI,CAAC,CAAC;kBAC9B,MAAMgG,YAAY,GAAG,MAAMF,KAAK,CAACF,SAAS,CAAC;kBAC3C,MAAMK,UAAU,GAAG,MAAMD,YAAY,CAAChG,IAAI,CAAC,CAAC;kBAC5C,IAAInI,KAAK,KAAK,SAAS,EAAE;oBACvB,IAAIqO,YAAY,GAAG,MAAMnG,YAAY,CAACgG,KAAK,CAAC;oBAC5CpC,eAAe,CAACoC,KAAK,EAAEE,UAAU,EAAEC,YAAY,EAAErF,EAAE,CAAC;kBACtD,CAAC,MAAM;oBACL,IAAIqF,YAAY,GAAG,MAAMnG,YAAY,CAACgG,KAAK,CAAC;oBAC5CtF,iBAAiB,CAACsF,KAAK,EAAEE,UAAU,EAAEC,YAAY,CAAC;kBACpD;gBACF;cACF,CAAC,CAAC,MAAM;gBACNnE,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;cACnC;YACF,CAAC,CAAC;UACJ,CAAC,MAAM;YACL0D,qBAAqB,CAAC,YAAY;cAChChI,IAAI,CAACC,GAAG,EAAEyG,0BAA0B,EAAE,CAAC,EAAE3I,IAAI,CAACG,CAAC,EAAEH,IAAI,CAACE,CAAC,CAAC;cAExD,IAAI;gBACF,IAAIkI,GAAG,KAAK,CAAC,EAAE;kBACb,IAAIrK,IAAI,GAAGtB,cAAc,CAACoF,OAAO,CAACqI,SAAS,CACzC,YAAY,EACZ,GACF,CAAC;kBACD,IAAIC,SAAS,GAAG1N,cAAc,CAACoF,OAAO,CAACqI,SAAS,CAC9C,YAAY,EACZ,IACF,CAAC;kBACD,MAAME,GAAG,GAAG,MAAMC,KAAK,CAACtM,IAAI,CAAC;kBAC7B,MAAMuM,KAAK,GAAG,MAAMF,GAAG,CAAC7F,IAAI,CAAC,CAAC;kBAC9B,MAAMgG,YAAY,GAAG,MAAMF,KAAK,CAACF,SAAS,CAAC;kBAC3C,MAAMK,UAAU,GAAG,MAAMD,YAAY,CAAChG,IAAI,CAAC,CAAC;kBAC5C,IAAInI,KAAK,KAAK,SAAS,EAAE;oBACvB,IAAIqO,YAAY,GAAG,MAAMnG,YAAY,CAACgG,KAAK,CAAC;oBAC5CpC,eAAe,CAACoC,KAAK,EAAEE,UAAU,EAAEC,YAAY,EAAErF,EAAE,CAAC;kBACtD,CAAC,MAAM;oBACL,IAAIqF,YAAY,GAAG,MAAMnG,YAAY,CAACgG,KAAK,CAAC;oBAC5CtF,iBAAiB,CAACsF,KAAK,EAAEE,UAAU,EAAEC,YAAY,CAAC;kBACpD;gBACF;cACF,CAAC,CAAC,MAAM;gBACNnE,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;cACnC;YACF,CAAC,CAAC;UACJ;QACF;MACF,CAAC,MAAM;QACL0D,qBAAqB,CAAC,YAAY;UAChChI,IAAI,CAACC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAElC,IAAI,CAACE,CAAC,CAAC;UAE1B,IAAI;YACF,IAAIkI,GAAG,KAAK,CAAC,EAAE;cACb,IAAIrK,IAAI,GAAGtB,cAAc,CAACoF,OAAO,CAACqI,SAAS,CAAC,YAAY,EAAE,GAAG,CAAC;cAC9D,IAAIC,SAAS,GAAG1N,cAAc,CAACoF,OAAO,CAACqI,SAAS,CAC9C,YAAY,EACZ,IACF,CAAC;cACD,MAAME,GAAG,GAAG,MAAMC,KAAK,CAACtM,IAAI,CAAC;cAC7B,MAAMuM,KAAK,GAAG,MAAMF,GAAG,CAAC7F,IAAI,CAAC,CAAC;cAC9B,MAAMgG,YAAY,GAAG,MAAMF,KAAK,CAACF,SAAS,CAAC;cAC3C,MAAMK,UAAU,GAAG,MAAMD,YAAY,CAAChG,IAAI,CAAC,CAAC;cAC5C,IAAInI,KAAK,KAAK,SAAS,EAAE;gBACvB,IAAIqO,YAAY,GAAG,MAAMnG,YAAY,CAACgG,KAAK,CAAC;gBAC5CpC,eAAe,CAACoC,KAAK,EAAEE,UAAU,EAAEC,YAAY,EAAErF,EAAE,CAAC;cACtD,CAAC,MAAM;gBACL,IAAIqF,YAAY,GAAG,MAAMnG,YAAY,CAACgG,KAAK,CAAC;gBAC5CtF,iBAAiB,CAACsF,KAAK,EAAEE,UAAU,EAAEC,YAAY,CAAC;cACpD;YACF;UACF,CAAC,CAAC,MAAM;YACNnE,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;UACnC;QACF,CAAC,CAAC;MACJ;IACF;EACF,CAAC;EAED1L,eAAe,CAAC,MAAM;IACpBsN,WAAW,CAAC,CAAC,EAAEpK,IAAI,CAAC;EACtB,CAAC,EAAE,CACDpB,eAAe,EACfiD,gBAAgB,EAChBd,kBAAkB,EAClBE,mBAAmB,EACnBN,sBAAsB,EACtBnB,YAAY,EACZyC,IAAI,EACJF,IAAI,EACJ/B,IAAI,CACL,CAAC;EAEF,MAAM2M,IAAI,GAAGA,CAAA,KAAM;IACjBvC,WAAW,CAAC,CAAC,EAAEpK,IAAI,CAAC;EACtB,CAAC;EAED,oBACElC,OAAA,CAAAE,SAAA;IAAA4O,QAAA,GACG1O,sBAAsB,gBACrBJ,OAAA,CAACd,aAAa;MACZ6P,SAAS,EAAErJ,eAAe,GAAG,kBAAkB,GAAG,kBAAmB;MACrEsJ,KAAK,EAAE;QACL1J,OAAO,EAAE,KAAK;QACd4H,MAAM,EAAE,OAAO;QACf+B,QAAQ,EAAE,OAAO;QACjBC,MAAM,EAAE,GAAG;QACXC,MAAM,EAAE,SAAS;QACjBC,QAAQ,EAAE;MACZ,CAAE;MAAAN,QAAA,GAEDrK,cAAc,gBACbzE,OAAA,CAAAE,SAAA;QAAA4O,QAAA,gBACE9O,OAAA,CAACf,IAAI;UACHoQ,SAAS;UACTL,KAAK,EAAE;YACLM,eAAe,EAAE5J,eAAe,GAC5B,qBAAqB,GACrB,wBAAwB;YAC5BuJ,QAAQ,EAAE,OAAO;YACjBM,GAAG,EAAE,KAAK;YACVtC,KAAK,EAAE,MAAM;YACbC,MAAM,EAAE,MAAM;YACdgC,MAAM,EAAE;UACV;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,EAAC,GAAG;MAAA,eACZ,CAAC,GACD,IAAI,eAER3P,OAAA,CAACV,QAAQ,CAACsQ,GAAG;QAACC,GAAG,EAAE/J,aAAc;QAACkJ,KAAK,EAAE/J,SAAU;QAAA6J,QAAA,eACjD9O,OAAA,CAACd,aAAa;UACZ2Q,GAAG,EAAE9J,qBAAsB;UAC3BgJ,SAAS,EACP3P,WAAW,IAAID,WAAW,GACtBuG,eAAe,GACb,+CAA+C,GAC/C,kDAAkD,GACpDA,eAAe,GACb,8DAA8D,GAC9D,iEACP;UACDsJ,KAAK,EAAE;YACL1J,OAAO,EAAE,KAAK;YACd4H,MAAM,EAAE,OAAO;YACfkC,QAAQ,EAAE;UACZ,CAAE;UAAAN,QAAA,gBAEF9O,OAAA,CAACf,IAAI;YACHoQ,SAAS;YACTL,KAAK,EAAE;cACL1J,OAAO,EAAE,KAAK;cACdwK,MAAM,EACJvP,KAAK,KAAK,SAAS,GACf,QAAQ,GACRkD,cAAc,GACZ,MAAM,GACN,MAAM;cACdsM,MAAM,EAAE,MAAM;cACd9C,KAAK,EAAG,MAAK;cACbC,MAAM,EAAE,KAAK;cACb+B,QAAQ,EAAE,UAAU;cACpBe,OAAO,EAAE,MAAM;cACfC,cAAc,EAAE,QAAQ;cACxBC,UAAU,EAAE,QAAQ;cACpBC,YAAY,EAAE,QAAQ;cACtBjB,MAAM,EAAE,CAAC;cACTkB,SAAS,EAAE;YACb,CAAE;YAAAtB,QAAA,gBAEF9O,OAAA,CAACf,IAAI;cACHoR,IAAI;cACJC,EAAE,EAAE,CAAE;cACNtB,KAAK,EAAE;gBACL1J,OAAO,EAAE,KAAK;gBACd4H,MAAM,EAAE,KAAK;gBACb6C,MAAM,EAAE,MAAM;gBACdC,OAAO,EAAE,MAAM;gBACfE,UAAU,EAAE;cACd;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC,eAER3P,OAAA,CAACf,IAAI;cACHoR,IAAI;cACJC,EAAE,EAAE,EAAG;cACPtB,KAAK,EAAE;gBACL1J,OAAO,EAAE,KAAK;gBACd4H,MAAM,EAAE,KAAK;gBACb6C,MAAM,EAAE,MAAM;gBACdC,OAAO,EAAE,MAAM;gBACfE,UAAU,EAAE;cACd,CAAE;cAAApB,QAAA,EAEDvK,eAAe,gBACdvE,OAAA,CAACN,SAAS;gBACR6Q,OAAO,EAAE1B,IAAK;gBACdE,SAAS,EACPrJ,eAAe,GACX,mFAAmF,GACnF,oFACL;gBACDsJ,KAAK,EAAE;kBACLe,MAAM,EAAE,MAAM;kBAEdS,QAAQ,EAAE5O,iBAAiB,GAAG,OAAO,GAAG;gBAC1C;cAAE;gBAAA4N,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,GACA;YAAI;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eAEP3P,OAAA,CAACf,IAAI;cACHoR,IAAI;cACJC,EAAE,EAAE,CAAE;cACNtB,KAAK,EAAE;gBACL1J,OAAO,EAAE,KAAK;gBACd4H,MAAM,EAAE,KAAK;gBACb6C,MAAM,EAAE,MAAM;gBACdC,OAAO,EAAE,MAAM;gBACfE,UAAU,EAAE;cACd;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACP3P,OAAA,CAACf,IAAI;YAACoQ,SAAS;YAACL,KAAK,EAAE;cAAE/B,KAAK,EAAE;YAAO,CAAE;YAAA6B,QAAA,eACvC9O,OAAA;cACE6P,GAAG,EAAEjP,cAAe;cACpBoO,KAAK,EAAE;gBACL1J,OAAO,EAAE,KAAK;gBACdyK,MAAM,EAAE,MAAM;gBAEdb,MAAM,EAAE;cACV;YAAE;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,GACd,IAAI,eAER3P,OAAA,CAACf,IAAI;MACHoQ,SAAS;MACTL,KAAK,EAAE;QAAE9B,MAAM,EAAE,MAAM;QAAE+B,QAAQ,EAAE,OAAO;QAAEM,GAAG,EAAE;MAAS,CAAE;MAAAT,QAAA,eAE5D9O,OAAA,CAACf,IAAI;QACHoR,IAAI;QACJC,EAAE,EAAE,EAAG;QACPtB,KAAK,EAAE;UACL1J,OAAO,EAAE;QACX,CAAE;QAAAwJ,QAAA,gBAEF9O,OAAA,CAACf,IAAI;UACHoR,IAAI;UACJR,GAAG,EAAE5O,uBAAwB;UAC7BqP,EAAE,EAAE,CAAE;UACNtB,KAAK,EAAE;YACL1J,OAAO,EAAE;UACX;QAAE;UAAAkK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eAER3P,OAAA,CAACf,IAAI;UACHoR,IAAI;UACJR,GAAG,EAAEtO,oBAAqB;UAC1B+O,EAAE,EAAE,CAAE;UACNtB,KAAK,EAAE;YACL1J,OAAO,EAAE;UACX;QAAE;UAAAkK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eAER3P,OAAA,CAACf,IAAI;UACHoR,IAAI;UACJR,GAAG,EAAE3O,gBAAiB;UACtBoP,EAAE,EAAE,EAAG;UACPtB,KAAK,EAAE;YAAE9B,MAAM,EAAE;UAAM;QAAE;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eAER3P,OAAA,CAACf,IAAI;UACHoR,IAAI;UACJR,GAAG,EAAE1O,qBAAsB;UAC3BmP,EAAE,EAAE,EAAG;UACPtB,KAAK,EAAE;YAAE1J,OAAO,EAAE,KAAK;YAAE2H,KAAK,EAAE;UAAO;QAAE;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eAER3P,OAAA,CAACf,IAAI;UACHoR,IAAI;UACJR,GAAG,EAAEzO,yBAA0B;UAC/BkP,EAAE,EAAE,EAAG;UACPtB,KAAK,EAAE;YAAE1J,OAAO,EAAE,KAAK;YAAE2H,KAAK,EAAE;UAAO;QAAE;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eAER3P,OAAA,CAACf,IAAI;UACHoR,IAAI;UACJR,GAAG,EAAExO,uBAAwB;UAC7B2N,KAAK,EAAE;YAAE1J,OAAO,EAAE,KAAK;YAAE2H,KAAK,EAAE;UAAO;QAAE;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eAER3P,OAAA,CAACf,IAAI;UACHoR,IAAI;UACJR,GAAG,EAAEvO,sBAAuB;UAC5BgP,EAAE,EAAE,EAAG;UACPtB,KAAK,EAAE;YAAE9B,MAAM,EAAE;UAAO;QAAE;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACP,CAAC;AAEP;AAAChP,EAAA,CA9iCQR,iBAAiB;EAAA,QAWPX,WAAW,EA8BKK,UAAU,EA8DzBR,SAAS,EAkBNE,WAAW,EAuRsFA,WAAW;AAAA;AAAAkR,EAAA,GAhZ1HtQ,iBAAiB;AAgjC1B,OAAO,MAAMuQ,gBAAgB,gBAAG/R,KAAK,CAACgS,IAAI,CAACxQ,iBAAiB,CAAC;AAACyQ,GAAA,GAAjDF,gBAAgB;AAAA,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}