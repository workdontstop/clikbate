{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\log\\\\FormHolder.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useCallback } from \"react\";\nimport Axios from \"axios\";\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\nimport { TextFieldLogin } from \"./TextFieldLogin\";\nimport { TextFieldSignup } from \"./TextFieldSignup\";\nimport { ServerError } from \"./ServerError\";\nimport { ModalFormSignupError } from \"./ModalFormSignupError\";\nimport { ModalFormLoginError } from \"./ModalFormLoginError\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { isBrowser, isTablet } from \"react-device-detect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FormHolderx({\n  darkmode,\n  zoomedModal,\n  WidthHolder,\n  loginstyle,\n  loginForm,\n  signupstyle\n}) {\n  _s();\n\n  const matchPc = isBrowser;\n  const matchTablet = isTablet;\n  const [focusUsername, setFocusUsername] = useState(false);\n  const [focusPassword, setFocusPassword] = useState(false);\n  const [focusUsernameSign, setFocusUsernameSign] = useState(false);\n  const [focusPasswordSign, setFocusPasswordSign] = useState(false);\n  const [focusEmailSign, setFocusEmailSign] = useState(false);\n  const [showFocusTextFieldByHidePadding, setShowFocusTextFieldByHidePadding] = useState(false);\n  var fieldSize = \"\";\n  var tabletMobile = \"\";\n\n  if (matchTablet) {\n    fieldSize = \"smallTablet\";\n    tabletMobile = \"Tablet\";\n  } else {\n    fieldSize = \"small\";\n    tabletMobile = \"Mobile\";\n  } ///\n  ///\n  ///\n  ///HISTORY VARIABLE\n\n\n  const history = useHistory(); ///\n  ///\n  ///\n  ///SUPERSTARZ ICON SELECT\n\n  var SuperIcon = \"\";\n  darkmode ? SuperIcon = SuperstarzIconDark : SuperIcon = SuperstarzIconLight;\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env; ///\n  ///\n  ///LOGGING UPDATE VALUES DETAILS\n\n  const initialLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialCleanLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialErrorLogValue = {\n    inputedUsername: 0,\n    inputedPassword: 0\n  };\n  const [rawLoginValues, setRawLoginValues] = useState(initialLogValue);\n  const [cleanLoginValues, setCleanLoginValues] = useState(initialCleanLogValue);\n  const [errorsLoginValues, setErrorsLoginValues] = useState(initialErrorLogValue);\n  const [loginShowPassword, setLoginShowPassword] = useState(false);\n  const loginShowPasswordTimer = useRef(null); ///\n  ///\n  ///\n  /// SHOW  LOGIN PASSWORD FOR A WHILE\n\n  const ShowLoginPasswordForaWhile = useCallback(() => {\n    if (loginShowPasswordTimer.current) {\n      clearTimeout(loginShowPasswordTimer.current);\n    }\n\n    setLoginShowPassword(!loginShowPassword);\n    loginShowPasswordTimer.current = setTimeout(() => {\n      setLoginShowPassword(false);\n    }, 2000);\n  }, [loginShowPassword]); ///\n  ///\n  ///\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\n\n  const updateLoginvalues = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setErrorsLoginValues({ ...errorsLoginValues,\n      [name]: 0\n    });\n    setRawLoginValues({ ...rawLoginValues,\n      [name]: value\n    });\n    setCleanLoginValues({ ...cleanLoginValues,\n      [name]: value\n    });\n  }, [errorsLoginValues, rawLoginValues, cleanLoginValues]); ///\n  ///\n  ///\n  /// SENDING LOGIN  DATA TO SERVER SIDE\n\n  const [serverErrorData, setServerErrorData] = useState(null);\n  const [serverErrorDisplay, setServerErrorDisplay] = useState(0);\n  const [serverEmojiplain, setserverEmojiplain] = useState(true);\n\n  const logmein = () => {\n    if (cleanLoginValues.inputedUsername && cleanLoginValues.inputedPassword) {\n      Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/loging`, {\n        values: cleanLoginValues\n      }, {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.message === \"Wrong Password\") {\n          setServerErrorData(\"wrong username and  password combination\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(false);\n        } else {\n          if (response.data.message === \"Wrong username\") {\n            setServerErrorData(\"username does not exist\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(false);\n          } else if (response.data.payload) {\n            history.push({\n              pathname: \"/supercheck\",\n              state: {\n                userdata: response.data.payload\n              }\n            });\n          } else {\n            setServerErrorData(\"user info could not be retrieved\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(false);\n          }\n        }\n      }).catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          //express typo can activate this\n          // Request made and server responded\n          //express typo can activate this\n          //let textFieldParam = error.response.data.error.errors[0].param;\n          let affectedTextField = \"wrong password and username combination\";\n          let dynamicError = `${affectedTextField}  `;\n          setServerErrorData(dynamicError);\n          setServerErrorDisplay(1);\n          setserverEmojiplain(false);\n        } else if (error.request) {\n          // The request was made but no response was received Or request not made\n          // Axios.post(\"http://localhost:3003/reg\" can activate this error\n          setServerErrorData(\"error connecting to server, check your connection\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(true);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          setServerErrorData(\"request setup failed , pls try again\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(true);\n        }\n      });\n    } else {\n      let passwordErrorHolder = errorsLoginValues.inputedPassword;\n      let usernameErrorHolder = errorsLoginValues.inputedUsername;\n\n      if (!cleanLoginValues.inputedPassword) {\n        passwordErrorHolder = 1;\n      }\n\n      if (!cleanLoginValues.inputedUsername) {\n        usernameErrorHolder = 1;\n      }\n\n      setErrorsLoginValues({ ...errorsLoginValues,\n        inputedPassword: passwordErrorHolder,\n        inputedUsername: usernameErrorHolder\n      });\n    }\n  }; ///\n  ///\n  ///UPDATE SIGN UP DETAILS\n  ///\n  ///\n  ///\n  /// SANITISE SIGN UP FORM INPUT CLIENT\n\n\n  const initialRawSignValue = {\n    inputedEmail: \"\",\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialCleanSignValue = {\n    inputedEmail: \"\",\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialErrorSignValue = {\n    inputedEmail: 0,\n    inputedUsername: 0,\n    inputedPassword: 0\n  };\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\n  const [cleanSignupValues, setCleanSignupValues] = useState(initialCleanSignValue);\n  const [errorsSignupValues, setErrorsSignupValues] = useState(initialErrorSignValue);\n  const EmailCheckingTimer = useRef(null);\n  const UsernameCheckingTimer = useRef(null);\n  const initialspinner = {\n    inputedUsername: false,\n    inputedPassword: false,\n    inputedEmail: false\n  };\n  const [errorFormChecking, setErrorFormChecking] = useState(initialspinner);\n  const PasswordCheckingTimer = useRef(null);\n  const [signupShowPassword, setSignupShowPassword] = useState(false);\n  const signupShowPasswordTimer = useRef(null);\n  const [cantPassBadEmail, setCantPassBadEmail] = useState(false); ///\n  ///\n  ///\n  ///SIGN UP ERROR VARIABLES\n\n  let usernameErrorData = null;\n  let usernameErrorDisplay = 0;\n  let emailErrorData = null;\n  let emailErrorDisplay = 0;\n  let passwordErrorData = null;\n  let passwordErrorDisplay = 0;\n\n  switch (errorsSignupValues.inputedUsername) {\n    case 1:\n      usernameErrorData = \"usernames can only use letters, numbers, underscores and periods \";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 2:\n      usernameErrorData = \"username is taken\";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 3:\n      usernameErrorData = \"username is available\";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 4:\n      usernameErrorData = \"username  required\";\n      usernameErrorDisplay = 1;\n      break;\n\n    default:\n      usernameErrorData = null;\n      usernameErrorDisplay = 0;\n      break;\n  }\n\n  switch (errorsSignupValues.inputedPassword) {\n    case 1:\n      passwordErrorData = \"password must be at Least 8 characters\";\n      passwordErrorDisplay = 1;\n      break;\n\n    case 2:\n      passwordErrorData = \"checking\";\n      passwordErrorDisplay = 1;\n      break;\n\n    case 4:\n      passwordErrorData = \" password  required \";\n      passwordErrorDisplay = 1;\n      break;\n\n    default:\n      passwordErrorData = null;\n      passwordErrorDisplay = 0;\n      break;\n  }\n\n  switch (errorsSignupValues.inputedEmail) {\n    case 1:\n      emailErrorData = \"checking\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 2:\n      emailErrorData = \"email address is not valid\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 3:\n      emailErrorData = \"email is restricted to certain characters\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 4:\n      emailErrorData = \"email required\";\n      emailErrorDisplay = 1;\n      break;\n\n    default:\n      emailErrorData = null;\n      emailErrorDisplay = 0;\n      break;\n  } ///\n  ///\n  ///\n  ///SIGN UP ERROR VARIABLES\n  ///\n  ///\n  ///\n  /// SHOW  SIGNUP PASSWORD FOR A WHILE\n\n\n  const ShowSignupPasswordForaWhile = useCallback(() => {\n    if (signupShowPasswordTimer.current) {\n      clearTimeout(signupShowPasswordTimer.current);\n    }\n\n    setSignupShowPassword(!signupShowPassword);\n    signupShowPasswordTimer.current = setTimeout(() => {\n      setSignupShowPassword(false);\n    }, 2000);\n  }, [signupShowPassword]); /// SANITISE LOG IN FORM INPUT CLIENT SIDE\n\n  const updateSignvalues = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"inputedUsername\") {\n      let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\n      let cleanValue = value.replace(usernameCleaner, \"\");\n      let usernameLimiter = /^.{26}$/;\n      let finalUsername = cleanValue.replace(usernameLimiter, \"\");\n      let checkUsernameClean = usernameCleaner.test(value);\n      let checkUsernameLimited = usernameLimiter.test(cleanValue);\n\n      if (checkUsernameClean) {\n        if (UsernameCheckingTimer.current) {\n          clearTimeout(UsernameCheckingTimer.current);\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n        }\n\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n      } else {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      let userNameLength = finalUsername.length;\n\n      if (checkUsernameClean) {} else {\n        if (checkUsernameLimited || userNameLength > 26) {} else {\n          setRawSignupValues({ ...rawSignupValues,\n            [name]: finalUsername\n          });\n          setCleanSignupValues({ ...cleanSignupValues,\n            [name]: finalUsername\n          }); /// AXIOS REQUEST FOR CHECK USERNAME\n\n          if (UsernameCheckingTimer.current) {\n            clearTimeout(UsernameCheckingTimer.current);\n            setErrorFormChecking({ ...errorFormChecking,\n              [name]: false\n            });\n            setErrorsSignupValues({ ...errorsSignupValues,\n              [name]: 0\n            });\n          }\n\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: true\n          });\n          setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 2\n          });\n          UsernameCheckingTimer.current = setTimeout(() => {\n            if (value.length === 0) {\n              setErrorsSignupValues({ ...errorsSignupValues,\n                [name]: 0\n              });\n              setErrorFormChecking({ ...errorFormChecking,\n                [name]: false\n              });\n            } else {\n              Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/usernamecheck`, {\n                value: finalUsername\n              }).then(response => {\n                if (response.data.message === \"username is not unique\") {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 2\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else if (response.data.message === \"username is available\") {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 3\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                }\n              }).catch(function (error) {\n                if (error.response) {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else if (error.request) {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                }\n              });\n            }\n          }, 3000); /// AXIOS REQUEST FOR CHECK USERNAME\n        }\n      } ///\n\n    } else if (name === \"inputedEmail\") {\n      const emailValidation = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      const emailCleaner = /[^*$%#+@a-z0-9áéíóúñü \\.'_]/gim;\n      let finalEmail = value.replace(emailCleaner, \"\");\n      let checkEmailClean = emailCleaner.test(value);\n      let checkEmailValidated = emailValidation.test(String(value).toLowerCase());\n\n      if (EmailCheckingTimer.current) {\n        clearTimeout(EmailCheckingTimer.current);\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: false\n        });\n      }\n\n      if (!checkEmailValidated) {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: true\n        });\n        EmailCheckingTimer.current = setTimeout(() => {\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n          setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 2\n          });\n          checkEmailClean && setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 3\n          });\n        }, 2000);\n      } else {\n        if (EmailCheckingTimer.current) {\n          clearTimeout(EmailCheckingTimer.current);\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n        }\n\n        checkEmailClean ? setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 3\n        }) : setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: finalEmail\n      });\n      setCleanSignupValues({ ...cleanSignupValues,\n        [name]: finalEmail\n      }); ////////\n    } else {\n      if (PasswordCheckingTimer.current) {\n        clearTimeout(PasswordCheckingTimer.current);\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: false\n        });\n      }\n\n      setErrorsSignupValues({ ...errorsSignupValues,\n        [name]: 2\n      });\n      setErrorFormChecking({ ...errorFormChecking,\n        [name]: true\n      });\n      PasswordCheckingTimer.current = setTimeout(() => {\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: false\n        });\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n      }, 2000);\n      var passwordLength = value.length;\n\n      if (passwordLength >= 8 || passwordLength === 0) {\n        if (PasswordCheckingTimer.current) {\n          clearTimeout(PasswordCheckingTimer.current);\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n        }\n\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: value\n      });\n      setCleanSignupValues({ ...cleanSignupValues,\n        [name]: value\n      });\n    }\n  }, [cleanSignupValues, rawSignupValues, errorsSignupValues, errorFormChecking]); ///\n  ///\n  ///\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\n\n  const signmeup = () => {\n    if (cleanSignupValues.inputedEmail && cleanSignupValues.inputedUsername && cleanSignupValues.inputedPassword && errorsSignupValues.inputedPassword === 0) {\n      if (errorsSignupValues.inputedEmail === 0) {\n        Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/registration`, {\n          values: cleanSignupValues\n        }).then(response => {\n          if (response.data.message === \"username not unique\") {\n            setServerErrorData(\"username is taken\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          } else if (response.data.message === \"Registration Successful\") {\n            console.log(response.status);\n            alert(\"REGISTRATION COMPLETE\");\n          } else {\n            setServerErrorData(\"something went wrong\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          }\n        }).catch(function (error) {\n          if (error.response) {\n            // Request made and server responded\n            //express typo can activate this\n            let textFieldParam = error.response.data.error.errors[0].param;\n            let affectedTextField = \" \";\n\n            if (textFieldParam === \"values.inputedPassword\") {\n              affectedTextField = \"password must be at least 8 characters\";\n            } else if (textFieldParam === \"values.inputedEmail\") {\n              affectedTextField = \"email address is not valid\";\n            } else {\n              affectedTextField = \"usernames use letters, numbers, underscores and periods\";\n            }\n\n            let dynamicError = `${affectedTextField}.  ${error.response.data.error.errors[0].msg} `;\n            setServerErrorData(dynamicError);\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          } else if (error.request) {\n            // The request was made but no response was received Or request not made\n            // Axios.post(\"http://localhost:3003/reg\" can activate this error\n            setServerErrorData(\"error connecting to server, check your connection\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          } else {\n            // Something happened in setting up the request that triggered an Error\n            setServerErrorData(\"request setup failed , pls try again\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          }\n        });\n      } else {\n        setCantPassBadEmail(true);\n        setTimeout(() => {\n          setCantPassBadEmail(false);\n        }, 3000);\n      }\n    } else {\n      let passwordErrorHolder = errorsSignupValues.inputedPassword;\n      let emailErrorHolder = errorsSignupValues.inputedEmail;\n      let usernameErrorHolder = errorsSignupValues.inputedUsername;\n\n      if (!cleanSignupValues.inputedPassword) {\n        passwordErrorHolder = 4;\n      }\n\n      if (!cleanSignupValues.inputedEmail) {\n        emailErrorHolder = 4;\n      }\n\n      if (!cleanSignupValues.inputedUsername) {\n        usernameErrorHolder = 4;\n      }\n\n      setErrorsSignupValues({ ...errorsSignupValues,\n        inputedPassword: passwordErrorHolder,\n        inputedEmail: emailErrorHolder,\n        inputedUsername: usernameErrorHolder\n      });\n    }\n  }; ///\n  ///\n  ///\n  ///\n  ///\n  /// UPDATE SIGN UP DETAILS\n  ///\n  ///\n  ///\n\n\n  const logout = () => {\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/logout`, {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.message === \"cookie deleted\") {\n        alert(\"logout  complete\");\n      } else if (response.data.message === \"cookie null\") {\n        alert(\"logged out  already\");\n      }\n    }).catch(function (error) {\n      alert(\"logout fail\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ServerError, {\n        device: \"pc\",\n        serverEmojiplain: serverEmojiplain,\n        setServerErrorData: setServerErrorData,\n        serverErrorDisplay: serverErrorDisplay,\n        serverErrorData: serverErrorData,\n        darkmode: darkmode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 7\n      }, this)\n    }, void 0, false), loginForm ? matchPc\n    /*PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\n    ?\n    /*#__PURE__*/\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: zoomedModal ? \"zoom-login-logo  make-small-icons-clickable-neutral\" : \"hide-logo \",\n        src: SuperIcon,\n        alt: \"SuperstarZ logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        style: {\n          cursor: \"pointer\",\n          opacity: 0.1,\n          position: \"fixed\",\n          top: \"0.5em\",\n          borderRadius: \"50%\"\n        },\n        children: [\" \", \"....\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n        focus: focusUsername,\n        device: \"pc\",\n        type: true,\n        ErrorDisplay: errorsLoginValues.inputedUsername,\n        darkmode: darkmode,\n        WidthHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldLogin, {\n        darkmode: darkmode,\n        focus: focusUsername,\n        setFocus: setFocusUsername,\n        updateLoginvalues: updateLoginvalues,\n        rawLoginValues: rawLoginValues,\n        ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\n        loginShowPassword: loginShowPassword,\n        size: \"medium\",\n        passwordType: false,\n        withHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldLogin, {\n        darkmode: darkmode,\n        focus: focusPassword,\n        setFocus: setFocusPassword,\n        updateLoginvalues: updateLoginvalues,\n        rawLoginValues: rawLoginValues,\n        ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\n        loginShowPassword: loginShowPassword,\n        size: \"medium\",\n        passwordType: true,\n        withHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n        focus: focusPassword,\n        device: \"pc\",\n        type: false,\n        ErrorDisplay: errorsLoginValues.inputedPassword,\n        darkmode: darkmode,\n        WidthHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          marginTop: \"70px\",\n          zIndex: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: \"buttonpad buttonshake\",\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: logmein,\n            style: loginstyle,\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"large\",\n            color: \"primary\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 15\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n    /*PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\n    :\n    /*#__PURE__*/\n\n    /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n        focus: focusUsername,\n        type: true,\n        device: tabletMobile,\n        ErrorDisplay: errorsLoginValues.inputedUsername,\n        darkmode: darkmode,\n        WidthHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldLogin, {\n        darkmode: darkmode,\n        focus: focusUsername,\n        setFocus: setFocusUsername,\n        updateLoginvalues: updateLoginvalues,\n        rawLoginValues: rawLoginValues,\n        ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\n        loginShowPassword: loginShowPassword,\n        size: fieldSize,\n        passwordType: false,\n        withHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldLogin, {\n        darkmode: darkmode,\n        focus: focusPassword,\n        setFocus: setFocusPassword,\n        updateLoginvalues: updateLoginvalues,\n        rawLoginValues: rawLoginValues,\n        ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\n        loginShowPassword: loginShowPassword,\n        size: fieldSize,\n        passwordType: true,\n        withHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n        focus: focusPassword,\n        type: false,\n        ErrorDisplay: errorsLoginValues.inputedPassword,\n        device: tabletMobile,\n        darkmode: darkmode,\n        WidthHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: \"modal-hold-login\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          sm: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: \"buttonpad buttonshake\",\n          xs: 4,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: logmein,\n            style: loginstyle,\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"large\",\n            color: \"primary\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 15\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n    /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\n    : matchPc\n    /*PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\n    ?\n    /*#__PURE__*/\n    _jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        className: zoomedModal ? \"zoom-signup-logo make-small-icons-clickable-neutral\" : \"hide-logo make-small-icons-clickable-neutral \",\n        src: SuperIcon,\n        alt: \"SuperstarZ logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n        focus: focusEmailSign,\n        device: \"pc\",\n        ErrorType: 0,\n        textField: \"email\",\n        errorFormChecking: errorFormChecking.inputedEmail,\n        WidthHolder: WidthHolder,\n        darkmode: darkmode,\n        type: true,\n        cantPassBadEmail: cantPassBadEmail,\n        ErrorDisplay: emailErrorDisplay,\n        ErrorData: emailErrorData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n        darkmode: darkmode,\n        showFocusTextFieldByHidePadding: showFocusTextFieldByHidePadding,\n        setShowFocusTextFieldByHidePadding: setShowFocusTextFieldByHidePadding,\n        focus: focusEmailSign,\n        setFocus: setFocusEmailSign,\n        updateSignvalues: updateSignvalues,\n        rawSignupValues: rawSignupValues,\n        ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n        signupShowPassword: signupShowPassword,\n        size: \"medium\",\n        emailType: true,\n        passwordType: false,\n        withHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n        focus: focusUsernameSign,\n        device: \"pc\",\n        ErrorType: errorsSignupValues.inputedUsername,\n        textField: \"username\",\n        errorFormChecking: errorFormChecking.inputedUsername,\n        WidthHolder: WidthHolder,\n        darkmode: darkmode,\n        type: true,\n        cantPassBadEmail: cantPassBadEmail,\n        ErrorDisplay: usernameErrorDisplay,\n        ErrorData: usernameErrorData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n        darkmode: darkmode,\n        showFocusTextFieldByHidePadding: showFocusTextFieldByHidePadding,\n        setShowFocusTextFieldByHidePadding: setShowFocusTextFieldByHidePadding,\n        focus: focusUsernameSign,\n        setFocus: setFocusUsernameSign,\n        updateSignvalues: updateSignvalues,\n        rawSignupValues: rawSignupValues,\n        ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n        signupShowPassword: signupShowPassword,\n        size: \"medium\",\n        emailType: false,\n        passwordType: false,\n        withHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n        darkmode: darkmode,\n        showFocusTextFieldByHidePadding: showFocusTextFieldByHidePadding,\n        setShowFocusTextFieldByHidePadding: setShowFocusTextFieldByHidePadding,\n        focus: focusPasswordSign,\n        setFocus: setFocusPasswordSign,\n        updateSignvalues: updateSignvalues,\n        rawSignupValues: rawSignupValues,\n        ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n        signupShowPassword: signupShowPassword,\n        size: \"medium\",\n        emailType: false,\n        passwordType: true,\n        withHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n        focus: focusPasswordSign,\n        device: \"pc\",\n        ErrorType: 0,\n        textField: \"password\",\n        errorFormChecking: errorFormChecking.inputedPassword,\n        darkmode: darkmode,\n        WidthHolder: WidthHolder,\n        type: false,\n        cantPassBadEmail: cantPassBadEmail,\n        ErrorDisplay: passwordErrorDisplay,\n        ErrorData: passwordErrorData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: \"modal-hold-signup\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: \"buttonpad buttonshake\",\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: signupstyle,\n            onClick: signmeup,\n            fullWidth: true,\n            variant: \"contained\",\n            size: \"large\",\n            color: \"secondary\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true)\n    /*PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\n    :\n    /*#__PURE__*/\n\n    /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\n    _jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n        focus: focusEmailSign,\n        device: tabletMobile,\n        ErrorType: 0,\n        textField: \"email\",\n        errorFormChecking: errorFormChecking.inputedEmail,\n        WidthHolder: WidthHolder,\n        darkmode: darkmode,\n        type: true,\n        cantPassBadEmail: cantPassBadEmail,\n        ErrorDisplay: emailErrorDisplay,\n        ErrorData: emailErrorData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n        darkmode: darkmode,\n        showFocusTextFieldByHidePadding: showFocusTextFieldByHidePadding,\n        setShowFocusTextFieldByHidePadding: setShowFocusTextFieldByHidePadding,\n        focus: focusEmailSign,\n        setFocus: setFocusEmailSign,\n        updateSignvalues: updateSignvalues,\n        rawSignupValues: rawSignupValues,\n        ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n        signupShowPassword: signupShowPassword,\n        size: fieldSize,\n        emailType: true,\n        passwordType: false,\n        withHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n        focus: focusUsernameSign,\n        device: tabletMobile,\n        ErrorType: errorsSignupValues.inputedUsername,\n        textField: \"username\",\n        errorFormChecking: errorFormChecking.inputedUsername,\n        WidthHolder: WidthHolder,\n        darkmode: darkmode,\n        type: true,\n        cantPassBadEmail: cantPassBadEmail,\n        ErrorDisplay: usernameErrorDisplay,\n        ErrorData: usernameErrorData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 984,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n        darkmode: darkmode,\n        showFocusTextFieldByHidePadding: showFocusTextFieldByHidePadding,\n        setShowFocusTextFieldByHidePadding: setShowFocusTextFieldByHidePadding,\n        focus: focusUsernameSign,\n        setFocus: setFocusUsernameSign,\n        updateSignvalues: updateSignvalues,\n        rawSignupValues: rawSignupValues,\n        ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n        signupShowPassword: signupShowPassword,\n        size: fieldSize,\n        emailType: false,\n        passwordType: false,\n        withHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n        darkmode: darkmode,\n        showFocusTextFieldByHidePadding: showFocusTextFieldByHidePadding,\n        setShowFocusTextFieldByHidePadding: setShowFocusTextFieldByHidePadding,\n        focus: focusPasswordSign,\n        setFocus: setFocusPasswordSign,\n        updateSignvalues: updateSignvalues,\n        rawSignupValues: rawSignupValues,\n        ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n        signupShowPassword: signupShowPassword,\n        size: fieldSize,\n        emailType: false,\n        passwordType: true,\n        withHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1014,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n        focus: focusPasswordSign,\n        device: tabletMobile,\n        ErrorType: 0,\n        textField: \"password\",\n        errorFormChecking: errorFormChecking.inputedPassword,\n        darkmode: darkmode,\n        WidthHolder: WidthHolder,\n        type: false,\n        cantPassBadEmail: cantPassBadEmail,\n        ErrorDisplay: passwordErrorDisplay,\n        ErrorData: passwordErrorData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1031,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: \"modal-hold-signup\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          sm: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1045,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: \"buttonpad buttonshake\",\n          xs: 4,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: signupstyle,\n            onClick: signmeup,\n            fullWidth: true,\n            variant: \"contained\",\n            size: \"large\",\n            color: \"secondary\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1047,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true)]\n  }, void 0, true)\n  /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\n  ;\n}\n\n_s(FormHolderx, \"RRf54/Waw278IdzjWaNYcQl12WE=\", false, function () {\n  return [useHistory];\n});\n\n_c = FormHolderx;\nexport const FormHolder = /*#__PURE__*/React.memo(FormHolderx);\n_c2 = FormHolder;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormHolderx\");\n$RefreshReg$(_c2, \"FormHolder\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/log/FormHolder.tsx"],"names":["React","useRef","useState","useCallback","Axios","SuperstarzIconLight","SuperstarzIconDark","TextFieldLogin","TextFieldSignup","ServerError","ModalFormSignupError","ModalFormLoginError","Button","Grid","useHistory","isBrowser","isTablet","FormHolderx","darkmode","zoomedModal","WidthHolder","loginstyle","loginForm","signupstyle","matchPc","matchTablet","focusUsername","setFocusUsername","focusPassword","setFocusPassword","focusUsernameSign","setFocusUsernameSign","focusPasswordSign","setFocusPasswordSign","focusEmailSign","setFocusEmailSign","showFocusTextFieldByHidePadding","setShowFocusTextFieldByHidePadding","fieldSize","tabletMobile","history","SuperIcon","REACT_APP_SUPERSTARZ_URL","process","env","initialLogValue","inputedUsername","inputedPassword","initialCleanLogValue","initialErrorLogValue","rawLoginValues","setRawLoginValues","cleanLoginValues","setCleanLoginValues","errorsLoginValues","setErrorsLoginValues","loginShowPassword","setLoginShowPassword","loginShowPasswordTimer","ShowLoginPasswordForaWhile","current","clearTimeout","setTimeout","updateLoginvalues","e","name","value","target","serverErrorData","setServerErrorData","serverErrorDisplay","setServerErrorDisplay","serverEmojiplain","setserverEmojiplain","logmein","post","values","withCredentials","then","response","data","message","payload","push","pathname","state","userdata","catch","error","affectedTextField","dynamicError","request","passwordErrorHolder","usernameErrorHolder","initialRawSignValue","inputedEmail","initialCleanSignValue","initialErrorSignValue","rawSignupValues","setRawSignupValues","cleanSignupValues","setCleanSignupValues","errorsSignupValues","setErrorsSignupValues","EmailCheckingTimer","UsernameCheckingTimer","initialspinner","errorFormChecking","setErrorFormChecking","PasswordCheckingTimer","signupShowPassword","setSignupShowPassword","signupShowPasswordTimer","cantPassBadEmail","setCantPassBadEmail","usernameErrorData","usernameErrorDisplay","emailErrorData","emailErrorDisplay","passwordErrorData","passwordErrorDisplay","ShowSignupPasswordForaWhile","updateSignvalues","usernameCleaner","cleanValue","replace","usernameLimiter","finalUsername","checkUsernameClean","test","checkUsernameLimited","userNameLength","length","emailValidation","emailCleaner","finalEmail","checkEmailClean","checkEmailValidated","String","toLowerCase","passwordLength","signmeup","console","log","status","alert","textFieldParam","errors","param","msg","emailErrorHolder","logout","cursor","opacity","position","top","borderRadius","marginTop","zIndex","FormHolder","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport { ImodalLog, IGrid, Ispinnerinterface } from \"./log-Interfaces\";\r\nimport Axios from \"axios\";\r\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\r\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\r\nimport { TextFieldLogin } from \"./TextFieldLogin\";\r\nimport { TextFieldSignup } from \"./TextFieldSignup\";\r\nimport { ServerError } from \"./ServerError\";\r\nimport { ModalFormSignupError } from \"./ModalFormSignupError\";\r\nimport { ModalFormLoginError } from \"./ModalFormLoginError\";\r\nimport { DialogContent, Button, Paper, Grid } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { isBrowser, isTablet } from \"react-device-detect\";\r\n\r\nfunction FormHolderx({\r\n  darkmode,\r\n  zoomedModal,\r\n  WidthHolder,\r\n  loginstyle,\r\n  loginForm,\r\n  signupstyle,\r\n}: any) {\r\n  const matchPc = isBrowser;\r\n  const matchTablet = isTablet;\r\n  const [focusUsername, setFocusUsername] = useState<boolean>(false);\r\n  const [focusPassword, setFocusPassword] = useState<boolean>(false);\r\n\r\n  const [focusUsernameSign, setFocusUsernameSign] = useState<boolean>(false);\r\n  const [focusPasswordSign, setFocusPasswordSign] = useState<boolean>(false);\r\n  const [focusEmailSign, setFocusEmailSign] = useState<boolean>(false);\r\n\r\n  const [showFocusTextFieldByHidePadding, setShowFocusTextFieldByHidePadding] =\r\n    useState<boolean>(false);\r\n\r\n  var fieldSize = \"\";\r\n  var tabletMobile = \"\";\r\n  if (matchTablet) {\r\n    fieldSize = \"smallTablet\";\r\n    tabletMobile = \"Tablet\";\r\n  } else {\r\n    fieldSize = \"small\";\r\n    tabletMobile = \"Mobile\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///HISTORY VARIABLE\r\n  const history = useHistory();\r\n  ///\r\n\r\n  ///\r\n  ///\r\n  ///SUPERSTARZ ICON SELECT\r\n  var SuperIcon = \"\";\r\n  darkmode\r\n    ? (SuperIcon = SuperstarzIconDark)\r\n    : (SuperIcon = SuperstarzIconLight);\r\n\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n  ///\r\n  ///\r\n  ///LOGGING UPDATE VALUES DETAILS\r\n  const initialLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialCleanLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialErrorLogValue = {\r\n    inputedUsername: 0,\r\n    inputedPassword: 0,\r\n  };\r\n  const [rawLoginValues, setRawLoginValues] = useState(initialLogValue);\r\n  const [cleanLoginValues, setCleanLoginValues] =\r\n    useState(initialCleanLogValue);\r\n  const [errorsLoginValues, setErrorsLoginValues] =\r\n    useState(initialErrorLogValue);\r\n  const [loginShowPassword, setLoginShowPassword] = useState<boolean>(false);\r\n  const loginShowPasswordTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW  LOGIN PASSWORD FOR A WHILE\r\n  const ShowLoginPasswordForaWhile = useCallback(() => {\r\n    if (loginShowPasswordTimer.current) {\r\n      clearTimeout(loginShowPasswordTimer.current);\r\n    }\r\n    setLoginShowPassword(!loginShowPassword);\r\n    loginShowPasswordTimer.current = setTimeout(() => {\r\n      setLoginShowPassword(false);\r\n    }, 2000);\r\n  }, [loginShowPassword]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\r\n  const updateLoginvalues = useCallback(\r\n    (e: any) => {\r\n      const { name, value } = e.target;\r\n      setErrorsLoginValues({ ...errorsLoginValues, [name]: 0 });\r\n      setRawLoginValues({ ...rawLoginValues, [name]: value });\r\n      setCleanLoginValues({ ...cleanLoginValues, [name]: value });\r\n    },\r\n\r\n    [errorsLoginValues, rawLoginValues, cleanLoginValues]\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SENDING LOGIN  DATA TO SERVER SIDE\r\n  const [serverErrorData, setServerErrorData] = useState<string | null>(null);\r\n  const [serverErrorDisplay, setServerErrorDisplay] = useState<number>(0);\r\n  const [serverEmojiplain, setserverEmojiplain] = useState<boolean>(true);\r\n\r\n  const logmein = () => {\r\n    if (cleanLoginValues.inputedUsername && cleanLoginValues.inputedPassword) {\r\n      Axios.post(\r\n        `http://${REACT_APP_SUPERSTARZ_URL}/loging`,\r\n        {\r\n          values: cleanLoginValues,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n        .then((response) => {\r\n          if (response.data.message === \"Wrong Password\") {\r\n            setServerErrorData(\"wrong username and  password combination\");\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(false);\r\n          } else {\r\n            if (response.data.message === \"Wrong username\") {\r\n              setServerErrorData(\"username does not exist\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(false);\r\n            } else if (response.data.payload) {\r\n              history.push({\r\n                pathname: \"/supercheck\",\r\n                state: { userdata: response.data.payload },\r\n              });\r\n            } else {\r\n              setServerErrorData(\"user info could not be retrieved\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(false);\r\n            }\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          if (error.response) {\r\n            // Request made and server responded\r\n            //express typo can activate this\r\n            // Request made and server responded\r\n            //express typo can activate this\r\n            //let textFieldParam = error.response.data.error.errors[0].param;\r\n            let affectedTextField = \"wrong password and username combination\";\r\n\r\n            let dynamicError = `${affectedTextField}  `;\r\n            setServerErrorData(dynamicError);\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(false);\r\n          } else if (error.request) {\r\n            // The request was made but no response was received Or request not made\r\n            // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n            setServerErrorData(\r\n              \"error connecting to server, check your connection\"\r\n            );\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(true);\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            setServerErrorData(\"request setup failed , pls try again\");\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(true);\r\n          }\r\n        });\r\n    } else {\r\n      let passwordErrorHolder = errorsLoginValues.inputedPassword;\r\n\r\n      let usernameErrorHolder = errorsLoginValues.inputedUsername;\r\n\r\n      if (!cleanLoginValues.inputedPassword) {\r\n        passwordErrorHolder = 1;\r\n      }\r\n\r\n      if (!cleanLoginValues.inputedUsername) {\r\n        usernameErrorHolder = 1;\r\n      }\r\n\r\n      setErrorsLoginValues({\r\n        ...errorsLoginValues,\r\n        inputedPassword: passwordErrorHolder,\r\n        inputedUsername: usernameErrorHolder,\r\n      });\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///UPDATE SIGN UP DETAILS\r\n  ///\r\n  ///\r\n  ///\r\n  /// SANITISE SIGN UP FORM INPUT CLIENT\r\n  const initialRawSignValue = {\r\n    inputedEmail: \"\",\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialCleanSignValue = {\r\n    inputedEmail: \"\",\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n\r\n  const initialErrorSignValue = {\r\n    inputedEmail: 0,\r\n    inputedUsername: 0,\r\n    inputedPassword: 0,\r\n  };\r\n\r\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\r\n  const [cleanSignupValues, setCleanSignupValues] = useState(\r\n    initialCleanSignValue\r\n  );\r\n  const [errorsSignupValues, setErrorsSignupValues] = useState(\r\n    initialErrorSignValue\r\n  );\r\n\r\n  const EmailCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const UsernameCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const initialspinner: Ispinnerinterface = {\r\n    inputedUsername: false,\r\n    inputedPassword: false,\r\n    inputedEmail: false,\r\n  };\r\n\r\n  const [errorFormChecking, setErrorFormChecking] = useState(initialspinner);\r\n  const PasswordCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const [signupShowPassword, setSignupShowPassword] = useState<boolean>(false);\r\n  const signupShowPasswordTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const [cantPassBadEmail, setCantPassBadEmail] = useState<boolean>(false);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///SIGN UP ERROR VARIABLES\r\n  let usernameErrorData = null;\r\n  let usernameErrorDisplay = 0;\r\n\r\n  let emailErrorData = null;\r\n  let emailErrorDisplay = 0;\r\n\r\n  let passwordErrorData = null;\r\n  let passwordErrorDisplay = 0;\r\n\r\n  switch (errorsSignupValues.inputedUsername) {\r\n    case 1:\r\n      usernameErrorData =\r\n        \"usernames can only use letters, numbers, underscores and periods \";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 2:\r\n      usernameErrorData = \"username is taken\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 3:\r\n      usernameErrorData = \"username is available\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 4:\r\n      usernameErrorData = \"username  required\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      usernameErrorData = null;\r\n      usernameErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  switch (errorsSignupValues.inputedPassword) {\r\n    case 1:\r\n      passwordErrorData = \"password must be at Least 8 characters\";\r\n      passwordErrorDisplay = 1;\r\n      break;\r\n\r\n    case 2:\r\n      passwordErrorData = \"checking\";\r\n      passwordErrorDisplay = 1;\r\n\r\n      break;\r\n    case 4:\r\n      passwordErrorData = \" password  required \";\r\n      passwordErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      passwordErrorData = null;\r\n      passwordErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  switch (errorsSignupValues.inputedEmail) {\r\n    case 1:\r\n      emailErrorData = \"checking\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 2:\r\n      emailErrorData = \"email address is not valid\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 3:\r\n      emailErrorData = \"email is restricted to certain characters\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 4:\r\n      emailErrorData = \"email required\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      emailErrorData = null;\r\n      emailErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///SIGN UP ERROR VARIABLES\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW  SIGNUP PASSWORD FOR A WHILE\r\n  const ShowSignupPasswordForaWhile = useCallback(() => {\r\n    if (signupShowPasswordTimer.current) {\r\n      clearTimeout(signupShowPasswordTimer.current);\r\n    }\r\n    setSignupShowPassword(!signupShowPassword);\r\n    signupShowPasswordTimer.current = setTimeout(() => {\r\n      setSignupShowPassword(false);\r\n    }, 2000);\r\n  }, [signupShowPassword]);\r\n\r\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\r\n  const updateSignvalues = useCallback(\r\n    (e: any) => {\r\n      const { name, value } = e.target;\r\n\r\n      if (name === \"inputedUsername\") {\r\n        let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\r\n        let cleanValue = value.replace(usernameCleaner, \"\");\r\n\r\n        let usernameLimiter = /^.{26}$/;\r\n        let finalUsername = cleanValue.replace(usernameLimiter, \"\");\r\n\r\n        let checkUsernameClean = usernameCleaner.test(value);\r\n        let checkUsernameLimited = usernameLimiter.test(cleanValue);\r\n\r\n        if (checkUsernameClean) {\r\n          if (UsernameCheckingTimer.current) {\r\n            clearTimeout(UsernameCheckingTimer.current);\r\n            setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n          }\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n        } else {\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n        }\r\n\r\n        let userNameLength = finalUsername.length;\r\n\r\n        if (checkUsernameClean) {\r\n        } else {\r\n          if (checkUsernameLimited || userNameLength > 26) {\r\n          } else {\r\n            setRawSignupValues({\r\n              ...rawSignupValues,\r\n              [name]: finalUsername,\r\n            });\r\n            setCleanSignupValues({\r\n              ...cleanSignupValues,\r\n              [name]: finalUsername,\r\n            });\r\n            /// AXIOS REQUEST FOR CHECK USERNAME\r\n            if (UsernameCheckingTimer.current) {\r\n              clearTimeout(UsernameCheckingTimer.current);\r\n              setErrorFormChecking({\r\n                ...errorFormChecking,\r\n                [name]: false,\r\n              });\r\n              setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n            }\r\n            setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n            setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n            UsernameCheckingTimer.current = setTimeout(() => {\r\n              if (value.length === 0) {\r\n                setErrorsSignupValues({\r\n                  ...errorsSignupValues,\r\n                  [name]: 0,\r\n                });\r\n                setErrorFormChecking({\r\n                  ...errorFormChecking,\r\n                  [name]: false,\r\n                });\r\n              } else {\r\n                Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/usernamecheck`, {\r\n                  value: finalUsername,\r\n                })\r\n                  .then((response) => {\r\n                    if (response.data.message === \"username is not unique\") {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 2,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    } else if (\r\n                      response.data.message === \"username is available\"\r\n                    ) {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 3,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    } else {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 0,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    }\r\n                  })\r\n                  .catch(function (error) {\r\n                    if (error.response) {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 0,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    } else if (error.request) {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 0,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    } else {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 0,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    }\r\n                  });\r\n              }\r\n            }, 3000);\r\n            /// AXIOS REQUEST FOR CHECK USERNAME\r\n          }\r\n        }\r\n        ///\r\n      } else if (name === \"inputedEmail\") {\r\n        const emailValidation =\r\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        const emailCleaner = /[^*$%#+@a-z0-9áéíóúñü \\.'_]/gim;\r\n        let finalEmail = value.replace(emailCleaner, \"\");\r\n\r\n        let checkEmailClean = emailCleaner.test(value);\r\n        let checkEmailValidated = emailValidation.test(\r\n          String(value).toLowerCase()\r\n        );\r\n        if (EmailCheckingTimer.current) {\r\n          clearTimeout(EmailCheckingTimer.current);\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n        }\r\n        if (!checkEmailValidated) {\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n          EmailCheckingTimer.current = setTimeout(() => {\r\n            setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n            setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n            checkEmailClean &&\r\n              setErrorsSignupValues({ ...errorsSignupValues, [name]: 3 });\r\n          }, 2000);\r\n        } else {\r\n          if (EmailCheckingTimer.current) {\r\n            clearTimeout(EmailCheckingTimer.current);\r\n            setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n          }\r\n          checkEmailClean\r\n            ? setErrorsSignupValues({ ...errorsSignupValues, [name]: 3 })\r\n            : setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n        }\r\n\r\n        setRawSignupValues({ ...rawSignupValues, [name]: finalEmail });\r\n        setCleanSignupValues({ ...cleanSignupValues, [name]: finalEmail });\r\n        ////////\r\n      } else {\r\n        if (PasswordCheckingTimer.current) {\r\n          clearTimeout(PasswordCheckingTimer.current);\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n        }\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n\r\n        setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n        PasswordCheckingTimer.current = setTimeout(() => {\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n        }, 2000);\r\n\r\n        var passwordLength = value.length;\r\n\r\n        if (passwordLength >= 8 || passwordLength === 0) {\r\n          if (PasswordCheckingTimer.current) {\r\n            clearTimeout(PasswordCheckingTimer.current);\r\n            setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n          }\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n        }\r\n        setRawSignupValues({ ...rawSignupValues, [name]: value });\r\n        setCleanSignupValues({ ...cleanSignupValues, [name]: value });\r\n      }\r\n    },\r\n    [cleanSignupValues, rawSignupValues, errorsSignupValues, errorFormChecking]\r\n  );\r\n  ///\r\n  ///\r\n  ///\r\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\r\n  const signmeup = () => {\r\n    if (\r\n      cleanSignupValues.inputedEmail &&\r\n      cleanSignupValues.inputedUsername &&\r\n      cleanSignupValues.inputedPassword &&\r\n      errorsSignupValues.inputedPassword === 0\r\n    ) {\r\n      if (errorsSignupValues.inputedEmail === 0) {\r\n        Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/registration`, {\r\n          values: cleanSignupValues,\r\n        })\r\n          .then((response) => {\r\n            if (response.data.message === \"username not unique\") {\r\n              setServerErrorData(\"username is taken\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            } else if (response.data.message === \"Registration Successful\") {\r\n              console.log(response.status);\r\n              alert(\"REGISTRATION COMPLETE\");\r\n            } else {\r\n              setServerErrorData(\"something went wrong\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            if (error.response) {\r\n              // Request made and server responded\r\n              //express typo can activate this\r\n              let textFieldParam = error.response.data.error.errors[0].param;\r\n              let affectedTextField = \" \";\r\n\r\n              if (textFieldParam === \"values.inputedPassword\") {\r\n                affectedTextField = \"password must be at least 8 characters\";\r\n              } else if (textFieldParam === \"values.inputedEmail\") {\r\n                affectedTextField = \"email address is not valid\";\r\n              } else {\r\n                affectedTextField =\r\n                  \"usernames use letters, numbers, underscores and periods\";\r\n              }\r\n              let dynamicError = `${affectedTextField}.  ${error.response.data.error.errors[0].msg} `;\r\n              setServerErrorData(dynamicError);\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            } else if (error.request) {\r\n              // The request was made but no response was received Or request not made\r\n              // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n              setServerErrorData(\r\n                \"error connecting to server, check your connection\"\r\n              );\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            } else {\r\n              // Something happened in setting up the request that triggered an Error\r\n              setServerErrorData(\"request setup failed , pls try again\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            }\r\n          });\r\n      } else {\r\n        setCantPassBadEmail(true);\r\n        setTimeout(() => {\r\n          setCantPassBadEmail(false);\r\n        }, 3000);\r\n      }\r\n    } else {\r\n      let passwordErrorHolder = errorsSignupValues.inputedPassword;\r\n      let emailErrorHolder = errorsSignupValues.inputedEmail;\r\n      let usernameErrorHolder = errorsSignupValues.inputedUsername;\r\n\r\n      if (!cleanSignupValues.inputedPassword) {\r\n        passwordErrorHolder = 4;\r\n      }\r\n      if (!cleanSignupValues.inputedEmail) {\r\n        emailErrorHolder = 4;\r\n      }\r\n      if (!cleanSignupValues.inputedUsername) {\r\n        usernameErrorHolder = 4;\r\n      }\r\n\r\n      setErrorsSignupValues({\r\n        ...errorsSignupValues,\r\n        inputedPassword: passwordErrorHolder,\r\n        inputedEmail: emailErrorHolder,\r\n        inputedUsername: usernameErrorHolder,\r\n      });\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n  /// UPDATE SIGN UP DETAILS\r\n\r\n  ///\r\n  ///\r\n  ///\r\n\r\n  const logout = () => {\r\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/logout`, {\r\n      withCredentials: true,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.message === \"cookie deleted\") {\r\n          alert(\"logout  complete\");\r\n        } else if (response.data.message === \"cookie null\") {\r\n          alert(\"logged out  already\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"logout fail\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n   \r\n   <>\r\n      <ServerError\r\n        device=\"pc\"\r\n        serverEmojiplain={serverEmojiplain}\r\n        setServerErrorData={setServerErrorData}\r\n        serverErrorDisplay={serverErrorDisplay}\r\n        serverErrorData={serverErrorData}\r\n        darkmode={darkmode}\r\n      /></>\r\n      {loginForm ? (\r\n        matchPc /*PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */ ? (\r\n          <>\r\n            <img\r\n              className={\r\n                zoomedModal\r\n                  ? \"zoom-login-logo  make-small-icons-clickable-neutral\"\r\n                  : \"hide-logo \"\r\n              }\r\n              src={SuperIcon}\r\n              alt=\"SuperstarZ logo\"\r\n            />\r\n            <button\r\n              onClick={logout}\r\n              style={{\r\n                cursor: \"pointer\",\r\n                opacity: 0.1,\r\n                position: \"fixed\",\r\n                top: \"0.5em\",\r\n                borderRadius: \"50%\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              ....\r\n            </button>\r\n            <ModalFormLoginError\r\n              focus={focusUsername}\r\n              device=\"pc\"\r\n              type={true}\r\n              ErrorDisplay={errorsLoginValues.inputedUsername}\r\n              darkmode={darkmode}\r\n              WidthHolder={WidthHolder}\r\n            />\r\n            <TextFieldLogin\r\n              darkmode={darkmode}\r\n              focus={focusUsername}\r\n              setFocus={setFocusUsername}\r\n              updateLoginvalues={updateLoginvalues}\r\n              rawLoginValues={rawLoginValues}\r\n              ShowLoginPasswordForaWhile={ShowLoginPasswordForaWhile}\r\n              loginShowPassword={loginShowPassword}\r\n              size=\"medium\"\r\n              passwordType={false}\r\n              withHolder={WidthHolder}\r\n            />\r\n            <TextFieldLogin\r\n              darkmode={darkmode}\r\n              focus={focusPassword}\r\n              setFocus={setFocusPassword}\r\n              updateLoginvalues={updateLoginvalues}\r\n              rawLoginValues={rawLoginValues}\r\n              ShowLoginPasswordForaWhile={ShowLoginPasswordForaWhile}\r\n              loginShowPassword={loginShowPassword}\r\n              size=\"medium\"\r\n              passwordType={true}\r\n              withHolder={WidthHolder}\r\n            />\r\n            <ModalFormLoginError\r\n              focus={focusPassword}\r\n              device=\"pc\"\r\n              type={false}\r\n              ErrorDisplay={errorsLoginValues.inputedPassword}\r\n              darkmode={darkmode}\r\n              WidthHolder={WidthHolder}\r\n            />\r\n            <Grid container style={{ marginTop: \"70px\", zIndex: 300 }}>\r\n              <Grid item xs={4}></Grid>\r\n              <Grid item className=\"buttonpad buttonshake\" xs={4}>\r\n                <Button\r\n                  onClick={logmein}\r\n                  style={loginstyle}\r\n                  fullWidth={true}\r\n                  variant=\"outlined\"\r\n                  size=\"large\"\r\n                  color=\"primary\"\r\n                >\r\n                  Log In\r\n                </Button>\r\n              </Grid>{\" \"}\r\n            </Grid>\r\n          </> /*PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\r\n        ) : (\r\n          /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\r\n          <>\r\n            <ModalFormLoginError\r\n              focus={focusUsername}\r\n              type={true}\r\n              device={tabletMobile}\r\n              ErrorDisplay={errorsLoginValues.inputedUsername}\r\n              darkmode={darkmode}\r\n              WidthHolder={WidthHolder}\r\n            />\r\n            <TextFieldLogin\r\n              darkmode={darkmode}\r\n              focus={focusUsername}\r\n              setFocus={setFocusUsername}\r\n              updateLoginvalues={updateLoginvalues}\r\n              rawLoginValues={rawLoginValues}\r\n              ShowLoginPasswordForaWhile={ShowLoginPasswordForaWhile}\r\n              loginShowPassword={loginShowPassword}\r\n              size={fieldSize}\r\n              passwordType={false}\r\n              withHolder={WidthHolder}\r\n            />\r\n            <TextFieldLogin\r\n              darkmode={darkmode}\r\n              focus={focusPassword}\r\n              setFocus={setFocusPassword}\r\n              updateLoginvalues={updateLoginvalues}\r\n              rawLoginValues={rawLoginValues}\r\n              ShowLoginPasswordForaWhile={ShowLoginPasswordForaWhile}\r\n              loginShowPassword={loginShowPassword}\r\n              size={fieldSize}\r\n              passwordType={true}\r\n              withHolder={WidthHolder}\r\n            />\r\n            <ModalFormLoginError\r\n              focus={focusPassword}\r\n              type={false}\r\n              ErrorDisplay={errorsLoginValues.inputedPassword}\r\n              device={tabletMobile}\r\n              darkmode={darkmode}\r\n              WidthHolder={WidthHolder}\r\n            />\r\n            <Grid container className=\"modal-hold-login\">\r\n              <Grid item xs={4} sm={5}></Grid>\r\n              <Grid item className=\"buttonpad buttonshake\" xs={4} sm={2}>\r\n                <Button\r\n                  onClick={logmein}\r\n                  style={loginstyle}\r\n                  fullWidth={true}\r\n                  variant=\"outlined\"\r\n                  size=\"large\"\r\n                  color=\"primary\"\r\n                >\r\n                  Log In\r\n                </Button>\r\n              </Grid>{\" \"}\r\n            </Grid>\r\n          </> /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\r\n        )\r\n      ) : matchPc /*PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */ ? (\r\n        <>\r\n          {\" \"}\r\n          <img\r\n            className={\r\n              zoomedModal\r\n                ? \"zoom-signup-logo make-small-icons-clickable-neutral\"\r\n                : \"hide-logo make-small-icons-clickable-neutral \"\r\n            }\r\n            src={SuperIcon}\r\n            alt=\"SuperstarZ logo\"\r\n          />\r\n          <ModalFormSignupError\r\n            focus={focusEmailSign}\r\n            device=\"pc\"\r\n            ErrorType={0}\r\n            textField=\"email\"\r\n            errorFormChecking={errorFormChecking.inputedEmail}\r\n            WidthHolder={WidthHolder}\r\n            darkmode={darkmode}\r\n            type={true}\r\n            cantPassBadEmail={cantPassBadEmail}\r\n            ErrorDisplay={emailErrorDisplay}\r\n            ErrorData={emailErrorData}\r\n          />\r\n          <TextFieldSignup\r\n            darkmode={darkmode}\r\n            showFocusTextFieldByHidePadding={showFocusTextFieldByHidePadding}\r\n            setShowFocusTextFieldByHidePadding={\r\n              setShowFocusTextFieldByHidePadding\r\n            }\r\n            focus={focusEmailSign}\r\n            setFocus={setFocusEmailSign}\r\n            updateSignvalues={updateSignvalues}\r\n            rawSignupValues={rawSignupValues}\r\n            ShowSignupPasswordForaWhile={ShowSignupPasswordForaWhile}\r\n            signupShowPassword={signupShowPassword}\r\n            size=\"medium\"\r\n            emailType={true}\r\n            passwordType={false}\r\n            withHolder={WidthHolder}\r\n          />\r\n          <ModalFormSignupError\r\n            focus={focusUsernameSign}\r\n            device=\"pc\"\r\n            ErrorType={errorsSignupValues.inputedUsername}\r\n            textField=\"username\"\r\n            errorFormChecking={errorFormChecking.inputedUsername}\r\n            WidthHolder={WidthHolder}\r\n            darkmode={darkmode}\r\n            type={true}\r\n            cantPassBadEmail={cantPassBadEmail}\r\n            ErrorDisplay={usernameErrorDisplay}\r\n            ErrorData={usernameErrorData}\r\n          />\r\n          <TextFieldSignup\r\n            darkmode={darkmode}\r\n            showFocusTextFieldByHidePadding={showFocusTextFieldByHidePadding}\r\n            setShowFocusTextFieldByHidePadding={\r\n              setShowFocusTextFieldByHidePadding\r\n            }\r\n            focus={focusUsernameSign}\r\n            setFocus={setFocusUsernameSign}\r\n            updateSignvalues={updateSignvalues}\r\n            rawSignupValues={rawSignupValues}\r\n            ShowSignupPasswordForaWhile={ShowSignupPasswordForaWhile}\r\n            signupShowPassword={signupShowPassword}\r\n            size=\"medium\"\r\n            emailType={false}\r\n            passwordType={false}\r\n            withHolder={WidthHolder}\r\n          />\r\n          <TextFieldSignup\r\n            darkmode={darkmode}\r\n            showFocusTextFieldByHidePadding={showFocusTextFieldByHidePadding}\r\n            setShowFocusTextFieldByHidePadding={\r\n              setShowFocusTextFieldByHidePadding\r\n            }\r\n            focus={focusPasswordSign}\r\n            setFocus={setFocusPasswordSign}\r\n            updateSignvalues={updateSignvalues}\r\n            rawSignupValues={rawSignupValues}\r\n            ShowSignupPasswordForaWhile={ShowSignupPasswordForaWhile}\r\n            signupShowPassword={signupShowPassword}\r\n            size=\"medium\"\r\n            emailType={false}\r\n            passwordType={true}\r\n            withHolder={WidthHolder}\r\n          />\r\n          <ModalFormSignupError\r\n            focus={focusPasswordSign}\r\n            device=\"pc\"\r\n            ErrorType={0}\r\n            textField=\"password\"\r\n            errorFormChecking={errorFormChecking.inputedPassword}\r\n            darkmode={darkmode}\r\n            WidthHolder={WidthHolder}\r\n            type={false}\r\n            cantPassBadEmail={cantPassBadEmail}\r\n            ErrorDisplay={passwordErrorDisplay}\r\n            ErrorData={passwordErrorData}\r\n          />\r\n          <Grid container className=\"modal-hold-signup\">\r\n            <Grid item xs={4}></Grid>\r\n            <Grid item className=\"buttonpad buttonshake\" xs={4}>\r\n              <Button\r\n                style={signupstyle}\r\n                onClick={signmeup}\r\n                fullWidth={true}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"secondary\"\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Grid>{\" \"}\r\n          </Grid>{\" \"}\r\n        </> /*PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\r\n      ) : (\r\n        /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\r\n        <>\r\n          {\" \"}\r\n          <ModalFormSignupError\r\n            focus={focusEmailSign}\r\n            device={tabletMobile}\r\n            ErrorType={0}\r\n            textField=\"email\"\r\n            errorFormChecking={errorFormChecking.inputedEmail}\r\n            WidthHolder={WidthHolder}\r\n            darkmode={darkmode}\r\n            type={true}\r\n            cantPassBadEmail={cantPassBadEmail}\r\n            ErrorDisplay={emailErrorDisplay}\r\n            ErrorData={emailErrorData}\r\n          />\r\n          <TextFieldSignup\r\n            darkmode={darkmode}\r\n            showFocusTextFieldByHidePadding={showFocusTextFieldByHidePadding}\r\n            setShowFocusTextFieldByHidePadding={\r\n              setShowFocusTextFieldByHidePadding\r\n            }\r\n            focus={focusEmailSign}\r\n            setFocus={setFocusEmailSign}\r\n            updateSignvalues={updateSignvalues}\r\n            rawSignupValues={rawSignupValues}\r\n            ShowSignupPasswordForaWhile={ShowSignupPasswordForaWhile}\r\n            signupShowPassword={signupShowPassword}\r\n            size={fieldSize}\r\n            emailType={true}\r\n            passwordType={false}\r\n            withHolder={WidthHolder}\r\n          />\r\n          <ModalFormSignupError\r\n            focus={focusUsernameSign}\r\n            device={tabletMobile}\r\n            ErrorType={errorsSignupValues.inputedUsername}\r\n            textField=\"username\"\r\n            errorFormChecking={errorFormChecking.inputedUsername}\r\n            WidthHolder={WidthHolder}\r\n            darkmode={darkmode}\r\n            type={true}\r\n            cantPassBadEmail={cantPassBadEmail}\r\n            ErrorDisplay={usernameErrorDisplay}\r\n            ErrorData={usernameErrorData}\r\n          />\r\n          <TextFieldSignup\r\n            darkmode={darkmode}\r\n            showFocusTextFieldByHidePadding={showFocusTextFieldByHidePadding}\r\n            setShowFocusTextFieldByHidePadding={\r\n              setShowFocusTextFieldByHidePadding\r\n            }\r\n            focus={focusUsernameSign}\r\n            setFocus={setFocusUsernameSign}\r\n            updateSignvalues={updateSignvalues}\r\n            rawSignupValues={rawSignupValues}\r\n            ShowSignupPasswordForaWhile={ShowSignupPasswordForaWhile}\r\n            signupShowPassword={signupShowPassword}\r\n            size={fieldSize}\r\n            emailType={false}\r\n            passwordType={false}\r\n            withHolder={WidthHolder}\r\n          />\r\n          <TextFieldSignup\r\n            darkmode={darkmode}\r\n            showFocusTextFieldByHidePadding={showFocusTextFieldByHidePadding}\r\n            setShowFocusTextFieldByHidePadding={\r\n              setShowFocusTextFieldByHidePadding\r\n            }\r\n            focus={focusPasswordSign}\r\n            setFocus={setFocusPasswordSign}\r\n            updateSignvalues={updateSignvalues}\r\n            rawSignupValues={rawSignupValues}\r\n            ShowSignupPasswordForaWhile={ShowSignupPasswordForaWhile}\r\n            signupShowPassword={signupShowPassword}\r\n            size={fieldSize}\r\n            emailType={false}\r\n            passwordType={true}\r\n            withHolder={WidthHolder}\r\n          />\r\n          <ModalFormSignupError\r\n            focus={focusPasswordSign}\r\n            device={tabletMobile}\r\n            ErrorType={0}\r\n            textField=\"password\"\r\n            errorFormChecking={errorFormChecking.inputedPassword}\r\n            darkmode={darkmode}\r\n            WidthHolder={WidthHolder}\r\n            type={false}\r\n            cantPassBadEmail={cantPassBadEmail}\r\n            ErrorDisplay={passwordErrorDisplay}\r\n            ErrorData={passwordErrorData}\r\n          />\r\n          <Grid container className=\"modal-hold-signup\">\r\n            <Grid item xs={4} sm={5}></Grid>\r\n            <Grid item className=\"buttonpad buttonshake\" xs={4} sm={2}>\r\n              <Button\r\n                style={signupstyle}\r\n                onClick={signmeup}\r\n                fullWidth={true}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"secondary\"\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Grid>{\" \"}\r\n          </Grid>{\" \"}\r\n        </>\r\n      )}\r\n    </>\r\n    /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\r\n  );\r\n}\r\n\r\nexport const FormHolder = React.memo(FormHolderx);\r\n"]},"metadata":{},"sourceType":"module"}