{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\Superstickers.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useLayoutEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Superstickersx({\n  startSuperSticker,\n  itemUploadRef,\n  index\n}) {\n  _s();\n\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const [superImageHolder, setsuperImageHolder] = useState(null);\n  const [OriginalImageHeight, setOriginalImageHeight] = useState(0);\n  const [OriginalImageWidth, setOriginalImageWidth] = useState(0);\n  const canvasRefsticker = useRef(null);\n  useLayoutEffect(() => {\n    const Newstickfilter = new Image();\n    Newstickfilter.src = itemUploadRef.current[index].src;\n\n    Newstickfilter.onload = function () {\n      const ctx = canvasRefsticker.current.getContext(\"2d\");\n\n      if (superImageHolder === Newstickfilter) {} else {\n        setsuperImageHolder(Newstickfilter);\n      }\n\n      if (OriginalImageHeight === Newstickfilter.naturalHeight) {} else {\n        setOriginalImageHeight(Newstickfilter.naturalHeight);\n      } //\n\n\n      if (OriginalImageWidth === Newstickfilter.naturalWidth) {} else {\n        setOriginalImageWidth(Newstickfilter.naturalWidth);\n      }\n    };\n  }, [startSuperSticker]);\n  useLayoutEffect(() => {\n    if (superImageHolder && canvasRefsticker.current) {\n      const ctx = canvasRefsticker.current.getContext(\"2d\");\n      canvasRefsticker.current.width = OriginalImageWidth;\n      canvasRefsticker.current.height = OriginalImageHeight;\n      ctx.drawImage(superImageHolder, 0, 0);\n      var scalehh = window.innerHeight / OriginalImageHeight;\n      var widthx = OriginalImageWidth * scalehh;\n      canvasRefsticker.current.style.width = `${widthx}px`;\n      canvasRefsticker.current.style.height = `${window.innerHeight}px`;\n    }\n  }, [superImageHolder, OriginalImageWidth, OriginalImageHeight]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        margin: \"auto\",\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: darkmodeReducer ? \"turlightpostdarkx\" : \"turlightpostlightx\",\n      ref: canvasRefsticker,\n      style: {\n        padding: \"0px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Superstickersx, \"ZFI2JJ6K+S7QAa+1uX7DiQrIwYE=\", false, function () {\n  return [useSelector];\n});\n\n_c = Superstickersx;\nexport const Superstickers = /*#__PURE__*/React.memo(Superstickersx);\n_c2 = Superstickers;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Superstickersx\");\n$RefreshReg$(_c2, \"Superstickers\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/Superstickers.tsx"],"names":["React","useRef","useState","useLayoutEffect","useSelector","Superstickersx","startSuperSticker","itemUploadRef","index","darkmode","state","GlobalReducer","darkmodeReducer","superImageHolder","setsuperImageHolder","OriginalImageHeight","setOriginalImageHeight","OriginalImageWidth","setOriginalImageWidth","canvasRefsticker","Newstickfilter","Image","src","current","onload","ctx","getContext","naturalHeight","naturalWidth","width","height","drawImage","scalehh","window","innerHeight","widthx","style","margin","padding","Superstickers","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { Grid, GridSize } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { ImageTobeFiltered } from \"./ImageTobeFiltered\";\r\nimport { FilterModeArrow } from \"./FilterModeArrow\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { convertHexToRGB } from \"material-ui/utils/colorManipulator\";\r\n\r\nfunction Superstickersx({\r\n  startSuperSticker,\r\n  itemUploadRef,\r\n  index,\r\n}: any): JSX.Element {\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  const [superImageHolder, setsuperImageHolder] = useState<any>(null);\r\n\r\n  const [OriginalImageHeight, setOriginalImageHeight] = useState<number>(0);\r\n\r\n  const [OriginalImageWidth, setOriginalImageWidth] = useState<number>(0);\r\n\r\n  const canvasRefsticker: any = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    const Newstickfilter: any = new Image();\r\n\r\n    Newstickfilter.src = itemUploadRef.current[index].src;\r\n\r\n    Newstickfilter.onload = function () {\r\n      const ctx = canvasRefsticker.current.getContext(\"2d\");\r\n\r\n      if (superImageHolder === Newstickfilter) {\r\n      } else {\r\n        setsuperImageHolder(Newstickfilter);\r\n      }\r\n\r\n      if (OriginalImageHeight === Newstickfilter.naturalHeight) {\r\n      } else {\r\n        setOriginalImageHeight(Newstickfilter.naturalHeight);\r\n      }\r\n      //\r\n      if (OriginalImageWidth === Newstickfilter.naturalWidth) {\r\n      } else {\r\n        setOriginalImageWidth(Newstickfilter.naturalWidth);\r\n      }\r\n    };\r\n  }, [startSuperSticker]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (superImageHolder && canvasRefsticker.current) {\r\n      const ctx = canvasRefsticker.current.getContext(\"2d\");\r\n\r\n      canvasRefsticker.current.width = OriginalImageWidth;\r\n      canvasRefsticker.current.height = OriginalImageHeight;\r\n\r\n      ctx.drawImage(superImageHolder, 0, 0);\r\n\r\n      var scalehh = window.innerHeight / OriginalImageHeight;\r\n      var widthx = OriginalImageWidth * scalehh;\r\n\r\n      canvasRefsticker.current.style.width = `${widthx}px`;\r\n      canvasRefsticker.current.style.height = `${window.innerHeight}px`;\r\n    }\r\n  }, [superImageHolder, OriginalImageWidth, OriginalImageHeight]);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ width: \"100%\", margin: \"auto\", height: \"100%\" }}></div>\r\n      <canvas\r\n        className={darkmodeReducer ? \"turlightpostdarkx\" : \"turlightpostlightx\"}\r\n        ref={canvasRefsticker}\r\n        style={{\r\n          padding: \"0px\",\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Superstickers = React.memo(Superstickersx);\r\n"]},"metadata":{},"sourceType":"module"}