{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\log\\\\LogButtons.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { isBrowser, isTablet } from \"react-device-detect\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginButtonsx({\n  OpenModalForm\n}) {\n  _s();\n\n  var matchPc = isBrowser;\n  var matchTablet = isTablet; ///\n  ///\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\n\n  var buttonFont = \"\";\n  var buttonTransform = \" \";\n  var pad = \"\";\n\n  if (matchPc) {\n    buttonFont = \"1vw\";\n    buttonTransform = \" \";\n    pad = \"14.5px\"; ///\n  } else if (matchTablet) {\n    pad = \"16px\";\n    buttonFont = \"2vw\";\n    buttonTransform = \" \"; ///\n  } else {\n    buttonFont = \"\";\n    buttonTransform = \"scale(0.95)\";\n    pad = \"16px\";\n  } ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n\n  const {\n    borderRadius,\n    MozBoxShadow,\n    WebkitBoxShadow,\n    boxShadow\n  } = useSelector(state => ({ ...state.ButtonsSignUpReducerDark\n  }));\n  const borderRadiusReducerSignD = borderRadius;\n  const MozBoxShadowReducerSignD = MozBoxShadow;\n  const WebkitBoxShadowReducerSignD = WebkitBoxShadow;\n  const boxShadowReducerSignD = boxShadow;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: matchPc ? \"containerloginpc\" : \"containerloginmobile \",\n    item: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      md: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: \"buttonpad buttonshake\",\n      xs: 12,\n      sm: 6,\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => OpenModalForm(1),\n        style: loginstyle,\n        fullWidth: true,\n        variant: \"outlined\",\n        size: \"large\",\n        color: \"primary\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 12,\n      className: \"logbuttonspace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      md: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: \"buttonpad buttonshake\",\n      xs: 12,\n      sm: 6,\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => OpenModalForm(0),\n        style: signupstyle,\n        fullWidth: true,\n        variant: \"contained\",\n        size: \"large\",\n        color: \"secondary\",\n        children: [\" \", \"Sign Up\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginButtonsx, \"GXGYd8XUh9IGjrLmAA/OFYY1990=\", false, function () {\n  return [useSelector];\n});\n\n_c = LoginButtonsx;\nexport const LoginButtons = /*#__PURE__*/React.memo(LoginButtonsx);\n_c2 = LoginButtons;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginButtonsx\");\n$RefreshReg$(_c2, \"LoginButtons\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/log/LogButtons.tsx"],"names":["React","Grid","Button","isBrowser","isTablet","useSelector","LoginButtonsx","OpenModalForm","matchPc","matchTablet","buttonFont","buttonTransform","pad","borderRadius","MozBoxShadow","WebkitBoxShadow","boxShadow","state","ButtonsSignUpReducerDark","borderRadiusReducerSignD","MozBoxShadowReducerSignD","WebkitBoxShadowReducerSignD","boxShadowReducerSignD","loginstyle","signupstyle","LoginButtons","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport { isBrowser, isTablet } from \"react-device-detect\";\r\nimport { ILogButtons } from \"./log-Interfaces\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction LoginButtonsx({ OpenModalForm }: ILogButtons) {\r\n  var matchPc = isBrowser;\r\n  var matchTablet = isTablet;\r\n\r\n  ///\r\n  ///\r\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\r\n\r\n  var buttonFont = \"\";\r\n  var buttonTransform = \" \";\r\n  var pad = \"\";\r\n\r\n  if (matchPc) {\r\n    buttonFont = \"1vw\";\r\n    buttonTransform = \" \";\r\n    pad = \"14.5px\";\r\n    ///\r\n  } else if (matchTablet) {\r\n    pad = \"16px\";\r\n    buttonFont = \"2vw\";\r\n    buttonTransform = \" \";\r\n\r\n    ///\r\n  } else {\r\n    buttonFont = \"\";\r\n    buttonTransform = \"scale(0.95)\";\r\n    pad = \"16px\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  const { borderRadius, MozBoxShadow, WebkitBoxShadow, boxShadow } =\r\n    useSelector((state: RootStateOrAny) => ({\r\n      ...state.ButtonsSignUpReducerDark,\r\n    }));\r\n\r\n  const borderRadiusReducerSignD = borderRadius;\r\n  const MozBoxShadowReducerSignD = MozBoxShadow;\r\n  const WebkitBoxShadowReducerSignD = WebkitBoxShadow;\r\n  const boxShadowReducerSignD = boxShadow;\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      className={matchPc ? \"containerloginpc\" : \"containerloginmobile \"}\r\n      item\r\n    >\r\n      <Grid item sm={3} md={5}></Grid>\r\n      <Grid item className=\"buttonpad buttonshake\" xs={12} sm={6} md={2}>\r\n        <Button\r\n          onClick={() => OpenModalForm(1)}\r\n          style={loginstyle}\r\n          fullWidth={true}\r\n          variant=\"outlined\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n        >\r\n          Log In\r\n        </Button>\r\n      </Grid>\r\n      <Grid item sm={12} className=\"logbuttonspace\"></Grid>\r\n\r\n      <Grid item sm={3} md={5}></Grid>\r\n      <Grid item className=\"buttonpad buttonshake\" xs={12} sm={6} md={2}>\r\n        <Button\r\n          onClick={() => OpenModalForm(0)}\r\n          style={signupstyle}\r\n          fullWidth={true}\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"secondary\"\r\n        >\r\n          {\" \"}\r\n          Sign Up\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport const LoginButtons = React.memo(LoginButtonsx);\r\n"]},"metadata":{},"sourceType":"module"}