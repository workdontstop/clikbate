{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\ModalLog.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRef, useEffect, useState, useCallback } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { Grid, DialogContent, Paper, makeStyles, createMuiTheme, TextField, Button } from \"@material-ui/core\";\nimport im1 from \"./images/modalpic1.jpg\";\nimport im2 from \"./images/modalpic2.jpg\";\nimport im3 from \"./images/modalpic3.png\";\nimport im4 from \"./images/modalpic4.jpg\";\nimport \"./ModalLog.css\";\nimport Axios from \"axios\";\nimport ModalLogFormError from \"./ModalLogFormError\";\nimport ModalFormLoginError from \"./ModalFormLoginError\";\nimport ServerError from \"./ServerError\";\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ModalLog({\n  formtype,\n  CloseModalForm,\n  showModalForm,\n  setShowModalForm,\n  PaperStyle,\n  signupclass,\n  loginclass,\n  darkmode\n}) {\n  _s();\n\n  ///\n  ///\n  ///SUPERSTARZ ICON SELECT\n  var SuperIcon = \"\";\n  darkmode ? SuperIcon = SuperstarzIconDark : SuperIcon = SuperstarzIconLight; ///\n  ///\n  ///\n  /// ALL VARIABLES ,ERROR VARIABLES,CONSTANT AND  STATES\n\n  const initialLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialRawSignValue = {\n    inputedEmail: \"\",\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialCleanSignValue = {\n    inputedEmail: \"\",\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialCleanLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialErrorSignValue = {\n    inputedEmail: 0,\n    inputedUsername: 0,\n    inputedPassword: 0\n  };\n  const initialErrorLogValue = {\n    inputedUsername: 0,\n    inputedPassword: 0\n  };\n  const [showimage, setShowimage] = useState(\" \");\n  const [zoomedModal, setZoomedModal] = useState(false);\n  const [wideImage, setWideImage] = useState(false);\n  const EmailCheckingTimer = useRef(null);\n  const PasswordCheckingTimer = useRef(null);\n  const [rawLoginValues, setRawLoginValues] = useState(initialLogValue);\n  const [cantPassBadEmail, setCantPassBadEmail] = useState(false);\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\n  const [cleanSignupValues, setCleanSignupValues] = useState(initialCleanSignValue);\n  const [cleanLoginValues, setCleanLoginValues] = useState(initialCleanLogValue);\n  const [errorsSignupValues, setErrorsSignupValues] = useState(initialErrorSignValue);\n  const [errorsLoginValues, setErrorsLoginValues] = useState(initialErrorLogValue);\n  const [serverErrorData, setServerErrorData] = useState(null);\n  const [serverErrorDisplay, setServerErrorDisplay] = useState(0);\n  const [errorFormChecking, setErrorFormChecking] = useState(false);\n  let usernameErrorData = null;\n  let usernameErrorDisplay = 0;\n  let emailErrorData = null;\n  let emailErrorDisplay = 0;\n  let passwordErrorData = null;\n  let passwordErrorDisplay = 0;\n\n  switch (errorsSignupValues.inputedUsername) {\n    case 1:\n      usernameErrorData = \"Usernames can only use letters, numbers, underscores and periods \";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 4:\n      usernameErrorData = \" Username  required \";\n      usernameErrorDisplay = 1;\n      break;\n\n    default:\n      usernameErrorData = null;\n      usernameErrorDisplay = 0;\n      break;\n  }\n\n  switch (errorsSignupValues.inputedPassword) {\n    case 1:\n      passwordErrorData = \"Password must be at Least 6 characters\";\n      passwordErrorDisplay = 1;\n      break;\n\n    case 2:\n      passwordErrorData = \"Checking\";\n      passwordErrorDisplay = 1;\n      break;\n\n    case 4:\n      passwordErrorData = \" Password  required \";\n      passwordErrorDisplay = 1;\n      break;\n\n    default:\n      passwordErrorData = null;\n      passwordErrorDisplay = 0;\n      break;\n  }\n\n  switch (errorsSignupValues.inputedEmail) {\n    case 1:\n      emailErrorData = \"Checking\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 2:\n      emailErrorData = \"Email address is not valid\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 3:\n      emailErrorData = \"Email is restricted to certain characters\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 4:\n      emailErrorData = \"Email required\";\n      emailErrorDisplay = 1;\n      break;\n\n    default:\n      emailErrorData = null;\n      emailErrorDisplay = 0;\n      break;\n  } ///\n  ///\n  ///\n  ///ALL VARIABLES ,ERROR VARIABLES,CONSTANT AND  STATES\n  ///\n  ///\n  ///\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n\n\n  const modalanimation = useSpring({\n    config: {\n      duration: 1000\n    },\n    opacity: showModalForm ? 1 : 0.9,\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`\n  }); ///\n  ///\n  ///\n  /// USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\n\n  const ModalBackgroundRef = useRef(null);\n\n  const onBackgroundFocus = e => {\n    if (ModalBackgroundRef.current === e.target) {\n      CloseModalForm(0);\n    }\n  }; ///\n  ///\n  ///\n  /// ESCAPE KEY CLOSE MODAL\n\n\n  const escapePress = useCallback(e => {\n    if (e.key === \"Escape\" && showModalForm) {\n      CloseModalForm(0);\n    }\n  }, [setShowModalForm, showModalForm]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escapePress);\n    return () => document.removeEventListener(\"keydown\", escapePress);\n  }, [escapePress]); ///\n  ///\n  ///\n  ///CLOSE MODAL FORM ON SMALL ICON PRESS\n\n  const iconclicked = () => {\n    CloseModalForm(0);\n  }; ///\n  ///\n  ///\n  /// RANDOMISE IMAGE\n\n\n  useEffect(() => {\n    let imagecontrol = [1, 2, 3, 4];\n    var randomimage = imagecontrol[Math.floor(Math.random() * imagecontrol.length)];\n\n    if (randomimage == 1) {\n      setShowimage(im1);\n    } else if (randomimage == 2) {\n      setShowimage(im2);\n    } else if (randomimage == 3) {\n      setShowimage(im3);\n    } else {\n      setShowimage(im4);\n    }\n  }, []); ///\n  ///\n  ///\n  /// GET IMAGE WIDTH ,HEIGHT AND SET WIDE IMAGE\n\n  const onimageload = e => {\n    const imageHeight = e.target.clientHeight;\n    const imageWidth = e.target.clientWidth;\n\n    if (imageWidth > imageHeight) {\n      setWideImage(true);\n    }\n  }; ///\n  ///\n  ///\n  /// SHOW A FULLSCREEN MODAL VIEW\n\n\n  const zoomlogmodal = () => {\n    setZoomedModal(!zoomedModal);\n  }; ///\n  ///\n  ///\n  /// DYNAMIC MODAL LAYOUT VARIABLES\n\n\n  const wideImageControlTrue = \"75vw\";\n  const wideImageControlfalse = \"70vw\";\n  const zoomImageControl = \"100vw\";\n  const GridMiniAwide = 8;\n  const GridMiniBwide = 4;\n  const GridMiniAlong = 7;\n  const GridMiniBlong = 5;\n  const GridZoomAwide = 8;\n  const GridZoomBwide = 4;\n  const GridZoomAlong = 6;\n  const GridZoomBlong = 6;\n  let GridHolderA = 7;\n  let GridHolderB = 5;\n  let GridxA = 7;\n  let GridxB = 5;\n  let GridyA = 7;\n  let GridyB = 5;\n  let wideImageControl = \"70vw\";\n  let imageReal = \"75vw\";\n  let borderGrid = \"11px\";\n  var WidthHolder = \"82%\";\n\n  if (zoomedModal) {\n    WidthHolder = \"100%\";\n    borderGrid = \"0px\";\n\n    if (wideImage) {\n      wideImageControl = wideImageControlTrue;\n      GridxA = GridZoomAwide;\n      GridxB = GridZoomBwide;\n    } else {\n      wideImageControl = wideImageControlfalse;\n      GridxA = GridZoomAlong;\n      GridxB = GridZoomBlong;\n    }\n\n    imageReal = zoomImageControl;\n    GridHolderA = GridxA;\n    GridHolderB = GridxB;\n  } else {\n    WidthHolder = \"82%\";\n    borderGrid = \"11px\";\n\n    if (wideImage) {\n      wideImageControl = wideImageControlTrue;\n      GridyA = GridMiniAwide;\n      GridyB = GridMiniBwide;\n    } else {\n      wideImageControl = wideImageControlfalse;\n      GridyA = GridMiniAlong;\n      GridyB = GridMiniBlong;\n    }\n\n    imageReal = wideImageControl;\n    GridHolderA = GridyA;\n    GridHolderB = GridyB;\n  } ///\n  ///\n  ///\n  /// DYNAMIC MODAL LAYOUT VARIABLES\n  ///\n  ///\n  ///\n  /// MATERIAL UI  CUSTOM STYLES\n\n\n  let themeGeneralSettingsModal = createMuiTheme({});\n  var useStyleModal = makeStyles(themeGeneralSettingsModal => ({\n    containerStyle: {\n      width: imageReal,\n      height: \"auto\",\n      boxShadow: \"0 5px 16px rgba(0, 0, 0, 0.2)\",\n      color: \"#000000\",\n      position: \"relative\",\n      zIndex: 10,\n      borderRadius: borderGrid\n    },\n    imageStyle: {\n      cursor: \"pointer\",\n      objectFit: \"cover\",\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: `${borderGrid} 0 0 10px`,\n      background: \"#000000\"\n    }\n  })); ///\n  ///\n  ///\n  /// SANITISE SIGN UP FORM INPUT CLIENT SIDE\n\n  const updateSignvalues = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"inputedUsername\") {\n      let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\n      let cleanValue = value.replace(usernameCleaner, \"\");\n      let usernameLimiter = /^.{26}$/;\n      let finalUsername = cleanValue.replace(usernameLimiter, \"\");\n      let checkUsernameClean = usernameCleaner.test(value);\n      let checkUsernameLimited = usernameLimiter.test(cleanValue);\n      checkUsernameClean ? setErrorsSignupValues({ ...errorsSignupValues,\n        [name]: 1\n      }) : setErrorsSignupValues({ ...errorsSignupValues,\n        [name]: 0\n      });\n\n      if (!checkUsernameLimited) {\n        setRawSignupValues({ ...rawSignupValues,\n          [name]: finalUsername\n        });\n        setCleanSignupValues({ ...cleanSignupValues,\n          [name]: finalUsername\n        });\n      } /////////\n\n    } else if (name === \"inputedEmail\") {\n      const emailValidation = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      const emailCleaner = /[^*$%#+@a-z0-9áéíóúñü \\.'_]/gim;\n      let finalEmail = value.replace(emailCleaner, \"\");\n      let checkEmailClean = emailCleaner.test(value);\n      let checkEmailValidated = emailValidation.test(String(value).toLowerCase());\n\n      if (EmailCheckingTimer.current) {\n        clearTimeout(EmailCheckingTimer.current);\n        setErrorFormChecking(false);\n      }\n\n      if (!checkEmailValidated) {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n        setErrorFormChecking(true);\n        EmailCheckingTimer.current = setTimeout(() => {\n          setErrorFormChecking(false);\n          setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 2\n          });\n          checkEmailClean && setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 3\n          });\n        }, 2000);\n      } else {\n        if (EmailCheckingTimer.current) {\n          clearTimeout(EmailCheckingTimer.current);\n          setErrorFormChecking(false);\n        }\n\n        checkEmailClean ? setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 3\n        }) : setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: finalEmail\n      });\n      setCleanSignupValues({ ...cleanSignupValues,\n        [name]: finalEmail\n      }); ////////\n    } else {\n      if (PasswordCheckingTimer.current) {\n        clearTimeout(PasswordCheckingTimer.current);\n      }\n\n      PasswordCheckingTimer.current = setTimeout(() => {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n      }, 2000);\n      var passwordLength = value.length;\n\n      if (passwordLength >= 6 || passwordLength === 0) {\n        if (PasswordCheckingTimer.current) {\n          clearTimeout(PasswordCheckingTimer.current);\n        }\n\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: value\n      });\n      setCleanSignupValues({ ...cleanSignupValues,\n        [name]: value\n      });\n    }\n  }; ///\n  ///\n  ///\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\n\n\n  const signmeup = () => {\n    if (cleanSignupValues.inputedEmail && cleanSignupValues.inputedUsername && cleanSignupValues.inputedPassword && errorsSignupValues.inputedPassword === 0) {\n      if (errorsSignupValues.inputedEmail === 0) {\n        Axios.post(\"http://localhost:3001/registration\", {\n          values: cleanSignupValues\n        }).then(response => {\n          if (response.data.message === \"username not unique\") {\n            setServerErrorData(\"Username is taken\");\n            setServerErrorDisplay(1);\n          } else {\n            console.log(response.status);\n            alert(\"REGISTRATION COMPLETE\");\n          }\n        }).catch(function (error) {\n          if (error.response) {\n            // Request made and server responded\n            //express typo can activate this\n            let textFieldParam = error.response.data.error.errors[0].param;\n            let affectedTextField = \" \";\n\n            if (textFieldParam == \"values.inputedPassword\") {\n              affectedTextField = \"Password must be at Least 6 characters\";\n            } else if (textFieldParam == \"values.inputedEmail\") {\n              affectedTextField = \"Email address is not valid\";\n            } else {\n              affectedTextField = \"Usernames use letters, numbers, underscores and periods\";\n            }\n\n            let dynamicError = `${affectedTextField} : ${error.response.data.error.errors[0].msg} `;\n            setServerErrorData(dynamicError);\n            setServerErrorDisplay(1);\n          } else if (error.request) {\n            // The request was made but no response was received Or request not made\n            // Axios.post(\"http://localhost:3003/reg\" can activate this error\n            setServerErrorData(\"Error connecting to server\");\n            setServerErrorDisplay(1);\n          } else {\n            // Something happened in setting up the request that triggered an Error\n            setServerErrorData(\"Something went wrong in request setup\");\n            setServerErrorDisplay(1);\n          }\n        });\n      } else {\n        setCantPassBadEmail(true);\n        setTimeout(() => {\n          setCantPassBadEmail(false);\n        }, 3000);\n      }\n    } else {\n      let passwordErrorHolder = errorsSignupValues.inputedPassword;\n      let emailErrorHolder = errorsSignupValues.inputedEmail;\n      let usernameErrorHolder = errorsSignupValues.inputedUsername;\n\n      if (!cleanSignupValues.inputedPassword) {\n        passwordErrorHolder = 4;\n      }\n\n      if (!cleanSignupValues.inputedEmail) {\n        emailErrorHolder = 4;\n      }\n\n      if (!cleanSignupValues.inputedUsername) {\n        usernameErrorHolder = 4;\n      }\n\n      setErrorsSignupValues({ ...errorsSignupValues,\n        inputedPassword: passwordErrorHolder,\n        inputedEmail: emailErrorHolder,\n        inputedUsername: usernameErrorHolder\n      });\n    }\n  }; ///\n  ///\n  ///\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\n\n\n  const updateLoginvalues = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setErrorsLoginValues({ ...errorsLoginValues,\n      [name]: 0\n    });\n    setRawLoginValues({ ...rawLoginValues,\n      [name]: value\n    });\n    setCleanLoginValues({ ...cleanLoginValues,\n      [name]: value\n    });\n  }; ///\n  ///\n  ///\n  /// SENDING LOG IN  DATA TO SERVER SIDE\n\n\n  const logmein = () => {\n    if (cleanLoginValues.inputedUsername && cleanLoginValues.inputedPassword) {\n      Axios.post(\"http://localhost:3001/logging\", {\n        values: cleanLoginValues\n      }).then(response => {\n        console.log(response.status);\n\n        if (response.data.message === \"Wrong, Password and Username combination\") {\n          alert(response.data.message);\n        } else {\n          if (response.data.message === \"Wrong username\") {\n            alert(response.data.message);\n          } else {\n            alert(\"LOGGED IN\");\n          }\n        }\n      }).catch(function (error) {\n        if (error.response) {\n          alert(\"1\"); // Request made and server responded\n          //express typo can activate this\n\n          console.log(error.response);\n        } else if (error.request) {\n          alert(\"2\"); // The request was made but no response was received Or request not made\n          // Axios.post(\"http://localhost:3003/reg\" can activate this error\n\n          console.log(error.request);\n        } else {\n          alert(\"3\"); // Something happened in setting up the request that triggered an Error\n\n          console.log(\"Error\", error.message);\n        }\n      });\n    } else {\n      let passwordErrorHolder = errorsLoginValues.inputedPassword;\n      let usernameErrorHolder = errorsLoginValues.inputedUsername;\n\n      if (!cleanLoginValues.inputedPassword) {\n        passwordErrorHolder = 1;\n      }\n\n      if (!cleanLoginValues.inputedUsername) {\n        usernameErrorHolder = 1;\n      }\n\n      setErrorsLoginValues({ ...errorsLoginValues,\n        inputedPassword: passwordErrorHolder,\n        inputedUsername: usernameErrorHolder\n      });\n    }\n  };\n\n  var classes = useStyleModal();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModalForm ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: \"FormDialog-container dontallowhighlighting \",\n      onClick: onBackgroundFocus,\n      style: {\n        overflow: \"hidden\",\n        cursor: \"pointer\"\n      },\n      ref: ModalBackgroundRef,\n      children: [/*#__PURE__*/_jsxDEV(ServerError, {\n        setServerErrorData: setServerErrorData,\n        serverErrorDisplay: serverErrorDisplay,\n        serverErrorData: serverErrorData,\n        darkmode: darkmode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n        style: modalanimation,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: PaperStyle,\n          style: {\n            borderRadius: borderGrid,\n            cursor: \"default\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            xs: 12,\n            className: classes.containerStyle,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: GridHolderA,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                xs: 12,\n                item: true,\n                style: {\n                  position: \"fixed\",\n                  left: \"1em\",\n                  top: \"2.6em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: zoomedModal ? \"hide-logo\" : \"log-logo\",\n                  onClick: iconclicked,\n                  src: SuperIcon,\n                  alt: \"SuperstarZ logo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                onClick: zoomlogmodal,\n                onLoad: onimageload,\n                src: showimage,\n                className: classes.imageStyle,\n                alt: \"Login Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 17\n            }, this), formtype ? /*#__PURE__*/_jsxDEV(Grid, {\n              xs: GridHolderB,\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                xs: 12,\n                item: true,\n                className: \"formholder\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  xs: 12,\n                  className: \"center-content-vertically\",\n                  style: {\n                    marginTop: \"-30px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: iconclicked,\n                    className: zoomedModal ? \"zoom-login-logo\" : \"hide-logo\",\n                    src: SuperIcon,\n                    alt: \"SuperstarZ logo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 660,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n                    type: true,\n                    ErrorDisplay: errorsLoginValues.inputedUsername,\n                    darkmode: darkmode,\n                    WidthHolder: WidthHolder\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 669,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    style: {\n                      width: WidthHolder,\n                      paddingBottom: \"60px\"\n                    },\n                    inputProps: {\n                      style: {\n                        fontSize: \"2.5vh\"\n                      }\n                    },\n                    InputLabelProps: {\n                      style: {\n                        fontSize: \"1.8vh\"\n                      }\n                    },\n                    label: \"Username\",\n                    onChange: updateLoginvalues,\n                    name: \"inputedUsername\",\n                    value: rawLoginValues.inputedUsername,\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 676,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    style: {\n                      width: WidthHolder,\n                      paddingBottom: \"50px\",\n                      zIndex: 1\n                    },\n                    inputProps: {\n                      style: {\n                        fontSize: \"2.5vh\"\n                      }\n                    },\n                    InputLabelProps: {\n                      style: {\n                        fontSize: \"1.8vh\"\n                      }\n                    },\n                    label: \"Password\",\n                    onChange: updateLoginvalues,\n                    name: \"inputedPassword\",\n                    value: rawLoginValues.inputedPassword,\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 690,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n                    type: false,\n                    ErrorDisplay: errorsLoginValues.inputedPassword,\n                    darkmode: darkmode,\n                    WidthHolder: WidthHolder\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 704,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      xs: 4\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 712,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      className: \"buttonpad buttonshake\",\n                      xs: 4,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: logmein,\n                        className: loginclass,\n                        fullWidth: true,\n                        variant: \"outlined\",\n                        size: \"large\",\n                        color: \"primary\",\n                        children: \"Log In\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 714,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 713,\n                      columnNumber: 27\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n              xs: GridHolderB,\n              item: true,\n              className: \"formholder\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                xs: 12,\n                className: \"center-content-vertically\",\n                style: {\n                  padding: \"0px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  onClick: iconclicked,\n                  className: zoomedModal ? \"zoom-signup-logo\" : \"hide-logo\",\n                  src: SuperIcon,\n                  alt: \"SuperstarZ logo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 736,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ModalLogFormError, {\n                  errorFormChecking: errorFormChecking,\n                  WidthHolder: WidthHolder,\n                  darkmode: darkmode,\n                  type: true,\n                  cantPassBadEmail: cantPassBadEmail,\n                  ErrorDisplay: emailErrorDisplay,\n                  ErrorData: emailErrorData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: WidthHolder,\n                    paddingBottom: \"45px\"\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Email\",\n                  onChange: updateSignvalues,\n                  name: \"inputedEmail\",\n                  value: rawSignupValues.inputedEmail,\n                  variant: \"filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 753,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ModalLogFormError, {\n                  errorFormChecking: errorFormChecking,\n                  WidthHolder: WidthHolder,\n                  darkmode: darkmode,\n                  type: true,\n                  cantPassBadEmail: cantPassBadEmail,\n                  ErrorDisplay: usernameErrorDisplay,\n                  ErrorData: usernameErrorData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 763,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: WidthHolder,\n                    paddingBottom: \"45px\"\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Username\",\n                  onChange: updateSignvalues,\n                  name: \"inputedUsername\",\n                  value: rawSignupValues.inputedUsername,\n                  variant: \"filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 772,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: WidthHolder,\n                    paddingBottom: \"30px\",\n                    zIndex: 1\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Password\",\n                  onChange: updateSignvalues,\n                  name: \"inputedPassword\",\n                  value: rawSignupValues.inputedPassword,\n                  variant: \"filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 783,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ModalLogFormError, {\n                  errorFormChecking: errorFormChecking,\n                  darkmode: darkmode,\n                  WidthHolder: WidthHolder,\n                  type: false,\n                  cantPassBadEmail: cantPassBadEmail,\n                  ErrorDisplay: passwordErrorDisplay,\n                  ErrorData: passwordErrorData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 797,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  xs: 12,\n                  style: {\n                    marginTop: \"20px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    xs: 4\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 808,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    className: \"buttonpad buttonshake\",\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      className: signupclass,\n                      onClick: signmeup,\n                      fullWidth: true,\n                      variant: \"contained\",\n                      size: \"large\",\n                      color: \"secondary\",\n                      children: \"Sign Up\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 810,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 809,\n                    columnNumber: 25\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 807,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(ModalLog, \"GzNTdOJU1o879Q9OvzUnKDLxAUk=\", true, function () {\n  return [useSpring];\n});\n\n_c = ModalLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalLog\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/ModalLog.tsx"],"names":["React","useRef","useEffect","useState","useCallback","useSpring","animated","Grid","DialogContent","Paper","makeStyles","createMuiTheme","TextField","Button","im1","im2","im3","im4","Axios","ModalLogFormError","ModalFormLoginError","ServerError","SuperstarzIconLight","SuperstarzIconDark","ModalLog","formtype","CloseModalForm","showModalForm","setShowModalForm","PaperStyle","signupclass","loginclass","darkmode","SuperIcon","initialLogValue","inputedUsername","inputedPassword","initialRawSignValue","inputedEmail","initialCleanSignValue","initialCleanLogValue","initialErrorSignValue","initialErrorLogValue","showimage","setShowimage","zoomedModal","setZoomedModal","wideImage","setWideImage","EmailCheckingTimer","PasswordCheckingTimer","rawLoginValues","setRawLoginValues","cantPassBadEmail","setCantPassBadEmail","rawSignupValues","setRawSignupValues","cleanSignupValues","setCleanSignupValues","cleanLoginValues","setCleanLoginValues","errorsSignupValues","setErrorsSignupValues","errorsLoginValues","setErrorsLoginValues","serverErrorData","setServerErrorData","serverErrorDisplay","setServerErrorDisplay","errorFormChecking","setErrorFormChecking","usernameErrorData","usernameErrorDisplay","emailErrorData","emailErrorDisplay","passwordErrorData","passwordErrorDisplay","modalanimation","config","duration","opacity","transform","ModalBackgroundRef","onBackgroundFocus","e","current","target","escapePress","key","document","addEventListener","removeEventListener","iconclicked","imagecontrol","randomimage","Math","floor","random","length","onimageload","imageHeight","clientHeight","imageWidth","clientWidth","zoomlogmodal","wideImageControlTrue","wideImageControlfalse","zoomImageControl","GridMiniAwide","GridMiniBwide","GridMiniAlong","GridMiniBlong","GridZoomAwide","GridZoomBwide","GridZoomAlong","GridZoomBlong","GridHolderA","GridHolderB","GridxA","GridxB","GridyA","GridyB","wideImageControl","imageReal","borderGrid","WidthHolder","themeGeneralSettingsModal","useStyleModal","containerStyle","width","height","boxShadow","color","position","zIndex","borderRadius","imageStyle","cursor","objectFit","background","updateSignvalues","name","value","usernameCleaner","cleanValue","replace","usernameLimiter","finalUsername","checkUsernameClean","test","checkUsernameLimited","emailValidation","emailCleaner","finalEmail","checkEmailClean","checkEmailValidated","String","toLowerCase","clearTimeout","setTimeout","passwordLength","signmeup","post","values","then","response","data","message","console","log","status","alert","catch","error","textFieldParam","errors","param","affectedTextField","dynamicError","msg","request","passwordErrorHolder","emailErrorHolder","usernameErrorHolder","updateLoginvalues","logmein","classes","overflow","left","top","marginTop","paddingBottom","style","fontSize","padding"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport {\r\n  Grid,\r\n  DialogContent,\r\n  Paper,\r\n  makeStyles,\r\n  createMuiTheme,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport im1 from \"./images/modalpic1.jpg\";\r\nimport im2 from \"./images/modalpic2.jpg\";\r\nimport im3 from \"./images/modalpic3.png\";\r\nimport im4 from \"./images/modalpic4.jpg\";\r\nimport { ImodalLog, IGrid } from \"./appFolder-Interfaces\";\r\nimport \"./ModalLog.css\";\r\nimport Axios from \"axios\";\r\nimport ModalLogFormError from \"./ModalLogFormError\";\r\nimport ModalFormLoginError from \"./ModalFormLoginError\";\r\n\r\nimport ServerError from \"./ServerError\";\r\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\r\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\n\r\nexport default function ModalLog({\r\n  formtype,\r\n  CloseModalForm,\r\n  showModalForm,\r\n  setShowModalForm,\r\n  PaperStyle,\r\n  signupclass,\r\n  loginclass,\r\n  darkmode,\r\n}: ImodalLog): JSX.Element {\r\n  ///\r\n  ///\r\n  ///SUPERSTARZ ICON SELECT\r\n  var SuperIcon = \"\";\r\n  darkmode\r\n    ? (SuperIcon = SuperstarzIconDark)\r\n    : (SuperIcon = SuperstarzIconLight);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// ALL VARIABLES ,ERROR VARIABLES,CONSTANT AND  STATES\r\n  const initialLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialRawSignValue = {\r\n    inputedEmail: \"\",\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialCleanSignValue = {\r\n    inputedEmail: \"\",\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialCleanLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialErrorSignValue = {\r\n    inputedEmail: 0,\r\n    inputedUsername: 0,\r\n    inputedPassword: 0,\r\n  };\r\n  const initialErrorLogValue = {\r\n    inputedUsername: 0,\r\n    inputedPassword: 0,\r\n  };\r\n\r\n  const [showimage, setShowimage] = useState<string>(\" \");\r\n  const [zoomedModal, setZoomedModal] = useState<boolean>(false);\r\n  const [wideImage, setWideImage] = useState<boolean>(false);\r\n  const EmailCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const PasswordCheckingTimer =\r\n    useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const [rawLoginValues, setRawLoginValues] = useState(initialLogValue);\r\n  const [cantPassBadEmail, setCantPassBadEmail] = useState<boolean>(false);\r\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\r\n  const [cleanSignupValues, setCleanSignupValues] = useState(\r\n    initialCleanSignValue\r\n  );\r\n  const [cleanLoginValues, setCleanLoginValues] =\r\n    useState(initialCleanLogValue);\r\n  const [errorsSignupValues, setErrorsSignupValues] = useState(\r\n    initialErrorSignValue\r\n  );\r\n  const [errorsLoginValues, setErrorsLoginValues] =\r\n    useState(initialErrorLogValue);\r\n\r\n  const [serverErrorData, setServerErrorData] = useState<string | null>(null);\r\n  const [serverErrorDisplay, setServerErrorDisplay] = useState<number>(0);\r\n  const [errorFormChecking, setErrorFormChecking] = useState<boolean>(false);\r\n\r\n  let usernameErrorData = null;\r\n  let usernameErrorDisplay = 0;\r\n\r\n  let emailErrorData = null;\r\n  let emailErrorDisplay = 0;\r\n\r\n  let passwordErrorData = null;\r\n  let passwordErrorDisplay = 0;\r\n\r\n  switch (errorsSignupValues.inputedUsername) {\r\n    case 1:\r\n      usernameErrorData =\r\n        \"Usernames can only use letters, numbers, underscores and periods \";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 4:\r\n      usernameErrorData = \" Username  required \";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      usernameErrorData = null;\r\n      usernameErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  switch (errorsSignupValues.inputedPassword) {\r\n    case 1:\r\n      passwordErrorData = \"Password must be at Least 6 characters\";\r\n      passwordErrorDisplay = 1;\r\n      break;\r\n\r\n    case 2:\r\n      passwordErrorData = \"Checking\";\r\n      passwordErrorDisplay = 1;\r\n\r\n      break;\r\n    case 4:\r\n      passwordErrorData = \" Password  required \";\r\n      passwordErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      passwordErrorData = null;\r\n      passwordErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  switch (errorsSignupValues.inputedEmail) {\r\n    case 1:\r\n      emailErrorData = \"Checking\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 2:\r\n      emailErrorData = \"Email address is not valid\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 3:\r\n      emailErrorData = \"Email is restricted to certain characters\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 4:\r\n      emailErrorData = \"Email required\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      emailErrorData = null;\r\n      emailErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///ALL VARIABLES ,ERROR VARIABLES,CONSTANT AND  STATES\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      duration: 1000,\r\n    },\r\n    opacity: showModalForm ? 1 : 0.9,\r\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`,\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\r\n  const ModalBackgroundRef = useRef<HTMLInputElement>(null);\r\n  const onBackgroundFocus = (e: any): void => {\r\n    if (ModalBackgroundRef.current === e.target) {\r\n      CloseModalForm(0);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// ESCAPE KEY CLOSE MODAL\r\n  const escapePress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Escape\" && showModalForm) {\r\n        CloseModalForm(0);\r\n      }\r\n    },\r\n    [setShowModalForm, showModalForm]\r\n  );\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escapePress);\r\n    return () => document.removeEventListener(\"keydown\", escapePress);\r\n  }, [escapePress]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CLOSE MODAL FORM ON SMALL ICON PRESS\r\n  const iconclicked = () => {\r\n    CloseModalForm(0);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// RANDOMISE IMAGE\r\n  useEffect(() => {\r\n    let imagecontrol: number[] = [1, 2, 3, 4];\r\n    var randomimage =\r\n      imagecontrol[Math.floor(Math.random() * imagecontrol.length)];\r\n\r\n    if (randomimage == 1) {\r\n      setShowimage(im1);\r\n    } else if (randomimage == 2) {\r\n      setShowimage(im2);\r\n    } else if (randomimage == 3) {\r\n      setShowimage(im3);\r\n    } else {\r\n      setShowimage(im4);\r\n    }\r\n  }, []);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET IMAGE WIDTH ,HEIGHT AND SET WIDE IMAGE\r\n  const onimageload = (e: any) => {\r\n    const imageHeight = e.target.clientHeight;\r\n    const imageWidth = e.target.clientWidth;\r\n    if (imageWidth > imageHeight) {\r\n      setWideImage(true);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW A FULLSCREEN MODAL VIEW\r\n  const zoomlogmodal = () => {\r\n    setZoomedModal(!zoomedModal);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// DYNAMIC MODAL LAYOUT VARIABLES\r\n  const wideImageControlTrue: string = \"75vw\";\r\n  const wideImageControlfalse: string = \"70vw\";\r\n  const zoomImageControl: string = \"100vw\";\r\n  const GridMiniAwide: IGrid = 8;\r\n  const GridMiniBwide: IGrid = 4;\r\n  const GridMiniAlong: IGrid = 7;\r\n  const GridMiniBlong: IGrid = 5;\r\n  const GridZoomAwide: IGrid = 8;\r\n  const GridZoomBwide: IGrid = 4;\r\n  const GridZoomAlong: IGrid = 6;\r\n  const GridZoomBlong: IGrid = 6;\r\n\r\n  let GridHolderA: IGrid = 7;\r\n  let GridHolderB: IGrid = 5;\r\n\r\n  let GridxA: IGrid = 7;\r\n  let GridxB: IGrid = 5;\r\n\r\n  let GridyA: IGrid = 7;\r\n  let GridyB: IGrid = 5;\r\n\r\n  let wideImageControl: string = \"70vw\";\r\n  let imageReal: string = \"75vw\";\r\n\r\n  let borderGrid: string = \"11px\";\r\n  var WidthHolder = \"82%\";\r\n\r\n  if (zoomedModal) {\r\n    WidthHolder = \"100%\";\r\n    borderGrid = \"0px\";\r\n    if (wideImage) {\r\n      wideImageControl = wideImageControlTrue;\r\n      GridxA = GridZoomAwide;\r\n      GridxB = GridZoomBwide;\r\n    } else {\r\n      wideImageControl = wideImageControlfalse;\r\n      GridxA = GridZoomAlong;\r\n      GridxB = GridZoomBlong;\r\n    }\r\n    imageReal = zoomImageControl;\r\n    GridHolderA = GridxA;\r\n    GridHolderB = GridxB;\r\n  } else {\r\n    WidthHolder = \"82%\";\r\n    borderGrid = \"11px\";\r\n    if (wideImage) {\r\n      wideImageControl = wideImageControlTrue;\r\n      GridyA = GridMiniAwide;\r\n      GridyB = GridMiniBwide;\r\n    } else {\r\n      wideImageControl = wideImageControlfalse;\r\n      GridyA = GridMiniAlong;\r\n      GridyB = GridMiniBlong;\r\n    }\r\n    imageReal = wideImageControl;\r\n    GridHolderA = GridyA;\r\n    GridHolderB = GridyB;\r\n  }\r\n  ///\r\n  ///\r\n  ///\r\n  /// DYNAMIC MODAL LAYOUT VARIABLES\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// MATERIAL UI  CUSTOM STYLES\r\n  let themeGeneralSettingsModal = createMuiTheme({});\r\n  var useStyleModal = makeStyles((themeGeneralSettingsModal) => ({\r\n    containerStyle: {\r\n      width: imageReal,\r\n      height: \"auto\",\r\n      boxShadow: \"0 5px 16px rgba(0, 0, 0, 0.2)\",\r\n      color: \"#000000\",\r\n      position: \"relative\",\r\n      zIndex: 10,\r\n      borderRadius: borderGrid,\r\n    },\r\n    imageStyle: {\r\n      cursor: \"pointer\",\r\n      objectFit: \"cover\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: `${borderGrid} 0 0 10px`,\r\n      background: \"#000000\",\r\n    },\r\n  }));\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SANITISE SIGN UP FORM INPUT CLIENT SIDE\r\n  const updateSignvalues = (e: any) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"inputedUsername\") {\r\n      let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\r\n      let cleanValue = value.replace(usernameCleaner, \"\");\r\n\r\n      let usernameLimiter = /^.{26}$/;\r\n      let finalUsername = cleanValue.replace(usernameLimiter, \"\");\r\n\r\n      let checkUsernameClean = usernameCleaner.test(value);\r\n      let checkUsernameLimited = usernameLimiter.test(cleanValue);\r\n\r\n      checkUsernameClean\r\n        ? setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 })\r\n        : setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n      if (!checkUsernameLimited) {\r\n        setRawSignupValues({ ...rawSignupValues, [name]: finalUsername });\r\n        setCleanSignupValues({ ...cleanSignupValues, [name]: finalUsername });\r\n      }\r\n      /////////\r\n    } else if (name === \"inputedEmail\") {\r\n      const emailValidation =\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      const emailCleaner = /[^*$%#+@a-z0-9áéíóúñü \\.'_]/gim;\r\n      let finalEmail = value.replace(emailCleaner, \"\");\r\n\r\n      let checkEmailClean = emailCleaner.test(value);\r\n      let checkEmailValidated = emailValidation.test(\r\n        String(value).toLowerCase()\r\n      );\r\n      if (EmailCheckingTimer.current) {\r\n        clearTimeout(EmailCheckingTimer.current);\r\n        setErrorFormChecking(false);\r\n      }\r\n      if (!checkEmailValidated) {\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n        setErrorFormChecking(true);\r\n        EmailCheckingTimer.current = setTimeout(() => {\r\n          setErrorFormChecking(false);\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n          checkEmailClean &&\r\n            setErrorsSignupValues({ ...errorsSignupValues, [name]: 3 });\r\n        }, 2000);\r\n      } else {\r\n        if (EmailCheckingTimer.current) {\r\n          clearTimeout(EmailCheckingTimer.current);\r\n          setErrorFormChecking(false);\r\n        }\r\n        checkEmailClean\r\n          ? setErrorsSignupValues({ ...errorsSignupValues, [name]: 3 })\r\n          : setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n      }\r\n\r\n      setRawSignupValues({ ...rawSignupValues, [name]: finalEmail });\r\n      setCleanSignupValues({ ...cleanSignupValues, [name]: finalEmail });\r\n      ////////\r\n    } else {\r\n      if (PasswordCheckingTimer.current) {\r\n        clearTimeout(PasswordCheckingTimer.current);\r\n      }\r\n\r\n      PasswordCheckingTimer.current = setTimeout(() => {\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n      }, 2000);\r\n\r\n      var passwordLength = value.length;\r\n\r\n      if (passwordLength >= 6 || passwordLength === 0) {\r\n        if (PasswordCheckingTimer.current) {\r\n          clearTimeout(PasswordCheckingTimer.current);\r\n        }\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n      }\r\n      setRawSignupValues({ ...rawSignupValues, [name]: value });\r\n      setCleanSignupValues({ ...cleanSignupValues, [name]: value });\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\r\n  const signmeup = () => {\r\n    if (\r\n      cleanSignupValues.inputedEmail &&\r\n      cleanSignupValues.inputedUsername &&\r\n      cleanSignupValues.inputedPassword &&\r\n      errorsSignupValues.inputedPassword === 0\r\n    ) {\r\n      if (errorsSignupValues.inputedEmail === 0) {\r\n        Axios.post(\"http://localhost:3001/registration\", {\r\n          values: cleanSignupValues,\r\n        })\r\n          .then((response) => {\r\n            if (response.data.message === \"username not unique\") {\r\n              setServerErrorData(\"Username is taken\");\r\n              setServerErrorDisplay(1);\r\n            } else {\r\n              console.log(response.status);\r\n              alert(\"REGISTRATION COMPLETE\");\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            if (error.response) {\r\n              // Request made and server responded\r\n              //express typo can activate this\r\n              let textFieldParam = error.response.data.error.errors[0].param;\r\n              let affectedTextField = \" \";\r\n\r\n              if (textFieldParam == \"values.inputedPassword\") {\r\n                affectedTextField = \"Password must be at Least 6 characters\";\r\n              } else if (textFieldParam == \"values.inputedEmail\") {\r\n                affectedTextField = \"Email address is not valid\";\r\n              } else {\r\n                affectedTextField =\r\n                  \"Usernames use letters, numbers, underscores and periods\";\r\n              }\r\n              let dynamicError = `${affectedTextField} : ${error.response.data.error.errors[0].msg} `;\r\n              setServerErrorData(dynamicError);\r\n\r\n              setServerErrorDisplay(1);\r\n            } else if (error.request) {\r\n              // The request was made but no response was received Or request not made\r\n              // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n              setServerErrorData(\"Error connecting to server\");\r\n              setServerErrorDisplay(1);\r\n            } else {\r\n              // Something happened in setting up the request that triggered an Error\r\n              setServerErrorData(\"Something went wrong in request setup\");\r\n              setServerErrorDisplay(1);\r\n            }\r\n          });\r\n      } else {\r\n        setCantPassBadEmail(true);\r\n        setTimeout(() => {\r\n          setCantPassBadEmail(false);\r\n        }, 3000);\r\n      }\r\n    } else {\r\n      let passwordErrorHolder = errorsSignupValues.inputedPassword;\r\n      let emailErrorHolder = errorsSignupValues.inputedEmail;\r\n      let usernameErrorHolder = errorsSignupValues.inputedUsername;\r\n\r\n      if (!cleanSignupValues.inputedPassword) {\r\n        passwordErrorHolder = 4;\r\n      }\r\n      if (!cleanSignupValues.inputedEmail) {\r\n        emailErrorHolder = 4;\r\n      }\r\n      if (!cleanSignupValues.inputedUsername) {\r\n        usernameErrorHolder = 4;\r\n      }\r\n\r\n      setErrorsSignupValues({\r\n        ...errorsSignupValues,\r\n        inputedPassword: passwordErrorHolder,\r\n        inputedEmail: emailErrorHolder,\r\n        inputedUsername: usernameErrorHolder,\r\n      });\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\r\n  const updateLoginvalues = (e: any) => {\r\n    const { name, value } = e.target;\r\n\r\n    setErrorsLoginValues({ ...errorsLoginValues, [name]: 0 });\r\n    setRawLoginValues({ ...rawLoginValues, [name]: value });\r\n    setCleanLoginValues({ ...cleanLoginValues, [name]: value });\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SENDING LOG IN  DATA TO SERVER SIDE\r\n  const logmein = () => {\r\n    if (cleanLoginValues.inputedUsername && cleanLoginValues.inputedPassword) {\r\n      Axios.post(\"http://localhost:3001/logging\", {\r\n        values: cleanLoginValues,\r\n      })\r\n        .then((response) => {\r\n          console.log(response.status);\r\n          if (\r\n            response.data.message === \"Wrong, Password and Username combination\"\r\n          ) {\r\n            alert(response.data.message);\r\n          } else {\r\n            if (response.data.message === \"Wrong username\") {\r\n              alert(response.data.message);\r\n            } else {\r\n              alert(\"LOGGED IN\");\r\n            }\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          if (error.response) {\r\n            alert(\"1\");\r\n            // Request made and server responded\r\n            //express typo can activate this\r\n            console.log(error.response);\r\n          } else if (error.request) {\r\n            alert(\"2\");\r\n            // The request was made but no response was received Or request not made\r\n            // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n            console.log(error.request);\r\n          } else {\r\n            alert(\"3\");\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log(\"Error\", error.message);\r\n          }\r\n        });\r\n    } else {\r\n      let passwordErrorHolder = errorsLoginValues.inputedPassword;\r\n\r\n      let usernameErrorHolder = errorsLoginValues.inputedUsername;\r\n\r\n      if (!cleanLoginValues.inputedPassword) {\r\n        passwordErrorHolder = 1;\r\n      }\r\n\r\n      if (!cleanLoginValues.inputedUsername) {\r\n        usernameErrorHolder = 1;\r\n      }\r\n\r\n      setErrorsLoginValues({\r\n        ...errorsLoginValues,\r\n        inputedPassword: passwordErrorHolder,\r\n        inputedUsername: usernameErrorHolder,\r\n      });\r\n    }\r\n  };\r\n\r\n  var classes = useStyleModal();\r\n\r\n  return (\r\n    <>\r\n      {showModalForm ? (\r\n        <DialogContent\r\n          className=\"FormDialog-container dontallowhighlighting \"\r\n          onClick={onBackgroundFocus}\r\n          style={{ overflow: \"hidden\", cursor: \"pointer\" }}\r\n          ref={ModalBackgroundRef}\r\n        >\r\n          <ServerError\r\n            setServerErrorData={setServerErrorData}\r\n            serverErrorDisplay={serverErrorDisplay}\r\n            serverErrorData={serverErrorData}\r\n            darkmode={darkmode}\r\n          />\r\n          <animated.div style={modalanimation}>\r\n            <Paper\r\n              className={PaperStyle}\r\n              style={{ borderRadius: borderGrid, cursor: \"default\" }}\r\n            >\r\n              <Grid container xs={12} className={classes.containerStyle}>\r\n                <Grid item xs={GridHolderA}>\r\n                  <Grid\r\n                    xs={12}\r\n                    item\r\n                    style={{\r\n                      position: \"fixed\",\r\n                      left: \"1em\",\r\n                      top: \"2.6em\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      className={zoomedModal ? \"hide-logo\" : \"log-logo\"}\r\n                      onClick={iconclicked}\r\n                      src={SuperIcon}\r\n                      alt=\"SuperstarZ logo\"\r\n                    />\r\n                  </Grid>\r\n                  <img\r\n                    onClick={zoomlogmodal}\r\n                    onLoad={onimageload}\r\n                    src={showimage}\r\n                    className={classes.imageStyle}\r\n                    alt=\"Login Image\"\r\n                  />\r\n                </Grid>\r\n\r\n                {formtype ? (\r\n                  <Grid xs={GridHolderB} item>\r\n                    <Grid xs={12} item className=\"formholder\">\r\n                      <Grid\r\n                        xs={12}\r\n                        className=\"center-content-vertically\"\r\n                        style={{ marginTop: \"-30px\" }}\r\n                      >\r\n                        <img\r\n                          onClick={iconclicked}\r\n                          className={\r\n                            zoomedModal ? \"zoom-login-logo\" : \"hide-logo\"\r\n                          }\r\n                          src={SuperIcon}\r\n                          alt=\"SuperstarZ logo\"\r\n                        />\r\n\r\n                        <ModalFormLoginError\r\n                          type={true}\r\n                          ErrorDisplay={errorsLoginValues.inputedUsername}\r\n                          darkmode={darkmode}\r\n                          WidthHolder={WidthHolder}\r\n                        />\r\n\r\n                        <TextField\r\n                          style={{\r\n                            width: WidthHolder,\r\n                            paddingBottom: \"60px\",\r\n                          }}\r\n                          inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                          InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                          label=\"Username\"\r\n                          onChange={updateLoginvalues}\r\n                          name=\"inputedUsername\"\r\n                          value={rawLoginValues.inputedUsername}\r\n                          variant=\"filled\"\r\n                        />\r\n\r\n                        <TextField\r\n                          style={{\r\n                            width: WidthHolder,\r\n                            paddingBottom: \"50px\",\r\n                            zIndex: 1,\r\n                          }}\r\n                          inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                          InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                          label=\"Password\"\r\n                          onChange={updateLoginvalues}\r\n                          name=\"inputedPassword\"\r\n                          value={rawLoginValues.inputedPassword}\r\n                          variant=\"filled\"\r\n                        />\r\n                        <ModalFormLoginError\r\n                          type={false}\r\n                          ErrorDisplay={errorsLoginValues.inputedPassword}\r\n                          darkmode={darkmode}\r\n                          WidthHolder={WidthHolder}\r\n                        />\r\n\r\n                        <Grid container xs={12}>\r\n                          <Grid xs={4}></Grid>\r\n                          <Grid item className=\"buttonpad buttonshake\" xs={4}>\r\n                            <Button\r\n                              onClick={logmein}\r\n                              className={loginclass}\r\n                              fullWidth={true}\r\n                              variant=\"outlined\"\r\n                              size=\"large\"\r\n                              color=\"primary\"\r\n                            >\r\n                              Log In\r\n                            </Button>\r\n                          </Grid>{\" \"}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                ) : (\r\n                  <Grid xs={GridHolderB} item className=\"formholder\">\r\n                    <Grid\r\n                      xs={12}\r\n                      className=\"center-content-vertically\"\r\n                      style={{ padding: \"0px\" }}\r\n                    >\r\n                      <img\r\n                        onClick={iconclicked}\r\n                        className={\r\n                          zoomedModal ? \"zoom-signup-logo\" : \"hide-logo\"\r\n                        }\r\n                        src={SuperIcon}\r\n                        alt=\"SuperstarZ logo\"\r\n                      />\r\n                      <ModalLogFormError\r\n                        errorFormChecking={errorFormChecking}\r\n                        WidthHolder={WidthHolder}\r\n                        darkmode={darkmode}\r\n                        type={true}\r\n                        cantPassBadEmail={cantPassBadEmail}\r\n                        ErrorDisplay={emailErrorDisplay}\r\n                        ErrorData={emailErrorData}\r\n                      />\r\n                      <TextField\r\n                        style={{ width: WidthHolder, paddingBottom: \"45px\" }}\r\n                        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                        label=\"Email\"\r\n                        onChange={updateSignvalues}\r\n                        name=\"inputedEmail\"\r\n                        value={rawSignupValues.inputedEmail}\r\n                        variant=\"filled\"\r\n                      />\r\n                      <ModalLogFormError\r\n                        errorFormChecking={errorFormChecking}\r\n                        WidthHolder={WidthHolder}\r\n                        darkmode={darkmode}\r\n                        type={true}\r\n                        cantPassBadEmail={cantPassBadEmail}\r\n                        ErrorDisplay={usernameErrorDisplay}\r\n                        ErrorData={usernameErrorData}\r\n                      />\r\n                      <TextField\r\n                        style={{ width: WidthHolder, paddingBottom: \"45px\" }}\r\n                        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                        label=\"Username\"\r\n                        onChange={updateSignvalues}\r\n                        name=\"inputedUsername\"\r\n                        value={rawSignupValues.inputedUsername}\r\n                        variant=\"filled\"\r\n                      />\r\n\r\n                      <TextField\r\n                        style={{\r\n                          width: WidthHolder,\r\n                          paddingBottom: \"30px\",\r\n                          zIndex: 1,\r\n                        }}\r\n                        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                        label=\"Password\"\r\n                        onChange={updateSignvalues}\r\n                        name=\"inputedPassword\"\r\n                        value={rawSignupValues.inputedPassword}\r\n                        variant=\"filled\"\r\n                      />\r\n                      <ModalLogFormError\r\n                        errorFormChecking={errorFormChecking}\r\n                        darkmode={darkmode}\r\n                        WidthHolder={WidthHolder}\r\n                        type={false}\r\n                        cantPassBadEmail={cantPassBadEmail}\r\n                        ErrorDisplay={passwordErrorDisplay}\r\n                        ErrorData={passwordErrorData}\r\n                      />\r\n\r\n                      <Grid container xs={12} style={{ marginTop: \"20px\" }}>\r\n                        <Grid xs={4}></Grid>\r\n                        <Grid item className=\"buttonpad buttonshake\" xs={4}>\r\n                          <Button\r\n                            className={signupclass}\r\n                            onClick={signmeup}\r\n                            fullWidth={true}\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            color=\"secondary\"\r\n                          >\r\n                            Sign Up\r\n                          </Button>\r\n                        </Grid>{\" \"}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </Paper>\r\n          </animated.div>\r\n        </DialogContent>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}