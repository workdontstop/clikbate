{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\MobileModalLog.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { IconButton, InputAdornment, Grid, DialogContent, Paper, makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { useSpring, animated } from \"react-spring\";\nimport ModalFormLoginError from \"./ModalFormLoginError\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MobileModalLog(DialogeDataMobile) {\n  _s();\n\n  ///\n  ///\n  ///\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n  const modalanimation = useSpring({\n    config: {\n      duration: 1000\n    },\n    opacity: DialogeDataMobile.showModalForm ? 1 : 0.9,\n    transform: DialogeDataMobile.showModalForm ? `translateY(0%)` : `translateY(100%)`\n  });\n  const modalanimationTwo = useSpring({\n    config: {\n      duration: 900\n    },\n    opacity: DialogeDataMobile.showModalForm ? 1 : 0.9,\n    transform: DialogeDataMobile.showModalForm ? `translateY(0%)` : `translateY(100%)`\n  }); ///\n  ///\n  ///\n  /// MATERIAL UI  CUSTOM STYLES\n\n  var useStyleModal = makeStyles(() => ({\n    containerStyle: {\n      width: DialogeDataMobile.imageReal,\n      height: \"auto\",\n      boxShadow: \"0 5px 16px rgba(0, 0, 0, 0.2)\",\n      color: \"#000000\",\n      position: \"relative\",\n      zIndex: 10,\n      borderRadius: DialogeDataMobile.borderGrid\n    },\n    imageStyle: {\n      opacity: DialogeDataMobile.opacityFixedModalImage,\n      cursor: \"pointer\",\n      objectFit: \"contain\",\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: \"0px\",\n      padding: \"0px\"\n    },\n    imageStylex: {\n      opacity: DialogeDataMobile.opacitySlidingModalImage,\n      cursor: \"pointer\",\n      width: \"100%\",\n      height: \"auto\",\n      borderRadius: \"0px\"\n    }\n  }));\n  var classes = useStyleModal();\n  return /*#__PURE__*/_jsxDEV(DialogContent, {\n    className: \"fadermodal FormDialog-container-mobile dontallowhighlighting\",\n    onClick: DialogeDataMobile.onBackgroundFocus,\n    style: {\n      overflow: \"hidden\",\n      cursor: \"pointer\",\n      padding: \"0px\"\n    },\n    ref: DialogeDataMobile.ModalBackgroundRef,\n    children: /*#__PURE__*/_jsxDEV(animated.div, {\n      style: modalanimation,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: DialogeDataMobile.PaperStyle,\n        style: {\n          borderRadius: DialogeDataMobile.borderGrid,\n          cursor: \"default\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: DialogeDataMobile.zoomlogmodal,\n              onLoad: DialogeDataMobile.onimageload,\n              src: DialogeDataMobile.showimage,\n              className: classes.imageStyle,\n              alt: \"Logsmall\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              height: \"60vh\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              xs: 12,\n              item: true,\n              className: \"formho\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                className: \"center-content-vertically\",\n                style: {\n                  marginTop: \"-5px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: DialogeDataMobile.logout,\n                  style: {\n                    cursor: \"pointer\",\n                    opacity: 0.1,\n                    position: \"fixed\",\n                    top: \"0.5em\",\n                    borderRadius: \"50%\"\n                  },\n                  children: [\" \", \"....\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n                  type: true,\n                  ErrorDisplay: DialogeDataMobile.errorsLoginInputedUsername,\n                  darkmode: DialogeDataMobile.darkmode,\n                  WidthHolder: DialogeDataMobile.WidthHolder\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: DialogeDataMobile.WidthHolder,\n                    paddingBottom: \"60px\"\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Username\",\n                  type: \"text\",\n                  onChange: DialogeDataMobile.updateLoginvalues,\n                  name: \"inputedUsername\",\n                  value: DialogeDataMobile.rawLogininputedUsername,\n                  variant: \"filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: DialogeDataMobile.WidthHolder,\n                    paddingBottom: \"40px\",\n                    zIndex: 1\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Password\",\n                  onChange: DialogeDataMobile.updateLoginvalues,\n                  type: DialogeDataMobile.loginShowPassword ? \"text\" : \"password\",\n                  name: \"inputedPassword\",\n                  value: DialogeDataMobile.rawLogininputedPassword,\n                  variant: \"filled\",\n                  InputProps: {\n                    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"end\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: DialogeDataMobile.ShowLoginPasswordForaWhile,\n                        onMouseDown: DialogeDataMobile.ShowLoginPasswordForaWhile,\n                        \"aria-label\": \"toggle password visibility\",\n                        children: DialogeDataMobile.loginShowPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 174,\n                          columnNumber: 31\n                        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 176,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 25\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n                  type: false,\n                  ErrorDisplay: DialogeDataMobile.errorsLoginInputedPassword,\n                  darkmode: DialogeDataMobile.darkmode,\n                  WidthHolder: DialogeDataMobile.WidthHolder\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  style: {\n                    marginTop: \"70px\",\n                    zIndex: 300\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    className: \"buttonpad buttonshake\",\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: DialogeDataMobile.logmein,\n                      className: DialogeDataMobile.loginclass,\n                      fullWidth: true,\n                      variant: \"outlined\",\n                      size: \"large\",\n                      color: \"primary\",\n                      children: \"Log In\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 21\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MobileModalLog, \"vJdsVWLRLsHhP67BoMr6LLED6eY=\", false, function () {\n  return [useSpring, useSpring, useStyleModal];\n});\n\n_c = MobileModalLog;\nexport default MobileModalLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"MobileModalLog\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/MobileModalLog.tsx"],"names":["React","IconButton","InputAdornment","Grid","DialogContent","Paper","makeStyles","TextField","Button","useSpring","animated","ModalFormLoginError","VisibilityOffIcon","VisibilityIcon","MobileModalLog","DialogeDataMobile","modalanimation","config","duration","opacity","showModalForm","transform","modalanimationTwo","useStyleModal","containerStyle","width","imageReal","height","boxShadow","color","position","zIndex","borderRadius","borderGrid","imageStyle","opacityFixedModalImage","cursor","objectFit","padding","imageStylex","opacitySlidingModalImage","classes","onBackgroundFocus","overflow","ModalBackgroundRef","PaperStyle","zoomlogmodal","onimageload","showimage","marginTop","logout","top","errorsLoginInputedUsername","darkmode","WidthHolder","paddingBottom","style","fontSize","updateLoginvalues","rawLogininputedUsername","loginShowPassword","rawLogininputedPassword","endAdornment","ShowLoginPasswordForaWhile","errorsLoginInputedPassword","logmein","loginclass"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  InputAdornment,\r\n  Grid,\r\n  DialogContent,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { IDialogeDataMobile } from \"./appFolder-Interfaces\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport ModalFormSignupError from \"./ModalFormSignupError\";\r\nimport ModalFormLoginError from \"./ModalFormLoginError\";\r\nimport ServerError from \"./ServerError\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\n\r\nfunction MobileModalLog(DialogeDataMobile: IDialogeDataMobile) {\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      duration: 1000,\r\n    },\r\n    opacity: DialogeDataMobile.showModalForm ? 1 : 0.9,\r\n    transform: DialogeDataMobile.showModalForm\r\n      ? `translateY(0%)`\r\n      : `translateY(100%)`,\r\n  });\r\n\r\n  const modalanimationTwo = useSpring({\r\n    config: {\r\n      duration: 900,\r\n    },\r\n    opacity: DialogeDataMobile.showModalForm ? 1 : 0.9,\r\n    transform: DialogeDataMobile.showModalForm\r\n      ? `translateY(0%)`\r\n      : `translateY(100%)`,\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// MATERIAL UI  CUSTOM STYLES\r\n  var useStyleModal = makeStyles(() => ({\r\n    containerStyle: {\r\n      width: DialogeDataMobile.imageReal,\r\n      height: \"auto\",\r\n      boxShadow: \"0 5px 16px rgba(0, 0, 0, 0.2)\",\r\n      color: \"#000000\",\r\n      position: \"relative\",\r\n      zIndex: 10,\r\n      borderRadius: DialogeDataMobile.borderGrid,\r\n    },\r\n    imageStyle: {\r\n      opacity: DialogeDataMobile.opacityFixedModalImage,\r\n      cursor: \"pointer\",\r\n      objectFit: \"contain\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"0px\",\r\n      padding: \"0px\",\r\n    },\r\n    imageStylex: {\r\n      opacity: DialogeDataMobile.opacitySlidingModalImage,\r\n      cursor: \"pointer\",\r\n      width: \"100%\",\r\n      height: \"auto\",\r\n      borderRadius: \"0px\",\r\n    },\r\n  }));\r\n  var classes = useStyleModal();\r\n  return (\r\n    <DialogContent\r\n      className=\"fadermodal FormDialog-container-mobile dontallowhighlighting\"\r\n      onClick={DialogeDataMobile.onBackgroundFocus}\r\n      style={{ overflow: \"hidden\", cursor: \"pointer\", padding: \"0px\" }}\r\n      ref={DialogeDataMobile.ModalBackgroundRef}\r\n    >\r\n      <animated.div style={modalanimation}>\r\n        <Paper\r\n          className={DialogeDataMobile.PaperStyle}\r\n          style={{\r\n            borderRadius: DialogeDataMobile.borderGrid,\r\n            cursor: \"default\",\r\n          }}\r\n        >\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <img\r\n                onClick={DialogeDataMobile.zoomlogmodal}\r\n                onLoad={DialogeDataMobile.onimageload}\r\n                src={DialogeDataMobile.showimage}\r\n                className={classes.imageStyle}\r\n                alt=\"Logsmall\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} style={{ height: \"60vh\" }}>\r\n              <Grid xs={12} item className=\"formho\">\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  className=\"center-content-vertically\"\r\n                  style={{ marginTop: \"-5px\" }}\r\n                >\r\n                  <button\r\n                    onClick={DialogeDataMobile.logout}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      opacity: 0.1,\r\n                      position: \"fixed\",\r\n                      top: \"0.5em\",\r\n                      borderRadius: \"50%\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    ....\r\n                  </button>\r\n                  <ModalFormLoginError\r\n                    type={true}\r\n                    ErrorDisplay={DialogeDataMobile.errorsLoginInputedUsername}\r\n                    darkmode={DialogeDataMobile.darkmode}\r\n                    WidthHolder={DialogeDataMobile.WidthHolder}\r\n                  />\r\n\r\n                  <TextField\r\n                    style={{\r\n                      width: DialogeDataMobile.WidthHolder,\r\n                      paddingBottom: \"60px\",\r\n                    }}\r\n                    inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                    InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                    label=\"Username\"\r\n                    type=\"text\"\r\n                    onChange={DialogeDataMobile.updateLoginvalues}\r\n                    name=\"inputedUsername\"\r\n                    value={DialogeDataMobile.rawLogininputedUsername}\r\n                    variant=\"filled\"\r\n                  />\r\n\r\n                  <TextField\r\n                    style={{\r\n                      width: DialogeDataMobile.WidthHolder,\r\n                      paddingBottom: \"40px\",\r\n                      zIndex: 1,\r\n                    }}\r\n                    inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                    InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                    label=\"Password\"\r\n                    onChange={DialogeDataMobile.updateLoginvalues}\r\n                    type={\r\n                      DialogeDataMobile.loginShowPassword ? \"text\" : \"password\"\r\n                    }\r\n                    name=\"inputedPassword\"\r\n                    value={DialogeDataMobile.rawLogininputedPassword}\r\n                    variant=\"filled\"\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            onClick={\r\n                              DialogeDataMobile.ShowLoginPasswordForaWhile\r\n                            }\r\n                            onMouseDown={\r\n                              DialogeDataMobile.ShowLoginPasswordForaWhile\r\n                            }\r\n                            aria-label=\"toggle password visibility\"\r\n                          >\r\n                            {DialogeDataMobile.loginShowPassword ? (\r\n                              <VisibilityIcon />\r\n                            ) : (\r\n                              <VisibilityOffIcon />\r\n                            )}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <ModalFormLoginError\r\n                    type={false}\r\n                    ErrorDisplay={DialogeDataMobile.errorsLoginInputedPassword}\r\n                    darkmode={DialogeDataMobile.darkmode}\r\n                    WidthHolder={DialogeDataMobile.WidthHolder}\r\n                  />\r\n\r\n                  <Grid container style={{ marginTop: \"70px\", zIndex: 300 }}>\r\n                    <Grid item xs={4}></Grid>\r\n                    <Grid item className=\"buttonpad buttonshake\" xs={4}>\r\n                      <Button\r\n                        onClick={DialogeDataMobile.logmein}\r\n                        className={DialogeDataMobile.loginclass}\r\n                        fullWidth={true}\r\n                        variant=\"outlined\"\r\n                        size=\"large\"\r\n                        color=\"primary\"\r\n                      >\r\n                        Log In\r\n                      </Button>\r\n                    </Grid>{\" \"}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </animated.div>\r\n    </DialogContent>\r\n  );\r\n}\r\n\r\nexport default MobileModalLog;\r\n"]},"metadata":{},"sourceType":"module"}