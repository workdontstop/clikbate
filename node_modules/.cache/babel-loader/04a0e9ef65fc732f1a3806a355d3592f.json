{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\ImageTobeFiltered.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ImageTobeFilteredx({\n  filterImage,\n  index,\n  itemUploadRef,\n  setActivatefilterImage\n}) {\n  _s();\n\n  const Caman = window.Caman;\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"/camanb.full.js\";\n    script.async = true;\n    document.body.appendChild(script);\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []); ///\n  ///\n  ///\n\n  const filterbaseimageRef = useRef(null);\n\n  const closegate = () => {\n    if (index === 0) {\n      ////\n      addfilter();\n    } else {\n      setActivatefilterImage(false);\n    }\n  };\n\n  const addfilter = () => {\n    if (index === 0) {\n      const previewFileReadimage = new Image();\n      previewFileReadimage.src = itemUploadRef.current[index].src;\n\n      previewFileReadimage.onload = function () {\n        const ctx = canvasRef.current.getContext(\"2d\");\n        canvasRef.current.height = previewFileReadimage.naturalHeight;\n        canvasRef.current.width = previewFileReadimage.naturalWidth; ////////////////////\n\n        requestAnimationFrame(() => {\n          ctx.drawImage(previewFileReadimage, 0, 0);\n        });\n        Caman(\"#image-id\", function (e) {\n          this.brightness(5).render();\n        });\n      }; ////////////////////\n      ////\n\n    }\n  };\n\n  const canvasRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: itemUploadRef.current[index] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: filterbaseimageRef,\n        onClick: closegate,\n        src: itemUploadRef.current ? itemUploadRef.current[index].src : null,\n        style: {\n          width: \"30%\",\n          height: \"auto\",\n          position: \"relative\",\n          margin: \"auto\",\n          marginRight: index === 0 ? \"20px\" : \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          padding: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null\n  }, void 0, false);\n}\n\n_s(ImageTobeFilteredx, \"zbt51fuTwULs0K2EOK6crmjXj9I=\");\n\n_c = ImageTobeFilteredx;\nexport const ImageTobeFiltered = /*#__PURE__*/React.memo(ImageTobeFilteredx);\n_c2 = ImageTobeFiltered;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImageTobeFilteredx\");\n$RefreshReg$(_c2, \"ImageTobeFiltered\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/ImageTobeFiltered.tsx"],"names":["React","useRef","useEffect","ImageTobeFilteredx","filterImage","index","itemUploadRef","setActivatefilterImage","Caman","window","script","document","createElement","src","async","body","appendChild","removeChild","filterbaseimageRef","closegate","addfilter","previewFileReadimage","Image","current","onload","ctx","canvasRef","getContext","height","naturalHeight","width","naturalWidth","requestAnimationFrame","drawImage","e","brightness","render","position","margin","marginRight","padding","ImageTobeFiltered","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { PreviewCanvas } from \"./PreviewCanvas\";\r\n\r\nfunction ImageTobeFilteredx({\r\n  filterImage,\r\n  index,\r\n  itemUploadRef,\r\n  setActivatefilterImage,\r\n}: any): JSX.Element {\r\n  const Caman = window.Caman;\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"/camanb.full.js\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  const filterbaseimageRef: any = useRef(null);\r\n\r\n  const closegate = () => {\r\n    if (index === 0) {\r\n      ////\r\n      addfilter();\r\n    } else {\r\n      setActivatefilterImage(false);\r\n    }\r\n  };\r\n\r\n  const addfilter = () => {\r\n    if (index === 0) {\r\n      const previewFileReadimage = new Image();\r\n      previewFileReadimage.src = itemUploadRef.current[index].src;\r\n      previewFileReadimage.onload = function () {\r\n        const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n        canvasRef.current.height = previewFileReadimage.naturalHeight;\r\n        canvasRef.current.width = previewFileReadimage.naturalWidth;\r\n\r\n        ////////////////////\r\n        requestAnimationFrame(() => {\r\n          ctx.drawImage(previewFileReadimage, 0, 0);\r\n        });\r\n\r\n        Caman(\"#image-id\", function (e:any) {\r\n          this.brightness(5).render();\r\n        });\r\n      };\r\n\r\n      ////////////////////\r\n      ////\r\n    }\r\n  };\r\n\r\n  const canvasRef: any = useRef(null);\r\n\r\n  return (\r\n    <>\r\n      {itemUploadRef.current[index] ? (\r\n        <>\r\n          {\" \"}\r\n          <img\r\n            ref={filterbaseimageRef}\r\n            onClick={closegate}\r\n            src={\r\n              itemUploadRef.current ? itemUploadRef.current[index].src : null\r\n            }\r\n            style={{\r\n              width: \"30%\",\r\n              height: \"auto\",\r\n              position: \"relative\",\r\n              margin: \"auto\",\r\n              marginRight: index === 0 ? \"20px\" : \"0px\",\r\n            }}\r\n          />\r\n          <canvas\r\n            ref={canvasRef}\r\n            style={{\r\n              padding: \"0px\",\r\n            }}\r\n          />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const ImageTobeFiltered = React.memo(ImageTobeFilteredx);\r\n"]},"metadata":{},"sourceType":"module"}