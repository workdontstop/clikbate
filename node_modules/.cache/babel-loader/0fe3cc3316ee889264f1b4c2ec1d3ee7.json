{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\AboutColor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport Axios from \"axios\";\n/// USE DISPATCH\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport { Grid } from \"@material-ui/core\";\nimport { matchPc } from \"../DetectDevice\";\nimport { UpdateColorAction } from \"../GlobalActions\";\nimport { useSpring, animated } from \"react-spring\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AboutColorx({\n  zoomed\n}) {\n  _s();\n\n  var data = \"\";\n  const dispatch = useDispatch(); ///\n\n  const getSliderWidthRef = useRef(null);\n  const [ActiveSlide, setActiveSlide] = useState(0);\n  const [stalestate] = useState(1);\n  const [getSliderWidth, setgetSliderWidth] = useState(0);\n  const [se, setse] = useState(null);\n  const [translate, setTranslate] = useState(0);\n  const [ShowHideNegativeValue, setShowHideNegativeValue] = useState(\"-\");\n  const [Showgood, setShowgood] = useState([]); ///\n  ///\n  ///\n  ///GET color SLIDER WIDTH\n\n  useEffect(() => {\n    if (getSliderWidthRef.current && getSliderWidthRef.current.clientWidth) {\n      var xx = 9 / 100;\n      var tt = document.documentElement.clientHeight * xx * 2;\n      setgetSliderWidth(tt);\n    }\n  }, []);\n  var ColorData = [\"#00FFFF\", \"#0080FF\", \"#217ca3\", \"#00FF00\", \"#00FF7F\", \"#96a321\", \"#FF0000\", \"#a3213f\", \"#a33221\", \"#FFA500\", \"#a36b21\", \"#FFFF00\", \"#DFFF00\", \"#8F00FF\", \"#6203fc\", \"#FF00FF\", \"#9221a3\", \"#FF007F\"];\n  const tempcolorz = []; ///\n  ///\n  ///\n  ///GET color SLIDER WIDTH\n\n  useEffect(() => {\n    ColorData.map((obj, index) => {\n      if (colortypeReducer === index) {\n        tempcolorz[index] = 1;\n      } else {\n        tempcolorz[index] = 0;\n      }\n\n      if (ColorData.length - 1 === index) {\n        setShowgood(tempcolorz);\n      }\n    });\n  }, []);\n  const optionsCollectImageRef = useRef(null); /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype;\n  var showCheck1 = \"hidden\";\n  var showCheck2 = \"hidden\";\n  var showCheck3 = \"hidden\";\n  var showCheck4 = \"hidden\";\n  var showCheck5 = \"hidden\";\n\n  if (colortypeReducer === 0) {\n    showCheck1 = \"visible\";\n  } else if (colortypeReducer === 1) {\n    showCheck2 = \"visible\";\n  } else if (colortypeReducer === 2) {\n    showCheck3 = \"visible\";\n  } else if (colortypeReducer === 3) {\n    showCheck4 = \"visible\";\n  } else {\n    showCheck5 = \"visible\";\n  } ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n\n  const {\n    image,\n    id\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const idReducer = id;\n  const imageReducer = image; ///\n  ///\n  ///\n  ///DISPATCH\n  ///\n  ///\n  ///\n  ///DOT ENV DATA\n\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env;\n  var colorboy = {\n    color1: \"\",\n    color2: \"\",\n    colortype: 0,\n    id: idReducer\n  };\n  const updateColor = useCallback(type => {\n    colorboy = {\n      color1: ColorData[type],\n      color2: \"\",\n      colortype: type,\n      id: idReducer\n    };\n    Axios.put(`${REACT_APP_SUPERSTARZ_URL}/update_color`, {\n      values: colorboy\n    }, {}).then(response => {\n      if (response.data.message === \"color updated\") {\n        dispatch(UpdateColorAction(colorboy));\n      }\n    }).catch(function (error) {\n      alert(\"about color error\");\n    });\n  }, [REACT_APP_SUPERSTARZ_URL, dispatch, data, colorboy]);\n\n  const updatecolor2 = i => {\n    ColorData.map((obj, index) => {\n      if (i === index) {\n        tempcolorz[index] = 1;\n      } else {\n        tempcolorz[index] = 0;\n      }\n\n      if (ColorData.length - 1 === index) {\n        setShowgood(tempcolorz);\n      }\n\n      updateColor(i);\n    });\n  };\n\n  const initialRawSignValue = {\n    inputedEmail: \"\",\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialErrorSignValue = {\n    inputedEmail: 0,\n    inputedUsername: 0,\n    inputedPassword: 0\n  };\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\n  const [errorsSignupValues, setErrorsSignupValues] = useState(initialErrorSignValue);\n  const UsernameCheckingTimer = useRef(null);\n  const clickcolortimer = useRef(null);\n\n  if (clickcolortimer.current) {\n    clearTimeout(clickcolortimer.current);\n  }\n\n  clickcolortimer.current = setTimeout(() => {}, 3000);\n  const updateTextFeildValues = useCallback(() => {}, [REACT_APP_SUPERSTARZ_URL, dispatch, colorboy]); ///\n  ///\n  ///\n  ///CREATE OPTIONS SLIDER ANIMATION WITH  REACT SPRING\n\n  const modalanimation = useSpring({\n    config: {\n      mass: 0.09,\n      tension: 50,\n      friction: 1.5\n    },\n    transform: `translateX(${ShowHideNegativeValue}${translate}px)`,\n    height: \"auto\",\n    display: \"flex\",\n    width: `auto`,\n    padding: \"0px\",\n    margin: \"auto\"\n  }); ///\n  ///\n  ///\n  /// NEXT SLIDE  FOR PC\n\n  const nextSlidePc = () => {\n    var i = ActiveSlide + 1;\n    setShowHideNegativeValue(\"-\"); ///set((state) => (state + 1) % slides.length)\n\n    var ff = ColorData.length - 1;\n\n    if (ActiveSlide >= ff / 2) {\n      setTranslate(0);\n      setActiveSlide(0);\n    } else {\n      setTranslate(translate => translate + getSliderWidth);\n      setActiveSlide(i);\n    }\n  }; ///\n  ///\n  ///\n  /// PREV SLIDE  FOR PC\n\n\n  const prevSlidePc = () => {\n    var i = ActiveSlide - 1;\n    setShowHideNegativeValue(\"-\"); ///set((state) => (state + 1) % slides.length)\n\n    if (ActiveSlide === 0) {\n      setTranslate(getSliderWidth * 9);\n      setActiveSlide(9);\n    } else {\n      setTranslate(translate => translate - getSliderWidth);\n      setActiveSlide(i);\n    }\n  };\n\n  var shadow4color = darkmodeReducer ? \"#444444\" : \"#cccccc\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        zIndex: 1,\n        paddingLeft: \"0px\",\n        paddingRight: \"0px\",\n        top: \"0vh\",\n        position: \"relative\",\n        margin: \"0 auto\",\n        overflow: \"hidden\",\n        left: \"0px\",\n        height: \"23vh\",\n        paddingBottom: \"0vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          margin: \"auto\",\n          textAlign: \"center\",\n          position: \"absolute\",\n          top: \"8vh\",\n          left: \"0.2vw\",\n          opacity: darkmodeReducer ? 1 : 0.3\n        },\n        children: /*#__PURE__*/_jsxDEV(CircleIcon, {\n          onClick: () => {\n            prevSlidePc();\n          },\n          className: \"buttonshake\",\n          style: {\n            fontSize: \"1.3vw\",\n            cursor: \"pointer\",\n            color: darkmodeReducer ? \"rgba(200, 200, 200, 0.1)\" : \"rgba(005, 005, 005, 0.2)\",\n            display: matchPc ? \"block\" : \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n        ref: optionsCollectImageRef,\n        style: modalanimation,\n        children: ColorData.map((im, i) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"9vh\",\n              margin: \"auto\",\n              textAlign: \"center\",\n              top: matchPc ? zoomed ? \"2.8vh\" : \"1.8vh\" : \"0.54em\",\n              marginLeft: \"50%\",\n              visibility: Showgood[i] === 0 ? \"hidden\" : \"hidden\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: matchPc ? \"1.1vw\" : \"2.08vh\",\n                fontWeight: \"bolder\",\n                fontFamily: \"Arial, Helvetica, sans-serif\",\n                color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\"\n              },\n              children: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            ref: i === 0 ? getSliderWidthRef : null,\n            onClick: () => {\n              updatecolor2(i);\n            },\n            item: true,\n            xs: 2,\n            style: {\n              width: `9vh`,\n              height: `9vh`,\n              position: \"absolute\",\n              backgroundColor: ColorData[i],\n              filter: `drop-shadow(4.2px 2.1px 2.92px ${shadow4color})`,\n              borderRadius: \"50%\",\n              zIndex: 0,\n              marginTop: \"-0px\",\n              marginLeft: \"3%\",\n              cursor: \"pointer\",\n              opacity: 0.6\n            },\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          margin: \"auto\",\n          textAlign: \"center\",\n          position: \"absolute\",\n          top: \"10vh\",\n          right: \"0.2vw\",\n          opacity: darkmodeReducer ? 1 : 0.3\n        },\n        children: /*#__PURE__*/_jsxDEV(CircleIcon, {\n          onClick: () => {\n            nextSlidePc();\n          },\n          className: \"buttonshake\",\n          style: {\n            fontSize: \"1.3vw\",\n            cursor: \"pointer\",\n            color: darkmodeReducer ? \"rgba(200, 200, 200, 0.1)\" : \"rgba(005, 005, 005, 0.2)\",\n            display: matchPc ? \"block\" : \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          marginTop: zoomed ? \"6.5vh\" : \"5vh\",\n          padding: \"0px\",\n          marginLeft: zoomed ? \"9.4vw\" : \"2.3vw\",\n          zIndex: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AboutColorx, \"3H8f1Hl9MYD0k58qw4sQm7WRuaU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSpring];\n});\n\n_c = AboutColorx;\nexport const AboutColor = /*#__PURE__*/React.memo(AboutColorx);\n_c2 = AboutColor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AboutColorx\");\n$RefreshReg$(_c2, \"AboutColor\");","map":{"version":3,"sources":["C:/Users/oghen/Documents/ClikBate/super/src/profile/AboutColor.tsx"],"names":["React","useState","useCallback","useEffect","useRef","Axios","useSelector","useDispatch","CheckIcon","Grid","matchPc","UpdateColorAction","useSpring","animated","CircleIcon","AboutColorx","zoomed","data","dispatch","getSliderWidthRef","ActiveSlide","setActiveSlide","stalestate","getSliderWidth","setgetSliderWidth","se","setse","translate","setTranslate","ShowHideNegativeValue","setShowHideNegativeValue","Showgood","setShowgood","current","clientWidth","xx","tt","document","documentElement","clientHeight","ColorData","tempcolorz","map","obj","index","colortypeReducer","length","optionsCollectImageRef","darkmode","state","GlobalReducer","darkmodeReducer","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","showCheck1","showCheck2","showCheck3","showCheck4","showCheck5","image","id","UserdataReducer","idReducer","imageReducer","REACT_APP_SUPERSTARZ_URL","process","env","colorboy","color1","color2","updateColor","type","put","values","then","response","message","catch","error","alert","updatecolor2","i","initialRawSignValue","inputedEmail","inputedUsername","inputedPassword","initialErrorSignValue","rawSignupValues","setRawSignupValues","errorsSignupValues","setErrorsSignupValues","UsernameCheckingTimer","clickcolortimer","clearTimeout","setTimeout","updateTextFeildValues","modalanimation","config","mass","tension","friction","transform","height","display","width","padding","margin","nextSlidePc","ff","prevSlidePc","shadow4color","zIndex","paddingLeft","paddingRight","top","position","overflow","left","paddingBottom","textAlign","opacity","fontSize","cursor","im","marginLeft","visibility","fontWeight","fontFamily","backgroundColor","filter","borderRadius","marginTop","right","AboutColor","memo"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from \"react\";\r\n\r\nimport Axios from \"axios\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n/// USE DISPATCH\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Palette, { usePalette } from \"react-palette\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { UpdateColorAction } from \"../GlobalActions\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\n\r\nfunction AboutColorx({ zoomed }: any): JSX.Element {\r\n  var data = \"\";\r\n  const dispatch = useDispatch();\r\n  ///\r\n\r\n  const getSliderWidthRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [ActiveSlide, setActiveSlide] = useState(0);\r\n\r\n  const [stalestate] = useState(1);\r\n\r\n  const [getSliderWidth, setgetSliderWidth] = useState(0);\r\n\r\n  const [se, setse] = useState<any>(null);\r\n\r\n  const [translate, setTranslate] = useState(0);\r\n\r\n  const [ShowHideNegativeValue, setShowHideNegativeValue] = useState(\"-\");\r\n\r\n  const [Showgood, setShowgood] = useState<Array<any>>([]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///GET color SLIDER WIDTH\r\n  useEffect(() => {\r\n    if (getSliderWidthRef.current && getSliderWidthRef.current.clientWidth) {\r\n      var xx = 9 / 100;\r\n      var tt = document.documentElement.clientHeight * xx * 2;\r\n      setgetSliderWidth(tt);\r\n    }\r\n  }, []);\r\n\r\n  var ColorData = [\r\n    \"#00FFFF\",\r\n    \"#0080FF\",\r\n    \"#217ca3\",\r\n    \"#00FF00\",\r\n    \"#00FF7F\",\r\n    \"#96a321\",\r\n    \"#FF0000\",\r\n    \"#a3213f\",\r\n    \"#a33221\",\r\n    \"#FFA500\",\r\n    \"#a36b21\",\r\n    \"#FFFF00\",\r\n    \"#DFFF00\",\r\n    \"#8F00FF\",\r\n    \"#6203fc\",\r\n    \"#FF00FF\",\r\n    \"#9221a3\",\r\n    \"#FF007F\",\r\n  ];\r\n\r\n  const tempcolorz: any = [];\r\n  ///\r\n  ///\r\n  ///\r\n  ///GET color SLIDER WIDTH\r\n  useEffect(() => {\r\n    ColorData.map((obj: any, index: any) => {\r\n      if (colortypeReducer === index) {\r\n        tempcolorz[index] = 1;\r\n      } else {\r\n        tempcolorz[index] = 0;\r\n      }\r\n\r\n      if (ColorData.length - 1 === index) {\r\n        setShowgood(tempcolorz);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const optionsCollectImageRef = useRef<HTMLDivElement>(null);\r\n\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  var showCheck1: any = \"hidden\";\r\n  var showCheck2: any = \"hidden\";\r\n  var showCheck3: any = \"hidden\";\r\n  var showCheck4: any = \"hidden\";\r\n  var showCheck5: any = \"hidden\";\r\n\r\n  if (colortypeReducer === 0) {\r\n    showCheck1 = \"visible\";\r\n  } else if (colortypeReducer === 1) {\r\n    showCheck2 = \"visible\";\r\n  } else if (colortypeReducer === 2) {\r\n    showCheck3 = \"visible\";\r\n  } else if (colortypeReducer === 3) {\r\n    showCheck4 = \"visible\";\r\n  } else {\r\n    showCheck5 = \"visible\";\r\n  }\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      image: string;\r\n      id: number;\r\n    };\r\n  }\r\n  const { image, id } = useSelector((state: RootStateReducerImage) => ({\r\n    ...state.UserdataReducer,\r\n  }));\r\n  const idReducer = id;\r\n\r\n  const imageReducer = image;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///DISPATCH\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///DOT ENV DATA\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n\r\n  var colorboy: any = {\r\n    color1: \"\",\r\n    color2: \"\",\r\n    colortype: 0,\r\n    id: idReducer,\r\n  };\r\n\r\n  const updateColor = useCallback(\r\n    (type: number) => {\r\n      colorboy = {\r\n        color1: ColorData[type],\r\n        color2: \"\",\r\n        colortype: type,\r\n        id: idReducer,\r\n      };\r\n\r\n      Axios.put(\r\n        `${REACT_APP_SUPERSTARZ_URL}/update_color`,\r\n        { values: colorboy },\r\n        {}\r\n      )\r\n        .then((response) => {\r\n          if (response.data.message === \"color updated\") {\r\n            dispatch(UpdateColorAction(colorboy));\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          alert(\"about color error\");\r\n        });\r\n    },\r\n    [REACT_APP_SUPERSTARZ_URL, dispatch, data, colorboy]\r\n  );\r\n\r\n  const updatecolor2 = (i: any) => {\r\n    ColorData.map((obj: any, index: any) => {\r\n      if (i === index) {\r\n        tempcolorz[index] = 1;\r\n      } else {\r\n        tempcolorz[index] = 0;\r\n      }\r\n\r\n      if (ColorData.length - 1 === index) {\r\n        setShowgood(tempcolorz);\r\n      }\r\n\r\n      updateColor(i);\r\n    });\r\n  };\r\n\r\n  const initialRawSignValue = {\r\n    inputedEmail: \"\",\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialErrorSignValue = {\r\n    inputedEmail: 0,\r\n    inputedUsername: 0,\r\n    inputedPassword: 0,\r\n  };\r\n\r\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\r\n  const [errorsSignupValues, setErrorsSignupValues] = useState(\r\n    initialErrorSignValue\r\n  );\r\n\r\n  const UsernameCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const clickcolortimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  if (clickcolortimer.current) {\r\n    clearTimeout(clickcolortimer.current);\r\n  }\r\n  clickcolortimer.current = setTimeout(() => {}, 3000);\r\n\r\n  const updateTextFeildValues = useCallback(() => {}, [\r\n    REACT_APP_SUPERSTARZ_URL,\r\n    dispatch,\r\n    colorboy,\r\n  ]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE OPTIONS SLIDER ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      mass: 0.09,\r\n      tension: 50,\r\n      friction: 1.5,\r\n    },\r\n    transform: `translateX(${ShowHideNegativeValue}${translate}px)`,\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    width: `auto`,\r\n    padding: \"0px\",\r\n    margin: \"auto\",\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE  FOR PC\r\n  const nextSlidePc = () => {\r\n    var i = ActiveSlide + 1;\r\n    setShowHideNegativeValue(\"-\");\r\n    ///set((state) => (state + 1) % slides.length)\r\n    var ff = ColorData.length - 1;\r\n\r\n    if (ActiveSlide >= ff / 2) {\r\n      setTranslate(0);\r\n      setActiveSlide(0);\r\n    } else {\r\n      setTranslate((translate) => translate + getSliderWidth);\r\n      setActiveSlide(i);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PREV SLIDE  FOR PC\r\n  const prevSlidePc = () => {\r\n    var i = ActiveSlide - 1;\r\n    setShowHideNegativeValue(\"-\");\r\n    ///set((state) => (state + 1) % slides.length)\r\n\r\n    if (ActiveSlide === 0) {\r\n      setTranslate(getSliderWidth * 9);\r\n      setActiveSlide(9);\r\n    } else {\r\n      setTranslate((translate) => translate - getSliderWidth);\r\n      setActiveSlide(i);\r\n    }\r\n  };\r\n\r\n  var shadow4color = darkmodeReducer ? \"#444444\" : \"#cccccc\";\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        style={{\r\n          zIndex: 1,\r\n          paddingLeft: \"0px\",\r\n          paddingRight: \"0px\",\r\n          top: \"0vh\",\r\n          position: \"relative\",\r\n          margin: \"0 auto\",\r\n          overflow: \"hidden\",\r\n          left: \"0px\",\r\n          height: \"23vh\",\r\n          paddingBottom: \"0vh\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          style={{\r\n            margin: \"auto\",\r\n            textAlign: \"center\",\r\n            position: \"absolute\",\r\n            top: \"8vh\",\r\n            left: \"0.2vw\",\r\n            opacity: darkmodeReducer ? 1 : 0.3,\r\n          }}\r\n        >\r\n          <CircleIcon\r\n            onClick={() => {\r\n              prevSlidePc();\r\n            }}\r\n            className=\"buttonshake\"\r\n            style={{\r\n              fontSize: \"1.3vw\",\r\n              cursor: \"pointer\",\r\n              color: darkmodeReducer\r\n                ? \"rgba(200, 200, 200, 0.1)\"\r\n                : \"rgba(005, 005, 005, 0.2)\",\r\n              display: matchPc ? \"block\" : \"none\",\r\n            }}\r\n          />\r\n        </Grid>\r\n        <animated.div ref={optionsCollectImageRef} style={modalanimation}>\r\n          {ColorData.map((im: any, i: any) => (\r\n            <Grid key={i} item xs={12}>\r\n              <div\r\n                style={{\r\n                  width: \"9vh\",\r\n                  margin: \"auto\",\r\n                  textAlign: \"center\",\r\n                  top: matchPc ? (zoomed ? \"2.8vh\" : \"1.8vh\") : \"0.54em\",\r\n                  marginLeft: \"50%\",\r\n                  visibility: Showgood[i] === 0 ? \"hidden\" : \"hidden\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    fontSize: matchPc ? \"1.1vw\" : \"2.08vh\",\r\n                    fontWeight: \"bolder\",\r\n                    fontFamily: \"Arial, Helvetica, sans-serif\",\r\n                    color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\",\r\n                  }}\r\n                >\r\n                  <CheckIcon />\r\n                </div>\r\n              </div>\r\n              <Grid\r\n                ref={i === 0 ? getSliderWidthRef : null}\r\n                onClick={() => {\r\n                  updatecolor2(i);\r\n                }}\r\n                item\r\n                xs={2}\r\n                style={{\r\n                  width: `9vh`,\r\n                  height: `9vh`,\r\n                  position: \"absolute\",\r\n                  backgroundColor: ColorData[i],\r\n                  filter: `drop-shadow(4.2px 2.1px 2.92px ${shadow4color})`,\r\n                  borderRadius: \"50%\",\r\n                  zIndex: 0,\r\n                  marginTop: \"-0px\",\r\n                  marginLeft: \"3%\",\r\n                  cursor: \"pointer\",\r\n                  opacity: 0.6,\r\n                }}\r\n              >\r\n                {\" \"}\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n        </animated.div>\r\n        <Grid\r\n          item\r\n          style={{\r\n            margin: \"auto\",\r\n            textAlign: \"center\",\r\n            position: \"absolute\",\r\n            top: \"10vh\",\r\n            right: \"0.2vw\",\r\n            opacity: darkmodeReducer ? 1 : 0.3,\r\n          }}\r\n        >\r\n          <CircleIcon\r\n            onClick={() => {\r\n              nextSlidePc();\r\n            }}\r\n            className=\"buttonshake\"\r\n            style={{\r\n              fontSize: \"1.3vw\",\r\n              cursor: \"pointer\",\r\n              color: darkmodeReducer\r\n                ? \"rgba(200, 200, 200, 0.1)\"\r\n                : \"rgba(005, 005, 005, 0.2)\",\r\n              display: matchPc ? \"block\" : \"none\",\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            marginTop: zoomed ? \"6.5vh\" : \"5vh\",\r\n            padding: \"0px\",\r\n            marginLeft: zoomed ? \"9.4vw\" : \"2.3vw\",\r\n            zIndex: 6,\r\n          }}\r\n        ></Grid>{\" \"}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const AboutColor = React.memo(AboutColorx);\r\n"]},"metadata":{},"sourceType":"module"}