{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\CommentFormHolder.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { matchPc } from \"../DetectDevice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CommentIcon from \"@mui/icons-material/Comment\"; ///Axios.defaults.withCredentials = true;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CommentFormHolderx({\n  zoomedModal,\n  WidthHolder,\n  loginForm,\n  setServerErrorData,\n  setServerErrorDisplay,\n  setserverEmojiplain,\n  checkSignupPasswordACTIVATE,\n  setcheckSignupPasswordACTIVATE,\n  imageHeightoverflow,\n  MiniLayoutOverFlow,\n  wideImage\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [showComAddBack, setshowComAddBack] = useState(false); ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n  const {\n    image,\n    imageThumb,\n    id\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const imageReducer = image;\n  const imageReducerThumb = imageThumb;\n  const idReducer = id;\n  const [GridZoomAx, setGridZoomAx] = useState(12);\n  const [GridZoomA, setGridZoomA] = useState(3);\n  const [GridZoomB, setGridZoomB] = useState(8);\n  useEffect(() => {\n    if (zoomedModal) {\n      setGridZoomAx(1);\n      setGridZoomA(2);\n      setGridZoomB(9);\n\n      if (wideImage) {} else {\n        setGridZoomAx(1);\n        setGridZoomA(2);\n        setGridZoomB(8);\n      }\n    } else {\n      setGridZoomAx(false);\n      setGridZoomA(3);\n      setGridZoomB(8);\n    }\n  }, [zoomedModal, wideImage]);\n\n  const startAddComment = () => {\n    setshowComAddBack(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: matchPc\n    /*PC PC PC PC PC PC PC PC  SIGNUP  PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\n    ?\n    /*#__PURE__*/\n    _jsxDEV(_Fragment, {\n      children: [showComAddBack ? null : null, /*#__PURE__*/_jsxDEV(CommentIcon, {\n        onClick: startAddComment,\n        className: darkmodeReducer ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-lightab  dontallowhighlighting   \",\n        style: {\n          color: darkmodeReducer ? \"#ffffff\" : \"#000000\",\n          fontSize: \"2vw\",\n          opacity: 0.6,\n          position: \"fixed\",\n          bottom: zoomedModal && MiniLayoutOverFlow && imageHeightoverflow ? \"21%\" : zoomedModal && imageHeightoverflow ? \"15%\" : MiniLayoutOverFlow && imageHeightoverflow ? \"11%\" : zoomedModal ? \"8%\" : \"4%\",\n          right: \"1vw\",\n          textAlign: \"center\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true)\n    /*PC PC PC PC   SIGN UP PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\n    :\n    /*#__PURE__*/\n\n    /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false)\n  /*MOBILE  MOBILE  MOBILE  MOBILE  SIGNUP MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\n  ;\n}\n\n_s(CommentFormHolderx, \"so40DIPLkefWVJAMwTIB+4w6nX4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = CommentFormHolderx;\nexport const CommentFormHolder = /*#__PURE__*/React.memo(CommentFormHolderx);\n_c2 = CommentFormHolder;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CommentFormHolderx\");\n$RefreshReg$(_c2, \"CommentFormHolder\");","map":{"version":3,"sources":["C:/Users/oghen/Documents/ClikBate/super/src/profile/CommentFormHolder.tsx"],"names":["React","useState","useEffect","Grid","matchPc","useSelector","useDispatch","CommentIcon","CommentFormHolderx","zoomedModal","WidthHolder","loginForm","setServerErrorData","setServerErrorDisplay","setserverEmojiplain","checkSignupPasswordACTIVATE","setcheckSignupPasswordACTIVATE","imageHeightoverflow","MiniLayoutOverFlow","wideImage","dispatch","showComAddBack","setshowComAddBack","darkmode","state","GlobalReducer","darkmodeReducer","image","imageThumb","id","UserdataReducer","imageReducer","imageReducerThumb","idReducer","GridZoomAx","setGridZoomAx","GridZoomA","setGridZoomA","GridZoomB","setGridZoomB","startAddComment","color","fontSize","opacity","position","bottom","right","textAlign","CommentFormHolder","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useCallback, useEffect } from \"react\";\r\nimport { Ispinnerinterface, IFormHolder } from \"../log/log-Interfaces\";\r\nimport Axios from \"axios\";\r\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\r\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\r\nimport { TextFieldLogin } from \"../log/TextFieldLogin\";\r\nimport { TextFieldSignup } from \"../log/TextFieldSignup\";\r\nimport { ModalFormSignupError } from \"../log/ModalFormSignupError\";\r\nimport { ModalFormLoginError } from \"../log/ModalFormLoginError\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { IsLoggedAction } from \"../log/actions/IsLoggedAction\";\r\nimport { UserdataAction } from \"../log/actions/UserdataAction\";\r\nimport { ActivateLoaderAction, HideLoaderAction } from \"../GlobalActions\";\r\n//////import { useHistory } from \"react-router-dom\";\r\nimport { PasswordCheck } from \"../log/PasswordCheck\";\r\nimport { UpdateColorAction } from \"../GlobalActions\";\r\nimport { UserInfoUpdateAction } from \"../log/actions/UserdataAction\";\r\nimport KeyboardDoubleArrowRightIcon from \"@mui/icons-material/KeyboardDoubleArrowRight\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport ReplyAllIcon from \"@mui/icons-material/ReplyAll\";\r\nimport QuickreplyIcon from \"@mui/icons-material/Quickreply\";\r\nimport { ICommentTemplate, IGrid } from \"../log/log-Interfaces\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport CommentIcon from \"@mui/icons-material/Comment\";\r\n\r\n///Axios.defaults.withCredentials = true;\r\n\r\nfunction CommentFormHolderx({\r\n  zoomedModal,\r\n  WidthHolder,\r\n  loginForm,\r\n  setServerErrorData,\r\n  setServerErrorDisplay,\r\n  setserverEmojiplain,\r\n  checkSignupPasswordACTIVATE,\r\n  setcheckSignupPasswordACTIVATE,\r\n  imageHeightoverflow,\r\n  MiniLayoutOverFlow,\r\n  wideImage,\r\n}: any) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [showComAddBack, setshowComAddBack] = useState<boolean>(false);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      image: string;\r\n      imageThumb: string;\r\n      id: number;\r\n    };\r\n  }\r\n  const { image, imageThumb, id } = useSelector(\r\n    (state: RootStateReducerImage) => ({\r\n      ...state.UserdataReducer,\r\n    })\r\n  );\r\n  const imageReducer = image;\r\n  const imageReducerThumb = imageThumb;\r\n  const idReducer = id;\r\n\r\n  const [GridZoomAx, setGridZoomAx] = useState<IGrid>(12);\r\n\r\n  const [GridZoomA, setGridZoomA] = useState<IGrid>(3);\r\n\r\n  const [GridZoomB, setGridZoomB] = useState<IGrid>(8);\r\n\r\n  useEffect(() => {\r\n    if (zoomedModal) {\r\n      setGridZoomAx(1);\r\n      setGridZoomA(2);\r\n      setGridZoomB(9);\r\n      if (wideImage) {\r\n      } else {\r\n        setGridZoomAx(1);\r\n        setGridZoomA(2);\r\n        setGridZoomB(8);\r\n      }\r\n    } else {\r\n      setGridZoomAx(false);\r\n      setGridZoomA(3);\r\n      setGridZoomB(8);\r\n    }\r\n  }, [zoomedModal, wideImage]);\r\n\r\n  const startAddComment = () => {\r\n    setshowComAddBack(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {matchPc /*PC PC PC PC PC PC PC PC  SIGNUP  PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */ ? (\r\n        <>\r\n          {showComAddBack ? null : null}\r\n\r\n\r\n          \r\n          <CommentIcon\r\n            onClick={startAddComment}\r\n            className={\r\n              darkmodeReducer\r\n                ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \"\r\n                : \"make-small-icons-clickable-lightab  dontallowhighlighting   \"\r\n            }\r\n            style={{\r\n              color: darkmodeReducer ? \"#ffffff\" : \"#000000\",\r\n              fontSize: \"2vw\",\r\n              opacity: 0.6,\r\n              position: \"fixed\",\r\n              bottom:\r\n                zoomedModal && MiniLayoutOverFlow && imageHeightoverflow\r\n                  ? \"21%\"\r\n                  : zoomedModal && imageHeightoverflow\r\n                  ? \"15%\"\r\n                  : MiniLayoutOverFlow && imageHeightoverflow\r\n                  ? \"11%\"\r\n                  : zoomedModal\r\n                  ? \"8%\"\r\n                  : \"4%\",\r\n              right: \"1vw\",\r\n              textAlign: \"center\",\r\n            }}\r\n          />{\" \"}\r\n        </> /*PC PC PC PC   SIGN UP PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\r\n      ) : (\r\n        /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\r\n        <>\r\n          <Grid container></Grid>\r\n        </>\r\n      )}\r\n    </>\r\n    /*MOBILE  MOBILE  MOBILE  MOBILE  SIGNUP MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\r\n  );\r\n}\r\n\r\nexport const CommentFormHolder = React.memo(CommentFormHolderx);\r\n"]},"metadata":{},"sourceType":"module"}