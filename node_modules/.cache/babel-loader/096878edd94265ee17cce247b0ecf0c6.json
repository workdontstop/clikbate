{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\FilterMode.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FilterModex({\n  filterImage\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  const filterbaseimageRef = useRef(null);\n  useEffect(() => {\n    itemUploadRef.current[index].src = canvasRef.current.toDataURL();\n  }, [filterbaseimageRef, filterImage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filterImage.map((photo, index) => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: filterbaseimageRef,\n        style: {\n          width: \"100%\",\n          height: \"auto\",\n          position: \"relative\",\n          margin: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(FilterModex, \"tSwX2SUWd4gFpzLMU9+LPFS8ViQ=\");\n\n_c = FilterModex;\nexport const FilterMode = /*#__PURE__*/React.memo(FilterModex);\n_c2 = FilterMode;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FilterModex\");\n$RefreshReg$(_c2, \"FilterMode\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/FilterMode.tsx"],"names":["React","useRef","useEffect","FilterModex","filterImage","filterbaseimageRef","itemUploadRef","current","index","src","canvasRef","toDataURL","map","photo","width","height","position","margin","FilterMode","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,MADF,EAIEC,SAJF,QAMO,OANP;;;;AAyBA,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAwD;AAAA;;AACtD;AACA;AACA;AACA,QAAMC,kBAAuB,GAAGJ,MAAM,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,aAAa,CAACC,OAAd,CAAsBC,KAAtB,EAA6BC,GAA7B,GAAmCC,SAAS,CAACH,OAAV,CAAkBI,SAAlB,EAAnC;AACD,GAFQ,EAEN,CAACN,kBAAD,EAAqBD,WAArB,CAFM,CAAT;AAIA,sBACE;AAAA,cACGA,WAAW,CAACQ,GAAZ,CAAgB,CAACC,KAAD,EAAaL,KAAb,KAA4B;AAC3C,0BACE;AACE,QAAA,GAAG,EAAEH,kBADP;AAEE,QAAA,KAAK,EAAE;AACLS,UAAAA,KAAK,EAAE,MADF;AAELC,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,QAAQ,EAAE,UAHL;AAILC,UAAAA,MAAM,EAAE;AAJH;AAFT;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAZA;AADH,mBADF;AAiBD;;GA3BQd,W;;KAAAA,W;AA6BT,OAAO,MAAMe,UAAU,gBAAGlB,KAAK,CAACmB,IAAN,CAAWhB,WAAX,CAAnB;MAAMe,U","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { PreviewCanvas } from \"./PreviewCanvas\";\r\n\r\nfunction FilterModex({ filterImage }: any): JSX.Element {\r\n  ///\r\n  ///\r\n  ///\r\n  const filterbaseimageRef: any = useRef(null);\r\n\r\n  useEffect(() => {\r\n    itemUploadRef.current[index].src = canvasRef.current.toDataURL();\r\n  }, [filterbaseimageRef, filterImage]);\r\n\r\n  return (\r\n    <>\r\n      {filterImage.map((photo: any, index: any) => {\r\n        return (\r\n          <img\r\n            ref={filterbaseimageRef}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"auto\",\r\n              position: \"relative\",\r\n              margin: \"auto\",\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const FilterMode = React.memo(FilterModex);\r\n"]},"metadata":{},"sourceType":"module"}