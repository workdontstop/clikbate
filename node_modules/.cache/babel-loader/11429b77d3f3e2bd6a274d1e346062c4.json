{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\OptionsSlider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSpring, animated } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction OptionsSliderx({\n  getSliderWidth\n}) {\n  _s();\n\n  const optionsImages = [\"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\", \"5.jpg\", \"6.jpg\"];\n  var getSliderWidthAverage = getSliderWidth / optionsImages.length;\n  const [translate, setTranslate] = useState(0);\n  const optionsCollectImageRef = useRef(null);\n  const [optionsImageDimension, setoptionsImageDimension] = useState(0); ///\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n\n  const modalanimation = useSpring({\n    config: {\n      duration: 300\n    },\n    transform: `translateX(-${translate}px)`,\n    transition: \"0.45s\",\n    height: \"auto\",\n    display: \"flex\",\n    width: `${getSliderWidth}px`,\n    backgroundColor: \"#00ccff\"\n  }); ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\n\n  const cl = i => {\n    setTranslate(getSliderWidthAverage * i);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        position: \"relative\",\n        margin: \"0 auto\",\n        overflow: \"hidden\"\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        ref: optionsCollectImageRef,\n        style: modalanimation,\n        children: optionsImages.map((im, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => {\n            cl(i);\n          },\n          Load: () => {\n            slideFirstImageOnLoad(i);\n          },\n          className: \"turprofileLight\",\n          style: {\n            width: \"6vw\",\n            height: \"6vw\",\n            borderRadius: \"50%\",\n            padding: \"3px\",\n            objectFit: \"cover\",\n            marginLeft: \"13px\",\n            marginTop: \"15px\",\n            boxShadow: \"0 0 3.8px blue\",\n            marginBottom: \"2px\"\n          },\n          src: `./images/options/${im}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true);\n}\n\n_s(OptionsSliderx, \"XoRZIx3zVjB7Y+vtYidHRPm1FGU=\", false, function () {\n  return [useSpring];\n});\n\n_c = OptionsSliderx;\nexport const OptionsSlider = /*#__PURE__*/React.memo(OptionsSliderx);\n_c2 = OptionsSlider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OptionsSliderx\");\n$RefreshReg$(_c2, \"OptionsSlider\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/OptionsSlider.tsx"],"names":["React","useRef","useState","Grid","useSpring","animated","OptionsSliderx","getSliderWidth","optionsImages","getSliderWidthAverage","length","translate","setTranslate","optionsCollectImageRef","optionsImageDimension","setoptionsImageDimension","modalanimation","config","duration","transform","transition","height","display","width","backgroundColor","cl","i","position","margin","overflow","map","im","slideFirstImageOnLoad","borderRadius","padding","objectFit","marginLeft","marginTop","boxShadow","marginBottom","OptionsSlider","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAAgBC,IAAhB,QAAiC,mBAAjC;AAIA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;;;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAiD;AAAA;;AAC/C,QAAMC,aAAa,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,OAA9C,CAAtB;AAEA,MAAIC,qBAAqB,GAAGF,cAAc,GAAGC,aAAa,CAACE,MAA3D;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,CAAD,CAA1C;AAEA,QAAMW,sBAAsB,GAAGZ,MAAM,CAAmB,IAAnB,CAArC;AACA,QAAM,CAACa,qBAAD,EAAwBC,wBAAxB,IAAoDb,QAAQ,CAAC,CAAD,CAAlE,CAR+C,CAU/C;AACA;;AACA,QAAMc,cAAc,GAAGZ,SAAS,CAAC;AAC/Ba,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADuB;AAI/BC,IAAAA,SAAS,EAAG,eAAcR,SAAU,KAJL;AAK/BS,IAAAA,UAAU,EAAE,OALmB;AAM/BC,IAAAA,MAAM,EAAE,MANuB;AAO/BC,IAAAA,OAAO,EAAE,MAPsB;AAQ/BC,IAAAA,KAAK,EAAG,GAAEhB,cAAe,IARM;AAS/BiB,IAAAA,eAAe,EAAE;AATc,GAAD,CAAhC,CAZ+C,CAwB/C;AACA;AACA;AACA;;AACA,QAAMC,EAAE,GAAIC,CAAD,IAAe;AACxBd,IAAAA,YAAY,CAACH,qBAAqB,GAAGiB,CAAzB,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE,QAAhC;AAA0CC,QAAAA,QAAQ,EAAE;AAApD,OAFT;AAAA,6BAIE,QAAC,QAAD,CAAU,GAAV;AAAc,QAAA,GAAG,EAAEhB,sBAAnB;AAA2C,QAAA,KAAK,EAAEG,cAAlD;AAAA,kBACGR,aAAa,CAACsB,GAAd,CAAkB,CAACC,EAAD,EAAUL,CAAV,kBACjB;AACE,UAAA,OAAO,EAAE,MAAM;AACbD,YAAAA,EAAE,CAACC,CAAD,CAAF;AACD,WAHH;AAIE,UAAA,IAAI,EAAE,MAAM;AACfM,YAAAA,qBAAqB,CAACN,CAAD,CAArB;AACF,WANG;AAOE,UAAA,SAAS,EAAC,iBAPZ;AAQE,UAAA,KAAK,EAAE;AACLH,YAAAA,KAAK,EAAE,KADF;AAELF,YAAAA,MAAM,EAAE,KAFH;AAGLY,YAAAA,YAAY,EAAE,KAHT;AAILC,YAAAA,OAAO,EAAE,KAJJ;AAKLC,YAAAA,SAAS,EAAE,OALN;AAMLC,YAAAA,UAAU,EAAE,MANP;AAOLC,YAAAA,SAAS,EAAE,MAPN;AAQLC,YAAAA,SAAS,EAAE,gBARN;AASLC,YAAAA,YAAY,EAAE;AATT,WART;AAmBE,UAAA,GAAG,EAAG,oBAAmBR,EAAG;AAnB9B;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADF,EA8BU,GA9BV;AAAA,kBADF;AAkCD;;GAlEQzB,c;UAYgBF,S;;;KAZhBE,c;AAoET,OAAO,MAAMkC,aAAa,gBAAGxC,KAAK,CAACyC,IAAN,CAAWnC,cAAX,CAAtB;MAAMkC,a","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { Paper, Grid, Box } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nfunction OptionsSliderx({ getSliderWidth }: any) {\r\n  const optionsImages = [\"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\", \"5.jpg\", \"6.jpg\"];\r\n\r\n  var getSliderWidthAverage = getSliderWidth / optionsImages.length;\r\n\r\n  const [translate, setTranslate] = useState(0);\r\n\r\n  const optionsCollectImageRef = useRef<HTMLImageElement>(null);\r\n  const [optionsImageDimension, setoptionsImageDimension] = useState(0);\r\n\r\n  ///\r\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      duration: 300,\r\n    },\r\n    transform: `translateX(-${translate}px)`,\r\n    transition: \"0.45s\",\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    width: `${getSliderWidth}px`,\r\n    backgroundColor: \"#00ccff\",\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\r\n  const cl = (i: number) => {\r\n    setTranslate(getSliderWidthAverage * i);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        style={{ position: \"relative\", margin: \"0 auto\", overflow: \"hidden\" }}\r\n      >\r\n        <animated.div ref={optionsCollectImageRef} style={modalanimation}>\r\n          {optionsImages.map((im: any, i: any) => (\r\n            <img\r\n              onClick={() => {\r\n                cl(i);\r\n              }}\r\n              Load={() => {\r\n           slideFirstImageOnLoad(i);\r\n        }}\r\n              className=\"turprofileLight\"\r\n              style={{\r\n                width: \"6vw\",\r\n                height: \"6vw\",\r\n                borderRadius: \"50%\",\r\n                padding: \"3px\",\r\n                objectFit: \"cover\",\r\n                marginLeft: \"13px\",\r\n                marginTop: \"15px\",\r\n                boxShadow: \"0 0 3.8px blue\",\r\n                marginBottom: \"2px\",\r\n              }}\r\n              src={`./images/options/${im}`}\r\n            />\r\n          ))}\r\n        </animated.div>\r\n      </Grid>{\" \"}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const OptionsSlider = React.memo(OptionsSliderx);\r\n"]},"metadata":{},"sourceType":"module"}