{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\ModalLog.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSpring } from \"react-spring\";\nimport { useTheme, useMediaQuery } from \"@material-ui/core\";\nimport \"./ModalLog.css\";\nimport Axios from \"axios\";\nimport { MobileModalLog } from \"./MobileModalLog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nAxios.defaults.withCredentials = true;\n\nfunction ModalLogx({\n  mobileZoom,\n  setMobileZoom,\n  zoomedModal,\n  setZoomedModal,\n  screenHeight,\n  formtype,\n  CloseModalForm,\n  showModalForm,\n  PaperStyle,\n  signupstyle,\n  loginstyle,\n  darkmode\n}) {\n  _s();\n\n  var usetheme = useTheme();\n  var matchPc = useMediaQuery(usetheme.breakpoints.up(\"md\"));\n  var matchTablet = useMediaQuery(usetheme.breakpoints.up(\"sm\")); ///\n  ///\n  ///\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n\n  const modalanimation = useSpring({\n    config: {\n      duration: 400\n    },\n    opacity: showModalForm ? 1 : 0.9,\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`\n  });\n  const modalanimationTwo = useSpring({\n    config: {\n      duration: 650\n    },\n    opacity: showModalForm ? 1 : 0.9,\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`\n  });\n  const DialogeData = {\n    darkmode: darkmode,\n    PaperStyle: PaperStyle,\n    formtype: formtype,\n    loginstyle: loginstyle,\n    signupstyle: signupstyle,\n    showModalForm: showModalForm,\n    modalanimation: modalanimation,\n    screenHeight: screenHeight,\n    CloseModalForm: CloseModalForm,\n    zoomedModal: zoomedModal,\n    modalanimationTwo: modalanimationTwo,\n    setZoomedModal: setZoomedModal,\n    mobileZoom: mobileZoom,\n    setMobileZoom: setMobileZoom\n  };\n  const DialogeDataMobile = {\n    darkmode: darkmode,\n    PaperStyle: PaperStyle,\n    formtype: formtype,\n    loginstyle: loginstyle,\n    signupstyle: signupstyle,\n    showModalForm: showModalForm,\n    modalanimation: modalanimation,\n    screenHeight: screenHeight,\n    CloseModalForm: CloseModalForm,\n    zoomedModal: zoomedModal,\n    setZoomedModal: setZoomedModal,\n    mobileZoom: mobileZoom,\n    setMobileZoom: setMobileZoom\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModalForm ? matchPc ? null : matchTablet ? /*#__PURE__*/_jsxDEV(MobileModalLog, { ...DialogeDataMobile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(MobileModalLog, { ...DialogeDataMobile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(ModalLogx, \"7h3FH6dSgJciRc05Cgtz1dPSRpA=\", false, function () {\n  return [useTheme, useMediaQuery, useMediaQuery, useSpring, useSpring];\n});\n\n_c = ModalLogx;\nexport const ModalLog = /*#__PURE__*/React.memo(ModalLogx);\n_c2 = ModalLog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalLogx\");\n$RefreshReg$(_c2, \"ModalLog\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/ModalLog.tsx"],"names":["React","useSpring","useTheme","useMediaQuery","Axios","MobileModalLog","defaults","withCredentials","ModalLogx","mobileZoom","setMobileZoom","zoomedModal","setZoomedModal","screenHeight","formtype","CloseModalForm","showModalForm","PaperStyle","signupstyle","loginstyle","darkmode","usetheme","matchPc","breakpoints","up","matchTablet","modalanimation","config","duration","opacity","transform","modalanimationTwo","DialogeData","DialogeDataMobile","ModalLog","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\n\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nimport { DialogContent } from \"@material-ui/core\";\r\n\r\nimport {\r\n  useTheme,\r\n  Paper,\r\n  useMediaQuery,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport { ImodalLog, IGrid } from \"./appFolder-Interfaces\";\r\nimport \"./ModalLog.css\";\r\nimport Axios from \"axios\";\r\n\r\nimport { MobileModalLog } from \"./MobileModalLog\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nAxios.defaults.withCredentials = true;\r\n\r\nfunction ModalLogx({\r\n  mobileZoom,\r\n  setMobileZoom,\r\n  zoomedModal,\r\n  setZoomedModal,\r\n  screenHeight,\r\n  formtype,\r\n  CloseModalForm,\r\n  showModalForm,\r\n  PaperStyle,\r\n  signupstyle,\r\n  loginstyle,\r\n  darkmode,\r\n}: ImodalLog): JSX.Element {\r\n  var usetheme = useTheme();\r\n  var matchPc = useMediaQuery(usetheme.breakpoints.up(\"md\"));\r\n  var matchTablet = useMediaQuery(usetheme.breakpoints.up(\"sm\"));\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      duration: 400,\r\n    },\r\n    opacity: showModalForm ? 1 : 0.9,\r\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`,\r\n  });\r\n\r\n  const modalanimationTwo = useSpring({\r\n    config: {\r\n      duration: 650,\r\n    },\r\n    opacity: showModalForm ? 1 : 0.9,\r\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`,\r\n  });\r\n\r\n  const DialogeData = {\r\n    darkmode: darkmode,\r\n    PaperStyle: PaperStyle,\r\n    formtype: formtype,\r\n    loginstyle: loginstyle,\r\n    signupstyle: signupstyle,\r\n    showModalForm: showModalForm,\r\n    modalanimation: modalanimation,\r\n    screenHeight: screenHeight,\r\n    CloseModalForm: CloseModalForm,\r\n    zoomedModal: zoomedModal,\r\n    modalanimationTwo: modalanimationTwo,\r\n    setZoomedModal: setZoomedModal,\r\n    mobileZoom: mobileZoom,\r\n    setMobileZoom: setMobileZoom,\r\n  };\r\n\r\n  const DialogeDataMobile = {\r\n    darkmode: darkmode,\r\n    PaperStyle: PaperStyle,\r\n    formtype: formtype,\r\n    loginstyle: loginstyle,\r\n    signupstyle: signupstyle,\r\n    showModalForm: showModalForm,\r\n    modalanimation: modalanimation,\r\n    screenHeight: screenHeight,\r\n    CloseModalForm: CloseModalForm,\r\n    zoomedModal: zoomedModal,\r\n    setZoomedModal: setZoomedModal,\r\n    mobileZoom: mobileZoom,\r\n    setMobileZoom: setMobileZoom,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModalForm ? (\r\n        matchPc ? null : matchTablet ? (\r\n          <MobileModalLog {...DialogeDataMobile} />\r\n        ) : (\r\n          <MobileModalLog {...DialogeDataMobile} />\r\n        )\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const ModalLog = React.memo(ModalLogx);\r\n"]},"metadata":{},"sourceType":"module"}