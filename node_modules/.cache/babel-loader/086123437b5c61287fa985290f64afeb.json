{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\Superstickers.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useLayoutEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Superstickersx({\n  setstartSuperSticker,\n  startSuperSticker,\n  itemUploadRef,\n  index\n}) {\n  _s();\n\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const [superImageHolder, setsuperImageHolder] = useState(null);\n  const [OriginalImageHeight, setOriginalImageHeight] = useState(0);\n  const [OriginalImageWidth, setOriginalImageWidth] = useState(0);\n  const canvasRefsticker = useRef(null);\n  const canvasRefstickerimage = useRef(null);\n  useLayoutEffect(() => {\n    const Newstickfilter = new Image();\n    Newstickfilter.src = itemUploadRef.current[index].src;\n\n    Newstickfilter.onload = function () {\n      const ctx = canvasRefsticker.current.getContext(\"2d\");\n\n      if (superImageHolder === Newstickfilter) {} else {\n        setsuperImageHolder(Newstickfilter);\n      }\n\n      if (OriginalImageHeight === Newstickfilter.naturalHeight) {} else {\n        setOriginalImageHeight(Newstickfilter.naturalHeight);\n      } //\n\n\n      if (OriginalImageWidth === Newstickfilter.naturalWidth) {} else {\n        setOriginalImageWidth(Newstickfilter.naturalWidth);\n      }\n    };\n  }, [startSuperSticker]);\n  useLayoutEffect(() => {\n    if (superImageHolder && canvasRefsticker.current) {\n      const ctx = canvasRefsticker.current.getContext(\"2d\");\n      const ctximage = canvasRefstickerimage.current.src;\n      canvasRefsticker.current.width = OriginalImageWidth;\n      canvasRefsticker.current.height = OriginalImageHeight;\n      var scalehh = window.innerHeight / OriginalImageHeight;\n      var widthx = OriginalImageWidth * scalehh;\n      ctx.drawImage(superImageHolder, 0, 0, 0, 0); ////\n\n      canvasRefsticker.current.style.width = `${widthx}px`;\n      canvasRefsticker.current.style.height = `${window.innerHeight}px`;\n    }\n  }, [superImageHolder, OriginalImageWidth, OriginalImageHeight]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        onClick: () => {\n          setstartSuperSticker(false);\n        },\n        xs: 12,\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          position: \"fixed\",\n          top: \"0vh\",\n          zIndex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: darkmodeReducer ? \"turlightpostdarkx\" : \"turlightpostlightx\",\n        ref: canvasRefsticker,\n        style: {\n          padding: \"0px\",\n          margin: \"auto\",\n          zIndex: 10,\n          position: \"relative\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: darkmodeReducer ? \"turlightpostdarkx\" : \"turlightpostlightx\",\n        ref: canvasRefstickerimage,\n        style: {\n          padding: \"0px\",\n          margin: \"auto\",\n          zIndex: 10,\n          position: \"relative\",\n          height: \"200px\",\n          width: \"200px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Superstickersx, \"eFiG6clfQtRrga5BGmAZJm8fTLQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = Superstickersx;\nexport const Superstickers = /*#__PURE__*/React.memo(Superstickersx);\n_c2 = Superstickers;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Superstickersx\");\n$RefreshReg$(_c2, \"Superstickers\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/Superstickers.tsx"],"names":["React","useRef","useState","useLayoutEffect","Grid","useSelector","Superstickersx","setstartSuperSticker","startSuperSticker","itemUploadRef","index","darkmode","state","GlobalReducer","darkmodeReducer","superImageHolder","setsuperImageHolder","OriginalImageHeight","setOriginalImageHeight","OriginalImageWidth","setOriginalImageWidth","canvasRefsticker","canvasRefstickerimage","Newstickfilter","Image","src","current","onload","ctx","getContext","naturalHeight","naturalWidth","ctximage","width","height","scalehh","window","innerHeight","widthx","drawImage","style","position","top","zIndex","padding","margin","Superstickers","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { Grid, GridSize } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { ImageTobeFiltered } from \"./ImageTobeFiltered\";\r\nimport { FilterModeArrow } from \"./FilterModeArrow\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { convertHexToRGB } from \"material-ui/utils/colorManipulator\";\r\n\r\nfunction Superstickersx({\r\n  setstartSuperSticker,\r\n  startSuperSticker,\r\n  itemUploadRef,\r\n  index,\r\n}: any): JSX.Element {\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  const [superImageHolder, setsuperImageHolder] = useState<any>(null);\r\n\r\n  const [OriginalImageHeight, setOriginalImageHeight] = useState<number>(0);\r\n\r\n  const [OriginalImageWidth, setOriginalImageWidth] = useState<number>(0);\r\n\r\n  const canvasRefsticker: any = useRef(null);\r\n\r\n  const canvasRefstickerimage: any = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    const Newstickfilter: any = new Image();\r\n\r\n    Newstickfilter.src = itemUploadRef.current[index].src;\r\n\r\n    Newstickfilter.onload = function () {\r\n      const ctx = canvasRefsticker.current.getContext(\"2d\");\r\n\r\n      if (superImageHolder === Newstickfilter) {\r\n      } else {\r\n        setsuperImageHolder(Newstickfilter);\r\n      }\r\n\r\n      if (OriginalImageHeight === Newstickfilter.naturalHeight) {\r\n      } else {\r\n        setOriginalImageHeight(Newstickfilter.naturalHeight);\r\n      }\r\n      //\r\n      if (OriginalImageWidth === Newstickfilter.naturalWidth) {\r\n      } else {\r\n        setOriginalImageWidth(Newstickfilter.naturalWidth);\r\n      }\r\n    };\r\n  }, [startSuperSticker]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (superImageHolder && canvasRefsticker.current) {\r\n      const ctx = canvasRefsticker.current.getContext(\"2d\");\r\n      const ctximage = canvasRefstickerimage.current.src;\r\n\r\n      canvasRefsticker.current.width = OriginalImageWidth;\r\n      canvasRefsticker.current.height = OriginalImageHeight;\r\n\r\n      var scalehh = window.innerHeight / OriginalImageHeight;\r\n      var widthx = OriginalImageWidth * scalehh;\r\n\r\n      ctx.drawImage(superImageHolder, 0, 0, 0, 0);\r\n      ////\r\n\r\n      canvasRefsticker.current.style.width = `${widthx}px`;\r\n      canvasRefsticker.current.style.height = `${window.innerHeight}px`;\r\n    }\r\n  }, [superImageHolder, OriginalImageWidth, OriginalImageHeight]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          onClick={() => {\r\n            setstartSuperSticker(false);\r\n          }}\r\n          xs={12}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            position: \"fixed\",\r\n            top: \"0vh\",\r\n            zIndex: 1,\r\n          }}\r\n        ></Grid>\r\n        <canvas\r\n          className={\r\n            darkmodeReducer ? \"turlightpostdarkx\" : \"turlightpostlightx\"\r\n          }\r\n          ref={canvasRefsticker}\r\n          style={{\r\n            padding: \"0px\",\r\n            margin: \"auto\",\r\n            zIndex: 10,\r\n            position: \"relative\",\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          className={\r\n            darkmodeReducer ? \"turlightpostdarkx\" : \"turlightpostlightx\"\r\n          }\r\n          ref={canvasRefstickerimage}\r\n          style={{\r\n            padding: \"0px\",\r\n            margin: \"auto\",\r\n            zIndex: 10,\r\n            position: \"relative\",\r\n            height: \"200px\",\r\n            width: \"200px\",\r\n          }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Superstickers = React.memo(Superstickersx);\r\n"]},"metadata":{},"sourceType":"module"}