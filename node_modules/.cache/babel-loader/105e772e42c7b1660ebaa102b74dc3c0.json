{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\super\\\\src\\\\upload\\\\Caption.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\nimport { TextField } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Axios from \"axios\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Captionx({\n  closeUploadModal,\n  setstartTopicCap,\n  selectedImage,\n  finalImageData,\n  finalImageDataSD,\n  finalImageDataBASE64\n}) {\n  _s();\n\n  const [matchTabletMobile, setmatchTabletMobile] = useState(false);\n  const [supeFilterLoadFadex, setsupeFilterLoadFadex] = useState(false);\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env;\n  const Value = {\n    caption: \"\",\n    topic: \"\"\n  };\n  const [captionvalues, setcaptionvalues] = useState(Value);\n  var s3finaldata = [];\n  var s3finaldataThumb = [];\n  var s3finaldataAll = []; ///\n  ///\n  ///DARKMODE FROM REDUX\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  var pcfont = 2.9;\n  var mobilefont = 4.8; //\n  ///\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\n\n  useEffect(() => {\n    if (matchMobile || matchTablet) {\n      setmatchTabletMobile(true);\n    }\n  }, []); ///\n  ///\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\n\n  const updatecaptiontop = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setcaptionvalues({ ...captionvalues,\n      [name]: value\n    });\n  }, [captionvalues]);\n  var transform = \"\";\n  var font1 = \"\";\n  var font2 = \"\";\n  var paddingbutU = \"\";\n  var width = \" \";\n  var sizex = undefined; ///\n  ///\n  ///\n\n  if (matchPc) {\n    sizex = \"medium\";\n    width = \"20%\";\n    transform = \"scale(1)\";\n    font1 = \"2.7vh\";\n    font2 = \"2.1vh\";\n    paddingbutU = \"70px\";\n  } else if (matchTablet) {\n    sizex = \"small\";\n    width = \"62%\";\n    transform = \"scale(1)\";\n    font1 = \"2.6vh\";\n    font2 = \"2vh\";\n    paddingbutU = \"100px\";\n  } else {\n    sizex = \"small\";\n    width = \"100%\";\n    transform = \"scale(0.94)\";\n    font1 = \"\";\n    font2 = \"\";\n    paddingbutU = \"80px\";\n  } ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    id\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const idReducer = id;\n  const dispatch = useDispatch();\n  const PutImageInS3WithURL = useCallback((holder, a, b, base64, allow, i) => {\n    let urlx = \"\";\n    var x = null;\n\n    if (allow) {\n      urlx = holder[i].urlThumb;\n      x = b;\n    } else {\n      urlx = holder[i].urlHD;\n      x = a;\n    }\n\n    Axios.put(urlx, x[i]).then(response => {\n      setsupeFilterLoadFadex(false);\n\n      if (response.status === 200) {\n        setsupeFilterLoadFadex(true);\n\n        if (allow) {\n          let imagelink = urlx.split('?')[0];\n          s3finaldataThumb[i] = imagelink;\n          var datak = {\n            imagedata: s3finaldata[i],\n            imagedataThumb: s3finaldataThumb[i],\n            id: idReducer\n          };\n          s3finaldataAll[i] = datak;\n\n          if (i + 1 === finalImageData.length) {\n            console.log(s3finaldataAll); //// UpdateBillboardDatabaseStatus200(s3finaldataAll,base64);\n          } else {\n            PutImageInS3WithURL(holder, a, b, base64, false, i + 1);\n          }\n        } else {\n          let imagelinkx = urlx.split('?')[0];\n          s3finaldata[i] = imagelinkx;\n          PutImageInS3WithURL(holder, a, b, base64, true, i);\n        }\n      }\n    }).catch(function (error) {\n      setsupeFilterLoadFadex(false);\n      alert(\"caption erroerrr\");\n    });\n  }, [idReducer, s3finaldata, s3finaldataThumb]);\n\n  const GetSecureURL = (hdBlob, thumbBlob, hdBase64) => {\n    var kob = {\n      count: finalImageData.length\n    };\n    Axios.post(`${REACT_APP_SUPERSTARZ_URL}/get_signed_url_4upload_post`, {\n      values: kob\n    }).then(response => {\n      setsupeFilterLoadFadex(false);\n      var holder = response.data.holder;\n      setsupeFilterLoadFadex(true);\n      PutImageInS3WithURL(holder, hdBlob, thumbBlob, hdBase64, false, 0);\n    }).catch(function (error) {\n      setsupeFilterLoadFadex(false);\n      alert(\"caption erroerrr\");\n    });\n  };\n\n  const UploadSuperData = useCallback((hdBlob, thumbBlob, hdBase64) => {\n    setsupeFilterLoadFadex(true);\n    GetSecureURL(hdBlob, thumbBlob, hdBase64);\n  }, [finalImageData, captionvalues, closeUploadModal, idReducer]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [supeFilterLoadFadex ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          backgroundColor: darkmodeReducer ? \"rgba(50,50,50,0.5)\" : \"rgba(250,250,250,0.5)\",\n          position: \"fixed\",\n          top: \"0px\",\n          width: \"100%\",\n          height: \"100%\",\n          zIndex: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: darkmodeReducer ? \"modal-containerDark\" : \"modal-containerLight\",\n      style: {\n        padding: \"0px\",\n        height: \"100%\",\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        size: sizex,\n        inputProps: {\n          style: {\n            fontSize: font1\n          }\n        },\n        InputLabelProps: {\n          style: {\n            fontSize: font2\n          }\n        },\n        onChange: updatecaptiontop,\n        value: captionvalues.topic,\n        style: {\n          transform: transform,\n          width: width,\n          paddingBottom: \"0px\",\n          position: \"fixed\",\n          top: \"25vh\",\n          left: \"20vw\",\n          zIndex: 26\n        },\n        label: \"Topic\",\n        type: \"text\",\n        name: \"topic\",\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(TextField, {\n        size: sizex,\n        inputProps: {\n          style: {\n            fontSize: font1\n          }\n        },\n        InputLabelProps: {\n          style: {\n            fontSize: font2\n          }\n        },\n        onChange: updatecaptiontop,\n        value: captionvalues.caption,\n        style: {\n          transform: transform,\n          width: \"60%\",\n          paddingBottom: \"0px\",\n          position: \"fixed\",\n          top: \"45vh\",\n          left: \"20vw\",\n          zIndex: 26\n        },\n        label: \"Share Your Thoughts\",\n        type: \"text\",\n        name: \"caption\",\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        style: {\n          margin: \"auto\",\n          textAlign: \"center\",\n          height: \"0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CheckIcon, {\n          onClick: () => {\n            //////postdata();\n            UploadSuperData(finalImageData, finalImageDataSD, finalImageDataBASE64);\n          },\n          className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \",\n          style: {\n            color: \"#ffffff\",\n            fontSize: matchTabletMobile ? `${mobilefont}vh` : `${pcfont}vw`,\n            marginRight: \"5vw\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: () => {\n            setstartTopicCap(false);\n          },\n          className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \",\n          style: {\n            margin: \"auto\",\n            color: \"#ffffff\",\n            fontSize: matchTabletMobile ? `${mobilefont}vh` : `${pcfont}vw`,\n            marginLeft: \"5vw\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Captionx, \"0AWIpCFMnOmt7joQ6g4qXto8eJs=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Captionx;\nexport const Caption = /*#__PURE__*/React.memo(Captionx);\n_c2 = Caption;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Captionx\");\n$RefreshReg$(_c2, \"Caption\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/super/src/upload/Caption.tsx"],"names":["React","useState","useCallback","useEffect","matchPc","matchTablet","matchMobile","TextField","Grid","useSelector","useDispatch","Axios","CheckIcon","CloseIcon","Captionx","closeUploadModal","setstartTopicCap","selectedImage","finalImageData","finalImageDataSD","finalImageDataBASE64","matchTabletMobile","setmatchTabletMobile","supeFilterLoadFadex","setsupeFilterLoadFadex","REACT_APP_SUPERSTARZ_URL","process","env","Value","caption","topic","captionvalues","setcaptionvalues","s3finaldata","s3finaldataThumb","s3finaldataAll","darkmode","state","GlobalReducer","darkmodeReducer","pcfont","mobilefont","updatecaptiontop","e","name","value","target","transform","font1","font2","paddingbutU","width","sizex","undefined","id","UserdataReducer","idReducer","dispatch","PutImageInS3WithURL","holder","a","b","base64","allow","i","urlx","x","urlThumb","urlHD","put","then","response","status","imagelink","split","datak","imagedata","imagedataThumb","length","console","log","imagelinkx","catch","error","alert","GetSecureURL","hdBlob","thumbBlob","hdBase64","kob","count","post","values","data","UploadSuperData","backgroundColor","position","top","height","zIndex","padding","style","fontSize","paddingBottom","left","margin","textAlign","color","marginRight","marginLeft","Caption","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Grid, GridSize } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { ImageTobeFiltered } from \"./ImageTobeFiltered\";\r\nimport { FilterModeArrow } from \"./FilterModeArrow\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { convertHexToRGB } from \"material-ui/utils/colorManipulator\";\r\nimport InsertPhotoIcon from \"@mui/icons-material/InsertPhoto\";\r\nimport FormatColorTextIcon from \"@mui/icons-material/FormatColorText\";\r\nimport UndoIcon from \"@mui/icons-material/Undo\";\r\nimport LayersIcon from \"@mui/icons-material/Layers\";\r\nimport FormatSizeIcon from \"@mui/icons-material/FormatSize\";\r\nimport FontDownloadIcon from \"@mui/icons-material/FontDownload\";\r\nimport LightbulbIcon from \"@mui/icons-material/Lightbulb\";\r\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\r\nimport TextFormatIcon from \"@mui/icons-material/TextFormat\";\r\nimport HighlightIcon from \"@mui/icons-material/Highlight\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { HexColorPicker } from \"react-colorful\";\r\nimport ColorizeIcon from \"@mui/icons-material/Colorize\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport PhotoSizeSelectLargeIcon from \"@mui/icons-material/PhotoSizeSelectLarge\";\r\nimport CropRotateIcon from \"@mui/icons-material/CropRotate\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport RestoreIcon from \"@mui/icons-material/Restore\";\r\nimport SettingsBackupRestoreIcon from \"@mui/icons-material/SettingsBackupRestore\";\r\nimport date from \"date-and-time\";\r\nimport { UpdateNavFilterReducer } from \"../GlobalActions\";\r\nimport { UpdateNavCropReducer } from \"../GlobalActions\";\r\n\r\nfunction Captionx({\r\n  closeUploadModal,\r\n  setstartTopicCap,\r\n  selectedImage,\r\n finalImageData,\r\nfinalImageDataSD,\r\n     finalImageDataBASE64,\r\n}: any): JSX.Element {\r\n  const [matchTabletMobile, setmatchTabletMobile] = useState<boolean>(false);\r\n\r\n  const [supeFilterLoadFadex, setsupeFilterLoadFadex] =\r\n    useState<boolean>(false);\r\n\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n\r\n  const Value = {\r\n    caption: \"\",\r\n    topic: \"\",\r\n  };\r\n\r\n  const [captionvalues, setcaptionvalues] = useState(Value);\r\n  \r\n\r\n  var s3finaldata:any=[];\r\n\r\n   var s3finaldataThumb:any=[];\r\n\r\n    var s3finaldataAll:any=[];\r\n\r\n\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  var pcfont = 2.9;\r\n\r\n  var mobilefont = 4.8;\r\n\r\n  //\r\n  ///\r\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\r\n  useEffect(() => {\r\n    if (matchMobile || matchTablet) {\r\n      setmatchTabletMobile(true);\r\n    }\r\n  }, []);\r\n\r\n  ///\r\n  ///\r\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\r\n  const updatecaptiontop = useCallback(\r\n    (e: any) => {\r\n      const { name, value } = e.target;\r\n      setcaptionvalues({ ...captionvalues, [name]: value });\r\n    },\r\n    [captionvalues]\r\n  );\r\n\r\n  var transform = \"\";\r\n  var font1 = \"\";\r\n  var font2 = \"\";\r\n  var paddingbutU = \"\";\r\n\r\n  var width = \" \";\r\n  var sizex: \"small\" | \"medium\" | undefined = undefined;\r\n  ///\r\n  ///\r\n  ///\r\n  if (matchPc) {\r\n    sizex = \"medium\";\r\n    width = \"20%\";\r\n    transform = \"scale(1)\";\r\n    font1 = \"2.7vh\";\r\n    font2 = \"2.1vh\";\r\n    paddingbutU = \"70px\";\r\n  } else if (matchTablet) {\r\n    sizex = \"small\";\r\n    width = \"62%\";\r\n    transform = \"scale(1)\";\r\n    font1 = \"2.6vh\";\r\n    font2 = \"2vh\";\r\n    paddingbutU = \"100px\";\r\n  } else {\r\n    sizex = \"small\";\r\n    width = \"100%\";\r\n    transform = \"scale(0.94)\";\r\n    font1 = \"\";\r\n    font2 = \"\";\r\n    paddingbutU = \"80px\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootUserdataReducer {\r\n    UserdataReducer: {\r\n      id: number;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const { id } = useSelector((state: RootUserdataReducer) => ({\r\n    ...state.UserdataReducer,\r\n  }));\r\n\r\n  const idReducer = id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n   \r\n  const PutImageInS3WithURL= useCallback(\r\n   (holder:any,a:any,b:any,base64:any,allow:boolean,i:number) => {\r\n\r\n  let urlx=\"\";\r\nvar x:any=null;\r\n       if(allow){ urlx=holder[i].urlThumb; x=b; }else{ urlx=holder[i].urlHD; x=a; }\r\n  Axios.put(urlx,x[i]).then((response) => {\r\n          setsupeFilterLoadFadex(false);\r\n          if (response.status === 200) {       \r\n      setsupeFilterLoadFadex(true);\r\n        if(allow){\r\n          let imagelink =urlx.split('?')[0];\r\n            s3finaldataThumb[i] = imagelink;\r\n           var datak = {\r\n            imagedata: s3finaldata[i],\r\n         imagedataThumb: s3finaldataThumb[i],\r\n          id: idReducer};\r\n        s3finaldataAll[i] = datak;\r\nif( i + 1 === finalImageData.length){\r\nconsole.log(s3finaldataAll);\r\n //// UpdateBillboardDatabaseStatus200(s3finaldataAll,base64);\r\n}else{   PutImageInS3WithURL(holder,a,b,base64,false,i+1);  }\r\n        }else{ \r\n          let imagelinkx =urlx.split('?')[0];\r\n             s3finaldata[i] = imagelinkx;  \r\n      PutImageInS3WithURL(holder,a,b,base64,true,i);   \r\n      }} }).catch(function (error) {\r\n           setsupeFilterLoadFadex(false);\r\n          alert(\"caption erroerrr\");\r\n        }); },\r\n    [idReducer,s3finaldata,s3finaldataThumb]\r\n  );\r\n\r\n\r\n\r\n   const GetSecureURL=(hdBlob: any,thumbBlob:any,hdBase64: any)=>{\r\n     var kob = {\r\n           count: finalImageData.length\r\n     }\r\n     Axios.post(`${REACT_APP_SUPERSTARZ_URL}/get_signed_url_4upload_post`,{values:kob})\r\n        .then((response)=>{\r\n         setsupeFilterLoadFadex(false);\r\n          var holder = response.data.holder;\r\n     setsupeFilterLoadFadex(true);\r\n       PutImageInS3WithURL(holder,hdBlob,thumbBlob,hdBase64,false,0);\r\n        }) .catch(function (error) {\r\n            setsupeFilterLoadFadex(false);\r\n          alert(\"caption erroerrr\");\r\n        })}\r\n\r\n\r\n\r\n        \r\n\r\n  \r\n  const UploadSuperData = useCallback((hdBlob: any,thumbBlob: any,hdBase64: any) => {\r\n    setsupeFilterLoadFadex(true);\r\nGetSecureURL(hdBlob,thumbBlob,hdBase64);     \r\n    },\r\n    [finalImageData, captionvalues, closeUploadModal, idReducer]\r\n  );\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {supeFilterLoadFadex ? (\r\n        <>\r\n          <Grid\r\n            container\r\n            style={{\r\n              backgroundColor: darkmodeReducer\r\n                ? \"rgba(50,50,50,0.5)\"\r\n                : \"rgba(250,250,250,0.5)\",\r\n              position: \"fixed\",\r\n              top: \"0px\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              zIndex: 10,\r\n            }}\r\n          ></Grid>{\" \"}\r\n        </>\r\n      ) : null}\r\n\r\n      <Grid\r\n        container\r\n        className={\r\n          darkmodeReducer ? \"modal-containerDark\" : \"modal-containerLight\"\r\n        }\r\n        style={{\r\n          padding: \"0px\",\r\n          height: \"100%\",\r\n          zIndex: 1,\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            padding: \"0px\",\r\n          }}\r\n        ></Grid>\r\n        <TextField\r\n          size={sizex}\r\n          inputProps={{ style: { fontSize: font1 } }}\r\n          InputLabelProps={{ style: { fontSize: font2 } }}\r\n          onChange={updatecaptiontop}\r\n          value={captionvalues.topic}\r\n          style={{\r\n            transform: transform,\r\n            width: width,\r\n            paddingBottom: \"0px\",\r\n            position: \"fixed\",\r\n            top: \"25vh\",\r\n            left: \"20vw\",\r\n            zIndex: 26,\r\n          }}\r\n          label=\"Topic\"\r\n          type=\"text\"\r\n          name=\"topic\"\r\n          variant=\"standard\"\r\n        />{\" \"}\r\n        <TextField\r\n          size={sizex}\r\n          inputProps={{ style: { fontSize: font1 } }}\r\n          InputLabelProps={{ style: { fontSize: font2 } }}\r\n          onChange={updatecaptiontop}\r\n          value={captionvalues.caption}\r\n          style={{\r\n            transform: transform,\r\n            width: \"60%\",\r\n            paddingBottom: \"0px\",\r\n            position: \"fixed\",\r\n            top: \"45vh\",\r\n            left: \"20vw\",\r\n            zIndex: 26,\r\n          }}\r\n          label=\"Share Your Thoughts\"\r\n          type=\"text\"\r\n          name=\"caption\"\r\n          variant=\"standard\"\r\n        />{\" \"}\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          style={{\r\n            margin: \"auto\",\r\n            textAlign: \"center\",\r\n            height: \"0px\",\r\n          }}\r\n        >\r\n          <CheckIcon\r\n            onClick={() => {\r\n              //////postdata();\r\n              UploadSuperData(finalImageData,finalImageDataSD,finalImageDataBASE64);\r\n            }}\r\n            className={\r\n              darkmodeReducer\r\n                ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \"\r\n                : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \"\r\n            }\r\n            style={{\r\n              color: \"#ffffff\",\r\n              fontSize: matchTabletMobile ? `${mobilefont}vh` : `${pcfont}vw`,\r\n              marginRight: \"5vw\",\r\n            }}\r\n          />\r\n          <CloseIcon\r\n            onClick={() => {\r\n              setstartTopicCap(false);\r\n            }}\r\n            className={\r\n              darkmodeReducer\r\n                ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \"\r\n                : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \"\r\n            }\r\n            style={{\r\n              margin: \"auto\",\r\n              color: \"#ffffff\",\r\n              fontSize: matchTabletMobile ? `${mobilefont}vh` : `${pcfont}vw`,\r\n              marginLeft: \"5vw\",\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Caption = React.memo(Captionx);\r\n"]},"metadata":{},"sourceType":"module"}