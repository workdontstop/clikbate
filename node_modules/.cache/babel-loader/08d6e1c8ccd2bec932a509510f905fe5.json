{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\step1.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Step1() {\n  _s();\n\n  const [name, setName] = useState();\n  const initialRawLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialCleanLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  ErrorsLoginValuess;\n  const [rawLoginValues, setRawLoginValues] = useState(initialRawLogValue);\n  const [cleanLoginValues, setCleanLoginValues] = useState(initialCleanLogValue);\n\n  const updateLoginvalues = e => {\n    const {\n      name,\n      value\n    } = e.target; // setRawLoginValues({ ...rawLoginValues, [name]: value });\n\n    let gg = /[^a-z0-9áéíóúñü \\.,_-]/gim;\n    let val = value.replace(gg, \"\");\n    let vv = gg.test(value);\n\n    if (vv) {\n      setErrorsLoginValues({ ...ErrorsLoginValues,\n        [name]: value\n      });\n    }\n\n    setRawLoginValues({ ...rawLoginValues,\n      [name]: val\n    });\n  };\n\n  const onSubmit = () => {\n    alert(rawLoginValues.inputedUsername);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      style: {\n        width: \"82%\",\n        paddingBottom: \"30px\"\n      },\n      inputProps: {\n        style: {\n          fontSize: \"2.5vh\"\n        }\n      },\n      InputLabelProps: {\n        style: {\n          fontSize: \"1.8vh\"\n        }\n      },\n      label: \"name\",\n      name: \"inputedUsername\",\n      variant: \"filled\",\n      type: \"text\",\n      onChange: updateLoginvalues,\n      value: rawLoginValues.inputedUsername\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      style: {\n        width: \"82%\",\n        paddingBottom: \"30px\"\n      },\n      inputProps: {\n        style: {\n          fontSize: \"2.5vh\"\n        }\n      },\n      InputLabelProps: {\n        style: {\n          fontSize: \"1.8vh\"\n        }\n      },\n      label: \"password\",\n      name: \"inputedPassword\",\n      variant: \"filled\",\n      type: \"password\",\n      onChange: updateLoginvalues,\n      value: rawLoginValues.inputedPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onMouseDown: onSubmit,\n      children: \"SUBMIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Step1, \"hKr1Gl06u8Jkf0z2nEEmvJ0Gyoc=\");\n\n_c = Step1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step1\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/step1.tsx"],"names":["React","useState","TextField","Step1","name","setName","initialRawLogValue","inputedUsername","inputedPassword","initialCleanLogValue","ErrorsLoginValuess","rawLoginValues","setRawLoginValues","cleanLoginValues","setCleanLoginValues","updateLoginvalues","e","value","target","gg","val","replace","vv","test","setErrorsLoginValues","ErrorsLoginValues","onSubmit","alert","width","paddingBottom","style","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nexport default function Step1() {\r\n  const [name, setName] = useState<string>();\r\n\r\n  const initialRawLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n\r\n  const initialCleanLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n\r\n  ErrorsLoginValuess;\r\n  const [rawLoginValues, setRawLoginValues] = useState(initialRawLogValue);\r\n\r\n  const [cleanLoginValues, setCleanLoginValues] = useState(\r\n    initialCleanLogValue\r\n  );\r\n\r\n  const updateLoginvalues = (e: any) => {\r\n    const { name, value } = e.target;\r\n\r\n    // setRawLoginValues({ ...rawLoginValues, [name]: value });\r\n\r\n    let gg = /[^a-z0-9áéíóúñü \\.,_-]/gim;\r\n    let val = value.replace(gg, \"\");\r\n    let vv = gg.test(value);\r\n\r\n    if (vv) {\r\n      setErrorsLoginValues({ ...ErrorsLoginValues, [name]: value });\r\n    }\r\n\r\n    setRawLoginValues({ ...rawLoginValues, [name]: val });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    alert(rawLoginValues.inputedUsername);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TextField\r\n        style={{ width: \"82%\", paddingBottom: \"30px\" }}\r\n        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n        label=\"name\"\r\n        name=\"inputedUsername\"\r\n        variant=\"filled\"\r\n        type=\"text\"\r\n        onChange={updateLoginvalues}\r\n        value={rawLoginValues.inputedUsername}\r\n      />\r\n      <TextField\r\n        style={{ width: \"82%\", paddingBottom: \"30px\" }}\r\n        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n        label=\"password\"\r\n        name=\"inputedPassword\"\r\n        variant=\"filled\"\r\n        type=\"password\"\r\n        onChange={updateLoginvalues}\r\n        value={rawLoginValues.inputedPassword}\r\n      />\r\n      <button onMouseDown={onSubmit}>SUBMIT</button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}