{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\super\\\\src\\\\upload\\\\PreviewCanvasHolder.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { matchPc, matchMobile } from \"../DetectDevice\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport Masonry from \"@mui/lab/Masonry\";\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PreviewCanvasHolderx({\n  setwaitONLOAD,\n  cropCanvasRef,\n  getpreviewFixedWidth,\n  CropImageHolder,\n  cropheight,\n  cropwidth,\n  BoxCropActivated,\n  hdcanvasvalue,\n  SourceWidthForCropX,\n  SourceWidthForCropY,\n  WideImageCheck,\n  crop,\n  getCropHeight,\n  canvasToimage,\n  refWithimageData,\n  addUploadItemsRef,\n  itemUploadRef,\n  itemUploadRefThumb,\n  itemUploadRefSD,\n  setsuperCropLoadFade,\n  length,\n  filterImage,\n  setfilterImage,\n  setallowFilters,\n  allowCropAllCanvas,\n  cutOffLoader,\n  setcutOffLoader,\n  addUploadItemsRefThumb,\n  addUploadItemsRefSD,\n  zoom,\n  selectedImage,\n  myCropHeight,\n  cropToo\n}) {\n  _s();\n\n  const [waitcropall, setwaitcropall] = useState(0); ///\n  ///\n  ///\n  /// GET GLOBAL INNER NAVIGATION VARIABLE\n\n  const {\n    activatecropImage\n  } = useSelector(state => ({ ...state.GlobalNavuploadReducer\n  }));\n  const activatecropImageReducer = activatecropImage;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [selectedImage.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: \"hidden\",\n        zIndex: 2,\n        position: activatecropImageReducer ? \"fixed\" : \"relative\",\n        top: activatecropImageReducer ? \"-800vh\" : \"0px\",\n        padding: \"0px\"\n      },\n      children: [selectedImage.map((photo, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"0px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(PreviewCanvasCropAll, {\n            setwaitcropall: setwaitcropall,\n            waitcropall: waitcropall,\n            zoom: zoom,\n            setwaitONLOAD: setwaitONLOAD,\n            allowCropAllCanvas: allowCropAllCanvas,\n            WideImageCheck: WideImageCheck,\n            SourceWidthForCropX: SourceWidthForCropX,\n            SourceWidthForCropY: SourceWidthForCropY,\n            hdcanvasvalue: hdcanvasvalue,\n            BoxCropActivated: BoxCropActivated,\n            cropheight: cropheight,\n            cropwidth: cropwidth,\n            CropImageHolder: CropImageHolder,\n            cropCanvasRef: cropCanvasRef,\n            crop: cropToo,\n            image: photo,\n            index: index,\n            getpreviewFixedWidth: getpreviewFixedWidth,\n            myCropHeight: myCropHeight,\n            canvasToimage: canvasToimage,\n            refWithimageData: refWithimageData,\n            addUploadItemsRef: addUploadItemsRef,\n            itemUploadRef: itemUploadRef,\n            itemUploadRefSD: itemUploadRefSD,\n            itemUploadRefThumb: itemUploadRefThumb,\n            setsuperCropLoadFade: setsuperCropLoadFade,\n            length: selectedImage.length,\n            filterImage: filterImage,\n            setfilterImage: setfilterImage,\n            setallowFilters: setallowFilters,\n            cutOffLoader: cutOffLoader,\n            setcutOffLoader: setcutOffLoader,\n            addUploadItemsRefThumb: addUploadItemsRefThumb,\n            addUploadItemsRefSD: addUploadItemsRefSD,\n            type: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this);\n      }), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: selectedImage.length > 0 ? selectedImage.length === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [selectedImage.map((photo, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"0px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(PreviewCanvasCropAll, {\n              setwaitcropall: setwaitcropall,\n              waitcropall: waitcropall,\n              zoom: zoom,\n              setwaitONLOAD: setwaitONLOAD,\n              allowCropAllCanvas: allowCropAllCanvas,\n              WideImageCheck: WideImageCheck,\n              SourceWidthForCropX: SourceWidthForCropX,\n              SourceWidthForCropY: SourceWidthForCropY,\n              hdcanvasvalue: hdcanvasvalue,\n              BoxCropActivated: BoxCropActivated,\n              cropheight: cropheight,\n              cropwidth: cropwidth,\n              CropImageHolder: CropImageHolder,\n              cropCanvasRef: cropCanvasRef,\n              crop: cropToo,\n              image: photo,\n              index: index,\n              getpreviewFixedWidth: getpreviewFixedWidth,\n              myCropHeight: myCropHeight,\n              canvasToimage: canvasToimage,\n              refWithimageData: refWithimageData,\n              addUploadItemsRef: addUploadItemsRef,\n              itemUploadRef: itemUploadRef,\n              itemUploadRefSD: itemUploadRefSD,\n              itemUploadRefThumb: itemUploadRefThumb,\n              setsuperCropLoadFade: setsuperCropLoadFade,\n              length: selectedImage.length,\n              filterImage: filterImage,\n              setfilterImage: setfilterImage,\n              setallowFilters: setallowFilters,\n              cutOffLoader: cutOffLoader,\n              setcutOffLoader: setcutOffLoader,\n              addUploadItemsRefThumb: addUploadItemsRefThumb,\n              addUploadItemsRefSD: addUploadItemsRefSD,\n              type: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 19\n          }, this);\n        }), \" \"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          style: {\n            padding: \"0px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              padding: \"0px\",\n              marginTop: activatecropImage ? \"0px\" : matchMobile ? \"2.5vh\" : \"1.5vh\"\n            },\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: selectedImage.length > 0 ? /*#__PURE__*/_jsxDEV(Masonry, {\n                columns: matchPc ? selectedImage.length > 2 ? 3 : 2 : 2,\n                spacing: 0,\n                style: {\n                  overflowX: \"hidden\",\n                  position: \"relative\",\n                  zIndex: 2,\n                  padding: \"0px\"\n                },\n                children: selectedImage.length > 0 ? selectedImage.map((photo, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      padding: \"0px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(PreviewCanvasCropAll, {\n                      setwaitcropall: setwaitcropall,\n                      waitcropall: waitcropall,\n                      zoom: zoom,\n                      setwaitONLOAD: setwaitONLOAD,\n                      allowCropAllCanvas: allowCropAllCanvas,\n                      WideImageCheck: WideImageCheck,\n                      SourceWidthForCropX: SourceWidthForCropX,\n                      SourceWidthForCropY: SourceWidthForCropY,\n                      hdcanvasvalue: hdcanvasvalue,\n                      BoxCropActivated: BoxCropActivated,\n                      cropheight: cropheight,\n                      cropwidth: cropwidth,\n                      CropImageHolder: CropImageHolder,\n                      cropCanvasRef: cropCanvasRef,\n                      crop: cropToo,\n                      image: photo,\n                      index: index,\n                      getpreviewFixedWidth: getpreviewFixedWidth,\n                      myCropHeight: myCropHeight,\n                      canvasToimage: canvasToimage,\n                      refWithimageData: refWithimageData,\n                      addUploadItemsRef: addUploadItemsRef,\n                      itemUploadRef: itemUploadRef,\n                      itemUploadRefSD: itemUploadRefSD,\n                      itemUploadRefThumb: itemUploadRefThumb,\n                      setsuperCropLoadFade: setsuperCropLoadFade,\n                      length: selectedImage.length,\n                      filterImage: filterImage,\n                      setfilterImage: setfilterImage,\n                      setallowFilters: setallowFilters,\n                      cutOffLoader: cutOffLoader,\n                      setcutOffLoader: setcutOffLoader,\n                      addUploadItemsRefThumb: addUploadItemsRefThumb,\n                      addUploadItemsRefSD: addUploadItemsRefSD,\n                      type: 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 7\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 31\n                  }, this);\n                }) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this) : null\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true) : null\n    }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: selectedImage.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflowX: \"hidden\",\n          zIndex: 2,\n          position: activatecropImageReducer ? \"fixed\" : \"relative\",\n          top: activatecropImageReducer ? \"-800vh\" : \"0px\",\n          padding: \"0px\"\n        },\n        children: [selectedImage.map((photo, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"0px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(PreviewCanvasCropAll, {\n              zoom: zoom,\n              setwaitONLOAD: setwaitONLOAD,\n              allowCropAllCanvas: allowCropAllCanvas,\n              WideImageCheck: WideImageCheck,\n              SourceWidthForCropX: SourceWidthForCropX,\n              SourceWidthForCropY: SourceWidthForCropY,\n              hdcanvasvalue: hdcanvasvalue,\n              BoxCropActivated: BoxCropActivated,\n              cropheight: cropheight,\n              cropwidth: cropwidth,\n              CropImageHolder: CropImageHolder,\n              cropCanvasRef: cropCanvasRef,\n              crop: cropToo,\n              image: photo,\n              index: index,\n              getpreviewFixedWidth: getpreviewFixedWidth,\n              myCropHeight: myCropHeight,\n              canvasToimage: canvasToimage,\n              refWithimageData: refWithimageData,\n              addUploadItemsRef: addUploadItemsRef,\n              itemUploadRef: itemUploadRef,\n              itemUploadRefSD: itemUploadRefSD,\n              itemUploadRefThumb: itemUploadRefThumb,\n              setsuperCropLoadFade: setsuperCropLoadFade,\n              length: selectedImage.length,\n              filterImage: filterImage,\n              setfilterImage: setfilterImage,\n              setallowFilters: setallowFilters,\n              cutOffLoader: cutOffLoader,\n              setcutOffLoader: setcutOffLoader,\n              addUploadItemsRefThumb: addUploadItemsRefThumb,\n              addUploadItemsRefSD: addUploadItemsRefSD,\n              type: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this);\n        }), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false)]\n  }, void 0, true);\n}\n\n_s(PreviewCanvasHolderx, \"udGzcjMowqDh10U5/Xr6zLKE6lc=\", false, function () {\n  return [useSelector];\n});\n\n_c = PreviewCanvasHolderx;\nexport const PreviewCanvasHolder = /*#__PURE__*/React.memo(PreviewCanvasHolderx);\n_c2 = PreviewCanvasHolder;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PreviewCanvasHolderx\");\n$RefreshReg$(_c2, \"PreviewCanvasHolder\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/super/src/upload/PreviewCanvasHolder.tsx"],"names":["React","useState","matchPc","matchMobile","Grid","useSelector","Masonry","PreviewCanvasCropAll","PreviewCanvasHolderx","setwaitONLOAD","cropCanvasRef","getpreviewFixedWidth","CropImageHolder","cropheight","cropwidth","BoxCropActivated","hdcanvasvalue","SourceWidthForCropX","SourceWidthForCropY","WideImageCheck","crop","getCropHeight","canvasToimage","refWithimageData","addUploadItemsRef","itemUploadRef","itemUploadRefThumb","itemUploadRefSD","setsuperCropLoadFade","length","filterImage","setfilterImage","setallowFilters","allowCropAllCanvas","cutOffLoader","setcutOffLoader","addUploadItemsRefThumb","addUploadItemsRefSD","zoom","selectedImage","myCropHeight","cropToo","waitcropall","setwaitcropall","activatecropImage","state","GlobalNavuploadReducer","activatecropImageReducer","overflowX","zIndex","position","top","padding","map","photo","index","marginTop","PreviewCanvasHolder","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useCallback,\r\n} from \"react\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { AnySoaRecord } from \"dns\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\n\r\nfunction PreviewCanvasHolderx({\r\n  setwaitONLOAD,\r\n  cropCanvasRef,\r\n  getpreviewFixedWidth,\r\n  CropImageHolder,\r\n  cropheight,\r\n  cropwidth,\r\n  BoxCropActivated,\r\n  hdcanvasvalue,\r\n  SourceWidthForCropX,\r\n  SourceWidthForCropY,\r\n  WideImageCheck,\r\n  crop,\r\n  getCropHeight,\r\n  canvasToimage,\r\n  refWithimageData,\r\n  addUploadItemsRef,\r\n  itemUploadRef,\r\n  itemUploadRefThumb,\r\n  itemUploadRefSD,\r\n  setsuperCropLoadFade,\r\n  length,\r\n  filterImage,\r\n  setfilterImage,\r\n  setallowFilters,\r\n  allowCropAllCanvas,\r\n  cutOffLoader,\r\n  setcutOffLoader,\r\n  addUploadItemsRefThumb,\r\n  addUploadItemsRefSD,\r\n  zoom,\r\n  selectedImage,\r\n  myCropHeight,\r\n  cropToo,\r\n}: any): JSX.Element {\r\n  const [waitcropall, setwaitcropall] = useState<number>(0);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET GLOBAL INNER NAVIGATION VARIABLE\r\n  const { activatecropImage } = useSelector((state: RootStateOrAny) => ({\r\n    ...state.GlobalNavuploadReducer,\r\n  }));\r\n  const activatecropImageReducer = activatecropImage;\r\n\r\n  return (\r\n    <>\r\n      {/* SD IMAGE  CREATED  itemUploadRef */}\r\n      {selectedImage.length > 0 ? (\r\n        <div\r\n          style={{\r\n            overflowX: \"hidden\",\r\n            zIndex: 2,\r\n            position: activatecropImageReducer ? \"fixed\" : \"relative\",\r\n            top: activatecropImageReducer ? \"-800vh\" : \"0px\",\r\n            padding: \"0px\",\r\n          }}\r\n        >\r\n          {selectedImage.map((photo: any, index: any) => {\r\n            return (\r\n              <div key={index} style={{ padding: \"0px\" }}>\r\n                <PreviewCanvasCropAll\r\n                  setwaitcropall={setwaitcropall}\r\n                  waitcropall={waitcropall}\r\n                  zoom={zoom}\r\n                  setwaitONLOAD={setwaitONLOAD}\r\n                  allowCropAllCanvas={allowCropAllCanvas}\r\n                  WideImageCheck={WideImageCheck}\r\n                  SourceWidthForCropX={SourceWidthForCropX}\r\n                  SourceWidthForCropY={SourceWidthForCropY}\r\n                  hdcanvasvalue={hdcanvasvalue}\r\n                  BoxCropActivated={BoxCropActivated}\r\n                  cropheight={cropheight}\r\n                  cropwidth={cropwidth}\r\n                  CropImageHolder={CropImageHolder}\r\n                  cropCanvasRef={cropCanvasRef}\r\n                  crop={cropToo}\r\n                  image={photo}\r\n                  index={index}\r\n                  getpreviewFixedWidth={getpreviewFixedWidth}\r\n                  myCropHeight={myCropHeight}\r\n                  canvasToimage={canvasToimage}\r\n                  refWithimageData={refWithimageData}\r\n                  addUploadItemsRef={addUploadItemsRef}\r\n                  itemUploadRef={itemUploadRef}\r\n                  itemUploadRefSD={itemUploadRefSD}\r\n                  itemUploadRefThumb={itemUploadRefThumb}\r\n                  setsuperCropLoadFade={setsuperCropLoadFade}\r\n                  length={selectedImage.length}\r\n                  filterImage={filterImage}\r\n                  setfilterImage={setfilterImage}\r\n                  setallowFilters={setallowFilters}\r\n                  cutOffLoader={cutOffLoader}\r\n                  setcutOffLoader={setcutOffLoader}\r\n                  addUploadItemsRefThumb={addUploadItemsRefThumb}\r\n                  addUploadItemsRefSD={addUploadItemsRefSD}\r\n                  type={2}\r\n                />\r\n              </div>\r\n            );\r\n          })}{\" \"}\r\n        </div>\r\n      ) : null}\r\n\r\n      {/* SD IMAGE  CREATED  itemUploadRef */}\r\n      {/* /////////////////// */}\r\n\r\n      {/* HD IMAGE  CREATED  itemUploadRef */}\r\n      <>\r\n        {selectedImage.length > 0 ? (\r\n          selectedImage.length === 1 ? (\r\n            <>\r\n              {selectedImage.map((photo: any, index: any) => {\r\n                return (\r\n                  <div key={index} style={{ padding: \"0px\" }}>\r\n                    <PreviewCanvasCropAll\r\n                      setwaitcropall={setwaitcropall}\r\n                      waitcropall={waitcropall}\r\n                      zoom={zoom}\r\n                      setwaitONLOAD={setwaitONLOAD}\r\n                      allowCropAllCanvas={allowCropAllCanvas}\r\n                      WideImageCheck={WideImageCheck}\r\n                      SourceWidthForCropX={SourceWidthForCropX}\r\n                      SourceWidthForCropY={SourceWidthForCropY}\r\n                      hdcanvasvalue={hdcanvasvalue}\r\n                      BoxCropActivated={BoxCropActivated}\r\n                      cropheight={cropheight}\r\n                      cropwidth={cropwidth}\r\n                      CropImageHolder={CropImageHolder}\r\n                      cropCanvasRef={cropCanvasRef}\r\n                      crop={cropToo}\r\n                      image={photo}\r\n                      index={index}\r\n                      getpreviewFixedWidth={getpreviewFixedWidth}\r\n                      myCropHeight={myCropHeight}\r\n                      canvasToimage={canvasToimage}\r\n                      refWithimageData={refWithimageData}\r\n                      addUploadItemsRef={addUploadItemsRef}\r\n                      itemUploadRef={itemUploadRef}\r\n                      itemUploadRefSD={itemUploadRefSD}\r\n                      itemUploadRefThumb={itemUploadRefThumb}\r\n                      setsuperCropLoadFade={setsuperCropLoadFade}\r\n                      length={selectedImage.length}\r\n                      filterImage={filterImage}\r\n                      setfilterImage={setfilterImage}\r\n                      setallowFilters={setallowFilters}\r\n                      cutOffLoader={cutOffLoader}\r\n                      setcutOffLoader={setcutOffLoader}\r\n                      addUploadItemsRefThumb={addUploadItemsRefThumb}\r\n                      addUploadItemsRefSD={addUploadItemsRefSD}\r\n                      type={1}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}{\" \"}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {\" \"}\r\n            \r\n            \r\n\r\n       <Grid container style={{ padding: \"0px\" }}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            padding: \"0px\",\r\n            marginTop: activatecropImage\r\n              ? \"0px\"\r\n              : matchMobile\r\n              ? \"2.5vh\"\r\n              : \"1.5vh\",\r\n          }}\r\n        >\r\n         \r\n            <>\r\n           \r\n                  {selectedImage.length > 0 ? (\r\n                    <Masonry\r\n                      columns={matchPc ? (selectedImage.length > 2 ? 3 : 2) : 2}\r\n                      spacing={0}\r\n                      style={{\r\n                        overflowX: \"hidden\",\r\n                        position: \"relative\",\r\n                        zIndex: 2,\r\n                        padding: \"0px\",\r\n                      }}\r\n                    >\r\n                      {selectedImage.length > 0\r\n                        ? selectedImage.map((photo: any, index: any) => {\r\n                            return (\r\n                              <div key={index} style={{ padding: \"0px\" }}>\r\n      <PreviewCanvasCropAll\r\n                        setwaitcropall={setwaitcropall}\r\n                        waitcropall={waitcropall}\r\n                        zoom={zoom}\r\n                        setwaitONLOAD={setwaitONLOAD}\r\n                        allowCropAllCanvas={allowCropAllCanvas}\r\n                        WideImageCheck={WideImageCheck}\r\n                        SourceWidthForCropX={SourceWidthForCropX}\r\n                        SourceWidthForCropY={SourceWidthForCropY}\r\n                        hdcanvasvalue={hdcanvasvalue}\r\n                        BoxCropActivated={BoxCropActivated}\r\n                        cropheight={cropheight}\r\n                        cropwidth={cropwidth}\r\n                        CropImageHolder={CropImageHolder}\r\n                        cropCanvasRef={cropCanvasRef}\r\n                        crop={cropToo}\r\n                        image={photo}\r\n                        index={index}\r\n                        getpreviewFixedWidth={getpreviewFixedWidth}\r\n                        myCropHeight={myCropHeight}\r\n                        canvasToimage={canvasToimage}\r\n                        refWithimageData={refWithimageData}\r\n                        addUploadItemsRef={addUploadItemsRef}\r\n                        itemUploadRef={itemUploadRef}\r\n                        itemUploadRefSD={itemUploadRefSD}\r\n                        itemUploadRefThumb={itemUploadRefThumb}\r\n                        setsuperCropLoadFade={setsuperCropLoadFade}\r\n                        length={selectedImage.length}\r\n                        filterImage={filterImage}\r\n                        setfilterImage={setfilterImage}\r\n                        setallowFilters={setallowFilters}\r\n                        cutOffLoader={cutOffLoader}\r\n                        setcutOffLoader={setcutOffLoader}\r\n                        addUploadItemsRefThumb={addUploadItemsRefThumb}\r\n                        addUploadItemsRefSD={addUploadItemsRefSD}\r\n                        type={1}\r\n                      />\r\n                              </div>\r\n                            );\r\n                          })\r\n                        : null}\r\n                    </Masonry>\r\n                  ) : null}\r\n               \r\n            </>\r\n          \r\n        </Grid>\r\n        \r\n      </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n         \r\n             \r\n            </>\r\n          )\r\n        ) : null}\r\n      </>\r\n      {/* HD IMAGE  CREATED  itemUploadRef */}\r\n      {/* /////////////////// */}\r\n\r\n      {/* /////////////////// */}\r\n      {/* Thumb IMAGE  CREATED  itemUploadRefThumb */}\r\n      <>\r\n        {selectedImage.length > 0 ? (\r\n          <div\r\n            style={{\r\n              overflowX: \"hidden\",\r\n              zIndex: 2,\r\n              position: activatecropImageReducer ? \"fixed\" : \"relative\",\r\n              top: activatecropImageReducer ? \"-800vh\" : \"0px\",\r\n              padding: \"0px\",\r\n            }}\r\n          >\r\n            {selectedImage.map((photo: any, index: any) => {\r\n              return (\r\n                <div key={index} style={{ padding: \"0px\" }}>\r\n                  <PreviewCanvasCropAll\r\n                    zoom={zoom}\r\n                    setwaitONLOAD={setwaitONLOAD}\r\n                    allowCropAllCanvas={allowCropAllCanvas}\r\n                    WideImageCheck={WideImageCheck}\r\n                    SourceWidthForCropX={SourceWidthForCropX}\r\n                    SourceWidthForCropY={SourceWidthForCropY}\r\n                    hdcanvasvalue={hdcanvasvalue}\r\n                    BoxCropActivated={BoxCropActivated}\r\n                    cropheight={cropheight}\r\n                    cropwidth={cropwidth}\r\n                    CropImageHolder={CropImageHolder}\r\n                    cropCanvasRef={cropCanvasRef}\r\n                    crop={cropToo}\r\n                    image={photo}\r\n                    index={index}\r\n                    getpreviewFixedWidth={getpreviewFixedWidth}\r\n                    myCropHeight={myCropHeight}\r\n                    canvasToimage={canvasToimage}\r\n                    refWithimageData={refWithimageData}\r\n                    addUploadItemsRef={addUploadItemsRef}\r\n                    itemUploadRef={itemUploadRef}\r\n                    itemUploadRefSD={itemUploadRefSD}\r\n                    itemUploadRefThumb={itemUploadRefThumb}\r\n                    setsuperCropLoadFade={setsuperCropLoadFade}\r\n                    length={selectedImage.length}\r\n                    filterImage={filterImage}\r\n                    setfilterImage={setfilterImage}\r\n                    setallowFilters={setallowFilters}\r\n                    cutOffLoader={cutOffLoader}\r\n                    setcutOffLoader={setcutOffLoader}\r\n                    addUploadItemsRefThumb={addUploadItemsRefThumb}\r\n                    addUploadItemsRefSD={addUploadItemsRefSD}\r\n                    type={3}\r\n                  />\r\n                </div>\r\n              );\r\n            })}{\" \"}\r\n          </div>\r\n        ) : null}\r\n      </>\r\n      {/* Thumb IMAGE  CREATED  itemUploadRefThumb */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const PreviewCanvasHolder = React.memo(PreviewCanvasHolderx);\r\n"]},"metadata":{},"sourceType":"module"}