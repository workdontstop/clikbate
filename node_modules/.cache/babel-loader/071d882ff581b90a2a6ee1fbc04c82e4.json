{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\Slider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Arrow } from \"./Arrow\";\nimport { Dots } from \"./Dots\";\nimport { SliderNumber } from \"./SliderNumber\";\nimport { Grid } from \"@material-ui/core\";\nimport { animated, useTransition } from \"react-spring\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Sliderx({\n  slides,\n  pey,\n  addPostItemsRef,\n  itemheight,\n  onPostsItemClicked,\n  onPostsItemload,\n  post,\n  itemFinalPostHeight,\n  itemOriginalPostHeight,\n  itemcroptype,\n  itemCLICKED,\n  ActiveAutoPlay,\n  setActiveAutoPlay,\n  AUTOSlideLongImages,\n  clickslider,\n  stopSlider,\n  SliderAutoPlay,\n  showSliderLoader,\n  setshowSliderLoader,\n  autoPlayTimer,\n  sliderIndex,\n  setSliderIndex,\n  sliderIndexSlow,\n  setSliderIndexSlow\n}) {\n  _s();\n\n  const [sliderDuration] = useState(1500); /// const getWidth = () => window.innerWidth;\n  ///var newGetWidth = getWidth() * slides.length;\n\n  const waitChangeIndexTimer = useRef(null);\n  const handleTouchMoveTimer = useRef(null);\n  const callAutoPlayAgainTimer = useRef(null);\n  const SlideimageRef = useRef(null);\n  const SlideimageRefthumb = useRef(null);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [touchPosition, setTouchPosition] = useState(null); ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    ActiveId\n  } = useSelector(state => ({ ...state.ActiveAutoPlayReducer\n  }));\n  const ActiveIdReducer = ActiveId;\n  useEffect(() => {\n    if (ActiveAutoPlay[pey]) {\n      setTimeout(function () {\n        stopSlider(0);\n      }, 1500);\n    }\n  }, [ActiveAutoPlay[pey]]);\n  var autoSlideDisplay = \"none\";\n  var sliderLoader = \"\";\n\n  if (showSliderLoader) {\n    autoSlideDisplay = \"none\";\n    sliderLoader = \"\";\n  } else {\n    autoSlideDisplay = \"block\";\n    sliderLoader = \"superloaderAutoSlider\";\n  } ///\n  ///\n  ///\n  /// SPRING TRANSITION WITH INDEX\n\n\n  const transitions = useTransition(sliderIndex, {\n    key: sliderIndex,\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    config: {\n      duration: sliderDuration - 50\n    }\n  }); ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\n\n  const sliderFirstImageOnLoad = item => {\n    if (item === 0) {\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\n        setImageHeight(SlideimageRef.current.clientHeight);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\n\n\n  const sliderFirstImageOnLoadthumb = item => {\n    if (item === 0 && imageHeight === 0) {\n      if (SlideimageRefthumb.current && SlideimageRefthumb.current.clientHeight) {\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n  const handleTouchStart = e => {\n    ////onMouseDown onMouseMove\n    ////touchDown = e.clientX\n    const touchDown = e.touches[0].clientX;\n    setTouchPosition(touchDown);\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH MOVE EVENT\n\n\n  const handleTouchMove = e => {\n    if (handleTouchMoveTimer.current) {\n      clearTimeout(handleTouchMoveTimer.current);\n    }\n\n    handleTouchMoveTimer.current = setTimeout(function () {\n      const touchDown = touchPosition;\n\n      if (touchDown === null) {\n        return;\n      } ////currentTouch = e.clientX\n\n\n      const currentTouch = e.touches[0].clientX;\n      const diff = touchDown - currentTouch;\n\n      if (diff > 40) {\n        nextSlide();\n      } else if (diff < -40) {\n        prevSlide();\n      } else {}\n\n      setTouchPosition(null);\n      return false;\n    }, 200);\n    return false;\n  }; ///\n  ///\n  ///\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\n\n\n  const waitChangeIndex = (data, state) => {\n    if (waitChangeIndexTimer.current) {\n      clearTimeout(waitChangeIndexTimer.current);\n    }\n\n    waitChangeIndexTimer.current = setTimeout(function () {\n      setSliderIndexSlow(state => data);\n    }, 500);\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE\n\n\n  const nextSlide = () => {\n    AUTOSlideLongImages(pey);\n\n    if (ActiveAutoPlay[pey]) {} else {\n      setshowSliderLoader(true);\n\n      if (autoPlayTimer.current) {\n        clearTimeout(autoPlayTimer.current);\n      }\n    } ///set((state) => (state + 1) % slides.length);\n\n\n    if (sliderIndex === slides.length - 1) {\n      setSliderIndex(sliderIndex => 0);\n      waitChangeIndex(0, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex + 1);\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\n    }\n\n    if (ActiveAutoPlay[pey]) {} else {\n      if (callAutoPlayAgainTimer.current) {\n        clearTimeout(callAutoPlayAgainTimer.current);\n      }\n\n      callAutoPlayAgainTimer.current = setTimeout(function () {\n        SliderAutoPlay(1);\n      }, sliderDuration);\n    }\n  }; ///\n  ///\n  ///\n  /// PREV SLIDE\n\n\n  const prevSlide = () => {\n    AUTOSlideLongImages(pey);\n\n    if (ActiveAutoPlay[pey]) {} else {\n      setshowSliderLoader(true);\n\n      if (autoPlayTimer.current) {\n        clearTimeout(autoPlayTimer.current);\n      }\n    }\n\n    if (sliderIndex === 0) {\n      setSliderIndex(sliderIndex => slides.length - 1);\n      waitChangeIndex(slides.length - 1, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex - 1);\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\n    }\n\n    if (ActiveAutoPlay[pey]) {} else {\n      if (callAutoPlayAgainTimer.current) {\n        clearTimeout(callAutoPlayAgainTimer.current);\n      }\n\n      callAutoPlayAgainTimer.current = setTimeout(function () {\n        SliderAutoPlay(1);\n      }, sliderDuration);\n    }\n  }; ///\n  ///\n  ///\n  /// CHANGE SLIDER CONTENT USING  DOTS\n\n\n  const GotoDots = clickedDot => {\n    setSliderIndex(sliderIndex => clickedDot);\n    waitChangeIndex(clickedDot, sliderIndex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      xs: 12,\n      style: {\n        position: \"relative\",\n        height: itemCLICKED[pey] ? `${itemOriginalPostHeight[pey]}px` : `${itemFinalPostHeight[pey]}px`,\n        padding: \"0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: darkmodeReducer ? `${sliderLoader} turdark` : `${sliderLoader} turlight`,\n        style: {\n          boxShadow: `0 0 3px ${post.color}`,\n          backgroundColor: post.color,\n          height: \"3px\",\n          position: \"absolute\",\n          display: autoSlideDisplay,\n          zIndex: 100000,\n          top: \"0em\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SliderNumber, {\n        activeSlide: sliderIndexSlow,\n        total: slides.length,\n        itemCLICKED: itemCLICKED,\n        pey: pey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Arrow, {\n        itemCLICKED: itemCLICKED,\n        pey: pey,\n        total: slides.length,\n        direction: \"left\",\n        clickSlideprev: prevSlide,\n        clickSlidenext: nextSlide,\n        itemOriginalPostHeight: itemOriginalPostHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), transitions((style, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(animated.img, {\n          className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n          src: `./images/posts/${slides[i]}`,\n          alt: \"a superstarz post \",\n          style: { ...style,\n            cursor: \"alias\",\n            width: \"100%\",\n            height: itemheight[pey],\n            display: sliderIndex === i ? \"block\" : \"none\",\n            position: \"absolute\",\n            filter: \"blur(3px)\",\n            padding: \"0px\",\n            borderRadius: matchPc ? \"8px\" : \"6px\",\n            objectFit: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"cover\" : \"cover\",\n            objectPosition: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"50% top\" : \"50% 50\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(animated.img, {\n          onLoad: e => {\n            onPostsItemload(e, pey, i);\n          },\n          onClick: clickslider,\n          ref: addPostItemsRef,\n          className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n          src: `./images/posts/${slides[i]}`,\n          alt: \"a superstarz post \",\n          style: { ...style,\n            cursor: \"alias\",\n            width: \"100%\",\n            height: itemheight[pey],\n            position: \"absolute\",\n            padding: \"0px\",\n            borderRadius: matchPc ? \"8px\" : \"6px\",\n            objectFit: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"cover\" : \"cover\",\n            objectPosition: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"50% top\" : \"50% 50\",\n            zIndex: 1,\n            float: \"left\"\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)), \" \", /*#__PURE__*/_jsxDEV(Dots, {\n        total: slides.length,\n        itemCLICKED: itemCLICKED,\n        pey: pey,\n        GotoDots: GotoDots,\n        slides: slides,\n        activeSlide: sliderIndexSlow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Sliderx, \"GHpdkgsmTIujGcMukYmrwCMDwSg=\", false, function () {\n  return [useSelector, useTransition, useSelector];\n});\n\n_c = Sliderx;\nexport const Slider = /*#__PURE__*/React.memo(Sliderx);\n_c2 = Slider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Sliderx\");\n$RefreshReg$(_c2, \"Slider\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/Slider.tsx"],"names":["React","useState","useRef","useEffect","Arrow","Dots","SliderNumber","Grid","animated","useTransition","useSelector","Sliderx","slides","pey","addPostItemsRef","itemheight","onPostsItemClicked","onPostsItemload","post","itemFinalPostHeight","itemOriginalPostHeight","itemcroptype","itemCLICKED","ActiveAutoPlay","setActiveAutoPlay","AUTOSlideLongImages","clickslider","stopSlider","SliderAutoPlay","showSliderLoader","setshowSliderLoader","autoPlayTimer","sliderIndex","setSliderIndex","sliderIndexSlow","setSliderIndexSlow","sliderDuration","waitChangeIndexTimer","handleTouchMoveTimer","callAutoPlayAgainTimer","SlideimageRef","SlideimageRefthumb","imageHeight","setImageHeight","touchPosition","setTouchPosition","ActiveId","state","ActiveAutoPlayReducer","ActiveIdReducer","setTimeout","autoSlideDisplay","sliderLoader","transitions","key","from","opacity","enter","leave","config","duration","sliderFirstImageOnLoad","item","current","clientHeight","sliderFirstImageOnLoadthumb","darkmode","GlobalReducer","darkmodeReducer","handleTouchStart","e","touchDown","touches","clientX","handleTouchMove","clearTimeout","currentTouch","diff","nextSlide","prevSlide","waitChangeIndex","data","length","GotoDots","clickedDot","position","height","padding","boxShadow","color","backgroundColor","display","zIndex","top","style","i","cursor","width","filter","borderRadius","matchPc","objectFit","objectPosition","float","Slider","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport { Arrow } from \"./Arrow\";\r\nimport { Dots } from \"./Dots\";\r\nimport { SliderNumber } from \"./SliderNumber\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { animated, useTransition } from \"react-spring\";\r\nimport { RootStateOrAny, useSelector } from \"react-redux\";\r\n\r\nfunction Sliderx({\r\n  slides,\r\n  pey,\r\n  addPostItemsRef,\r\n  itemheight,\r\n  onPostsItemClicked,\r\n  onPostsItemload,\r\n  post,\r\n  itemFinalPostHeight,\r\n  itemOriginalPostHeight,\r\n  itemcroptype,\r\n  itemCLICKED,\r\n  ActiveAutoPlay,\r\n  setActiveAutoPlay,\r\n  AUTOSlideLongImages,\r\n  clickslider,\r\n  stopSlider,\r\n  SliderAutoPlay,\r\n  showSliderLoader,\r\n  setshowSliderLoader,\r\n  autoPlayTimer,\r\n  sliderIndex,\r\n  setSliderIndex,\r\n  sliderIndexSlow,\r\n  setSliderIndexSlow,\r\n}: any): JSX.Element {\r\n  const [sliderDuration] = useState(1500);\r\n\r\n  /// const getWidth = () => window.innerWidth;\r\n  ///var newGetWidth = getWidth() * slides.length;\r\n\r\n  const waitChangeIndexTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const handleTouchMoveTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const callAutoPlayAgainTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const SlideimageRef = useRef<HTMLImageElement>(null);\r\n\r\n  const SlideimageRefthumb = useRef<HTMLImageElement>(null);\r\n\r\n  const [imageHeight, setImageHeight] = useState(0);\r\n  const [touchPosition, setTouchPosition] = useState(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateActiveAutoPlayReducer {\r\n    ActiveAutoPlayReducer: {\r\n      ActiveId: number;\r\n    };\r\n  }\r\n  const { ActiveId } = useSelector((state: RootStateActiveAutoPlayReducer) => ({\r\n    ...state.ActiveAutoPlayReducer,\r\n  }));\r\n\r\n  const ActiveIdReducer = ActiveId;\r\n\r\n  useEffect(() => {\r\n    if (ActiveAutoPlay[pey]) {\r\n      setTimeout(function () {\r\n        stopSlider(0);\r\n      }, 1500);\r\n    }\r\n  }, [ActiveAutoPlay[pey]]);\r\n\r\n  var autoSlideDisplay = \"none\";\r\n  var sliderLoader = \"\";\r\n\r\n  if (showSliderLoader) {\r\n    autoSlideDisplay = \"none\";\r\n    sliderLoader = \"\";\r\n  } else {\r\n    autoSlideDisplay = \"block\";\r\n    sliderLoader = \"superloaderAutoSlider\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SPRING TRANSITION WITH INDEX\r\n  const transitions = useTransition(sliderIndex, {\r\n    key: sliderIndex,\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n    config: { duration: sliderDuration - 50 },\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\r\n  const sliderFirstImageOnLoad = (item: number) => {\r\n    if (item === 0) {\r\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\r\n        setImageHeight(SlideimageRef.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\r\n  const sliderFirstImageOnLoadthumb = (item: number) => {\r\n    if (item === 0 && imageHeight === 0) {\r\n      if (\r\n        SlideimageRefthumb.current &&\r\n        SlideimageRefthumb.current.clientHeight\r\n      ) {\r\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const handleTouchStart = (e: any) => {\r\n    ////onMouseDown onMouseMove\r\n    ////touchDown = e.clientX\r\n    const touchDown = e.touches[0].clientX;\r\n    setTouchPosition(touchDown);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH MOVE EVENT\r\n  const handleTouchMove = (e: any) => {\r\n    if (handleTouchMoveTimer.current) {\r\n      clearTimeout(handleTouchMoveTimer.current);\r\n    }\r\n    handleTouchMoveTimer.current = setTimeout(function () {\r\n      const touchDown = touchPosition;\r\n\r\n      if (touchDown === null) {\r\n        return;\r\n      }\r\n      ////currentTouch = e.clientX\r\n      const currentTouch = e.touches[0].clientX;\r\n      const diff = touchDown - currentTouch;\r\n\r\n      if (diff > 40) {\r\n        nextSlide();\r\n      } else if (diff < -40) {\r\n        prevSlide();\r\n      } else {\r\n      }\r\n\r\n      setTouchPosition(null);\r\n      return false;\r\n    }, 200);\r\n\r\n    return false;\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\r\n  const waitChangeIndex = (data: number, state: any) => {\r\n    if (waitChangeIndexTimer.current) {\r\n      clearTimeout(waitChangeIndexTimer.current);\r\n    }\r\n    waitChangeIndexTimer.current = setTimeout(function () {\r\n      setSliderIndexSlow((state: any) => data);\r\n    }, 500);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const nextSlide = () => {\r\n    AUTOSlideLongImages(pey);\r\n\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      setshowSliderLoader(true);\r\n      if (autoPlayTimer.current) {\r\n        clearTimeout(autoPlayTimer.current);\r\n      }\r\n    }\r\n\r\n    ///set((state) => (state + 1) % slides.length);\r\n    if (sliderIndex === slides.length - 1) {\r\n      setSliderIndex((sliderIndex: any) => 0);\r\n      waitChangeIndex(0, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex: any) => sliderIndex + 1);\r\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\r\n    }\r\n\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      if (callAutoPlayAgainTimer.current) {\r\n        clearTimeout(callAutoPlayAgainTimer.current);\r\n      }\r\n      callAutoPlayAgainTimer.current = setTimeout(function () {\r\n        SliderAutoPlay(1);\r\n      }, sliderDuration);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PREV SLIDE\r\n  const prevSlide = () => {\r\n    AUTOSlideLongImages(pey);\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      setshowSliderLoader(true);\r\n      if (autoPlayTimer.current) {\r\n        clearTimeout(autoPlayTimer.current);\r\n      }\r\n    }\r\n\r\n    if (sliderIndex === 0) {\r\n      setSliderIndex((sliderIndex: any) => slides.length - 1);\r\n      waitChangeIndex(slides.length - 1, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex: any) => sliderIndex - 1);\r\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\r\n    }\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      if (callAutoPlayAgainTimer.current) {\r\n        clearTimeout(callAutoPlayAgainTimer.current);\r\n      }\r\n      callAutoPlayAgainTimer.current = setTimeout(function () {\r\n        SliderAutoPlay(1);\r\n      }, sliderDuration);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// CHANGE SLIDER CONTENT USING  DOTS\r\n  const GotoDots = (clickedDot: number) => {\r\n    setSliderIndex((sliderIndex: any) => clickedDot);\r\n    waitChangeIndex(clickedDot, sliderIndex);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        item\r\n        onTouchStart={handleTouchStart}\r\n        onTouchMove={handleTouchMove}\r\n        xs={12}\r\n        style={{\r\n          position: \"relative\",\r\n          height: itemCLICKED[pey]\r\n            ? `${itemOriginalPostHeight[pey]}px`\r\n            : `${itemFinalPostHeight[pey]}px`,\r\n          padding: \"0px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          className={\r\n            darkmodeReducer\r\n              ? `${sliderLoader} turdark`\r\n              : `${sliderLoader} turlight`\r\n          }\r\n          style={{\r\n            boxShadow: `0 0 3px ${post.color}`,\r\n            backgroundColor: post.color,\r\n            height: \"3px\",\r\n            position: \"absolute\",\r\n            display: autoSlideDisplay,\r\n            zIndex: 100000,\r\n            top: \"0em\",\r\n          }}\r\n        ></Grid>\r\n        <SliderNumber\r\n          activeSlide={sliderIndexSlow}\r\n          total={slides.length}\r\n          itemCLICKED={itemCLICKED}\r\n          pey={pey}\r\n        />\r\n        <Arrow\r\n          itemCLICKED={itemCLICKED}\r\n          pey={pey}\r\n          total={slides.length}\r\n          direction=\"left\"\r\n          clickSlideprev={prevSlide}\r\n          clickSlidenext={nextSlide}\r\n          itemOriginalPostHeight={itemOriginalPostHeight}\r\n        />\r\n        {transitions((style, i) => (\r\n          <>\r\n            <animated.img\r\n              className={\r\n                darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n              }\r\n              src={`./images/posts/${slides[i]}`}\r\n              alt=\"a superstarz post \"\r\n              style={{\r\n                ...style,\r\n                cursor: \"alias\",\r\n                width: \"100%\",\r\n                height: itemheight[pey],\r\n                display: sliderIndex === i ? \"block\" : \"none\",\r\n                position: \"absolute\",\r\n                filter: \"blur(3px)\",\r\n                padding: \"0px\",\r\n                borderRadius: matchPc ? \"8px\" : \"6px\",\r\n                objectFit:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"cover\"\r\n                    : \"cover\",\r\n                objectPosition:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"50% top\"\r\n                    : \"50% 50\",\r\n              }}\r\n            />\r\n\r\n            <animated.img\r\n              onLoad={(e: any) => {\r\n                onPostsItemload(e, pey, i);\r\n              }}\r\n              onClick={clickslider}\r\n              key={i}\r\n              ref={addPostItemsRef}\r\n              className={\r\n                darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n              }\r\n              src={`./images/posts/${slides[i]}`}\r\n              alt=\"a superstarz post \"\r\n              style={{\r\n                ...style,\r\n                cursor: \"alias\",\r\n                width: \"100%\",\r\n                height: itemheight[pey],\r\n                position: \"absolute\",\r\n                padding: \"0px\",\r\n                borderRadius: matchPc ? \"8px\" : \"6px\",\r\n                objectFit:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"cover\"\r\n                    : \"cover\",\r\n                objectPosition:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"50% top\"\r\n                    : \"50% 50\",\r\n                zIndex: 1,\r\n                float: \"left\",\r\n              }}\r\n            />\r\n          </>\r\n        ))}{\" \"}\r\n        <Dots\r\n          total={slides.length}\r\n          itemCLICKED={itemCLICKED}\r\n          pey={pey}\r\n          GotoDots={GotoDots}\r\n          slides={slides}\r\n          activeSlide={sliderIndexSlow}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Slider = React.memo(Sliderx);\r\n"]},"metadata":{},"sourceType":"module"}