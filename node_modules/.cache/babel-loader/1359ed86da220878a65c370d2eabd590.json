{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\FilterMode.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { useSpring, animated } from \"react-spring\";\nimport { FilterModeArrow } from \"./FilterModeArrow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FilterModex({\n  filterImage,\n  selectedImage,\n  itemUploadRef,\n  setActivatefilterImage,\n  ActivatefilterImage\n}) {\n  _s();\n\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const originalfilterImageRef = useRef(null);\n  const [ShowHideNegativeValue, setShowHideNegativeValue] = useState(\"-\");\n  const [translate, setTranslate] = useState(0);\n  const [stalestate] = useState(1);\n  const [ActiveSlide, setActiveSlide] = useState(0);\n  var getSliderWidthNew = 0;\n  const [transitionFast, settransitionFast] = useState(false);\n  const getCropHeightRef2 = useRef(null);\n  const getCropHeightRef = useRef(null);\n  const getCropHeightRefFull = useRef(null);\n  const getImageWidth = useRef([]);\n  const sliderwidthref = useRef([]);\n  const [wideimage, setwideimage] = useState(false);\n  const [filterHeight, setfilterHeight] = useState(0);\n  const [show, setshow] = useState(false);\n  const [filterWidthForSlider, setfilterWidthForSlider] = useState(0);\n\n  const addpostImageRef = imageRef => {\n    if (imageRef && !getImageWidth.current.includes(imageRef)) {\n      getImageWidth.current.push(imageRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  }; ///\n  ///\n  ///\n  /// ACTIVATES SLIDER ITEM TO BE VIEWED ON CLICK\n\n\n  const clickOptions = i => {//setTranslate(getImageWidth.current[0].clientWidth * i);\n    //setActiveSlide(i);\n  }; ///\n  ///\n  ///\n  ///CREATE OPTIONS SLIDER ANIMATION WITH  REACT SPRING\n\n\n  const modalanimation = useSpring({\n    config: {\n      mass: 1,\n      tension: 120,\n      friction: 14\n    },\n    transform: `translateX(${ShowHideNegativeValue}${translate}px)`,\n    transition: transitionFast ? \"0s\" : \"0.15s\",\n    height: \"auto\",\n    display: \"flex\",\n    width: `auto`,\n    padding: \"0px\",\n    margin: \"auto\"\n  });\n  const [FilterSliderHeight, setFilterSliderHeight] = useState(0);\n  const [FilterSliderWidth, setFilterSliderWidth] = useState(0);\n  const [FilterSliderHeight2, setFilterSliderHeight2] = useState(0);\n  const [FilterSliderContainerWidth, setFilterSliderContainerWidth] = useState(0); ///\n  ///\n  ///\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\n\n  useEffect(() => {\n    if (getCropHeightRef.current && getCropHeightRef.current.clientWidth) {\n      setFilterSliderHeight(getCropHeightRef.current.clientHeight);\n      setFilterSliderHeight2(getCropHeightRef2.current.clientHeight);\n      setFilterSliderWidth(getCropHeightRef.current.clientWidth);\n    }\n\n    if (sliderwidthref.current) {\n      setFilterSliderWidth(sliderwidthref.current.clientWidth);\n    }\n  }, []); ///\n\n  const Imageloaded = ({\n    index\n  }) => {}; ///\n  ///\n  ///\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\n\n\n  useEffect(() => {\n    if (itemUploadRef.current[0] && ActivatefilterImage) {\n      if (itemUploadRef.current[0].width > itemUploadRef.current[0].height) {\n        setwideimage(true);\n        setshow(true);\n      } else {\n        setshow(true);\n      }\n    }\n  }, [ActivatefilterImage]); ///\n  ///\n  ///\n  ///\n\n  useEffect(() => {\n    if (getImageWidth.current[0] && show) {\n      setfilterHeight(getImageWidth.current[0].clientHeight);\n      setfilterWidthForSlider(getImageWidth.current[0].clientWidth);\n    }\n  }, [show, getImageWidth]); ///\n\n  const clickSlideprev = () => {\n    var tt = ActiveSlide - 1;\n    setTranslate(translate => filterWidthForSlider * tt);\n    setActiveSlide(ActiveSlide => ActiveSlide - 1);\n  };\n\n  const clickSlidenext = () => {\n    var tt = ActiveSlide + 1;\n    setTranslate(translate => filterWidthForSlider * tt);\n    setActiveSlide(ActiveSlide => ActiveSlide + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        padding: \"0px\",\n        position: \"relative\",\n        margin: \"0 auto\",\n        overflow: \"hidden\",\n        left: \"0px\",\n        height: \"auto\",\n        paddingBottom: \"0px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\",\n          height: `${FilterSliderHeight2}px`\n        },\n        children: [ActiveSlide, \" - \", translate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), selectedImage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FilterModeArrow, {\n        filterHeight: filterHeight,\n        clickSlidenext: clickSlidenext,\n        clickSlideprev: clickSlideprev\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          zIndex: 1,\n          padding: \"0px\",\n          position: \"relative\",\n          margin: \"0 auto\",\n          overflow: \"hidden\",\n          left: \"0px\",\n          height: \"auto\",\n          paddingBottom: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(animated.div, {\n          ref: sliderwidthref,\n          style: modalanimation,\n          children: [selectedImage.map((imagee, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"0px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                ref: addpostImageRef,\n                onClick: () => {\n                  clickOptions(index);\n                },\n                id: itemUploadRef.current[index],\n                src: itemUploadRef.current[index] ? itemUploadRef.current[index].src : null,\n                style: {\n                  width: wideimage ? `${FilterSliderWidth}px` : \"auto\",\n                  height: wideimage ? \"auto\" : `${FilterSliderHeight}px`,\n                  position: \"relative\",\n                  margin: \"auto\",\n                  padding: \"0px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this);\n          }), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        height: \"100%\",\n        position: \"fixed\",\n        top: \"-800vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropHeightRef,\n          xs: 5,\n          style: {\n            height: \"81%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropHeightRef2,\n          xs: 5,\n          style: {\n            height: \"19%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FilterModex, \"c92ObJnUEx5e36LzuODhJonKEgg=\", false, function () {\n  return [useSelector, useSpring];\n});\n\n_c = FilterModex;\nexport const FilterMode = /*#__PURE__*/React.memo(FilterModex);\n_c2 = FilterMode;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FilterModex\");\n$RefreshReg$(_c2, \"FilterMode\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/FilterMode.tsx"],"names":["React","useRef","useState","useEffect","Grid","useSelector","useSpring","animated","FilterModeArrow","FilterModex","filterImage","selectedImage","itemUploadRef","setActivatefilterImage","ActivatefilterImage","darkmode","state","GlobalReducer","darkmodeReducer","originalfilterImageRef","ShowHideNegativeValue","setShowHideNegativeValue","translate","setTranslate","stalestate","ActiveSlide","setActiveSlide","getSliderWidthNew","transitionFast","settransitionFast","getCropHeightRef2","getCropHeightRef","getCropHeightRefFull","getImageWidth","sliderwidthref","wideimage","setwideimage","filterHeight","setfilterHeight","show","setshow","filterWidthForSlider","setfilterWidthForSlider","addpostImageRef","imageRef","current","includes","push","clickOptions","i","modalanimation","config","mass","tension","friction","transform","transition","height","display","width","padding","margin","FilterSliderHeight","setFilterSliderHeight","FilterSliderWidth","setFilterSliderWidth","FilterSliderHeight2","setFilterSliderHeight2","FilterSliderContainerWidth","setFilterSliderContainerWidth","clientWidth","clientHeight","Imageloaded","index","clickSlideprev","tt","clickSlidenext","position","overflow","left","paddingBottom","zIndex","map","imagee","src","top","FilterMode","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { ImageTobeFiltered } from \"./ImageTobeFiltered\";\r\nimport { FilterModeArrow } from \"./FilterModeArrow\";\r\n\r\nfunction FilterModex({\r\n  filterImage,\r\n  selectedImage,\r\n  itemUploadRef,\r\n  setActivatefilterImage,\r\n  ActivatefilterImage,\r\n}: any): JSX.Element {\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  const originalfilterImageRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [ShowHideNegativeValue, setShowHideNegativeValue] = useState(\"-\");\r\n\r\n  const [translate, setTranslate] = useState(0);\r\n  const [stalestate] = useState(1);\r\n\r\n  const [ActiveSlide, setActiveSlide] = useState(0);\r\n\r\n  var getSliderWidthNew = 0;\r\n\r\n  const [transitionFast, settransitionFast] = useState<boolean>(false);\r\n\r\n  const getCropHeightRef2: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropHeightRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropHeightRefFull: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getImageWidth = useRef<any>([]);\r\n\r\n  const sliderwidthref = useRef<any>([]);\r\n\r\n  const [wideimage, setwideimage] = useState(false);\r\n\r\n  const [filterHeight, setfilterHeight] = useState(0);\r\n\r\n  const [show, setshow] = useState(false);\r\n\r\n  const [filterWidthForSlider, setfilterWidthForSlider] = useState(0);\r\n\r\n  const addpostImageRef = (imageRef: any) => {\r\n    if (imageRef && !getImageWidth.current.includes(imageRef)) {\r\n      getImageWidth.current.push(imageRef);\r\n    }\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// ACTIVATES SLIDER ITEM TO BE VIEWED ON CLICK\r\n  const clickOptions = (i: number) => {\r\n    //setTranslate(getImageWidth.current[0].clientWidth * i);\r\n    //setActiveSlide(i);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE OPTIONS SLIDER ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      mass: 1,\r\n      tension: 120,\r\n      friction: 14,\r\n    },\r\n    transform: `translateX(${ShowHideNegativeValue}${translate}px)`,\r\n    transition: transitionFast ? \"0s\" : \"0.15s\",\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    width: `auto`,\r\n    padding: \"0px\",\r\n    margin: \"auto\",\r\n  });\r\n\r\n  const [FilterSliderHeight, setFilterSliderHeight] = useState(0);\r\n  const [FilterSliderWidth, setFilterSliderWidth] = useState(0);\r\n  const [FilterSliderHeight2, setFilterSliderHeight2] = useState(0);\r\n  const [FilterSliderContainerWidth, setFilterSliderContainerWidth] =\r\n    useState(0);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\r\n  useEffect(() => {\r\n    if (getCropHeightRef.current && getCropHeightRef.current.clientWidth) {\r\n      setFilterSliderHeight(getCropHeightRef.current.clientHeight);\r\n      setFilterSliderHeight2(getCropHeightRef2.current.clientHeight);\r\n      setFilterSliderWidth(getCropHeightRef.current.clientWidth);\r\n    }\r\n\r\n    if (sliderwidthref.current) {\r\n      setFilterSliderWidth(sliderwidthref.current.clientWidth);\r\n    }\r\n  }, []);\r\n  ///\r\n\r\n  const Imageloaded = ({ index }: any) => {};\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\r\n  useEffect(() => {\r\n    if (itemUploadRef.current[0] && ActivatefilterImage) {\r\n      if (itemUploadRef.current[0].width > itemUploadRef.current[0].height) {\r\n        setwideimage(true);\r\n        setshow(true);\r\n      } else {\r\n        setshow(true);\r\n      }\r\n    }\r\n  }, [ActivatefilterImage]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n  useEffect(() => {\r\n    if (getImageWidth.current[0] && show) {\r\n      setfilterHeight(getImageWidth.current[0].clientHeight);\r\n      setfilterWidthForSlider(getImageWidth.current[0].clientWidth);\r\n    }\r\n  }, [show, getImageWidth]);\r\n  ///\r\n\r\n  const clickSlideprev = () => {\r\n    var tt = ActiveSlide - 1;\r\n    setTranslate((translate: any) => filterWidthForSlider * tt);\r\n    setActiveSlide((ActiveSlide: any) => ActiveSlide - 1);\r\n  };\r\n\r\n  const clickSlidenext = () => {\r\n    var tt = ActiveSlide + 1;\r\n    setTranslate((translate: any) => filterWidthForSlider * tt);\r\n    setActiveSlide((ActiveSlide: any) => ActiveSlide + 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        style={{\r\n          padding: \"0px\",\r\n          position: \"relative\",\r\n          margin: \"0 auto\",\r\n          overflow: \"hidden\",\r\n          left: \"0px\",\r\n          height: \"auto\",\r\n          paddingBottom: \"0px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            padding: \"0px\",\r\n            height: `${FilterSliderHeight2}px`,\r\n          }}\r\n        >\r\n          {ActiveSlide} - {translate}\r\n        </Grid>\r\n      </Grid>\r\n      {selectedImage ? (\r\n        <>\r\n          <FilterModeArrow\r\n            filterHeight={filterHeight}\r\n            clickSlidenext={clickSlidenext}\r\n            clickSlideprev={clickSlideprev}\r\n          />\r\n          <Grid\r\n            container\r\n            style={{\r\n              zIndex: 1,\r\n              padding: \"0px\",\r\n              position: \"relative\",\r\n\r\n              margin: \"0 auto\",\r\n              overflow: \"hidden\",\r\n              left: \"0px\",\r\n              height: \"auto\",\r\n              paddingBottom: \"0px\",\r\n            }}\r\n          >\r\n            <animated.div ref={sliderwidthref} style={modalanimation}>\r\n              {selectedImage.map((imagee: any, index: any) => {\r\n                return (\r\n                  <div key={index} style={{ padding: \"0px\" }}>\r\n                    <img\r\n                      ref={addpostImageRef}\r\n                      onClick={() => {\r\n                        clickOptions(index);\r\n                      }}\r\n                      id={itemUploadRef.current[index]}\r\n                      src={\r\n                        itemUploadRef.current[index]\r\n                          ? itemUploadRef.current[index].src\r\n                          : null\r\n                      }\r\n                      style={{\r\n                        width: wideimage ? `${FilterSliderWidth}px` : \"auto\",\r\n                        height: wideimage ? \"auto\" : `${FilterSliderHeight}px`,\r\n                        position: \"relative\",\r\n                        margin: \"auto\",\r\n                        padding: \"0px\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}{\" \"}\r\n            </animated.div>\r\n          </Grid>\r\n        </>\r\n      ) : null}\r\n\r\n      <Grid\r\n        container\r\n        style={{ height: \"100%\", position: \"fixed\", top: \"-800vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            padding: \"0px\",\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            ref={getCropHeightRef}\r\n            xs={5}\r\n            style={{ height: \"81%\" }}\r\n          ></Grid>\r\n          <Grid\r\n            item\r\n            ref={getCropHeightRef2}\r\n            xs={5}\r\n            style={{ height: \"19%\" }}\r\n          ></Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const FilterMode = React.memo(FilterModex);\r\n"]},"metadata":{},"sourceType":"module"}