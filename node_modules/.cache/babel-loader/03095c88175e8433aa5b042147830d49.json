{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\SliderNumber.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SliderNumberx({\n  activeSlide,\n  total,\n  pey,\n  post,\n  itemCLICKED,\n  stopSlider,\n  ActiveAutoPlay,\n  startSlider,\n  postDatainnerInteraction1,\n  postDatainnerInteraction2,\n  startInteractivity,\n  HasInt,\n  setHasInt\n}) {\n  _s();\n\n  const startplay = () => {\n    if (ActiveAutoPlay[pey]) {\n      startSlider(0);\n    } else {\n      stopSlider(0);\n    }\n  };\n\n  const [HasInteractivity, setHasInteractivity] = useState(false);\n  useEffect(() => {\n    if (HasInt === 1000) {} else {\n      setHasInteractivity(true);\n    }\n\n    if (post.interact1a) {\n      setHasInteractivity(true);\n      setHasInt(0);\n    }\n\n    if (post.interact2a) {\n      setHasInt(1);\n      setHasInteractivity(true);\n    }\n\n    if (post.interact3a) {\n      setHasInteractivity(true);\n      setHasInt(2);\n    }\n  }, [total, HasInt, pey, post]); ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [itemCLICKED[pey] ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: startplay,\n        style: {\n          position: \"absolute\",\n          zIndex: 30,\n          left: 30,\n          cursor: \"pointer\",\n          top: \"5vh\",\n          fontFamily: \"Arial, Helvetica, sans-serif\",\n          fontWeight: \"bolder\",\n          opacity: \"0.9\",\n          height: \"0px\",\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: HasInteractivity ? darkmodeReducer ? \"turx heartbeat\" : \"turdark heartbeat\" : darkmodeReducer ? \"turx\" : \"turdark\",\n          style: {\n            padding: \"7px\",\n            paddingLeft: HasInteractivity ? \"0.9vw\" : '10px',\n            paddingRight: HasInteractivity ? \"0.9vw\" : '10px',\n            backgroundColor: darkmodeReducer ? \"rgba(41,41,41,0.86)\" : \"rgba(205,205,205,0.9) \",\n            borderRadius: \"50%\",\n            fontSize: \"0.92vw\",\n            display: total === 1 ? HasInteractivity ? 'block' : 'none' : 'block',\n            color: darkmodeReducer ? \"#ffffff\" : \"#000000\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              opacity: HasInteractivity && total === 1 ? 0 : 1\n            },\n            children: total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true), itemCLICKED[pey] ? total === 0 ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: startplay,\n        style: {\n          position: \"absolute\",\n          zIndex: 30,\n          left: 30,\n          cursor: \"pointer\",\n          top: \"5vh\",\n          fontFamily: \"Arial, Helvetica, sans-serif\",\n          fontWeight: \"bolder\",\n          opacity: \"0.9\",\n          height: \"0px\",\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: HasInteractivity ? darkmodeReducer ? \"turx heartbeat\" : \"turdark heartbeat\" : darkmodeReducer ? \"turx\" : \"turdark\",\n          style: {\n            padding: \"7px\",\n            paddingLeft: HasInteractivity ? \"0.9vw\" : '10px',\n            paddingRight: HasInteractivity ? \"0.9vw\" : '10px',\n            backgroundColor: darkmodeReducer ? \"rgba(41,41,41,0.86)\" : \"rgba(205,205,205,0.9) \",\n            borderRadius: \"50%\",\n            fontSize: \"0.92vw\",\n            display: total === 1 ? HasInteractivity ? 'block' : 'none' : 'block',\n            visibility: 'visible',\n            color: darkmodeReducer ? \"#ffffff\" : \"#000000\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              opacity: HasInteractivity && total === 1 ? 0 : 1\n            },\n            children: activeSlide + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true);\n}\n\n_s(SliderNumberx, \"QGk3YMy5dOnFLXkrR0/bCyJ1C5E=\", false, function () {\n  return [useSelector];\n});\n\n_c = SliderNumberx;\nexport const SliderNumber = /*#__PURE__*/React.memo(SliderNumberx);\n_c2 = SliderNumber;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SliderNumberx\");\n$RefreshReg$(_c2, \"SliderNumber\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/SliderNumber.tsx"],"names":["React","useEffect","useState","useSelector","SliderNumberx","activeSlide","total","pey","post","itemCLICKED","stopSlider","ActiveAutoPlay","startSlider","postDatainnerInteraction1","postDatainnerInteraction2","startInteractivity","HasInt","setHasInt","startplay","HasInteractivity","setHasInteractivity","interact1a","interact2a","interact3a","darkmode","state","GlobalReducer","darkmodeReducer","position","zIndex","left","cursor","top","fontFamily","fontWeight","opacity","height","padding","paddingLeft","paddingRight","backgroundColor","borderRadius","fontSize","display","color","visibility","SliderNumber","memo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { RootStateOrAny, useSelector } from \"react-redux\";\r\nimport FilterNoneOutlinedIcon from \"@mui/icons-material/FilterNoneOutlined\";\r\nimport LayersOutlinedIcon from \"@mui/icons-material/LayersOutlined\";\r\nimport ZoomOutIcon from \"@mui/icons-material/ZoomOut\";\r\n\r\nfunction SliderNumberx({\r\n  activeSlide,\r\n  total,\r\n  pey,\r\n  post,\r\n  itemCLICKED,\r\n  stopSlider,\r\n  ActiveAutoPlay,\r\n  startSlider,\r\n  postDatainnerInteraction1,\r\n  postDatainnerInteraction2,\r\n  startInteractivity,\r\n  HasInt,\r\n  setHasInt,\r\n}: any): JSX.Element {\r\n  const startplay = () => {\r\n    if (ActiveAutoPlay[pey]) {\r\n      startSlider(0);\r\n    } else {\r\n      stopSlider(0);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const [HasInteractivity, setHasInteractivity] = useState(false);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (HasInt === 1000) { } else {\r\n\r\n\r\n      setHasInteractivity(true)\r\n    }\r\n\r\n\r\n\r\n    if (post.interact1a) {\r\n\r\n      setHasInteractivity(true)\r\n\r\n      setHasInt(0);\r\n    }\r\n\r\n\r\n    if (post.interact2a) {\r\n\r\n\r\n      setHasInt(1);\r\n      setHasInteractivity(true);\r\n    }\r\n\r\n\r\n    if (post.interact3a) {\r\n\r\n      setHasInteractivity(true);\r\n\r\n      setHasInt(2);\r\n    }\r\n\r\n\r\n  }, [total, HasInt, pey, post])\r\n\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  return (\r\n    <>\r\n      {itemCLICKED[pey] ? null : (\r\n        <>\r\n          {\" \"}\r\n          <div\r\n            onClick={startplay}\r\n            style={{\r\n              position: \"absolute\",\r\n              zIndex: 30,\r\n              left: 30,\r\n              cursor: \"pointer\",\r\n              top: \"5vh\",\r\n              fontFamily: \"Arial, Helvetica, sans-serif\",\r\n              fontWeight: \"bolder\",\r\n              opacity: \"0.9\",\r\n              height: \"0px\",\r\n              padding: \"0px\",\r\n            }}\r\n          >\r\n            <span\r\n              className={HasInteractivity ? darkmodeReducer ? \"turx heartbeat\" : \"turdark heartbeat\" : darkmodeReducer ? \"turx\" : \"turdark\"}\r\n              style={{\r\n                padding: \"7px\",\r\n                paddingLeft: HasInteractivity ? \"0.9vw\" : '10px',\r\n                paddingRight: HasInteractivity ? \"0.9vw\" : '10px',\r\n                backgroundColor: darkmodeReducer\r\n                  ? \"rgba(41,41,41,0.86)\"\r\n                  : \"rgba(205,205,205,0.9) \",\r\n                borderRadius: \"50%\",\r\n                fontSize: \"0.92vw\",\r\n                display: total === 1 ? HasInteractivity ? 'block' : 'none' : 'block',\r\n                color: darkmodeReducer ? \"#ffffff\" : \"#000000\",\r\n              }\r\n              }\r\n            >\r\n              <span style={{ opacity: HasInteractivity && total === 1 ? 0 : 1 }}>{total}</span>\r\n            </span>\r\n          </div>{\" \"}\r\n        </>\r\n      )\r\n      }\r\n\r\n      {\r\n        itemCLICKED[pey] ? (\r\n          total === 0 ? null : (\r\n            <>\r\n              {\" \"}\r\n              <div\r\n                onClick={startplay}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  zIndex: 30,\r\n                  left: 30,\r\n                  cursor: \"pointer\",\r\n                  top: \"5vh\",\r\n                  fontFamily: \"Arial, Helvetica, sans-serif\",\r\n                  fontWeight: \"bolder\",\r\n                  opacity: \"0.9\",\r\n                  height: \"0px\",\r\n                  padding: \"0px\",\r\n                }}\r\n              >\r\n                <span\r\n                  className={HasInteractivity ? darkmodeReducer ? \"turx heartbeat\" : \"turdark heartbeat\" : darkmodeReducer ? \"turx\" : \"turdark\"}\r\n                  style={{\r\n                    padding: \"7px\",\r\n                    paddingLeft: HasInteractivity ? \"0.9vw\" : '10px',\r\n                    paddingRight: HasInteractivity ? \"0.9vw\" : '10px',\r\n                    backgroundColor: darkmodeReducer\r\n                      ? \"rgba(41,41,41,0.86)\"\r\n                      : \"rgba(205,205,205,0.9) \",\r\n                    borderRadius: \"50%\",\r\n                    fontSize: \"0.92vw\",\r\n                    display: total === 1 ? HasInteractivity ? 'block' : 'none' : 'block',\r\n                    visibility: 'visible',\r\n                    color: darkmodeReducer ? \"#ffffff\" : \"#000000\",\r\n                  }\r\n                  }\r\n                >\r\n                  <span style={{ opacity: HasInteractivity && total === 1 ? 0 : 1 }}>\r\n\r\n                    {activeSlide + 1}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n\r\n\r\n            </>\r\n          )\r\n        ) : null\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport const SliderNumber = React.memo(SliderNumberx);\r\n"]},"metadata":{},"sourceType":"module"}