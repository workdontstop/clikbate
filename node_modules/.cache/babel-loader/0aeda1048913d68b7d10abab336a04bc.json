{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\log\\\\TextFieldSignup.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { DialogContent } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TextFieldSignupx({\n  updateSignvalues,\n  rawSignupValues,\n  signupShowPassword,\n  ShowSignupPasswordForaWhile,\n  size,\n  passwordType,\n  emailType,\n  withHolder,\n  focus,\n  setFocus,\n  showFocusTextFieldByHidePadding,\n  setShowFocusTextFieldByHidePadding\n}) {\n  _s();\n\n  var width = \" \";\n  var sizex = undefined;\n  var zIndex = 0;\n  var zindexBackPlateP = 0;\n  var displayBackPlateP = \"none\";\n  var zindexU = 0;\n  var zindexBackPlateU = 0;\n  var displayBackPlateU = \"none\";\n  var zindexE = 0;\n  var zindexBackPlateE = 0;\n  var displayBackPlateE = \"none\";\n\n  switch (size) {\n    case \"small\":\n      sizex = \"small\";\n      width = \"100%\";\n      var transform = \"scale(0.93)\";\n      var paddingBottomE = \"50px\";\n      var paddingBottomP = \"65px\";\n      var paddingBottomU = \"78px\";\n      zIndex = 1;\n      var font1 = \"\";\n      var font2 = \"\";\n      break;\n\n    case \"smallTablet\":\n      sizex = \"small\";\n      width = \"62%\";\n      var transform = \"scale(1)\";\n      var paddingBottomE = \"70px\";\n      var paddingBottomP = \"65px\";\n      var paddingBottomU = \"70px\";\n      zIndex = 1;\n      var font1 = \"2.6vh\";\n      var font2 = \"2vh\";\n      break;\n\n    default:\n      var width = withHolder;\n      var transform = \"scale(1)\";\n      var paddingBottomE = \"34px\";\n      var paddingBottomP = \"30px\";\n      var paddingBottomU = \"50px\";\n      zIndex = 1;\n      var font1 = \"2.7vh\";\n      var font2 = \"1.9vh\";\n  }\n\n  if (size == \"small\" || size === \"smallTablet\") {\n    if (emailType) {\n      if (focus) {\n        zindexE = 15;\n        zindexBackPlateE = 12;\n        displayBackPlateE = \"block\";\n      } else {\n        zindexE = 0;\n        zindexBackPlateE = 0;\n        displayBackPlateE = \"none\";\n      }\n    } else if (passwordType) {\n      if (focus) {\n        zIndex = 15;\n        zindexBackPlateP = 12;\n        displayBackPlateP = \"block\";\n      } else {\n        zIndex = 1;\n        zindexBackPlateP = 0;\n        displayBackPlateP = \"none\";\n      }\n    } else {\n      if (focus) {\n        zindexU = 15;\n        zindexBackPlateU = 12;\n        displayBackPlateU = \"block\";\n      } else {\n        zindexU = 0;\n        zindexBackPlateU = 0;\n        displayBackPlateU = \"none\";\n      }\n    }\n  }\n\n  const [OpenModalFormOnce, setOpenModalFormOnce] = useState(false);\n  const CloseModalForm = useCallback(DeviceBackButtonClicked => {\n    ///onpopstate fires when back and forward buttons used\n    if (DeviceBackButtonClicked === 1) {\n      window.onpopstate = () => {\n        setFocus(false);\n        setShowFocusTextFieldByHidePadding(false);\n      };\n    } else {\n      setFocus(false);\n      setShowFocusTextFieldByHidePadding(false); ///Replace modal history state with previous history state\n\n      window.history.back();\n    }\n  }, [focus, showFocusTextFieldByHidePadding, OpenModalFormOnce]); ///\n  ///\n  ///\n  ///OPEN LOG MODAL\n\n  const OpenModalForm = useCallback(formtypedata => {\n    setFocus(true);\n    setShowFocusTextFieldByHidePadding(true); ///Replace current history state (since opening a modal Level 2 grid)...\n    /// if this was a level 1 grid (profile-info page use Pushstate to create new history state)\n\n    if (!OpenModalFormOnce) {\n      window.history.pushState(null, \"\", \"input\");\n      setOpenModalFormOnce(true);\n      CloseModalForm(1);\n    }\n  }, [focus, showFocusTextFieldByHidePadding, OpenModalFormOnce, CloseModalForm]);\n\n  const focusTextfield = a => {\n    if (size == \"small\" || size === \"smallTablet\") {\n      if (a === 1) {\n        OpenModalForm();\n      } else {\n        CloseModalForm(0);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  var TextFieldOpacity = \"1\";\n\n  if (darkmodeReducer) {\n    if (focus) {\n      TextFieldOpacity = \"1\";\n    } else {\n      TextFieldOpacity = \"0.8\";\n    }\n  } else {\n    TextFieldOpacity = \"1\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: emailType ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(DialogContent, {\n        className: darkmodeReducer ? \"mobileTextfield-backplate dontallowhighlighting  modal-containerDark\" : \"mobileTextfield-backplate dontallowhighlighting  modal-containerLight\",\n        style: {\n          zIndex: zindexBackPlateE,\n          display: displayBackPlateE\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onFocus: () => focusTextfield(1),\n        onBlur: () => focusTextfield(0),\n        size: sizex,\n        inputProps: {\n          style: {\n            fontSize: font1\n          }\n        },\n        InputLabelProps: {\n          style: {\n            fontSize: font2\n          }\n        },\n        style: {\n          transform: transform,\n          width: width,\n          paddingBottom: showFocusTextFieldByHidePadding ? \"0px\" : paddingBottomE,\n          zIndex: zindexE,\n          opacity: TextFieldOpacity\n        },\n        label: \"Email\",\n        type: \"email\",\n        onChange: updateSignvalues,\n        name: \"inputedEmail\",\n        value: rawSignupValues.inputedEmail,\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : passwordType ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(DialogContent, {\n        className: darkmodeReducer ? \"mobileTextfield-backplate dontallowhighlighting  modal-containerDark\" : \"mobileTextfield-backplate dontallowhighlighting  modal-containerLight\",\n        style: {\n          zIndex: zindexBackPlateP,\n          display: displayBackPlateP\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onFocus: () => focusTextfield(1),\n        onBlur: () => focusTextfield(0),\n        size: sizex,\n        inputProps: {\n          style: {\n            fontSize: font1\n          }\n        },\n        InputLabelProps: {\n          style: {\n            fontSize: font2\n          }\n        },\n        style: {\n          transform: transform,\n          width: width,\n          paddingBottom: showFocusTextFieldByHidePadding ? \"0px\" : paddingBottomP,\n          zIndex: zIndex,\n          opacity: TextFieldOpacity\n        },\n        label: \"Password\",\n        type: signupShowPassword ? \"text\" : \"password\",\n        onChange: updateSignvalues,\n        name: \"inputedPassword\",\n        value: rawSignupValues.inputedPassword,\n        variant: \"standard\",\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onMouseDown: ShowSignupPasswordForaWhile,\n              \"aria-label\": \"toggle password visibility\",\n              children: signupShowPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(DialogContent, {\n        className: darkmodeReducer ? \"mobileTextfield-backplate dontallowhighlighting  modal-containerDark\" : \"mobileTextfield-backplate dontallowhighlighting  modal-containerLight\",\n        style: {\n          zIndex: zindexBackPlateU,\n          display: displayBackPlateU\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onFocus: () => focusTextfield(1),\n        onBlur: () => focusTextfield(0),\n        size: sizex,\n        inputProps: {\n          style: {\n            fontSize: font1\n          }\n        },\n        InputLabelProps: {\n          style: {\n            fontSize: font2\n          }\n        },\n        style: {\n          transform: transform,\n          width: width,\n          paddingBottom: showFocusTextFieldByHidePadding ? \"0px\" : paddingBottomU,\n          zIndex: zindexU,\n          opacity: TextFieldOpacity\n        },\n        label: \"Username\",\n        type: \"text\",\n        onChange: updateSignvalues,\n        name: \"inputedUsername\",\n        value: rawSignupValues.inputedUsername,\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(TextFieldSignupx, \"z+qQiMW8+NFuZa9TrUYFBlnAcPY=\", false, function () {\n  return [useSelector];\n});\n\n_c = TextFieldSignupx;\nexport const TextFieldSignup = /*#__PURE__*/React.memo(TextFieldSignupx);\n_c2 = TextFieldSignup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextFieldSignupx\");\n$RefreshReg$(_c2, \"TextFieldSignup\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/log/TextFieldSignup.tsx"],"names":["React","useState","useCallback","IconButton","InputAdornment","TextField","VisibilityOffIcon","VisibilityIcon","DialogContent","useSelector","TextFieldSignupx","updateSignvalues","rawSignupValues","signupShowPassword","ShowSignupPasswordForaWhile","size","passwordType","emailType","withHolder","focus","setFocus","showFocusTextFieldByHidePadding","setShowFocusTextFieldByHidePadding","width","sizex","undefined","zIndex","zindexBackPlateP","displayBackPlateP","zindexU","zindexBackPlateU","displayBackPlateU","zindexE","zindexBackPlateE","displayBackPlateE","transform","paddingBottomE","paddingBottomP","paddingBottomU","font1","font2","OpenModalFormOnce","setOpenModalFormOnce","CloseModalForm","DeviceBackButtonClicked","window","onpopstate","history","back","OpenModalForm","formtypedata","pushState","focusTextfield","a","darkmode","state","GlobalReducer","darkmodeReducer","TextFieldOpacity","display","style","fontSize","paddingBottom","opacity","inputedEmail","inputedPassword","endAdornment","inputedUsername","TextFieldSignup","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport { ItextfIeldSignup } from \"./log-Interfaces\";\r\nimport { DialogContent, Button, Paper, Grid } from \"@material-ui/core\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction TextFieldSignupx({\r\n  updateSignvalues,\r\n  rawSignupValues,\r\n  signupShowPassword,\r\n  ShowSignupPasswordForaWhile,\r\n  size,\r\n  passwordType,\r\n  emailType,\r\n  withHolder,\r\n  focus,\r\n  setFocus,\r\n  showFocusTextFieldByHidePadding,\r\n  setShowFocusTextFieldByHidePadding,\r\n}: ItextfIeldSignup): JSX.Element {\r\n  var width = \" \";\r\n  var sizex: \"small\" | \"medium\" | undefined = undefined;\r\n  var zIndex = 0;\r\n  var zindexBackPlateP = 0;\r\n  var displayBackPlateP = \"none\";\r\n  var zindexU = 0;\r\n  var zindexBackPlateU = 0;\r\n  var displayBackPlateU = \"none\";\r\n  var zindexE = 0;\r\n  var zindexBackPlateE = 0;\r\n  var displayBackPlateE = \"none\";\r\n\r\n  switch (size) {\r\n    case \"small\":\r\n      sizex = \"small\";\r\n      width = \"100%\";\r\n      var transform = \"scale(0.93)\";\r\n      var paddingBottomE = \"50px\";\r\n      var paddingBottomP = \"65px\";\r\n      var paddingBottomU = \"78px\";\r\n      zIndex = 1;\r\n      var font1 = \"\";\r\n      var font2 = \"\";\r\n      break;\r\n    case \"smallTablet\":\r\n      sizex = \"small\";\r\n      width = \"62%\";\r\n      var transform = \"scale(1)\";\r\n      var paddingBottomE = \"70px\";\r\n      var paddingBottomP = \"65px\";\r\n      var paddingBottomU = \"70px\";\r\n      zIndex = 1;\r\n      var font1 = \"2.6vh\";\r\n      var font2 = \"2vh\";\r\n      break;\r\n    default:\r\n      var width = withHolder;\r\n      var transform = \"scale(1)\";\r\n      var paddingBottomE = \"34px\";\r\n      var paddingBottomP = \"30px\";\r\n      var paddingBottomU = \"50px\";\r\n      zIndex = 1;\r\n      var font1 = \"2.7vh\";\r\n      var font2 = \"1.9vh\";\r\n  }\r\n\r\n  if (size == \"small\" || size === \"smallTablet\") {\r\n    if (emailType) {\r\n      if (focus) {\r\n        zindexE = 15;\r\n        zindexBackPlateE = 12;\r\n        displayBackPlateE = \"block\";\r\n      } else {\r\n        zindexE = 0;\r\n        zindexBackPlateE = 0;\r\n        displayBackPlateE = \"none\";\r\n      }\r\n    } else if (passwordType) {\r\n      if (focus) {\r\n        zIndex = 15;\r\n        zindexBackPlateP = 12;\r\n        displayBackPlateP = \"block\";\r\n      } else {\r\n        zIndex = 1;\r\n        zindexBackPlateP = 0;\r\n        displayBackPlateP = \"none\";\r\n      }\r\n    } else {\r\n      if (focus) {\r\n        zindexU = 15;\r\n        zindexBackPlateU = 12;\r\n        displayBackPlateU = \"block\";\r\n      } else {\r\n        zindexU = 0;\r\n        zindexBackPlateU = 0;\r\n        displayBackPlateU = \"none\";\r\n      }\r\n    }\r\n  }\r\n\r\n  const [OpenModalFormOnce, setOpenModalFormOnce] = useState<boolean>(false);\r\n  const CloseModalForm = useCallback(\r\n    (DeviceBackButtonClicked: number) => {\r\n      ///onpopstate fires when back and forward buttons used\r\n      if (DeviceBackButtonClicked === 1) {\r\n        window.onpopstate = () => {\r\n          setFocus(false);\r\n          setShowFocusTextFieldByHidePadding(false);\r\n        };\r\n      } else {\r\n        setFocus(false);\r\n        setShowFocusTextFieldByHidePadding(false);\r\n        ///Replace modal history state with previous history state\r\n        window.history.back();\r\n      }\r\n    },\r\n    [focus, showFocusTextFieldByHidePadding, OpenModalFormOnce]\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///OPEN LOG MODAL\r\n\r\n  const OpenModalForm = useCallback(\r\n    (formtypedata: number) => {\r\n      setFocus(true);\r\n      setShowFocusTextFieldByHidePadding(true);\r\n      ///Replace current history state (since opening a modal Level 2 grid)...\r\n      /// if this was a level 1 grid (profile-info page use Pushstate to create new history state)\r\n\r\n      if (!OpenModalFormOnce) {\r\n        window.history.pushState(null, \"\", \"input\");\r\n        setOpenModalFormOnce(true);\r\n        CloseModalForm(1);\r\n      }\r\n    },\r\n    [focus, showFocusTextFieldByHidePadding, OpenModalFormOnce, CloseModalForm]\r\n  );\r\n\r\n  const focusTextfield = (a: number) => {\r\n    if (size == \"small\" || size === \"smallTablet\") {\r\n      if (a === 1) {\r\n        OpenModalForm();\r\n      } else {\r\n        CloseModalForm(0);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  var TextFieldOpacity = \"1\";\r\n  if (darkmodeReducer) {\r\n    if (focus) {\r\n      TextFieldOpacity = \"1\";\r\n    } else {\r\n      TextFieldOpacity = \"0.8\";\r\n    }\r\n  } else {\r\n    TextFieldOpacity = \"1\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {emailType ? (\r\n        <>\r\n          {\" \"}\r\n          <DialogContent\r\n            className={\r\n              darkmodeReducer\r\n                ? \"mobileTextfield-backplate dontallowhighlighting  modal-containerDark\"\r\n                : \"mobileTextfield-backplate dontallowhighlighting  modal-containerLight\"\r\n            }\r\n            style={{ zIndex: zindexBackPlateE, display: displayBackPlateE }}\r\n          ></DialogContent>\r\n          <TextField\r\n            onFocus={() => focusTextfield(1)}\r\n            onBlur={() => focusTextfield(0)}\r\n            size={sizex}\r\n            inputProps={{ style: { fontSize: font1 } }}\r\n            InputLabelProps={{ style: { fontSize: font2 } }}\r\n            style={{\r\n              transform: transform,\r\n              width: width,\r\n              paddingBottom: showFocusTextFieldByHidePadding\r\n                ? \"0px\"\r\n                : paddingBottomE,\r\n              zIndex: zindexE,\r\n              opacity: TextFieldOpacity,\r\n            }}\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            onChange={updateSignvalues}\r\n            name=\"inputedEmail\"\r\n            value={rawSignupValues.inputedEmail}\r\n            variant=\"standard\"\r\n          />\r\n        </>\r\n      ) : passwordType ? (\r\n        <>\r\n          {\" \"}\r\n          <DialogContent\r\n            className={\r\n              darkmodeReducer\r\n                ? \"mobileTextfield-backplate dontallowhighlighting  modal-containerDark\"\r\n                : \"mobileTextfield-backplate dontallowhighlighting  modal-containerLight\"\r\n            }\r\n            style={{ zIndex: zindexBackPlateP, display: displayBackPlateP }}\r\n          ></DialogContent>\r\n          <TextField\r\n            onFocus={() => focusTextfield(1)}\r\n            onBlur={() => focusTextfield(0)}\r\n            size={sizex}\r\n            inputProps={{ style: { fontSize: font1 } }}\r\n            InputLabelProps={{ style: { fontSize: font2 } }}\r\n            style={{\r\n              transform: transform,\r\n              width: width,\r\n              paddingBottom: showFocusTextFieldByHidePadding\r\n                ? \"0px\"\r\n                : paddingBottomP,\r\n              zIndex: zIndex,\r\n              opacity: TextFieldOpacity,\r\n            }}\r\n            label=\"Password\"\r\n            type={signupShowPassword ? \"text\" : \"password\"}\r\n            onChange={updateSignvalues}\r\n            name=\"inputedPassword\"\r\n            value={rawSignupValues.inputedPassword}\r\n            variant=\"standard\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onMouseDown={ShowSignupPasswordForaWhile}\r\n                    aria-label=\"toggle password visibility\"\r\n                  >\r\n                    {signupShowPassword ? (\r\n                      <VisibilityIcon />\r\n                    ) : (\r\n                      <VisibilityOffIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          {\" \"}\r\n          <DialogContent\r\n            className={\r\n              darkmodeReducer\r\n                ? \"mobileTextfield-backplate dontallowhighlighting  modal-containerDark\"\r\n                : \"mobileTextfield-backplate dontallowhighlighting  modal-containerLight\"\r\n            }\r\n            style={{ zIndex: zindexBackPlateU, display: displayBackPlateU }}\r\n          ></DialogContent>\r\n          <TextField\r\n            onFocus={() => focusTextfield(1)}\r\n            onBlur={() => focusTextfield(0)}\r\n            size={sizex}\r\n            inputProps={{ style: { fontSize: font1 } }}\r\n            InputLabelProps={{ style: { fontSize: font2 } }}\r\n            style={{\r\n              transform: transform,\r\n              width: width,\r\n              paddingBottom: showFocusTextFieldByHidePadding\r\n                ? \"0px\"\r\n                : paddingBottomU,\r\n              zIndex: zindexU,\r\n              opacity: TextFieldOpacity,\r\n            }}\r\n            label=\"Username\"\r\n            type=\"text\"\r\n            onChange={updateSignvalues}\r\n            name=\"inputedUsername\"\r\n            value={rawSignupValues.inputedUsername}\r\n            variant=\"standard\"\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const TextFieldSignup = React.memo(TextFieldSignupx);\r\n"]},"metadata":{},"sourceType":"module"}