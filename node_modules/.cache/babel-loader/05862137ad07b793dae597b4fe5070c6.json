{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\Clikbate\\\\src\\\\upload\\\\VideoEditor.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { matchMobile } from \"../DetectDevice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VideoEditorx({\n  VideoUrl,\n  VideoUrl2,\n  ShowVideo2,\n  ShowVideo,\n  sethowVideo2,\n  sethowVideo22\n}) {\n  _s();\n\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      style: {\n        display: ShowVideo || ShowVideo2 ? 'block' : 'none',\n        position: 'fixed',\n        top: '0vh',\n        height: '100vh',\n        backgroundColor: '#555555',\n        width: '100%',\n        margin: 'auto',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          margin: \"auto\",\n          textAlign: \"right\",\n          left: '5px',\n          height: \"20px\",\n          position: 'fixed',\n          top: '3vh',\n          right: '3vw'\n        },\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: () => {},\n          className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \",\n          style: {\n            margin: \"auto\",\n            color: \"#ffffff\",\n            fontSize: matchMobile ? `3vh` : `2.5vw`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), ShowVideo && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: VideoUrl,\n        controls: true,\n        style: {\n          width: '40%',\n          margin: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), ShowVideo2 && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: VideoUrl2,\n        controls: true,\n        style: {\n          width: '40%',\n          margin: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(VideoEditorx, \"pyUiayCCYEIzD5+dG/9/J7hvlxI=\", false, function () {\n  return [useSelector];\n});\n\n_c = VideoEditorx;\nexport const VideoEditor = /*#__PURE__*/React.memo(VideoEditorx);\n_c2 = VideoEditor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VideoEditorx\");\n$RefreshReg$(_c2, \"VideoEditor\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/Clikbate/src/upload/VideoEditor.tsx"],"names":["React","Grid","useSelector","CloseIcon","matchMobile","VideoEditorx","VideoUrl","VideoUrl2","ShowVideo2","ShowVideo","sethowVideo2","sethowVideo22","darkmode","state","GlobalReducer","darkmodeReducer","display","position","top","height","backgroundColor","width","margin","textAlign","left","right","color","fontSize","VideoEditor","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAMO,OANP;AAQA,SAASC,IAAT,QAAqB,mBAArB;AAEA,SAASC,WAAT,QAAyC,aAAzC;AAOA,OAAOC,SAAP,MAAsB,2BAAtB;AASA,SAA+BC,WAA/B,QAAkD,iBAAlD;;;;AAGA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA,UAAvB;AAAmCC,EAAAA,SAAnC;AAA8CC,EAAAA,YAA9C;AAA4DC,EAAAA;AAA5D,CAAtB,EAAqH;AAAA;;AAEnH;AACA;AACA;AAMA,QAAM;AAAEC,IAAAA;AAAF,MAAeV,WAAW,CAAEW,KAAD,KAAoC,EACnE,GAAGA,KAAK,CAACC;AAD0D,GAApC,CAAD,CAAhC;AAIA,QAAMC,eAAe,GAAGH,QAAxB;AAIA,sBAAO;AAAA,2BAEL,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,EAAV;AAAc,MAAA,KAAK,EAAE;AAAEI,QAAAA,OAAO,EAAEP,SAAS,IAAID,UAAb,GAA0B,OAA1B,GAAoC,MAA/C;AAAuDS,QAAAA,QAAQ,EAAE,OAAjE;AAA0EC,QAAAA,GAAG,EAAE,KAA/E;AAAsFC,QAAAA,MAAM,EAAE,OAA9F;AAAuGC,QAAAA,eAAe,EAAE,SAAxH;AAAmIC,QAAAA,KAAK,EAAE,MAA1I;AAAkJC,QAAAA,MAAM,EAAE,MAA1J;AAAkKC,QAAAA,SAAS,EAAE;AAA7K,OAArB;AAAA,8BAEE,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,EAAE,EAAE,EAFN;AAGE,QAAA,KAAK,EAAE;AACLD,UAAAA,MAAM,EAAE,MADH;AAELC,UAAAA,SAAS,EAAE,OAFN;AAGLC,UAAAA,IAAI,EAAE,KAHD;AAILL,UAAAA,MAAM,EAAE,MAJH;AAKLF,UAAAA,QAAQ,EAAE,OALL;AAMLC,UAAAA,GAAG,EAAE,KANA;AAOLO,UAAAA,KAAK,EAAE;AAPF,SAHT;AAAA,+BAaE,QAAC,SAAD;AACE,UAAA,OAAO,EAAE,MAAM,CAGd,CAJH;AAKE,UAAA,SAAS,EACPV,eAAe,GACX,2EADW,GAEX,2EARR;AAUE,UAAA,KAAK,EAAE;AACLO,YAAAA,MAAM,EAAE,MADH;AAELI,YAAAA,KAAK,EAAE,SAFF;AAGLC,YAAAA,QAAQ,EAAEvB,WAAW,GAChB,KADgB,GAEhB;AALA;AAVT;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,cAFF,EAoCGK,SAAS,iBAAI;AAAO,QAAA,GAAG,EAAEH,QAAZ;AAAsB,QAAA,QAAQ,MAA9B;AAA+B,QAAA,KAAK,EAAE;AAAEe,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,MAAM,EAAE;AAAxB;AAAtC;AAAA;AAAA;AAAA;AAAA,cApChB,EAsCGd,UAAU,iBAAI;AAAO,QAAA,GAAG,EAAED,SAAZ;AAAuB,QAAA,QAAQ,MAA/B;AAAgC,QAAA,KAAK,EAAE;AAAEc,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,MAAM,EAAE;AAAxB;AAAvC;AAAA;AAAA;AAAA;AAAA,cAtCjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAFK,mBAAP;AA6CD;;GA/DQjB,Y;UAUcH,W;;;KAVdG,Y;AAiET,OAAO,MAAMuB,WAAW,gBAAG5B,KAAK,CAAC6B,IAAN,CAAWxB,YAAX,CAApB;MAAMuB,W","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useCallback,\r\n} from \"react\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { AnySoaRecord } from \"dns\";\r\nimport { PreviewCanvas } from \"./PreviewCanvas\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\n\r\n\r\nfunction VideoEditorx({ VideoUrl, VideoUrl2, ShowVideo2, ShowVideo, sethowVideo2, sethowVideo22 }: any): JSX.Element {\r\n\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n\r\n\r\n  return <>\r\n\r\n    <Grid xs={12} style={{ display: ShowVideo || ShowVideo2 ? 'block' : 'none', position: 'fixed', top: '0vh', height: '100vh', backgroundColor: '#555555', width: '100%', margin: 'auto', textAlign: 'center' }} >\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          margin: \"auto\",\r\n          textAlign: \"right\",\r\n          left: '5px',\r\n          height: \"20px\",\r\n          position: 'fixed',\r\n          top: '3vh',\r\n          right: '3vw'\r\n        }}\r\n      >\r\n        <CloseIcon\r\n          onClick={() => {\r\n\r\n\r\n          }}\r\n          className={\r\n            darkmodeReducer\r\n              ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \"\r\n              : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \"\r\n          }\r\n          style={{\r\n            margin: \"auto\",\r\n            color: \"#ffffff\",\r\n            fontSize: matchMobile\r\n              ? `3vh`\r\n              : `2.5vw`,\r\n\r\n          }}\r\n        />\r\n      </Grid>\r\n\r\n      {ShowVideo && <video src={VideoUrl} controls style={{ width: '40%', margin: 'auto' }}></video>}\r\n\r\n      {ShowVideo2 && <video src={VideoUrl2} controls style={{ width: '40%', margin: 'auto' }}></video>}\r\n\r\n    </Grid >\r\n\r\n  </>;\r\n}\r\n\r\nexport const VideoEditor = React.memo(VideoEditorx);\r\n"]},"metadata":{},"sourceType":"module"}