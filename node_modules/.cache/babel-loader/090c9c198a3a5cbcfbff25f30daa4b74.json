{"ast":null,"code":"import { currentTime } from '@most/scheduler';\n/** @license MIT License (c) copyright 2015-2016 original author or authors */\n\n/** @author Brian Cavalier */\n// domEvent :: (EventTarget t, Event e) => String -> t -> boolean=false -> Stream e\n\nvar domEvent = function (event, node, capture) {\n  if (capture === void 0) capture = false;\n  return new DomEvent(event, node, capture);\n};\n\nvar blur = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('blur', node, capture);\n};\n\nvar focus = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('focus', node, capture);\n};\n\nvar focusin = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('focusin', node, capture);\n};\n\nvar focusout = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('focusout', node, capture);\n};\n\nvar click = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('click', node, capture);\n};\n\nvar dblclick = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('dblclick', node, capture);\n};\n\nvar mousedown = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('mousedown', node, capture);\n};\n\nvar mouseup = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('mouseup', node, capture);\n};\n\nvar mousemove = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('mousemove', node, capture);\n};\n\nvar mouseover = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('mouseover', node, capture);\n};\n\nvar mouseenter = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('mouseenter', node, capture);\n};\n\nvar mouseout = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('mouseout', node, capture);\n};\n\nvar mouseleave = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('mouseleave', node, capture);\n};\n\nvar change = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('change', node, capture);\n};\n\nvar select = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('select', node, capture);\n};\n\nvar submit = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('submit', node, capture);\n};\n\nvar keydown = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('keydown', node, capture);\n};\n\nvar keypress = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('keypress', node, capture);\n};\n\nvar keyup = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('keyup', node, capture);\n};\n\nvar input = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('input', node, capture);\n};\n\nvar contextmenu = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('contextmenu', node, capture);\n};\n\nvar resize = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('resize', node, capture);\n};\n\nvar scroll = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('scroll', node, capture);\n};\n\nvar error = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('error', node, capture);\n};\n\nvar hashchange = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('hashchange', node, capture);\n};\n\nvar popstate = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('popstate', node, capture);\n};\n\nvar load = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('load', node, capture);\n};\n\nvar unload = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('unload', node, capture);\n};\n\nvar pointerdown = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('pointerdown', node, capture);\n};\n\nvar pointerup = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('pointerup', node, capture);\n};\n\nvar pointermove = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('pointermove', node, capture);\n};\n\nvar pointerover = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('pointerover', node, capture);\n};\n\nvar pointerenter = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('pointerenter', node, capture);\n};\n\nvar pointerout = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('pointerout', node, capture);\n};\n\nvar pointerleave = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('pointerleave', node, capture);\n};\n\nvar touchstart = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('touchstart', node, capture);\n};\n\nvar touchend = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('touchend', node, capture);\n};\n\nvar touchmove = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('touchmove', node, capture);\n};\n\nvar touchcancel = function (node, capture) {\n  if (capture === void 0) capture = false;\n  return domEvent('touchcancel', node, capture);\n};\n\nvar DomEvent = function DomEvent(event, node, capture) {\n  this.event = event;\n  this.node = node;\n  this.capture = capture;\n};\n\nDomEvent.prototype.run = function run(sink, scheduler$$1) {\n  var this$1 = this;\n\n  var send = function (e) {\n    return tryEvent(currentTime(scheduler$$1), e, sink);\n  };\n\n  var dispose = function () {\n    return this$1.node.removeEventListener(this$1.event, send, this$1.capture);\n  };\n\n  this.node.addEventListener(this.event, send, this.capture);\n  return {\n    dispose: dispose\n  };\n};\n\nfunction tryEvent(t, x, sink) {\n  try {\n    sink.event(t, x);\n  } catch (e) {\n    sink.error(t, e);\n  }\n}\n\nexport { domEvent, blur, focus, focusin, focusout, click, dblclick, mousedown, mouseup, mousemove, mouseover, mouseenter, mouseout, mouseleave, change, select, submit, keydown, keypress, keyup, input, contextmenu, resize, scroll, error, hashchange, popstate, load, unload, pointerdown, pointerup, pointermove, pointerover, pointerenter, pointerout, pointerleave, touchstart, touchend, touchmove, touchcancel };","map":{"version":3,"sources":["../src/index.js"],"names":["const","scheduler","this"],"mappings":"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","sourcesContent":["/** @license MIT License (c) copyright 2015-2016 original author or authors */\n/** @author Brian Cavalier */\nimport { currentTime } from '@most/scheduler'\n\n// domEvent :: (EventTarget t, Event e) => String -> t -> boolean=false -> Stream e\nexport const domEvent = (event, node, capture = false) =>\n  new DomEvent(event, node, capture)\n\nexport const blur = (node, capture = false) => domEvent('blur', node, capture)\nexport const focus = (node, capture = false) => domEvent('focus', node, capture)\nexport const focusin = (node, capture = false) => domEvent('focusin', node, capture)\nexport const focusout = (node, capture = false) => domEvent('focusout', node, capture)\nexport const click = (node, capture = false) => domEvent('click', node, capture)\nexport const dblclick = (node, capture = false) => domEvent('dblclick', node, capture)\nexport const mousedown = (node, capture = false) => domEvent('mousedown', node, capture)\nexport const mouseup = (node, capture = false) => domEvent('mouseup', node, capture)\nexport const mousemove = (node, capture = false) => domEvent('mousemove', node, capture)\nexport const mouseover = (node, capture = false) => domEvent('mouseover', node, capture)\nexport const mouseenter = (node, capture = false) => domEvent('mouseenter', node, capture)\nexport const mouseout = (node, capture = false) => domEvent('mouseout', node, capture)\nexport const mouseleave = (node, capture = false) => domEvent('mouseleave', node, capture)\nexport const change = (node, capture = false) => domEvent('change', node, capture)\nexport const select = (node, capture = false) => domEvent('select', node, capture)\nexport const submit = (node, capture = false) => domEvent('submit', node, capture)\nexport const keydown = (node, capture = false) => domEvent('keydown', node, capture)\nexport const keypress = (node, capture = false) => domEvent('keypress', node, capture)\nexport const keyup = (node, capture = false) => domEvent('keyup', node, capture)\nexport const input = (node, capture = false) => domEvent('input', node, capture)\nexport const contextmenu = (node, capture = false) => domEvent('contextmenu', node, capture)\nexport const resize = (node, capture = false) => domEvent('resize', node, capture)\nexport const scroll = (node, capture = false) => domEvent('scroll', node, capture)\nexport const error = (node, capture = false) => domEvent('error', node, capture)\n\nexport const hashchange = (node, capture = false) => domEvent('hashchange', node, capture)\nexport const popstate = (node, capture = false) => domEvent('popstate', node, capture)\nexport const load = (node, capture = false) => domEvent('load', node, capture)\nexport const unload = (node, capture = false) => domEvent('unload', node, capture)\n\nexport const pointerdown = (node, capture = false) => domEvent('pointerdown', node, capture)\nexport const pointerup = (node, capture = false) => domEvent('pointerup', node, capture)\nexport const pointermove = (node, capture = false) => domEvent('pointermove', node, capture)\nexport const pointerover = (node, capture = false) => domEvent('pointerover', node, capture)\nexport const pointerenter = (node, capture = false) => domEvent('pointerenter', node, capture)\nexport const pointerout = (node, capture = false) => domEvent('pointerout', node, capture)\nexport const pointerleave = (node, capture = false) => domEvent('pointerleave', node, capture)\n\nexport const touchstart = (node, capture = false) => domEvent('touchstart', node, capture)\nexport const touchend = (node, capture = false) => domEvent('touchend', node, capture)\nexport const touchmove = (node, capture = false) => domEvent('touchmove', node, capture)\nexport const touchcancel = (node, capture = false) => domEvent('touchcancel', node, capture)\n\nclass DomEvent {\n  constructor (event, node, capture) {\n    this.event = event\n    this.node = node\n    this.capture = capture\n  }\n\n  run (sink, scheduler) {\n    const send = e => tryEvent(currentTime(scheduler), e, sink)\n    const dispose = () => this.node.removeEventListener(this.event, send, this.capture)\n\n    this.node.addEventListener(this.event, send, this.capture)\n\n    return { dispose }\n  }\n}\n\nfunction tryEvent (t, x, sink) {\n  try {\n    sink.event(t, x)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}