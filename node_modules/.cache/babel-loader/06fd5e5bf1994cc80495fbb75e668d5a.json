{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\MiniPost.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useSelector } from \"react-redux\";\nimport { matchMobile } from \"../DetectDevice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MiniPostx({\n  pey,\n  addPostItemsRef,\n  onPostsItemload,\n  post,\n  length,\n  itemheight,\n  itemheighthold,\n  postbackheight,\n  itemcroptype,\n  itemFinalPostHeight,\n  onPostsItemClicked,\n  itemCLICKED,\n  addpostDivRef,\n  postDatainner,\n  itemOriginalPostHeight,\n  ActiveAutoPlay,\n  setActiveAutoPlay,\n  AUTOSlideLongImages,\n  postDivRef,\n  onLoadDataOnce,\n  postDatainnerThumb,\n  setcountAutoplay,\n  countAutoplay,\n  second,\n  setsecond,\n  secondgo,\n  setsecondgo,\n  scrollToPost,\n  OpenModalForm,\n  setDiscussionImage,\n  postData,\n  setCommentPostid,\n  miniLayoutPost,\n  setStopBodyScroll,\n  setminiProfile,\n  postItemsRef,\n  miniProfile\n}) {\n  _s();\n\n  const {\n    REACT_APP_APPX_STATE\n  } = process.env;\n  var allow4dev = \"\";\n\n  if (REACT_APP_APPX_STATE === \"dev\") {\n    allow4dev = \"http://localhost:1000\";\n  } else {\n    allow4dev = \"\";\n  }\n\n  const Timer = useRef(null);\n  const [opacityController, setopacityController] = useState(false); ///\n  ///\n  ///\n  /// SPRING TRANSITION WITH INDEX\n\n  const animationmenu = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: opacityController ? 1 : 0,\n    transform: opacityController ? `translateY(0%)` : `translateY(150%)`\n  }); ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    screenHeight,\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const screenHeightReducer = screenHeight;\n  const darkmodeReducer = darkmode;\n  var textback = \"\";\n\n  if (darkmodeReducer) {\n    textback = \"caption-darkPost\";\n  } else {\n    textback = \"caption-lightPost\";\n  }\n\n  var themepadding = darkmodeReducer ? \"turdarkemo\" : \"turlightemo\";\n  const [LImiter, setLImiter] = useState(false);\n  useEffect(() => {\n    if (onLoadDataOnce[pey]) {\n      if (LImiter) {} else {\n        setTimeout(() => {\n          setopacityController(true);\n        }, pey * 250);\n        setLImiter(true);\n      }\n    }\n  }, [onLoadDataOnce, LImiter]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(animated.div, {\n      style: animationmenu,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: addpostDivRef,\n        style: {\n          padding: \"0px\",\n          width: \"100%\",\n          marginTop: pey === 0 || pey === 1 ? \"-0.5px\" : \"-1.1px\",\n          zIndex: length - 1 - pey,\n          paddingLeft: matchMobile ? \"0px\" : \"2px\",\n          paddingRight: matchMobile ? \"0px\" : \"2px\",\n          paddingTop: matchMobile ? \"10px\" : \"5px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(animated.img, {\n            className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n            src: postDatainner[pey][0],\n            alt: \"a superstarz post \",\n            style: {\n              cursor: \"pointer\",\n              width: \"100%\",\n              height: \"100%\",\n              position: \"absolute\",\n              padding: \"0px\",\n              objectFit: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"cover\" : \"cover\",\n              objectPosition: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"50% top\" : \"50% 50\",\n              zIndex: 0,\n              float: \"left\",\n              filter: \"blur(0px)\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(animated.img, {\n            className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n            src: postDatainnerThumb[pey][0],\n            alt: \"a superstarz post \",\n            style: {\n              cursor: \"pointer\",\n              width: \"100%\",\n              height: \"100%\",\n              position: \"absolute\",\n              padding: \"0px\",\n              objectFit: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"cover\" : \"cover\",\n              objectPosition: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"50% top\" : \"50% 50\",\n              zIndex: 1,\n              float: \"left\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(MiniPostx, \"5Qd12ky81hDQ7mFwnAhOMpaWgmY=\", false, function () {\n  return [useSpring, useSelector];\n});\n\n_c = MiniPostx;\nexport const MiniPost = /*#__PURE__*/React.memo(MiniPostx);\n_c2 = MiniPost;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MiniPostx\");\n$RefreshReg$(_c2, \"MiniPost\");","map":{"version":3,"sources":["C:/Users/oghen/Documents/ClikBate/super/src/profile/MiniPost.tsx"],"names":["React","useRef","useState","useEffect","useSpring","animated","useSelector","matchMobile","MiniPostx","pey","addPostItemsRef","onPostsItemload","post","length","itemheight","itemheighthold","postbackheight","itemcroptype","itemFinalPostHeight","onPostsItemClicked","itemCLICKED","addpostDivRef","postDatainner","itemOriginalPostHeight","ActiveAutoPlay","setActiveAutoPlay","AUTOSlideLongImages","postDivRef","onLoadDataOnce","postDatainnerThumb","setcountAutoplay","countAutoplay","second","setsecond","secondgo","setsecondgo","scrollToPost","OpenModalForm","setDiscussionImage","postData","setCommentPostid","miniLayoutPost","setStopBodyScroll","setminiProfile","postItemsRef","miniProfile","REACT_APP_APPX_STATE","process","env","allow4dev","Timer","opacityController","setopacityController","animationmenu","config","duration","opacity","transform","screenHeight","darkmode","state","GlobalReducer","screenHeightReducer","darkmodeReducer","textback","themepadding","LImiter","setLImiter","setTimeout","padding","width","marginTop","zIndex","paddingLeft","paddingRight","paddingTop","cursor","height","position","objectFit","objectPosition","float","filter","MiniPost","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport { Paper, Grid, Box } from \"@material-ui/core\";\r\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSpring, animated, useTransition } from \"react-spring\";\r\nimport Crop54Icon from \"@mui/icons-material/Crop54\";\r\nimport CropPortraitIcon from \"@mui/icons-material/CropPortrait\";\r\nimport ViewArrayIcon from \"@mui/icons-material/ViewArray\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\r\nimport AspectRatioTwoToneIcon from \"@mui/icons-material/AspectRatioTwoTone\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport Brightness2Icon from \"@mui/icons-material/Brightness2\";\r\nimport AlbumIcon from \"@mui/icons-material/Album\";\r\nimport BentoIcon from \"@mui/icons-material/Bento\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport CommentIcon from \"@mui/icons-material/Comment\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { matchMobile, matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Slider } from \"./Slider\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nfunction MiniPostx({\r\n  pey,\r\n  addPostItemsRef,\r\n  onPostsItemload,\r\n  post,\r\n  length,\r\n  itemheight,\r\n  itemheighthold,\r\n  postbackheight,\r\n  itemcroptype,\r\n  itemFinalPostHeight,\r\n  onPostsItemClicked,\r\n  itemCLICKED,\r\n  addpostDivRef,\r\n  postDatainner,\r\n  itemOriginalPostHeight,\r\n  ActiveAutoPlay,\r\n  setActiveAutoPlay,\r\n  AUTOSlideLongImages,\r\n  postDivRef,\r\n  onLoadDataOnce,\r\n  postDatainnerThumb,\r\n  setcountAutoplay,\r\n  countAutoplay,\r\n  second,\r\n  setsecond,\r\n  secondgo,\r\n  setsecondgo,\r\n  scrollToPost,\r\n  OpenModalForm,\r\n  setDiscussionImage,\r\n  postData,\r\n  setCommentPostid,\r\n  miniLayoutPost,\r\n  setStopBodyScroll,\r\n  setminiProfile,\r\n  postItemsRef,\r\n  miniProfile,\r\n}: any) {\r\n  const { REACT_APP_APPX_STATE } = process.env;\r\n\r\n  var allow4dev = \"\";\r\n\r\n  if (REACT_APP_APPX_STATE === \"dev\") {\r\n    allow4dev = \"http://localhost:1000\";\r\n  } else {\r\n    allow4dev = \"\";\r\n  }\r\n\r\n  const Timer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const [opacityController, setopacityController] = useState<boolean>(false);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SPRING TRANSITION WITH INDEX\r\n  const animationmenu = useSpring({\r\n    config: {\r\n      duration: 250,\r\n    },\r\n    opacity: opacityController ? 1 : 0,\r\n    transform: opacityController ? `translateY(0%)` : `translateY(150%)`,\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const { screenHeight, darkmode } = useSelector(\r\n    (state: RootStateGlobalReducer) => ({\r\n      ...state.GlobalReducer,\r\n    })\r\n  );\r\n  const screenHeightReducer = screenHeight;\r\n  const darkmodeReducer = darkmode;\r\n\r\n  var textback = \"\";\r\n  if (darkmodeReducer) {\r\n    textback = \"caption-darkPost\";\r\n  } else {\r\n    textback = \"caption-lightPost\";\r\n  }\r\n\r\n  var themepadding = darkmodeReducer ? \"turdarkemo\" : \"turlightemo\";\r\n\r\n  const [LImiter, setLImiter] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (onLoadDataOnce[pey]) {\r\n      if (LImiter) {\r\n      } else {\r\n        setTimeout(() => {\r\n          setopacityController(true);\r\n        }, pey * 250);\r\n        setLImiter(true);\r\n      }\r\n    }\r\n  }, [onLoadDataOnce, LImiter]);\r\n\r\n  return (\r\n    <>\r\n      <animated.div style={animationmenu}>\r\n        <div\r\n          ref={addpostDivRef}\r\n          style={{\r\n            padding: \"0px\",\r\n            width: \"100%\",\r\n            marginTop: pey === 0 || pey === 1 ? \"-0.5px\" : \"-1.1px\",\r\n            zIndex: length - 1 - pey,\r\n            paddingLeft: matchMobile ? \"0px\" : \"2px\",\r\n            paddingRight: matchMobile ? \"0px\" : \"2px\",\r\n            paddingTop: matchMobile ? \"10px\" : \"5px\",\r\n          }}\r\n        >\r\n          {/*///////////////////////////////////////////////////////////////////////////POST DATA*/}\r\n\r\n          <div>\r\n            <animated.img\r\n              className={\r\n                darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n              }\r\n              src={postDatainner[pey][0]}\r\n              alt=\"a superstarz post \"\r\n              style={{\r\n                cursor: \"pointer\",\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                position: \"absolute\",\r\n                padding: \"0px\",\r\n                objectFit:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"cover\"\r\n                    : \"cover\",\r\n                objectPosition:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"50% top\"\r\n                    : \"50% 50\",\r\n                zIndex: 0,\r\n                float: \"left\",\r\n                filter: \"blur(0px)\",\r\n              }}\r\n            />\r\n            <animated.img\r\n              className={\r\n                darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n              }\r\n              src={postDatainnerThumb[pey][0]}\r\n              alt=\"a superstarz post \"\r\n              style={{\r\n                cursor: \"pointer\",\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                position: \"absolute\",\r\n                padding: \"0px\",\r\n                objectFit:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"cover\"\r\n                    : \"cover\",\r\n                objectPosition:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"50% top\"\r\n                    : \"50% 50\",\r\n                zIndex: 1,\r\n                float: \"left\",\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </animated.div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const MiniPost = React.memo(MiniPostx);\r\n"]},"metadata":{},"sourceType":"module"}