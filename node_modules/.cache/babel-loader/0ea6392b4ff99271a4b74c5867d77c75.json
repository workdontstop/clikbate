{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\UploadMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { CropUploadMode } from \"./CropUploadMode\";\nimport { FilterMode } from \"./FilterMode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UploadMenux({\n  optionsShow,\n  optinstopshowingReducer,\n  typeTop,\n  closeoptionsslide,\n  animationop,\n  optionsCollectImageRef,\n  handleTouchStartOptions,\n  handleTouchMoveOptions,\n  modalanimation,\n  nextSlidePc,\n  optionsImages,\n  ActiveSlide,\n  optionsNameData,\n  clickOptions,\n  optionsClickType,\n  getSliderWidthNew,\n  cropTOPLEVELScrollRef,\n  refWithimageData,\n  CropSaved,\n  setCropSaved\n}) {\n  _s();\n\n  const [filterImage, setfilterImage] = useState([]);\n  const itemUploadRef = useRef([]);\n  const [ActivatefilterImage, setActivatefilterImage] = useState(false);\n  const [selectedImage, setselectedImage] = useState([]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: ActivatefilterImage ? \"relative\" : \"fixed\",\n        top: ActivatefilterImage ? \"-2000vh\" : \"\"\n      },\n      children: /*#__PURE__*/_jsxDEV(FilterMode, {\n        itemUploadRef: itemUploadRef,\n        filterImage: filterImage,\n        selectedImage: selectedImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: ActivatefilterImage ? \"fixed\" : \"relative\",\n        top: ActivatefilterImage ? \"-2000vh\" : \"\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CropUploadMode, {\n        itemUploadRef: itemUploadRef,\n        CropSaved: CropSaved,\n        ActiveSlide: ActiveSlide,\n        handleTouchStartOptions: handleTouchStartOptions,\n        handleTouchMoveOptions: handleTouchMoveOptions,\n        optionsCollectImageRef: optionsCollectImageRef,\n        modalanimation: modalanimation,\n        getSliderWidthNew: getSliderWidthNew,\n        optionsClickType: optionsClickType,\n        clickOptions: clickOptions,\n        optionsImages: optionsImages,\n        optionsNameData: optionsNameData,\n        cropTOPLEVELScrollRef: cropTOPLEVELScrollRef,\n        refWithimageData: refWithimageData,\n        filterImage: filterImage,\n        setfilterImage: setfilterImage,\n        setActivatefilterImage: setActivatefilterImage,\n        selectedImage: selectedImage,\n        setselectedImage: setselectedImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UploadMenux, \"upXa5/g6rkJG+W1aSpoC17+m5XU=\");\n\n_c = UploadMenux;\nexport const UploadMenu = /*#__PURE__*/React.memo(UploadMenux);\n_c2 = UploadMenu;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadMenux\");\n$RefreshReg$(_c2, \"UploadMenu\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/UploadMenu.tsx"],"names":["React","useRef","useState","CropUploadMode","FilterMode","UploadMenux","optionsShow","optinstopshowingReducer","typeTop","closeoptionsslide","animationop","optionsCollectImageRef","handleTouchStartOptions","handleTouchMoveOptions","modalanimation","nextSlidePc","optionsImages","ActiveSlide","optionsNameData","clickOptions","optionsClickType","getSliderWidthNew","cropTOPLEVELScrollRef","refWithimageData","CropSaved","setCropSaved","filterImage","setfilterImage","itemUploadRef","ActivatefilterImage","setActivatefilterImage","selectedImage","setselectedImage","position","top","UploadMenu","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,MADF,EAEEC,QAFF,QAMO,OANP;AAwBA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,cAA3B;;;;AAEA,SAASC,WAAT,CAAqB;AACnBC,EAAAA,WADmB;AAEnBC,EAAAA,uBAFmB;AAGnBC,EAAAA,OAHmB;AAInBC,EAAAA,iBAJmB;AAKnBC,EAAAA,WALmB;AAMnBC,EAAAA,sBANmB;AAOnBC,EAAAA,uBAPmB;AAQnBC,EAAAA,sBARmB;AASnBC,EAAAA,cATmB;AAUnBC,EAAAA,WAVmB;AAWnBC,EAAAA,aAXmB;AAYnBC,EAAAA,WAZmB;AAanBC,EAAAA,eAbmB;AAcnBC,EAAAA,YAdmB;AAenBC,EAAAA,gBAfmB;AAgBnBC,EAAAA,iBAhBmB;AAiBnBC,EAAAA,qBAjBmB;AAkBnBC,EAAAA,gBAlBmB;AAmBnBC,EAAAA,SAnBmB;AAoBnBC,EAAAA;AApBmB,CAArB,EAqBqB;AAAA;;AACnB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAa,EAAb,CAA9C;AAEA,QAAM0B,aAAa,GAAG3B,MAAM,CAAM,EAAN,CAA5B;AAEA,QAAM,CAAC4B,mBAAD,EAAsBC,sBAAtB,IACJ5B,QAAQ,CAAU,KAAV,CADV;AAGA,QAAM,CAAC6B,aAAD,EAAgBC,gBAAhB,IAAoC9B,QAAQ,CAAa,EAAb,CAAlD;AAEA,sBACE;AAAA,4BACE;AACE,MAAA,KAAK,EAAE;AACL+B,QAAAA,QAAQ,EAAEJ,mBAAmB,GAAG,UAAH,GAAgB,OADxC;AAELK,QAAAA,GAAG,EAAEL,mBAAmB,GAAG,SAAH,GAAe;AAFlC,OADT;AAAA,6BAME,QAAC,UAAD;AACE,QAAA,aAAa,EAAED,aADjB;AAEE,QAAA,WAAW,EAAEF,WAFf;AAGE,QAAA,aAAa,EAAEK;AAHjB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AACE,MAAA,KAAK,EAAE;AACLE,QAAAA,QAAQ,EAAEJ,mBAAmB,GAAG,OAAH,GAAa,UADrC;AAELK,QAAAA,GAAG,EAAEL,mBAAmB,GAAG,SAAH,GAAe;AAFlC,OADT;AAAA,6BAME,QAAC,cAAD;AACE,QAAA,aAAa,EAAED,aADjB;AAEE,QAAA,SAAS,EAAEJ,SAFb;AAGE,QAAA,WAAW,EAAEP,WAHf;AAIE,QAAA,uBAAuB,EAAEL,uBAJ3B;AAKE,QAAA,sBAAsB,EAAEC,sBAL1B;AAME,QAAA,sBAAsB,EAAEF,sBAN1B;AAOE,QAAA,cAAc,EAAEG,cAPlB;AAQE,QAAA,iBAAiB,EAAEO,iBARrB;AASE,QAAA,gBAAgB,EAAED,gBATpB;AAUE,QAAA,YAAY,EAAED,YAVhB;AAWE,QAAA,aAAa,EAAEH,aAXjB;AAYE,QAAA,eAAe,EAAEE,eAZnB;AAaE,QAAA,qBAAqB,EAAEI,qBAbzB;AAcE,QAAA,gBAAgB,EAAEC,gBAdpB;AAeE,QAAA,WAAW,EAAEG,WAff;AAgBE,QAAA,cAAc,EAAEC,cAhBlB;AAiBE,QAAA,sBAAsB,EAAEG,sBAjB1B;AAkBE,QAAA,aAAa,EAAEC,aAlBjB;AAmBE,QAAA,gBAAgB,EAAEC;AAnBpB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AA6CD;;GA5EQ3B,W;;KAAAA,W;AA8ET,OAAO,MAAM8B,UAAU,gBAAGnC,KAAK,CAACoC,IAAN,CAAW/B,WAAX,CAAnB;MAAM8B,U","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { PreviewCanvas } from \"./PreviewCanvas\";\r\nimport { CropUploadMode } from \"./CropUploadMode\";\r\nimport { FilterMode } from \"./FilterMode\";\r\n\r\nfunction UploadMenux({\r\n  optionsShow,\r\n  optinstopshowingReducer,\r\n  typeTop,\r\n  closeoptionsslide,\r\n  animationop,\r\n  optionsCollectImageRef,\r\n  handleTouchStartOptions,\r\n  handleTouchMoveOptions,\r\n  modalanimation,\r\n  nextSlidePc,\r\n  optionsImages,\r\n  ActiveSlide,\r\n  optionsNameData,\r\n  clickOptions,\r\n  optionsClickType,\r\n  getSliderWidthNew,\r\n  cropTOPLEVELScrollRef,\r\n  refWithimageData,\r\n  CropSaved,\r\n  setCropSaved,\r\n}: any): JSX.Element {\r\n  const [filterImage, setfilterImage] = useState<Array<any>>([]);\r\n\r\n  const itemUploadRef = useRef<any>([]);\r\n\r\n  const [ActivatefilterImage, setActivatefilterImage] =\r\n    useState<boolean>(false);\r\n\r\n  const [selectedImage, setselectedImage] = useState<Array<any>>([]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          position: ActivatefilterImage ? \"relative\" : \"fixed\",\r\n          top: ActivatefilterImage ? \"-2000vh\" : \"\",\r\n        }}\r\n      >\r\n        <FilterMode\r\n          itemUploadRef={itemUploadRef}\r\n          filterImage={filterImage}\r\n          selectedImage={selectedImage}\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          position: ActivatefilterImage ? \"fixed\" : \"relative\",\r\n          top: ActivatefilterImage ? \"-2000vh\" : \"\",\r\n        }}\r\n      >\r\n        <CropUploadMode\r\n          itemUploadRef={itemUploadRef}\r\n          CropSaved={CropSaved}\r\n          ActiveSlide={ActiveSlide}\r\n          handleTouchStartOptions={handleTouchStartOptions}\r\n          handleTouchMoveOptions={handleTouchMoveOptions}\r\n          optionsCollectImageRef={optionsCollectImageRef}\r\n          modalanimation={modalanimation}\r\n          getSliderWidthNew={getSliderWidthNew}\r\n          optionsClickType={optionsClickType}\r\n          clickOptions={clickOptions}\r\n          optionsImages={optionsImages}\r\n          optionsNameData={optionsNameData}\r\n          cropTOPLEVELScrollRef={cropTOPLEVELScrollRef}\r\n          refWithimageData={refWithimageData}\r\n          filterImage={filterImage}\r\n          setfilterImage={setfilterImage}\r\n          setActivatefilterImage={setActivatefilterImage}\r\n          selectedImage={selectedImage}\r\n          setselectedImage={setselectedImage}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const UploadMenu = React.memo(UploadMenux);\r\n"]},"metadata":{},"sourceType":"module"}