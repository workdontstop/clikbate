{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\Slider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Arrow } from \"./Arrow\";\nimport { Dots } from \"./Dots\";\nimport { SliderNumber } from \"./SliderNumber\";\nimport { Grid } from \"@material-ui/core\";\nimport { animated, useTransition } from \"react-spring\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Sliderx({\n  slides,\n  pey,\n  refy,\n  itemheight,\n  onPostsItemClicked,\n  onPostsItemload,\n  post,\n  itemFinalPostHeight,\n  itemOriginalPostHeight,\n  itemcroptype,\n  itemCLICKED,\n  ScrolltypeChange,\n  ActiveAutoPlay,\n  setActiveAutoPlay,\n  length\n}) {\n  _s();\n\n  const [sliderIndex, setSliderIndex] = useState(0);\n  const [sliderIndexSlow, setSliderIndexSlow] = useState(0);\n  const [showSliderLoader, setshowSliderLoader] = useState(true);\n  const [autoSlideDuration] = useState(6000);\n  const [sliderDuration] = useState(2000); /// const getWidth = () => window.innerWidth;\n  ///var newGetWidth = getWidth() * slides.length;\n\n  const waitChangeIndexTimer = useRef(null);\n  const waitChangeIndexTimer2 = useRef(null);\n  const handleTouchMoveTimer = useRef(null);\n  const callAutoPlayAgainTimer = useRef(null);\n  const autoPlayTimer = useRef(null);\n  const SlideimageRef = useRef(null);\n  const SlideimageRefthumb = useRef(null);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [touchPosition, setTouchPosition] = useState(null); ///\n  ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  var autoSlideDisplay = \"none\";\n  var sliderLoader = \"\";\n\n  if (showSliderLoader) {\n    autoSlideDisplay = \"none\";\n    sliderLoader = \"\";\n  } else {\n    autoSlideDisplay = \"block\";\n    sliderLoader = \"superloaderAutoSlider\";\n  } ///\n  ///\n  ///\n  /// SPRING TRANSITION WITH INDEX\n\n\n  const transitions = useTransition(sliderIndex, {\n    key: sliderIndex,\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    config: {\n      duration: sliderDuration - 50\n    }\n  }); ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\n\n  const sliderFirstImageOnLoad = item => {\n    if (item === 0) {\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\n        setImageHeight(SlideimageRef.current.clientHeight);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\n\n\n  const sliderFirstImageOnLoadthumb = item => {\n    if (item === 0 && imageHeight === 0) {\n      if (SlideimageRefthumb.current && SlideimageRefthumb.current.clientHeight) {\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n  const handleTouchStart = e => {\n    ////onMouseDown onMouseMove\n    ////touchDown = e.clientX\n    const touchDown = e.touches[0].clientX;\n    setTouchPosition(touchDown);\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH MOVE EVENT\n\n\n  const handleTouchMove = e => {\n    if (handleTouchMoveTimer.current) {\n      clearTimeout(handleTouchMoveTimer.current);\n    }\n\n    handleTouchMoveTimer.current = setTimeout(function () {\n      const touchDown = touchPosition;\n\n      if (touchDown === null) {\n        return;\n      } ////currentTouch = e.clientX\n\n\n      const currentTouch = e.touches[0].clientX;\n      const diff = touchDown - currentTouch;\n\n      if (diff > 40) {\n        nextSlide();\n      } else if (diff < -40) {\n        prevSlide();\n      } else {}\n\n      setTouchPosition(null);\n      return false;\n    }, 200);\n    return false;\n  }; ///\n  ///\n  ///\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\n\n\n  const waitChangeIndex = (data, state) => {\n    if (waitChangeIndexTimer.current) {\n      clearTimeout(waitChangeIndexTimer.current);\n    }\n\n    waitChangeIndexTimer.current = setTimeout(function () {\n      setSliderIndexSlow(state => data);\n    }, 500);\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE\n\n\n  const nextSlide = () => {\n    ScrolltypeChange();\n\n    if (ActiveAutoPlay[pey]) {} else {\n      setshowSliderLoader(true);\n\n      if (autoPlayTimer.current) {\n        clearTimeout(autoPlayTimer.current);\n      }\n    } ///set((state) => (state + 1) % slides.length);\n\n\n    if (sliderIndex === slides.length - 1) {\n      setSliderIndex(sliderIndex => 0);\n      waitChangeIndex(0, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex + 1);\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\n    }\n\n    if (ActiveAutoPlay[pey]) {} else {\n      if (callAutoPlayAgainTimer.current) {\n        clearTimeout(callAutoPlayAgainTimer.current);\n      }\n\n      callAutoPlayAgainTimer.current = setTimeout(function () {\n        SliderAutoPlay(1);\n      }, sliderDuration);\n    }\n  }; ///\n  ///\n  ///\n  /// PREV SLIDE\n\n\n  const prevSlide = () => {\n    ScrolltypeChange();\n\n    if (ActiveAutoPlay[pey]) {} else {\n      setshowSliderLoader(true);\n\n      if (autoPlayTimer.current) {\n        clearTimeout(autoPlayTimer.current);\n      }\n    }\n\n    if (sliderIndex === 0) {\n      setSliderIndex(sliderIndex => slides.length - 1);\n      waitChangeIndex(slides.length - 1, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex - 1);\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\n    }\n\n    if (ActiveAutoPlay[pey]) {} else {\n      if (callAutoPlayAgainTimer.current) {\n        clearTimeout(callAutoPlayAgainTimer.current);\n      }\n\n      callAutoPlayAgainTimer.current = setTimeout(function () {\n        SliderAutoPlay(1);\n      }, sliderDuration);\n    }\n  };\n\n  console.log(ActiveAutoPlay);\n\n  const startSlider = () => {\n    var newActiveAutoPlay = [...ActiveAutoPlay];\n    newActiveAutoPlay.forEach(function (part, index, theArray) {\n      theArray[index] = true;\n\n      if (index === ActiveAutoPlay.length) {\n        setActiveAutoPlay(newArrxq);\n      }\n    }); ///////////////////////////////\n\n    const newArrxq = [...ActiveAutoPlay];\n    newArrxq[pey] = false;\n    setActiveAutoPlay(newArrxq); ////////////////////////////\n\n    setshowSliderLoader(false);\n    autoPlayTimer.current = setInterval(function () {\n      ScrolltypeChange();\n      setshowSliderLoader(true);\n      setSliderIndex(state => (state + 1) % slides.length);\n\n      if (waitChangeIndexTimer2.current) {\n        clearTimeout(waitChangeIndexTimer2.current);\n      }\n\n      waitChangeIndexTimer2.current = setTimeout(function () {\n        setSliderIndexSlow(state => (state + 1) % slides.length);\n        setshowSliderLoader(false);\n      }, 500);\n    }, autoSlideDuration);\n  };\n\n  const SliderAutoPlay = type => {\n    if (type === 1) {\n      startSlider();\n    } else {\n      if (ActiveAutoPlay[pey]) {\n        startSlider();\n      } else {\n        ///////////////////////////////\n        const newArrxq = [...ActiveAutoPlay];\n        newArrxq[pey] = true;\n        setActiveAutoPlay(newArrxq); ////////////////////////////\n\n        setshowSliderLoader(true);\n\n        if (autoPlayTimer.current) {\n          clearInterval(autoPlayTimer.current);\n        }\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// CHANGE SLIDER CONTENT USING  DOTS\n\n\n  const GotoDots = clickedDot => {\n    ScrolltypeChange();\n    setSliderIndex(sliderIndex => clickedDot);\n    waitChangeIndex(clickedDot, sliderIndex);\n  }; ///\n  ///\n  ///\n  /// CHANGE SLIDER CONTENT USING  DOTS\n\n\n  const checkifClicked = () => {\n    if (itemCLICKED[pey]) {\n      if (ActiveAutoPlay[pey]) {\n        onPostsItemClicked(pey);\n      } else {\n        SliderAutoPlay(0);\n      }\n    } else {\n      onPostsItemClicked(pey);\n    }\n  }; ///\n  ///\n  ///\n  /// CHANGE SLIDER CONTENT USING  DOTS\n\n\n  const checkifClickedDouble = () => {\n    if (itemCLICKED[pey]) {\n      SliderAutoPlay(0);\n    } else {}\n  }; ///\n  ///\n  ///\n  /// CLICK BILLBOARD OPEN ON DOUBLE CLICK\n\n\n  const clickslider = e => {\n    switch (e.detail) {\n      case 1:\n        checkifClicked();\n        break;\n\n      case 2:\n        checkifClickedDouble();\n        break;\n\n      case 3:\n        checkifClickedDouble();\n        break;\n\n      case 4:\n        checkifClickedDouble();\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    xs: 12,\n    style: {\n      position: \"relative\",\n      height: itemCLICKED[pey] ? `${itemOriginalPostHeight[pey]}px` : `${itemFinalPostHeight[pey]}px`,\n      padding: \"0px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: darkmodeReducer ? `${sliderLoader} turdark` : `${sliderLoader} turlight`,\n      style: {\n        boxShadow: `0 0 3px ${colorReducer}`,\n        backgroundColor: colorReducer,\n        height: \"3px\",\n        position: \"absolute\",\n        display: autoSlideDisplay,\n        zIndex: 100000,\n        top: \"0em\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SliderNumber, {\n      activeSlide: sliderIndexSlow,\n      total: slides.length,\n      itemCLICKED: itemCLICKED,\n      pey: pey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Arrow, {\n      itemCLICKED: itemCLICKED,\n      pey: pey,\n      total: slides.length,\n      direction: \"left\",\n      clickSlideprev: prevSlide,\n      clickSlidenext: nextSlide,\n      itemOriginalPostHeight: itemOriginalPostHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), transitions((style, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(animated.img, {\n        className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n        src: `./images/posts/${slides[i]}`,\n        alt: \"a superstarz post \",\n        style: { ...style,\n          cursor: \"alias\",\n          width: \"100%\",\n          height: itemheight[pey],\n          display: sliderIndex === i ? \"block\" : \"none\",\n          position: \"absolute\",\n          filter: \"blur(3px)\",\n          padding: \"0px\",\n          objectFit: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"cover\" : \"cover\",\n          objectPosition: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"50% top\" : \"50% 50\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(animated.img, {\n        onLoad: e => {\n          onPostsItemload(e, pey, i);\n        },\n        onClick: clickslider,\n        ref: refy,\n        className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n        src: `./images/posts/${slides[i]}`,\n        alt: \"a superstarz post \",\n        style: { ...style,\n          cursor: \"alias\",\n          width: \"100%\",\n          height: itemheight[pey],\n          position: \"absolute\",\n          padding: \"0px\",\n          objectFit: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"cover\" : \"cover\",\n          objectPosition: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"50% top\" : \"50% 50\",\n          zIndex: 1,\n          float: \"left\"\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)), \" \", /*#__PURE__*/_jsxDEV(Dots, {\n      total: slides.length,\n      itemCLICKED: itemCLICKED,\n      pey: pey,\n      GotoDots: GotoDots,\n      slides: slides,\n      activeSlide: sliderIndexSlow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 367,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sliderx, \"Real55MSGO1Lqgu6k5bXI7vHCSA=\", false, function () {\n  return [useSelector, useTransition, useSelector];\n});\n\n_c = Sliderx;\nexport const Slider = /*#__PURE__*/React.memo(Sliderx);\n_c2 = Slider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Sliderx\");\n$RefreshReg$(_c2, \"Slider\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/Slider.tsx"],"names":["React","useState","useRef","Arrow","Dots","SliderNumber","Grid","animated","useTransition","useSelector","Sliderx","slides","pey","refy","itemheight","onPostsItemClicked","onPostsItemload","post","itemFinalPostHeight","itemOriginalPostHeight","itemcroptype","itemCLICKED","ScrolltypeChange","ActiveAutoPlay","setActiveAutoPlay","length","sliderIndex","setSliderIndex","sliderIndexSlow","setSliderIndexSlow","showSliderLoader","setshowSliderLoader","autoSlideDuration","sliderDuration","waitChangeIndexTimer","waitChangeIndexTimer2","handleTouchMoveTimer","callAutoPlayAgainTimer","autoPlayTimer","SlideimageRef","SlideimageRefthumb","imageHeight","setImageHeight","touchPosition","setTouchPosition","color","state","GlobalReducerColor","colorReducer","autoSlideDisplay","sliderLoader","transitions","key","from","opacity","enter","leave","config","duration","sliderFirstImageOnLoad","item","current","clientHeight","sliderFirstImageOnLoadthumb","darkmode","GlobalReducer","darkmodeReducer","handleTouchStart","e","touchDown","touches","clientX","handleTouchMove","clearTimeout","setTimeout","currentTouch","diff","nextSlide","prevSlide","waitChangeIndex","data","SliderAutoPlay","console","log","startSlider","newActiveAutoPlay","forEach","part","index","theArray","newArrxq","setInterval","type","clearInterval","GotoDots","clickedDot","checkifClicked","checkifClickedDouble","clickslider","detail","position","height","padding","boxShadow","backgroundColor","display","zIndex","top","style","i","cursor","width","filter","objectFit","objectPosition","float","Slider","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Arrow } from \"./Arrow\";\r\nimport { Dots } from \"./Dots\";\r\nimport { SliderNumber } from \"./SliderNumber\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { animated, useTransition } from \"react-spring\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction Sliderx({\r\n  slides,\r\n  pey,\r\n  refy,\r\n  itemheight,\r\n  onPostsItemClicked,\r\n  onPostsItemload,\r\n  post,\r\n  itemFinalPostHeight,\r\n  itemOriginalPostHeight,\r\n  itemcroptype,\r\n  itemCLICKED,\r\n  ScrolltypeChange,\r\n  ActiveAutoPlay,\r\n  setActiveAutoPlay,\r\n  length,\r\n}: any): JSX.Element {\r\n  const [sliderIndex, setSliderIndex] = useState(0);\r\n  const [sliderIndexSlow, setSliderIndexSlow] = useState(0);\r\n\r\n  const [showSliderLoader, setshowSliderLoader] = useState(true);\r\n\r\n  const [autoSlideDuration] = useState(6000);\r\n  const [sliderDuration] = useState(2000);\r\n\r\n  /// const getWidth = () => window.innerWidth;\r\n  ///var newGetWidth = getWidth() * slides.length;\r\n\r\n  const waitChangeIndexTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const waitChangeIndexTimer2 = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const handleTouchMoveTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const callAutoPlayAgainTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const autoPlayTimer = useRef<ReturnType<typeof setInterval> | null>(null);\r\n\r\n  const SlideimageRef = useRef<HTMLImageElement>(null);\r\n\r\n  const SlideimageRefthumb = useRef<HTMLImageElement>(null);\r\n\r\n  const [imageHeight, setImageHeight] = useState(0);\r\n  const [touchPosition, setTouchPosition] = useState(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n    };\r\n  }\r\n  const { color } = useSelector((state: RootStateReducerColor) => ({\r\n    ...state.GlobalReducerColor,\r\n  }));\r\n  const colorReducer = color;\r\n\r\n  var autoSlideDisplay = \"none\";\r\n  var sliderLoader = \"\";\r\n\r\n  if (showSliderLoader) {\r\n    autoSlideDisplay = \"none\";\r\n    sliderLoader = \"\";\r\n  } else {\r\n    autoSlideDisplay = \"block\";\r\n    sliderLoader = \"superloaderAutoSlider\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SPRING TRANSITION WITH INDEX\r\n  const transitions = useTransition(sliderIndex, {\r\n    key: sliderIndex,\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n    config: { duration: sliderDuration - 50 },\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\r\n  const sliderFirstImageOnLoad = (item: number) => {\r\n    if (item === 0) {\r\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\r\n        setImageHeight(SlideimageRef.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\r\n  const sliderFirstImageOnLoadthumb = (item: number) => {\r\n    if (item === 0 && imageHeight === 0) {\r\n      if (\r\n        SlideimageRefthumb.current &&\r\n        SlideimageRefthumb.current.clientHeight\r\n      ) {\r\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const handleTouchStart = (e: any) => {\r\n    ////onMouseDown onMouseMove\r\n    ////touchDown = e.clientX\r\n    const touchDown = e.touches[0].clientX;\r\n    setTouchPosition(touchDown);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH MOVE EVENT\r\n  const handleTouchMove = (e: any) => {\r\n    if (handleTouchMoveTimer.current) {\r\n      clearTimeout(handleTouchMoveTimer.current);\r\n    }\r\n    handleTouchMoveTimer.current = setTimeout(function () {\r\n      const touchDown = touchPosition;\r\n\r\n      if (touchDown === null) {\r\n        return;\r\n      }\r\n      ////currentTouch = e.clientX\r\n      const currentTouch = e.touches[0].clientX;\r\n      const diff = touchDown - currentTouch;\r\n\r\n      if (diff > 40) {\r\n        nextSlide();\r\n      } else if (diff < -40) {\r\n        prevSlide();\r\n      } else {\r\n      }\r\n\r\n      setTouchPosition(null);\r\n      return false;\r\n    }, 200);\r\n\r\n    return false;\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\r\n  const waitChangeIndex = (data: number, state: any) => {\r\n    if (waitChangeIndexTimer.current) {\r\n      clearTimeout(waitChangeIndexTimer.current);\r\n    }\r\n    waitChangeIndexTimer.current = setTimeout(function () {\r\n      setSliderIndexSlow((state) => data);\r\n    }, 500);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const nextSlide = () => {\r\n    ScrolltypeChange();\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      setshowSliderLoader(true);\r\n      if (autoPlayTimer.current) {\r\n        clearTimeout(autoPlayTimer.current);\r\n      }\r\n    }\r\n\r\n    ///set((state) => (state + 1) % slides.length);\r\n    if (sliderIndex === slides.length - 1) {\r\n      setSliderIndex((sliderIndex) => 0);\r\n      waitChangeIndex(0, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex) => sliderIndex + 1);\r\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\r\n    }\r\n\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      if (callAutoPlayAgainTimer.current) {\r\n        clearTimeout(callAutoPlayAgainTimer.current);\r\n      }\r\n      callAutoPlayAgainTimer.current = setTimeout(function () {\r\n        SliderAutoPlay(1);\r\n      }, sliderDuration);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PREV SLIDE\r\n  const prevSlide = () => {\r\n    ScrolltypeChange();\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      setshowSliderLoader(true);\r\n      if (autoPlayTimer.current) {\r\n        clearTimeout(autoPlayTimer.current);\r\n      }\r\n    }\r\n\r\n    if (sliderIndex === 0) {\r\n      setSliderIndex((sliderIndex) => slides.length - 1);\r\n      waitChangeIndex(slides.length - 1, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex) => sliderIndex - 1);\r\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\r\n    }\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      if (callAutoPlayAgainTimer.current) {\r\n        clearTimeout(callAutoPlayAgainTimer.current);\r\n      }\r\n      callAutoPlayAgainTimer.current = setTimeout(function () {\r\n        SliderAutoPlay(1);\r\n      }, sliderDuration);\r\n    }\r\n  };\r\n\r\n  console.log(ActiveAutoPlay);\r\n\r\n  const startSlider = () => {\r\n    var newActiveAutoPlay = [...ActiveAutoPlay];\r\n    newActiveAutoPlay.forEach(function (part: any, index: any, theArray: any) {\r\n      theArray[index] = true;\r\n      if (index === ActiveAutoPlay.length) {\r\n        setActiveAutoPlay(newArrxq);\r\n      }\r\n    });\r\n\r\n    ///////////////////////////////\r\n    const newArrxq = [...ActiveAutoPlay];\r\n    newArrxq[pey] = false;\r\n    setActiveAutoPlay(newArrxq);\r\n    ////////////////////////////\r\n    setshowSliderLoader(false);\r\n    autoPlayTimer.current = setInterval(function () {\r\n      ScrolltypeChange();\r\n      setshowSliderLoader(true);\r\n\r\n      setSliderIndex((state) => (state + 1) % slides.length);\r\n      if (waitChangeIndexTimer2.current) {\r\n        clearTimeout(waitChangeIndexTimer2.current);\r\n      }\r\n      waitChangeIndexTimer2.current = setTimeout(function () {\r\n        setSliderIndexSlow((state) => (state + 1) % slides.length);\r\n        setshowSliderLoader(false);\r\n      }, 500);\r\n    }, autoSlideDuration);\r\n  };\r\n\r\n  const SliderAutoPlay = (type: number) => {\r\n    if (type === 1) {\r\n      startSlider();\r\n    } else {\r\n      if (ActiveAutoPlay[pey]) {\r\n        startSlider();\r\n      } else {\r\n        ///////////////////////////////\r\n        const newArrxq = [...ActiveAutoPlay];\r\n        newArrxq[pey] = true;\r\n        setActiveAutoPlay(newArrxq);\r\n        ////////////////////////////\r\n        setshowSliderLoader(true);\r\n        if (autoPlayTimer.current) {\r\n          clearInterval(autoPlayTimer.current);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  ///\r\n  ///\r\n  ///\r\n  /// CHANGE SLIDER CONTENT USING  DOTS\r\n  const GotoDots = (clickedDot: number) => {\r\n    ScrolltypeChange();\r\n    setSliderIndex((sliderIndex) => clickedDot);\r\n    waitChangeIndex(clickedDot, sliderIndex);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// CHANGE SLIDER CONTENT USING  DOTS\r\n  const checkifClicked = () => {\r\n    if (itemCLICKED[pey]) {\r\n      if (ActiveAutoPlay[pey]) {\r\n        onPostsItemClicked(pey);\r\n      } else {\r\n        SliderAutoPlay(0);\r\n      }\r\n    } else {\r\n      onPostsItemClicked(pey);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// CHANGE SLIDER CONTENT USING  DOTS\r\n  const checkifClickedDouble = () => {\r\n    if (itemCLICKED[pey]) {\r\n      SliderAutoPlay(0);\r\n    } else {\r\n    }\r\n  };\r\n  ///\r\n  ///\r\n  ///\r\n  /// CLICK BILLBOARD OPEN ON DOUBLE CLICK\r\n  const clickslider = (e: any) => {\r\n    switch (e.detail) {\r\n      case 1:\r\n        checkifClicked();\r\n        break;\r\n      case 2:\r\n        checkifClickedDouble();\r\n        break;\r\n      case 3:\r\n        checkifClickedDouble();\r\n        break;\r\n      case 4:\r\n        checkifClickedDouble();\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      onTouchStart={handleTouchStart}\r\n      onTouchMove={handleTouchMove}\r\n      xs={12}\r\n      style={{\r\n        position: \"relative\",\r\n        height: itemCLICKED[pey]\r\n          ? `${itemOriginalPostHeight[pey]}px`\r\n          : `${itemFinalPostHeight[pey]}px`,\r\n        padding: \"0px\",\r\n      }}\r\n    >\r\n      <Grid\r\n        container\r\n        className={\r\n          darkmodeReducer\r\n            ? `${sliderLoader} turdark`\r\n            : `${sliderLoader} turlight`\r\n        }\r\n        style={{\r\n          boxShadow: `0 0 3px ${colorReducer}`,\r\n          backgroundColor: colorReducer,\r\n          height: \"3px\",\r\n          position: \"absolute\",\r\n          display: autoSlideDisplay,\r\n          zIndex: 100000,\r\n          top: \"0em\",\r\n        }}\r\n      ></Grid>\r\n      <SliderNumber\r\n        activeSlide={sliderIndexSlow}\r\n        total={slides.length}\r\n        itemCLICKED={itemCLICKED}\r\n        pey={pey}\r\n      />\r\n      <Arrow\r\n        itemCLICKED={itemCLICKED}\r\n        pey={pey}\r\n        total={slides.length}\r\n        direction=\"left\"\r\n        clickSlideprev={prevSlide}\r\n        clickSlidenext={nextSlide}\r\n        itemOriginalPostHeight={itemOriginalPostHeight}\r\n      />\r\n      {transitions((style, i) => (\r\n        <>\r\n          <animated.img\r\n            className={\r\n              darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n            }\r\n            src={`./images/posts/${slides[i]}`}\r\n            alt=\"a superstarz post \"\r\n            style={{\r\n              ...style,\r\n              cursor: \"alias\",\r\n              width: \"100%\",\r\n              height: itemheight[pey],\r\n              display: sliderIndex === i ? \"block\" : \"none\",\r\n              position: \"absolute\",\r\n              filter: \"blur(3px)\",\r\n              padding: \"0px\",\r\n              objectFit:\r\n                itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                  ? \"cover\"\r\n                  : \"cover\",\r\n              objectPosition:\r\n                itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                  ? \"50% top\"\r\n                  : \"50% 50\",\r\n            }}\r\n          />\r\n\r\n          <animated.img\r\n            onLoad={(e: any) => {\r\n              onPostsItemload(e, pey, i);\r\n            }}\r\n            onClick={clickslider}\r\n            key={i}\r\n            ref={refy}\r\n            className={\r\n              darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n            }\r\n            src={`./images/posts/${slides[i]}`}\r\n            alt=\"a superstarz post \"\r\n            style={{\r\n              ...style,\r\n              cursor: \"alias\",\r\n              width: \"100%\",\r\n              height: itemheight[pey],\r\n              position: \"absolute\",\r\n              padding: \"0px\",\r\n              objectFit:\r\n                itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                  ? \"cover\"\r\n                  : \"cover\",\r\n              objectPosition:\r\n                itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                  ? \"50% top\"\r\n                  : \"50% 50\",\r\n              zIndex: 1,\r\n              float: \"left\",\r\n            }}\r\n          />\r\n        </>\r\n      ))}{\" \"}\r\n      <Dots\r\n        total={slides.length}\r\n        itemCLICKED={itemCLICKED}\r\n        pey={pey}\r\n        GotoDots={GotoDots}\r\n        slides={slides}\r\n        activeSlide={sliderIndexSlow}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport const Slider = React.memo(Sliderx);\r\n"]},"metadata":{},"sourceType":"module"}