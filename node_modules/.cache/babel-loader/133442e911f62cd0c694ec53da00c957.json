{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\Arrow.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Arrowx({\n  clickSlideprev,\n  clickSlidenext,\n  itemOriginalPostHeight,\n  pey,\n  itemCLICKED,\n  total\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: itemCLICKED[pey] ? total === 1 ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          position: \"absolute\",\n          top: \"0em\",\n          zIndex: 2,\n          height: \"0px\",\n          width: \"100%\",\n          padding: \"0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          onClick: clickSlideprev,\n          className: darkmodeReducer ? \"slider-arrow-backpad-left\" : \"slider-arrow-backpad-left\",\n          style: {\n            height: `${itemOriginalPostHeight[pey]}px`,\n            cursor: \"pointer\"\n          },\n          xs: 2,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            height: \"0px\"\n          },\n          xs: 8,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          onClick: clickSlidenext,\n          className: \"slider-arrow-backpad-right\",\n          style: {\n            height: `${itemOriginalPostHeight[pey]}px`,\n            cursor: \"pointer\"\n          },\n          xs: 2,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : null\n  }, void 0, false);\n}\n\n_s(Arrowx, \"pyUiayCCYEIzD5+dG/9/J7hvlxI=\", false, function () {\n  return [useSelector];\n});\n\n_c = Arrowx;\nexport const Arrow = /*#__PURE__*/React.memo(Arrowx);\n_c2 = Arrow;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Arrowx\");\n$RefreshReg$(_c2, \"Arrow\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/Arrow.tsx"],"names":["React","Grid","useSelector","Arrowx","clickSlideprev","clickSlidenext","itemOriginalPostHeight","pey","itemCLICKED","total","darkmode","state","GlobalReducer","darkmodeReducer","position","top","zIndex","height","width","padding","cursor","Arrow","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAAyBC,WAAzB,QAAyD,aAAzD;;;;AAEA,SAASC,MAAT,CAAgB;AACdC,EAAAA,cADc;AAEdC,EAAAA,cAFc;AAGdC,EAAAA,sBAHc;AAIdC,EAAAA,GAJc;AAKdC,EAAAA,WALc;AAMdC,EAAAA;AANc,CAAhB,EAOqB;AAAA;;AACnB;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeR,WAAW,CAAES,KAAD,KAAoC,EACnE,GAAGA,KAAK,CAACC;AAD0D,GAApC,CAAD,CAAhC;AAIA,QAAMC,eAAe,GAAGH,QAAxB;AAEA,sBACE;AAAA,cACGF,WAAW,CAACD,GAAD,CAAX,GACCE,KAAK,KAAK,CAAV,GAAc,IAAd,gBACE;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,KAAK,EAAE;AACLK,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,GAAG,EAAE,KAFA;AAGLC,UAAAA,MAAM,EAAE,CAHH;AAILC,UAAAA,MAAM,EAAE,KAJH;AAKLC,UAAAA,KAAK,EAAE,MALF;AAMLC,UAAAA,OAAO,EAAE;AANJ,SAFT;AAAA,gCAWE,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,OAAO,EAAEf,cAFX;AAGE,UAAA,SAAS,EACPS,eAAe,GACX,2BADW,GAEX,2BANR;AAQE,UAAA,KAAK,EAAE;AACLI,YAAAA,MAAM,EAAG,GAAEX,sBAAsB,CAACC,GAAD,CAAM,IADlC;AAELa,YAAAA,MAAM,EAAE;AAFH,WART;AAYE,UAAA,EAAE,EAAE,CAZN;AAAA,oBAcG;AAdH;AAAA;AAAA;AAAA;AAAA,gBAXF,EA0BU,GA1BV,eA2BE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,KAAK,EAAE;AAAEH,YAAAA,MAAM,EAAE;AAAV,WAAlB;AAAqC,UAAA,EAAE,EAAE,CAAzC;AAAA,oBACG;AADH;AAAA;AAAA;AAAA;AAAA,gBA3BF,EA6BU,GA7BV,eA8BE,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,OAAO,EAAEZ,cAFX;AAGE,UAAA,SAAS,EAAC,4BAHZ;AAIE,UAAA,KAAK,EAAE;AACLY,YAAAA,MAAM,EAAG,GAAEX,sBAAsB,CAACC,GAAD,CAAM,IADlC;AAELa,YAAAA,MAAM,EAAE;AAFH,WAJT;AAQE,UAAA,EAAE,EAAE,CARN;AAAA,oBAUG;AAVH;AAAA;AAAA;AAAA;AAAA,gBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBAFH,GAgDG;AAjDN,mBADF;AAqDD;;GAjFQjB,M;UAsBcD,W;;;KAtBdC,M;AAmFT,OAAO,MAAMkB,KAAK,gBAAGrB,KAAK,CAACsB,IAAN,CAAWnB,MAAX,CAAd;MAAMkB,K","sourcesContent":["import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction Arrowx({\r\n  clickSlideprev,\r\n  clickSlidenext,\r\n  itemOriginalPostHeight,\r\n  pey,\r\n  itemCLICKED,\r\n  total,\r\n}: any): JSX.Element {\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  return (\r\n    <>\r\n      {itemCLICKED[pey] ? (\r\n        total === 1 ? null : (\r\n          <>\r\n            <Grid\r\n              container\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"0em\",\r\n                zIndex: 2,\r\n                height: \"0px\",\r\n                width: \"100%\",\r\n                padding: \"0px\",\r\n              }}\r\n            >\r\n              <Grid\r\n                item\r\n                onClick={clickSlideprev}\r\n                className={\r\n                  darkmodeReducer\r\n                    ? \"slider-arrow-backpad-left\"\r\n                    : \"slider-arrow-backpad-left\"\r\n                }\r\n                style={{\r\n                  height: `${itemOriginalPostHeight[pey]}px`,\r\n                  cursor: \"pointer\",\r\n                }}\r\n                xs={2}\r\n              >\r\n                {\" \"}\r\n              </Grid>{\" \"}\r\n              <Grid item style={{ height: \"0px\" }} xs={8}>\r\n                {\" \"}\r\n              </Grid>{\" \"}\r\n              <Grid\r\n                item\r\n                onClick={clickSlidenext}\r\n                className=\"slider-arrow-backpad-right\"\r\n                style={{\r\n                  height: `${itemOriginalPostHeight[pey]}px`,\r\n                  cursor: \"pointer\",\r\n                }}\r\n                xs={2}\r\n              >\r\n                {\" \"}\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        )\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Arrow = React.memo(Arrowx);\r\n"]},"metadata":{},"sourceType":"module"}