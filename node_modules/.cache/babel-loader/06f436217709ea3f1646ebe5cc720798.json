{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\modalHOC.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useState, useCallback } from \"react\";\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WithClasses = WrappedComponent => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  ///\n  ///\n  ///HISTORY VARIABLE\n  ///\n  ///\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env;\n  const ff = 30; /////////////////////////////////////////MODAL FUNCTIONS REPLICATED (MOBILEMODAL , PCMODAL)///////////////////////////////////////////////////////\n  ///\n  ///\n  ///LOGGING UPDATE VALUES DETAILS\n\n  const initialLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialCleanLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialErrorLogValue = {\n    inputedUsername: 0,\n    inputedPassword: 0\n  };\n  const [rawLoginValues, setRawLoginValues] = useState(initialLogValue);\n  const [cleanLoginValues, setCleanLoginValues] = useState(initialCleanLogValue);\n  const [errorsLoginValues, setErrorsLoginValues] = useState(initialErrorLogValue);\n  const [loginShowPassword, setLoginShowPassword] = useState(false);\n  const loginShowPasswordTimer = useRef(null); ///\n  ///\n  ///\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\n\n  const updateLoginvalues = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setErrorsLoginValues({ ...errorsLoginValues,\n      [name]: 0\n    });\n    setRawLoginValues({ ...rawLoginValues,\n      [name]: value\n    });\n    setCleanLoginValues({ ...cleanLoginValues,\n      [name]: value\n    });\n  }; ///\n  ///\n  ///\n  /// SENDING LOGIN  DATA TO SERVER SIDE\n\n\n  const [serverErrorData, setServerErrorData] = useState(null);\n  const [serverErrorDisplay, setServerErrorDisplay] = useState(0);\n  const [serverEmojiplain, setserverEmojiplain] = useState(true);\n\n  const logmein = () => {\n    _s();\n\n    const history = useHistory();\n\n    if (cleanLoginValues.inputedUsername && cleanLoginValues.inputedPassword) {\n      Axios.post(\"http://${REACT_APP_SUPERSTARZ_URL}/loging\", {\n        values: cleanLoginValues\n      }, {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.message === \"Wrong Password\") {\n          setServerErrorData(\"Wrong username and  password combination\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(false);\n        } else {\n          if (response.data.message === \"Wrong username\") {\n            setServerErrorData(\"Username does not exist\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(false);\n          } else if (response.data.payload) {\n            history.push({\n              pathname: \"/supercheck\",\n              state: {\n                userdata: response.data.payload\n              }\n            });\n          } else {\n            setServerErrorData(\"User info could not be retrieved\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(false);\n          }\n        }\n      }).catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          //express typo can activate this\n          // Request made and server responded\n          //express typo can activate this\n          //let textFieldParam = error.response.data.error.errors[0].param;\n          let affectedTextField = \"Wrong password and username combination\";\n          let dynamicError = `${affectedTextField}  `;\n          setServerErrorData(dynamicError);\n          setServerErrorDisplay(1);\n          setserverEmojiplain(false);\n        } else if (error.request) {\n          // The request was made but no response was received Or request not made\n          // Axios.post(\"http://localhost:3003/reg\" can activate this error\n          setServerErrorData(\"Error connecting to server, Check your connection\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(true);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          setServerErrorData(\"Request setup failed , Pls try again\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(true);\n        }\n      });\n    } else {\n      let passwordErrorHolder = errorsLoginValues.inputedPassword;\n      let usernameErrorHolder = errorsLoginValues.inputedUsername;\n\n      if (!cleanLoginValues.inputedPassword) {\n        passwordErrorHolder = 1;\n      }\n\n      if (!cleanLoginValues.inputedUsername) {\n        usernameErrorHolder = 1;\n      }\n\n      setErrorsLoginValues({ ...errorsLoginValues,\n        inputedPassword: passwordErrorHolder,\n        inputedUsername: usernameErrorHolder\n      });\n    }\n  }; ///\n  ///\n  ///UPDATE SIGN UP DETAILS\n  ///\n  ///\n  ///\n  /// SANITISE SIGN UP FORM INPUT CLIENT\n\n\n  _s(logmein, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n    return [useHistory];\n  });\n\n  const initialRawSignValue = {\n    inputedEmail: \"\",\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialCleanSignValue = {\n    inputedEmail: \"\",\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialErrorSignValue = {\n    inputedEmail: 0,\n    inputedUsername: 0,\n    inputedPassword: 0\n  };\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\n  const [cleanSignupValues, setCleanSignupValues] = useState(initialCleanSignValue);\n  const [errorsSignupValues, setErrorsSignupValues] = useState(initialErrorSignValue);\n  const EmailCheckingTimer = useRef(null);\n  const UsernameCheckingTimer = useRef(null);\n  const initialspinner = {\n    inputedUsername: false,\n    inputedPassword: false,\n    inputedEmail: false\n  };\n  const [errorFormChecking, setErrorFormChecking] = useState(initialspinner);\n  const PasswordCheckingTimer = useRef(null);\n  const [signupShowPassword, setSignupShowPassword] = useState(false);\n  const [cantPassBadEmail, setCantPassBadEmail] = useState(false);\n\n  const updateSignvalues = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"inputedUsername\") {\n      let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\n      let cleanValue = value.replace(usernameCleaner, \"\");\n      let usernameLimiter = /^.{26}$/;\n      let finalUsername = cleanValue.replace(usernameLimiter, \"\");\n      let checkUsernameClean = usernameCleaner.test(value);\n      let checkUsernameLimited = usernameLimiter.test(cleanValue);\n\n      if (checkUsernameClean) {\n        if (UsernameCheckingTimer.current) {\n          clearTimeout(UsernameCheckingTimer.current);\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n        }\n\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n      } else {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      let userNameLength = finalUsername.length;\n\n      if (checkUsernameClean) {} else {\n        if (checkUsernameLimited || userNameLength > 26) {} else {\n          setRawSignupValues({ ...rawSignupValues,\n            [name]: finalUsername\n          });\n          setCleanSignupValues({ ...cleanSignupValues,\n            [name]: finalUsername\n          }); /// AXIOS REQUEST FOR CHECK USERNAME\n\n          if (UsernameCheckingTimer.current) {\n            clearTimeout(UsernameCheckingTimer.current);\n            setErrorFormChecking({ ...errorFormChecking,\n              [name]: false\n            });\n            setErrorsSignupValues({ ...errorsSignupValues,\n              [name]: 0\n            });\n          }\n\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: true\n          });\n          setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 2\n          });\n          UsernameCheckingTimer.current = setTimeout(() => {\n            if (value.length === 0) {\n              setErrorsSignupValues({ ...errorsSignupValues,\n                [name]: 0\n              });\n              setErrorFormChecking({ ...errorFormChecking,\n                [name]: false\n              });\n            } else {\n              Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/usernamecheck`, {\n                value: finalUsername\n              }).then(response => {\n                if (response.data.message === \"username is not unique\") {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 2\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else if (response.data.message === \"username is available\") {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 3\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                }\n              }).catch(function (error) {\n                if (error.response) {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else if (error.request) {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                }\n              });\n            }\n          }, 3000); /// AXIOS REQUEST FOR CHECK USERNAME\n        }\n      } ///\n\n    } else if (name === \"inputedEmail\") {\n      const emailValidation = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      const emailCleaner = /[^*$%#+@a-z0-9áéíóúñü \\.'_]/gim;\n      let finalEmail = value.replace(emailCleaner, \"\");\n      let checkEmailClean = emailCleaner.test(value);\n      let checkEmailValidated = emailValidation.test(String(value).toLowerCase());\n\n      if (EmailCheckingTimer.current) {\n        clearTimeout(EmailCheckingTimer.current);\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: false\n        });\n      }\n\n      if (!checkEmailValidated) {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: true\n        });\n        EmailCheckingTimer.current = setTimeout(() => {\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n          setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 2\n          });\n          checkEmailClean && setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 3\n          });\n        }, 2000);\n      } else {\n        if (EmailCheckingTimer.current) {\n          clearTimeout(EmailCheckingTimer.current);\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n        }\n\n        checkEmailClean ? setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 3\n        }) : setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: finalEmail\n      });\n      setCleanSignupValues({ ...cleanSignupValues,\n        [name]: finalEmail\n      }); ////////\n    } else {\n      if (PasswordCheckingTimer.current) {\n        clearTimeout(PasswordCheckingTimer.current);\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: false\n        });\n      }\n\n      setErrorsSignupValues({ ...errorsSignupValues,\n        [name]: 2\n      });\n      setErrorFormChecking({ ...errorFormChecking,\n        [name]: true\n      });\n      PasswordCheckingTimer.current = setTimeout(() => {\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: false\n        });\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n      }, 2000);\n      var passwordLength = value.length;\n\n      if (passwordLength >= 8 || passwordLength === 0) {\n        if (PasswordCheckingTimer.current) {\n          clearTimeout(PasswordCheckingTimer.current);\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n        }\n\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: value\n      });\n      setCleanSignupValues({ ...cleanSignupValues,\n        [name]: value\n      });\n    }\n  }; ///\n  ///\n  ///\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\n\n\n  const signmeup = () => {\n    if (cleanSignupValues.inputedEmail && cleanSignupValues.inputedUsername && cleanSignupValues.inputedPassword && errorsSignupValues.inputedPassword === 0) {\n      if (errorsSignupValues.inputedEmail === 0) {\n        Axios.post(\"http://${REACT_APP_SUPERSTARZ_URL}/registration\", {\n          values: cleanSignupValues\n        }).then(response => {\n          if (response.data.message === \"username not unique\") {\n            setServerErrorData(\"Username is taken\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          } else if (response.data.message === \"Registration Successful\") {\n            console.log(response.status);\n            alert(\"REGISTRATION COMPLETE\");\n          } else {\n            setServerErrorData(\"Something went wrong\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          }\n        }).catch(function (error) {\n          if (error.response) {\n            // Request made and server responded\n            //express typo can activate this\n            let textFieldParam = error.response.data.error.errors[0].param;\n            let affectedTextField = \" \";\n\n            if (textFieldParam === \"values.inputedPassword\") {\n              affectedTextField = \"Password must be at Least 8 characters\";\n            } else if (textFieldParam === \"values.inputedEmail\") {\n              affectedTextField = \"Email address is not valid\";\n            } else {\n              affectedTextField = \"Usernames use letters, numbers, underscores and periods\";\n            }\n\n            let dynamicError = `${affectedTextField}.  ${error.response.data.error.errors[0].msg} `;\n            setServerErrorData(dynamicError);\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          } else if (error.request) {\n            // The request was made but no response was received Or request not made\n            // Axios.post(\"http://localhost:3003/reg\" can activate this error\n            setServerErrorData(\"Error connecting to server, Check your connection\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          } else {\n            // Something happened in setting up the request that triggered an Error\n            setServerErrorData(\"Request setup failed , Pls try again\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          }\n        });\n      } else {\n        setCantPassBadEmail(true);\n        setTimeout(() => {\n          setCantPassBadEmail(false);\n        }, 3000);\n      }\n    } else {\n      let passwordErrorHolder = errorsSignupValues.inputedPassword;\n      let emailErrorHolder = errorsSignupValues.inputedEmail;\n      let usernameErrorHolder = errorsSignupValues.inputedUsername;\n\n      if (!cleanSignupValues.inputedPassword) {\n        passwordErrorHolder = 4;\n      }\n\n      if (!cleanSignupValues.inputedEmail) {\n        emailErrorHolder = 4;\n      }\n\n      if (!cleanSignupValues.inputedUsername) {\n        usernameErrorHolder = 4;\n      }\n\n      setErrorsSignupValues({ ...errorsSignupValues,\n        inputedPassword: passwordErrorHolder,\n        inputedEmail: emailErrorHolder,\n        inputedUsername: usernameErrorHolder\n      });\n    }\n  }; ///\n  ///\n  ///\n  ///\n  ///\n  /// UPDATE SIGN UP DETAILS\n  ///\n  ///\n  ///\n  /// SHOW  LOGIN PASSWORD FOR A WHILE\n\n\n  const ShowLoginPasswordForaWhile = useCallback(() => {\n    if (loginShowPasswordTimer.current) {\n      clearTimeout(loginShowPasswordTimer.current);\n    }\n\n    setLoginShowPassword(!loginShowPassword);\n    loginShowPasswordTimer.current = setTimeout(() => {\n      setLoginShowPassword(false);\n    }, 1500);\n  }, [setLoginShowPassword]); ///\n  ///\n  ///\n  /// SHOW  SIGNUP PASSWORD FOR A WHILE\n\n  const signupShowPasswordTimer = useRef(null);\n  const ShowSignupPasswordForaWhile = useCallback(() => {\n    if (signupShowPasswordTimer.current) {\n      clearTimeout(signupShowPasswordTimer.current);\n    }\n\n    setSignupShowPassword(!signupShowPassword);\n    signupShowPasswordTimer.current = setTimeout(() => {\n      setSignupShowPassword(false);\n    }, 1500);\n  }, [setSignupShowPassword]); ///\n  ///\n  ///\n  /// LOGOUT\n\n  const logout = () => {\n    Axios.post(\"http://${REACT_APP_SUPERSTARZ_URL}/logout\", {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.message === \"cookie deleted\") {\n        alert(\"logout  complete\");\n      } else if (response.data.message === \"cookie null\") {\n        alert(\"logged out  already\");\n      }\n    }).catch(function (error) {\n      alert(\"logout fail\");\n    });\n  };\n\n  let usernameErrorData = null;\n  let usernameErrorDisplay = 0;\n  let emailErrorData = null;\n  let emailErrorDisplay = 0;\n  let passwordErrorData = null;\n  let passwordErrorDisplay = 0;\n\n  switch (errorsSignupValues.inputedUsername) {\n    case 1:\n      usernameErrorData = \"Usernames can only use letters, numbers, underscores and periods \";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 2:\n      usernameErrorData = \"Username is taken\";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 3:\n      usernameErrorData = \"Username is available\";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 4:\n      usernameErrorData = \"Username  required\";\n      usernameErrorDisplay = 1;\n      break;\n\n    default:\n      usernameErrorData = null;\n      usernameErrorDisplay = 0;\n      break;\n  }\n\n  switch (errorsSignupValues.inputedPassword) {\n    case 1:\n      passwordErrorData = \"Password must be at Least 8 characters\";\n      passwordErrorDisplay = 1;\n      break;\n\n    case 2:\n      passwordErrorData = \"Checking\";\n      passwordErrorDisplay = 1;\n      break;\n\n    case 4:\n      passwordErrorData = \" Password  required \";\n      passwordErrorDisplay = 1;\n      break;\n\n    default:\n      passwordErrorData = null;\n      passwordErrorDisplay = 0;\n      break;\n  }\n\n  switch (errorsSignupValues.inputedEmail) {\n    case 1:\n      emailErrorData = \"Checking\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 2:\n      emailErrorData = \"Email address is not valid\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 3:\n      emailErrorData = \"Email is restricted to certain characters\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 4:\n      emailErrorData = \"Email required\";\n      emailErrorDisplay = 1;\n      break;\n\n    default:\n      emailErrorData = null;\n      emailErrorDisplay = 0;\n      break;\n  } ///\n  ///\n  ///\n  ///ALL VARIABLES ,ERROR VARIABLES,CONSTANT AND  STATES\n  /////////////////////////////////////////MODAL FUNCTIONS REPLICATED (MOBILEMODAL , PCMODAL)///////////////////////////////////////////////////////\n\n\n  const DialogeDataMobilexx = {\n    updateSignvalues: updateSignvalues\n  };\n  return props => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(WrappedComponent, { ...props,\n      DialogeDataMobilexx: DialogeDataMobilexx\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 643,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(WithClasses, \"5EMRyoLiwbzhKD+vR5tdFXXBn+A=\");\n\n_c = WithClasses;\nexport default WithClasses;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithClasses\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/modalHOC.tsx"],"names":["React","useRef","useState","useCallback","Axios","useHistory","WithClasses","WrappedComponent","REACT_APP_SUPERSTARZ_URL","process","env","ff","initialLogValue","inputedUsername","inputedPassword","initialCleanLogValue","initialErrorLogValue","rawLoginValues","setRawLoginValues","cleanLoginValues","setCleanLoginValues","errorsLoginValues","setErrorsLoginValues","loginShowPassword","setLoginShowPassword","loginShowPasswordTimer","updateLoginvalues","e","name","value","target","serverErrorData","setServerErrorData","serverErrorDisplay","setServerErrorDisplay","serverEmojiplain","setserverEmojiplain","logmein","history","post","values","withCredentials","then","response","data","message","payload","push","pathname","state","userdata","catch","error","affectedTextField","dynamicError","request","passwordErrorHolder","usernameErrorHolder","initialRawSignValue","inputedEmail","initialCleanSignValue","initialErrorSignValue","rawSignupValues","setRawSignupValues","cleanSignupValues","setCleanSignupValues","errorsSignupValues","setErrorsSignupValues","EmailCheckingTimer","UsernameCheckingTimer","initialspinner","errorFormChecking","setErrorFormChecking","PasswordCheckingTimer","signupShowPassword","setSignupShowPassword","cantPassBadEmail","setCantPassBadEmail","updateSignvalues","usernameCleaner","cleanValue","replace","usernameLimiter","finalUsername","checkUsernameClean","test","checkUsernameLimited","current","clearTimeout","userNameLength","length","setTimeout","emailValidation","emailCleaner","finalEmail","checkEmailClean","checkEmailValidated","String","toLowerCase","passwordLength","signmeup","console","log","status","alert","textFieldParam","errors","param","msg","emailErrorHolder","ShowLoginPasswordForaWhile","signupShowPasswordTimer","ShowSignupPasswordForaWhile","logout","usernameErrorData","usernameErrorDisplay","emailErrorData","emailErrorDisplay","passwordErrorData","passwordErrorDisplay","DialogeDataMobilexx","props"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst WithClasses = (WrappedComponent: any) => {\r\n  ///\r\n  ///\r\n  ///HISTORY VARIABLE\r\n\r\n  ///\r\n  ///\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n\r\n  const ff = 30;\r\n\r\n  /////////////////////////////////////////MODAL FUNCTIONS REPLICATED (MOBILEMODAL , PCMODAL)///////////////////////////////////////////////////////\r\n\r\n  ///\r\n  ///\r\n  ///LOGGING UPDATE VALUES DETAILS\r\n  const initialLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialCleanLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialErrorLogValue = {\r\n    inputedUsername: 0,\r\n    inputedPassword: 0,\r\n  };\r\n\r\n  const [rawLoginValues, setRawLoginValues] = useState(initialLogValue);\r\n  const [cleanLoginValues, setCleanLoginValues] =\r\n    useState(initialCleanLogValue);\r\n  const [errorsLoginValues, setErrorsLoginValues] =\r\n    useState(initialErrorLogValue);\r\n\r\n  const [loginShowPassword, setLoginShowPassword] = useState<boolean>(false);\r\n  const loginShowPasswordTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  ///\r\n  ///\r\n  ///\r\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\r\n  const updateLoginvalues = (e: any) => {\r\n    const { name, value } = e.target;\r\n\r\n    setErrorsLoginValues({ ...errorsLoginValues, [name]: 0 });\r\n    setRawLoginValues({ ...rawLoginValues, [name]: value });\r\n    setCleanLoginValues({ ...cleanLoginValues, [name]: value });\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SENDING LOGIN  DATA TO SERVER SIDE\r\n  const [serverErrorData, setServerErrorData] = useState<string | null>(null);\r\n  const [serverErrorDisplay, setServerErrorDisplay] = useState<number>(0);\r\n  const [serverEmojiplain, setserverEmojiplain] = useState<boolean>(true);\r\n\r\n  const logmein = () => {\r\n    const history = useHistory();\r\n    if (cleanLoginValues.inputedUsername && cleanLoginValues.inputedPassword) {\r\n      Axios.post(\r\n        \"http://${REACT_APP_SUPERSTARZ_URL}/loging\",\r\n        {\r\n          values: cleanLoginValues,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n        .then((response) => {\r\n          if (response.data.message === \"Wrong Password\") {\r\n            setServerErrorData(\"Wrong username and  password combination\");\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(false);\r\n          } else {\r\n            if (response.data.message === \"Wrong username\") {\r\n              setServerErrorData(\"Username does not exist\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(false);\r\n            } else if (response.data.payload) {\r\n              history.push({\r\n                pathname: \"/supercheck\",\r\n                state: { userdata: response.data.payload },\r\n              });\r\n            } else {\r\n              setServerErrorData(\"User info could not be retrieved\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(false);\r\n            }\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          if (error.response) {\r\n            // Request made and server responded\r\n            //express typo can activate this\r\n            // Request made and server responded\r\n            //express typo can activate this\r\n            //let textFieldParam = error.response.data.error.errors[0].param;\r\n            let affectedTextField = \"Wrong password and username combination\";\r\n\r\n            let dynamicError = `${affectedTextField}  `;\r\n            setServerErrorData(dynamicError);\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(false);\r\n          } else if (error.request) {\r\n            // The request was made but no response was received Or request not made\r\n            // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n            setServerErrorData(\r\n              \"Error connecting to server, Check your connection\"\r\n            );\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(true);\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            setServerErrorData(\"Request setup failed , Pls try again\");\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(true);\r\n          }\r\n        });\r\n    } else {\r\n      let passwordErrorHolder = errorsLoginValues.inputedPassword;\r\n\r\n      let usernameErrorHolder = errorsLoginValues.inputedUsername;\r\n\r\n      if (!cleanLoginValues.inputedPassword) {\r\n        passwordErrorHolder = 1;\r\n      }\r\n\r\n      if (!cleanLoginValues.inputedUsername) {\r\n        usernameErrorHolder = 1;\r\n      }\r\n\r\n      setErrorsLoginValues({\r\n        ...errorsLoginValues,\r\n        inputedPassword: passwordErrorHolder,\r\n        inputedUsername: usernameErrorHolder,\r\n      });\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///UPDATE SIGN UP DETAILS\r\n  ///\r\n  ///\r\n  ///\r\n  /// SANITISE SIGN UP FORM INPUT CLIENT\r\n  const initialRawSignValue = {\r\n    inputedEmail: \"\",\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialCleanSignValue = {\r\n    inputedEmail: \"\",\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n\r\n  const initialErrorSignValue = {\r\n    inputedEmail: 0,\r\n    inputedUsername: 0,\r\n    inputedPassword: 0,\r\n  };\r\n\r\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\r\n  const [cleanSignupValues, setCleanSignupValues] = useState(\r\n    initialCleanSignValue\r\n  );\r\n  const [errorsSignupValues, setErrorsSignupValues] = useState(\r\n    initialErrorSignValue\r\n  );\r\n\r\n  const EmailCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const UsernameCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  interface Ispinnerinterface {\r\n    inputedUsername: boolean;\r\n    inputedPassword: boolean;\r\n    inputedEmail: boolean;\r\n  }\r\n\r\n  const initialspinner: Ispinnerinterface = {\r\n    inputedUsername: false,\r\n    inputedPassword: false,\r\n    inputedEmail: false,\r\n  };\r\n\r\n  const [errorFormChecking, setErrorFormChecking] = useState(initialspinner);\r\n  const PasswordCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const [signupShowPassword, setSignupShowPassword] = useState<boolean>(false);\r\n  const [cantPassBadEmail, setCantPassBadEmail] = useState<boolean>(false);\r\n\r\n  const updateSignvalues = (e: any) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"inputedUsername\") {\r\n      let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\r\n      let cleanValue = value.replace(usernameCleaner, \"\");\r\n\r\n      let usernameLimiter = /^.{26}$/;\r\n      let finalUsername = cleanValue.replace(usernameLimiter, \"\");\r\n\r\n      let checkUsernameClean = usernameCleaner.test(value);\r\n      let checkUsernameLimited = usernameLimiter.test(cleanValue);\r\n\r\n      if (checkUsernameClean) {\r\n        if (UsernameCheckingTimer.current) {\r\n          clearTimeout(UsernameCheckingTimer.current);\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n        }\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n      } else {\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n      }\r\n\r\n      let userNameLength = finalUsername.length;\r\n\r\n      if (checkUsernameClean) {\r\n      } else {\r\n        if (checkUsernameLimited || userNameLength > 26) {\r\n        } else {\r\n          setRawSignupValues({\r\n            ...rawSignupValues,\r\n            [name]: finalUsername,\r\n          });\r\n          setCleanSignupValues({\r\n            ...cleanSignupValues,\r\n            [name]: finalUsername,\r\n          });\r\n          /// AXIOS REQUEST FOR CHECK USERNAME\r\n          if (UsernameCheckingTimer.current) {\r\n            clearTimeout(UsernameCheckingTimer.current);\r\n            setErrorFormChecking({\r\n              ...errorFormChecking,\r\n              [name]: false,\r\n            });\r\n            setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n          }\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n          UsernameCheckingTimer.current = setTimeout(() => {\r\n            if (value.length === 0) {\r\n              setErrorsSignupValues({\r\n                ...errorsSignupValues,\r\n                [name]: 0,\r\n              });\r\n              setErrorFormChecking({\r\n                ...errorFormChecking,\r\n                [name]: false,\r\n              });\r\n            } else {\r\n              Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/usernamecheck`, {\r\n                value: finalUsername,\r\n              })\r\n                .then((response) => {\r\n                  if (response.data.message === \"username is not unique\") {\r\n                    setErrorsSignupValues({\r\n                      ...errorsSignupValues,\r\n                      [name]: 2,\r\n                    });\r\n                    setErrorFormChecking({\r\n                      ...errorFormChecking,\r\n                      [name]: false,\r\n                    });\r\n                  } else if (\r\n                    response.data.message === \"username is available\"\r\n                  ) {\r\n                    setErrorsSignupValues({\r\n                      ...errorsSignupValues,\r\n                      [name]: 3,\r\n                    });\r\n                    setErrorFormChecking({\r\n                      ...errorFormChecking,\r\n                      [name]: false,\r\n                    });\r\n                  } else {\r\n                    setErrorsSignupValues({\r\n                      ...errorsSignupValues,\r\n                      [name]: 0,\r\n                    });\r\n                    setErrorFormChecking({\r\n                      ...errorFormChecking,\r\n                      [name]: false,\r\n                    });\r\n                  }\r\n                })\r\n                .catch(function (error) {\r\n                  if (error.response) {\r\n                    setErrorsSignupValues({\r\n                      ...errorsSignupValues,\r\n                      [name]: 0,\r\n                    });\r\n                    setErrorFormChecking({\r\n                      ...errorFormChecking,\r\n                      [name]: false,\r\n                    });\r\n                  } else if (error.request) {\r\n                    setErrorsSignupValues({\r\n                      ...errorsSignupValues,\r\n                      [name]: 0,\r\n                    });\r\n                    setErrorFormChecking({\r\n                      ...errorFormChecking,\r\n                      [name]: false,\r\n                    });\r\n                  } else {\r\n                    setErrorsSignupValues({\r\n                      ...errorsSignupValues,\r\n                      [name]: 0,\r\n                    });\r\n                    setErrorFormChecking({\r\n                      ...errorFormChecking,\r\n                      [name]: false,\r\n                    });\r\n                  }\r\n                });\r\n            }\r\n          }, 3000);\r\n          /// AXIOS REQUEST FOR CHECK USERNAME\r\n        }\r\n      }\r\n      ///\r\n    } else if (name === \"inputedEmail\") {\r\n      const emailValidation =\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      const emailCleaner = /[^*$%#+@a-z0-9áéíóúñü \\.'_]/gim;\r\n      let finalEmail = value.replace(emailCleaner, \"\");\r\n\r\n      let checkEmailClean = emailCleaner.test(value);\r\n      let checkEmailValidated = emailValidation.test(\r\n        String(value).toLowerCase()\r\n      );\r\n      if (EmailCheckingTimer.current) {\r\n        clearTimeout(EmailCheckingTimer.current);\r\n        setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n      }\r\n      if (!checkEmailValidated) {\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n        setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n        EmailCheckingTimer.current = setTimeout(() => {\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n          checkEmailClean &&\r\n            setErrorsSignupValues({ ...errorsSignupValues, [name]: 3 });\r\n        }, 2000);\r\n      } else {\r\n        if (EmailCheckingTimer.current) {\r\n          clearTimeout(EmailCheckingTimer.current);\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n        }\r\n        checkEmailClean\r\n          ? setErrorsSignupValues({ ...errorsSignupValues, [name]: 3 })\r\n          : setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n      }\r\n\r\n      setRawSignupValues({ ...rawSignupValues, [name]: finalEmail });\r\n      setCleanSignupValues({ ...cleanSignupValues, [name]: finalEmail });\r\n      ////////\r\n    } else {\r\n      if (PasswordCheckingTimer.current) {\r\n        clearTimeout(PasswordCheckingTimer.current);\r\n        setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n      }\r\n      setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n\r\n      setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n      PasswordCheckingTimer.current = setTimeout(() => {\r\n        setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n      }, 2000);\r\n\r\n      var passwordLength = value.length;\r\n\r\n      if (passwordLength >= 8 || passwordLength === 0) {\r\n        if (PasswordCheckingTimer.current) {\r\n          clearTimeout(PasswordCheckingTimer.current);\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n        }\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n      }\r\n      setRawSignupValues({ ...rawSignupValues, [name]: value });\r\n      setCleanSignupValues({ ...cleanSignupValues, [name]: value });\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\r\n  const signmeup = () => {\r\n    if (\r\n      cleanSignupValues.inputedEmail &&\r\n      cleanSignupValues.inputedUsername &&\r\n      cleanSignupValues.inputedPassword &&\r\n      errorsSignupValues.inputedPassword === 0\r\n    ) {\r\n      if (errorsSignupValues.inputedEmail === 0) {\r\n        Axios.post(\"http://${REACT_APP_SUPERSTARZ_URL}/registration\", {\r\n          values: cleanSignupValues,\r\n        })\r\n          .then((response) => {\r\n            if (response.data.message === \"username not unique\") {\r\n              setServerErrorData(\"Username is taken\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            } else if (response.data.message === \"Registration Successful\") {\r\n              console.log(response.status);\r\n              alert(\"REGISTRATION COMPLETE\");\r\n            } else {\r\n              setServerErrorData(\"Something went wrong\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            if (error.response) {\r\n              // Request made and server responded\r\n              //express typo can activate this\r\n              let textFieldParam = error.response.data.error.errors[0].param;\r\n              let affectedTextField = \" \";\r\n\r\n              if (textFieldParam === \"values.inputedPassword\") {\r\n                affectedTextField = \"Password must be at Least 8 characters\";\r\n              } else if (textFieldParam === \"values.inputedEmail\") {\r\n                affectedTextField = \"Email address is not valid\";\r\n              } else {\r\n                affectedTextField =\r\n                  \"Usernames use letters, numbers, underscores and periods\";\r\n              }\r\n              let dynamicError = `${affectedTextField}.  ${error.response.data.error.errors[0].msg} `;\r\n              setServerErrorData(dynamicError);\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            } else if (error.request) {\r\n              // The request was made but no response was received Or request not made\r\n              // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n              setServerErrorData(\r\n                \"Error connecting to server, Check your connection\"\r\n              );\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            } else {\r\n              // Something happened in setting up the request that triggered an Error\r\n              setServerErrorData(\"Request setup failed , Pls try again\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            }\r\n          });\r\n      } else {\r\n        setCantPassBadEmail(true);\r\n        setTimeout(() => {\r\n          setCantPassBadEmail(false);\r\n        }, 3000);\r\n      }\r\n    } else {\r\n      let passwordErrorHolder = errorsSignupValues.inputedPassword;\r\n      let emailErrorHolder = errorsSignupValues.inputedEmail;\r\n      let usernameErrorHolder = errorsSignupValues.inputedUsername;\r\n\r\n      if (!cleanSignupValues.inputedPassword) {\r\n        passwordErrorHolder = 4;\r\n      }\r\n      if (!cleanSignupValues.inputedEmail) {\r\n        emailErrorHolder = 4;\r\n      }\r\n      if (!cleanSignupValues.inputedUsername) {\r\n        usernameErrorHolder = 4;\r\n      }\r\n\r\n      setErrorsSignupValues({\r\n        ...errorsSignupValues,\r\n        inputedPassword: passwordErrorHolder,\r\n        inputedEmail: emailErrorHolder,\r\n        inputedUsername: usernameErrorHolder,\r\n      });\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n  /// UPDATE SIGN UP DETAILS\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW  LOGIN PASSWORD FOR A WHILE\r\n  const ShowLoginPasswordForaWhile = useCallback(() => {\r\n    if (loginShowPasswordTimer.current) {\r\n      clearTimeout(loginShowPasswordTimer.current);\r\n    }\r\n    setLoginShowPassword(!loginShowPassword);\r\n    loginShowPasswordTimer.current = setTimeout(() => {\r\n      setLoginShowPassword(false);\r\n    }, 1500);\r\n  }, [setLoginShowPassword]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW  SIGNUP PASSWORD FOR A WHILE\r\n\r\n  const signupShowPasswordTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const ShowSignupPasswordForaWhile = useCallback(() => {\r\n    if (signupShowPasswordTimer.current) {\r\n      clearTimeout(signupShowPasswordTimer.current);\r\n    }\r\n    setSignupShowPassword(!signupShowPassword);\r\n    signupShowPasswordTimer.current = setTimeout(() => {\r\n      setSignupShowPassword(false);\r\n    }, 1500);\r\n  }, [setSignupShowPassword]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// LOGOUT\r\n\r\n  const logout = () => {\r\n    Axios.post(\"http://${REACT_APP_SUPERSTARZ_URL}/logout\", {\r\n      withCredentials: true,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.message === \"cookie deleted\") {\r\n          alert(\"logout  complete\");\r\n        } else if (response.data.message === \"cookie null\") {\r\n          alert(\"logged out  already\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"logout fail\");\r\n      });\r\n  };\r\n\r\n  let usernameErrorData = null;\r\n  let usernameErrorDisplay = 0;\r\n\r\n  let emailErrorData = null;\r\n  let emailErrorDisplay = 0;\r\n\r\n  let passwordErrorData = null;\r\n  let passwordErrorDisplay = 0;\r\n\r\n  switch (errorsSignupValues.inputedUsername) {\r\n    case 1:\r\n      usernameErrorData =\r\n        \"Usernames can only use letters, numbers, underscores and periods \";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 2:\r\n      usernameErrorData = \"Username is taken\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 3:\r\n      usernameErrorData = \"Username is available\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 4:\r\n      usernameErrorData = \"Username  required\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      usernameErrorData = null;\r\n      usernameErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  switch (errorsSignupValues.inputedPassword) {\r\n    case 1:\r\n      passwordErrorData = \"Password must be at Least 8 characters\";\r\n      passwordErrorDisplay = 1;\r\n      break;\r\n\r\n    case 2:\r\n      passwordErrorData = \"Checking\";\r\n      passwordErrorDisplay = 1;\r\n\r\n      break;\r\n    case 4:\r\n      passwordErrorData = \" Password  required \";\r\n      passwordErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      passwordErrorData = null;\r\n      passwordErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  switch (errorsSignupValues.inputedEmail) {\r\n    case 1:\r\n      emailErrorData = \"Checking\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 2:\r\n      emailErrorData = \"Email address is not valid\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 3:\r\n      emailErrorData = \"Email is restricted to certain characters\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 4:\r\n      emailErrorData = \"Email required\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      emailErrorData = null;\r\n      emailErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///ALL VARIABLES ,ERROR VARIABLES,CONSTANT AND  STATES\r\n  /////////////////////////////////////////MODAL FUNCTIONS REPLICATED (MOBILEMODAL , PCMODAL)///////////////////////////////////////////////////////\r\n\r\n  const DialogeDataMobilexx = {\r\n    updateSignvalues: updateSignvalues,\r\n  };\r\n\r\n  return (props: any) => (\r\n    <div>\r\n      <WrappedComponent {...props} DialogeDataMobilexx={DialogeDataMobilexx} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WithClasses;\r\n"]},"metadata":{},"sourceType":"module"}