{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\super\\\\src\\\\profile\\\\SliderNumber.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SliderNumberx({\n  activeSlide,\n  total,\n  pey,\n  itemCLICKED,\n  stopSlider,\n  ActiveAutoPlay,\n  startSlider\n}) {\n  _s();\n\n  const startplay = () => {\n    if (ActiveAutoPlay[pey]) {\n      startSlider(0);\n    } else {\n      stopSlider(0);\n    }\n  }; ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [itemCLICKED[pey] || total === 1 ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          zIndex: 3,\n          left: 25,\n          top: \"3vh\",\n          fontFamily: \"Arial, Helvetica, sans-serif\",\n          fontWeight: \"bolder\",\n          opacity: \"0.6\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: startplay,\n          className: darkmodeReducer ? \"turlight\" : \"turdark\",\n          style: {\n            padding: \"7px\",\n            paddingLeft: \"10px\",\n            paddingRight: \"10px\",\n            backgroundColor: darkmodeReducer ? \"rgba(51,51,51,0.76)\" : \"rgba(255,255,255,0.7) \",\n            borderRadius: \"50%\",\n            fontSize: \"0.92vw\",\n            color: darkmodeReducer ? \"#ffffff\" : \"#000000\",\n            cursor: \"pointer\"\n          },\n          children: total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true), itemCLICKED[pey] ? total === 1 ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          zIndex: 3,\n          right: 21,\n          top: \"3vh\",\n          fontFamily: \"Arial, Helvetica, sans-serif\",\n          fontWeight: \"bolder\",\n          opacity: \"0.8\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: startplay,\n          className: darkmodeReducer ? \"turdark\" : \"turlight\",\n          style: {\n            cursor: \"pointer\",\n            padding: \"7px\",\n            paddingLeft: \"10px\",\n            paddingRight: \"10px\",\n            backgroundColor: darkmodeReducer ? \"rgba(51,51,51,0.66)\" : \"rgba(255,255,255,0.6) \",\n            borderRadius: \"50%\",\n            fontSize: \"0.92vw\",\n            color: darkmodeReducer ? \"#eeeeee\" : \"#111111 \"\n          },\n          children: activeSlide + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true) : null]\n  }, void 0, true);\n}\n\n_s(SliderNumberx, \"pyUiayCCYEIzD5+dG/9/J7hvlxI=\", false, function () {\n  return [useSelector];\n});\n\n_c = SliderNumberx;\nexport const SliderNumber = /*#__PURE__*/React.memo(SliderNumberx);\n_c2 = SliderNumber;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SliderNumberx\");\n$RefreshReg$(_c2, \"SliderNumber\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/super/src/profile/SliderNumber.tsx"],"names":["React","useSelector","SliderNumberx","activeSlide","total","pey","itemCLICKED","stopSlider","ActiveAutoPlay","startSlider","startplay","darkmode","state","GlobalReducer","darkmodeReducer","position","zIndex","left","top","fontFamily","fontWeight","opacity","padding","paddingLeft","paddingRight","backgroundColor","borderRadius","fontSize","color","cursor","right","SliderNumber","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { RootStateOrAny, useSelector } from \"react-redux\";\r\n\r\nfunction SliderNumberx({\r\n  activeSlide,\r\n  total,\r\n  pey,\r\n  itemCLICKED,\r\n  stopSlider,\r\n  ActiveAutoPlay,\r\n  startSlider\r\n}: any): JSX.Element {\r\n\r\n\r\n\r\n  const startplay=()=>{\r\nif(ActiveAutoPlay[pey]){  startSlider(0) }else{  stopSlider(0)}\r\n  \r\n  }\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  return (\r\n    <>\r\n      {itemCLICKED[pey] || total === 1 ? null : (\r\n        <>\r\n          {\" \"}\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              zIndex: 3,\r\n              left: 25,\r\n              top: \"3vh\",\r\n              fontFamily: \"Arial, Helvetica, sans-serif\",\r\n              fontWeight: \"bolder\",\r\n              opacity:\"0.6\"\r\n            }}\r\n          >\r\n            <span onClick={startplay}\r\n              className={darkmodeReducer ? \"turlight\" : \"turdark\"}\r\n              style={{\r\n                padding: \"7px\",\r\n                paddingLeft: \"10px\",\r\n                paddingRight: \"10px\",\r\n                backgroundColor: darkmodeReducer\r\n                  ? \"rgba(51,51,51,0.76)\"\r\n                  : \"rgba(255,255,255,0.7) \",\r\n\r\n                borderRadius: \"50%\",\r\n                fontSize: \"0.92vw\",\r\n                color: darkmodeReducer ? \"#ffffff\" : \"#000000\",\r\n                cursor:\"pointer\"\r\n              }}\r\n            >\r\n              {total}\r\n            </span>\r\n          </div>{\" \"}\r\n        </>\r\n      )}\r\n\r\n      {itemCLICKED[pey] ? (\r\n        total === 1 ? null : (\r\n          <>\r\n            {\" \"}\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                zIndex: 3,\r\n                right: 21,\r\n                top: \"3vh\",\r\n                fontFamily: \"Arial, Helvetica, sans-serif\",\r\n                fontWeight: \"bolder\",\r\n                opacity:\"0.8\"\r\n              }}\r\n            >\r\n              <span\r\n              onClick={startplay}\r\n                className={darkmodeReducer ? \"turdark\" : \"turlight\"}\r\n                style={{\r\n                  cursor:\"pointer\",\r\n                  padding: \"7px\",\r\n                  paddingLeft: \"10px\",\r\n                  paddingRight: \"10px\",\r\n                  backgroundColor: darkmodeReducer\r\n                    ? \"rgba(51,51,51,0.66)\"\r\n                    : \"rgba(255,255,255,0.6) \",\r\n\r\n                  borderRadius: \"50%\",\r\n                  fontSize: \"0.92vw\",\r\n                  color: darkmodeReducer ? \"#eeeeee\" : \"#111111 \",\r\n                }}\r\n              >\r\n                {activeSlide + 1}\r\n              </span>\r\n            </div>{\" \"}\r\n          </>\r\n        )\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const SliderNumber = React.memo(SliderNumberx);\r\n"]},"metadata":{},"sourceType":"module"}