{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\index.tsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport AllReducer from \"./All-Reducers\";\nimport { createStore, compose } from \"redux\";\nimport { useSelector } from \"react-redux\";\n\nconst redux = require(\"redux\");\n\nconst applyMiddleware = redux.applyMiddleware;\n\nconst thunkMiddleware = require(\"redux-thunk\").default;\n\nimport { createTheme, MuiThemeProvider } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet store = createStore(AllReducer, composeEnhancers(applyMiddleware(thunkMiddleware))); ///\n///\n///\n///DARKMODE FROM REDUX\n\nconst {\n  darkmode\n} = useSelector(state => ({ ...state.GlobalReducer\n}));\nconst darkmodeReducer = darkmode;\nvar appVariables = {\n  secondarymaincolor: \"\",\n  maincolor: \"\"\n};\nvar appVariablesDARK = {\n  secondarymaincolor: \"#dddddd\",\n  maincolor: \"#dddddd\"\n};\nvar appVariablesLIGHT = {\n  secondarymaincolor: \"#0b111b\",\n  maincolor: \"#0b111b\"\n}; ///\n///\n///\n///MATERIAL UI  THEME CUSTOMIZATAION\n\nlet themeGeneralSettings = createTheme({\n  palette: {\n    primary: {\n      main: `${appVariables.secondarymaincolor}`\n    },\n    secondary: {\n      main: `${appVariables.secondarymaincolor}`\n    },\n    type: darkmodeReducer ? \"dark\" : \"light\"\n  }\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: themeGeneralSettings,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 82,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/index.tsx"],"names":["React","ReactDOM","App","reportWebVitals","Provider","AllReducer","createStore","compose","useSelector","redux","require","applyMiddleware","thunkMiddleware","default","createTheme","MuiThemeProvider","config","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","darkmode","state","GlobalReducer","darkmodeReducer","appVariables","secondarymaincolor","maincolor","appVariablesDARK","appVariablesLIGHT","themeGeneralSettings","palette","primary","main","secondary","type","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,OAArC;AACA,SAAyBC,WAAzB,QAA4C,aAA5C;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,eAAe,GAAGF,KAAK,CAACE,eAA9B;;AACA,MAAMC,eAAe,GAAGF,OAAO,CAAC,aAAD,CAAP,CAAuBG,OAA/C;;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,mBAA9C;;;AACAL,OAAO,CAAC,QAAD,CAAP,CAAkBM,MAAlB;;AAQA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CZ,OAAxE;AAEA,IAAIa,KAAK,GAAGd,WAAW,CACrBD,UADqB,EAErBY,gBAAgB,CAACN,eAAe,CAACC,eAAD,CAAhB,CAFK,CAAvB,C,CAKA;AACA;AACA;AACA;;AAOA,MAAM;AAAES,EAAAA;AAAF,IAAeb,WAAW,CAAEc,KAAD,KAAoC,EACnE,GAAGA,KAAK,CAACC;AAD0D,CAApC,CAAD,CAAhC;AAIA,MAAMC,eAAe,GAAGH,QAAxB;AAOA,IAAII,YAA2B,GAAG;AAChCC,EAAAA,kBAAkB,EAAE,EADY;AAEhCC,EAAAA,SAAS,EAAE;AAFqB,CAAlC;AAKA,IAAIC,gBAA+B,GAAG;AACpCF,EAAAA,kBAAkB,EAAE,SADgB;AAEpCC,EAAAA,SAAS,EAAE;AAFyB,CAAtC;AAKA,IAAIE,iBAAgC,GAAG;AACrCH,EAAAA,kBAAkB,EAAE,SADiB;AAErCC,EAAAA,SAAS,EAAE;AAF0B,CAAvC,C,CAKA;AACA;AACA;AACA;;AACA,IAAIG,oBAAoB,GAAGhB,WAAW,CAAC;AACrCiB,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAG,GAAER,YAAY,CAACC,kBAAmB;AADlC,KADF;AAIPQ,IAAAA,SAAS,EAAE;AACTD,MAAAA,IAAI,EAAG,GAAER,YAAY,CAACC,kBAAmB;AADhC,KAJJ;AAOPS,IAAAA,IAAI,EAAEX,eAAe,GAAG,MAAH,GAAY;AAP1B;AAD4B,CAAD,CAAtC;AAYAvB,QAAQ,CAACmC,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEhB,KAAjB;AAAA,2BACE,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEU,oBAAzB;AAAA,6BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAQEO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AACA;;AACAnC,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport AllReducer from \"./All-Reducers\";\nimport { createStore, compose } from \"redux\";\nimport { RootStateOrAny, useSelector } from \"react-redux\";\nconst redux = require(\"redux\");\nconst applyMiddleware = redux.applyMiddleware;\nconst thunkMiddleware = require(\"redux-thunk\").default;\nimport { createTheme, MuiThemeProvider } from \"@material-ui/core\";\nrequire(\"dotenv\").config();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store = createStore(\n  AllReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n);\n\n///\n///\n///\n///DARKMODE FROM REDUX\ninterface RootStateGlobalReducer {\n  GlobalReducer: {\n    darkmode: boolean;\n  };\n}\n\nconst { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\n  ...state.GlobalReducer,\n}));\n\nconst darkmodeReducer = darkmode;\n\ninterface IappVariables {\n  secondarymaincolor: string;\n  maincolor: string;\n}\n\nvar appVariables: IappVariables = {\n  secondarymaincolor: \"\",\n  maincolor: \"\",\n};\n\nvar appVariablesDARK: IappVariables = {\n  secondarymaincolor: \"#dddddd\",\n  maincolor: \"#dddddd\",\n};\n\nvar appVariablesLIGHT: IappVariables = {\n  secondarymaincolor: \"#0b111b\",\n  maincolor: \"#0b111b\",\n};\n\n///\n///\n///\n///MATERIAL UI  THEME CUSTOMIZATAION\nlet themeGeneralSettings = createTheme({\n  palette: {\n    primary: {\n      main: `${appVariables.secondarymaincolor}`,\n    },\n    secondary: {\n      main: `${appVariables.secondarymaincolor}`,\n    },\n    type: darkmodeReducer ? \"dark\" : \"light\",\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <MuiThemeProvider theme={themeGeneralSettings}>\n        <App />\n      </MuiThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}