{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\Slider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Arrow } from \"./Arrow\";\nimport { Dots } from \"./Dots\";\nimport { SliderNumber } from \"./SliderNumber\";\nimport { Grid } from \"@material-ui/core\";\nimport { animated, useTransition } from \"react-spring\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Sliderx({\n  slides,\n  pey,\n  refy,\n  itemheight,\n  onPostsItemClicked,\n  onPostsItemload,\n  post,\n  itemFinalPostHeight,\n  itemcroptype\n}) {\n  _s();\n\n  const [sliderIndex, setSliderIndex] = useState(0);\n  const [sliderIndexSlow, setSliderIndexSlow] = useState(0);\n  const [allowAutoPlay, setAllowAutoPlay] = useState(true);\n  const [showSliderLoader, setshowSliderLoader] = useState(true);\n  const [autoSlideDuration] = useState(4000);\n  const [sliderDuration] = useState(3000); /// const getWidth = () => window.innerWidth;\n  ///var newGetWidth = getWidth() * slides.length;\n\n  const waitChangeIndexTimer = useRef(null);\n  const waitChangeIndexTimer2 = useRef(null);\n  const handleTouchMoveTimer = useRef(null);\n  const callAutoPlayAgainTimer = useRef(null);\n  const autoPlayTimer = useRef(null);\n  const SlideimageRef = useRef(null);\n  const SlideimageRefthumb = useRef(null);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [touchPosition, setTouchPosition] = useState(null); ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  var autoSlideDisplay = \"none\";\n  var sliderLoader = \"\";\n\n  if (showSliderLoader) {\n    autoSlideDisplay = \"none\";\n    sliderLoader = \"\";\n  } else {\n    autoSlideDisplay = \"block\";\n    sliderLoader = \"superloaderAutoSlider\";\n  } ///\n  ///\n  ///\n  /// SPRING TRANSITION WITH INDEX\n\n\n  const transitions = useTransition(sliderIndex, {\n    key: sliderIndex,\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    config: {\n      duration: sliderDuration - 50\n    }\n  }); ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\n\n  const sliderFirstImageOnLoad = item => {\n    if (item === 0) {\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\n        setImageHeight(SlideimageRef.current.clientHeight);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\n\n\n  const sliderFirstImageOnLoadthumb = item => {\n    if (item === 0 && imageHeight === 0) {\n      if (SlideimageRefthumb.current && SlideimageRefthumb.current.clientHeight) {\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n\n  const handleTouchStart = e => {\n    ////onMouseDown onMouseMove\n    ////touchDown = e.clientX\n    const touchDown = e.touches[0].clientX;\n    setTouchPosition(touchDown);\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH MOVE EVENT\n\n\n  const handleTouchMove = e => {\n    if (handleTouchMoveTimer.current) {\n      clearTimeout(handleTouchMoveTimer.current);\n    }\n\n    handleTouchMoveTimer.current = setTimeout(function () {\n      const touchDown = touchPosition;\n\n      if (touchDown === null) {\n        return;\n      } ////currentTouch = e.clientX\n\n\n      const currentTouch = e.touches[0].clientX;\n      const diff = touchDown - currentTouch;\n\n      if (diff > 40) {\n        nextSlide();\n      } else if (diff < -40) {\n        prevSlide();\n      } else {}\n\n      setTouchPosition(null);\n      return false;\n    }, 200);\n    return false;\n  }; ///\n  ///\n  ///\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\n\n\n  const waitChangeIndex = (data, state) => {\n    if (waitChangeIndexTimer.current) {\n      clearTimeout(waitChangeIndexTimer.current);\n    }\n\n    waitChangeIndexTimer.current = setTimeout(function () {\n      setSliderIndexSlow(state => data);\n    }, 500);\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE\n\n\n  const nextSlide = () => {\n    if (allowAutoPlay) {} else {\n      setshowSliderLoader(true);\n\n      if (autoPlayTimer.current) {\n        clearTimeout(autoPlayTimer.current);\n      }\n    } ///set((state) => (state + 1) % slides.length);\n\n\n    if (sliderIndex === slides.length - 1) {\n      setSliderIndex(sliderIndex => 0);\n      waitChangeIndex(0, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex + 1);\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\n    }\n\n    if (allowAutoPlay) {} else {\n      if (callAutoPlayAgainTimer.current) {\n        clearTimeout(callAutoPlayAgainTimer.current);\n      }\n\n      callAutoPlayAgainTimer.current = setTimeout(function () {\n        SliderAutoPlay(1);\n      }, sliderDuration);\n    }\n  }; ///\n  ///\n  ///\n  /// PREV SLIDE\n\n\n  const prevSlide = () => {\n    if (allowAutoPlay) {} else {\n      setshowSliderLoader(true);\n\n      if (autoPlayTimer.current) {\n        clearTimeout(autoPlayTimer.current);\n      }\n    }\n\n    if (sliderIndex === 0) {\n      setSliderIndex(sliderIndex => slides.length - 1);\n      waitChangeIndex(slides.length - 1, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex - 1);\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\n    }\n\n    if (allowAutoPlay) {} else {\n      if (callAutoPlayAgainTimer.current) {\n        clearTimeout(callAutoPlayAgainTimer.current);\n      }\n\n      callAutoPlayAgainTimer.current = setTimeout(function () {\n        SliderAutoPlay(1);\n      }, sliderDuration);\n    }\n  };\n\n  const startSlider = () => {\n    setAllowAutoPlay(false);\n    setshowSliderLoader(false);\n    autoPlayTimer.current = setInterval(function () {\n      setshowSliderLoader(true);\n      setSliderIndex(state => (state + 1) % slides.length);\n\n      if (waitChangeIndexTimer2.current) {\n        clearTimeout(waitChangeIndexTimer2.current);\n      }\n\n      waitChangeIndexTimer2.current = setTimeout(function () {\n        setSliderIndexSlow(state => (state + 1) % slides.length);\n        setshowSliderLoader(false);\n      }, 500);\n    }, autoSlideDuration);\n  };\n\n  const SliderAutoPlay = type => {\n    if (type === 1) {\n      startSlider();\n    } else {\n      if (allowAutoPlay) {\n        startSlider();\n      } else {\n        setAllowAutoPlay(true);\n        setshowSliderLoader(true);\n\n        if (autoPlayTimer.current) {\n          clearInterval(autoPlayTimer.current);\n        }\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// CHANGE SLIDER CONTENT USING  DOTS\n\n\n  const GotoDots = clickedDot => {\n    setSliderIndex(sliderIndex => clickedDot);\n    waitChangeIndex(clickedDot, sliderIndex);\n  };\n  /* useEffect(() => {\r\n    const t = setInterval(() => set(state => (state + 1) % slides.length), 4000)\r\n    return () => clearTimeout(t)\r\n  }, []) */\n\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    xs: 12,\n    style: {\n      position: \"relative\",\n      height: \"400px\",\n      padding: \"0px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: darkmodeReducer ? `${sliderLoader} turdark` : `${sliderLoader} turlight`,\n      style: {\n        boxShadow: `0 0 3px ${colorReducer}`,\n        backgroundColor: colorReducer,\n        height: \"3px\",\n        position: \"absolute\",\n        display: autoSlideDisplay,\n        zIndex: 100000,\n        top: \"0em\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SliderNumber, {\n      activeSlide: sliderIndexSlow,\n      total: slides.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Arrow, {\n      direction: \"left\",\n      clickSlideprev: prevSlide,\n      clickSlidenext: nextSlide,\n      imageHeight: imageHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), transitions((style, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(animated.img, {\n        className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n        src: `./images/poststhumb/${slides[i]}`,\n        alt: \"a superstarz post \",\n        style: { ...style,\n          cursor: \"alias\",\n          width: \"100%\",\n          height: `${itemheight[pey]}px`,\n          display: sliderIndex === i ? \"block\" : \"none\",\n          position: \"absolute\",\n          padding: \"0px\",\n          objectFit: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"cover\" : \"contain\",\n          objectPosition: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"50% top\" : \"50% 50\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(animated.img, {\n        onLoad: e => {\n          onPostsItemload(e, pey, i);\n        },\n        onClick: () => {\n          onPostsItemClicked(pey);\n        },\n        ref: refy,\n        className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n        src: `./images/posts/${slides[i]}`,\n        alt: \"a superstarz post \",\n        style: { ...style,\n          cursor: \"alias\",\n          width: \"100%\",\n          height: itemheight[pey],\n          position: sliderIndex === i ? \"relative\" : \"absolute\",\n          padding: \"0px\",\n          objectFit: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"cover\" : \"contain\",\n          objectPosition: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"50% top\" : \"50% 50\",\n          zIndex: 1\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)), \" \", /*#__PURE__*/_jsxDEV(Dots, {\n      GotoDots: GotoDots,\n      slides: slides,\n      activeSlide: sliderIndexSlow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sliderx, \"4Pml54PI4KVSpkO3oQDLh1ZnSIo=\", false, function () {\n  return [useSelector, useSelector, useTransition];\n});\n\n_c = Sliderx;\nexport const Slider = /*#__PURE__*/React.memo(Sliderx);\n_c2 = Slider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Sliderx\");\n$RefreshReg$(_c2, \"Slider\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/Slider.tsx"],"names":["React","useState","useRef","Arrow","Dots","SliderNumber","Grid","animated","useTransition","useSelector","Sliderx","slides","pey","refy","itemheight","onPostsItemClicked","onPostsItemload","post","itemFinalPostHeight","itemcroptype","sliderIndex","setSliderIndex","sliderIndexSlow","setSliderIndexSlow","allowAutoPlay","setAllowAutoPlay","showSliderLoader","setshowSliderLoader","autoSlideDuration","sliderDuration","waitChangeIndexTimer","waitChangeIndexTimer2","handleTouchMoveTimer","callAutoPlayAgainTimer","autoPlayTimer","SlideimageRef","SlideimageRefthumb","imageHeight","setImageHeight","touchPosition","setTouchPosition","darkmode","state","GlobalReducer","darkmodeReducer","color","GlobalReducerColor","colorReducer","autoSlideDisplay","sliderLoader","transitions","key","from","opacity","enter","leave","config","duration","sliderFirstImageOnLoad","item","current","clientHeight","sliderFirstImageOnLoadthumb","handleTouchStart","e","touchDown","touches","clientX","handleTouchMove","clearTimeout","setTimeout","currentTouch","diff","nextSlide","prevSlide","waitChangeIndex","data","length","SliderAutoPlay","startSlider","setInterval","type","clearInterval","GotoDots","clickedDot","position","height","padding","boxShadow","backgroundColor","display","zIndex","top","style","i","cursor","width","objectFit","objectPosition","Slider","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Arrow } from \"./Arrow\";\r\nimport { Dots } from \"./Dots\";\r\nimport { SliderNumber } from \"./SliderNumber\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { animated, useTransition } from \"react-spring\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Sliderx({\r\n  slides,\r\n  pey,\r\n  refy,\r\n  itemheight,\r\n  onPostsItemClicked,\r\n  onPostsItemload,\r\n  post,\r\n  itemFinalPostHeight,\r\n  itemcroptype,\r\n}: any): JSX.Element {\r\n  const [sliderIndex, setSliderIndex] = useState(0);\r\n  const [sliderIndexSlow, setSliderIndexSlow] = useState(0);\r\n  const [allowAutoPlay, setAllowAutoPlay] = useState(true);\r\n  const [showSliderLoader, setshowSliderLoader] = useState(true);\r\n\r\n  const [autoSlideDuration] = useState(4000);\r\n  const [sliderDuration] = useState(3000);\r\n\r\n  /// const getWidth = () => window.innerWidth;\r\n  ///var newGetWidth = getWidth() * slides.length;\r\n\r\n  const waitChangeIndexTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const waitChangeIndexTimer2 = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const handleTouchMoveTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const callAutoPlayAgainTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const autoPlayTimer = useRef<ReturnType<typeof setInterval> | null>(null);\r\n\r\n  const SlideimageRef = useRef<HTMLImageElement>(null);\r\n\r\n  const SlideimageRefthumb = useRef<HTMLImageElement>(null);\r\n\r\n  const [imageHeight, setImageHeight] = useState(0);\r\n  const [touchPosition, setTouchPosition] = useState(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n    };\r\n  }\r\n  const { color } = useSelector((state: RootStateReducerColor) => ({\r\n    ...state.GlobalReducerColor,\r\n  }));\r\n  const colorReducer = color;\r\n\r\n  var autoSlideDisplay = \"none\";\r\n  var sliderLoader = \"\";\r\n\r\n  if (showSliderLoader) {\r\n    autoSlideDisplay = \"none\";\r\n    sliderLoader = \"\";\r\n  } else {\r\n    autoSlideDisplay = \"block\";\r\n    sliderLoader = \"superloaderAutoSlider\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SPRING TRANSITION WITH INDEX\r\n  const transitions = useTransition(sliderIndex, {\r\n    key: sliderIndex,\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n    config: { duration: sliderDuration - 50 },\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\r\n  const sliderFirstImageOnLoad = (item: number) => {\r\n    if (item === 0) {\r\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\r\n        setImageHeight(SlideimageRef.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\r\n  const sliderFirstImageOnLoadthumb = (item: number) => {\r\n    if (item === 0 && imageHeight === 0) {\r\n      if (\r\n        SlideimageRefthumb.current &&\r\n        SlideimageRefthumb.current.clientHeight\r\n      ) {\r\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const handleTouchStart = (e: any) => {\r\n    ////onMouseDown onMouseMove\r\n    ////touchDown = e.clientX\r\n    const touchDown = e.touches[0].clientX;\r\n    setTouchPosition(touchDown);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH MOVE EVENT\r\n  const handleTouchMove = (e: any) => {\r\n    if (handleTouchMoveTimer.current) {\r\n      clearTimeout(handleTouchMoveTimer.current);\r\n    }\r\n    handleTouchMoveTimer.current = setTimeout(function () {\r\n      const touchDown = touchPosition;\r\n\r\n      if (touchDown === null) {\r\n        return;\r\n      }\r\n      ////currentTouch = e.clientX\r\n      const currentTouch = e.touches[0].clientX;\r\n      const diff = touchDown - currentTouch;\r\n\r\n      if (diff > 40) {\r\n        nextSlide();\r\n      } else if (diff < -40) {\r\n        prevSlide();\r\n      } else {\r\n      }\r\n\r\n      setTouchPosition(null);\r\n      return false;\r\n    }, 200);\r\n\r\n    return false;\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\r\n  const waitChangeIndex = (data: number, state: any) => {\r\n    if (waitChangeIndexTimer.current) {\r\n      clearTimeout(waitChangeIndexTimer.current);\r\n    }\r\n    waitChangeIndexTimer.current = setTimeout(function () {\r\n      setSliderIndexSlow((state) => data);\r\n    }, 500);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const nextSlide = () => {\r\n    if (allowAutoPlay) {\r\n    } else {\r\n      setshowSliderLoader(true);\r\n      if (autoPlayTimer.current) {\r\n        clearTimeout(autoPlayTimer.current);\r\n      }\r\n    }\r\n\r\n    ///set((state) => (state + 1) % slides.length);\r\n    if (sliderIndex === slides.length - 1) {\r\n      setSliderIndex((sliderIndex) => 0);\r\n      waitChangeIndex(0, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex) => sliderIndex + 1);\r\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\r\n    }\r\n\r\n    if (allowAutoPlay) {\r\n    } else {\r\n      if (callAutoPlayAgainTimer.current) {\r\n        clearTimeout(callAutoPlayAgainTimer.current);\r\n      }\r\n      callAutoPlayAgainTimer.current = setTimeout(function () {\r\n        SliderAutoPlay(1);\r\n      }, sliderDuration);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PREV SLIDE\r\n  const prevSlide = () => {\r\n    if (allowAutoPlay) {\r\n    } else {\r\n      setshowSliderLoader(true);\r\n      if (autoPlayTimer.current) {\r\n        clearTimeout(autoPlayTimer.current);\r\n      }\r\n    }\r\n\r\n    if (sliderIndex === 0) {\r\n      setSliderIndex((sliderIndex) => slides.length - 1);\r\n      waitChangeIndex(slides.length - 1, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex) => sliderIndex - 1);\r\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\r\n    }\r\n    if (allowAutoPlay) {\r\n    } else {\r\n      if (callAutoPlayAgainTimer.current) {\r\n        clearTimeout(callAutoPlayAgainTimer.current);\r\n      }\r\n      callAutoPlayAgainTimer.current = setTimeout(function () {\r\n        SliderAutoPlay(1);\r\n      }, sliderDuration);\r\n    }\r\n  };\r\n\r\n  const startSlider = () => {\r\n    setAllowAutoPlay(false);\r\n    setshowSliderLoader(false);\r\n    autoPlayTimer.current = setInterval(function () {\r\n      setshowSliderLoader(true);\r\n\r\n      setSliderIndex((state) => (state + 1) % slides.length);\r\n      if (waitChangeIndexTimer2.current) {\r\n        clearTimeout(waitChangeIndexTimer2.current);\r\n      }\r\n      waitChangeIndexTimer2.current = setTimeout(function () {\r\n        setSliderIndexSlow((state) => (state + 1) % slides.length);\r\n        setshowSliderLoader(false);\r\n      }, 500);\r\n    }, autoSlideDuration);\r\n  };\r\n\r\n  const SliderAutoPlay = (type: number) => {\r\n    if (type === 1) {\r\n      startSlider();\r\n    } else {\r\n      if (allowAutoPlay) {\r\n        startSlider();\r\n      } else {\r\n        setAllowAutoPlay(true);\r\n        setshowSliderLoader(true);\r\n        if (autoPlayTimer.current) {\r\n          clearInterval(autoPlayTimer.current);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  ///\r\n  ///\r\n  ///\r\n  /// CHANGE SLIDER CONTENT USING  DOTS\r\n  const GotoDots = (clickedDot: number) => {\r\n    setSliderIndex((sliderIndex) => clickedDot);\r\n    waitChangeIndex(clickedDot, sliderIndex);\r\n  };\r\n\r\n  /* useEffect(() => {\r\n    const t = setInterval(() => set(state => (state + 1) % slides.length), 4000)\r\n    return () => clearTimeout(t)\r\n  }, []) */\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      onTouchStart={handleTouchStart}\r\n      onTouchMove={handleTouchMove}\r\n      xs={12}\r\n      style={{\r\n        position: \"relative\",\r\n        height: \"400px\",\r\n        padding: \"0px\",\r\n      }}\r\n    >\r\n      <Grid\r\n        container\r\n        className={\r\n          darkmodeReducer\r\n            ? `${sliderLoader} turdark`\r\n            : `${sliderLoader} turlight`\r\n        }\r\n        style={{\r\n          boxShadow: `0 0 3px ${colorReducer}`,\r\n          backgroundColor: colorReducer,\r\n          height: \"3px\",\r\n          position: \"absolute\",\r\n          display: autoSlideDisplay,\r\n          zIndex: 100000,\r\n          top: \"0em\",\r\n        }}\r\n      ></Grid>\r\n      <SliderNumber activeSlide={sliderIndexSlow} total={slides.length} />\r\n      <Arrow\r\n        direction=\"left\"\r\n        clickSlideprev={prevSlide}\r\n        clickSlidenext={nextSlide}\r\n        imageHeight={imageHeight}\r\n      />\r\n      {transitions((style, i) => (\r\n        <>\r\n          <animated.img\r\n            className={\r\n              darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n            }\r\n            src={`./images/poststhumb/${slides[i]}`}\r\n            alt=\"a superstarz post \"\r\n            style={{\r\n              ...style,\r\n              cursor: \"alias\",\r\n              width: \"100%\",\r\n              height: `${itemheight[pey]}px`,\r\n              display: sliderIndex === i ? \"block\" : \"none\",\r\n              position: \"absolute\",\r\n              padding: \"0px\",\r\n              objectFit:\r\n                itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                  ? \"cover\"\r\n                  : \"contain\",\r\n              objectPosition:\r\n                itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                  ? \"50% top\"\r\n                  : \"50% 50\",\r\n            }}\r\n          />\r\n\r\n          <animated.img\r\n            onLoad={(e: any) => {\r\n              onPostsItemload(e, pey, i);\r\n            }}\r\n            onClick={() => {\r\n              onPostsItemClicked(pey);\r\n            }}\r\n            key={i}\r\n            ref={refy}\r\n            className={\r\n              darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n            }\r\n            src={`./images/posts/${slides[i]}`}\r\n            alt=\"a superstarz post \"\r\n            style={{\r\n              ...style,\r\n              cursor: \"alias\",\r\n              width: \"100%\",\r\n              height: itemheight[pey],\r\n              position: sliderIndex === i ? \"relative\" : \"absolute\",\r\n              padding: \"0px\",\r\n              objectFit:\r\n                itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                  ? \"cover\"\r\n                  : \"contain\",\r\n              objectPosition:\r\n                itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                  ? \"50% top\"\r\n                  : \"50% 50\",\r\n              zIndex: 1,\r\n            }}\r\n          />\r\n        </>\r\n      ))}{\" \"}\r\n      <Dots GotoDots={GotoDots} slides={slides} activeSlide={sliderIndexSlow} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport const Slider = React.memo(Sliderx);\r\n"]},"metadata":{},"sourceType":"module"}