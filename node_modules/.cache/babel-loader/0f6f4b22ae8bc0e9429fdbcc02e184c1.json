{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\Profile.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport { Post } from \"./Post\";\nimport { MiniPost } from \"./MiniPost\";\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid } from \"@material-ui/core\";\nimport Masonry from \"@mui/lab/Masonry\";\nimport { SnapToggleAction } from \".././GlobalActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Profilex({\n  OpenModalForm,\n  getSliderWidthRef,\n  getSliderWidth,\n  postData,\n  formtype,\n  showModalForm,\n  CloseModalForm,\n  aboutTemplateGo,\n  commentTemplateGo,\n  postDatainner,\n  postDatainnerThumb,\n  showProfiileData,\n  paperPostScrollRef,\n  setx,\n  x,\n  setDiscussionImage,\n  setCommentPostid,\n  miniLayoutPost,\n  setStopBodyScroll\n}) {\n  _s();\n\n  const [countAutoplay, setcountAutoplay] = useState(0);\n  const dispatch = useDispatch();\n  const postDivRef = useRef([]);\n  const postDivRefx = useRef([]);\n  const postItemsRef = useRef([]); ///\n\n  const [second, setsecond] = useState(0);\n  const [secondgo, setsecondgo] = useState(false);\n  const [itemheight, setitemheight] = useState([]);\n  const [itemheighthold, setitemheighthold] = useState([]);\n  const [itemcroptype, setitemcroptype] = useState([]);\n  const [itemFinalPostHeight, setitemFinalPostHeight] = useState([]);\n  const [itemOriginalPostHeight, setitemOriginalPostHeight] = useState([]);\n  const [itemCLICKED, setitemCLICKED] = useState([]);\n  const [onLoadDataOnce, setonLoadDataOnce] = useState([]);\n  const [ActiveAutoPlay, setActiveAutoPlay] = useState([]);\n  var heightplus = matchPc ? 0.38 : matchTablet ? 0.3 : 0.265;\n  var postbackheighthold = document.documentElement.clientHeight * heightplus;\n  const [postbackheight] = useState(postbackheighthold);\n  const scrollTypeTimer = useRef(null); ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    screenHeight,\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const screenHeightReducer = screenHeight;\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\n\n  const addPostItemsRef = itemsRef => {\n    if (itemsRef && !postItemsRef.current.includes(itemsRef)) {\n      postItemsRef.current.push(itemsRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  }; ///\n  ///\n  ///\n  ///CREATE div REFS FROM POSTS AND ADD THEM TO ARRAY\n\n\n  const addpostDivRef = divRef => {\n    if (divRef && !postDivRef.current.includes(divRef)) {\n      postDivRef.current.push(divRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  };\n\n  const addpostDivRefx = divRef => {\n    if (divRef && !postDivRefx.current.includes(divRef)) {\n      postDivRefx.current.push(divRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  };\n\n  const [miniProfile, setminiProfile] = useState(false);\n  useEffect(() => {\n    if (postData.length > 0 && showProfiileData) {\n      const initialItemheight = postData.map(obj => obj.itemheight);\n      setitemheight(initialItemheight);\n      const initialItemrealheighthold = postData.map(obj => obj.itemrealheighthold);\n      setitemheighthold(initialItemrealheighthold);\n      const initialtemcroptype = postData.map(obj => obj.itemcroptype);\n      setitemcroptype(initialtemcroptype);\n      const initialitemFinalPostHeight = postData.map(obj => obj.itemFinalPostHeight);\n      setitemFinalPostHeight(initialitemFinalPostHeight);\n      const initialitemOriginalPostHeight = postData.map(obj => obj.itemOriginalPostHeight);\n      setitemOriginalPostHeight(initialitemOriginalPostHeight);\n      const initialitemCLICKED = postData.map(obj => obj.itemCLICKED);\n      setitemCLICKED(initialitemCLICKED);\n      const initialsetonLoadDataOnce = postData.map(obj => obj.onLoadDataOnce);\n      setonLoadDataOnce(initialsetonLoadDataOnce);\n      const initialsetActiveAutoPlay = postData.map(obj => obj.ActiveAutoPlay);\n      setActiveAutoPlay(initialsetActiveAutoPlay);\n    }\n  }, [postData, showProfiileData]);\n  const newArraa = [...itemheight];\n  const newArrxy = [...onLoadDataOnce];\n  const newArrayFinalPostHeight = [...itemFinalPostHeight];\n  const newArrxq = [...itemcroptype];\n  const newArrayitemOriginalPostHeight = [...itemOriginalPostHeight];\n  const newArrx = [...itemheighthold];\n  const newArr = [...itemheight];\n\n  function percentage(num, per) {\n    return num / 100 * per;\n  }\n\n  const onPostsItemload = useCallback((e, index, itemnum) => {\n    if (onLoadDataOnce[index]) {} else {\n      if (itemnum === 0) {\n        if (postItemsRef.current[index]) {\n          var imageHeight = postItemsRef.current[index].clientHeight; ///////////////////////////////\n\n          newArraa[index] = `${imageHeight}px`;\n          setitemheight(newArraa); ///////////////////////////////\n          ///////////////////////////////\n\n          var newh = imageHeight / 1.042 - postbackheighthold;\n          newArrx[index] = `${newh}`;\n          setitemheighthold(newArrx); ///////////////////////////////\n\n          newArrayFinalPostHeight[index] = imageHeight;\n          setitemFinalPostHeight(newArrayFinalPostHeight); ///////////////////////////////\n\n          newArrayitemOriginalPostHeight[index] = imageHeight;\n          setitemOriginalPostHeight(newArrayitemOriginalPostHeight); ///////////////////////////////\n\n          var choppedHeight = percentage(screenHeightReducer, 99);\n          var choppedwidth = percentage(screenHeightReducer, matchPc ? 55 : matchTablet ? 52 : 35);\n\n          if (imageHeight < choppedwidth) {\n            /////WIDE IMAGE SET\n            newArr[index] = `${choppedwidth}px`;\n            setitemheight(newArr); ///////////////////////////////\n\n            var newh = choppedwidth / 1.015 - postbackheighthold;\n            newArrx[index] = `${newh}`;\n            setitemheighthold(newArrx); ////////////////////////////\n            ///////////////////////////////\n\n            newArrxq[index] = 1;\n            setitemcroptype(newArrxq); ////////////////////////////\n            ///////////////////////////////\n\n            newArrayFinalPostHeight[index] = choppedwidth;\n            setitemFinalPostHeight(newArrayFinalPostHeight);\n          } else if (imageHeight > choppedHeight) {\n            /////LONG IMAGE SET\n            newArr[index] = `${choppedHeight}px`;\n            setitemheight(newArr); ///////////////////////////////\n\n            var newh = choppedHeight / 1 - postbackheighthold;\n            newArrx[index] = `${newh}`;\n            setitemheighthold(newArrx); ////////////////////////////////\n            ///////////////////////////////\n\n            newArrxq[index] = 2;\n            setitemcroptype(newArrxq); ///////////////////////////////\n\n            newArrayFinalPostHeight[index] = choppedHeight;\n            setitemFinalPostHeight(newArrayFinalPostHeight); ///////////////////////////////\n          } else {\n            var imageWidth = postItemsRef.current[index].clientWidth;\n\n            if (imageWidth > imageHeight) {\n              ///////////////////////////////\n              var newh = imageHeight / 1.066 - postbackheighthold;\n              newArrx[index] = `${newh}`;\n              setitemheighthold(newArrx); ///////////////////////////////\n              ///////////////////////////////\n\n              newArrxq[index] = 3;\n              setitemcroptype(newArrxq); ///////////////////////////////\n            } else {\n              ///////////////////////////////\n              newArrxq[index] = 4;\n              setitemcroptype(newArrxq); ///////////////////////////////\n            }\n          } ///////////////////////////////\n\n\n          newArrxy[index] = true;\n          setonLoadDataOnce(newArrxy); ///////////////////////////////\n\n          if (postData.length - 1 === index) {\n            setTimeout(function () {\n              setx(true);\n            }, 3000);\n          }\n        }\n      }\n    }\n  }, [screenHeightReducer, itemheight, itemheighthold, itemFinalPostHeight, showProfiileData]);\n\n  const scrollToPost = index => {\n    postDivRef.current[index].scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\"\n    });\n  };\n\n  const postitemSHOWFULLHEIGHT = (index, type) => {\n    if (itemcroptype[index] === 1 || itemcroptype[index] === 2) {\n      if (type === 0) {\n        const newitemHeight = [...itemheight];\n        newitemHeight[index] = `auto`;\n        setitemheight(newitemHeight);\n      } else {\n        const newitemHeight = [...itemheight];\n        newitemHeight[index] = `${itemFinalPostHeight[index]}px`;\n        setitemheight(newitemHeight);\n      }\n    }\n  };\n\n  const scrollLongPicTimer = useRef(null);\n  const scrollLongPicTimerx = useRef(null);\n  const snapTimer = useRef(null);\n\n  const freesnap = () => {\n    dispatch(SnapToggleAction(false));\n\n    if (snapTimer.current) {\n      clearTimeout(snapTimer.current);\n    }\n\n    snapTimer.current = setTimeout(function () {\n      dispatch(SnapToggleAction(true));\n    }, matchMobile ? 3500 : 5000);\n  };\n\n  const AUTOSlideLongImages = index => {\n    freesnap();\n\n    if (itemcroptype[index] === 2) {\n      scrollLongPicTimerx.current = setTimeout(() => {\n        if (paperPostScrollRef.current) {\n          paperPostScrollRef.current.scrollTo({\n            top: paperPostScrollRef.current.scrollTop + itemOriginalPostHeight[index] / 3,\n            behavior: \"smooth\"\n          });\n        }\n      }, 500);\n      scrollLongPicTimer.current = setTimeout(() => {\n        postDivRef.current[index].scrollIntoView({\n          behavior: \"smooth\",\n          block: \"start\"\n        });\n      }, 1300);\n    }\n  };\n\n  const onPostsItemClicked = index => {\n    if (itemCLICKED[index]) {\n      const newclickArray = [...itemCLICKED];\n      newclickArray[index] = false;\n      setitemCLICKED(newclickArray);\n      postitemSHOWFULLHEIGHT(index, 1);\n      scrollToPost(index);\n    } else {\n      if (matchMobile) {\n        freesnap();\n      }\n\n      AUTOSlideLongImages(index);\n\n      if (scrollTypeTimer.current) {\n        clearTimeout(scrollTypeTimer.current);\n      }\n\n      const newclickArray = [...itemCLICKED];\n      newclickArray[index] = true;\n      setitemCLICKED(newclickArray);\n      postitemSHOWFULLHEIGHT(index, 0);\n      scrollToPost(index);\n    }\n  }; ///\n  ///\n  ///TYPES FOR ISLOGGEDIN\n\n\n  ///\n  ///LOGGED IN DATA FROM REDUX\n  const {\n    loggedIn\n  } = useSelector(state => ({ ...state.IsLoggedReducer\n  }));\n  const loggedInReducer = loggedIn; ///\n  ///\n  ///MUI PAPER STYLES FROM REDUX\n\n  const {\n    PaperStyleLight,\n    PaperStyleDark\n  } = useSelector(state => ({ ...state.PaperReducerLightnDark\n  }));\n  var PaperStyleReducer = \"\";\n\n  if (darkmodeReducer) {\n    PaperStyleReducer = PaperStyleDark;\n  } else {\n    PaperStyleReducer = PaperStyleLight;\n  } ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype;\n  var widthProfilePic = matchPc ? \"72%\" : matchTablet ? \"84%\" : \"44vw\";\n  var topProfilePic = matchPc ? \"-20vh\" : matchTablet ? \"-12vh\" : \"-8vh\";\n  var leftProfilePic = matchPc ? \"1vw\" : matchTablet ? \"3.5vw\" : \"2.7vw\";\n  var optionsClass = \"\";\n  var fontOptions = \"\";\n\n  if (matchPc) {\n    optionsClass = \"profile-optionsImagePc\";\n    fontOptions = \"2.7vw\";\n  } else if (matchTablet) {\n    optionsClass = \"profile-optionsImageTablet\";\n    fontOptions = \"5rem\";\n  } else {\n    optionsClass = \"profile-optionsImageMobile\";\n    fontOptions = \"1.9rem\";\n  } ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n\n  const {\n    image\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const imageReducer = image;\n\n  const blank = () => {};\n\n  const [showModalUpload, setShowModalUpload] = useState(false); ///\n  ///\n  ///\n  /// CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\n\n  const closeUploadModal = useCallback(backbutton => {\n    //pop states fires when back and forward buttons used\n    if (backbutton === 1) {\n      window.onpopstate = () => {\n        window.history.pushState(null, \"\", window.location.href);\n        window.onpopstate = null;\n        setShowModalUpload(false);\n      };\n    } else {\n      window.history.pushState(null, \"\", \".\");\n      window.onpopstate = null;\n      setShowModalUpload(false);\n    }\n  }, []); ///\n  ///\n  ///\n  ///OPEN MODAL THEN CALL CLOSEMODAL FUNCTION WHICH WAITS FOR A POP EVENT(for closing modal)\n\n  const OpenUploadModal = useCallback(() => {\n    setShowModalUpload(!showModalUpload); //pushstate add enteries to your history\n\n    window.history.pushState(null, \"\", \"Options\");\n    closeUploadModal(1);\n  }, [showModalUpload, closeUploadModal]);\n  const [allowPosition, setallowPosition] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"dontallowhighlighting\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          position: \"fixed\",\n          width: \"100%\",\n          padding: \"0px\",\n          height: \"0%\",\n          zIndex: 20000,\n          top: \"0px\",\n          cursor: \"pointer\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\",\n          paddingLeft: miniProfile ? matchPc ? \"16.5vw\" : \"3vw\" : \"0vw\",\n          paddingRight: miniProfile ? matchPc ? \"16.5vw\" : \"3vw\" : \"0vw\",\n          height: \"auto\"\n        },\n        children: postData.length > 0 ? /*#__PURE__*/_jsxDEV(Masonry, {\n          columns: matchPc ? 2 : miniProfile ? 2 : 1,\n          spacing: miniProfile && matchMobile ? 1 : 0,\n          style: {\n            padding: \"0px\"\n          },\n          children: postData.map((post, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"relative\",\n              scrollSnapAlign: x ? \"start\" : \"\"\n            },\n            children: miniProfile ? /*#__PURE__*/_jsxDEV(MiniPost, {\n              miniProfile: miniProfile,\n              postItemsRef: postItemsRef,\n              setminiProfile: setminiProfile,\n              setStopBodyScroll: setStopBodyScroll,\n              setx: setx,\n              miniLayoutPost: miniLayoutPost,\n              setCommentPostid: setCommentPostid,\n              postData: postData,\n              setDiscussionImage: setDiscussionImage,\n              OpenModalForm: OpenModalForm,\n              second: second,\n              setsecond: setsecond,\n              secondgo: secondgo,\n              setsecondgo: setsecondgo,\n              setcountAutoplay: setcountAutoplay,\n              countAutoplay: countAutoplay,\n              onLoadDataOnce: onLoadDataOnce,\n              pey: i,\n              addPostItemsRef: addPostItemsRef,\n              postDivRef: postDivRef,\n              onPostsItemload: onPostsItemload,\n              post: post,\n              itemheight: itemheight,\n              itemheighthold: itemheighthold,\n              postbackheight: postbackheight,\n              itemcroptype: itemcroptype,\n              length: postData.length,\n              itemFinalPostHeight: itemFinalPostHeight,\n              onPostsItemClicked: onPostsItemClicked,\n              itemCLICKED: itemCLICKED,\n              addpostDivRefx: addpostDivRefx,\n              postDatainner: postDatainner,\n              postDatainnerThumb: postDatainnerThumb,\n              itemOriginalPostHeight: itemOriginalPostHeight,\n              ActiveAutoPlay: ActiveAutoPlay,\n              setActiveAutoPlay: setActiveAutoPlay,\n              AUTOSlideLongImages: AUTOSlideLongImages,\n              scrollToPost: scrollToPost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Post, {\n              setminiProfile: setminiProfile,\n              setStopBodyScroll: setStopBodyScroll,\n              setx: setx,\n              miniLayoutPost: miniLayoutPost,\n              setCommentPostid: setCommentPostid,\n              postData: postData,\n              setDiscussionImage: setDiscussionImage,\n              OpenModalForm: OpenModalForm,\n              second: second,\n              setsecond: setsecond,\n              secondgo: secondgo,\n              setsecondgo: setsecondgo,\n              setcountAutoplay: setcountAutoplay,\n              countAutoplay: countAutoplay,\n              onLoadDataOnce: onLoadDataOnce,\n              pey: i,\n              addPostItemsRef: addPostItemsRef,\n              postDivRef: postDivRef,\n              onPostsItemload: onPostsItemload,\n              post: post,\n              itemheight: itemheight,\n              itemheighthold: itemheighthold,\n              postbackheight: postbackheight,\n              itemcroptype: itemcroptype,\n              length: postData.length,\n              itemFinalPostHeight: itemFinalPostHeight,\n              onPostsItemClicked: onPostsItemClicked,\n              itemCLICKED: itemCLICKED,\n              addpostDivRef: addpostDivRef,\n              postDatainner: postDatainner,\n              postDatainnerThumb: postDatainnerThumb,\n              itemOriginalPostHeight: itemOriginalPostHeight,\n              ActiveAutoPlay: ActiveAutoPlay,\n              setActiveAutoPlay: setActiveAutoPlay,\n              AUTOSlideLongImages: AUTOSlideLongImages,\n              scrollToPost: scrollToPost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 21\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Profilex, \"RdxVN0YCq8HH+vgIOvoNjwAcSck=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Profilex;\nexport const Profile = /*#__PURE__*/React.memo(Profilex);\n_c2 = Profile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Profilex\");\n$RefreshReg$(_c2, \"Profile\");","map":{"version":3,"sources":["C:/Users/oghen/Documents/ClikBate/super/src/profile/Profile.tsx"],"names":["React","useState","useRef","useCallback","useEffect","Post","MiniPost","matchPc","matchTablet","matchMobile","useSelector","useDispatch","Grid","Masonry","SnapToggleAction","Profilex","OpenModalForm","getSliderWidthRef","getSliderWidth","postData","formtype","showModalForm","CloseModalForm","aboutTemplateGo","commentTemplateGo","postDatainner","postDatainnerThumb","showProfiileData","paperPostScrollRef","setx","x","setDiscussionImage","setCommentPostid","miniLayoutPost","setStopBodyScroll","countAutoplay","setcountAutoplay","dispatch","postDivRef","postDivRefx","postItemsRef","second","setsecond","secondgo","setsecondgo","itemheight","setitemheight","itemheighthold","setitemheighthold","itemcroptype","setitemcroptype","itemFinalPostHeight","setitemFinalPostHeight","itemOriginalPostHeight","setitemOriginalPostHeight","itemCLICKED","setitemCLICKED","onLoadDataOnce","setonLoadDataOnce","ActiveAutoPlay","setActiveAutoPlay","heightplus","postbackheighthold","document","documentElement","clientHeight","postbackheight","scrollTypeTimer","screenHeight","darkmode","state","GlobalReducer","screenHeightReducer","darkmodeReducer","addPostItemsRef","itemsRef","current","includes","push","addpostDivRef","divRef","addpostDivRefx","miniProfile","setminiProfile","length","initialItemheight","map","obj","initialItemrealheighthold","itemrealheighthold","initialtemcroptype","initialitemFinalPostHeight","initialitemOriginalPostHeight","initialitemCLICKED","initialsetonLoadDataOnce","initialsetActiveAutoPlay","newArraa","newArrxy","newArrayFinalPostHeight","newArrxq","newArrayitemOriginalPostHeight","newArrx","newArr","percentage","num","per","onPostsItemload","e","index","itemnum","imageHeight","newh","choppedHeight","choppedwidth","imageWidth","clientWidth","setTimeout","scrollToPost","scrollIntoView","behavior","block","postitemSHOWFULLHEIGHT","type","newitemHeight","scrollLongPicTimer","scrollLongPicTimerx","snapTimer","freesnap","clearTimeout","AUTOSlideLongImages","scrollTo","top","scrollTop","onPostsItemClicked","newclickArray","loggedIn","IsLoggedReducer","loggedInReducer","PaperStyleLight","PaperStyleDark","PaperReducerLightnDark","PaperStyleReducer","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","widthProfilePic","topProfilePic","leftProfilePic","optionsClass","fontOptions","image","UserdataReducer","imageReducer","blank","showModalUpload","setShowModalUpload","closeUploadModal","backbutton","window","onpopstate","history","pushState","location","href","OpenUploadModal","allowPosition","setallowPosition","position","width","padding","height","zIndex","cursor","paddingLeft","paddingRight","post","i","scrollSnapAlign","Profile","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport { Menu } from \"./Menu\";\r\nimport { Billboard } from \"./Billboard\";\r\nimport { Post } from \"./Post\";\r\nimport { MiniPost } from \"./MiniPost\";\r\nimport { OptionsSlider } from \"./OptionsSlider\";\r\n\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  createTheme,\r\n  MuiThemeProvider,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport ImagePhotoSizeSelectSmall from \"material-ui/svg-icons/image/photo-size-select-small\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { Upload } from \"../upload/Upload\";\r\nimport { SnapToggleAction } from \".././GlobalActions\";\r\n\r\nfunction Profilex({\r\n  OpenModalForm,\r\n  getSliderWidthRef,\r\n  getSliderWidth,\r\n  postData,\r\n  formtype,\r\n  showModalForm,\r\n  CloseModalForm,\r\n  aboutTemplateGo,\r\n  commentTemplateGo,\r\n  postDatainner,\r\n  postDatainnerThumb,\r\n  showProfiileData,\r\n  paperPostScrollRef,\r\n  setx,\r\n  x,\r\n  setDiscussionImage,\r\n  setCommentPostid,\r\n  miniLayoutPost,\r\n  setStopBodyScroll,\r\n}: any) {\r\n  const [countAutoplay, setcountAutoplay] = useState<number>(0);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const postDivRef = useRef<any>([]);\r\n  const postDivRefx = useRef<any>([]);\r\n\r\n  const postItemsRef = useRef<any>([]);\r\n  ///\r\n\r\n  const [second, setsecond] = useState<any>(0);\r\n  const [secondgo, setsecondgo] = useState<boolean>(false);\r\n\r\n  const [itemheight, setitemheight] = useState<Array<string>>([]);\r\n  const [itemheighthold, setitemheighthold] = useState<Array<string>>([]);\r\n  const [itemcroptype, setitemcroptype] = useState<Array<number>>([]);\r\n  const [itemFinalPostHeight, setitemFinalPostHeight] = useState<Array<number>>(\r\n    []\r\n  );\r\n  const [itemOriginalPostHeight, setitemOriginalPostHeight] = useState<\r\n    Array<number>\r\n  >([]);\r\n\r\n  const [itemCLICKED, setitemCLICKED] = useState<Array<boolean>>([]);\r\n  const [onLoadDataOnce, setonLoadDataOnce] = useState<Array<boolean>>([]);\r\n\r\n  const [ActiveAutoPlay, setActiveAutoPlay] = useState<Array<boolean>>([]);\r\n\r\n  var heightplus = matchPc ? 0.38 : matchTablet ? 0.3 : 0.265;\r\n  var postbackheighthold = document.documentElement.clientHeight * heightplus;\r\n\r\n  const [postbackheight] = useState<number>(postbackheighthold);\r\n\r\n  const scrollTypeTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const { screenHeight, darkmode } = useSelector(\r\n    (state: RootStateGlobalReducer) => ({\r\n      ...state.GlobalReducer,\r\n    })\r\n  );\r\n  const screenHeightReducer = screenHeight;\r\n  const darkmodeReducer = darkmode;\r\n  ///\r\n  ///\r\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\r\n  const addPostItemsRef = (itemsRef: any) => {\r\n    if (itemsRef && !postItemsRef.current.includes(itemsRef)) {\r\n      postItemsRef.current.push(itemsRef);\r\n    }\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE div REFS FROM POSTS AND ADD THEM TO ARRAY\r\n  const addpostDivRef = (divRef: any) => {\r\n    if (divRef && !postDivRef.current.includes(divRef)) {\r\n      postDivRef.current.push(divRef);\r\n    }\r\n\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  const addpostDivRefx = (divRef: any) => {\r\n    if (divRef && !postDivRefx.current.includes(divRef)) {\r\n      postDivRefx.current.push(divRef);\r\n    }\r\n\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  const [miniProfile, setminiProfile] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (postData.length > 0 && showProfiileData) {\r\n      const initialItemheight = postData.map((obj: any) => obj.itemheight);\r\n      setitemheight(initialItemheight);\r\n\r\n      const initialItemrealheighthold = postData.map(\r\n        (obj: any) => obj.itemrealheighthold\r\n      );\r\n      setitemheighthold(initialItemrealheighthold);\r\n\r\n      const initialtemcroptype = postData.map((obj: any) => obj.itemcroptype);\r\n      setitemcroptype(initialtemcroptype);\r\n\r\n      const initialitemFinalPostHeight = postData.map(\r\n        (obj: any) => obj.itemFinalPostHeight\r\n      );\r\n      setitemFinalPostHeight(initialitemFinalPostHeight);\r\n\r\n      const initialitemOriginalPostHeight = postData.map(\r\n        (obj: any) => obj.itemOriginalPostHeight\r\n      );\r\n      setitemOriginalPostHeight(initialitemOriginalPostHeight);\r\n\r\n      const initialitemCLICKED = postData.map((obj: any) => obj.itemCLICKED);\r\n      setitemCLICKED(initialitemCLICKED);\r\n\r\n      const initialsetonLoadDataOnce = postData.map(\r\n        (obj: any) => obj.onLoadDataOnce\r\n      );\r\n      setonLoadDataOnce(initialsetonLoadDataOnce);\r\n\r\n      const initialsetActiveAutoPlay = postData.map(\r\n        (obj: any) => obj.ActiveAutoPlay\r\n      );\r\n      setActiveAutoPlay(initialsetActiveAutoPlay);\r\n    }\r\n  }, [postData, showProfiileData]);\r\n\r\n  const newArraa = [...itemheight];\r\n\r\n  const newArrxy = [...onLoadDataOnce];\r\n  const newArrayFinalPostHeight = [...itemFinalPostHeight];\r\n  const newArrxq = [...itemcroptype];\r\n\r\n  const newArrayitemOriginalPostHeight = [...itemOriginalPostHeight];\r\n\r\n  const newArrx = [...itemheighthold];\r\n\r\n  const newArr = [...itemheight];\r\n\r\n  function percentage(num: number, per: number) {\r\n    return (num / 100) * per;\r\n  }\r\n\r\n  const onPostsItemload = useCallback(\r\n    (e: any, index: number, itemnum: number) => {\r\n      if (onLoadDataOnce[index]) {\r\n      } else {\r\n        if (itemnum === 0) {\r\n          if (postItemsRef.current[index]) {\r\n            var imageHeight = postItemsRef.current[index].clientHeight;\r\n\r\n            ///////////////////////////////\r\n\r\n            newArraa[index] = `${imageHeight}px`;\r\n            setitemheight(newArraa);\r\n            ///////////////////////////////\r\n\r\n            ///////////////////////////////\r\n\r\n            var newh = imageHeight / 1.042 - postbackheighthold;\r\n            newArrx[index] = `${newh}`;\r\n            setitemheighthold(newArrx);\r\n            ///////////////////////////////\r\n\r\n            newArrayFinalPostHeight[index] = imageHeight;\r\n            setitemFinalPostHeight(newArrayFinalPostHeight);\r\n\r\n            ///////////////////////////////\r\n\r\n            newArrayitemOriginalPostHeight[index] = imageHeight;\r\n            setitemOriginalPostHeight(newArrayitemOriginalPostHeight);\r\n            ///////////////////////////////\r\n\r\n            var choppedHeight = percentage(screenHeightReducer, 99);\r\n\r\n            var choppedwidth = percentage(\r\n              screenHeightReducer,\r\n              matchPc ? 55 : matchTablet ? 52 : 35\r\n            );\r\n\r\n            if (imageHeight < choppedwidth) {\r\n              /////WIDE IMAGE SET\r\n\r\n              newArr[index] = `${choppedwidth}px`;\r\n              setitemheight(newArr);\r\n              ///////////////////////////////\r\n\r\n              var newh = choppedwidth / 1.015 - postbackheighthold;\r\n              newArrx[index] = `${newh}`;\r\n              setitemheighthold(newArrx);\r\n              ////////////////////////////\r\n              ///////////////////////////////\r\n\r\n              newArrxq[index] = 1;\r\n              setitemcroptype(newArrxq);\r\n              ////////////////////////////\r\n              ///////////////////////////////\r\n\r\n              newArrayFinalPostHeight[index] = choppedwidth;\r\n              setitemFinalPostHeight(newArrayFinalPostHeight);\r\n            } else if (imageHeight > choppedHeight) {\r\n              /////LONG IMAGE SET\r\n\r\n              newArr[index] = `${choppedHeight}px`;\r\n              setitemheight(newArr);\r\n              ///////////////////////////////\r\n\r\n              var newh = choppedHeight / 1 - postbackheighthold;\r\n              newArrx[index] = `${newh}`;\r\n              setitemheighthold(newArrx);\r\n              ////////////////////////////////\r\n              ///////////////////////////////\r\n\r\n              newArrxq[index] = 2;\r\n              setitemcroptype(newArrxq);\r\n              ///////////////////////////////\r\n\r\n              newArrayFinalPostHeight[index] = choppedHeight;\r\n              setitemFinalPostHeight(newArrayFinalPostHeight);\r\n              ///////////////////////////////\r\n            } else {\r\n              var imageWidth = postItemsRef.current[index].clientWidth;\r\n              if (imageWidth > imageHeight) {\r\n                ///////////////////////////////\r\n\r\n                var newh = imageHeight / 1.066 - postbackheighthold;\r\n                newArrx[index] = `${newh}`;\r\n                setitemheighthold(newArrx);\r\n                ///////////////////////////////\r\n                ///////////////////////////////\r\n\r\n                newArrxq[index] = 3;\r\n                setitemcroptype(newArrxq);\r\n                ///////////////////////////////\r\n              } else {\r\n                ///////////////////////////////\r\n\r\n                newArrxq[index] = 4;\r\n                setitemcroptype(newArrxq);\r\n                ///////////////////////////////\r\n              }\r\n            }\r\n            ///////////////////////////////\r\n\r\n            newArrxy[index] = true;\r\n            setonLoadDataOnce(newArrxy);\r\n            ///////////////////////////////\r\n\r\n            if (postData.length - 1 === index) {\r\n              setTimeout(function () {\r\n                setx(true);\r\n              }, 3000);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      screenHeightReducer,\r\n      itemheight,\r\n      itemheighthold,\r\n      itemFinalPostHeight,\r\n      showProfiileData,\r\n    ]\r\n  );\r\n\r\n  const scrollToPost = (index: any) => {\r\n    postDivRef.current[index].scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\",\r\n    });\r\n  };\r\n\r\n  const postitemSHOWFULLHEIGHT = (index: any, type: number) => {\r\n    if (itemcroptype[index] === 1 || itemcroptype[index] === 2) {\r\n      if (type === 0) {\r\n        const newitemHeight = [...itemheight];\r\n        newitemHeight[index] = `auto`;\r\n        setitemheight(newitemHeight);\r\n      } else {\r\n        const newitemHeight = [...itemheight];\r\n        newitemHeight[index] = `${itemFinalPostHeight[index]}px`;\r\n        setitemheight(newitemHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  const scrollLongPicTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const scrollLongPicTimerx = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const snapTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const freesnap = () => {\r\n    dispatch(SnapToggleAction(false));\r\n    if (snapTimer.current) {\r\n      clearTimeout(snapTimer.current);\r\n    }\r\n    snapTimer.current = setTimeout(\r\n      function () {\r\n        dispatch(SnapToggleAction(true));\r\n      },\r\n      matchMobile ? 3500 : 5000\r\n    );\r\n  };\r\n\r\n  const AUTOSlideLongImages = (index: number) => {\r\n    freesnap();\r\n    if (itemcroptype[index] === 2) {\r\n      scrollLongPicTimerx.current = setTimeout(() => {\r\n        if (paperPostScrollRef.current) {\r\n          paperPostScrollRef.current.scrollTo({\r\n            top:\r\n              paperPostScrollRef.current.scrollTop +\r\n              itemOriginalPostHeight[index] / 3,\r\n            behavior: \"smooth\",\r\n          });\r\n        }\r\n      }, 500);\r\n      scrollLongPicTimer.current = setTimeout(() => {\r\n        postDivRef.current[index].scrollIntoView({\r\n          behavior: \"smooth\",\r\n          block: \"start\",\r\n        });\r\n      }, 1300);\r\n    }\r\n  };\r\n\r\n  const onPostsItemClicked = (index: number) => {\r\n    if (itemCLICKED[index]) {\r\n      const newclickArray = [...itemCLICKED];\r\n      newclickArray[index] = false;\r\n      setitemCLICKED(newclickArray);\r\n      postitemSHOWFULLHEIGHT(index, 1);\r\n      scrollToPost(index);\r\n    } else {\r\n      if (matchMobile) {\r\n        freesnap();\r\n      }\r\n      AUTOSlideLongImages(index);\r\n      if (scrollTypeTimer.current) {\r\n        clearTimeout(scrollTypeTimer.current);\r\n      }\r\n\r\n      const newclickArray = [...itemCLICKED];\r\n      newclickArray[index] = true;\r\n      setitemCLICKED(newclickArray);\r\n      postitemSHOWFULLHEIGHT(index, 0);\r\n      scrollToPost(index);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///TYPES FOR ISLOGGEDIN\r\n  interface RootStateIsLogged {\r\n    IsLoggedReducer: {\r\n      loggedIn: boolean;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///LOGGED IN DATA FROM REDUX\r\n  const { loggedIn } = useSelector((state: RootStateIsLogged) => ({\r\n    ...state.IsLoggedReducer,\r\n  }));\r\n  const loggedInReducer = loggedIn;\r\n\r\n  ///\r\n  ///\r\n  ///MUI PAPER STYLES FROM REDUX\r\n  const { PaperStyleLight, PaperStyleDark } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.PaperReducerLightnDark,\r\n    })\r\n  );\r\n  var PaperStyleReducer = \"\";\r\n\r\n  if (darkmodeReducer) {\r\n    PaperStyleReducer = PaperStyleDark;\r\n  } else {\r\n    PaperStyleReducer = PaperStyleLight;\r\n  }\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  var widthProfilePic = matchPc ? \"72%\" : matchTablet ? \"84%\" : \"44vw\";\r\n  var topProfilePic = matchPc ? \"-20vh\" : matchTablet ? \"-12vh\" : \"-8vh\";\r\n  var leftProfilePic = matchPc ? \"1vw\" : matchTablet ? \"3.5vw\" : \"2.7vw\";\r\n\r\n  var optionsClass = \"\";\r\n  var fontOptions = \"\";\r\n\r\n  if (matchPc) {\r\n    optionsClass = \"profile-optionsImagePc\";\r\n    fontOptions = \"2.7vw\";\r\n  } else if (matchTablet) {\r\n    optionsClass = \"profile-optionsImageTablet\";\r\n    fontOptions = \"5rem\";\r\n  } else {\r\n    optionsClass = \"profile-optionsImageMobile\";\r\n    fontOptions = \"1.9rem\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      image: string;\r\n    };\r\n  }\r\n  const { image } = useSelector((state: RootStateReducerImage) => ({\r\n    ...state.UserdataReducer,\r\n  }));\r\n  const imageReducer = image;\r\n\r\n  const blank = () => {};\r\n\r\n  const [showModalUpload, setShowModalUpload] = useState<boolean>(false);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\r\n  const closeUploadModal = useCallback((backbutton: number) => {\r\n    //pop states fires when back and forward buttons used\r\n    if (backbutton === 1) {\r\n      window.onpopstate = () => {\r\n        window.history.pushState(null, \"\", window.location.href);\r\n        window.onpopstate = null;\r\n        setShowModalUpload(false);\r\n      };\r\n    } else {\r\n      window.history.pushState(null, \"\", \".\");\r\n      window.onpopstate = null;\r\n      setShowModalUpload(false);\r\n    }\r\n  }, []);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///OPEN MODAL THEN CALL CLOSEMODAL FUNCTION WHICH WAITS FOR A POP EVENT(for closing modal)\r\n  const OpenUploadModal = useCallback(() => {\r\n    setShowModalUpload(!showModalUpload);\r\n    //pushstate add enteries to your history\r\n    window.history.pushState(null, \"\", \"Options\");\r\n    closeUploadModal(1);\r\n  }, [showModalUpload, closeUploadModal]);\r\n\r\n  const [allowPosition, setallowPosition] = useState<boolean>(false);\r\n\r\n  return (\r\n    <>\r\n      <Grid container className=\"dontallowhighlighting\">\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            position: \"fixed\",\r\n            width: \"100%\",\r\n            padding: \"0px\",\r\n            height: \"0%\",\r\n            zIndex: 20000,\r\n            top: \"0px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        ></Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            padding: \"0px\",\r\n            paddingLeft: miniProfile ? (matchPc ? \"16.5vw\" : \"3vw\") : \"0vw\",\r\n            paddingRight: miniProfile ? (matchPc ? \"16.5vw\" : \"3vw\") : \"0vw\",\r\n            height: \"auto\",\r\n          }}\r\n        >\r\n          {postData.length > 0 ? (\r\n            <Masonry\r\n              columns={matchPc ? 2 : miniProfile ? 2 : 1}\r\n              spacing={miniProfile && matchMobile ? 1 : 0}\r\n              style={{\r\n                padding: \"0px\",\r\n              }}\r\n            >\r\n              {postData.map((post: any, i: any) => (\r\n                <div\r\n                  key={i}\r\n                  style={{\r\n                    position: \"relative\",\r\n                    scrollSnapAlign: x ? \"start\" : \"\",\r\n                  }}\r\n                >\r\n                  {miniProfile ? (\r\n                    <MiniPost\r\n                      miniProfile={miniProfile}\r\n                      postItemsRef={postItemsRef}\r\n                      setminiProfile={setminiProfile}\r\n                      setStopBodyScroll={setStopBodyScroll}\r\n                      setx={setx}\r\n                      miniLayoutPost={miniLayoutPost}\r\n                      setCommentPostid={setCommentPostid}\r\n                      postData={postData}\r\n                      setDiscussionImage={setDiscussionImage}\r\n                      OpenModalForm={OpenModalForm}\r\n                      second={second}\r\n                      setsecond={setsecond}\r\n                      secondgo={secondgo}\r\n                      setsecondgo={setsecondgo}\r\n                      setcountAutoplay={setcountAutoplay}\r\n                      countAutoplay={countAutoplay}\r\n                      onLoadDataOnce={onLoadDataOnce}\r\n                      pey={i}\r\n                      addPostItemsRef={addPostItemsRef}\r\n                      postDivRef={postDivRef}\r\n                      onPostsItemload={onPostsItemload}\r\n                      post={post}\r\n                      itemheight={itemheight}\r\n                      itemheighthold={itemheighthold}\r\n                      postbackheight={postbackheight}\r\n                      itemcroptype={itemcroptype}\r\n                      length={postData.length}\r\n                      itemFinalPostHeight={itemFinalPostHeight}\r\n                      onPostsItemClicked={onPostsItemClicked}\r\n                      itemCLICKED={itemCLICKED}\r\n                      addpostDivRefx={addpostDivRefx}\r\n                      postDatainner={postDatainner}\r\n                      postDatainnerThumb={postDatainnerThumb}\r\n                      itemOriginalPostHeight={itemOriginalPostHeight}\r\n                      ActiveAutoPlay={ActiveAutoPlay}\r\n                      setActiveAutoPlay={setActiveAutoPlay}\r\n                      AUTOSlideLongImages={AUTOSlideLongImages}\r\n                      scrollToPost={scrollToPost}\r\n                    />\r\n                  ) : (\r\n                    <Post\r\n                      setminiProfile={setminiProfile}\r\n                      setStopBodyScroll={setStopBodyScroll}\r\n                      setx={setx}\r\n                      miniLayoutPost={miniLayoutPost}\r\n                      setCommentPostid={setCommentPostid}\r\n                      postData={postData}\r\n                      setDiscussionImage={setDiscussionImage}\r\n                      OpenModalForm={OpenModalForm}\r\n                      second={second}\r\n                      setsecond={setsecond}\r\n                      secondgo={secondgo}\r\n                      setsecondgo={setsecondgo}\r\n                      setcountAutoplay={setcountAutoplay}\r\n                      countAutoplay={countAutoplay}\r\n                      onLoadDataOnce={onLoadDataOnce}\r\n                      pey={i}\r\n                      addPostItemsRef={addPostItemsRef}\r\n                      postDivRef={postDivRef}\r\n                      onPostsItemload={onPostsItemload}\r\n                      post={post}\r\n                      itemheight={itemheight}\r\n                      itemheighthold={itemheighthold}\r\n                      postbackheight={postbackheight}\r\n                      itemcroptype={itemcroptype}\r\n                      length={postData.length}\r\n                      itemFinalPostHeight={itemFinalPostHeight}\r\n                      onPostsItemClicked={onPostsItemClicked}\r\n                      itemCLICKED={itemCLICKED}\r\n                      addpostDivRef={addpostDivRef}\r\n                      postDatainner={postDatainner}\r\n                      postDatainnerThumb={postDatainnerThumb}\r\n                      itemOriginalPostHeight={itemOriginalPostHeight}\r\n                      ActiveAutoPlay={ActiveAutoPlay}\r\n                      setActiveAutoPlay={setActiveAutoPlay}\r\n                      AUTOSlideLongImages={AUTOSlideLongImages}\r\n                      scrollToPost={scrollToPost}\r\n                    />\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </Masonry>\r\n          ) : null}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Profile = React.memo(Profilex);\r\n"]},"metadata":{},"sourceType":"module"}