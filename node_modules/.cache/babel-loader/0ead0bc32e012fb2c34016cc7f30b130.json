{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\Slider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Arrow } from \"./Arrow\";\nimport { Dots } from \"./Dots\";\nimport { SliderNumber } from \"./SliderNumber\";\nimport { Grid } from \"@material-ui/core\";\nimport { animated, useTransition } from \"react-spring\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ScrollerAction } from \"../GlobalActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Sliderx({\n  slides,\n  pey,\n  refy,\n  itemheight,\n  onPostsItemClicked,\n  onPostsItemload,\n  post,\n  itemFinalPostHeight,\n  itemOriginalPostHeight,\n  itemcroptype,\n  itemCLICKED\n}) {\n  _s();\n\n  const [sliderIndex, setSliderIndex] = useState(0);\n  const [sliderIndexSlow, setSliderIndexSlow] = useState(0);\n  const [allowAutoPlay, setAllowAutoPlay] = useState(true);\n  const [showSliderLoader, setshowSliderLoader] = useState(true);\n  const scrollTypeTimerx = useRef(null);\n  const [autoSlideDuration] = useState(4000);\n  const [sliderDuration] = useState(3000); /// const getWidth = () => window.innerWidth;\n  ///var newGetWidth = getWidth() * slides.length;\n\n  const waitChangeIndexTimer = useRef(null);\n  const waitChangeIndexTimer2 = useRef(null);\n  const handleTouchMoveTimer = useRef(null);\n  const callAutoPlayAgainTimer = useRef(null);\n  const autoPlayTimer = useRef(null);\n  const SlideimageRef = useRef(null);\n  const SlideimageRefthumb = useRef(null);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [touchPosition, setTouchPosition] = useState(null);\n  const dispatch = useDispatch(); ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  var autoSlideDisplay = \"none\";\n  var sliderLoader = \"\";\n\n  if (showSliderLoader) {\n    autoSlideDisplay = \"none\";\n    sliderLoader = \"\";\n  } else {\n    autoSlideDisplay = \"block\";\n    sliderLoader = \"superloaderAutoSlider\";\n  } ///\n  ///\n  ///\n  /// SPRING TRANSITION WITH INDEX\n\n\n  const transitions = useTransition(sliderIndex, {\n    key: sliderIndex,\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    config: {\n      duration: sliderDuration - 50\n    }\n  }); ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\n\n  const sliderFirstImageOnLoad = item => {\n    if (item === 0) {\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\n        setImageHeight(SlideimageRef.current.clientHeight);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\n\n\n  const sliderFirstImageOnLoadthumb = item => {\n    if (item === 0 && imageHeight === 0) {\n      if (SlideimageRefthumb.current && SlideimageRefthumb.current.clientHeight) {\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n\n  const handleTouchStart = e => {\n    ////onMouseDown onMouseMove\n    ////touchDown = e.clientX\n    const touchDown = e.touches[0].clientX;\n    setTouchPosition(touchDown);\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH MOVE EVENT\n\n\n  const handleTouchMove = e => {\n    if (handleTouchMoveTimer.current) {\n      clearTimeout(handleTouchMoveTimer.current);\n    }\n\n    handleTouchMoveTimer.current = setTimeout(function () {\n      const touchDown = touchPosition;\n\n      if (touchDown === null) {\n        return;\n      } ////currentTouch = e.clientX\n\n\n      const currentTouch = e.touches[0].clientX;\n      const diff = touchDown - currentTouch;\n\n      if (diff > 40) {\n        nextSlide();\n      } else if (diff < -40) {\n        prevSlide();\n      } else {}\n\n      setTouchPosition(null);\n      return false;\n    }, 200);\n    return false;\n  }; ///\n  ///\n  ///\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\n\n\n  const waitChangeIndex = (data, state) => {\n    if (waitChangeIndexTimer.current) {\n      clearTimeout(waitChangeIndexTimer.current);\n    }\n\n    waitChangeIndexTimer.current = setTimeout(function () {\n      setSliderIndexSlow(state => data);\n    }, 500);\n  }; ///\n  ///\n  ///\n  /// SLIDER DISPATCH\n\n\n  const ScrolltypeChange = () => {\n    if (scrollTypeTimerx.current) {\n      clearTimeout(scrollTypeTimerx.current);\n    }\n\n    dispatch(ScrollerAction(\"\"));\n    scrollTypeTimerx.current = setTimeout(() => {\n      dispatch(ScrollerAction(\"y mandatory\"));\n    }, 16000);\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE\n\n\n  const nextSlide = () => {\n    ScrolltypeChange();\n\n    if (allowAutoPlay) {} else {\n      setshowSliderLoader(true);\n\n      if (autoPlayTimer.current) {\n        clearTimeout(autoPlayTimer.current);\n      }\n    } ///set((state) => (state + 1) % slides.length);\n\n\n    if (sliderIndex === slides.length - 1) {\n      setSliderIndex(sliderIndex => 0);\n      waitChangeIndex(0, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex + 1);\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\n    }\n\n    if (allowAutoPlay) {} else {\n      if (callAutoPlayAgainTimer.current) {\n        clearTimeout(callAutoPlayAgainTimer.current);\n      }\n\n      callAutoPlayAgainTimer.current = setTimeout(function () {\n        SliderAutoPlay(1);\n      }, sliderDuration);\n    }\n  }; ///\n  ///\n  ///\n  /// PREV SLIDE\n\n\n  const prevSlide = () => {\n    ScrolltypeChange();\n\n    if (allowAutoPlay) {} else {\n      setshowSliderLoader(true);\n\n      if (autoPlayTimer.current) {\n        clearTimeout(autoPlayTimer.current);\n      }\n    }\n\n    if (sliderIndex === 0) {\n      setSliderIndex(sliderIndex => slides.length - 1);\n      waitChangeIndex(slides.length - 1, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex - 1);\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\n    }\n\n    if (allowAutoPlay) {} else {\n      if (callAutoPlayAgainTimer.current) {\n        clearTimeout(callAutoPlayAgainTimer.current);\n      }\n\n      callAutoPlayAgainTimer.current = setTimeout(function () {\n        SliderAutoPlay(1);\n      }, sliderDuration);\n    }\n  };\n\n  const startSlider = () => {\n    setAllowAutoPlay(false);\n    setshowSliderLoader(false);\n    autoPlayTimer.current = setInterval(function () {\n      setshowSliderLoader(true);\n      setSliderIndex(state => (state + 1) % slides.length);\n\n      if (waitChangeIndexTimer2.current) {\n        clearTimeout(waitChangeIndexTimer2.current);\n      }\n\n      waitChangeIndexTimer2.current = setTimeout(function () {\n        setSliderIndexSlow(state => (state + 1) % slides.length);\n        setshowSliderLoader(false);\n      }, 500);\n    }, autoSlideDuration);\n  };\n\n  const SliderAutoPlay = type => {\n    if (type === 1) {\n      startSlider();\n    } else {\n      if (allowAutoPlay) {\n        startSlider();\n      } else {\n        setAllowAutoPlay(true);\n        setshowSliderLoader(true);\n\n        if (autoPlayTimer.current) {\n          clearInterval(autoPlayTimer.current);\n        }\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// CHANGE SLIDER CONTENT USING  DOTS\n\n\n  const GotoDots = clickedDot => {\n    ScrolltypeChange();\n    setSliderIndex(sliderIndex => clickedDot);\n    waitChangeIndex(clickedDot, sliderIndex);\n  };\n  /* useEffect(() => {\r\n    const t = setInterval(() => set(state => (state + 1) % slides.length), 4000)\r\n    return () => clearTimeout(t)\r\n  }, []) */\n\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    xs: 12,\n    style: {\n      position: \"relative\",\n      height: itemCLICKED[pey] ? `${itemOriginalPostHeight[pey]}px` : `${itemFinalPostHeight[pey]}px`,\n      padding: \"0px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: darkmodeReducer ? `${sliderLoader} turdark` : `${sliderLoader} turlight`,\n      style: {\n        boxShadow: `0 0 3px ${colorReducer}`,\n        backgroundColor: colorReducer,\n        height: \"3px\",\n        position: \"absolute\",\n        display: autoSlideDisplay,\n        zIndex: 100000,\n        top: \"0em\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SliderNumber, {\n      activeSlide: sliderIndexSlow,\n      total: slides.length,\n      itemCLICKED: itemCLICKED,\n      pey: pey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Arrow, {\n      itemCLICKED: itemCLICKED,\n      pey: pey,\n      total: slides.length,\n      direction: \"left\",\n      clickSlideprev: prevSlide,\n      clickSlidenext: nextSlide,\n      itemOriginalPostHeight: itemOriginalPostHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), transitions((style, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(animated.img, {\n        className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n        src: `./images/posts/${slides[i]}`,\n        alt: \"a superstarz post \",\n        style: { ...style,\n          cursor: \"alias\",\n          width: \"100%\",\n          height: itemheight[pey],\n          display: sliderIndex === i ? \"block\" : \"none\",\n          position: \"absolute\",\n          filter: \"blur(3px)\",\n          padding: \"0px\",\n          objectFit: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"cover\" : \"cover\",\n          objectPosition: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"50% top\" : \"50% 50\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(animated.img, {\n        onLoad: e => {\n          onPostsItemload(e, pey, i);\n        },\n        onClick: () => {\n          onPostsItemClicked(pey);\n        },\n        ref: refy,\n        className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n        src: `./images/posts/${slides[i]}`,\n        alt: \"a superstarz post \",\n        style: { ...style,\n          cursor: \"alias\",\n          width: \"100%\",\n          height: itemheight[pey],\n          position: \"absolute\",\n          padding: \"0px\",\n          objectFit: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"cover\" : \"cover\",\n          objectPosition: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"50% top\" : \"50% 50\",\n          zIndex: 1,\n          float: \"left\"\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)), \" \", /*#__PURE__*/_jsxDEV(Dots, {\n      total: slides.length,\n      itemCLICKED: itemCLICKED,\n      pey: pey,\n      GotoDots: GotoDots,\n      slides: slides,\n      activeSlide: sliderIndexSlow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sliderx, \"b2+ao0Cn+qgEVFUMRuLqru7tGck=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useTransition];\n});\n\n_c = Sliderx;\nexport const Slider = /*#__PURE__*/React.memo(Sliderx);\n_c2 = Slider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Sliderx\");\n$RefreshReg$(_c2, \"Slider\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/Slider.tsx"],"names":["React","useState","useRef","Arrow","Dots","SliderNumber","Grid","animated","useTransition","useSelector","useDispatch","ScrollerAction","Sliderx","slides","pey","refy","itemheight","onPostsItemClicked","onPostsItemload","post","itemFinalPostHeight","itemOriginalPostHeight","itemcroptype","itemCLICKED","sliderIndex","setSliderIndex","sliderIndexSlow","setSliderIndexSlow","allowAutoPlay","setAllowAutoPlay","showSliderLoader","setshowSliderLoader","scrollTypeTimerx","autoSlideDuration","sliderDuration","waitChangeIndexTimer","waitChangeIndexTimer2","handleTouchMoveTimer","callAutoPlayAgainTimer","autoPlayTimer","SlideimageRef","SlideimageRefthumb","imageHeight","setImageHeight","touchPosition","setTouchPosition","dispatch","darkmode","state","GlobalReducer","darkmodeReducer","color","GlobalReducerColor","colorReducer","autoSlideDisplay","sliderLoader","transitions","key","from","opacity","enter","leave","config","duration","sliderFirstImageOnLoad","item","current","clientHeight","sliderFirstImageOnLoadthumb","handleTouchStart","e","touchDown","touches","clientX","handleTouchMove","clearTimeout","setTimeout","currentTouch","diff","nextSlide","prevSlide","waitChangeIndex","data","ScrolltypeChange","length","SliderAutoPlay","startSlider","setInterval","type","clearInterval","GotoDots","clickedDot","position","height","padding","boxShadow","backgroundColor","display","zIndex","top","style","i","cursor","width","filter","objectFit","objectPosition","float","Slider","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Arrow } from \"./Arrow\";\r\nimport { Dots } from \"./Dots\";\r\nimport { SliderNumber } from \"./SliderNumber\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { animated, useTransition } from \"react-spring\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { ScrollerAction } from \"../GlobalActions\";\r\n\r\nfunction Sliderx({\r\n  slides,\r\n  pey,\r\n  refy,\r\n  itemheight,\r\n  onPostsItemClicked,\r\n  onPostsItemload,\r\n  post,\r\n  itemFinalPostHeight,\r\n  itemOriginalPostHeight,\r\n  itemcroptype,\r\n  itemCLICKED,\r\n}: any): JSX.Element {\r\n  const [sliderIndex, setSliderIndex] = useState(0);\r\n  const [sliderIndexSlow, setSliderIndexSlow] = useState(0);\r\n  const [allowAutoPlay, setAllowAutoPlay] = useState(true);\r\n  const [showSliderLoader, setshowSliderLoader] = useState(true);\r\n  const scrollTypeTimerx = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const [autoSlideDuration] = useState(4000);\r\n  const [sliderDuration] = useState(3000);\r\n\r\n  /// const getWidth = () => window.innerWidth;\r\n  ///var newGetWidth = getWidth() * slides.length;\r\n\r\n  const waitChangeIndexTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const waitChangeIndexTimer2 = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const handleTouchMoveTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const callAutoPlayAgainTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const autoPlayTimer = useRef<ReturnType<typeof setInterval> | null>(null);\r\n\r\n  const SlideimageRef = useRef<HTMLImageElement>(null);\r\n\r\n  const SlideimageRefthumb = useRef<HTMLImageElement>(null);\r\n\r\n  const [imageHeight, setImageHeight] = useState(0);\r\n  const [touchPosition, setTouchPosition] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n    };\r\n  }\r\n  const { color } = useSelector((state: RootStateReducerColor) => ({\r\n    ...state.GlobalReducerColor,\r\n  }));\r\n  const colorReducer = color;\r\n\r\n  var autoSlideDisplay = \"none\";\r\n  var sliderLoader = \"\";\r\n\r\n  if (showSliderLoader) {\r\n    autoSlideDisplay = \"none\";\r\n    sliderLoader = \"\";\r\n  } else {\r\n    autoSlideDisplay = \"block\";\r\n    sliderLoader = \"superloaderAutoSlider\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SPRING TRANSITION WITH INDEX\r\n  const transitions = useTransition(sliderIndex, {\r\n    key: sliderIndex,\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n    config: { duration: sliderDuration - 50 },\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\r\n  const sliderFirstImageOnLoad = (item: number) => {\r\n    if (item === 0) {\r\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\r\n        setImageHeight(SlideimageRef.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\r\n  const sliderFirstImageOnLoadthumb = (item: number) => {\r\n    if (item === 0 && imageHeight === 0) {\r\n      if (\r\n        SlideimageRefthumb.current &&\r\n        SlideimageRefthumb.current.clientHeight\r\n      ) {\r\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const handleTouchStart = (e: any) => {\r\n    ////onMouseDown onMouseMove\r\n    ////touchDown = e.clientX\r\n    const touchDown = e.touches[0].clientX;\r\n    setTouchPosition(touchDown);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH MOVE EVENT\r\n  const handleTouchMove = (e: any) => {\r\n    if (handleTouchMoveTimer.current) {\r\n      clearTimeout(handleTouchMoveTimer.current);\r\n    }\r\n    handleTouchMoveTimer.current = setTimeout(function () {\r\n      const touchDown = touchPosition;\r\n\r\n      if (touchDown === null) {\r\n        return;\r\n      }\r\n      ////currentTouch = e.clientX\r\n      const currentTouch = e.touches[0].clientX;\r\n      const diff = touchDown - currentTouch;\r\n\r\n      if (diff > 40) {\r\n        nextSlide();\r\n      } else if (diff < -40) {\r\n        prevSlide();\r\n      } else {\r\n      }\r\n\r\n      setTouchPosition(null);\r\n      return false;\r\n    }, 200);\r\n\r\n    return false;\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\r\n  const waitChangeIndex = (data: number, state: any) => {\r\n    if (waitChangeIndexTimer.current) {\r\n      clearTimeout(waitChangeIndexTimer.current);\r\n    }\r\n    waitChangeIndexTimer.current = setTimeout(function () {\r\n      setSliderIndexSlow((state) => data);\r\n    }, 500);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SLIDER DISPATCH\r\n  const ScrolltypeChange = () => {\r\n    if (scrollTypeTimerx.current) {\r\n      clearTimeout(scrollTypeTimerx.current);\r\n    }\r\n\r\n    dispatch(ScrollerAction(\"\"));\r\n    scrollTypeTimerx.current = setTimeout(() => {\r\n      dispatch(ScrollerAction(\"y mandatory\"));\r\n    }, 16000);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const nextSlide = () => {\r\n    ScrolltypeChange();\r\n    if (allowAutoPlay) {\r\n    } else {\r\n      setshowSliderLoader(true);\r\n      if (autoPlayTimer.current) {\r\n        clearTimeout(autoPlayTimer.current);\r\n      }\r\n    }\r\n\r\n    ///set((state) => (state + 1) % slides.length);\r\n    if (sliderIndex === slides.length - 1) {\r\n      setSliderIndex((sliderIndex) => 0);\r\n      waitChangeIndex(0, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex) => sliderIndex + 1);\r\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\r\n    }\r\n\r\n    if (allowAutoPlay) {\r\n    } else {\r\n      if (callAutoPlayAgainTimer.current) {\r\n        clearTimeout(callAutoPlayAgainTimer.current);\r\n      }\r\n      callAutoPlayAgainTimer.current = setTimeout(function () {\r\n        SliderAutoPlay(1);\r\n      }, sliderDuration);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PREV SLIDE\r\n  const prevSlide = () => {\r\n    ScrolltypeChange();\r\n    if (allowAutoPlay) {\r\n    } else {\r\n      setshowSliderLoader(true);\r\n      if (autoPlayTimer.current) {\r\n        clearTimeout(autoPlayTimer.current);\r\n      }\r\n    }\r\n\r\n    if (sliderIndex === 0) {\r\n      setSliderIndex((sliderIndex) => slides.length - 1);\r\n      waitChangeIndex(slides.length - 1, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex) => sliderIndex - 1);\r\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\r\n    }\r\n    if (allowAutoPlay) {\r\n    } else {\r\n      if (callAutoPlayAgainTimer.current) {\r\n        clearTimeout(callAutoPlayAgainTimer.current);\r\n      }\r\n      callAutoPlayAgainTimer.current = setTimeout(function () {\r\n        SliderAutoPlay(1);\r\n      }, sliderDuration);\r\n    }\r\n  };\r\n\r\n  const startSlider = () => {\r\n    setAllowAutoPlay(false);\r\n    setshowSliderLoader(false);\r\n    autoPlayTimer.current = setInterval(function () {\r\n      setshowSliderLoader(true);\r\n\r\n      setSliderIndex((state) => (state + 1) % slides.length);\r\n      if (waitChangeIndexTimer2.current) {\r\n        clearTimeout(waitChangeIndexTimer2.current);\r\n      }\r\n      waitChangeIndexTimer2.current = setTimeout(function () {\r\n        setSliderIndexSlow((state) => (state + 1) % slides.length);\r\n        setshowSliderLoader(false);\r\n      }, 500);\r\n    }, autoSlideDuration);\r\n  };\r\n\r\n  const SliderAutoPlay = (type: number) => {\r\n    if (type === 1) {\r\n      startSlider();\r\n    } else {\r\n      if (allowAutoPlay) {\r\n        startSlider();\r\n      } else {\r\n        setAllowAutoPlay(true);\r\n        setshowSliderLoader(true);\r\n        if (autoPlayTimer.current) {\r\n          clearInterval(autoPlayTimer.current);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  ///\r\n  ///\r\n  ///\r\n  /// CHANGE SLIDER CONTENT USING  DOTS\r\n  const GotoDots = (clickedDot: number) => {\r\n    ScrolltypeChange();\r\n    setSliderIndex((sliderIndex) => clickedDot);\r\n    waitChangeIndex(clickedDot, sliderIndex);\r\n  };\r\n\r\n  /* useEffect(() => {\r\n    const t = setInterval(() => set(state => (state + 1) % slides.length), 4000)\r\n    return () => clearTimeout(t)\r\n  }, []) */\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      onTouchStart={handleTouchStart}\r\n      onTouchMove={handleTouchMove}\r\n      xs={12}\r\n      style={{\r\n        position: \"relative\",\r\n        height: itemCLICKED[pey]\r\n          ? `${itemOriginalPostHeight[pey]}px`\r\n          : `${itemFinalPostHeight[pey]}px`,\r\n        padding: \"0px\",\r\n      }}\r\n    >\r\n      <Grid\r\n        container\r\n        className={\r\n          darkmodeReducer\r\n            ? `${sliderLoader} turdark`\r\n            : `${sliderLoader} turlight`\r\n        }\r\n        style={{\r\n          boxShadow: `0 0 3px ${colorReducer}`,\r\n          backgroundColor: colorReducer,\r\n          height: \"3px\",\r\n          position: \"absolute\",\r\n          display: autoSlideDisplay,\r\n          zIndex: 100000,\r\n          top: \"0em\",\r\n        }}\r\n      ></Grid>\r\n      <SliderNumber\r\n        activeSlide={sliderIndexSlow}\r\n        total={slides.length}\r\n        itemCLICKED={itemCLICKED}\r\n        pey={pey}\r\n      />\r\n      <Arrow\r\n        itemCLICKED={itemCLICKED}\r\n        pey={pey}\r\n        total={slides.length}\r\n        direction=\"left\"\r\n        clickSlideprev={prevSlide}\r\n        clickSlidenext={nextSlide}\r\n        itemOriginalPostHeight={itemOriginalPostHeight}\r\n      />\r\n      {transitions((style, i) => (\r\n        <>\r\n          <animated.img\r\n            className={\r\n              darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n            }\r\n            src={`./images/posts/${slides[i]}`}\r\n            alt=\"a superstarz post \"\r\n            style={{\r\n              ...style,\r\n              cursor: \"alias\",\r\n              width: \"100%\",\r\n              height: itemheight[pey],\r\n              display: sliderIndex === i ? \"block\" : \"none\",\r\n              position: \"absolute\",\r\n              filter: \"blur(3px)\",\r\n              padding: \"0px\",\r\n              objectFit:\r\n                itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                  ? \"cover\"\r\n                  : \"cover\",\r\n              objectPosition:\r\n                itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                  ? \"50% top\"\r\n                  : \"50% 50\",\r\n            }}\r\n          />\r\n\r\n          <animated.img\r\n            onLoad={(e: any) => {\r\n              onPostsItemload(e, pey, i);\r\n            }}\r\n            onClick={() => {\r\n              onPostsItemClicked(pey);\r\n            }}\r\n            key={i}\r\n            ref={refy}\r\n            className={\r\n              darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n            }\r\n            src={`./images/posts/${slides[i]}`}\r\n            alt=\"a superstarz post \"\r\n            style={{\r\n              ...style,\r\n              cursor: \"alias\",\r\n              width: \"100%\",\r\n              height: itemheight[pey],\r\n              position: \"absolute\",\r\n              padding: \"0px\",\r\n              objectFit:\r\n                itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                  ? \"cover\"\r\n                  : \"cover\",\r\n              objectPosition:\r\n                itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                  ? \"50% top\"\r\n                  : \"50% 50\",\r\n              zIndex: 1,\r\n              float: \"left\",\r\n            }}\r\n          />\r\n        </>\r\n      ))}{\" \"}\r\n      <Dots\r\n        total={slides.length}\r\n        itemCLICKED={itemCLICKED}\r\n        pey={pey}\r\n        GotoDots={GotoDots}\r\n        slides={slides}\r\n        activeSlide={sliderIndexSlow}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport const Slider = React.memo(Sliderx);\r\n"]},"metadata":{},"sourceType":"module"}