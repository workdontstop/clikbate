{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\TaskbarSuperphotoImageView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskbarSuperphotoImageViewx({\n  AddMainImageRef,\n  index,\n  MainImageFiltersRef,\n  finalImage\n}) {\n  _s();\n\n  const [original, setoriginal] = useState(false);\n  const [ImageData, setImageData] = useState(null);\n  const originalShow = useCallback(() => {\n    setoriginal(true);\n    setTimeout(() => {\n      setoriginal(false);\n    }, 3000);\n  }, index);\n  useEffect(() => {\n    if (MainImageFiltersRef.current) {\n      setImageData(MainImageFiltersRef.current[index].src);\n    }\n  }, [finalImage, MainImageFiltersRef.current]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: originalShow,\n      ref: AddMainImageRef,\n      style: {\n        cursor: 'pointer'\n      },\n      src: MainImageFiltersRef.current[index] ? ImageData : null,\n      alt: `Image ${index}`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(TaskbarSuperphotoImageViewx, \"XtX/br0plF3xOSTJyk4zxDcfLlI=\");\n\n_c = TaskbarSuperphotoImageViewx;\nexport const TaskbarSuperphotoImageView = /*#__PURE__*/React.memo(TaskbarSuperphotoImageViewx);\n_c2 = TaskbarSuperphotoImageView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskbarSuperphotoImageViewx\");\n$RefreshReg$(_c2, \"TaskbarSuperphotoImageView\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/TaskbarSuperphotoImageView.tsx"],"names":["React","useEffect","useCallback","useState","TaskbarSuperphotoImageViewx","AddMainImageRef","index","MainImageFiltersRef","finalImage","original","setoriginal","ImageData","setImageData","originalShow","setTimeout","current","src","cursor","TaskbarSuperphotoImageView","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAEIC,SAFJ,EAGIC,WAHJ,EAIIC,QAJJ,QAMO,OANP;;;;AAqCA,SAASC,2BAAT,CAAqC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA,mBAA1B;AAA+CC,EAAAA;AAA/C,CAArC,EAAoH;AAAA;;AAGhH,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AAGA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAM,IAAN,CAA1C;AAGA,QAAMU,YAAY,GAAGX,WAAW,CAAC,MAAM;AACnCQ,IAAAA,WAAW,CAAC,IAAD,CAAX;AAIAI,IAAAA,UAAU,CAAC,MAAM;AACbJ,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH,KAFS,EAEP,IAFO,CAAV;AAKH,GAV+B,EAU7BJ,KAV6B,CAAhC;AAcAL,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIM,mBAAmB,CAACQ,OAAxB,EAAiC;AAC7BH,MAAAA,YAAY,CAACL,mBAAmB,CAACQ,OAApB,CAA4BT,KAA5B,EAAmCU,GAApC,CAAZ;AACH;AAEJ,GANQ,EAMN,CAACR,UAAD,EAAaD,mBAAmB,CAACQ,OAAjC,CANM,CAAT;AAUA,sBACI;AAAA,2BAGI;AAAiB,MAAA,OAAO,EAAEF,YAA1B;AAAwC,MAAA,GAAG,EAAER,eAA7C;AAA8D,MAAA,KAAK,EAAE;AAAEY,QAAAA,MAAM,EAAE;AAAV,OAArE;AAA4F,MAAA,GAAG,EAC3FV,mBAAmB,CAACQ,OAApB,CAA4BT,KAA5B,IACMK,SADN,GAEM,IAHV;AAKI,MAAA,GAAG,EAAG,SAAQL,KAAM;AALxB,OAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAHJ,mBADJ;AAeH;;GAhDQF,2B;;KAAAA,2B;AAkDT,OAAO,MAAMc,0BAA0B,gBAAGlB,KAAK,CAACmB,IAAN,CAAWf,2BAAX,CAAnC;MAAMc,0B","sourcesContent":["import React, {\r\n    useRef,\r\n    useEffect,\r\n    useCallback,\r\n    useState,\r\n    useLayoutEffect,\r\n} from \"react\";\r\nimport ControlPointDuplicateIcon from \"@mui/icons-material/ControlPointDuplicate\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport Axios from \"axios\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport date from \"date-and-time\";\r\nimport { UserInfoUpdatePROFILE } from \"../log/actions/UserdataAction\";\r\nimport { UserInfoUpdateBILLBOARD } from \"../log/actions/UserdataAction\";\r\nimport { usePalette } from \"react-palette\";\r\nimport { UpdateColorAction } from \"../GlobalActions\";\r\nimport EditTwoToneIcon from \"@mui/icons-material/EditTwoTone\";\r\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\r\nimport { UpdateUploadData } from \"../GlobalActions\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\nimport CropIcon from '@mui/icons-material/Crop';\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { TaskbarCrop } from \"./TaskbarCrop\";\r\nimport set from \"date-fns/set/index.js\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TaskbarSuperphotoImageViewx({ AddMainImageRef, index, MainImageFiltersRef, finalImage }: any): JSX.Element {\r\n\r\n\r\n    const [original, setoriginal] = useState(false);\r\n\r\n\r\n    const [ImageData, setImageData] = useState<any>(null);\r\n\r\n\r\n    const originalShow = useCallback(() => {\r\n        setoriginal(true);\r\n\r\n\r\n\r\n        setTimeout(() => {\r\n            setoriginal(false);\r\n        }, 3000)\r\n\r\n\r\n    }, index)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (MainImageFiltersRef.current) {\r\n            setImageData(MainImageFiltersRef.current[index].src);\r\n        }\r\n\r\n    }, [finalImage, MainImageFiltersRef.current])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <img key={index} onClick={originalShow} ref={AddMainImageRef} style={{ cursor: 'pointer' }} src={\r\n                MainImageFiltersRef.current[index]\r\n                    ? ImageData\r\n                    : null\r\n            }\r\n                alt={`Image ${index}`} />\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport const TaskbarSuperphotoImageView = React.memo(TaskbarSuperphotoImageViewx);\r\n"]},"metadata":{},"sourceType":"module"}