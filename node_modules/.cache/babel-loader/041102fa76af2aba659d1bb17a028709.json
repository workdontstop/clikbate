{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\ShowReactions.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n///Axios.defaults.withCredentials = true;\nfunction ShowReactionsx({\n  i,\n  zoomedModal,\n  wideImage,\n  post,\n  AddRef,\n  length,\n  callObserver\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n  ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n  const {\n    image,\n    imageThumb,\n    id\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const imageReducer = image;\n  const imageReducerThumb = imageThumb;\n  const idReducer = id;\n  useEffect(() => {\n    if (i + 1 === length) {/////callObserver();\n    }\n  }, [i]);\n  const [clicked, setclicked] = useState(false);\n\n  const flipper = () => {\n    setclicked(true);\n    setTimeout(() => {\n      setclicked(false);\n    }, 5500);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: clicked ? /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"5px\",\n        fontSize: \"1.7vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        title: post.username,\n        onClick: () => {\n          flipper();\n        },\n        className: darkmodeReducer ? `turprofileDark image-gray-on-click ` : ` turprofileLight image-gray-on-click`,\n        style: {\n          display: \"block\",\n          zIndex: 2,\n          borderRadius: \"50%\",\n          cursor: \"pointer\",\n          position: \"relative\",\n          padding: \"10px\",\n          margin: \"auto\",\n          objectFit: \"contain\",\n          width: \"70%\"\n        },\n        src: `${post.profile_image}`,\n        alt: \"Superstarz Billboard \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"\",\n        style: {\n          display: \"block\",\n          marginTop: \"2px\",\n          fontWeight: \"bold\",\n          fontFamily: \"Arial, Helvetica, sans-seri\",\n          color: darkmodeReducer ? \"#ffffff\" : \"#000000\"\n        },\n        children: post.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          textAlign: \"center\",\n          marginTop: \"5px\",\n          fontSize: \"1.6vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          title: post.username,\n          onClick: () => {\n            flipper();\n          },\n          className: darkmodeReducer ? `turprofileDark image-gray-on-click ` : ` turprofileLight image-gray-on-click`,\n          style: {\n            display: \"block\",\n            zIndex: 2,\n            borderRadius: \"0%\",\n            cursor: \"pointer\",\n            position: \"relative\",\n            padding: \"0px\",\n            margin: \"auto\",\n            objectFit: \"contain\",\n            width: \"100%\"\n          },\n          src: `${post.profile_image}`,\n          alt: \"Superstarz Billboard \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"\",\n          style: {\n            display: \"block\",\n            marginTop: \"2px\",\n            fontWeight: \"normal\",\n            fontFamily: \"Arial, Helvetica, sans-seri\",\n            color: darkmodeReducer ? \"#ffffff\" : \"#000000\"\n          },\n          children: post.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false)\n  /*MOBILE  MOBILE  MOBILE  MOBILE  SIGNUP MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\n  ;\n}\n\n_s(ShowReactionsx, \"SDZYbJCpn/eYpNGk8EYpRHtOvc0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ShowReactionsx;\nexport const ShowReactions = /*#__PURE__*/React.memo(ShowReactionsx);\n_c2 = ShowReactions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShowReactionsx\");\n$RefreshReg$(_c2, \"ShowReactions\");","map":{"version":3,"sources":["C:/Users/oghen/Documents/ClikBate/super/src/profile/ShowReactions.tsx"],"names":["React","useState","useEffect","useSelector","ShowReactionsx","i","zoomedModal","wideImage","post","AddRef","length","callObserver","darkmode","state","GlobalReducer","darkmodeReducer","image","imageThumb","id","UserdataReducer","imageReducer","imageReducerThumb","idReducer","clicked","setclicked","flipper","setTimeout","textAlign","marginTop","fontSize","username","display","zIndex","borderRadius","cursor","position","padding","margin","objectFit","width","profile_image","fontWeight","fontFamily","color","ShowReactions","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useCallback, useEffect } from \"react\";\r\nimport { Ispinnerinterface, IFormHolder } from \"../log/log-Interfaces\";\r\nimport Axios from \"axios\";\r\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\r\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\r\nimport { TextFieldLogin } from \"../log/TextFieldLogin\";\r\nimport { TextFieldSignup } from \"../log/TextFieldSignup\";\r\nimport { ModalFormSignupError } from \"../log/ModalFormSignupError\";\r\nimport { ModalFormLoginError } from \"../log/ModalFormLoginError\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { IsLoggedAction } from \"../log/actions/IsLoggedAction\";\r\nimport { UserdataAction } from \"../log/actions/UserdataAction\";\r\nimport { ActivateLoaderAction, HideLoaderAction } from \"../GlobalActions\";\r\n//////import { useHistory } from \"react-router-dom\";\r\nimport { PasswordCheck } from \"../log/PasswordCheck\";\r\nimport { UpdateColorAction } from \"../GlobalActions\";\r\nimport { UserInfoUpdateAction } from \"../log/actions/UserdataAction\";\r\nimport KeyboardDoubleArrowRightIcon from \"@mui/icons-material/KeyboardDoubleArrowRight\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport ReplyAllIcon from \"@mui/icons-material/ReplyAll\";\r\nimport QuickreplyIcon from \"@mui/icons-material/Quickreply\";\r\nimport { ICommentTemplate, IGrid } from \"../log/log-Interfaces\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport CommentIcon from \"@mui/icons-material/Comment\";\r\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\r\nimport TextareaAutosize from \"@mui/base/TextareaAutosize\";\r\nimport { DialogContent } from \"@material-ui/core\";\r\nimport { animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\n\r\n///Axios.defaults.withCredentials = true;\r\n\r\nfunction ShowReactionsx({\r\n  i,\r\n  zoomedModal,\r\n  wideImage,\r\n  post,\r\n  AddRef,\r\n  length,\r\n  callObserver,\r\n}: any) {\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      image: string;\r\n      imageThumb: string;\r\n      id: number;\r\n    };\r\n  }\r\n  const { image, imageThumb, id } = useSelector(\r\n    (state: RootStateReducerImage) => ({\r\n      ...state.UserdataReducer,\r\n    })\r\n  );\r\n  const imageReducer = image;\r\n  const imageReducerThumb = imageThumb;\r\n  const idReducer = id;\r\n\r\n  useEffect(() => {\r\n    if (i + 1 === length) {\r\n      /////callObserver();\r\n    }\r\n  }, [i]);\r\n\r\n  const [clicked, setclicked] = useState<boolean>(false);\r\n\r\n  const flipper = () => {\r\n    setclicked(true);\r\n\r\n    setTimeout(() => {\r\n      setclicked(false);\r\n    }, 5500);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {clicked ? (\r\n        <span\r\n          style={{ textAlign: \"center\", marginTop: \"5px\", fontSize: \"1.7vh\" }}\r\n        >\r\n          <img\r\n            title={post.username}\r\n            onClick={() => {\r\n              flipper();\r\n            }}\r\n            className={\r\n              darkmodeReducer\r\n                ? `turprofileDark image-gray-on-click `\r\n                : ` turprofileLight image-gray-on-click`\r\n            }\r\n            style={{\r\n              display: \"block\",\r\n              zIndex: 2,\r\n              borderRadius: \"50%\",\r\n              cursor: \"pointer\",\r\n              position: \"relative\",\r\n              padding: \"10px\",\r\n              margin: \"auto\",\r\n              objectFit: \"contain\",\r\n              width: \"70%\",\r\n            }}\r\n            src={`${post.profile_image}`}\r\n            alt=\"Superstarz Billboard \"\r\n          />\r\n          <span\r\n            className=\"\"\r\n            style={{\r\n              display: \"block\",\r\n              marginTop: \"2px\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Arial, Helvetica, sans-seri\",\r\n              color: darkmodeReducer ? \"#ffffff\" : \"#000000\",\r\n            }}\r\n          >\r\n            {post.username}\r\n          </span>\r\n        </span>\r\n      ) : (\r\n        <>\r\n          {\" \"}\r\n          <span\r\n            style={{ textAlign: \"center\", marginTop: \"5px\", fontSize: \"1.6vh\" }}\r\n          >\r\n            <img\r\n              title={post.username}\r\n              onClick={() => {\r\n                flipper();\r\n              }}\r\n              className={\r\n                darkmodeReducer\r\n                  ? `turprofileDark image-gray-on-click `\r\n                  : ` turprofileLight image-gray-on-click`\r\n              }\r\n              style={{\r\n                display: \"block\",\r\n                zIndex: 2,\r\n                borderRadius: \"0%\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                padding: \"0px\",\r\n                margin: \"auto\",\r\n                objectFit: \"contain\",\r\n                width: \"100%\",\r\n              }}\r\n              src={`${post.profile_image}`}\r\n              alt=\"Superstarz Billboard \"\r\n            />\r\n\r\n            <span\r\n              className=\"\"\r\n              style={{\r\n                display: \"block\",\r\n                marginTop: \"2px\",\r\n                fontWeight: \"normal\",\r\n                fontFamily: \"Arial, Helvetica, sans-seri\",\r\n                color: darkmodeReducer ? \"#ffffff\" : \"#000000\",\r\n              }}\r\n            >\r\n              {post.username}\r\n            </span>\r\n          </span>\r\n        </>\r\n      )}\r\n    </>\r\n    /*MOBILE  MOBILE  MOBILE  MOBILE  SIGNUP MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\r\n  );\r\n}\r\n\r\nexport const ShowReactions = React.memo(ShowReactionsx);\r\n"]},"metadata":{},"sourceType":"module"}