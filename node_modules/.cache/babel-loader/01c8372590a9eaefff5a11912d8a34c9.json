{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\UploadMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useCallback, useEffect, useLayoutEffect } from \"react\";\nimport { matchPc } from \"../DetectDevice\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { animated } from \"react-spring\";\nimport Masonry from \"@mui/lab/Masonry\";\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\nimport PhotoIcon from \"@mui/icons-material/Photo\";\nimport GifIcon from \"@mui/icons-material/Gif\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport Axios from \"axios\";\nimport CropIcon from \"@mui/icons-material/Crop\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport { PreviewCanvas } from \"./PreviewCanvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UploadMenux({\n  optionsShow,\n  optinstopshowingReducer,\n  typeTop,\n  closeoptionsslide,\n  animationop,\n  optionsCollectImageRef,\n  handleTouchStartOptions,\n  handleTouchMoveOptions,\n  modalanimation,\n  nextSlidePc,\n  optionsImages,\n  ActiveSlide,\n  optionsNameData,\n  clickOptions,\n  optionsClickType,\n  getSliderWidthNew,\n  cropTOPLEVELScrollRef,\n  refWithimageData\n}) {\n  _s();\n\n  const [selectedImage, setselectedImage] = useState([]); ///\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env; ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype;\n  const [cropimage, setcropimage] = useState(\"\");\n  const [showCrop, setshowCrop] = useState(false);\n  const [selectedImageUpload, setselectedImageUpload] = useState(null);\n  const updateColor = useCallback(formData => {\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/upload`, formData).then(response => {\n      if (response.data.message === \"ok\") {}\n    }).catch(function (error) {\n      alert(\"about color error\");\n    });\n  }, [REACT_APP_SUPERSTARZ_URL]);\n\n  const imageHandleChange = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const FileArray = Array.from(e.target.files).map(file => URL.createObjectURL(file));\n      setselectedImage(prevImages => prevImages.concat(FileArray));\n      setcropimage(FileArray[0]);\n      setshowCrop(true);\n      const formData = new FormData();\n\n      for (let i = 0; i < e.target.files.length; i++) {\n        formData.append(\"superImages\", e.target.files[i]);\n      } ////updateColor(formData);\n\n\n      Array.from(e.target.files).map(file => URL.revokeObjectURL(file));\n    }\n  }; ///////////////////////////////////////////////////////SUPER CROP ///////////////////////////////////\n\n\n  const cropCanvasRef = useRef(null); ////\n  ////\n  ////\n\n  const [cropArea, setcropArea] = useState(null); //\n\n  const [crop, setcrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [cropInitial, setcropInitial] = useState({\n    x: 0,\n    y: 0\n  });\n  const [cropOffset, setcropOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [Drag, setDrag] = useState(false);\n  const [SourceWidthForCropX, setSourceWidthForCropX] = useState(0);\n  const [SourceWidthForCropY, setSourceWidthForCropY] = useState(0);\n  const [cropwidth, setcropwidth] = useState(0);\n  const [cropheight, setcropheight] = useState(0);\n  const [canvasToimage, setcanvasToimage] = useState(false);\n  const getpreviewFixedWidthRef = useRef(null);\n  const getCropHeightRef = useRef(null);\n  const getFixedCropWidthRef = useRef(null);\n  const [getCropHeight, setgetCropHeight] = useState(0);\n  const [getCropHeightRealImageRatio, setgetCropHeightRealImageRatio] = useState(0);\n  const [getFixedCropWidth, setgetFixedCropWidth] = useState(0);\n  const [getpreviewFixedWidth, setgetpreviewFixedWidth] = useState(0);\n  const [CropImageHolder, setCropImageHolder] = useState(null);\n  const [OriginalImageWidth, setOriginalImageWidth] = useState(0);\n  const [OriginalImageHeight, setOriginalImageHeight] = useState(0);\n  const [WideImageCheck, setWideImageCheck] = useState(false);\n  const hdcanvasvalue = 2;\n  const [BoxCropActivated, setBoxCropActivated] = useState(true);\n  const cropScrollRef = useRef(null); ///\n  ///\n  ///\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\n\n  useEffect(() => {\n    if (getpreviewFixedWidthRef.current && getpreviewFixedWidthRef.current.clientWidth) {\n      setgetpreviewFixedWidth(getpreviewFixedWidthRef.current.clientWidth);\n    }\n\n    if (getCropHeightRef.current && getCropHeightRef.current.clientWidth) {\n      setgetCropHeight(getCropHeightRef.current.clientHeight * hdcanvasvalue);\n      setgetCropHeightRealImageRatio(getCropHeightRef.current.clientHeight);\n    }\n\n    if (getFixedCropWidthRef.current && getFixedCropWidthRef.current.clientWidth) {\n      setgetFixedCropWidth(getFixedCropWidthRef.current.clientWidth);\n    }\n  }, []); ///\n  ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n  const handleTouchStart = (e, type) => {\n    if (BoxCropActivated) {\n      if (type === 0) {\n        setcropInitial({ ...cropInitial,\n          x: e.clientX * 2.8 - cropOffset.x,\n          y: e.clientY * 3.3 - cropOffset.y\n        });\n      } else {\n        setcropInitial({ ...cropInitial,\n          x: e.touches[0].clientX * 2.8 - cropOffset.x,\n          y: e.touches[0].clientY * 3.3 - cropOffset.y\n        });\n      }\n\n      if (e.target) {\n        setDrag(true);\n      }\n    } else {\n      setBoxCropActivated(true);\n    }\n  };\n\n  const handleTouchEnd = () => {\n    setcropInitial({ ...cropInitial,\n      x: crop.x,\n      y: crop.y\n    });\n    setDrag(false);\n  };\n\n  const handleTouchDrag = (e, type) => {\n    if (Drag) {\n      if (type === 0) {\n        setcrop({ ...crop,\n          x: e.clientX * 2.8 - cropInitial.x,\n          y: e.clientY * 3.3 - cropInitial.y\n        });\n      } else {\n        setcrop({ ...crop,\n          x: e.touches[0].clientX * 2.8 - cropInitial.x,\n          y: e.touches[0].clientY * 3.3 - cropInitial.y\n        });\n      }\n\n      setcropOffset({ ...cropOffset,\n        x: crop.x,\n        y: crop.y\n      });\n    }\n  };\n\n  const draw = useCallback((ctx, dimensions, type, axis) => {\n    if (type === 1) {\n      ctx.drawImage(CropImageHolder, axis, 0, dimensions, getCropHeight);\n    } else if (type === 2) {\n      ctx.drawImage(CropImageHolder, 0, axis, getCropHeight, dimensions);\n    } else {\n      ctx.drawImage(CropImageHolder, 0, 0, OriginalImageWidth, OriginalImageHeight);\n    }\n  }, [OriginalImageWidth, OriginalImageHeight, CropImageHolder, getCropHeight]);\n  useLayoutEffect(() => {\n    const Newcropimage = new Image();\n    Newcropimage.src = cropimage;\n\n    Newcropimage.onload = function () {\n      setCropImageHolder(Newcropimage);\n      var data1 = Newcropimage.naturalWidth;\n      var data2 = Newcropimage.naturalHeight;\n      setOriginalImageWidth(data1);\n      setOriginalImageHeight(data2);\n\n      if (Newcropimage.naturalWidth > Newcropimage.naturalHeight) {\n        setWideImageCheck(true);\n      } else {\n        setWideImageCheck(false);\n      }\n\n      setcropwidth(data1);\n      setcropheight(data2);\n    };\n  }, [cropimage, BoxCropActivated, showCrop]);\n  useLayoutEffect(() => {\n    if (CropImageHolder && cropCanvasRef.current) {\n      const ctx = cropCanvasRef.current.getContext(\"2d\");\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / getCropHeight;\n      var NewBoxRatioWidth_WIDEIMAGE = OriginalImageWidth / RatiofromOriginalandfixedHeight;\n      setSourceWidthForCropX(NewBoxRatioWidth_WIDEIMAGE);\n      var RatiofromOriginalandfixedHeightx = OriginalImageWidth / getCropHeight;\n      var NewBoxRatioWidth_LONGIMAGE = OriginalImageHeight / RatiofromOriginalandfixedHeightx;\n      setSourceWidthForCropY(NewBoxRatioWidth_LONGIMAGE);\n      var ratioh = OriginalImageWidth * 3 / OriginalImageWidth;\n      var ratiow = OriginalImageHeight * 3 / OriginalImageHeight;\n\n      if (BoxCropActivated) {\n        cropCanvasRef.current.width = getCropHeight;\n        cropCanvasRef.current.height = getCropHeight;\n      } else {\n        cropCanvasRef.current.width = OriginalImageWidth;\n        cropCanvasRef.current.height = OriginalImageHeight;\n      }\n\n      var centerpreview = cropCanvasRef.current.width / 1.5 - NewBoxRatioWidth_LONGIMAGE / 1.5;\n      var xtraZoom = getCropHeight / NewBoxRatioWidth_WIDEIMAGE;\n      var centerCropCanvas = cropCanvasRef.current.width / 2 - NewBoxRatioWidth_WIDEIMAGE / 2;\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / getCropHeightRealImageRatio;\n      var newcropCSSWidth = OriginalImageWidth / RatiofromOriginalandfixedHeight;\n\n      if (BoxCropActivated) {\n        var dragDistanceY = NewBoxRatioWidth_LONGIMAGE - getCropHeight;\n        var dragDistanceX = NewBoxRatioWidth_WIDEIMAGE - getCropHeight;\n\n        if (OriginalImageWidth > OriginalImageHeight) {\n          if (crop.x < -dragDistanceX) {\n            setcrop({ ...crop,\n              x: -dragDistanceX\n            });\n          } else if (crop.x > 0) {\n            setcrop({ ...crop,\n              x: 0\n            });\n          } else {}\n\n          requestAnimationFrame(() => {\n            draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, crop.x);\n          });\n        } else {\n          if (crop.y < -dragDistanceY) {\n            setcrop({ ...crop,\n              y: -dragDistanceY\n            });\n          } else if (crop.y > 0) {\n            setcrop({ ...crop,\n              y: 0\n            });\n          } else {}\n\n          requestAnimationFrame(() => {\n            draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, crop.y);\n          });\n        }\n\n        cropCanvasRef.current.style.width = `${getCropHeight / hdcanvasvalue}px`;\n        cropCanvasRef.current.style.height = `${getCropHeight / hdcanvasvalue}px`;\n      } else {\n        requestAnimationFrame(() => {\n          draw(ctx, 0, 3, 0);\n        });\n        cropCanvasRef.current.style.width = `${newcropCSSWidth}px`;\n        cropCanvasRef.current.style.height = `${getCropHeightRealImageRatio}px`;\n      }\n    }\n  }, [CropImageHolder, cropCanvasRef, BoxCropActivated, OriginalImageWidth, OriginalImageHeight, crop, draw]);\n\n  const gg = () => {};\n\n  const cropaspectchange = () => {\n    setBoxCropActivated(BoxCropActivated => !BoxCropActivated);\n  };\n\n  const complete = () => {\n    setcanvasToimage(true);\n  }; //////////////////////////////////////////////////////////////////////SUPER CROP ///////////////////////////\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showCrop ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        ref: getCropHeightRef,\n        style: {\n          position: \"relative\",\n          width: \"100%\",\n          height: \"70%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            ref: getFixedCropWidthRef,\n            xs: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          onMouseDown: e => {\n            handleTouchStart(e, 0);\n          },\n          onTouchStart: e => {\n            handleTouchStart(e, 1);\n          },\n          onMouseMove: e => {\n            handleTouchDrag(e, 0);\n          },\n          onTouchMove: e => {\n            handleTouchDrag(e, 1);\n          },\n          onMouseUp: handleTouchEnd,\n          onTouchEnd: handleTouchEnd,\n          className: darkmodeReducer ? \"turdarkCrop\" : \"turdarkCrop\",\n          ref: cropCanvasRef,\n          style: {\n            padding: \"0px\",\n            margin: \"auto\",\n            cursor: \"pointer\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          style: {\n            padding: \"0px\",\n            bottom: \"13.6vh\",\n            margin: \"auto\",\n            width: `100%`,\n            height: \"0px\",\n            position: \"absolute\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            alignContent: \"center\",\n            alignSelf: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            style: {\n              padding: \"0px\",\n              height: \"0px\",\n              margin: \"auto\",\n              display: \"grid\",\n              alignItems: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CropIcon, {\n              onClick: cropaspectchange,\n              className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \",\n              style: {\n                margin: \"auto\",\n                marginRight: \"9%\",\n                fontSize: \"2.9vw\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            style: {\n              padding: \"0px\",\n              height: \"0px\",\n              margin: \"auto\",\n              display: \"grid\",\n              alignItems: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n              onClick: complete,\n              className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \",\n              style: {\n                margin: \"auto\",\n                marginLeft: \"9%\",\n                fontSize: \"2.9vw\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getpreviewFixedWidthRef,\n          xs: 5,\n          style: {\n            padding: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Masonry, {\n        columns: matchPc ? selectedImage.length > 2 ? 3 : 2 : 1,\n        spacing: 0,\n        style: {\n          overflowX: \"hidden\",\n          position: \"relative\",\n          zIndex: 2\n        },\n        children: [selectedImage ? selectedImage.map((photo, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(PreviewCanvas, {\n              image: photo,\n              cropTOPLEVELScrollRef: cropTOPLEVELScrollRef,\n              index: index,\n              setcropimage: setcropimage,\n              setcrop: setcrop,\n              crop: crop\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 23\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 21\n          }, this);\n        }) : null, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: imageHandleChange,\n        type: \"file\",\n        name: \"superImages\",\n        accept: \"image/*\",\n        multiple: true,\n        id: \"file\",\n        style: {\n          visibility: \"hidden\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        onTouchStart: handleTouchStartOptions,\n        onTouchMove: handleTouchMoveOptions,\n        style: {\n          zIndex: 1,\n          padding: \"0px\",\n          top: matchPc ? \"-2vh\" : \"0vh\",\n          position: \"relative\",\n          margin: \"0 auto\",\n          overflow: \"hidden\",\n          left: \"0px\",\n          height: matchPc ? \"24.4vh\" : \"20.5vh\",\n          paddingBottom: \"1px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(animated.div, {\n          ref: optionsCollectImageRef,\n          style: modalanimation,\n          children: optionsImages.map((im, i) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [ActiveSlide === 1 && i === 1 ? /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"file\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => {\n                  clickOptions(i, optionsClickType, \"\");\n                },\n                style: {\n                  cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\n                  width: `${getSliderWidthNew}px`,\n                  height: `${getSliderWidthNew}px`,\n                  backgroundColor: darkmodeReducer ? \"rgba(010,010,010, 0.68)\" : \"rgba(220,220,220, 0.7)\",\n                  borderRadius: \"50%\",\n                  marginTop: \"2.15vh\",\n                  textAlign: \"center\",\n                  alignItems: \"center\",\n                  display: \"grid\",\n                  justifyContent: \"center\",\n                  boxShadow: darkmodeReducer ? ActiveSlide === i ? colortypeReducer === 0 ? `0 0 5.5px ${colorReducerdark}` : `0 0 5.5px ${colorReducer}` : \"0 0 5.5px#aaaaaa\" : ActiveSlide === i ? `0 0 5.5px ${colorReducer}` : \"0 0 5.45px#222222\"\n                },\n                children: /*#__PURE__*/_jsxDEV(PhotoIcon, {\n                  style: {\n                    fontSize: matchPc ? \"2vw\" : \"5vh\",\n                    color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                  },\n                  className: \"zuperkinginfo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => {\n                  clickOptions(i, optionsClickType, \"\");\n                },\n                style: {\n                  cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\n                  width: `${getSliderWidthNew}px`,\n                  height: `${getSliderWidthNew}px`,\n                  backgroundColor: darkmodeReducer ? \"rgba(010,010,010, 0.68)\" : \"rgba(220,220,220, 0.7)\",\n                  borderRadius: \"50%\",\n                  marginTop: \"2.15vh\",\n                  textAlign: \"center\",\n                  alignItems: \"center\",\n                  display: \"grid\",\n                  justifyContent: \"center\",\n                  boxShadow: darkmodeReducer ? ActiveSlide === i ? colortypeReducer === 0 ? `0 0 5.5px ${colorReducerdark}` : `0 0 5.5px ${colorReducer}` : \"0 0 5.5px#aaaaaa\" : ActiveSlide === i ? `0 0 5.5px ${colorReducer}` : \"0 0 5.45px#222222\"\n                },\n                children: [i === 0 ? /*#__PURE__*/_jsxDEV(MusicNoteIcon, {\n                  style: {\n                    fontSize: matchPc ? \"2vw\" : \"5vh\",\n                    color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                  },\n                  className: \"zuperkinginfo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 27\n                }, this) : null, i === 1 ? /*#__PURE__*/_jsxDEV(PhotoIcon, {\n                  style: {\n                    fontSize: matchPc ? \"2vw\" : \"5vh\",\n                    color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                  },\n                  className: \"zuperkinginfo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 27\n                }, this) : null, i === 2 ? /*#__PURE__*/_jsxDEV(GifIcon, {\n                  style: {\n                    fontSize: matchPc ? \"2.5vw\" : \"5vh\",\n                    color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                  },\n                  className: \"zuperkinginfo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 27\n                }, this) : null, i === 3 ? /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n                  style: {\n                    fontSize: matchPc ? \"2.3vw\" : \"5vh\",\n                    color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                  },\n                  className: \"zuperkinginfo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 27\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              style: {\n                margin: \"auto\",\n                textAlign: \"center\",\n                position: \"relative\",\n                bottom: \"-0.5em\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                style: {\n                  fontSize: matchPc ? \"1.1vw\" : \"2vh\",\n                  fontWeight: \"bolder\",\n                  fontFamily: \"Arial, Helvetica, sans-serif\",\n                  visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\n                  color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\"\n                },\n                children: [\" \", optionsNameData[i]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(UploadMenux, \"xxY5LSg/AoBHr/LneYexF3P0DS0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = UploadMenux;\nexport const UploadMenu = /*#__PURE__*/React.memo(UploadMenux);\n_c2 = UploadMenu;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadMenux\");\n$RefreshReg$(_c2, \"UploadMenu\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/UploadMenu.tsx"],"names":["React","useRef","useState","useCallback","useEffect","useLayoutEffect","matchPc","Grid","useSelector","animated","Masonry","MusicNoteIcon","PhotoIcon","GifIcon","ChevronRightIcon","Axios","CropIcon","CheckIcon","PreviewCanvas","UploadMenux","optionsShow","optinstopshowingReducer","typeTop","closeoptionsslide","animationop","optionsCollectImageRef","handleTouchStartOptions","handleTouchMoveOptions","modalanimation","nextSlidePc","optionsImages","ActiveSlide","optionsNameData","clickOptions","optionsClickType","getSliderWidthNew","cropTOPLEVELScrollRef","refWithimageData","selectedImage","setselectedImage","darkmode","state","GlobalReducer","darkmodeReducer","REACT_APP_SUPERSTARZ_URL","process","env","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","cropimage","setcropimage","showCrop","setshowCrop","selectedImageUpload","setselectedImageUpload","updateColor","formData","post","then","response","data","message","catch","error","alert","imageHandleChange","e","target","files","length","FileArray","Array","from","map","file","URL","createObjectURL","prevImages","concat","FormData","i","append","revokeObjectURL","cropCanvasRef","cropArea","setcropArea","crop","setcrop","x","y","cropInitial","setcropInitial","cropOffset","setcropOffset","Drag","setDrag","SourceWidthForCropX","setSourceWidthForCropX","SourceWidthForCropY","setSourceWidthForCropY","cropwidth","setcropwidth","cropheight","setcropheight","canvasToimage","setcanvasToimage","getpreviewFixedWidthRef","getCropHeightRef","getFixedCropWidthRef","getCropHeight","setgetCropHeight","getCropHeightRealImageRatio","setgetCropHeightRealImageRatio","getFixedCropWidth","setgetFixedCropWidth","getpreviewFixedWidth","setgetpreviewFixedWidth","CropImageHolder","setCropImageHolder","OriginalImageWidth","setOriginalImageWidth","OriginalImageHeight","setOriginalImageHeight","WideImageCheck","setWideImageCheck","hdcanvasvalue","BoxCropActivated","setBoxCropActivated","cropScrollRef","current","clientWidth","clientHeight","handleTouchStart","type","clientX","clientY","touches","handleTouchEnd","handleTouchDrag","draw","ctx","dimensions","axis","drawImage","Newcropimage","Image","src","onload","data1","naturalWidth","data2","naturalHeight","getContext","RatiofromOriginalandfixedHeight","NewBoxRatioWidth_WIDEIMAGE","RatiofromOriginalandfixedHeightx","NewBoxRatioWidth_LONGIMAGE","ratioh","ratiow","width","height","centerpreview","xtraZoom","centerCropCanvas","newcropCSSWidth","dragDistanceY","dragDistanceX","requestAnimationFrame","style","gg","cropaspectchange","complete","position","padding","margin","cursor","bottom","display","justifyContent","alignItems","alignContent","alignSelf","marginRight","fontSize","marginLeft","overflowX","zIndex","photo","index","visibility","top","overflow","left","paddingBottom","im","backgroundColor","borderRadius","marginTop","textAlign","boxShadow","fontWeight","fontFamily","UploadMenu","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvas } from \"./PreviewCanvas\";\r\n\r\nfunction UploadMenux({\r\n  optionsShow,\r\n  optinstopshowingReducer,\r\n  typeTop,\r\n  closeoptionsslide,\r\n  animationop,\r\n  optionsCollectImageRef,\r\n  handleTouchStartOptions,\r\n  handleTouchMoveOptions,\r\n  modalanimation,\r\n  nextSlidePc,\r\n  optionsImages,\r\n  ActiveSlide,\r\n  optionsNameData,\r\n  clickOptions,\r\n  optionsClickType,\r\n  getSliderWidthNew,\r\n  cropTOPLEVELScrollRef,\r\n  refWithimageData,\r\n}: any): JSX.Element {\r\n  const [selectedImage, setselectedImage] = useState<Array<any>>([]);\r\n  ///\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  const [cropimage, setcropimage] = useState<string | undefined>(\"\");\r\n  const [showCrop, setshowCrop] = useState<boolean>(false);\r\n\r\n  const [selectedImageUpload, setselectedImageUpload] = useState<any>(null);\r\n\r\n  const updateColor = useCallback(\r\n    (formData: any) => {\r\n      Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/upload`, formData)\r\n        .then((response) => {\r\n          if (response.data.message === \"ok\") {\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          alert(\"about color error\");\r\n        });\r\n    },\r\n    [REACT_APP_SUPERSTARZ_URL]\r\n  );\r\n\r\n  const imageHandleChange = (e: any) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const FileArray = Array.from(e.target.files).map((file: any) =>\r\n        URL.createObjectURL(file)\r\n      );\r\n\r\n      setselectedImage((prevImages: any) => prevImages.concat(FileArray));\r\n\r\n      setcropimage(FileArray[0]);\r\n      setshowCrop(true);\r\n\r\n      const formData = new FormData();\r\n\r\n      for (let i = 0; i < e.target.files.length; i++) {\r\n        formData.append(\"superImages\", e.target.files[i]);\r\n      }\r\n\r\n      ////updateColor(formData);\r\n      Array.from(e.target.files).map((file: any) => URL.revokeObjectURL(file));\r\n    }\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////SUPER CROP ///////////////////////////////////\r\n\r\n  const cropCanvasRef: any = useRef(null);\r\n\r\n  ////\r\n  ////\r\n  ////\r\n  const [cropArea, setcropArea] = useState<any>(null);\r\n\r\n  //\r\n  const [crop, setcrop] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [cropInitial, setcropInitial] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [cropOffset, setcropOffset] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [Drag, setDrag] = useState<boolean>(false);\r\n\r\n  const [SourceWidthForCropX, setSourceWidthForCropX] = useState(0);\r\n\r\n  const [SourceWidthForCropY, setSourceWidthForCropY] = useState(0);\r\n\r\n  const [cropwidth, setcropwidth] = useState(0);\r\n  const [cropheight, setcropheight] = useState(0);\r\n\r\n  const [canvasToimage, setcanvasToimage] = useState<boolean>(false);\r\n\r\n  const getpreviewFixedWidthRef = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropHeightRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getFixedCropWidthRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const [getCropHeight, setgetCropHeight] = useState(0);\r\n\r\n  const [getCropHeightRealImageRatio, setgetCropHeightRealImageRatio] =\r\n    useState(0);\r\n\r\n  const [getFixedCropWidth, setgetFixedCropWidth] = useState(0);\r\n\r\n  const [getpreviewFixedWidth, setgetpreviewFixedWidth] = useState(0);\r\n\r\n  const [CropImageHolder, setCropImageHolder] = useState<any>(null);\r\n\r\n  const [OriginalImageWidth, setOriginalImageWidth] = useState<number>(0);\r\n  const [OriginalImageHeight, setOriginalImageHeight] = useState<number>(0);\r\n\r\n  const [WideImageCheck, setWideImageCheck] = useState<boolean>(false);\r\n\r\n  const hdcanvasvalue = 2;\r\n\r\n  const [BoxCropActivated, setBoxCropActivated] = useState<boolean>(true);\r\n\r\n  const cropScrollRef: any = useRef(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\r\n  useEffect(() => {\r\n    if (\r\n      getpreviewFixedWidthRef.current &&\r\n      getpreviewFixedWidthRef.current.clientWidth\r\n    ) {\r\n      setgetpreviewFixedWidth(getpreviewFixedWidthRef.current.clientWidth);\r\n    }\r\n\r\n    if (getCropHeightRef.current && getCropHeightRef.current.clientWidth) {\r\n      setgetCropHeight(getCropHeightRef.current.clientHeight * hdcanvasvalue);\r\n      setgetCropHeightRealImageRatio(getCropHeightRef.current.clientHeight);\r\n    }\r\n\r\n    if (\r\n      getFixedCropWidthRef.current &&\r\n      getFixedCropWidthRef.current.clientWidth\r\n    ) {\r\n      setgetFixedCropWidth(getFixedCropWidthRef.current.clientWidth);\r\n    }\r\n  }, []);\r\n  ///\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const handleTouchStart = (e: any, type: any) => {\r\n    if (BoxCropActivated) {\r\n      if (type === 0) {\r\n        setcropInitial({\r\n          ...cropInitial,\r\n          x: e.clientX * 2.8 - cropOffset.x,\r\n          y: e.clientY * 3.3 - cropOffset.y,\r\n        });\r\n      } else {\r\n        setcropInitial({\r\n          ...cropInitial,\r\n          x: e.touches[0].clientX * 2.8 - cropOffset.x,\r\n          y: e.touches[0].clientY * 3.3 - cropOffset.y,\r\n        });\r\n      }\r\n      if (e.target) {\r\n        setDrag(true);\r\n      }\r\n    } else {\r\n      setBoxCropActivated(true);\r\n    }\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    setcropInitial({\r\n      ...cropInitial,\r\n      x: crop.x,\r\n      y: crop.y,\r\n    });\r\n    setDrag(false);\r\n  };\r\n\r\n  const handleTouchDrag = (e: any, type: any) => {\r\n    if (Drag) {\r\n      if (type === 0) {\r\n        setcrop({\r\n          ...crop,\r\n          x: e.clientX * 2.8 - cropInitial.x,\r\n          y: e.clientY * 3.3 - cropInitial.y,\r\n        });\r\n      } else {\r\n        setcrop({\r\n          ...crop,\r\n          x: e.touches[0].clientX * 2.8 - cropInitial.x,\r\n          y: e.touches[0].clientY * 3.3 - cropInitial.y,\r\n        });\r\n      }\r\n\r\n      setcropOffset({\r\n        ...cropOffset,\r\n        x: crop.x,\r\n        y: crop.y,\r\n      });\r\n    }\r\n  };\r\n\r\n  const draw = useCallback(\r\n    (ctx: any, dimensions: any, type: number, axis: number) => {\r\n      if (type === 1) {\r\n        ctx.drawImage(CropImageHolder, axis, 0, dimensions, getCropHeight);\r\n      } else if (type === 2) {\r\n        ctx.drawImage(CropImageHolder, 0, axis, getCropHeight, dimensions);\r\n      } else {\r\n        ctx.drawImage(\r\n          CropImageHolder,\r\n          0,\r\n          0,\r\n          OriginalImageWidth,\r\n          OriginalImageHeight\r\n        );\r\n      }\r\n    },\r\n    [OriginalImageWidth, OriginalImageHeight, CropImageHolder, getCropHeight]\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    const Newcropimage: string | undefined = new Image();\r\n    Newcropimage.src = cropimage;\r\n    Newcropimage.onload = function () {\r\n      setCropImageHolder(Newcropimage);\r\n\r\n      var data1 = Newcropimage.naturalWidth;\r\n      var data2 = Newcropimage.naturalHeight;\r\n      setOriginalImageWidth(data1);\r\n      setOriginalImageHeight(data2);\r\n\r\n      if (Newcropimage.naturalWidth > Newcropimage.naturalHeight) {\r\n        setWideImageCheck(true);\r\n      } else {\r\n        setWideImageCheck(false);\r\n      }\r\n\r\n      setcropwidth(data1);\r\n      setcropheight(data2);\r\n    };\r\n  }, [cropimage, BoxCropActivated, showCrop]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (CropImageHolder && cropCanvasRef.current) {\r\n      const ctx = cropCanvasRef.current.getContext(\"2d\");\r\n\r\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / getCropHeight;\r\n      var NewBoxRatioWidth_WIDEIMAGE =\r\n        OriginalImageWidth / RatiofromOriginalandfixedHeight;\r\n\r\n      setSourceWidthForCropX(NewBoxRatioWidth_WIDEIMAGE);\r\n\r\n      var RatiofromOriginalandfixedHeightx = OriginalImageWidth / getCropHeight;\r\n      var NewBoxRatioWidth_LONGIMAGE =\r\n        OriginalImageHeight / RatiofromOriginalandfixedHeightx;\r\n\r\n      setSourceWidthForCropY(NewBoxRatioWidth_LONGIMAGE);\r\n\r\n      var ratioh = (OriginalImageWidth * 3) / OriginalImageWidth;\r\n      var ratiow = (OriginalImageHeight * 3) / OriginalImageHeight;\r\n\r\n      if (BoxCropActivated) {\r\n        cropCanvasRef.current.width = getCropHeight;\r\n        cropCanvasRef.current.height = getCropHeight;\r\n      } else {\r\n        cropCanvasRef.current.width = OriginalImageWidth;\r\n        cropCanvasRef.current.height = OriginalImageHeight;\r\n      }\r\n\r\n      var centerpreview =\r\n        cropCanvasRef.current.width / 1.5 - NewBoxRatioWidth_LONGIMAGE / 1.5;\r\n\r\n      var xtraZoom = getCropHeight / NewBoxRatioWidth_WIDEIMAGE;\r\n\r\n      var centerCropCanvas =\r\n        cropCanvasRef.current.width / 2 - NewBoxRatioWidth_WIDEIMAGE / 2;\r\n\r\n      var RatiofromOriginalandfixedHeight =\r\n        OriginalImageHeight / getCropHeightRealImageRatio;\r\n      var newcropCSSWidth =\r\n        OriginalImageWidth / RatiofromOriginalandfixedHeight;\r\n\r\n      if (BoxCropActivated) {\r\n        var dragDistanceY = NewBoxRatioWidth_LONGIMAGE - getCropHeight;\r\n        var dragDistanceX = NewBoxRatioWidth_WIDEIMAGE - getCropHeight;\r\n\r\n        if (OriginalImageWidth > OriginalImageHeight) {\r\n          if (crop.x < -dragDistanceX) {\r\n            setcrop({ ...crop, x: -dragDistanceX });\r\n          } else if (crop.x > 0) {\r\n            setcrop({ ...crop, x: 0 });\r\n          } else {\r\n          }\r\n\r\n          requestAnimationFrame(() => {\r\n            draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, crop.x);\r\n          });\r\n        } else {\r\n          if (crop.y < -dragDistanceY) {\r\n            setcrop({ ...crop, y: -dragDistanceY });\r\n          } else if (crop.y > 0) {\r\n            setcrop({ ...crop, y: 0 });\r\n          } else {\r\n          }\r\n\r\n          requestAnimationFrame(() => {\r\n            draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, crop.y);\r\n          });\r\n        }\r\n\r\n        cropCanvasRef.current.style.width = `${\r\n          getCropHeight / hdcanvasvalue\r\n        }px`;\r\n        cropCanvasRef.current.style.height = `${\r\n          getCropHeight / hdcanvasvalue\r\n        }px`;\r\n      } else {\r\n        requestAnimationFrame(() => {\r\n          draw(ctx, 0, 3, 0);\r\n        });\r\n\r\n        cropCanvasRef.current.style.width = `${newcropCSSWidth}px`;\r\n        cropCanvasRef.current.style.height = `${getCropHeightRealImageRatio}px`;\r\n      }\r\n    }\r\n  }, [\r\n    CropImageHolder,\r\n    cropCanvasRef,\r\n    BoxCropActivated,\r\n    OriginalImageWidth,\r\n    OriginalImageHeight,\r\n    crop,\r\n    draw,\r\n  ]);\r\n  const gg = () => {};\r\n\r\n  const cropaspectchange = () => {\r\n    setBoxCropActivated((BoxCropActivated) => !BoxCropActivated);\r\n  };\r\n\r\n  const complete = () => {\r\n    setcanvasToimage(true);\r\n  };\r\n\r\n  //////////////////////////////////////////////////////////////////////SUPER CROP ///////////////////////////\r\n  return (\r\n    <>\r\n      {showCrop ? (\r\n        <>\r\n          {\" \"}\r\n          <Grid\r\n            container\r\n            ref={getCropHeightRef}\r\n            style={{\r\n              position: \"relative\",\r\n              width: \"100%\",\r\n              height: \"70%\",\r\n            }}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Grid item ref={getFixedCropWidthRef} xs={4}></Grid>\r\n            </Grid>\r\n\r\n            <canvas\r\n              onMouseDown={(e: any) => {\r\n                handleTouchStart(e, 0);\r\n              }}\r\n              onTouchStart={(e: any) => {\r\n                handleTouchStart(e, 1);\r\n              }}\r\n              onMouseMove={(e: any) => {\r\n                handleTouchDrag(e, 0);\r\n              }}\r\n              onTouchMove={(e: any) => {\r\n                handleTouchDrag(e, 1);\r\n              }}\r\n              onMouseUp={handleTouchEnd}\r\n              onTouchEnd={handleTouchEnd}\r\n              className={darkmodeReducer ? \"turdarkCrop\" : \"turdarkCrop\"}\r\n              ref={cropCanvasRef}\r\n              style={{\r\n                padding: \"0px\",\r\n                margin: \"auto\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            />\r\n\r\n            <Grid\r\n              container\r\n              style={{\r\n                padding: \"0px\",\r\n                bottom: \"13.6vh\",\r\n                margin: \"auto\",\r\n                width: `100%`,\r\n                height: \"0px\",\r\n                position: \"absolute\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n                alignSelf: \"center\",\r\n              }}\r\n            >\r\n              <Grid\r\n                item\r\n                xs={6}\r\n                style={{\r\n                  padding: \"0px\",\r\n                  height: \"0px\",\r\n                  margin: \"auto\",\r\n                  display: \"grid\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <CropIcon\r\n                  onClick={cropaspectchange}\r\n                  className={\r\n                    darkmodeReducer\r\n                      ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \"\r\n                      : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \"\r\n                  }\r\n                  style={{\r\n                    margin: \"auto\",\r\n                    marginRight: \"9%\",\r\n                    fontSize: \"2.9vw\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                xs={6}\r\n                style={{\r\n                  padding: \"0px\",\r\n                  height: \"0px\",\r\n                  margin: \"auto\",\r\n                  display: \"grid\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <CheckIcon\r\n                  onClick={complete}\r\n                  className={\r\n                    darkmodeReducer\r\n                      ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \"\r\n                      : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \"\r\n                  }\r\n                  style={{\r\n                    margin: \"auto\",\r\n                    marginLeft: \"9%\",\r\n                    fontSize: \"2.9vw\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              padding: \"0px\",\r\n            }}\r\n          >\r\n            <Grid\r\n              item\r\n              ref={getpreviewFixedWidthRef}\r\n              xs={5}\r\n              style={{\r\n                padding: \"0px\",\r\n              }}\r\n            ></Grid>\r\n          </Grid>\r\n          <Masonry\r\n            columns={matchPc ? (selectedImage.length > 2 ? 3 : 2) : 1}\r\n            spacing={0}\r\n            style={{\r\n              overflowX: \"hidden\",\r\n              position: \"relative\",\r\n              zIndex: 2,\r\n            }}\r\n          >\r\n            {selectedImage\r\n              ? selectedImage.map((photo: any, index: any) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <PreviewCanvas\r\n                        image={photo}\r\n                        cropTOPLEVELScrollRef={cropTOPLEVELScrollRef}\r\n                        index={index}\r\n                        setcropimage={setcropimage}\r\n                        setcrop={setcrop}\r\n                        crop={crop}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })\r\n              : null}{\" \"}\r\n          </Masonry>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {\" \"}\r\n          <input\r\n            onChange={imageHandleChange}\r\n            type=\"file\"\r\n            name=\"superImages\"\r\n            accept=\"image/*\"\r\n            multiple\r\n            id=\"file\"\r\n            style={{ visibility: \"hidden\" }}\r\n          />\r\n          <Grid\r\n            container\r\n            onTouchStart={handleTouchStartOptions}\r\n            onTouchMove={handleTouchMoveOptions}\r\n            style={{\r\n              zIndex: 1,\r\n              padding: \"0px\",\r\n              top: matchPc ? \"-2vh\" : \"0vh\",\r\n              position: \"relative\",\r\n              margin: \"0 auto\",\r\n              overflow: \"hidden\",\r\n              left: \"0px\",\r\n              height: matchPc ? \"24.4vh\" : \"20.5vh\",\r\n              paddingBottom: \"1px\",\r\n            }}\r\n          >\r\n            <animated.div ref={optionsCollectImageRef} style={modalanimation}>\r\n              {optionsImages.map((im: any, i: any) => (\r\n                <Grid key={i} item xs={12}>\r\n                  {ActiveSlide === 1 && i === 1 ? (\r\n                    <label htmlFor=\"file\">\r\n                      <div\r\n                        onClick={() => {\r\n                          clickOptions(i, optionsClickType, \"\");\r\n                        }}\r\n                        style={{\r\n                          cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\r\n                          width: `${getSliderWidthNew}px`,\r\n                          height: `${getSliderWidthNew}px`,\r\n                          backgroundColor: darkmodeReducer\r\n                            ? \"rgba(010,010,010, 0.68)\"\r\n                            : \"rgba(220,220,220, 0.7)\",\r\n                          borderRadius: \"50%\",\r\n                          marginTop: \"2.15vh\",\r\n                          textAlign: \"center\",\r\n                          alignItems: \"center\",\r\n                          display: \"grid\",\r\n                          justifyContent: \"center\",\r\n                          boxShadow: darkmodeReducer\r\n                            ? ActiveSlide === i\r\n                              ? colortypeReducer === 0\r\n                                ? `0 0 5.5px ${colorReducerdark}`\r\n                                : `0 0 5.5px ${colorReducer}`\r\n                              : \"0 0 5.5px#aaaaaa\"\r\n                            : ActiveSlide === i\r\n                            ? `0 0 5.5px ${colorReducer}`\r\n                            : \"0 0 5.45px#222222\",\r\n                        }}\r\n                      >\r\n                        <PhotoIcon\r\n                          style={{\r\n                            fontSize: matchPc ? \"2vw\" : \"5vh\",\r\n                            color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                          }}\r\n                          className=\"zuperkinginfo\"\r\n                        />\r\n                      </div>\r\n                    </label>\r\n                  ) : (\r\n                    <>\r\n                      {\" \"}\r\n                      <div\r\n                        onClick={() => {\r\n                          clickOptions(i, optionsClickType, \"\");\r\n                        }}\r\n                        style={{\r\n                          cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\r\n                          width: `${getSliderWidthNew}px`,\r\n                          height: `${getSliderWidthNew}px`,\r\n                          backgroundColor: darkmodeReducer\r\n                            ? \"rgba(010,010,010, 0.68)\"\r\n                            : \"rgba(220,220,220, 0.7)\",\r\n                          borderRadius: \"50%\",\r\n                          marginTop: \"2.15vh\",\r\n                          textAlign: \"center\",\r\n                          alignItems: \"center\",\r\n                          display: \"grid\",\r\n\r\n                          justifyContent: \"center\",\r\n                          boxShadow: darkmodeReducer\r\n                            ? ActiveSlide === i\r\n                              ? colortypeReducer === 0\r\n                                ? `0 0 5.5px ${colorReducerdark}`\r\n                                : `0 0 5.5px ${colorReducer}`\r\n                              : \"0 0 5.5px#aaaaaa\"\r\n                            : ActiveSlide === i\r\n                            ? `0 0 5.5px ${colorReducer}`\r\n                            : \"0 0 5.45px#222222\",\r\n                        }}\r\n                      >\r\n                        {i === 0 ? (\r\n                          <MusicNoteIcon\r\n                            style={{\r\n                              fontSize: matchPc ? \"2vw\" : \"5vh\",\r\n                              color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                            }}\r\n                            className=\"zuperkinginfo\"\r\n                          />\r\n                        ) : null}\r\n                        {i === 1 ? (\r\n                          <PhotoIcon\r\n                            style={{\r\n                              fontSize: matchPc ? \"2vw\" : \"5vh\",\r\n                              color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                            }}\r\n                            className=\"zuperkinginfo\"\r\n                          />\r\n                        ) : null}\r\n                        {i === 2 ? (\r\n                          <GifIcon\r\n                            style={{\r\n                              fontSize: matchPc ? \"2.5vw\" : \"5vh\",\r\n                              color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                            }}\r\n                            className=\"zuperkinginfo\"\r\n                          />\r\n                        ) : null}\r\n                        {i === 3 ? (\r\n                          <ChevronRightIcon\r\n                            style={{\r\n                              fontSize: matchPc ? \"2.3vw\" : \"5vh\",\r\n                              color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                            }}\r\n                            className=\"zuperkinginfo\"\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                      margin: \"auto\",\r\n                      textAlign: \"center\",\r\n                      position: \"relative\",\r\n                      bottom: \"-0.5em\",\r\n                    }}\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      style={{\r\n                        fontSize: matchPc ? \"1.1vw\" : \"2vh\",\r\n                        fontWeight: \"bolder\",\r\n                        fontFamily: \"Arial, Helvetica, sans-serif\",\r\n                        visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\r\n                        color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      {optionsNameData[i]}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              ))}\r\n            </animated.div>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const UploadMenu = React.memo(UploadMenux);\r\n"]},"metadata":{},"sourceType":"module"}