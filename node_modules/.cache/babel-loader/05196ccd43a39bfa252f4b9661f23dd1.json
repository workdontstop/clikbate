{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import * as CSS from \"csstype\";\r\n\r\nexport type IGrid =\r\n  | \"auto\"\r\n  | true\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4\r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n  | 12;\r\n\r\nexport interface ILogButtons {\r\n  loginstyle: CSS.Properties;\r\n  signupstyle: CSS.Properties;\r\n  match: boolean;\r\n  OpenModalForm: (formtypedata: number) => void;\r\n}\r\n\r\nexport interface ImodalFormSignupError {\r\n  ErrorType: number;\r\n  textField: string;\r\n  errorFormChecking: boolean;\r\n  type: boolean;\r\n  cantPassBadEmail: boolean;\r\n  ErrorDisplay: number;\r\n  ErrorData: string | null;\r\n  darkmode: boolean;\r\n  WidthHolder: string;\r\n  device: string;\r\n}\r\n\r\nexport interface ImodalFormLoginError {\r\n  device: string;\r\n  darkmode: boolean;\r\n  WidthHolder: string;\r\n  type: boolean;\r\n  ErrorDisplay: number;\r\n}\r\n\r\nexport interface IOption {\r\n  darkmode: boolean;\r\n  setDarkmode: (darkmodex: boolean) => void;\r\n  marginData: CSS.Properties;\r\n  fontData: CSS.Properties;\r\n  superFont: string;\r\n  switchsize: \"medium\" | \"small\" | undefined;\r\n  optionsContainer: string;\r\n}\r\n\r\nexport interface IOptionInnerModal {\r\n  closemodal: (backbutton: number) => void;\r\n  showModal: boolean;\r\n  setShowModal: (showModal: boolean) => void;\r\n  darkmode: boolean;\r\n  setDarkmode: (darkmodex: boolean) => void;\r\n  marginData: CSS.Properties;\r\n  fontData: CSS.Properties;\r\n  switchsize: \"medium\" | \"small\" | undefined;\r\n}\r\n\r\nexport interface IServerError {\r\n  device: string;\r\n  setServerErrorData: (serverErrorData: string | null) => void;\r\n  serverErrorDisplay: number;\r\n  serverErrorData: string | null;\r\n  darkmode: boolean;\r\n  serverEmojiplain: boolean;\r\n}\r\n\r\nexport interface ImodalLog {\r\n  formtype: number;\r\n  screenHeight: number;\r\n  signupstyle: CSS.Properties;\r\n  loginstyle: CSS.Properties;\r\n  CloseModalForm: (DeviceBackButtonClicked: number) => void;\r\n  showModalForm: boolean;\r\n  PaperStyle: string;\r\n  darkmode: boolean;\r\n  zoomedModal: boolean;\r\n  setZoomedModal: (zoomedModal: boolean) => void;\r\n  mobileZoom: boolean;\r\n  setMobileZoom: (mobileZoom: boolean) => void;\r\n}\r\n\r\nexport interface IDialogeDataMobile {\r\n  darkmode: boolean;\r\n  PaperStyle: string;\r\n  formtype: number;\r\n  loginstyle: CSS.Properties;\r\n  signupstyle: CSS.Properties;\r\n  showModalForm: boolean;\r\n  modalanimation: any;\r\n  screenHeight: number;\r\n  CloseModalForm: (DeviceBackButtonClicked: number) => void;\r\n  zoomedModal: boolean;\r\n  setZoomedModal: (zoomedModal: boolean) => void;\r\n  mobileZoom: boolean;\r\n  setMobileZoom: (mobileZoom: boolean) => void;\r\n  serverEmojiplain: boolean;\r\n  serverErrorData: string | null;\r\n  setServerErrorData: (serverErrorData: string | null) => void;\r\n  serverErrorDisplay: number;\r\n  showimage: string;\r\n  onimageload: (e: any) => void;\r\n  updateLoginvalues: (e: any) => void;\r\n  rawLoginValues: {\r\n    inputedUsername: string;\r\n    inputedPassword: string;\r\n  };\r\n  errorsLoginValues: {\r\n    inputedUsername: number;\r\n    inputedPassword: number;\r\n  };\r\n  ShowLoginPasswordForaWhile: () => void;\r\n  loginShowPassword: boolean;\r\n  logmein: () => void;\r\n  errorFormChecking: {\r\n    inputedUsername: boolean;\r\n    inputedPassword: boolean;\r\n    inputedEmail: boolean;\r\n  };\r\n  cantPassBadEmail: boolean;\r\n  emailErrorDisplay: number;\r\n  emailErrorData: string | null;\r\n  updateSignvalues: (e: any) => void;\r\n  rawSignupValues: {\r\n    inputedEmail: string;\r\n    inputedUsername: string;\r\n    inputedPassword: string;\r\n  };\r\n  ShowSignupPasswordForaWhile: () => void;\r\n  signupShowPassword: boolean;\r\n  errorsSignupValues: {\r\n    inputedEmail: number;\r\n    inputedUsername: number;\r\n    inputedPassword: number;\r\n  };\r\n  errorFormCheckinginputedPassword: boolean;\r\n  usernameErrorDisplay: number;\r\n  usernameErrorData: string | null;\r\n  signmeup: () => void;\r\n  passwordErrorDisplay: number;\r\n  passwordErrorData: string | null;\r\n}\r\n\r\nexport interface IDialogeDataPc {\r\n  modalanimation: any;\r\n  modalanimationTwo: any;\r\n  ShowLoginPasswordForaWhile: () => void;\r\n  darkmode: boolean;\r\n  PaperStyle: string;\r\n  loginstyle: CSS.Properties;\r\n  signupstyle: CSS.Properties;\r\n  showModalForm: boolean;\r\n  screenHeight: number;\r\n  CloseModalForm: (DeviceBackButtonClicked: number) => void;\r\n  zoomedModal: boolean;\r\n  setZoomedModal: (zoomedModal: boolean) => void;\r\n  mobileZoom: boolean;\r\n  setMobileZoom: (mobileZoom: boolean) => void;\r\n}\r\n\r\nexport interface ItextfIeldLogin {\r\n  updateLoginvalues: (e: any) => void;\r\n  rawLoginValues: {\r\n    inputedUsername: string;\r\n    inputedPassword: string;\r\n  };\r\n  ShowLoginPasswordForaWhile: any;\r\n  loginShowPassword: boolean;\r\n  size: \"small\" | \"medium\" | undefined;\r\n  passwordType: boolean;\r\n}\r\n\r\nexport interface ItextfIeldSignup {\r\n  updateSignvalues: (e: any) => void;\r\n  rawSignupValues: {\r\n    inputedUsername: string;\r\n    inputedPassword: string;\r\n    inputedEmail: string;\r\n  };\r\n  ShowSignupPasswordForaWhile: any;\r\n  signupShowPassword: boolean;\r\n  size: \"small\" | \"medium\" | undefined;\r\n  passwordType: boolean;\r\n  emailType: boolean;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}