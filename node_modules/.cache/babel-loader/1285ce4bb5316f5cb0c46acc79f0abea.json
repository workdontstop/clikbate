{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\Clikbate\\\\src\\\\upload\\\\VideoEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useCallback } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { matchMobile } from \"../DetectDevice\";\nimport AdjustIcon from '@material-ui/icons/Adjust';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fs = require('fs');\nconst {\n  createFFmpeg,\n  fetchFile\n} = require('@ffmpeg/ffmpeg');\nfunction VideoEditorx({\n  VideoUrl,\n  VideoUrl2,\n  ShowVideo2,\n  ShowVideo,\n  setShowVideo2,\n  setShowVideo,\n  setinteractContentvideo2,\n  setinteractContentvideo,\n  setinteractContenttype,\n  setinteractContenttype2,\n  callDelInteract,\n  setadjustinteract1,\n  setadjustinteract2\n}) {\n  _s();\n  ///\n\n  const videoPlayerRef = useRef(null);\n  const videoPlayerRefx = useRef(null);\n  const Timer2 = useRef(null);\n  const Timer1 = useRef(null);\n  const Timer3 = useRef(null);\n  const wait = 2000;\n  const ffmpeg = createFFmpeg({\n    log: true\n  });\n  const makeVideo = async () => {\n    await ffmpeg.load();\n\n    // Write the input video file to the FFmpeg FS (file system)\n    ffmpeg.FS('writeFile', 'input.mp4', await fetchFile(VideoUrl));\n\n    // Run FFmpeg command to cut the video\n    // -ss: Start time (in this case, 1 minute and 15 seconds)\n    // -t: Duration of the cut (10 seconds)\n    // -c copy: Use the same codecs for the output (fast processing)\n    await ffmpeg.run('-ss', '00:01:15', '-t', '10', '-i', 'input.mp4', '-c', 'copy', 'output.mp4');\n\n    // Read the output file from FFmpeg FS\n    const output = ffmpeg.FS('readFile', 'output.mp4');\n\n    // Create a URL for the output file\n    const outputURL = URL.createObjectURL(new Blob([output.buffer], {\n      type: 'video/mp4'\n    }));\n\n    // Do something with the output URL, e.g., download it or display it in the browser\n    // For example, to download the file:\n    const a = document.createElement('a');\n    a.href = outputURL;\n    a.download = 'output.mp4';\n    a.click();\n  };\n\n  ///\n  ///DARKMODE FROM REDUX\n\n  const {\n    darkmode\n  } = useSelector(state => ({\n    ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const [currentTimestamp, setCurrentTimestamp] = useState(0);\n  const updateCurrentTimestamp = () => {\n    sethideend(false);\n    if (videoPlayerRef.current) {\n      var x = videoPlayerRef.current.currentTime;\n      setCurrentTimestamp(x);\n      setprocessing(true);\n      startRecording(VideoUrl, x - 1, 17);\n    }\n  };\n\n  // New state for recorded video URL\n  const [recordedVideoUrl, setRecordedVideoUrl] = useState(null);\n  const [RecordedBlob, setRecordedBlob] = useState(null);\n  const [rec, setRec] = useState(false);\n  const [processing, setprocessing] = useState(false);\n  const recorderRef = useRef(null);\n  const [hideend, sethideend] = useState(false);\n  const [Preview, setPreview] = useState(false);\n  const stopRecording = () => {\n    if (recorderRef.current && recorderRef.current.state === \"recording\") {\n      recorderRef.current.stop();\n      if (videoPlayerRef.current) {\n        videoPlayerRef.current.pause();\n      }\n      if (Timer2.current) {\n        clearTimeout(Timer2.current);\n      }\n      if (Timer1.current) {\n        clearTimeout(Timer1.current);\n      }\n      if (Timer3.current) {\n        clearTimeout(Timer3.current);\n      }\n      sethideend(true);\n      Timer3.current = setTimeout(() => {\n        setprocessing(false);\n      }, wait);\n    }\n  };\n  const startRecording = (sourceVideoUrl, startTime, duration) => {\n    const video = videoPlayerRef.current;\n    if (video) {\n      video.src = sourceVideoUrl;\n      video.currentTime = startTime;\n      video.onloadedmetadata = () => {\n        video.currentTime = startTime;\n      };\n      video.onseeked = () => {\n        video.play();\n        const stream = video.captureStream();\n\n        // Specify MIME type and quality parameters\n        const options = {\n          mimeType: 'video/webm; codecs=vp9',\n          // or 'video/mp4' based on browser support\n          videoBitsPerSecond: 500000 // Adjust bitrate as needed\n        };\n        if (MediaRecorder.isTypeSupported(options.mimeType)) {\n          recorderRef.current = new MediaRecorder(stream, options);\n        } else {\n          recorderRef.current = new MediaRecorder(stream); // Fallback to default settings\n        }\n        const chunks = [];\n        recorderRef.current.ondataavailable = e => chunks.push(e.data);\n        recorderRef.current.onstop = () => {\n          const blob = new Blob(chunks, {\n            type: options.mimeType\n          });\n          setRecordedBlob(blob);\n          const url = URL.createObjectURL(blob);\n          setRecordedVideoUrl(url);\n          video.pause();\n          if (Timer1.current) {\n            clearTimeout(Timer1.current);\n          }\n          if (Timer2.current) {\n            clearTimeout(Timer2.current);\n          }\n          Timer1.current = setTimeout(() => {\n            setRec(true);\n            setprocessing(false);\n          }, wait);\n        };\n        recorderRef.current.start();\n        if (Timer2.current) {\n          clearTimeout(Timer2.current);\n        }\n        if (Timer1.current) {\n          clearTimeout(Timer1.current);\n        }\n        Timer2.current = setTimeout(() => {\n          recorderRef.current && recorderRef.current.stop();\n        }, duration * 1000);\n      };\n      video.load();\n    }\n  }; // Call this function when you want to start recording\n  // For example: startRecording(VideoUrl, 0, 10) for a 10-second clip from the start\n\n  const close = save => {\n    const video = videoPlayerRef.current;\n    if (video) {\n      video.pause();\n    }\n    if (save) {} else {\n      if (ShowVideo2) {\n        callDelInteract(false);\n      } else {\n        callDelInteract(true);\n      }\n    }\n    setShowVideo(false);\n    setPreview(false);\n    setRec(false);\n    setShowVideo2(false);\n  };\n  const Save = useCallback(() => {\n    if (ShowVideo2) {\n      setinteractContentvideo2(RecordedBlob);\n      setinteractContenttype2(1);\n      setadjustinteract2(true);\n      close(true);\n    } else {\n      setinteractContentvideo(RecordedBlob);\n      setinteractContenttype(1);\n      setadjustinteract1(true);\n      close(true);\n    }\n  }, [RecordedBlob, ShowVideo2]);\n  const {\n    PaperStyleLight,\n    PaperStyleDark\n  } = useSelector(state => ({\n    ...state.PaperReducerLightnDark\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      style: {\n        display: ShowVideo ? 'block' : 'none',\n        position: 'fixed',\n        top: '0vh',\n        height: '100vh',\n        backgroundImage: darkmodeReducer ? PaperStyleDark : PaperStyleLight,\n        width: '100%',\n        margin: 'auto',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoPlayerRef,\n        src: VideoUrl,\n        controls: true,\n        style: {\n          width: '50%',\n          margin: 'auto',\n          textAlign: 'center',\n          display: Preview ? 'none' : 'block'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), recordedVideoUrl && rec ? /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoPlayerRefx,\n        src: recordedVideoUrl,\n        controls: true,\n        style: {\n          width: '50%',\n          margin: 'auto',\n          textAlign: 'center',\n          display: Preview ? 'block' : 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 36\n      }, this) : null, Preview ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          bottom: '-7vh',\n          position: 'relative',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          fontSize: '24px',\n          fontFamily: 'Helvetica, Arial, sans-serif',\n          color: darkmodeReducer ? \"#ffffff\" : '#000000'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          onClick: () => {\n            ////setRec(false);\n            /////setRecordedVideoUrl(null);\n            if (videoPlayerRefx.current) {\n              videoPlayerRefx.current.pause();\n            }\n            setPreview(false);\n          },\n          style: {\n            border: darkmodeReducer ? '2px solid white' : '2px solid black',\n            cursor: 'pointer',\n            height: '15vh',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: \"EDIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          onClick: () => {\n            if (videoPlayerRefx.current) {\n              videoPlayerRefx.current.pause();\n            }\n            Save();\n          },\n          xs: 3,\n          style: {\n            cursor: 'pointer',\n            height: '15vh',\n            border: darkmodeReducer ? '2px solid white' : '2px solid black',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '24px'\n          },\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          bottom: '-7vh',\n          position: 'relative',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          fontSize: '24px',\n          fontFamily: 'Helvetica, Arial, sans-serif',\n          color: darkmodeReducer ? \"#ffffff\" : '#000000'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          onClick: () => {\n            makeVideo();\n          },\n          style: {\n            cursor: processing ? 'default' : 'pointer',\n            opacity: processing ? 0.25 : 1,\n            height: '15vh',\n            border: darkmodeReducer ? '2px solid white' : '2px solid black',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: \"START\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), processing ? /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"blinking\",\n          item: true,\n          xs: 2,\n          style: {\n            height: '15vh',\n            border: '0px solid white',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '24px',\n            visibility: 'visible'\n          },\n          children: /*#__PURE__*/_jsxDEV(AdjustIcon, {\n            className: darkmodeReducer ? \"dontallowhighlighting zuperkingIcon \" : \"dontallowhighlighting zuperkingIcon  \",\n            style: {\n              margin: \"auto\",\n              fontSize: matchMobile ? `3vh` : `2.5vw`,\n              color: 'red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          onClick: () => {\n            if (videoPlayerRef.current) {\n              videoPlayerRef.current.pause();\n            }\n            setPreview(true);\n          },\n          style: {\n            cursor: 'pointer',\n            height: '15vh',\n            border: darkmodeReducer ? '2px solid white' : '2px solid black',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '24px',\n            visibility: recordedVideoUrl && rec ? 'visible' : 'hidden'\n          },\n          children: \"PREVIEW\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          onClick: () => {\n            if (hideend) {} else {\n              stopRecording();\n            }\n          },\n          xs: 2,\n          style: {\n            cursor: processing ? hideend ? 'default' : 'pointer' : 'default',\n            opacity: processing ? hideend ? 0.25 : 1 : 0.25,\n            height: '15vh',\n            border: darkmodeReducer ? '2px solid white' : '2px solid black',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '24px'\n          },\n          children: \"END\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        margin: \"auto\",\n        textAlign: \"right\",\n        left: '5px',\n        height: \"20px\",\n        position: 'fixed',\n        top: '3vh',\n        right: '3vw',\n        display: ShowVideo ? 'block' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        onClick: () => {\n          if (videoPlayerRefx.current) {\n            videoPlayerRefx.current.pause();\n          }\n          close(false);\n        },\n        className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \",\n        style: {\n          margin: \"auto\",\n          color: \"#ffffff\",\n          fontSize: matchMobile ? `3vh` : `2.5vw`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(VideoEditorx, \"Hx3QuDAvPFjrQnOSKr3mWrfbvcg=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = VideoEditorx;\nexport const VideoEditor = /*#__PURE__*/React.memo(VideoEditorx);\n_c2 = VideoEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"VideoEditorx\");\n$RefreshReg$(_c2, \"VideoEditor\");","map":{"version":3,"names":["React","useRef","useState","useCallback","Grid","useSelector","CloseIcon","matchMobile","AdjustIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","fs","require","createFFmpeg","fetchFile","VideoEditorx","VideoUrl","VideoUrl2","ShowVideo2","ShowVideo","setShowVideo2","setShowVideo","setinteractContentvideo2","setinteractContentvideo","setinteractContenttype","setinteractContenttype2","callDelInteract","setadjustinteract1","setadjustinteract2","_s","videoPlayerRef","videoPlayerRefx","Timer2","Timer1","Timer3","wait","ffmpeg","log","makeVideo","load","FS","run","output","outputURL","URL","createObjectURL","Blob","buffer","type","a","document","createElement","href","download","click","darkmode","state","GlobalReducer","darkmodeReducer","currentTimestamp","setCurrentTimestamp","updateCurrentTimestamp","sethideend","current","x","currentTime","setprocessing","startRecording","recordedVideoUrl","setRecordedVideoUrl","RecordedBlob","setRecordedBlob","rec","setRec","processing","recorderRef","hideend","Preview","setPreview","stopRecording","stop","pause","clearTimeout","setTimeout","sourceVideoUrl","startTime","duration","video","src","onloadedmetadata","onseeked","play","stream","captureStream","options","mimeType","videoBitsPerSecond","MediaRecorder","isTypeSupported","chunks","ondataavailable","e","push","data","onstop","blob","url","start","close","save","Save","PaperStyleLight","PaperStyleDark","PaperReducerLightnDark","children","xs","style","display","position","top","height","backgroundImage","width","margin","textAlign","ref","controls","fileName","_jsxFileName","lineNumber","columnNumber","item","bottom","alignItems","justifyContent","fontSize","fontFamily","color","onClick","border","cursor","borderRadius","opacity","className","visibility","left","right","_c","VideoEditor","memo","_c2","$RefreshReg$"],"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/Clikbate/src/upload/VideoEditor.tsx"],"sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useCallback,\r\n} from \"react\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { AnySoaRecord } from \"dns\";\r\nimport { PreviewCanvas } from \"./PreviewCanvas\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport AdjustIcon from '@material-ui/icons/Adjust';\r\nconst fs = require('fs');\r\nconst { createFFmpeg, fetchFile } = require('@ffmpeg/ffmpeg');\r\n\r\n\r\n\r\ninterface HTMLVideoElementWithCapture extends HTMLVideoElement {\r\n  captureStream(): MediaStream;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction VideoEditorx({ VideoUrl, VideoUrl2, ShowVideo2, ShowVideo, setShowVideo2, setShowVideo,\r\n  setinteractContentvideo2,\r\n  setinteractContentvideo,\r\n  setinteractContenttype,\r\n  setinteractContenttype2, callDelInteract, setadjustinteract1, setadjustinteract2 }: any): JSX.Element {\r\n\r\n  ///\r\n\r\n  const videoPlayerRef = useRef<HTMLVideoElementWithCapture>(null);\r\n\r\n  const videoPlayerRefx = useRef<HTMLVideoElementWithCapture>(null);\r\n\r\n\r\n  const Timer2 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const Timer1 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const Timer3 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const wait = 2000;\r\n\r\n\r\n\r\n\r\n  const ffmpeg = createFFmpeg({ log: true });\r\n\r\n  const makeVideo = async () => {\r\n    await ffmpeg.load();\r\n\r\n\r\n\r\n    // Write the input video file to the FFmpeg FS (file system)\r\n    ffmpeg.FS('writeFile', 'input.mp4', await fetchFile(VideoUrl));\r\n\r\n    // Run FFmpeg command to cut the video\r\n    // -ss: Start time (in this case, 1 minute and 15 seconds)\r\n    // -t: Duration of the cut (10 seconds)\r\n    // -c copy: Use the same codecs for the output (fast processing)\r\n    await ffmpeg.run('-ss', '00:01:15', '-t', '10', '-i', 'input.mp4', '-c', 'copy', 'output.mp4');\r\n\r\n    // Read the output file from FFmpeg FS\r\n    const output = ffmpeg.FS('readFile', 'output.mp4');\r\n\r\n    // Create a URL for the output file\r\n    const outputURL = URL.createObjectURL(new Blob([output.buffer], { type: 'video/mp4' }));\r\n\r\n    // Do something with the output URL, e.g., download it or display it in the browser\r\n    // For example, to download the file:\r\n    const a = document.createElement('a');\r\n    a.href = outputURL;\r\n    a.download = 'output.mp4';\r\n    a.click();\r\n  };\r\n\r\n\r\n\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  const [currentTimestamp, setCurrentTimestamp] = useState(0);\r\n\r\n  const updateCurrentTimestamp = () => {\r\n    sethideend(false);\r\n    if (videoPlayerRef.current) {\r\n\r\n      var x = videoPlayerRef.current.currentTime;\r\n      setCurrentTimestamp(x);\r\n\r\n      setprocessing(true);\r\n\r\n      startRecording(VideoUrl, x - 1, 17);\r\n    }\r\n  };\r\n\r\n  // New state for recorded video URL\r\n  const [recordedVideoUrl, setRecordedVideoUrl] = useState(null);\r\n  const [RecordedBlob, setRecordedBlob] = useState(null);\r\n\r\n\r\n  const [rec, setRec] = useState(false);\r\n\r\n  const [processing, setprocessing] = useState(false);\r\n\r\n  const recorderRef: any = useRef(null);\r\n\r\n  const [hideend, sethideend] = useState(false);\r\n\r\n  const [Preview, setPreview] = useState(false);\r\n\r\n\r\n  const stopRecording = () => {\r\n    if (recorderRef.current && recorderRef.current.state === \"recording\") {\r\n      recorderRef.current.stop();\r\n      if (videoPlayerRef.current) {\r\n        videoPlayerRef.current.pause();\r\n      }\r\n\r\n      if (Timer2.current) {\r\n        clearTimeout(Timer2.current);\r\n      }\r\n\r\n      if (Timer1.current) {\r\n        clearTimeout(Timer1.current);\r\n      }\r\n      if (Timer3.current) {\r\n        clearTimeout(Timer3.current);\r\n      }\r\n      sethideend(true);\r\n      Timer3.current = setTimeout(() => {\r\n        setprocessing(false);\r\n      }, wait);\r\n    }\r\n  };\r\n\r\n\r\n  const startRecording = (sourceVideoUrl: any, startTime: any, duration: any) => {\r\n\r\n    const video = videoPlayerRef.current;\r\n\r\n    if (video) {\r\n      video.src = sourceVideoUrl;\r\n      video.currentTime = startTime;\r\n\r\n      video.onloadedmetadata = () => {\r\n        video.currentTime = startTime;\r\n      };\r\n\r\n      video.onseeked = () => {\r\n        video.play();\r\n        const stream = video.captureStream();\r\n\r\n        // Specify MIME type and quality parameters\r\n        const options = {\r\n          mimeType: 'video/webm; codecs=vp9', // or 'video/mp4' based on browser support\r\n          videoBitsPerSecond: 500000 // Adjust bitrate as needed\r\n        };\r\n\r\n        if (MediaRecorder.isTypeSupported(options.mimeType)) {\r\n          recorderRef.current = new MediaRecorder(stream, options);\r\n        } else {\r\n          recorderRef.current = new MediaRecorder(stream); // Fallback to default settings\r\n        }\r\n\r\n        const chunks: any = [];\r\n        recorderRef.current.ondataavailable = (e: any) => chunks.push(e.data);\r\n        recorderRef.current.onstop = () => {\r\n          const blob: any = new Blob(chunks, { type: options.mimeType });\r\n          setRecordedBlob(blob);\r\n          const url: any = URL.createObjectURL(blob);\r\n          setRecordedVideoUrl(url);\r\n          video.pause();\r\n\r\n          if (Timer1.current) {\r\n            clearTimeout(Timer1.current);\r\n          }\r\n          if (Timer2.current) {\r\n            clearTimeout(Timer2.current);\r\n          }\r\n\r\n          Timer1.current = setTimeout(() => {\r\n            setRec(true);\r\n            setprocessing(false);\r\n          }, wait);\r\n        };\r\n\r\n        recorderRef.current.start();\r\n        if (Timer2.current) {\r\n          clearTimeout(Timer2.current);\r\n        }\r\n\r\n        if (Timer1.current) {\r\n          clearTimeout(Timer1.current);\r\n        }\r\n        Timer2.current = setTimeout(() => {\r\n          recorderRef.current && recorderRef.current.stop();\r\n        }, duration * 1000);\r\n      };\r\n\r\n      video.load();\r\n    }\r\n  };  // Call this function when you want to start recording\r\n  // For example: startRecording(VideoUrl, 0, 10) for a 10-second clip from the start\r\n\r\n\r\n  const close = (save: boolean) => {\r\n\r\n    const video = videoPlayerRef.current;\r\n    if (video) { video.pause(); }\r\n\r\n\r\n    if (save) { } else {\r\n      if (ShowVideo2) { callDelInteract(false); } else { callDelInteract(true); }\r\n    }\r\n\r\n    setShowVideo(false);\r\n    setPreview(false);\r\n    setRec(false);\r\n    setShowVideo2(false);\r\n\r\n  }\r\n\r\n  const Save = useCallback(() => {\r\n    if (ShowVideo2) {\r\n\r\n      setinteractContentvideo2(RecordedBlob);\r\n      setinteractContenttype2(1);\r\n      setadjustinteract2(true);\r\n      close(true);\r\n\r\n    } else {\r\n\r\n      setinteractContentvideo(RecordedBlob);\r\n      setinteractContenttype(1);\r\n      setadjustinteract1(true);\r\n      close(true);\r\n\r\n    }\r\n  }, [RecordedBlob, ShowVideo2])\r\n\r\n\r\n\r\n\r\n  const { PaperStyleLight, PaperStyleDark } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.PaperReducerLightnDark,\r\n    })\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <Grid xs={12} style={{\r\n        display: ShowVideo ? 'block' : 'none', position: 'fixed', top: '0vh', height: '100vh',\r\n        backgroundImage: darkmodeReducer ? PaperStyleDark : PaperStyleLight,\r\n        width: '100%', margin: 'auto', textAlign: 'center'\r\n      }} >\r\n        <video ref={videoPlayerRef} src={VideoUrl} controls style={{\r\n          width: '50%', margin: 'auto', textAlign: 'center', display: Preview ? 'none' : 'block'\r\n\r\n        }}></video>\r\n\r\n        {recordedVideoUrl && rec ? <video ref={videoPlayerRefx} src={recordedVideoUrl} controls style={{\r\n          width: '50%', margin: 'auto', textAlign: 'center', display: Preview ? 'block' : 'none'\r\n\r\n        }}></video> : null}\r\n\r\n\r\n\r\n\r\n        {Preview ? <Grid item xs={12} style={{\r\n          bottom: '-7vh', position: 'relative', display: 'flex', alignItems: 'center',\r\n          justifyContent: 'center', fontSize: '24px', fontFamily: 'Helvetica, Arial, sans-serif', color: darkmodeReducer ? \"#ffffff\" : '#000000',\r\n        }}>\r\n          <Grid item xs={1}\r\n            onClick={() => {\r\n              ////setRec(false);\r\n              /////setRecordedVideoUrl(null);\r\n              if (videoPlayerRefx.current) {\r\n                videoPlayerRefx.current.pause();\r\n              }\r\n              setPreview(false);\r\n            }}\r\n            style={{\r\n              border: darkmodeReducer ? '2px solid white' : '2px solid black',\r\n              cursor: 'pointer',\r\n              height: '15vh', borderRadius: '8px', display: 'flex', alignItems: 'center', justifyContent: 'center',\r\n\r\n            }}>\r\n            EDIT\r\n          </Grid>\r\n\r\n\r\n          <Grid item onClick={() => {\r\n            if (videoPlayerRefx.current) {\r\n              videoPlayerRefx.current.pause();\r\n            }\r\n            Save();\r\n          }} xs={3} style={{\r\n            cursor: 'pointer',\r\n            height: '15vh', border: darkmodeReducer ? '2px solid white' : '2px solid black', borderRadius: '8px',\r\n            display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '24px',\r\n          }}>\r\n            SAVE\r\n          </Grid>\r\n        </Grid> : <Grid item xs={12} style={{\r\n          bottom: '-7vh', position: 'relative', display: 'flex', alignItems: 'center',\r\n          justifyContent: 'center', fontSize: '24px', fontFamily: 'Helvetica, Arial, sans-serif',\r\n          color: darkmodeReducer ? \"#ffffff\" : '#000000',\r\n        }}>\r\n          <Grid item xs={2}\r\n\r\n            onClick={() => {\r\n              makeVideo();\r\n            }}\r\n            style={{\r\n              cursor: processing ? 'default' : 'pointer',\r\n              opacity: processing ? 0.25 : 1,\r\n              height: '15vh', border: darkmodeReducer ? '2px solid white' : '2px solid black',\r\n\r\n              borderRadius: '8px', display: 'flex', alignItems: 'center', justifyContent: 'center',\r\n\r\n            }}>\r\n            START\r\n          </Grid>\r\n\r\n\r\n          {processing ? <Grid className=\"blinking\" item xs={2} style={{\r\n            height: '15vh', border: '0px solid white', borderRadius: '8px',\r\n            display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '24px', visibility: 'visible'\r\n          }}>\r\n\r\n            <AdjustIcon\r\n              className={\r\n                darkmodeReducer\r\n                  ? \"dontallowhighlighting zuperkingIcon \"\r\n                  : \"dontallowhighlighting zuperkingIcon  \"\r\n              }\r\n              style={{\r\n                margin: \"auto\",\r\n                fontSize: matchMobile\r\n                  ? `3vh`\r\n                  : `2.5vw`,\r\n                color: 'red'\r\n\r\n              }}\r\n            />\r\n          </Grid> :\r\n            <Grid item xs={2}\r\n              onClick={() => {\r\n                if (videoPlayerRef.current) {\r\n                  videoPlayerRef.current.pause();\r\n                }\r\n                setPreview(true);\r\n              }} style={{\r\n                cursor: 'pointer',\r\n                height: '15vh', border: darkmodeReducer ? '2px solid white' : '2px solid black', borderRadius: '8px',\r\n                display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '24px',\r\n                visibility: recordedVideoUrl && rec ? 'visible' : 'hidden'\r\n              }}>\r\n              PREVIEW\r\n            </Grid>}\r\n          <Grid item onClick={() => {\r\n            if (hideend) { } else { stopRecording(); }\r\n          }} xs={2} style={{\r\n            cursor: processing ? hideend ? 'default' : 'pointer' : 'default',\r\n            opacity: processing ? hideend ? 0.25 : 1 : 0.25,\r\n            height: '15vh', border: darkmodeReducer ? '2px solid white' : '2px solid black', borderRadius: '8px',\r\n            display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '24px',\r\n          }}>\r\n            END\r\n          </Grid>\r\n        </Grid>}\r\n      </Grid >\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          margin: \"auto\",\r\n          textAlign: \"right\",\r\n          left: '5px',\r\n          height: \"20px\",\r\n          position: 'fixed',\r\n          top: '3vh',\r\n          right: '3vw',\r\n          display: ShowVideo ? 'block' : 'none',\r\n        }}\r\n      >\r\n        <CloseIcon\r\n          onClick={() => {\r\n            if (videoPlayerRefx.current) {\r\n              videoPlayerRefx.current.pause();\r\n            }\r\n            close(false);\r\n          }}\r\n          className={\r\n            darkmodeReducer\r\n              ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \"\r\n              : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \"\r\n          }\r\n          style={{\r\n            margin: \"auto\",\r\n            color: \"#ffffff\",\r\n            fontSize: matchMobile\r\n              ? `3vh`\r\n              : `2.5vw`,\r\n\r\n          }}\r\n        />\r\n      </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport const VideoEditor = React.memo(VideoEditorx)"],"mappings":"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"},"metadata":{},"sourceType":"module"}