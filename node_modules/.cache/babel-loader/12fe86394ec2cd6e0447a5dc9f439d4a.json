{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\AboutFormHolder.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\nimport { TextFieldSignup } from \"../log/TextFieldSignup\";\nimport { ModalFormSignupError } from \"../log/ModalFormSignupError\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { matchPc, matchTablet } from \"../DetectDevice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { UserInfoUpdateAction } from \"../log/actions/UserdataAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nAxios.defaults.withCredentials = true;\n\nfunction AboutFormHolderx({\n  zoomedModal,\n  WidthHolder,\n  loginForm,\n  setServerErrorData,\n  setServerErrorDisplay,\n  setserverEmojiplain,\n  checkSignupPasswordACTIVATE,\n  setcheckSignupPasswordACTIVATE\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [focusUsernameSign, setFocusUsernameSign] = useState(false);\n  const [bopUsername, setbopUsername] = useState(false);\n  const [showFocusTextFieldByHidePadding, setShowFocusTextFieldByHidePadding] = useState(false);\n  const [responseErrorConfirmPassword, setresponseErrorConfirmPassword] = useState(false);\n  var buttonFont = \"\";\n  var buttonTransform = \" \";\n  var pad = \"\"; ///\n  ///\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\n\n  if (matchPc) {\n    buttonFont = \"1vw\";\n    buttonTransform = \" \";\n    pad = \"14.5px\"; ///\n  } else if (matchTablet) {\n    pad = \"16px\";\n    buttonFont = \"2vw\";\n    buttonTransform = \" \"; ///\n  } else {\n    buttonFont = \"\";\n    buttonTransform = \"scale(0.95)\";\n    pad = \"16px\";\n  } ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  /// GET  SIGNUP BUTTON AND LOGIN BUTTON STYLE FROM REDUX\n\n  const {\n    MozBoxShadowSD,\n    WebkitBoxShadowSD,\n    boxShadowSD\n  } = useSelector(state => ({ ...state.ButtonsSignUpReducerDark\n  }));\n  const {\n    MozBoxShadowSL,\n    WebkitBoxShadowSL,\n    boxShadowSL\n  } = useSelector(state => ({ ...state.ButtonsSignUpReducerLight\n  }));\n  const {\n    MozBoxShadowLD,\n    WebkitBoxShadowLD,\n    boxShadowLD\n  } = useSelector(state => ({ ...state.ButtonsLoginReducerDark\n  }));\n  const {\n    MozBoxShadowLL,\n    WebkitBoxShadowLL,\n    boxShadowLL\n  } = useSelector(state => ({ ...state.ButtonsLoginReducerLight\n  }));\n  var MozBoxShadowReducerLogin = \" \";\n  var WebkitBoxShadowReducerLogin = \" \";\n  var boxShadowReducerLogin = \" \";\n  var MozBoxShadowReducerSign = \" \";\n  var WebkitBoxShadowReducerSign = \" \";\n  var boxShadowReducerSign = \" \";\n\n  if (darkmodeReducer) {\n    MozBoxShadowReducerLogin = MozBoxShadowLD;\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLD;\n    boxShadowReducerLogin = boxShadowLD;\n    MozBoxShadowReducerSign = MozBoxShadowSD;\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSD;\n    boxShadowReducerSign = boxShadowSD;\n  } else {\n    MozBoxShadowReducerLogin = MozBoxShadowLL;\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLL;\n    boxShadowReducerLogin = boxShadowLL;\n    MozBoxShadowReducerSign = MozBoxShadowSL;\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSL;\n    boxShadowReducerSign = boxShadowSL;\n  } ///\n  ///\n  ///\n  ///HISTORY VARIABLE\n  ////const history = useHistory();\n  ///\n  ///\n  ///\n  ///SUPERSTARZ ICON SELECT\n\n\n  var SuperIcon = \"\";\n  darkmodeReducer ? SuperIcon = SuperstarzIconDark : SuperIcon = SuperstarzIconLight;\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env; ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n  const {\n    id\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const idReducer = id; ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n  const {\n    image,\n    username,\n    quote,\n    biography\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const imageReducer = image;\n  const usernameReducer = username;\n  const quoteReducer = quote;\n  const biographyReducer = biography; ///\n  ///\n  ///UPDATE SIGN UP DETAILS\n  ///\n  ///\n  ///\n  /// SANITISE SIGN UP FORM INPUT CLIENT\n\n  const initialRawSignValue = {\n    inputedQuote: \"\",\n    inputedUsername: \"\",\n    inputedDescription: \"\",\n    id: idReducer\n  };\n  const initialCleanSignValue = {\n    inputedQuote: \"\",\n    inputedUsername: \"\",\n    inputedDescription: \"\",\n    id: idReducer\n  };\n  const initialErrorSignValue = {\n    inputedQuote: 0,\n    inputedUsername: 0,\n    inputedDescription: 0\n  };\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\n  const [cleanSignupValues, setCleanSignupValues] = useState(initialCleanSignValue);\n  const [errorsSignupValues, setErrorsSignupValues] = useState(initialErrorSignValue);\n  const EmailCheckingTimer = useRef(null);\n  const UsernameCheckingTimer = useRef(null);\n  const initialspinner = {\n    inputedUsername: false,\n    inputedquote: false,\n    inputeddescription: false\n  };\n  const [errorFormChecking, setErrorFormChecking] = useState(initialspinner);\n  const PasswordCheckingTimer = useRef(null);\n  const [signupShowPassword, setSignupShowPassword] = useState(false);\n  const signupShowPasswordTimer = useRef(null); ///\n  ///\n  ///\n  ///SIGN UP ERROR VARIABLES\n\n  let usernameErrorData = null;\n  let usernameErrorDisplay = 0;\n\n  switch (errorsSignupValues.inputedUsername) {\n    case 1:\n      usernameErrorData = \"usernames can only use letters, numbers, underscores and periods \";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 2:\n      usernameErrorData = \"username is taken\";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 3:\n      usernameErrorData = \"username is available\";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 4:\n      usernameErrorData = \"username  required\";\n      usernameErrorDisplay = 1;\n      break;\n\n    default:\n      usernameErrorData = null;\n      usernameErrorDisplay = 0;\n      break;\n  } ///\n  ///\n  ///\n  ///SIGN UP ERROR VARIABLES\n  ///\n  ///\n  ///\n  /// SHOW  SIGNUP PASSWORD FOR A WHILE\n\n\n  const ShowSignupPasswordForaWhile = useCallback(() => {\n    if (signupShowPasswordTimer.current) {\n      clearTimeout(signupShowPasswordTimer.current);\n    }\n\n    setSignupShowPassword(!signupShowPassword);\n    signupShowPasswordTimer.current = setTimeout(() => {\n      setSignupShowPassword(false);\n    }, 2000);\n  }, [signupShowPassword]); /// SANITISE LOG IN FORM INPUT CLIENT SIDE\n\n  const updateSignvalues = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"inputedUsername\") {\n      let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\n      let cleanValue = value.replace(usernameCleaner, \"\");\n      let usernameLimiter = /^.{26}$/;\n      let finalUsername = cleanValue.replace(usernameLimiter, \"\");\n      let checkUsernameClean = usernameCleaner.test(value);\n      let checkUsernameLimited = usernameLimiter.test(cleanValue);\n\n      if (checkUsernameClean) {\n        if (UsernameCheckingTimer.current) {\n          clearTimeout(UsernameCheckingTimer.current);\n        }\n\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n      } else {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      let userNameLength = finalUsername.length;\n\n      if (checkUsernameClean) {} else {\n        if (checkUsernameLimited || userNameLength > 26) {} else {\n          setRawSignupValues({ ...rawSignupValues,\n            [name]: finalUsername\n          });\n          setCleanSignupValues({ ...cleanSignupValues,\n            [name]: finalUsername\n          }); /// AXIOS REQUEST FOR CHECK USERNAME\n\n          if (UsernameCheckingTimer.current) {\n            clearTimeout(UsernameCheckingTimer.current);\n            setErrorsSignupValues({ ...errorsSignupValues,\n              [name]: 0\n            });\n          }\n\n          if (errorFormChecking.inputedUsername) {} else {\n            setErrorFormChecking({ ...errorFormChecking,\n              [name]: true\n            });\n          }\n\n          setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 2\n          });\n          UsernameCheckingTimer.current = setTimeout(() => {\n            if (value.length === 0) {\n              setErrorsSignupValues({ ...errorsSignupValues,\n                [name]: 0\n              });\n              setErrorFormChecking({ ...errorFormChecking,\n                [name]: false\n              });\n            } else {\n              Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/usernamecheck`, {\n                value: finalUsername\n              }).then(response => {\n                if (response.data.message === \"username is not unique\") {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 2\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else if (response.data.message === \"username is available\") {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 3\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                }\n              }).catch(function (error) {\n                if (error.response) {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else if (error.request) {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                }\n              });\n            }\n          }, 3000); /// AXIOS REQUEST FOR CHECK USERNAME\n        }\n      } ///\n\n    } else if (name === \"inputedQuote\") {\n      let dataCleaner = /[^a-z0-9áéíóúñü\\._ ]/gim;\n      let cleanValue = value.replace(dataCleaner, \"\");\n      let dataLimiter = /^.{70}$/;\n      let finaldata = cleanValue.replace(dataLimiter, \"\");\n      let checkdataClean = dataCleaner.test(value);\n      let checkdataLimited = dataLimiter.test(cleanValue);\n      let dataLength = finaldata.length;\n\n      if (checkdataClean) {} else {\n        if (checkdataLimited || dataLength > 70) {} else {\n          setRawSignupValues({ ...rawSignupValues,\n            [name]: finaldata\n          });\n          setCleanSignupValues({ ...cleanSignupValues,\n            [name]: finaldata\n          });\n        }\n      }\n    } else {\n      let dataCleaner = /[^a-z0-9áéíóúñü\\._ ]/gim;\n      let cleanValue = value.replace(dataCleaner, \"\");\n      let dataLimiter = /^.{500}$/;\n      let finaldata = cleanValue.replace(dataLimiter, \"\");\n      let checkdataClean = dataCleaner.test(value);\n      let checkdataLimited = dataLimiter.test(cleanValue);\n      let dataLength = finaldata.length;\n\n      if (checkdataClean) {} else {\n        if (checkdataLimited || dataLength > 500) {} else {\n          setRawSignupValues({ ...rawSignupValues,\n            [name]: finaldata\n          });\n          setCleanSignupValues({ ...cleanSignupValues,\n            [name]: finaldata\n          });\n        }\n      }\n    }\n  }, [cleanSignupValues, rawSignupValues, errorsSignupValues, errorFormChecking, REACT_APP_SUPERSTARZ_URL]);\n  var updatebuttonShow = \"hidden\";\n\n  if (cleanSignupValues.inputedUsername || cleanSignupValues.inputedQuote || cleanSignupValues.inputedDescription) {\n    updatebuttonShow = \"visible\";\n  } else {\n    updatebuttonShow = \"hidden\";\n  }\n\n  var aboutboy = {\n    inputedUsername: \"\",\n    inputedQuote: \"\",\n    inputedDescription: 0,\n    id: idReducer\n  }; ///\n  ///\n  ///\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\n\n  const signmeup = useCallback(() => {\n    if (cleanSignupValues.inputedUsername || cleanSignupValues.inputedQuote || cleanSignupValues.inputedDescription) {\n      var T1 = \"\";\n      var T2 = \"\";\n\n      if (cleanSignupValues.inputedUsername) {\n        T1 = cleanSignupValues.inputedUsername;\n      } else {\n        T1 = cleanSignupValues.inputedUsername;\n      }\n\n      aboutboy = {\n        inputedUsername: T1,\n        inputedQuote: \"\",\n        inputedDescription: 0,\n        id: idReducer\n      };\n      Axios.put(`http://${REACT_APP_SUPERSTARZ_URL}/update_basic`, {\n        values: aboutboy\n      }, {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.message === \"username updated\") {\n          setServerErrorData(\"username updated\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(true);\n          const data = {\n            username: cleanSignupValues.inputedUsername,\n            quote: cleanSignupValues.inputedQuote,\n            describe: cleanSignupValues.inputedDescription\n          };\n          dispatch(UserInfoUpdateAction(data));\n        } else {\n          setServerErrorData(\"something went wrong while updating your username , please try again\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(false);\n        }\n      }).catch(function (error) {\n        setServerErrorData(\"something went wrong while updating your username, please try again\");\n        setServerErrorDisplay(1);\n        setserverEmojiplain(false);\n      });\n    } else {\n      alert(\"no\");\n    }\n  }, [REACT_APP_SUPERSTARZ_URL, cleanSignupValues, errorsSignupValues, checkSignupPasswordACTIVATE, dispatch, aboutboy, setServerErrorData, setServerErrorDisplay, setcheckSignupPasswordACTIVATE, setserverEmojiplain]); ///\n  ///\n  ///\n  ///ENTER KEY EMULATE FORM ACTION\n\n  const enterPress = useCallback(e => {\n    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n      signmeup();\n    }\n  }, [signmeup]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", enterPress);\n    return () => document.removeEventListener(\"keydown\", enterPress);\n  }, [enterPress]); ///\n  ///\n  ///\n  ///\n  ///\n  /// UPDATE SIGN UP DETAILS\n  ///\n  ///\n  ///\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: matchPc\n    /*PC PC PC PC PC PC PC PC  SIGNUP  PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\n    ?\n    /*#__PURE__*/\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          style: {\n            width: \"150%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n            focus: focusUsernameSign,\n            device: \"pc\",\n            ErrorType: errorsSignupValues.inputedUsername,\n            textField: \"username\",\n            errorFormChecking: errorFormChecking.inputedUsername,\n            WidthHolder: WidthHolder,\n            type: true,\n            ErrorDisplay: usernameErrorDisplay,\n            ErrorData: usernameErrorData,\n            bop: bopUsername,\n            checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n            sourceType: \"ABOUT\",\n            showFocusTextFieldByHidePadding: showFocusTextFieldByHidePadding,\n            setShowFocusTextFieldByHidePadding: setShowFocusTextFieldByHidePadding,\n            focus: focusUsernameSign,\n            setFocus: setFocusUsernameSign,\n            updateSignvalues: updateSignvalues,\n            rawSignupValues: rawSignupValues,\n            ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n            signupShowPassword: signupShowPassword,\n            size: \"medium\",\n            emailType: false,\n            passwordType: false,\n            withHolder: WidthHolder,\n            checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n            sourceType: \"ABOUT\",\n            showFocusTextFieldByHidePadding: showFocusTextFieldByHidePadding,\n            setShowFocusTextFieldByHidePadding: setShowFocusTextFieldByHidePadding,\n            focus: focusUsernameSign,\n            setFocus: setFocusUsernameSign,\n            updateSignvalues: updateSignvalues,\n            rawSignupValues: rawSignupValues,\n            ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n            signupShowPassword: signupShowPassword,\n            size: \"medium\",\n            emailType: true,\n            passwordType: false,\n            withHolder: WidthHolder,\n            checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n            sourceType: \"ABOUT\",\n            showFocusTextFieldByHidePadding: showFocusTextFieldByHidePadding,\n            setShowFocusTextFieldByHidePadding: setShowFocusTextFieldByHidePadding,\n            focus: focusUsernameSign,\n            setFocus: setFocusUsernameSign,\n            updateSignvalues: updateSignvalues,\n            rawSignupValues: rawSignupValues,\n            ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n            signupShowPassword: signupShowPassword,\n            size: \"medium\",\n            emailType: false,\n            passwordType: true,\n            withHolder: WidthHolder,\n            checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          opacity: checkSignupPasswordACTIVATE ? 0 : 1,\n          marginTop: \"-20px\"\n        },\n        className: \"modal-hold-signup\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: \"buttonpad buttonshake\",\n          xs: 4,\n          style: {},\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              fontSize: buttonFont,\n              transform: buttonTransform,\n              padding: pad,\n              borderRadius: \"50px\",\n              MozBoxShadow: MozBoxShadowReducerSign,\n              WebkitBoxShadow: WebkitBoxShadowReducerSign,\n              boxShadow: boxShadowReducerSign,\n              visibility: updatebuttonShow\n            },\n            onClick: signmeup,\n            fullWidth: true,\n            variant: \"contained\",\n            size: \"large\",\n            color: \"secondary\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true)\n    /*PC PC PC PC   SIGN UP PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\n    :\n    /*#__PURE__*/\n\n    /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          style: {\n            width: \"150%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n            focus: focusUsernameSign,\n            device: \"pc\",\n            ErrorType: errorsSignupValues.inputedUsername,\n            textField: \"username\",\n            errorFormChecking: errorFormChecking.inputedUsername,\n            WidthHolder: WidthHolder,\n            type: true,\n            ErrorDisplay: usernameErrorDisplay,\n            ErrorData: usernameErrorData,\n            bop: bopUsername,\n            checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n            sourceType: \"ABOUT\",\n            showFocusTextFieldByHidePadding: showFocusTextFieldByHidePadding,\n            setShowFocusTextFieldByHidePadding: setShowFocusTextFieldByHidePadding,\n            focus: focusUsernameSign,\n            setFocus: setFocusUsernameSign,\n            updateSignvalues: updateSignvalues,\n            rawSignupValues: rawSignupValues,\n            ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n            signupShowPassword: signupShowPassword,\n            size: \"medium\",\n            emailType: false,\n            passwordType: false,\n            withHolder: WidthHolder,\n            checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          opacity: checkSignupPasswordACTIVATE ? 0 : 1\n        },\n        className: \"modal-hold-signup\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: \"buttonpad buttonshake\",\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              fontSize: buttonFont,\n              transform: buttonTransform,\n              padding: pad,\n              borderRadius: \"50px\",\n              MozBoxShadow: MozBoxShadowReducerSign,\n              WebkitBoxShadow: WebkitBoxShadowReducerSign,\n              boxShadow: boxShadowReducerSign\n            },\n            onClick: signmeup,\n            fullWidth: true,\n            variant: \"contained\",\n            size: \"large\",\n            color: \"secondary\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false)\n  /*MOBILE  MOBILE  MOBILE  MOBILE  SIGNUP MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\n  ;\n}\n\n_s(AboutFormHolderx, \"hDQBNGTHURXQxJR2eH4SHdFvZKI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = AboutFormHolderx;\nexport const AboutFormHolder = /*#__PURE__*/React.memo(AboutFormHolderx);\n_c2 = AboutFormHolder;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AboutFormHolderx\");\n$RefreshReg$(_c2, \"AboutFormHolder\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/AboutFormHolder.tsx"],"names":["React","useRef","useState","useCallback","useEffect","Axios","SuperstarzIconLight","SuperstarzIconDark","TextFieldSignup","ModalFormSignupError","Button","Grid","matchPc","matchTablet","useSelector","useDispatch","UserInfoUpdateAction","defaults","withCredentials","AboutFormHolderx","zoomedModal","WidthHolder","loginForm","setServerErrorData","setServerErrorDisplay","setserverEmojiplain","checkSignupPasswordACTIVATE","setcheckSignupPasswordACTIVATE","dispatch","focusUsernameSign","setFocusUsernameSign","bopUsername","setbopUsername","showFocusTextFieldByHidePadding","setShowFocusTextFieldByHidePadding","responseErrorConfirmPassword","setresponseErrorConfirmPassword","buttonFont","buttonTransform","pad","darkmode","state","GlobalReducer","darkmodeReducer","MozBoxShadowSD","WebkitBoxShadowSD","boxShadowSD","ButtonsSignUpReducerDark","MozBoxShadowSL","WebkitBoxShadowSL","boxShadowSL","ButtonsSignUpReducerLight","MozBoxShadowLD","WebkitBoxShadowLD","boxShadowLD","ButtonsLoginReducerDark","MozBoxShadowLL","WebkitBoxShadowLL","boxShadowLL","ButtonsLoginReducerLight","MozBoxShadowReducerLogin","WebkitBoxShadowReducerLogin","boxShadowReducerLogin","MozBoxShadowReducerSign","WebkitBoxShadowReducerSign","boxShadowReducerSign","SuperIcon","REACT_APP_SUPERSTARZ_URL","process","env","id","UserdataReducer","idReducer","image","username","quote","biography","imageReducer","usernameReducer","quoteReducer","biographyReducer","initialRawSignValue","inputedQuote","inputedUsername","inputedDescription","initialCleanSignValue","initialErrorSignValue","rawSignupValues","setRawSignupValues","cleanSignupValues","setCleanSignupValues","errorsSignupValues","setErrorsSignupValues","EmailCheckingTimer","UsernameCheckingTimer","initialspinner","inputedquote","inputeddescription","errorFormChecking","setErrorFormChecking","PasswordCheckingTimer","signupShowPassword","setSignupShowPassword","signupShowPasswordTimer","usernameErrorData","usernameErrorDisplay","ShowSignupPasswordForaWhile","current","clearTimeout","setTimeout","updateSignvalues","e","name","value","target","usernameCleaner","cleanValue","replace","usernameLimiter","finalUsername","checkUsernameClean","test","checkUsernameLimited","userNameLength","length","post","then","response","data","message","catch","error","request","dataCleaner","dataLimiter","finaldata","checkdataClean","checkdataLimited","dataLength","updatebuttonShow","aboutboy","signmeup","T1","T2","put","values","describe","alert","enterPress","key","document","addEventListener","removeEventListener","width","opacity","marginTop","fontSize","transform","padding","borderRadius","MozBoxShadow","WebkitBoxShadow","boxShadow","visibility","AboutFormHolder","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,WAAlC,EAA+CC,SAA/C,QAAgE,OAAhE;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AAEA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,oBAAT,QAAqC,6BAArC;AAEA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,iBAArC;AACA,SAAyBC,WAAzB,EAAsCC,WAAtC,QAAyD,aAAzD;AAOA,SAASC,oBAAT,QAAqC,+BAArC;;;AAEAX,KAAK,CAACY,QAAN,CAAeC,eAAf,GAAiC,IAAjC;;AAEA,SAASC,gBAAT,CAA0B;AACxBC,EAAAA,WADwB;AAExBC,EAAAA,WAFwB;AAGxBC,EAAAA,SAHwB;AAIxBC,EAAAA,kBAJwB;AAKxBC,EAAAA,qBALwB;AAMxBC,EAAAA,mBANwB;AAOxBC,EAAAA,2BAPwB;AAQxBC,EAAAA;AARwB,CAA1B,EASgB;AAAA;;AACd,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAM,CAACc,iBAAD,EAAoBC,oBAApB,IAA4C5B,QAAQ,CAAU,KAAV,CAA1D;AAEA,QAAM,CAAC6B,WAAD,EAAcC,cAAd,IAAgC9B,QAAQ,CAAU,KAAV,CAA9C;AAEA,QAAM,CAAC+B,+BAAD,EAAkCC,kCAAlC,IACJhC,QAAQ,CAAU,KAAV,CADV;AAGA,QAAM,CAACiC,4BAAD,EAA+BC,+BAA/B,IACJlC,QAAQ,CAAU,KAAV,CADV;AAGA,MAAImC,UAAU,GAAG,EAAjB;AACA,MAAIC,eAAe,GAAG,GAAtB;AACA,MAAIC,GAAG,GAAG,EAAV,CAfc,CAiBd;AACA;AACA;;AACA,MAAI3B,OAAJ,EAAa;AACXyB,IAAAA,UAAU,GAAG,KAAb;AACAC,IAAAA,eAAe,GAAG,GAAlB;AACAC,IAAAA,GAAG,GAAG,QAAN,CAHW,CAKX;AACD,GAND,MAMO,IAAI1B,WAAJ,EAAiB;AACtB0B,IAAAA,GAAG,GAAG,MAAN;AACAF,IAAAA,UAAU,GAAG,KAAb;AACAC,IAAAA,eAAe,GAAG,GAAlB,CAHsB,CAItB;AACD,GALM,MAKA;AACLD,IAAAA,UAAU,GAAG,EAAb;AACAC,IAAAA,eAAe,GAAG,aAAlB;AACAC,IAAAA,GAAG,GAAG,MAAN;AACD,GAnCa,CAqCd;AACA;AACA;AACA;;;AAMA,QAAM;AAAEC,IAAAA;AAAF,MAAe1B,WAAW,CAAE2B,KAAD,KAAoC,EACnE,GAAGA,KAAK,CAACC;AAD0D,GAApC,CAAD,CAAhC;AAIA,QAAMC,eAAe,GAAGH,QAAxB,CAlDc,CAoDd;AACA;AACA;AACA;;AACA,QAAM;AAAEI,IAAAA,cAAF;AAAkBC,IAAAA,iBAAlB;AAAqCC,IAAAA;AAArC,MAAqDhC,WAAW,CACnE2B,KAAD,KAA4B,EAC1B,GAAGA,KAAK,CAACM;AADiB,GAA5B,CADoE,CAAtE;AAMA,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,iBAAlB;AAAqCC,IAAAA;AAArC,MAAqDpC,WAAW,CACnE2B,KAAD,KAA4B,EAC1B,GAAGA,KAAK,CAACU;AADiB,GAA5B,CADoE,CAAtE;AAMA,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,iBAAlB;AAAqCC,IAAAA;AAArC,MAAqDxC,WAAW,CACnE2B,KAAD,KAA4B,EAC1B,GAAGA,KAAK,CAACc;AADiB,GAA5B,CADoE,CAAtE;AAMA,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,iBAAlB;AAAqCC,IAAAA;AAArC,MAAqD5C,WAAW,CACnE2B,KAAD,KAA4B,EAC1B,GAAGA,KAAK,CAACkB;AADiB,GAA5B,CADoE,CAAtE;AAMA,MAAIC,wBAAwB,GAAG,GAA/B;AACA,MAAIC,2BAA2B,GAAG,GAAlC;AACA,MAAIC,qBAAqB,GAAG,GAA5B;AAEA,MAAIC,uBAAuB,GAAG,GAA9B;AACA,MAAIC,0BAA0B,GAAG,GAAjC;AACA,MAAIC,oBAAoB,GAAG,GAA3B;;AAEA,MAAItB,eAAJ,EAAqB;AACnBiB,IAAAA,wBAAwB,GAAGR,cAA3B;AACAS,IAAAA,2BAA2B,GAAGR,iBAA9B;AACAS,IAAAA,qBAAqB,GAAGR,WAAxB;AAEAS,IAAAA,uBAAuB,GAAGnB,cAA1B;AACAoB,IAAAA,0BAA0B,GAAGnB,iBAA7B;AACAoB,IAAAA,oBAAoB,GAAGnB,WAAvB;AACD,GARD,MAQO;AACLc,IAAAA,wBAAwB,GAAGJ,cAA3B;AACAK,IAAAA,2BAA2B,GAAGJ,iBAA9B;AACAK,IAAAA,qBAAqB,GAAGJ,WAAxB;AAEAK,IAAAA,uBAAuB,GAAGf,cAA1B;AACAgB,IAAAA,0BAA0B,GAAGf,iBAA7B;AACAgB,IAAAA,oBAAoB,GAAGf,WAAvB;AACD,GAxGa,CA0Gd;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA,MAAIgB,SAAS,GAAG,EAAhB;AACAvB,EAAAA,eAAe,GACVuB,SAAS,GAAG3D,kBADF,GAEV2D,SAAS,GAAG5D,mBAFjB;AAIA,QAAM;AAAE6D,IAAAA;AAAF,MAA+BC,OAAO,CAACC,GAA7C,CAzHc,CA0Hd;AACA;AACA;AACA;;AAUA,QAAM;AAAEC,IAAAA;AAAF,MAASxD,WAAW,CAAE2B,KAAD,KAAmC,EAC5D,GAAGA,KAAK,CAAC8B;AADmD,GAAnC,CAAD,CAA1B;AAGA,QAAMC,SAAS,GAAGF,EAAlB,CA1Ic,CA4Id;AACA;AACA;AACA;;AAIA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,MAAwC9D,WAAW,CACtD2B,KAAD,KAAmC,EACjC,GAAGA,KAAK,CAAC8B;AADwB,GAAnC,CADuD,CAAzD;AAKA,QAAMM,YAAY,GAAGJ,KAArB;AACA,QAAMK,eAAe,GAAGJ,QAAxB;AACA,QAAMK,YAAY,GAAGJ,KAArB;AACA,QAAMK,gBAAgB,GAAGJ,SAAzB,CA3Jc,CA4Jd;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMK,mBAAmB,GAAG;AAC1BC,IAAAA,YAAY,EAAE,EADY;AAE1BC,IAAAA,eAAe,EAAE,EAFS;AAG1BC,IAAAA,kBAAkB,EAAE,EAHM;AAI1Bd,IAAAA,EAAE,EAAEE;AAJsB,GAA5B;AAMA,QAAMa,qBAAqB,GAAG;AAC5BH,IAAAA,YAAY,EAAE,EADc;AAE5BC,IAAAA,eAAe,EAAE,EAFW;AAG5BC,IAAAA,kBAAkB,EAAE,EAHQ;AAI5Bd,IAAAA,EAAE,EAAEE;AAJwB,GAA9B;AAOA,QAAMc,qBAAqB,GAAG;AAC5BJ,IAAAA,YAAY,EAAE,CADc;AAE5BC,IAAAA,eAAe,EAAE,CAFW;AAG5BC,IAAAA,kBAAkB,EAAE;AAHQ,GAA9B;AAMA,QAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwCtF,QAAQ,CAAC+E,mBAAD,CAAtD;AACA,QAAM,CAACQ,iBAAD,EAAoBC,oBAApB,IAA4CxF,QAAQ,CACxDmF,qBADwD,CAA1D;AAGA,QAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8C1F,QAAQ,CAC1DoF,qBAD0D,CAA5D;AAIA,QAAMO,kBAAkB,GAAG5F,MAAM,CAAuC,IAAvC,CAAjC;AAEA,QAAM6F,qBAAqB,GAAG7F,MAAM,CAClC,IADkC,CAApC;AAIA,QAAM8F,cAAmB,GAAG;AAC1BZ,IAAAA,eAAe,EAAE,KADS;AAE1Ba,IAAAA,YAAY,EAAE,KAFY;AAG1BC,IAAAA,kBAAkB,EAAE;AAHM,GAA5B;AAMA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CjG,QAAQ,CAAC6F,cAAD,CAA1D;AACA,QAAMK,qBAAqB,GAAGnG,MAAM,CAClC,IADkC,CAApC;AAIA,QAAM,CAACoG,kBAAD,EAAqBC,qBAArB,IAA8CpG,QAAQ,CAAU,KAAV,CAA5D;AACA,QAAMqG,uBAAuB,GAAGtG,MAAM,CACpC,IADoC,CAAtC,CAhNc,CAoNd;AACA;AACA;AACA;;AACA,MAAIuG,iBAAiB,GAAG,IAAxB;AACA,MAAIC,oBAAoB,GAAG,CAA3B;;AAEA,UAAQd,kBAAkB,CAACR,eAA3B;AACE,SAAK,CAAL;AACEqB,MAAAA,iBAAiB,GACf,mEADF;AAEAC,MAAAA,oBAAoB,GAAG,CAAvB;AACA;;AACF,SAAK,CAAL;AACED,MAAAA,iBAAiB,GAAG,mBAApB;AACAC,MAAAA,oBAAoB,GAAG,CAAvB;AACA;;AACF,SAAK,CAAL;AACED,MAAAA,iBAAiB,GAAG,uBAApB;AACAC,MAAAA,oBAAoB,GAAG,CAAvB;AACA;;AACF,SAAK,CAAL;AACED,MAAAA,iBAAiB,GAAG,oBAApB;AACAC,MAAAA,oBAAoB,GAAG,CAAvB;AACA;;AAEF;AACED,MAAAA,iBAAiB,GAAG,IAApB;AACAC,MAAAA,oBAAoB,GAAG,CAAvB;AACA;AAtBJ,GA3Nc,CAoPd;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA,QAAMC,2BAA2B,GAAGvG,WAAW,CAAC,MAAM;AACpD,QAAIoG,uBAAuB,CAACI,OAA5B,EAAqC;AACnCC,MAAAA,YAAY,CAACL,uBAAuB,CAACI,OAAzB,CAAZ;AACD;;AACDL,IAAAA,qBAAqB,CAAC,CAACD,kBAAF,CAArB;AACAE,IAAAA,uBAAuB,CAACI,OAAxB,GAAkCE,UAAU,CAAC,MAAM;AACjDP,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,KAF2C,EAEzC,IAFyC,CAA5C;AAGD,GAR8C,EAQ5C,CAACD,kBAAD,CAR4C,CAA/C,CA7Pc,CAuQd;;AACA,QAAMS,gBAAgB,GAAG3G,WAAW,CACjC4G,CAAD,IAAY;AACV,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;;AAEA,QAAIF,IAAI,KAAK,iBAAb,EAAgC;AAC9B,UAAIG,eAAe,GAAG,wBAAtB;AACA,UAAIC,UAAU,GAAGH,KAAK,CAACI,OAAN,CAAcF,eAAd,EAA+B,EAA/B,CAAjB;AAEA,UAAIG,eAAe,GAAG,SAAtB;AACA,UAAIC,aAAa,GAAGH,UAAU,CAACC,OAAX,CAAmBC,eAAnB,EAAoC,EAApC,CAApB;AAEA,UAAIE,kBAAkB,GAAGL,eAAe,CAACM,IAAhB,CAAqBR,KAArB,CAAzB;AACA,UAAIS,oBAAoB,GAAGJ,eAAe,CAACG,IAAhB,CAAqBL,UAArB,CAA3B;;AAEA,UAAII,kBAAJ,EAAwB;AACtB,YAAI1B,qBAAqB,CAACa,OAA1B,EAAmC;AACjCC,UAAAA,YAAY,CAACd,qBAAqB,CAACa,OAAvB,CAAZ;AACD;;AACDf,QAAAA,qBAAqB,CAAC,EAAE,GAAGD,kBAAL;AAAyB,WAACqB,IAAD,GAAQ;AAAjC,SAAD,CAArB;AACD,OALD,MAKO;AACLpB,QAAAA,qBAAqB,CAAC,EAAE,GAAGD,kBAAL;AAAyB,WAACqB,IAAD,GAAQ;AAAjC,SAAD,CAArB;AACD;;AAED,UAAIW,cAAc,GAAGJ,aAAa,CAACK,MAAnC;;AAEA,UAAIJ,kBAAJ,EAAwB,CACvB,CADD,MACO;AACL,YAAIE,oBAAoB,IAAIC,cAAc,GAAG,EAA7C,EAAiD,CAChD,CADD,MACO;AACLnC,UAAAA,kBAAkB,CAAC,EACjB,GAAGD,eADc;AAEjB,aAACyB,IAAD,GAAQO;AAFS,WAAD,CAAlB;AAIA7B,UAAAA,oBAAoB,CAAC,EACnB,GAAGD,iBADgB;AAEnB,aAACuB,IAAD,GAAQO;AAFW,WAAD,CAApB,CALK,CASL;;AACA,cAAIzB,qBAAqB,CAACa,OAA1B,EAAmC;AACjCC,YAAAA,YAAY,CAACd,qBAAqB,CAACa,OAAvB,CAAZ;AAEAf,YAAAA,qBAAqB,CAAC,EAAE,GAAGD,kBAAL;AAAyB,eAACqB,IAAD,GAAQ;AAAjC,aAAD,CAArB;AACD;;AAED,cAAId,iBAAiB,CAACf,eAAtB,EAAuC,CACtC,CADD,MACO;AACLgB,YAAAA,oBAAoB,CAAC,EAAE,GAAGD,iBAAL;AAAwB,eAACc,IAAD,GAAQ;AAAhC,aAAD,CAApB;AACD;;AAEDpB,UAAAA,qBAAqB,CAAC,EAAE,GAAGD,kBAAL;AAAyB,aAACqB,IAAD,GAAQ;AAAjC,WAAD,CAArB;AACAlB,UAAAA,qBAAqB,CAACa,OAAtB,GAAgCE,UAAU,CAAC,MAAM;AAC/C,gBAAII,KAAK,CAACW,MAAN,KAAiB,CAArB,EAAwB;AACtBhC,cAAAA,qBAAqB,CAAC,EACpB,GAAGD,kBADiB;AAEpB,iBAACqB,IAAD,GAAQ;AAFY,eAAD,CAArB;AAIAb,cAAAA,oBAAoB,CAAC,EACnB,GAAGD,iBADgB;AAEnB,iBAACc,IAAD,GAAQ;AAFW,eAAD,CAApB;AAID,aATD,MASO;AACL3G,cAAAA,KAAK,CAACwH,IAAN,CAAY,UAAS1D,wBAAyB,gBAA9C,EAA+D;AAC7D8C,gBAAAA,KAAK,EAAEM;AADsD,eAA/D,EAGGO,IAHH,CAGSC,QAAD,IAAc;AAClB,oBAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAd,KAA0B,wBAA9B,EAAwD;AACtDrC,kBAAAA,qBAAqB,CAAC,EACpB,GAAGD,kBADiB;AAEpB,qBAACqB,IAAD,GAAQ;AAFY,mBAAD,CAArB;AAIAb,kBAAAA,oBAAoB,CAAC,EACnB,GAAGD,iBADgB;AAEnB,qBAACc,IAAD,GAAQ;AAFW,mBAAD,CAApB;AAID,iBATD,MASO,IACLe,QAAQ,CAACC,IAAT,CAAcC,OAAd,KAA0B,uBADrB,EAEL;AACArC,kBAAAA,qBAAqB,CAAC,EACpB,GAAGD,kBADiB;AAEpB,qBAACqB,IAAD,GAAQ;AAFY,mBAAD,CAArB;AAIAb,kBAAAA,oBAAoB,CAAC,EACnB,GAAGD,iBADgB;AAEnB,qBAACc,IAAD,GAAQ;AAFW,mBAAD,CAApB;AAID,iBAXM,MAWA;AACLpB,kBAAAA,qBAAqB,CAAC,EACpB,GAAGD,kBADiB;AAEpB,qBAACqB,IAAD,GAAQ;AAFY,mBAAD,CAArB;AAIAb,kBAAAA,oBAAoB,CAAC,EACnB,GAAGD,iBADgB;AAEnB,qBAACc,IAAD,GAAQ;AAFW,mBAAD,CAApB;AAID;AACF,eAlCH,EAmCGkB,KAnCH,CAmCS,UAAUC,KAAV,EAAiB;AACtB,oBAAIA,KAAK,CAACJ,QAAV,EAAoB;AAClBnC,kBAAAA,qBAAqB,CAAC,EACpB,GAAGD,kBADiB;AAEpB,qBAACqB,IAAD,GAAQ;AAFY,mBAAD,CAArB;AAIAb,kBAAAA,oBAAoB,CAAC,EACnB,GAAGD,iBADgB;AAEnB,qBAACc,IAAD,GAAQ;AAFW,mBAAD,CAApB;AAID,iBATD,MASO,IAAImB,KAAK,CAACC,OAAV,EAAmB;AACxBxC,kBAAAA,qBAAqB,CAAC,EACpB,GAAGD,kBADiB;AAEpB,qBAACqB,IAAD,GAAQ;AAFY,mBAAD,CAArB;AAIAb,kBAAAA,oBAAoB,CAAC,EACnB,GAAGD,iBADgB;AAEnB,qBAACc,IAAD,GAAQ;AAFW,mBAAD,CAApB;AAID,iBATM,MASA;AACLpB,kBAAAA,qBAAqB,CAAC,EACpB,GAAGD,kBADiB;AAEpB,qBAACqB,IAAD,GAAQ;AAFY,mBAAD,CAArB;AAIAb,kBAAAA,oBAAoB,CAAC,EACnB,GAAGD,iBADgB;AAEnB,qBAACc,IAAD,GAAQ;AAFW,mBAAD,CAApB;AAID;AACF,eAhEH;AAiED;AACF,WA7EyC,EA6EvC,IA7EuC,CAA1C,CAtBK,CAoGL;AACD;AACF,OA9H6B,CA+H9B;;AACD,KAhID,MAgIO,IAAIA,IAAI,KAAK,cAAb,EAA6B;AAClC,UAAIqB,WAAW,GAAG,yBAAlB;AACA,UAAIjB,UAAU,GAAGH,KAAK,CAACI,OAAN,CAAcgB,WAAd,EAA2B,EAA3B,CAAjB;AAEA,UAAIC,WAAW,GAAG,SAAlB;AACA,UAAIC,SAAS,GAAGnB,UAAU,CAACC,OAAX,CAAmBiB,WAAnB,EAAgC,EAAhC,CAAhB;AAEA,UAAIE,cAAc,GAAGH,WAAW,CAACZ,IAAZ,CAAiBR,KAAjB,CAArB;AACA,UAAIwB,gBAAgB,GAAGH,WAAW,CAACb,IAAZ,CAAiBL,UAAjB,CAAvB;AAEA,UAAIsB,UAAU,GAAGH,SAAS,CAACX,MAA3B;;AAEA,UAAIY,cAAJ,EAAoB,CACnB,CADD,MACO;AACL,YAAIC,gBAAgB,IAAIC,UAAU,GAAG,EAArC,EAAyC,CACxC,CADD,MACO;AACLlD,UAAAA,kBAAkB,CAAC,EACjB,GAAGD,eADc;AAEjB,aAACyB,IAAD,GAAQuB;AAFS,WAAD,CAAlB;AAIA7C,UAAAA,oBAAoB,CAAC,EACnB,GAAGD,iBADgB;AAEnB,aAACuB,IAAD,GAAQuB;AAFW,WAAD,CAApB;AAID;AACF;AACF,KA1BM,MA0BA;AACL,UAAIF,WAAW,GAAG,yBAAlB;AACA,UAAIjB,UAAU,GAAGH,KAAK,CAACI,OAAN,CAAcgB,WAAd,EAA2B,EAA3B,CAAjB;AAEA,UAAIC,WAAW,GAAG,UAAlB;AACA,UAAIC,SAAS,GAAGnB,UAAU,CAACC,OAAX,CAAmBiB,WAAnB,EAAgC,EAAhC,CAAhB;AAEA,UAAIE,cAAc,GAAGH,WAAW,CAACZ,IAAZ,CAAiBR,KAAjB,CAArB;AACA,UAAIwB,gBAAgB,GAAGH,WAAW,CAACb,IAAZ,CAAiBL,UAAjB,CAAvB;AAEA,UAAIsB,UAAU,GAAGH,SAAS,CAACX,MAA3B;;AAEA,UAAIY,cAAJ,EAAoB,CACnB,CADD,MACO;AACL,YAAIC,gBAAgB,IAAIC,UAAU,GAAG,GAArC,EAA0C,CACzC,CADD,MACO;AACLlD,UAAAA,kBAAkB,CAAC,EACjB,GAAGD,eADc;AAEjB,aAACyB,IAAD,GAAQuB;AAFS,WAAD,CAAlB;AAIA7C,UAAAA,oBAAoB,CAAC,EACnB,GAAGD,iBADgB;AAEnB,aAACuB,IAAD,GAAQuB;AAFW,WAAD,CAApB;AAID;AACF;AACF;AACF,GAzLiC,EA0LlC,CACE9C,iBADF,EAEEF,eAFF,EAGEI,kBAHF,EAIEO,iBAJF,EAKE/B,wBALF,CA1LkC,CAApC;AAmMA,MAAIwE,gBAAqB,GAAG,QAA5B;;AACA,MACElD,iBAAiB,CAACN,eAAlB,IACAM,iBAAiB,CAACP,YADlB,IAEAO,iBAAiB,CAACL,kBAHpB,EAIE;AACAuD,IAAAA,gBAAgB,GAAG,SAAnB;AACD,GAND,MAMO;AACLA,IAAAA,gBAAgB,GAAG,QAAnB;AACD;;AAED,MAAIC,QAAa,GAAG;AAClBzD,IAAAA,eAAe,EAAE,EADC;AAElBD,IAAAA,YAAY,EAAE,EAFI;AAGlBE,IAAAA,kBAAkB,EAAE,CAHF;AAIlBd,IAAAA,EAAE,EAAEE;AAJc,GAApB,CAtdc,CA6dd;AACA;AACA;AACA;;AAEA,QAAMqE,QAAQ,GAAG1I,WAAW,CAAC,MAAM;AACjC,QACEsF,iBAAiB,CAACN,eAAlB,IACAM,iBAAiB,CAACP,YADlB,IAEAO,iBAAiB,CAACL,kBAHpB,EAIE;AACA,UAAI0D,EAAE,GAAG,EAAT;AACA,UAAIC,EAAE,GAAG,EAAT;;AACA,UAAItD,iBAAiB,CAACN,eAAtB,EAAuC;AACrC2D,QAAAA,EAAE,GAAGrD,iBAAiB,CAACN,eAAvB;AACD,OAFD,MAEO;AACL2D,QAAAA,EAAE,GAAGrD,iBAAiB,CAACN,eAAvB;AACD;;AACDyD,MAAAA,QAAQ,GAAG;AACTzD,QAAAA,eAAe,EAAE2D,EADR;AAET5D,QAAAA,YAAY,EAAE,EAFL;AAGTE,QAAAA,kBAAkB,EAAE,CAHX;AAITd,QAAAA,EAAE,EAAEE;AAJK,OAAX;AAOAnE,MAAAA,KAAK,CAAC2I,GAAN,CACG,UAAS7E,wBAAyB,eADrC,EAEE;AAAE8E,QAAAA,MAAM,EAAEL;AAAV,OAFF,EAGE;AACE1H,QAAAA,eAAe,EAAE;AADnB,OAHF,EAOG4G,IAPH,CAOSC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAd,KAA0B,kBAA9B,EAAkD;AAChD1G,UAAAA,kBAAkB,CAAC,kBAAD,CAAlB;AACAC,UAAAA,qBAAqB,CAAC,CAAD,CAArB;AACAC,UAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACA,gBAAMuG,IAAI,GAAG;AACXtD,YAAAA,QAAQ,EAAEe,iBAAiB,CAACN,eADjB;AAEXR,YAAAA,KAAK,EAAEc,iBAAiB,CAACP,YAFd;AAGXgE,YAAAA,QAAQ,EAAEzD,iBAAiB,CAACL;AAHjB,WAAb;AAKAxD,UAAAA,QAAQ,CAACZ,oBAAoB,CAACgH,IAAD,CAArB,CAAR;AACD,SAVD,MAUO;AACLzG,UAAAA,kBAAkB,CAChB,sEADgB,CAAlB;AAGAC,UAAAA,qBAAqB,CAAC,CAAD,CAArB;AACAC,UAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;AACF,OAzBH,EA0BGyG,KA1BH,CA0BS,UAAUC,KAAV,EAAiB;AACtB5G,QAAAA,kBAAkB,CAChB,qEADgB,CAAlB;AAGAC,QAAAA,qBAAqB,CAAC,CAAD,CAArB;AACAC,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,OAhCH;AAiCD,KApDD,MAoDO;AACL0H,MAAAA,KAAK,CAAC,IAAD,CAAL;AACD;AACF,GAxD2B,EAwDzB,CACDhF,wBADC,EAEDsB,iBAFC,EAGDE,kBAHC,EAIDjE,2BAJC,EAKDE,QALC,EAMDgH,QANC,EAODrH,kBAPC,EAQDC,qBARC,EASDG,8BATC,EAUDF,mBAVC,CAxDyB,CAA5B,CAlec,CAuiBd;AACA;AACA;AACA;;AACA,QAAM2H,UAAU,GAAGjJ,WAAW,CAC3B4G,CAAD,IAAO;AACL,QAAIA,CAAC,CAACsC,GAAF,KAAU,OAAV,IAAqBtC,CAAC,CAACsC,GAAF,KAAU,aAAnC,EAAkD;AAChDR,MAAAA,QAAQ;AACT;AACF,GAL2B,EAM5B,CAACA,QAAD,CAN4B,CAA9B;AAQAzI,EAAAA,SAAS,CAAC,MAAM;AACdkJ,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCH,UAArC;AACA,WAAO,MAAME,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCJ,UAAxC,CAAb;AACD,GAHQ,EAGN,CAACA,UAAD,CAHM,CAAT,CAnjBc,CAwjBd;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACE;AAAA,cACGxI;AAAQ;AAAD;AAAA;AACN;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,KAAK,EAAE;AAAE6I,YAAAA,KAAK,EAAE;AAAT,WAA1B;AAAA,kCACE,QAAC,oBAAD;AACE,YAAA,KAAK,EAAE5H,iBADT;AAEE,YAAA,MAAM,EAAC,IAFT;AAGE,YAAA,SAAS,EAAE8D,kBAAkB,CAACR,eAHhC;AAIE,YAAA,SAAS,EAAC,UAJZ;AAKE,YAAA,iBAAiB,EAAEe,iBAAiB,CAACf,eALvC;AAME,YAAA,WAAW,EAAE9D,WANf;AAOE,YAAA,IAAI,EAAE,IAPR;AAQE,YAAA,YAAY,EAAEoF,oBARhB;AASE,YAAA,SAAS,EAAED,iBATb;AAUE,YAAA,GAAG,EAAEzE,WAVP;AAWE,YAAA,2BAA2B,EAAEL;AAX/B;AAAA;AAAA;AAAA;AAAA,kBADF,eAcE,QAAC,eAAD;AACE,YAAA,UAAU,EAAC,OADb;AAEE,YAAA,+BAA+B,EAC7BO,+BAHJ;AAKE,YAAA,kCAAkC,EAChCC,kCANJ;AAQE,YAAA,KAAK,EAAEL,iBART;AASE,YAAA,QAAQ,EAAEC,oBATZ;AAUE,YAAA,gBAAgB,EAAEgF,gBAVpB;AAWE,YAAA,eAAe,EAAEvB,eAXnB;AAYE,YAAA,2BAA2B,EAAEmB,2BAZ/B;AAaE,YAAA,kBAAkB,EAAEL,kBAbtB;AAcE,YAAA,IAAI,EAAC,QAdP;AAeE,YAAA,SAAS,EAAE,KAfb;AAgBE,YAAA,YAAY,EAAE,KAhBhB;AAiBE,YAAA,UAAU,EAAEhF,WAjBd;AAkBE,YAAA,2BAA2B,EAAEK;AAlB/B;AAAA;AAAA;AAAA;AAAA,kBAdF,eAkCE,QAAC,eAAD;AACE,YAAA,UAAU,EAAC,OADb;AAEE,YAAA,+BAA+B,EAC7BO,+BAHJ;AAKE,YAAA,kCAAkC,EAChCC,kCANJ;AAQE,YAAA,KAAK,EAAEL,iBART;AASE,YAAA,QAAQ,EAAEC,oBATZ;AAUE,YAAA,gBAAgB,EAAEgF,gBAVpB;AAWE,YAAA,eAAe,EAAEvB,eAXnB;AAYE,YAAA,2BAA2B,EAAEmB,2BAZ/B;AAaE,YAAA,kBAAkB,EAAEL,kBAbtB;AAcE,YAAA,IAAI,EAAC,QAdP;AAeE,YAAA,SAAS,EAAE,IAfb;AAgBE,YAAA,YAAY,EAAE,KAhBhB;AAiBE,YAAA,UAAU,EAAEhF,WAjBd;AAkBE,YAAA,2BAA2B,EAAEK;AAlB/B;AAAA;AAAA;AAAA;AAAA,kBAlCF,eAsDE,QAAC,eAAD;AACE,YAAA,UAAU,EAAC,OADb;AAEE,YAAA,+BAA+B,EAC7BO,+BAHJ;AAKE,YAAA,kCAAkC,EAChCC,kCANJ;AAQE,YAAA,KAAK,EAAEL,iBART;AASE,YAAA,QAAQ,EAAEC,oBATZ;AAUE,YAAA,gBAAgB,EAAEgF,gBAVpB;AAWE,YAAA,eAAe,EAAEvB,eAXnB;AAYE,YAAA,2BAA2B,EAAEmB,2BAZ/B;AAaE,YAAA,kBAAkB,EAAEL,kBAbtB;AAcE,YAAA,IAAI,EAAC,QAdP;AAeE,YAAA,SAAS,EAAE,KAfb;AAgBE,YAAA,YAAY,EAAE,IAhBhB;AAiBE,YAAA,UAAU,EAAEhF,WAjBd;AAkBE,YAAA,2BAA2B,EAAEK;AAlB/B;AAAA;AAAA;AAAA;AAAA,kBAtDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eA8EE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,KAAK,EAAE;AACLgI,UAAAA,OAAO,EAAEhI,2BAA2B,GAAG,CAAH,GAAO,CADtC;AAELiI,UAAAA,SAAS,EAAE;AAFN,SAFT;AAME,QAAA,SAAS,EAAC,mBANZ;AAAA,gCAQE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,gBARF,eASE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,SAAS,EAAC,uBAArB;AAA6C,UAAA,EAAE,EAAE,CAAjD;AAAoD,UAAA,KAAK,EAAE,EAA3D;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,KAAK,EAAE;AACLC,cAAAA,QAAQ,EAAEvH,UADL;AAELwH,cAAAA,SAAS,EAAEvH,eAFN;AAGLwH,cAAAA,OAAO,EAAEvH,GAHJ;AAILwH,cAAAA,YAAY,EAAE,MAJT;AAKLC,cAAAA,YAAY,EAAEjG,uBALT;AAMLkG,cAAAA,eAAe,EAAEjG,0BANZ;AAOLkG,cAAAA,SAAS,EAAEjG,oBAPN;AAQLkG,cAAAA,UAAU,EAAExB;AARP,aADT;AAWE,YAAA,OAAO,EAAEE,QAXX;AAYE,YAAA,SAAS,EAAE,IAZb;AAaE,YAAA,OAAO,EAAC,WAbV;AAcE,YAAA,IAAI,EAAC,OAdP;AAeE,YAAA,KAAK,EAAC,WAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,EA6BU,GA7BV;AAAA;AAAA;AAAA;AAAA;AAAA,cA9EF,EA4GU,GA5GV;AAAA;AA6GI;AA9GE;AAAA;;AAgHN;AACA;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,KAAK,EAAE;AAAEY,YAAAA,KAAK,EAAE;AAAT,WAA1B;AAAA,kCACE,QAAC,oBAAD;AACE,YAAA,KAAK,EAAE5H,iBADT;AAEE,YAAA,MAAM,EAAC,IAFT;AAGE,YAAA,SAAS,EAAE8D,kBAAkB,CAACR,eAHhC;AAIE,YAAA,SAAS,EAAC,UAJZ;AAKE,YAAA,iBAAiB,EAAEe,iBAAiB,CAACf,eALvC;AAME,YAAA,WAAW,EAAE9D,WANf;AAOE,YAAA,IAAI,EAAE,IAPR;AAQE,YAAA,YAAY,EAAEoF,oBARhB;AASE,YAAA,SAAS,EAAED,iBATb;AAUE,YAAA,GAAG,EAAEzE,WAVP;AAWE,YAAA,2BAA2B,EAAEL;AAX/B;AAAA;AAAA;AAAA;AAAA,kBADF,eAcE,QAAC,eAAD;AACE,YAAA,UAAU,EAAC,OADb;AAEE,YAAA,+BAA+B,EAC7BO,+BAHJ;AAKE,YAAA,kCAAkC,EAChCC,kCANJ;AAQE,YAAA,KAAK,EAAEL,iBART;AASE,YAAA,QAAQ,EAAEC,oBATZ;AAUE,YAAA,gBAAgB,EAAEgF,gBAVpB;AAWE,YAAA,eAAe,EAAEvB,eAXnB;AAYE,YAAA,2BAA2B,EAAEmB,2BAZ/B;AAaE,YAAA,kBAAkB,EAAEL,kBAbtB;AAcE,YAAA,IAAI,EAAC,QAdP;AAeE,YAAA,SAAS,EAAE,KAfb;AAgBE,YAAA,YAAY,EAAE,KAhBhB;AAiBE,YAAA,UAAU,EAAEhF,WAjBd;AAkBE,YAAA,2BAA2B,EAAEK;AAlB/B;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAuCE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,KAAK,EAAE;AACLgI,UAAAA,OAAO,EAAEhI,2BAA2B,GAAG,CAAH,GAAO;AADtC,SAFT;AAKE,QAAA,SAAS,EAAC,mBALZ;AAAA,gCAOE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,SAAS,EAAC,uBAArB;AAA6C,UAAA,EAAE,EAAE,CAAjD;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,KAAK,EAAE;AACLkI,cAAAA,QAAQ,EAAEvH,UADL;AAELwH,cAAAA,SAAS,EAAEvH,eAFN;AAGLwH,cAAAA,OAAO,EAAEvH,GAHJ;AAILwH,cAAAA,YAAY,EAAE,MAJT;AAKLC,cAAAA,YAAY,EAAEjG,uBALT;AAMLkG,cAAAA,eAAe,EAAEjG,0BANZ;AAOLkG,cAAAA,SAAS,EAAEjG;AAPN,aADT;AAUE,YAAA,OAAO,EAAE4E,QAVX;AAWE,YAAA,SAAS,EAAE,IAXb;AAYE,YAAA,OAAO,EAAC,WAZV;AAaE,YAAA,IAAI,EAAC,OAbP;AAcE,YAAA,KAAK,EAAC,WAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvCF;AAAA;AAlHJ;AAyLA;AA1LF;AA4LD;;GAxwBQ1H,gB;UAUUJ,W,EA6CID,W,EAUsCA,W,EAMAA,W,EAMAA,W,EAMAA,W,EA6D5CA,W,EAY+BA,W;;;KA5JvCK,gB;AA0wBT,OAAO,MAAMiJ,eAAe,gBAAGpK,KAAK,CAACqK,IAAN,CAAWlJ,gBAAX,CAAxB;MAAMiJ,e","sourcesContent":["import React, { useRef, useState, useCallback, useEffect } from \"react\";\r\nimport { Ispinnerinterface, IFormHolder } from \"../log/log-Interfaces\";\r\nimport Axios from \"axios\";\r\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\r\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\r\nimport { TextFieldLogin } from \"../log/TextFieldLogin\";\r\nimport { TextFieldSignup } from \"../log/TextFieldSignup\";\r\nimport { ModalFormSignupError } from \"../log/ModalFormSignupError\";\r\nimport { ModalFormLoginError } from \"../log/ModalFormLoginError\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { IsLoggedAction } from \"../log/actions/IsLoggedAction\";\r\nimport { UserdataAction } from \"../log/actions/UserdataAction\";\r\nimport { ActivateLoaderAction, HideLoaderAction } from \"../GlobalActions\";\r\n//////import { useHistory } from \"react-router-dom\";\r\nimport { PasswordCheck } from \"../log/PasswordCheck\";\r\nimport { UpdateColorAction } from \"../GlobalActions\";\r\nimport { UserInfoUpdateAction } from \"../log/actions/UserdataAction\";\r\n\r\nAxios.defaults.withCredentials = true;\r\n\r\nfunction AboutFormHolderx({\r\n  zoomedModal,\r\n  WidthHolder,\r\n  loginForm,\r\n  setServerErrorData,\r\n  setServerErrorDisplay,\r\n  setserverEmojiplain,\r\n  checkSignupPasswordACTIVATE,\r\n  setcheckSignupPasswordACTIVATE,\r\n}: IFormHolder) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [focusUsernameSign, setFocusUsernameSign] = useState<boolean>(false);\r\n\r\n  const [bopUsername, setbopUsername] = useState<boolean>(false);\r\n\r\n  const [showFocusTextFieldByHidePadding, setShowFocusTextFieldByHidePadding] =\r\n    useState<boolean>(false);\r\n\r\n  const [responseErrorConfirmPassword, setresponseErrorConfirmPassword] =\r\n    useState<boolean>(false);\r\n\r\n  var buttonFont = \"\";\r\n  var buttonTransform = \" \";\r\n  var pad = \"\";\r\n\r\n  ///\r\n  ///\r\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\r\n  if (matchPc) {\r\n    buttonFont = \"1vw\";\r\n    buttonTransform = \" \";\r\n    pad = \"14.5px\";\r\n\r\n    ///\r\n  } else if (matchTablet) {\r\n    pad = \"16px\";\r\n    buttonFont = \"2vw\";\r\n    buttonTransform = \" \";\r\n    ///\r\n  } else {\r\n    buttonFont = \"\";\r\n    buttonTransform = \"scale(0.95)\";\r\n    pad = \"16px\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET  SIGNUP BUTTON AND LOGIN BUTTON STYLE FROM REDUX\r\n  const { MozBoxShadowSD, WebkitBoxShadowSD, boxShadowSD } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.ButtonsSignUpReducerDark,\r\n    })\r\n  );\r\n\r\n  const { MozBoxShadowSL, WebkitBoxShadowSL, boxShadowSL } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.ButtonsSignUpReducerLight,\r\n    })\r\n  );\r\n\r\n  const { MozBoxShadowLD, WebkitBoxShadowLD, boxShadowLD } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.ButtonsLoginReducerDark,\r\n    })\r\n  );\r\n\r\n  const { MozBoxShadowLL, WebkitBoxShadowLL, boxShadowLL } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.ButtonsLoginReducerLight,\r\n    })\r\n  );\r\n\r\n  var MozBoxShadowReducerLogin = \" \";\r\n  var WebkitBoxShadowReducerLogin = \" \";\r\n  var boxShadowReducerLogin = \" \";\r\n\r\n  var MozBoxShadowReducerSign = \" \";\r\n  var WebkitBoxShadowReducerSign = \" \";\r\n  var boxShadowReducerSign = \" \";\r\n\r\n  if (darkmodeReducer) {\r\n    MozBoxShadowReducerLogin = MozBoxShadowLD;\r\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLD;\r\n    boxShadowReducerLogin = boxShadowLD;\r\n\r\n    MozBoxShadowReducerSign = MozBoxShadowSD;\r\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSD;\r\n    boxShadowReducerSign = boxShadowSD;\r\n  } else {\r\n    MozBoxShadowReducerLogin = MozBoxShadowLL;\r\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLL;\r\n    boxShadowReducerLogin = boxShadowLL;\r\n\r\n    MozBoxShadowReducerSign = MozBoxShadowSL;\r\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSL;\r\n    boxShadowReducerSign = boxShadowSL;\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///HISTORY VARIABLE\r\n  ////const history = useHistory();\r\n  ///\r\n\r\n  ///\r\n  ///\r\n  ///SUPERSTARZ ICON SELECT\r\n  var SuperIcon = \"\";\r\n  darkmodeReducer\r\n    ? (SuperIcon = SuperstarzIconDark)\r\n    : (SuperIcon = SuperstarzIconLight);\r\n\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      id: number;\r\n      image: string;\r\n      username: string;\r\n      quote: string;\r\n      biography: string;\r\n    };\r\n  }\r\n  const { id } = useSelector((state: RootStateReducerImage) => ({\r\n    ...state.UserdataReducer,\r\n  }));\r\n  const idReducer = id;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {};\r\n  }\r\n  const { image, username, quote, biography } = useSelector(\r\n    (state: RootStateReducerImage) => ({\r\n      ...state.UserdataReducer,\r\n    })\r\n  );\r\n  const imageReducer = image;\r\n  const usernameReducer = username;\r\n  const quoteReducer = quote;\r\n  const biographyReducer = biography;\r\n  ///\r\n  ///\r\n  ///UPDATE SIGN UP DETAILS\r\n  ///\r\n  ///\r\n  ///\r\n  /// SANITISE SIGN UP FORM INPUT CLIENT\r\n  const initialRawSignValue = {\r\n    inputedQuote: \"\",\r\n    inputedUsername: \"\",\r\n    inputedDescription: \"\",\r\n    id: idReducer,\r\n  };\r\n  const initialCleanSignValue = {\r\n    inputedQuote: \"\",\r\n    inputedUsername: \"\",\r\n    inputedDescription: \"\",\r\n    id: idReducer,\r\n  };\r\n\r\n  const initialErrorSignValue = {\r\n    inputedQuote: 0,\r\n    inputedUsername: 0,\r\n    inputedDescription: 0,\r\n  };\r\n\r\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\r\n  const [cleanSignupValues, setCleanSignupValues] = useState(\r\n    initialCleanSignValue\r\n  );\r\n  const [errorsSignupValues, setErrorsSignupValues] = useState(\r\n    initialErrorSignValue\r\n  );\r\n\r\n  const EmailCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const UsernameCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const initialspinner: any = {\r\n    inputedUsername: false,\r\n    inputedquote: false,\r\n    inputeddescription: false,\r\n  };\r\n\r\n  const [errorFormChecking, setErrorFormChecking] = useState(initialspinner);\r\n  const PasswordCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const [signupShowPassword, setSignupShowPassword] = useState<boolean>(false);\r\n  const signupShowPasswordTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///SIGN UP ERROR VARIABLES\r\n  let usernameErrorData = null;\r\n  let usernameErrorDisplay = 0;\r\n\r\n  switch (errorsSignupValues.inputedUsername) {\r\n    case 1:\r\n      usernameErrorData =\r\n        \"usernames can only use letters, numbers, underscores and periods \";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 2:\r\n      usernameErrorData = \"username is taken\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 3:\r\n      usernameErrorData = \"username is available\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 4:\r\n      usernameErrorData = \"username  required\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      usernameErrorData = null;\r\n      usernameErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///SIGN UP ERROR VARIABLES\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW  SIGNUP PASSWORD FOR A WHILE\r\n  const ShowSignupPasswordForaWhile = useCallback(() => {\r\n    if (signupShowPasswordTimer.current) {\r\n      clearTimeout(signupShowPasswordTimer.current);\r\n    }\r\n    setSignupShowPassword(!signupShowPassword);\r\n    signupShowPasswordTimer.current = setTimeout(() => {\r\n      setSignupShowPassword(false);\r\n    }, 2000);\r\n  }, [signupShowPassword]);\r\n\r\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\r\n  const updateSignvalues = useCallback(\r\n    (e: any) => {\r\n      const { name, value } = e.target;\r\n\r\n      if (name === \"inputedUsername\") {\r\n        let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\r\n        let cleanValue = value.replace(usernameCleaner, \"\");\r\n\r\n        let usernameLimiter = /^.{26}$/;\r\n        let finalUsername = cleanValue.replace(usernameLimiter, \"\");\r\n\r\n        let checkUsernameClean = usernameCleaner.test(value);\r\n        let checkUsernameLimited = usernameLimiter.test(cleanValue);\r\n\r\n        if (checkUsernameClean) {\r\n          if (UsernameCheckingTimer.current) {\r\n            clearTimeout(UsernameCheckingTimer.current);\r\n          }\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n        } else {\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n        }\r\n\r\n        let userNameLength = finalUsername.length;\r\n\r\n        if (checkUsernameClean) {\r\n        } else {\r\n          if (checkUsernameLimited || userNameLength > 26) {\r\n          } else {\r\n            setRawSignupValues({\r\n              ...rawSignupValues,\r\n              [name]: finalUsername,\r\n            });\r\n            setCleanSignupValues({\r\n              ...cleanSignupValues,\r\n              [name]: finalUsername,\r\n            });\r\n            /// AXIOS REQUEST FOR CHECK USERNAME\r\n            if (UsernameCheckingTimer.current) {\r\n              clearTimeout(UsernameCheckingTimer.current);\r\n\r\n              setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n            }\r\n\r\n            if (errorFormChecking.inputedUsername) {\r\n            } else {\r\n              setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n            }\r\n\r\n            setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n            UsernameCheckingTimer.current = setTimeout(() => {\r\n              if (value.length === 0) {\r\n                setErrorsSignupValues({\r\n                  ...errorsSignupValues,\r\n                  [name]: 0,\r\n                });\r\n                setErrorFormChecking({\r\n                  ...errorFormChecking,\r\n                  [name]: false,\r\n                });\r\n              } else {\r\n                Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/usernamecheck`, {\r\n                  value: finalUsername,\r\n                })\r\n                  .then((response) => {\r\n                    if (response.data.message === \"username is not unique\") {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 2,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    } else if (\r\n                      response.data.message === \"username is available\"\r\n                    ) {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 3,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    } else {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 0,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    }\r\n                  })\r\n                  .catch(function (error) {\r\n                    if (error.response) {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 0,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    } else if (error.request) {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 0,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    } else {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 0,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    }\r\n                  });\r\n              }\r\n            }, 3000);\r\n            /// AXIOS REQUEST FOR CHECK USERNAME\r\n          }\r\n        }\r\n        ///\r\n      } else if (name === \"inputedQuote\") {\r\n        let dataCleaner = /[^a-z0-9áéíóúñü\\._ ]/gim;\r\n        let cleanValue = value.replace(dataCleaner, \"\");\r\n\r\n        let dataLimiter = /^.{70}$/;\r\n        let finaldata = cleanValue.replace(dataLimiter, \"\");\r\n\r\n        let checkdataClean = dataCleaner.test(value);\r\n        let checkdataLimited = dataLimiter.test(cleanValue);\r\n\r\n        let dataLength = finaldata.length;\r\n\r\n        if (checkdataClean) {\r\n        } else {\r\n          if (checkdataLimited || dataLength > 70) {\r\n          } else {\r\n            setRawSignupValues({\r\n              ...rawSignupValues,\r\n              [name]: finaldata,\r\n            });\r\n            setCleanSignupValues({\r\n              ...cleanSignupValues,\r\n              [name]: finaldata,\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        let dataCleaner = /[^a-z0-9áéíóúñü\\._ ]/gim;\r\n        let cleanValue = value.replace(dataCleaner, \"\");\r\n\r\n        let dataLimiter = /^.{500}$/;\r\n        let finaldata = cleanValue.replace(dataLimiter, \"\");\r\n\r\n        let checkdataClean = dataCleaner.test(value);\r\n        let checkdataLimited = dataLimiter.test(cleanValue);\r\n\r\n        let dataLength = finaldata.length;\r\n\r\n        if (checkdataClean) {\r\n        } else {\r\n          if (checkdataLimited || dataLength > 500) {\r\n          } else {\r\n            setRawSignupValues({\r\n              ...rawSignupValues,\r\n              [name]: finaldata,\r\n            });\r\n            setCleanSignupValues({\r\n              ...cleanSignupValues,\r\n              [name]: finaldata,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      cleanSignupValues,\r\n      rawSignupValues,\r\n      errorsSignupValues,\r\n      errorFormChecking,\r\n      REACT_APP_SUPERSTARZ_URL,\r\n    ]\r\n  );\r\n\r\n  var updatebuttonShow: any = \"hidden\";\r\n  if (\r\n    cleanSignupValues.inputedUsername ||\r\n    cleanSignupValues.inputedQuote ||\r\n    cleanSignupValues.inputedDescription\r\n  ) {\r\n    updatebuttonShow = \"visible\";\r\n  } else {\r\n    updatebuttonShow = \"hidden\";\r\n  }\r\n\r\n  var aboutboy: any = {\r\n    inputedUsername: \"\",\r\n    inputedQuote: \"\",\r\n    inputedDescription: 0,\r\n    id: idReducer,\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\r\n\r\n  const signmeup = useCallback(() => {\r\n    if (\r\n      cleanSignupValues.inputedUsername ||\r\n      cleanSignupValues.inputedQuote ||\r\n      cleanSignupValues.inputedDescription\r\n    ) {\r\n      var T1 = \"\";\r\n      var T2 = \"\";\r\n      if (cleanSignupValues.inputedUsername) {\r\n        T1 = cleanSignupValues.inputedUsername;\r\n      } else {\r\n        T1 = cleanSignupValues.inputedUsername;\r\n      }\r\n      aboutboy = {\r\n        inputedUsername: T1,\r\n        inputedQuote: \"\",\r\n        inputedDescription: 0,\r\n        id: idReducer,\r\n      };\r\n\r\n      Axios.put(\r\n        `http://${REACT_APP_SUPERSTARZ_URL}/update_basic`,\r\n        { values: aboutboy },\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      )\r\n        .then((response) => {\r\n          if (response.data.message === \"username updated\") {\r\n            setServerErrorData(\"username updated\");\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(true);\r\n            const data = {\r\n              username: cleanSignupValues.inputedUsername,\r\n              quote: cleanSignupValues.inputedQuote,\r\n              describe: cleanSignupValues.inputedDescription,\r\n            };\r\n            dispatch(UserInfoUpdateAction(data));\r\n          } else {\r\n            setServerErrorData(\r\n              \"something went wrong while updating your username , please try again\"\r\n            );\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(false);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          setServerErrorData(\r\n            \"something went wrong while updating your username, please try again\"\r\n          );\r\n          setServerErrorDisplay(1);\r\n          setserverEmojiplain(false);\r\n        });\r\n    } else {\r\n      alert(\"no\");\r\n    }\r\n  }, [\r\n    REACT_APP_SUPERSTARZ_URL,\r\n    cleanSignupValues,\r\n    errorsSignupValues,\r\n    checkSignupPasswordACTIVATE,\r\n    dispatch,\r\n    aboutboy,\r\n    setServerErrorData,\r\n    setServerErrorDisplay,\r\n    setcheckSignupPasswordACTIVATE,\r\n    setserverEmojiplain,\r\n  ]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///ENTER KEY EMULATE FORM ACTION\r\n  const enterPress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n        signmeup();\r\n      }\r\n    },\r\n    [signmeup]\r\n  );\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", enterPress);\r\n    return () => document.removeEventListener(\"keydown\", enterPress);\r\n  }, [enterPress]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n  /// UPDATE SIGN UP DETAILS\r\n\r\n  ///\r\n  ///\r\n  ///\r\n\r\n  return (\r\n    <>\r\n      {matchPc /*PC PC PC PC PC PC PC PC  SIGNUP  PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */ ? (\r\n        <>\r\n          <Grid container>\r\n            <Grid item xs={12} style={{ width: \"150%\" }}>\r\n              <ModalFormSignupError\r\n                focus={focusUsernameSign}\r\n                device=\"pc\"\r\n                ErrorType={errorsSignupValues.inputedUsername}\r\n                textField=\"username\"\r\n                errorFormChecking={errorFormChecking.inputedUsername}\r\n                WidthHolder={WidthHolder}\r\n                type={true}\r\n                ErrorDisplay={usernameErrorDisplay}\r\n                ErrorData={usernameErrorData}\r\n                bop={bopUsername}\r\n                checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n              />\r\n              <TextFieldSignup\r\n                sourceType=\"ABOUT\"\r\n                showFocusTextFieldByHidePadding={\r\n                  showFocusTextFieldByHidePadding\r\n                }\r\n                setShowFocusTextFieldByHidePadding={\r\n                  setShowFocusTextFieldByHidePadding\r\n                }\r\n                focus={focusUsernameSign}\r\n                setFocus={setFocusUsernameSign}\r\n                updateSignvalues={updateSignvalues}\r\n                rawSignupValues={rawSignupValues}\r\n                ShowSignupPasswordForaWhile={ShowSignupPasswordForaWhile}\r\n                signupShowPassword={signupShowPassword}\r\n                size=\"medium\"\r\n                emailType={false}\r\n                passwordType={false}\r\n                withHolder={WidthHolder}\r\n                checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n              />\r\n              <TextFieldSignup\r\n                sourceType=\"ABOUT\"\r\n                showFocusTextFieldByHidePadding={\r\n                  showFocusTextFieldByHidePadding\r\n                }\r\n                setShowFocusTextFieldByHidePadding={\r\n                  setShowFocusTextFieldByHidePadding\r\n                }\r\n                focus={focusUsernameSign}\r\n                setFocus={setFocusUsernameSign}\r\n                updateSignvalues={updateSignvalues}\r\n                rawSignupValues={rawSignupValues}\r\n                ShowSignupPasswordForaWhile={ShowSignupPasswordForaWhile}\r\n                signupShowPassword={signupShowPassword}\r\n                size=\"medium\"\r\n                emailType={true}\r\n                passwordType={false}\r\n                withHolder={WidthHolder}\r\n                checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n              />\r\n              <TextFieldSignup\r\n                sourceType=\"ABOUT\"\r\n                showFocusTextFieldByHidePadding={\r\n                  showFocusTextFieldByHidePadding\r\n                }\r\n                setShowFocusTextFieldByHidePadding={\r\n                  setShowFocusTextFieldByHidePadding\r\n                }\r\n                focus={focusUsernameSign}\r\n                setFocus={setFocusUsernameSign}\r\n                updateSignvalues={updateSignvalues}\r\n                rawSignupValues={rawSignupValues}\r\n                ShowSignupPasswordForaWhile={ShowSignupPasswordForaWhile}\r\n                signupShowPassword={signupShowPassword}\r\n                size=\"medium\"\r\n                emailType={false}\r\n                passwordType={true}\r\n                withHolder={WidthHolder}\r\n                checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            style={{\r\n              opacity: checkSignupPasswordACTIVATE ? 0 : 1,\r\n              marginTop: \"-20px\",\r\n            }}\r\n            className=\"modal-hold-signup\"\r\n          >\r\n            <Grid item xs={4}></Grid>\r\n            <Grid item className=\"buttonpad buttonshake\" xs={4} style={{}}>\r\n              <Button\r\n                style={{\r\n                  fontSize: buttonFont,\r\n                  transform: buttonTransform,\r\n                  padding: pad,\r\n                  borderRadius: \"50px\",\r\n                  MozBoxShadow: MozBoxShadowReducerSign,\r\n                  WebkitBoxShadow: WebkitBoxShadowReducerSign,\r\n                  boxShadow: boxShadowReducerSign,\r\n                  visibility: updatebuttonShow,\r\n                }}\r\n                onClick={signmeup}\r\n                fullWidth={true}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"secondary\"\r\n              >\r\n                Update\r\n              </Button>\r\n            </Grid>{\" \"}\r\n          </Grid>{\" \"}\r\n        </> /*PC PC PC PC   SIGN UP PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\r\n      ) : (\r\n        /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\r\n        <>\r\n          <Grid container>\r\n            <Grid item xs={12} style={{ width: \"150%\" }}>\r\n              <ModalFormSignupError\r\n                focus={focusUsernameSign}\r\n                device=\"pc\"\r\n                ErrorType={errorsSignupValues.inputedUsername}\r\n                textField=\"username\"\r\n                errorFormChecking={errorFormChecking.inputedUsername}\r\n                WidthHolder={WidthHolder}\r\n                type={true}\r\n                ErrorDisplay={usernameErrorDisplay}\r\n                ErrorData={usernameErrorData}\r\n                bop={bopUsername}\r\n                checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n              />\r\n              <TextFieldSignup\r\n                sourceType=\"ABOUT\"\r\n                showFocusTextFieldByHidePadding={\r\n                  showFocusTextFieldByHidePadding\r\n                }\r\n                setShowFocusTextFieldByHidePadding={\r\n                  setShowFocusTextFieldByHidePadding\r\n                }\r\n                focus={focusUsernameSign}\r\n                setFocus={setFocusUsernameSign}\r\n                updateSignvalues={updateSignvalues}\r\n                rawSignupValues={rawSignupValues}\r\n                ShowSignupPasswordForaWhile={ShowSignupPasswordForaWhile}\r\n                signupShowPassword={signupShowPassword}\r\n                size=\"medium\"\r\n                emailType={false}\r\n                passwordType={false}\r\n                withHolder={WidthHolder}\r\n                checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            style={{\r\n              opacity: checkSignupPasswordACTIVATE ? 0 : 1,\r\n            }}\r\n            className=\"modal-hold-signup\"\r\n          >\r\n            <Grid item xs={4}></Grid>\r\n            <Grid item className=\"buttonpad buttonshake\" xs={4}>\r\n              <Button\r\n                style={{\r\n                  fontSize: buttonFont,\r\n                  transform: buttonTransform,\r\n                  padding: pad,\r\n                  borderRadius: \"50px\",\r\n                  MozBoxShadow: MozBoxShadowReducerSign,\r\n                  WebkitBoxShadow: WebkitBoxShadowReducerSign,\r\n                  boxShadow: boxShadowReducerSign,\r\n                }}\r\n                onClick={signmeup}\r\n                fullWidth={true}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"secondary\"\r\n              >\r\n                Update\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n    /*MOBILE  MOBILE  MOBILE  MOBILE  SIGNUP MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\r\n  );\r\n}\r\n\r\nexport const AboutFormHolder = React.memo(AboutFormHolderx);\r\n"]},"metadata":{},"sourceType":"module"}