{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\Option.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\nimport \"./Option.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Option({\n  darkmode,\n  setDarkmode,\n  switchsize\n}) {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n  var useStyle = makeStyles(createMuiTheme => ({\n    textAlignLeft: {\n      [createMuiTheme.breakpoints.up(\"xs\")]: {\n        textAlign: \"left\",\n        marginLeft: \"-17px\"\n      },\n      [createMuiTheme.breakpoints.up(\"sm\")]: {\n        textAlign: \"left\",\n        marginLeft: \"-10px\"\n      }\n    }\n  }));\n  var classes = useStyle(); //\n  //\n  //\n  // CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\n\n  const closemodal = backbutton => {\n    //pop states fires when back and forward buttons used\n    if (backbutton === 1) {\n      window.onpopstate = () => {\n        window.history.pushState(null, \"\", window.location.href);\n        window.onpopstate = null;\n        setShowModal(false);\n      };\n    } else {\n      window.history.pushState(null, \"\", \".\");\n      window.onpopstate = null;\n      setShowModal(false);\n    }\n  }; //\n  //\n  //\n  //OPEN MODAL THEN CALL CLOSEMODAL FUNCTION WHICH WAITS FOR A POP EVENT(for closing modal)\n\n\n  const Openmodal = () => {\n    setShowModal(!showModal); //pushstate add enteries to your history\n\n    window.history.pushState(null, \"\", \"Options\");\n    closemodal(1);\n  };\n\n  console.log(\"zerformance issues\");\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: \"kk\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Option, \"k3PKPZa0Gau3j0K05DITH+2bYVk=\", true);\n\n_c = Option;\n\nvar _c;\n\n$RefreshReg$(_c, \"Option\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/Option.tsx"],"names":["useState","Grid","makeStyles","Option","darkmode","setDarkmode","switchsize","showModal","setShowModal","useStyle","createMuiTheme","textAlignLeft","breakpoints","up","textAlign","marginLeft","classes","closemodal","backbutton","window","onpopstate","history","pushState","location","href","Openmodal","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAIA,SAEEC,IAFF,EAIEC,UAJF,QAOO,mBAPP;AAQA,OAAO,cAAP;;AAEA,eAAe,SAASC,MAAT,CAAgB;AAC7BC,EAAAA,QAD6B;AAE7BC,EAAAA,WAF6B;AAG7BC,EAAAA;AAH6B,CAAhB,EAIM;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAU,KAAV,CAA1C;AAEA,MAAIS,QAAQ,GAAGP,UAAU,CAAEQ,cAAD,KAAqB;AAC7CC,IAAAA,aAAa,EAAE;AACb,OAACD,cAAc,CAACE,WAAf,CAA2BC,EAA3B,CAA8B,IAA9B,CAAD,GAAuC;AACrCC,QAAAA,SAAS,EAAE,MAD0B;AAErCC,QAAAA,UAAU,EAAE;AAFyB,OAD1B;AAKb,OAACL,cAAc,CAACE,WAAf,CAA2BC,EAA3B,CAA8B,IAA9B,CAAD,GAAuC;AACrCC,QAAAA,SAAS,EAAE,MAD0B;AAErCC,QAAAA,UAAU,EAAE;AAFyB;AAL1B;AAD8B,GAArB,CAAD,CAAzB;AAaA,MAAIC,OAAO,GAAGP,QAAQ,EAAtB,CAhBmB,CAkBnB;AACA;AACA;AACA;;AACA,QAAMQ,UAAU,GAAIC,UAAD,IAAwB;AACzC;AACA,QAAIA,UAAU,KAAK,CAAnB,EAAsB;AACpBC,MAAAA,MAAM,CAACC,UAAP,GAAoB,MAAM;AACxBD,QAAAA,MAAM,CAACE,OAAP,CAAeC,SAAf,CAAyB,IAAzB,EAA+B,EAA/B,EAAmCH,MAAM,CAACI,QAAP,CAAgBC,IAAnD;AACAL,QAAAA,MAAM,CAACC,UAAP,GAAoB,IAApB;AACAZ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAJD;AAKD,KAND,MAMO;AACLW,MAAAA,MAAM,CAACE,OAAP,CAAeC,SAAf,CAAyB,IAAzB,EAA+B,EAA/B,EAAmC,GAAnC;AACAH,MAAAA,MAAM,CAACC,UAAP,GAAoB,IAApB;AACAZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAbD,CAtBmB,CAqCnB;AACA;AACA;AACA;;;AACA,QAAMiB,SAAS,GAAG,MAAM;AACtBjB,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ,CADsB,CAEtB;;AACAY,IAAAA,MAAM,CAACE,OAAP,CAAeC,SAAf,CAAyB,IAAzB,EAA+B,EAA/B,EAAmC,SAAnC;AACAL,IAAAA,UAAU,CAAC,CAAD,CAAV;AACD,GALD;;AAOAS,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEA,sBAAO,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAvDuBxB,M;;KAAAA,M","sourcesContent":["import { useState } from \"react\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport OptionInnerModal from \"./OptionInnerModal\";\r\nimport { IOption } from \"./appFolder-Interfaces\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport \"./Option.css\";\r\n\r\nexport default function Option({\r\n  darkmode,\r\n  setDarkmode,\r\n  switchsize,\r\n}: any): JSX.Element {\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n\r\n  var useStyle = makeStyles((createMuiTheme) => ({\r\n    textAlignLeft: {\r\n      [createMuiTheme.breakpoints.up(\"xs\")]: {\r\n        textAlign: \"left\",\r\n        marginLeft: \"-17px\",\r\n      },\r\n      [createMuiTheme.breakpoints.up(\"sm\")]: {\r\n        textAlign: \"left\",\r\n        marginLeft: \"-10px\",\r\n      },\r\n    },\r\n  }));\r\n\r\n  var classes = useStyle();\r\n\r\n  //\r\n  //\r\n  //\r\n  // CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\r\n  const closemodal = (backbutton: number) => {\r\n    //pop states fires when back and forward buttons used\r\n    if (backbutton === 1) {\r\n      window.onpopstate = () => {\r\n        window.history.pushState(null, \"\", window.location.href);\r\n        window.onpopstate = null;\r\n        setShowModal(false);\r\n      };\r\n    } else {\r\n      window.history.pushState(null, \"\", \".\");\r\n      window.onpopstate = null;\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  //\r\n  //\r\n  //\r\n  //OPEN MODAL THEN CALL CLOSEMODAL FUNCTION WHICH WAITS FOR A POP EVENT(for closing modal)\r\n  const Openmodal = () => {\r\n    setShowModal(!showModal);\r\n    //pushstate add enteries to your history\r\n    window.history.pushState(null, \"\", \"Options\");\r\n    closemodal(1);\r\n  };\r\n\r\n  console.log(\"zerformance issues\");\r\n\r\n  return <Grid container>kk</Grid>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}