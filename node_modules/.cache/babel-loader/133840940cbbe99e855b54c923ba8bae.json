{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\Clikbate\\\\src\\\\upload\\\\InteractMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport { useSelector } from \"react-redux\";\nimport { matchMobile } from \"../DetectDevice\";\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport Slider from \"@material-ui/core/Slider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InteractMenux({\n  stickerOPtionsDefault,\n  setcropInitialIn,\n  setcropInitialIn2,\n  index,\n  moveCordinatesMultiple,\n  showBorder,\n  setshowBorder,\n  canxxtim,\n  canxxTime,\n  valuex,\n  valuex2,\n  handleChange,\n  adjustinteract1,\n  adjustinteract2,\n  interactContent,\n  interactContent2,\n  setadjustinteract1,\n  setadjustinteract2,\n  mobilefont,\n  pcfont,\n  handleChange2x\n}) {\n  _s();\n\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: adjustinteract1 || adjustinteract2 ? /*#__PURE__*/_jsxDEV(Grid, {\n      className: darkmodeReducer ? \"mobileTextfield-backplateColorDark\" : \"mobileTextfield-backplateColorLight\",\n      item: true,\n      xs: 12,\n      style: {\n        width: \"26%\",\n        padding: \"0px\",\n        position: \"absolute\",\n        top: \"0vh\",\n        right: \"0px\",\n        height: \"100vh\",\n        zIndex: 20,\n        display: stickerOPtionsDefault === 4 ? \"block\" : \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        onClick: () => {\n          if (adjustinteract1) {\n            setcropInitialIn(prevArray => {\n              const newArray = [...prevArray];\n              const updatedCropInitialIn = {\n                x: newArray[index].x,\n                y: newArray[index].y - moveCordinatesMultiple\n              };\n              newArray[index] = updatedCropInitialIn;\n\n              if (showBorder) {} else {\n                setshowBorder(true);\n              }\n\n              if (canxxtim.current) {\n                clearTimeout(canxxtim.current);\n              }\n\n              canxxtim.current = setTimeout(() => {\n                setshowBorder(false);\n              }, canxxTime);\n              return newArray;\n            });\n          }\n\n          if (adjustinteract2) {\n            setcropInitialIn2(prevArray => {\n              const newArray = [...prevArray];\n              const updatedCropInitialIn2 = {\n                x: newArray[index].x,\n                y: newArray[index].y - moveCordinatesMultiple\n              };\n              newArray[index] = updatedCropInitialIn2;\n\n              if (showBorder) {} else {\n                setshowBorder(true);\n              }\n\n              if (canxxtim.current) {\n                clearTimeout(canxxtim.current);\n              }\n\n              canxxtim.current = setTimeout(() => {\n                setshowBorder(false);\n              }, canxxTime);\n              return newArray;\n            });\n          }\n        },\n        style: {\n          top: \"4vh\",\n          width: \"50px\",\n          backgroundColor: \"\",\n          border: \"solid #ffffff\",\n          height: \"50px\",\n          margin: \"auto\",\n          borderRadius: \"50%\",\n          position: \"relative\",\n          cursor: \"pointer\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        onClick: () => {\n          if (adjustinteract1) {\n            setcropInitialIn(prevArray => {\n              const newArray = [...prevArray];\n              const updatedCropInitialIn = {\n                x: newArray[index].x - moveCordinatesMultiple,\n                y: newArray[index].y\n              };\n              newArray[index] = updatedCropInitialIn;\n\n              if (showBorder) {} else {\n                setshowBorder(true);\n              }\n\n              if (canxxtim.current) {\n                clearTimeout(canxxtim.current);\n              }\n\n              canxxtim.current = setTimeout(() => {\n                setshowBorder(false);\n              }, canxxTime);\n              return newArray;\n            });\n          }\n\n          if (adjustinteract2) {\n            setcropInitialIn2(prevArray => {\n              const newArray = [...prevArray];\n              const updatedCropInitialIn2 = {\n                x: newArray[index].x - moveCordinatesMultiple,\n                y: newArray[index].y\n              };\n              newArray[index] = updatedCropInitialIn2;\n\n              if (showBorder) {} else {\n                setshowBorder(true);\n              }\n\n              if (canxxtim.current) {\n                clearTimeout(canxxtim.current);\n              }\n\n              canxxtim.current = setTimeout(() => {\n                setshowBorder(false);\n              }, canxxTime);\n              return newArray;\n            });\n          }\n        },\n        style: {\n          top: \"5vh\",\n          width: \"50px\",\n          backgroundColor: \"\",\n          border: \"solid #ffffff\",\n          height: \"50px\",\n          left: \"8vw\",\n          borderRadius: \"50%\",\n          position: \"relative\",\n          cursor: \"pointer\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        onClick: () => {\n          if (adjustinteract1) {\n            setcropInitialIn(prevArray => {\n              const newArray = [...prevArray];\n              const updatedCropInitialIn = {\n                x: newArray[index].x + moveCordinatesMultiple,\n                y: newArray[index].y\n              };\n              newArray[index] = updatedCropInitialIn;\n\n              if (showBorder) {} else {\n                setshowBorder(true);\n              }\n\n              if (canxxtim.current) {\n                clearTimeout(canxxtim.current);\n              }\n\n              canxxtim.current = setTimeout(() => {\n                setshowBorder(false);\n              }, canxxTime);\n              return newArray;\n            });\n          }\n\n          if (adjustinteract2) {\n            setcropInitialIn2(prevArray => {\n              const newArray = [...prevArray];\n              const updatedCropInitialIn2 = {\n                x: newArray[index].x + moveCordinatesMultiple,\n                y: newArray[index].y\n              };\n              newArray[index] = updatedCropInitialIn2;\n\n              if (showBorder) {} else {\n                setshowBorder(true);\n              }\n\n              if (canxxtim.current) {\n                clearTimeout(canxxtim.current);\n              }\n\n              canxxtim.current = setTimeout(() => {\n                setshowBorder(false);\n              }, canxxTime);\n              return newArray;\n            });\n          }\n        },\n        style: {\n          top: \"-1vh\",\n          width: \"50px\",\n          backgroundColor: \"\",\n          border: \"solid #ffffff\",\n          height: \"50px\",\n          left: \"15vw\",\n          borderRadius: \"50%\",\n          position: \"relative\",\n          cursor: \"pointer\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: \"shake\",\n        xs: 12,\n        onClick: () => {\n          if (adjustinteract1) {\n            setcropInitialIn(prevArray => {\n              const newArray = [...prevArray];\n              const updatedCropInitialIn = {\n                x: newArray[index].x,\n                y: newArray[index].y + moveCordinatesMultiple\n              };\n              newArray[index] = updatedCropInitialIn;\n\n              if (showBorder) {} else {\n                setshowBorder(true);\n              }\n\n              if (canxxtim.current) {\n                clearTimeout(canxxtim.current);\n              }\n\n              canxxtim.current = setTimeout(() => {\n                setshowBorder(false);\n              }, canxxTime);\n              return newArray;\n            });\n          }\n\n          if (adjustinteract2) {\n            setcropInitialIn2(prevArray => {\n              const newArray = [...prevArray];\n              const updatedCropInitialIn2 = {\n                x: newArray[index].x,\n                y: newArray[index].y + moveCordinatesMultiple\n              };\n              newArray[index] = updatedCropInitialIn2;\n\n              if (showBorder) {} else {\n                setshowBorder(true);\n              }\n\n              if (canxxtim.current) {\n                clearTimeout(canxxtim.current);\n              }\n\n              canxxtim.current = setTimeout(() => {\n                setshowBorder(false);\n              }, canxxTime);\n              return newArray;\n            });\n          }\n        },\n        style: {\n          top: \"-0vh\",\n          width: \"50px\",\n          backgroundColor: \"\",\n          border: \"solid #ffffff\",\n          height: \"50px\",\n          borderRadius: \"50%\",\n          margin: \"auto\",\n          position: \"relative\",\n          cursor: \"pointer\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        style: {\n          position: \"relative\",\n          top: \"10vh\",\n          margin: \"auto\"\n        },\n        children: [adjustinteract1 ? /*#__PURE__*/_jsxDEV(Slider, {\n          value: valuex,\n          onChange: handleChange,\n          \"aria-labelledby\": \"discrete-slider\",\n          valueLabelDisplay: \"auto\",\n          marks: true,\n          min: 2,\n          step: 1,\n          max: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 40\n        }, this) : null, adjustinteract2 ? /*#__PURE__*/_jsxDEV(Slider, {\n          value: valuex2,\n          onChange: handleChange2x,\n          \"aria-labelledby\": \"discrete-slider\",\n          valueLabelDisplay: \"auto\",\n          marks: true,\n          min: 2,\n          step: 1,\n          max: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 40\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          width: \"100%\",\n          position: \"relative\",\n          top: \"25vh\",\n          margin: \"auto\",\n          textAlign: \"center\",\n          justifyContent: \"center\"\n        },\n        children: [adjustinteract1 && interactContent ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: interactContent,\n          style: {\n            width: \"50%\",\n            height: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 25\n        }, this) : null, adjustinteract2 && interactContent2 ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: interactContent2,\n          style: {\n            width: \"50%\",\n            height: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(CheckIcon, {\n          onClick: () => {\n            setadjustinteract1(false);\n            setadjustinteract2(false);\n          },\n          className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \",\n          style: {\n            margin: \"auto\",\n            color: \"#ffffff\",\n            fontSize: matchMobile ? `${mobilefont}vh` : `${pcfont}vw`,\n            position: \"absolute\",\n            bottom: \"-12vh\",\n            textAlign: \"center\",\n            left: \"12vw\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 51\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      className: darkmodeReducer ? \"mobileTextfield-backplateColorDark\" : \"mobileTextfield-backplateColorLight\",\n      item: true,\n      xs: 12,\n      style: {\n        width: \"26%\",\n        padding: \"0px\",\n        position: \"absolute\",\n        top: \"0vh\",\n        right: \"0px\",\n        height: \"100vh\",\n        zIndex: 20,\n        display: stickerOPtionsDefault === 4 ? \"block\" : \"none\"\n      },\n      children: [interactContent ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: interactContent,\n            style: {\n              width: \"100%\",\n              // Set the image width to 100%\n              height: \"auto\",\n              display: \"block\",\n              // Ensure proper rendering in some browsers\n              margin: \"0 auto\" // Center the image\n\n            },\n            alt: \"Interact Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              position: 'relative',\n              textAlign: 'center',\n              marginTop: '4vh'\n            },\n            children: \"llll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 40\n      }, this) : null, interactContent2 ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: interactContent2,\n            style: {\n              width: \"100%\",\n              // Set the image width to 100%\n              height: \"auto\",\n              display: \"block\",\n              // Ensure proper rendering in some browsers\n              margin: \"0 auto\" // Center the image\n\n            },\n            alt: \"Interact Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              position: 'relative',\n              textAlign: 'center',\n              marginTop: '4vh'\n            },\n            children: /*#__PURE__*/_jsxDEV(BackspaceIcon, {\n              onClick: () => {\n                setadjustinteract1(false);\n                setadjustinteract2(false);\n              },\n              className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \",\n              style: {\n                margin: \"auto\",\n                color: \"#ffffff\",\n                fontSize: matchMobile ? `${mobilefont}vh` : `${pcfont}vw`,\n                position: \"absolute\",\n                bottom: \"-12vh\",\n                textAlign: \"center\",\n                left: \"12vw\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 41\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InteractMenux, \"pyUiayCCYEIzD5+dG/9/J7hvlxI=\", false, function () {\n  return [useSelector];\n});\n\n_c = InteractMenux;\nexport const InteractMenu = /*#__PURE__*/React.memo(InteractMenux);\n_c2 = InteractMenu;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InteractMenux\");\n$RefreshReg$(_c2, \"InteractMenu\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/Clikbate/src/upload/InteractMenu.tsx"],"names":["React","Grid","CheckIcon","useSelector","matchMobile","BackspaceIcon","Slider","InteractMenux","stickerOPtionsDefault","setcropInitialIn","setcropInitialIn2","index","moveCordinatesMultiple","showBorder","setshowBorder","canxxtim","canxxTime","valuex","valuex2","handleChange","adjustinteract1","adjustinteract2","interactContent","interactContent2","setadjustinteract1","setadjustinteract2","mobilefont","pcfont","handleChange2x","darkmode","state","GlobalReducer","darkmodeReducer","width","padding","position","top","right","height","zIndex","display","prevArray","newArray","updatedCropInitialIn","x","y","current","clearTimeout","setTimeout","updatedCropInitialIn2","backgroundColor","border","margin","borderRadius","cursor","left","textAlign","justifyContent","color","fontSize","bottom","marginTop","InteractMenu","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport { Paper, Grid, Box } from \"@material-ui/core\";\r\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSpring, animated, useTransition } from \"react-spring\";\r\nimport Crop54Icon from \"@mui/icons-material/Crop54\";\r\nimport CropPortraitIcon from \"@mui/icons-material/CropPortrait\";\r\nimport ViewArrayIcon from \"@mui/icons-material/ViewArray\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\r\nimport AspectRatioTwoToneIcon from \"@mui/icons-material/AspectRatioTwoTone\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport Brightness2Icon from \"@mui/icons-material/Brightness2\";\r\nimport AlbumIcon from \"@mui/icons-material/Album\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport BentoIcon from \"@mui/icons-material/Bento\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport CommentIcon from \"@mui/icons-material/Comment\";\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { matchMobile, matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { UserInfoUpdateMEMBER } from \"../log/actions/UserdataAction\";\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\n\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {\r\n    UpdateLoader,\r\n    UpdateHistory,\r\n    UpdateCommentHistory,\r\n    UpdatePostFromCom,\r\n    UpdateReactType, Updatepagenum\r\n} from \".././GlobalActions\";\r\n\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nfunction InteractMenux({\r\n    stickerOPtionsDefault,\r\n    setcropInitialIn,\r\n    setcropInitialIn2,\r\n    index,\r\n    moveCordinatesMultiple,\r\n    showBorder,\r\n    setshowBorder,\r\n    canxxtim,\r\n    canxxTime,\r\n    valuex,\r\n    valuex2,\r\n    handleChange,\r\n    adjustinteract1,\r\n    adjustinteract2,\r\n    interactContent,\r\n    interactContent2,\r\n    setadjustinteract1,\r\n    setadjustinteract2,\r\n    mobilefont,\r\n    pcfont,\r\n    handleChange2x\r\n\r\n}: any) {\r\n\r\n\r\n    ///\r\n    ///\r\n    ///DARKMODE FROM REDUX\r\n    interface RootStateGlobalReducer {\r\n        GlobalReducer: {\r\n            darkmode: boolean;\r\n        };\r\n    }\r\n    const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n        ...state.GlobalReducer,\r\n    }));\r\n\r\n    const darkmodeReducer = darkmode;\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            {adjustinteract1 || adjustinteract2 ? <Grid\r\n                className={\r\n                    darkmodeReducer\r\n                        ? \"mobileTextfield-backplateColorDark\"\r\n                        : \"mobileTextfield-backplateColorLight\"\r\n                }\r\n                item\r\n                xs={12}\r\n                style={{\r\n                    width: \"26%\",\r\n                    padding: \"0px\",\r\n                    position: \"absolute\",\r\n                    top: \"0vh\",\r\n                    right: \"0px\",\r\n                    height: \"100vh\",\r\n                    zIndex: 20,\r\n                    display: stickerOPtionsDefault === 4 ? \"block\" : \"none\",\r\n                }}\r\n            >\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    onClick={() => {\r\n                        if (adjustinteract1) {\r\n                            setcropInitialIn((prevArray: any) => {\r\n                                const newArray = [...prevArray];\r\n                                const updatedCropInitialIn = {\r\n                                    x: newArray[index].x,\r\n                                    y: newArray[index].y - moveCordinatesMultiple,\r\n                                };\r\n                                newArray[index] = updatedCropInitialIn;\r\n\r\n                                if (showBorder) {\r\n                                } else {\r\n                                    setshowBorder(true);\r\n                                }\r\n                                if (canxxtim.current) {\r\n                                    clearTimeout(canxxtim.current);\r\n                                }\r\n                                canxxtim.current = setTimeout(() => {\r\n                                    setshowBorder(false);\r\n                                }, canxxTime);\r\n\r\n                                return newArray;\r\n                            });\r\n                        }\r\n\r\n                        if (adjustinteract2) {\r\n                            setcropInitialIn2((prevArray: any) => {\r\n                                const newArray = [...prevArray];\r\n                                const updatedCropInitialIn2 = {\r\n                                    x: newArray[index].x,\r\n                                    y: newArray[index].y - moveCordinatesMultiple,\r\n                                };\r\n                                newArray[index] = updatedCropInitialIn2;\r\n\r\n                                if (showBorder) {\r\n                                } else {\r\n                                    setshowBorder(true);\r\n                                }\r\n                                if (canxxtim.current) {\r\n                                    clearTimeout(canxxtim.current);\r\n                                }\r\n                                canxxtim.current = setTimeout(() => {\r\n                                    setshowBorder(false);\r\n                                }, canxxTime);\r\n\r\n                                return newArray;\r\n                            });\r\n                        }\r\n                    }}\r\n                    style={{\r\n                        top: \"4vh\",\r\n                        width: \"50px\",\r\n                        backgroundColor: \"\",\r\n                        border: \"solid #ffffff\",\r\n                        height: \"50px\",\r\n                        margin: \"auto\",\r\n                        borderRadius: \"50%\",\r\n                        position: \"relative\",\r\n                        cursor: \"pointer\",\r\n                    }}\r\n                ></Grid>\r\n\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    onClick={() => {\r\n                        if (adjustinteract1) {\r\n                            setcropInitialIn((prevArray: any) => {\r\n                                const newArray = [...prevArray];\r\n                                const updatedCropInitialIn = {\r\n                                    x: newArray[index].x - moveCordinatesMultiple,\r\n                                    y: newArray[index].y,\r\n                                };\r\n                                newArray[index] = updatedCropInitialIn;\r\n\r\n                                if (showBorder) {\r\n                                } else {\r\n                                    setshowBorder(true);\r\n                                }\r\n                                if (canxxtim.current) {\r\n                                    clearTimeout(canxxtim.current);\r\n                                }\r\n                                canxxtim.current = setTimeout(() => {\r\n                                    setshowBorder(false);\r\n                                }, canxxTime);\r\n\r\n                                return newArray;\r\n                            });\r\n                        }\r\n                        if (adjustinteract2) {\r\n                            setcropInitialIn2((prevArray: any) => {\r\n                                const newArray = [...prevArray];\r\n                                const updatedCropInitialIn2 = {\r\n                                    x: newArray[index].x - moveCordinatesMultiple,\r\n                                    y: newArray[index].y,\r\n                                };\r\n                                newArray[index] = updatedCropInitialIn2;\r\n\r\n                                if (showBorder) {\r\n                                } else {\r\n                                    setshowBorder(true);\r\n                                }\r\n                                if (canxxtim.current) {\r\n                                    clearTimeout(canxxtim.current);\r\n                                }\r\n                                canxxtim.current = setTimeout(() => {\r\n                                    setshowBorder(false);\r\n                                }, canxxTime);\r\n\r\n                                return newArray;\r\n                            });\r\n                        }\r\n                    }}\r\n                    style={{\r\n                        top: \"5vh\",\r\n                        width: \"50px\",\r\n                        backgroundColor: \"\",\r\n                        border: \"solid #ffffff\",\r\n                        height: \"50px\",\r\n                        left: \"8vw\",\r\n                        borderRadius: \"50%\",\r\n                        position: \"relative\",\r\n                        cursor: \"pointer\",\r\n                    }}\r\n                ></Grid>\r\n\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    onClick={() => {\r\n                        if (adjustinteract1) {\r\n                            setcropInitialIn((prevArray: any) => {\r\n                                const newArray = [...prevArray];\r\n                                const updatedCropInitialIn = {\r\n                                    x: newArray[index].x + moveCordinatesMultiple,\r\n                                    y: newArray[index].y,\r\n                                };\r\n                                newArray[index] = updatedCropInitialIn;\r\n\r\n                                if (showBorder) {\r\n                                } else {\r\n                                    setshowBorder(true);\r\n                                }\r\n                                if (canxxtim.current) {\r\n                                    clearTimeout(canxxtim.current);\r\n                                }\r\n                                canxxtim.current = setTimeout(() => {\r\n                                    setshowBorder(false);\r\n                                }, canxxTime);\r\n\r\n                                return newArray;\r\n                            });\r\n                        }\r\n                        if (adjustinteract2) {\r\n                            setcropInitialIn2((prevArray: any) => {\r\n                                const newArray = [...prevArray];\r\n                                const updatedCropInitialIn2 = {\r\n                                    x: newArray[index].x + moveCordinatesMultiple,\r\n                                    y: newArray[index].y,\r\n                                };\r\n                                newArray[index] = updatedCropInitialIn2;\r\n\r\n                                if (showBorder) {\r\n                                } else {\r\n                                    setshowBorder(true);\r\n                                }\r\n                                if (canxxtim.current) {\r\n                                    clearTimeout(canxxtim.current);\r\n                                }\r\n                                canxxtim.current = setTimeout(() => {\r\n                                    setshowBorder(false);\r\n                                }, canxxTime);\r\n\r\n                                return newArray;\r\n                            });\r\n                        }\r\n                    }\r\n                    }\r\n                    style={{\r\n                        top: \"-1vh\",\r\n                        width: \"50px\",\r\n                        backgroundColor: \"\",\r\n                        border: \"solid #ffffff\",\r\n                        height: \"50px\",\r\n                        left: \"15vw\",\r\n                        borderRadius: \"50%\",\r\n                        position: \"relative\",\r\n                        cursor: \"pointer\",\r\n                    }}\r\n                ></Grid>\r\n\r\n                <Grid\r\n                    item\r\n                    className={\"shake\"}\r\n                    xs={12}\r\n                    onClick={() => {\r\n\r\n                        if (adjustinteract1) {\r\n                            setcropInitialIn((prevArray: any) => {\r\n                                const newArray = [...prevArray];\r\n                                const updatedCropInitialIn = {\r\n                                    x: newArray[index].x,\r\n                                    y: newArray[index].y + moveCordinatesMultiple,\r\n                                };\r\n                                newArray[index] = updatedCropInitialIn;\r\n\r\n                                if (showBorder) {\r\n                                } else {\r\n                                    setshowBorder(true);\r\n                                }\r\n                                if (canxxtim.current) {\r\n                                    clearTimeout(canxxtim.current);\r\n                                }\r\n                                canxxtim.current = setTimeout(() => {\r\n                                    setshowBorder(false);\r\n                                }, canxxTime);\r\n\r\n                                return newArray;\r\n                            });\r\n                        }\r\n\r\n\r\n                        if (adjustinteract2) {\r\n                            setcropInitialIn2((prevArray: any) => {\r\n                                const newArray = [...prevArray];\r\n                                const updatedCropInitialIn2 = {\r\n                                    x: newArray[index].x,\r\n                                    y: newArray[index].y + moveCordinatesMultiple,\r\n                                };\r\n                                newArray[index] = updatedCropInitialIn2;\r\n\r\n                                if (showBorder) {\r\n                                } else {\r\n                                    setshowBorder(true);\r\n                                }\r\n                                if (canxxtim.current) {\r\n                                    clearTimeout(canxxtim.current);\r\n                                }\r\n                                canxxtim.current = setTimeout(() => {\r\n                                    setshowBorder(false);\r\n                                }, canxxTime);\r\n\r\n                                return newArray;\r\n                            });\r\n                        }\r\n                    }}\r\n                    style={{\r\n                        top: \"-0vh\",\r\n                        width: \"50px\",\r\n                        backgroundColor: \"\",\r\n                        border: \"solid #ffffff\",\r\n                        height: \"50px\",\r\n                        borderRadius: \"50%\",\r\n                        margin: \"auto\",\r\n                        position: \"relative\",\r\n                        cursor: \"pointer\",\r\n                    }}\r\n                ></Grid>\r\n\r\n                <Grid\r\n                    item\r\n                    xs={6}\r\n                    style={{\r\n                        position: \"relative\",\r\n                        top: \"10vh\",\r\n                        margin: \"auto\",\r\n                    }}\r\n                >\r\n                    {adjustinteract1 ? <Slider\r\n                        value={valuex}\r\n                        onChange={handleChange}\r\n                        aria-labelledby=\"discrete-slider\"\r\n                        valueLabelDisplay=\"auto\"\r\n                        marks\r\n                        min={2}\r\n                        step={1}\r\n                        max={30}\r\n                    /> : null}\r\n\r\n\r\n                    {adjustinteract2 ? <Slider\r\n                        value={valuex2}\r\n                        onChange={handleChange2x}\r\n                        aria-labelledby=\"discrete-slider\"\r\n                        valueLabelDisplay=\"auto\"\r\n                        marks\r\n                        min={2}\r\n                        step={1}\r\n                        max={30}\r\n                    /> : null}\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                        width: \"100%\",\r\n                        position: \"relative\",\r\n                        top: \"25vh\",\r\n                        margin: \"auto\",\r\n                        textAlign: \"center\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                >\r\n                    {adjustinteract1 && interactContent ? (\r\n                        <img\r\n                            src={interactContent}\r\n                            style={{\r\n                                width: \"50%\",\r\n                                height: \"auto\",\r\n                            }}\r\n                        />\r\n                    ) : null}\r\n\r\n                    {adjustinteract2 && interactContent2 ? (\r\n                        <img\r\n                            src={interactContent2}\r\n                            style={{\r\n                                width: \"50%\",\r\n                                height: \"auto\",\r\n                            }}\r\n                        />\r\n                    ) : null}\r\n\r\n                    <CheckIcon\r\n                        onClick={() => {\r\n                            setadjustinteract1(false);\r\n                            setadjustinteract2(false);\r\n                        }}\r\n                        className={\r\n                            darkmodeReducer\r\n                                ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \"\r\n                                : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \"\r\n                        }\r\n                        style={{\r\n                            margin: \"auto\",\r\n                            color: \"#ffffff\",\r\n                            fontSize: matchMobile ? `${mobilefont}vh` : `${pcfont}vw`,\r\n                            position: \"absolute\",\r\n                            bottom: \"-12vh\",\r\n                            textAlign: \"center\",\r\n                            left: \"12vw\",\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid> :\r\n                <Grid\r\n                    className={\r\n                        darkmodeReducer\r\n                            ? \"mobileTextfield-backplateColorDark\"\r\n                            : \"mobileTextfield-backplateColorLight\"\r\n                    }\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                        width: \"26%\",\r\n                        padding: \"0px\",\r\n                        position: \"absolute\",\r\n                        top: \"0vh\",\r\n                        right: \"0px\",\r\n                        height: \"100vh\",\r\n                        zIndex: 20,\r\n                        display: stickerOPtionsDefault === 4 ? \"block\" : \"none\",\r\n                    }}\r\n                >\r\n\r\n                    {interactContent ? <Grid container>\r\n                        <Grid item xs={6}>\r\n                            <img\r\n                                src={interactContent}\r\n                                style={{\r\n                                    width: \"100%\", // Set the image width to 100%\r\n                                    height: \"auto\",\r\n                                    display: \"block\", // Ensure proper rendering in some browsers\r\n                                    margin: \"0 auto\", // Center the image\r\n                                }}\r\n                                alt=\"Interact Content\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Grid item xs={12} style={{ position: 'relative', textAlign: 'center', marginTop: '4vh' }}>\r\n                                llll\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid> : null}\r\n\r\n\r\n                    {interactContent2 ? <Grid container>\r\n                        <Grid item xs={6}>\r\n                            <img\r\n                                src={interactContent2}\r\n                                style={{\r\n                                    width: \"100%\", // Set the image width to 100%\r\n                                    height: \"auto\",\r\n                                    display: \"block\", // Ensure proper rendering in some browsers\r\n                                    margin: \"0 auto\", // Center the image\r\n                                }}\r\n                                alt=\"Interact Content\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Grid item xs={12} style={{ position: 'relative', textAlign: 'center', marginTop: '4vh' }}>\r\n\r\n                                <BackspaceIcon\r\n                                    onClick={() => {\r\n                                        setadjustinteract1(false);\r\n                                        setadjustinteract2(false);\r\n                                    }}\r\n                                    className={\r\n                                        darkmodeReducer\r\n                                            ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \"\r\n                                            : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \"\r\n                                    }\r\n                                    style={{\r\n                                        margin: \"auto\",\r\n                                        color: \"#ffffff\",\r\n                                        fontSize: matchMobile ? `${mobilefont}vh` : `${pcfont}vw`,\r\n                                        position: \"absolute\",\r\n                                        bottom: \"-12vh\",\r\n                                        textAlign: \"center\",\r\n                                        left: \"12vw\",\r\n                                    }}\r\n                                />\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid> : null}\r\n\r\n\r\n                </Grid>}\r\n\r\n\r\n        </div >\r\n    )\r\n\r\n}\r\n\r\nexport const InteractMenu = React.memo(InteractMenux);\r\n"]},"metadata":{},"sourceType":"module"}