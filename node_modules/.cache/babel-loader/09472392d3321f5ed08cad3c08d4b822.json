{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\UploadMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { CropUploadMode } from \"./CropUploadMode\";\nimport { FilterMode } from \"./FilterMode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UploadMenux({\n  optionsShow,\n  optinstopshowingReducer,\n  typeTop,\n  closeoptionsslide,\n  animationop,\n  optionsCollectImageRef,\n  handleTouchStartOptions,\n  handleTouchMoveOptions,\n  modalanimation,\n  nextSlidePc,\n  optionsImages,\n  ActiveSlide,\n  optionsNameData,\n  clickOptions,\n  optionsClickType,\n  getSliderWidthNew,\n  cropTOPLEVELScrollRef,\n  refWithimageData,\n  CropSaved,\n  setCropSaved\n}) {\n  _s();\n\n  const [filterImage, setfilterImage] = useState([]);\n  const [ActivatefilterImage, setActivatefilterImage] = useState(false);\n  const [selectedImage, setselectedImage] = useState([]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ActivatefilterImage ? /*#__PURE__*/_jsxDEV(FilterMode, {\n      filterImage: filterImage,\n      selectedImage: selectedImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CropUploadMode, {\n      CropSaved: CropSaved,\n      ActiveSlide: ActiveSlide,\n      handleTouchStartOptions: handleTouchStartOptions,\n      handleTouchMoveOptions: handleTouchMoveOptions,\n      optionsCollectImageRef: optionsCollectImageRef,\n      modalanimation: modalanimation,\n      getSliderWidthNew: getSliderWidthNew,\n      optionsClickType: optionsClickType,\n      clickOptions: clickOptions,\n      optionsImages: optionsImages,\n      optionsNameData: optionsNameData,\n      cropTOPLEVELScrollRef: cropTOPLEVELScrollRef,\n      refWithimageData: refWithimageData,\n      filterImage: filterImage,\n      setfilterImage: setfilterImage,\n      setActivatefilterImage: setActivatefilterImage,\n      selectedImage: selectedImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(UploadMenux, \"jVSgnD8YXv2nz8jtTD5oj/IVrP8=\");\n\n_c = UploadMenux;\nexport const UploadMenu = /*#__PURE__*/React.memo(UploadMenux);\n_c2 = UploadMenu;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadMenux\");\n$RefreshReg$(_c2, \"UploadMenu\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/UploadMenu.tsx"],"names":["React","useState","CropUploadMode","FilterMode","UploadMenux","optionsShow","optinstopshowingReducer","typeTop","closeoptionsslide","animationop","optionsCollectImageRef","handleTouchStartOptions","handleTouchMoveOptions","modalanimation","nextSlidePc","optionsImages","ActiveSlide","optionsNameData","clickOptions","optionsClickType","getSliderWidthNew","cropTOPLEVELScrollRef","refWithimageData","CropSaved","setCropSaved","filterImage","setfilterImage","ActivatefilterImage","setActivatefilterImage","selectedImage","setselectedImage","UploadMenu","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAEEC,QAFF,QAMO,OANP;AAwBA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,cAA3B;;;;AAEA,SAASC,WAAT,CAAqB;AACnBC,EAAAA,WADmB;AAEnBC,EAAAA,uBAFmB;AAGnBC,EAAAA,OAHmB;AAInBC,EAAAA,iBAJmB;AAKnBC,EAAAA,WALmB;AAMnBC,EAAAA,sBANmB;AAOnBC,EAAAA,uBAPmB;AAQnBC,EAAAA,sBARmB;AASnBC,EAAAA,cATmB;AAUnBC,EAAAA,WAVmB;AAWnBC,EAAAA,aAXmB;AAYnBC,EAAAA,WAZmB;AAanBC,EAAAA,eAbmB;AAcnBC,EAAAA,YAdmB;AAenBC,EAAAA,gBAfmB;AAgBnBC,EAAAA,iBAhBmB;AAiBnBC,EAAAA,qBAjBmB;AAkBnBC,EAAAA,gBAlBmB;AAmBnBC,EAAAA,SAnBmB;AAoBnBC,EAAAA;AApBmB,CAArB,EAqBqB;AAAA;;AACnB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAa,EAAb,CAA9C;AAEA,QAAM,CAAC0B,mBAAD,EAAsBC,sBAAtB,IACJ3B,QAAQ,CAAU,KAAV,CADV;AAGA,QAAM,CAAC4B,aAAD,EAAgBC,gBAAhB,IAAoC7B,QAAQ,CAAa,EAAb,CAAlD;AAEA,sBACE;AAAA,cACG0B,mBAAmB,gBAClB,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEF,WAAzB;AAAsC,MAAA,aAAa,EAAEI;AAArD;AAAA;AAAA;AAAA;AAAA,YADkB,gBAGlB,QAAC,cAAD;AACE,MAAA,SAAS,EAAEN,SADb;AAEE,MAAA,WAAW,EAAEP,WAFf;AAGE,MAAA,uBAAuB,EAAEL,uBAH3B;AAIE,MAAA,sBAAsB,EAAEC,sBAJ1B;AAKE,MAAA,sBAAsB,EAAEF,sBAL1B;AAME,MAAA,cAAc,EAAEG,cANlB;AAOE,MAAA,iBAAiB,EAAEO,iBAPrB;AAQE,MAAA,gBAAgB,EAAED,gBARpB;AASE,MAAA,YAAY,EAAED,YAThB;AAUE,MAAA,aAAa,EAAEH,aAVjB;AAWE,MAAA,eAAe,EAAEE,eAXnB;AAYE,MAAA,qBAAqB,EAAEI,qBAZzB;AAaE,MAAA,gBAAgB,EAAEC,gBAbpB;AAcE,MAAA,WAAW,EAAEG,WAdf;AAeE,MAAA,cAAc,EAAEC,cAflB;AAgBE,MAAA,sBAAsB,EAAEE,sBAhB1B;AAiBE,MAAA,aAAa,EAAEC;AAjBjB;AAAA;AAAA;AAAA;AAAA;AAJJ,mBADF;AA2BD;;GAxDQzB,W;;KAAAA,W;AA0DT,OAAO,MAAM2B,UAAU,gBAAG/B,KAAK,CAACgC,IAAN,CAAW5B,WAAX,CAAnB;MAAM2B,U","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { PreviewCanvas } from \"./PreviewCanvas\";\r\nimport { CropUploadMode } from \"./CropUploadMode\";\r\nimport { FilterMode } from \"./FilterMode\";\r\n\r\nfunction UploadMenux({\r\n  optionsShow,\r\n  optinstopshowingReducer,\r\n  typeTop,\r\n  closeoptionsslide,\r\n  animationop,\r\n  optionsCollectImageRef,\r\n  handleTouchStartOptions,\r\n  handleTouchMoveOptions,\r\n  modalanimation,\r\n  nextSlidePc,\r\n  optionsImages,\r\n  ActiveSlide,\r\n  optionsNameData,\r\n  clickOptions,\r\n  optionsClickType,\r\n  getSliderWidthNew,\r\n  cropTOPLEVELScrollRef,\r\n  refWithimageData,\r\n  CropSaved,\r\n  setCropSaved,\r\n}: any): JSX.Element {\r\n  const [filterImage, setfilterImage] = useState<Array<any>>([]);\r\n\r\n  const [ActivatefilterImage, setActivatefilterImage] =\r\n    useState<boolean>(false);\r\n\r\n  const [selectedImage, setselectedImage] = useState<Array<any>>([]);\r\n\r\n  return (\r\n    <>\r\n      {ActivatefilterImage ? (\r\n        <FilterMode filterImage={filterImage} selectedImage={selectedImage} />\r\n      ) : (\r\n        <CropUploadMode\r\n          CropSaved={CropSaved}\r\n          ActiveSlide={ActiveSlide}\r\n          handleTouchStartOptions={handleTouchStartOptions}\r\n          handleTouchMoveOptions={handleTouchMoveOptions}\r\n          optionsCollectImageRef={optionsCollectImageRef}\r\n          modalanimation={modalanimation}\r\n          getSliderWidthNew={getSliderWidthNew}\r\n          optionsClickType={optionsClickType}\r\n          clickOptions={clickOptions}\r\n          optionsImages={optionsImages}\r\n          optionsNameData={optionsNameData}\r\n          cropTOPLEVELScrollRef={cropTOPLEVELScrollRef}\r\n          refWithimageData={refWithimageData}\r\n          filterImage={filterImage}\r\n          setfilterImage={setfilterImage}\r\n          setActivatefilterImage={setActivatefilterImage}\r\n          selectedImage={selectedImage}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const UploadMenu = React.memo(UploadMenux);\r\n"]},"metadata":{},"sourceType":"module"}