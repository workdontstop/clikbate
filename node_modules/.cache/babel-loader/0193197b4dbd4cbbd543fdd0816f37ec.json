{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\Profile.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport { Post } from \"./Post\";\nimport { MiniPost } from \"./MiniPost\";\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid } from \"@material-ui/core\";\nimport Masonry from \"@mui/lab/Masonry\";\nimport { SnapToggleAction } from \".././GlobalActions\";\nimport { UpdateLoader } from \".././GlobalActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Profilex({\n  OpenModalForm,\n  getSliderWidthRef,\n  getSliderWidth,\n  postData,\n  formtype,\n  showModalForm,\n  CloseModalForm,\n  aboutTemplateGo,\n  commentTemplateGo,\n  postDatainner,\n  postDatainnerThumb,\n  showProfiileData,\n  paperPostScrollRef,\n  setx,\n  x,\n  setDiscussionImage,\n  setCommentPostid,\n  miniLayoutPost,\n  setStopBodyScroll,\n  setSliderIndexMini,\n  zoomClickedIndex,\n  setzoomClickedIndex,\n  miniProfile,\n  setminiProfile,\n  sliderIndexMini,\n  setconnectTemplateGo,\n  settypeEmo,\n  ScrollTo,\n  setshowThisComponenet,\n  showThisComponenet,\n  setscrollLocation,\n  setShowLoader2,\n  ShowLoader2,\n  StopMini,\n  setStopMini,\n  postDatainnerInteraction1,\n  postDatainnerInteraction2,\n  TopRef,\n  postDivRef,\n  clearAllTimers,\n  setindexRoll,\n  postDivRefx,\n  CallMoreFeeds,\n  moreFeeds,\n  setmoreFeeds,\n  lastItemElement\n}) {\n  _s();\n\n  const [countAutoplay, setcountAutoplay] = useState(0);\n  const dispatch = useDispatch();\n  const postItemsRef = useRef([]);\n  useEffect(() => {\n    if (showProfiileData) {\n      setTimeout(() => {\n        // Initialize the observer in the effect\n        const observer = new IntersectionObserver(entries => {\n          const ent = entries[0];\n\n          if (ent.isIntersecting) {\n            setmoreFeeds(ent.isIntersecting);\n            CallMoreFeeds();\n          } else {\n            setmoreFeeds(false);\n          }\n        });\n\n        if (lastItemElement.current) {\n          observer.observe(lastItemElement.current);\n        } // Cleanup function to disconnect the observer\n\n\n        return () => {\n          observer.disconnect();\n        };\n      }, 4500);\n    }\n  }, [lastItemElement, postData, showProfiileData]); // Re-run the effect when dependencies change\n\n  const [second, setsecond] = useState(0);\n  const [secondgo, setsecondgo] = useState(false);\n  const [itemheight, setitemheight] = useState([]);\n  const [itemheighthold, setitemheighthold] = useState([]);\n  const [itemcroptype, setitemcroptype] = useState([]);\n  const [itemFinalPostHeight, setitemFinalPostHeight] = useState([]);\n  const [itemInteractGo, setitemInteractGo] = useState([]);\n  const [ActiveCanvas, setActiveCanvas] = useState(0);\n  const [itemOriginalPostHeight, setitemOriginalPostHeight] = useState([]);\n  const [itemCLICKED, setitemCLICKED] = useState([]);\n  const [onLoadDataOnce, setonLoadDataOnce] = useState([]);\n  const [ActiveAutoPlay, setActiveAutoPlay] = useState([]);\n  var heightplus = matchPc ? 0.38 : matchTablet ? 0.3 : 0.265;\n  var postbackheighthold = document.documentElement.clientHeight * heightplus;\n  const [postbackheight] = useState(postbackheighthold);\n  const scrollTypeTimer = useRef(null); ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    screenHeight,\n    darkmode,\n    activateLoader\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const screenHeightReducer = screenHeight;\n  const darkmodeReducer = darkmode;\n  const activateLoaderReducer = activateLoader; ///\n  ///\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\n\n  const addPostItemsRef = itemsRef => {\n    if (itemsRef && !postItemsRef.current.includes(itemsRef)) {\n      postItemsRef.current.push(itemsRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  }; ///\n  ///\n  ///\n  ///CREATE div REFS FROM POSTS AND ADD THEM TO ARRAY\n\n\n  const addpostDivRef = divRef => {\n    if (divRef && !postDivRef.current.includes(divRef)) {\n      postDivRef.current.push(divRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  };\n\n  const addpostDivRefx = divRef => {\n    if (divRef && !postDivRefx.current.includes(divRef)) {\n      postDivRefx.current.push(divRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  };\n\n  useEffect(() => {\n    if (postData.length > 0 && showProfiileData) {\n      const initialItemheight = postData.map(obj => obj.itemheight);\n      setitemheight(initialItemheight);\n      const initialItemrealheighthold = postData.map(obj => obj.itemrealheighthold);\n      setitemheighthold(initialItemrealheighthold);\n      const initialtemcroptype = postData.map(obj => obj.itemcroptype);\n      setitemcroptype(initialtemcroptype);\n      const initialitemFinalPostHeight = postData.map(obj => obj.itemFinalPostHeight);\n      setitemFinalPostHeight(initialitemFinalPostHeight);\n      const itemInteractGo1xx = postData.map(obj => obj.itemInteractGo);\n      setitemInteractGo(itemInteractGo1xx);\n      const initialitemOriginalPostHeight = postData.map(obj => obj.itemOriginalPostHeight);\n      setitemOriginalPostHeight(initialitemOriginalPostHeight);\n      const initialitemCLICKED = postData.map(obj => obj.itemCLICKED);\n      setitemCLICKED(initialitemCLICKED);\n      const initialsetonLoadDataOnce = postData.map(obj => obj.onLoadDataOnce);\n      setonLoadDataOnce(initialsetonLoadDataOnce);\n      const initialsetActiveAutoPlay = postData.map(obj => obj.ActiveAutoPlay);\n      setActiveAutoPlay(initialsetActiveAutoPlay);\n    }\n  }, [postData, showProfiileData]);\n  const newArraa = [...itemheight];\n  const newArrxy = [...onLoadDataOnce];\n  const newArrayFinalPostHeight = [...itemFinalPostHeight];\n  const newArrxq = [...itemcroptype];\n  const newArrayitemOriginalPostHeight = [...itemOriginalPostHeight];\n  const newArrx = [...itemheighthold];\n  const newArr = [...itemheight];\n\n  function percentage(num, per) {\n    return num / 100 * per;\n  }\n\n  const navvScroll = () => {\n    /// alert(ScrollTo);\n    if (ScrollTo === 0) {} else {\n      ///alert(ScrollTo);\n      setTimeout(() => {\n        paperPostScrollRef.current.scrollTop = ScrollTo;\n      }, 30);\n    }\n\n    setTimeout(function () {\n      setshowThisComponenet(false);\n    }, 1000);\n  };\n\n  const onPostsItemload = useCallback((e, index, itemnum) => {\n    ///\n    if (activateLoaderReducer) {\n      dispatch(UpdateLoader(false));\n    }\n\n    if (ScrollTo === index) {\n      navvScroll();\n    }\n\n    if (itemnum === 0) {\n      if (postItemsRef.current[index]) {\n        var imageHeight = postItemsRef.current[index].clientHeight; ///////////////////////////////\n\n        newArraa[index] = `${imageHeight}px`;\n        setitemheight(newArraa); ///////////////////////////////\n        ///////////////////////////////\n\n        var newh = imageHeight / 1.042 - postbackheighthold;\n        newArrx[index] = `${newh}`;\n        setitemheighthold(newArrx); ///////////////////////////////\n\n        newArrayFinalPostHeight[index] = imageHeight;\n        setitemFinalPostHeight(newArrayFinalPostHeight); ///////////////////////////////\n\n        newArrayitemOriginalPostHeight[index] = imageHeight;\n        setitemOriginalPostHeight(newArrayitemOriginalPostHeight); ///////////////////////////////\n\n        var choppedHeight = percentage(screenHeightReducer, 101);\n        var choppedwidth = percentage(screenHeightReducer, matchPc ? 55 : matchTablet ? 52 : 35);\n\n        if (imageHeight < choppedwidth) {\n          /////WIDE IMAGE SET\n          newArr[index] = `${choppedwidth}px`;\n          setitemheight(newArr); ///////////////////////////////\n\n          var newh = choppedwidth / 1.015 - postbackheighthold;\n          newArrx[index] = `${newh}`;\n          setitemheighthold(newArrx); ////////////////////////////\n          ///////////////////////////////\n\n          newArrxq[index] = 1;\n          setitemcroptype(newArrxq); ////////////////////////////\n          ///////////////////////////////\n\n          newArrayFinalPostHeight[index] = choppedwidth;\n          setitemFinalPostHeight(newArrayFinalPostHeight);\n        } else if (imageHeight > choppedHeight) {\n          /////LONG IMAGE SET\n          newArr[index] = `${choppedHeight}px`;\n          setitemheight(newArr); ///////////////////////////////\n\n          var newh = choppedHeight / 1 - postbackheighthold;\n          newArrx[index] = `${newh}`;\n          setitemheighthold(newArrx); ////////////////////////////////\n          ///////////////////////////////\n\n          newArrxq[index] = 2;\n          setitemcroptype(newArrxq); ///////////////////////////////\n\n          newArrayFinalPostHeight[index] = choppedHeight;\n          setitemFinalPostHeight(newArrayFinalPostHeight); ///////////////////////////////\n        } else {\n          var imageWidth = postItemsRef.current[index].clientWidth;\n\n          if (imageWidth > imageHeight) {\n            ///////////////////////////////\n            var newh = imageHeight / 1.066 - postbackheighthold;\n            newArrx[index] = `${newh}`;\n            setitemheighthold(newArrx); ///////////////////////////////\n            ///////////////////////////////\n\n            newArrxq[index] = 3;\n            setitemcroptype(newArrxq); ///////////////////////////////\n          } else {\n            ///////////////////////////////\n            newArrxq[index] = 4;\n            setitemcroptype(newArrxq); ///////////////////////////////\n          }\n        } ///////////////////////////////\n\n\n        newArrxy[index] = true;\n        setonLoadDataOnce(newArrxy); ///////////////////////////////\n\n        if (postData.length - 1 === index) {\n          ////\n          navvScroll(); ///\n          ///\n\n          setTimeout(function () {\n            ///setx(true);\n            /// setSliderIndexMini(sliderIndex);\n            //// setzoomClickedIndex(pey + 1);\n            if (StopMini) {\n              setStopMini(false);\n            } else {\n              setminiProfile(true);\n            } ///////////\n\n          }, 1000);\n        }\n      }\n    }\n  }, [StopMini, screenHeightReducer, itemheight, itemheighthold, itemFinalPostHeight, showProfiileData, activateLoaderReducer, postItemsRef]);\n\n  const scrollToPost = index => {\n    postDivRef.current[index].scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\"\n    });\n  };\n\n  const scrollToPostx = index => {\n    postDivRefx.current[index].scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\"\n    });\n  };\n\n  const postitemSHOWFULLHEIGHT = (index, type) => {\n    if (itemcroptype[index] === 1 || itemcroptype[index] === 2) {\n      if (type === 0) {\n        const newitemHeight = [...itemheight];\n        newitemHeight[index] = `auto`;\n        setitemheight(newitemHeight);\n      } else {\n        const newitemHeight = [...itemheight];\n        newitemHeight[index] = `${itemFinalPostHeight[index]}px`;\n        setitemheight(newitemHeight);\n      }\n    }\n  };\n\n  const scrollLongPicTimer = useRef(null);\n  const scrollLongPicTimerx = useRef(null);\n  const snapTimer = useRef(null);\n\n  const freesnap = () => {\n    dispatch(SnapToggleAction(false));\n\n    if (snapTimer.current) {\n      clearTimeout(snapTimer.current);\n    }\n\n    snapTimer.current = setTimeout(function () {\n      dispatch(SnapToggleAction(true));\n    }, matchMobile ? 6000 : 11000);\n  };\n\n  const AUTOSlideLongImages = index => {\n    ////freesnap();\n    if (itemcroptype[index] === 2) {\n      scrollLongPicTimerx.current = setTimeout(() => {\n        if (paperPostScrollRef.current) {\n          paperPostScrollRef.current.scrollTo({\n            top: paperPostScrollRef.current.scrollTop + itemOriginalPostHeight[index] / 3,\n            behavior: \"auto\"\n          });\n        }\n      }, 500);\n      scrollLongPicTimer.current = setTimeout(() => {\n        postDivRef.current[index].scrollIntoView({\n          behavior: \"smooth\",\n          block: \"start\"\n        });\n      }, 1300);\n    }\n  };\n\n  const onPostsItemClicked = useCallback(index => {\n    setindexRoll(index);\n    clearAllTimers();\n    setActiveCanvas(index);\n\n    if (itemCLICKED[index]) {\n      dispatch(SnapToggleAction(true));\n\n      if (snapTimer.current) {\n        clearTimeout(snapTimer.current);\n      }\n\n      snapTimer.current = setTimeout(function () {}, 3000);\n      const newclickArray = [...itemCLICKED];\n      newclickArray[index] = false;\n      setitemCLICKED(newclickArray);\n      postitemSHOWFULLHEIGHT(index, 1);\n      scrollToPost(index);\n    } else {\n      dispatch(SnapToggleAction(false));\n      AUTOSlideLongImages(index);\n\n      if (scrollTypeTimer.current) {\n        clearTimeout(scrollTypeTimer.current);\n      }\n\n      const newclickArray = [...itemCLICKED];\n      newclickArray[index] = true;\n      setitemCLICKED(newclickArray);\n      postitemSHOWFULLHEIGHT(index, 0);\n      scrollToPost(index);\n    }\n  }, [itemCLICKED]); ///\n  ///\n  ///TYPES FOR ISLOGGEDIN\n\n  ///\n  ///LOGGED IN DATA FROM REDUX\n  const {\n    loggedIn\n  } = useSelector(state => ({ ...state.IsLoggedReducer\n  }));\n  const loggedInReducer = loggedIn; ///\n  ///\n  ///MUI PAPER STYLES FROM REDUX\n\n  const {\n    PaperStyleLight,\n    PaperStyleDark\n  } = useSelector(state => ({ ...state.PaperReducerLightnDark\n  }));\n  var PaperStyleReducer = \"\";\n\n  if (darkmodeReducer) {\n    PaperStyleReducer = PaperStyleDark;\n  } else {\n    PaperStyleReducer = PaperStyleLight;\n  } ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype;\n  var widthProfilePic = matchPc ? \"72%\" : matchTablet ? \"84%\" : \"44vw\";\n  var topProfilePic = matchPc ? \"-20vh\" : matchTablet ? \"-12vh\" : \"-8vh\";\n  var leftProfilePic = matchPc ? \"1vw\" : matchTablet ? \"3.5vw\" : \"2.7vw\";\n  var optionsClass = \"\";\n  var fontOptions = \"\";\n\n  if (matchPc) {\n    optionsClass = \"profile-optionsImagePc\";\n    fontOptions = \"2.7vw\";\n  } else if (matchTablet) {\n    optionsClass = \"profile-optionsImageTablet\";\n    fontOptions = \"5rem\";\n  } else {\n    optionsClass = \"profile-optionsImageMobile\";\n    fontOptions = \"1.9rem\";\n  } ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n\n  const {\n    image\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const imageReducer = image;\n\n  const blank = () => {};\n\n  const [showModalUpload, setShowModalUpload] = useState(false); ///\n  ///\n  ///\n  /// CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\n\n  const closeUploadModal = useCallback(backbutton => {\n    //pop states fires when back and forward buttons used\n    if (backbutton === 1) {\n      window.onpopstate = () => {\n        window.history.pushState(null, \"\", window.location.href);\n        window.onpopstate = null;\n        setShowModalUpload(false);\n      };\n    } else {\n      window.history.pushState(null, \"\", \".\");\n      window.onpopstate = null;\n      setShowModalUpload(false);\n    }\n  }, []); ///\n  ///\n  ///\n  ///OPEN MODAL THEN CALL CLOSEMODAL FUNCTION WHICH WAITS FOR A POP EVENT(for closing modal)\n\n  const OpenUploadModal = useCallback(() => {\n    setShowModalUpload(!showModalUpload); //pushstate add enteries to your history\n\n    window.history.pushState(null, \"\", \"Options\");\n    closeUploadModal(1);\n  }, [showModalUpload, closeUploadModal]);\n  useEffect(() => {/// miniProfile ? setx(false) : setx(true);\n  }, [miniProfile]);\n  useEffect(() => {\n    setTimeout(function () {\n      dispatch(UpdateLoader(false));\n      if (showThisComponenet) setshowThisComponenet(false);\n    }, 3000);\n    setTimeout(function () {\n      if (ShowLoader2) {\n        setShowLoader2(false);\n      }\n    }, 1500);\n  }, [postData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"dontallowhighlighting\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          position: \"fixed\",\n          width: \"100%\",\n          padding: \"0px\",\n          height: \"0px\",\n          zIndex: 20000,\n          top: \"0px\",\n          cursor: \"pointer\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        ref: TopRef,\n        className: \"parent-containerEffect  effect\",\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\",\n          paddingLeft: miniProfile ? matchPc ? \"10.5vw\" : \"3vw\" : \"0vw\",\n          paddingRight: miniProfile ? matchPc ? \"10.5vw\" : \"3vw\" : \"0vw\",\n          height: \"auto\",\n          marginTop: '5.5vh'\n        },\n        children: [postData.length > 0 ? /*#__PURE__*/_jsxDEV(Masonry, {\n          columns: matchPc ? 2 : miniProfile ? 2 : 1,\n          spacing: miniProfile && matchMobile ? 1 : miniProfile ? 4 : 0,\n          style: {\n            padding: \"0px\"\n          },\n          children: postData.map((post, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"relative\",\n              scrollSnapAlign: x ? \"start\" : \"\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: miniProfile ? \"block\" : \"none\",\n                marginTop: \"-5px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(MiniPost, {\n                setSliderIndexMini: setSliderIndexMini,\n                sliderIndexMini: sliderIndexMini,\n                zoomClickedIndex: zoomClickedIndex,\n                setzoomClickedIndex: setzoomClickedIndex,\n                miniProfile: miniProfile,\n                setminiProfile: setminiProfile,\n                setStopBodyScroll: setStopBodyScroll,\n                setx: setx,\n                miniLayoutPost: miniLayoutPost,\n                setCommentPostid: setCommentPostid,\n                postData: postData,\n                setDiscussionImage: setDiscussionImage,\n                OpenModalForm: OpenModalForm,\n                second: second,\n                setsecond: setsecond,\n                secondgo: secondgo,\n                setsecondgo: setsecondgo,\n                setcountAutoplay: setcountAutoplay,\n                countAutoplay: countAutoplay,\n                onLoadDataOnce: onLoadDataOnce,\n                pey: i,\n                addPostItemsRef: addPostItemsRef,\n                postDivRefx: postDivRefx,\n                onPostsItemload: onPostsItemload,\n                post: post,\n                itemheight: itemheight,\n                itemheighthold: itemheighthold,\n                postbackheight: postbackheight,\n                itemcroptype: itemcroptype,\n                length: postData.length,\n                itemFinalPostHeight: itemFinalPostHeight,\n                onPostsItemClicked: onPostsItemClicked,\n                itemCLICKED: itemCLICKED,\n                addpostDivRefx: addpostDivRefx,\n                postDatainner: postDatainner,\n                postDatainnerThumb: postDatainnerThumb,\n                itemOriginalPostHeight: itemOriginalPostHeight,\n                ActiveAutoPlay: ActiveAutoPlay,\n                setActiveAutoPlay: setActiveAutoPlay,\n                AUTOSlideLongImages: AUTOSlideLongImages,\n                scrollToPostx: scrollToPostx\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: miniProfile ? \"none\" : \"block\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Post, {\n                ActiveCanvas: ActiveCanvas,\n                postItemsRef: postItemsRef,\n                postDatainnerInteraction2: postDatainnerInteraction2,\n                postDatainnerInteraction1: postDatainnerInteraction1,\n                setscrollLocation: setscrollLocation,\n                paperPostScrollRef: paperPostScrollRef,\n                settypeEmo: settypeEmo,\n                setconnectTemplateGo: setconnectTemplateGo,\n                sliderIndexMini: sliderIndexMini,\n                setsliderIndexMini: setSliderIndexMini,\n                zoomClickedIndex: zoomClickedIndex,\n                setzoomClickedIndex: setzoomClickedIndex,\n                miniProfile: miniProfile,\n                setminiProfile: setminiProfile,\n                setStopBodyScroll: setStopBodyScroll,\n                setx: setx,\n                miniLayoutPost: miniLayoutPost,\n                setCommentPostid: setCommentPostid,\n                postData: postData,\n                setDiscussionImage: setDiscussionImage,\n                OpenModalForm: OpenModalForm,\n                second: second,\n                setsecond: setsecond,\n                secondgo: secondgo,\n                setsecondgo: setsecondgo,\n                setcountAutoplay: setcountAutoplay,\n                countAutoplay: countAutoplay,\n                onLoadDataOnce: onLoadDataOnce,\n                pey: i,\n                addPostItemsRef: addPostItemsRef,\n                postDivRef: postDivRef,\n                onPostsItemload: onPostsItemload,\n                post: post,\n                itemheight: itemheight,\n                itemheighthold: itemheighthold,\n                postbackheight: postbackheight,\n                itemcroptype: itemcroptype,\n                length: postData.length,\n                itemFinalPostHeight: itemFinalPostHeight,\n                onPostsItemClicked: onPostsItemClicked,\n                itemCLICKED: itemCLICKED,\n                addpostDivRef: addpostDivRef,\n                postDatainner: postDatainner,\n                postDatainnerThumb: postDatainnerThumb,\n                itemOriginalPostHeight: itemOriginalPostHeight,\n                ActiveAutoPlay: ActiveAutoPlay,\n                setActiveAutoPlay: setActiveAutoPlay,\n                AUTOSlideLongImages: AUTOSlideLongImages,\n                scrollToPost: scrollToPost\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 796,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              style: {\n                height: \"10px\",\n                backgroundColor: '#00ccff'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 849,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          ref: lastItemElement,\n          style: {\n            marginTop: \"60vh\",\n            height: \"10px\",\n            backgroundColor: '#00ccff'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Profilex, \"lub/JIvF+EurUhztTQFQUKcG6i8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Profilex;\nexport const Profile = /*#__PURE__*/React.memo(Profilex);\n_c2 = Profile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Profilex\");\n$RefreshReg$(_c2, \"Profile\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/Profile.tsx"],"names":["React","useState","useRef","useCallback","useEffect","Post","MiniPost","matchPc","matchTablet","matchMobile","useSelector","useDispatch","Grid","Masonry","SnapToggleAction","UpdateLoader","Profilex","OpenModalForm","getSliderWidthRef","getSliderWidth","postData","formtype","showModalForm","CloseModalForm","aboutTemplateGo","commentTemplateGo","postDatainner","postDatainnerThumb","showProfiileData","paperPostScrollRef","setx","x","setDiscussionImage","setCommentPostid","miniLayoutPost","setStopBodyScroll","setSliderIndexMini","zoomClickedIndex","setzoomClickedIndex","miniProfile","setminiProfile","sliderIndexMini","setconnectTemplateGo","settypeEmo","ScrollTo","setshowThisComponenet","showThisComponenet","setscrollLocation","setShowLoader2","ShowLoader2","StopMini","setStopMini","postDatainnerInteraction1","postDatainnerInteraction2","TopRef","postDivRef","clearAllTimers","setindexRoll","postDivRefx","CallMoreFeeds","moreFeeds","setmoreFeeds","lastItemElement","countAutoplay","setcountAutoplay","dispatch","postItemsRef","setTimeout","observer","IntersectionObserver","entries","ent","isIntersecting","current","observe","disconnect","second","setsecond","secondgo","setsecondgo","itemheight","setitemheight","itemheighthold","setitemheighthold","itemcroptype","setitemcroptype","itemFinalPostHeight","setitemFinalPostHeight","itemInteractGo","setitemInteractGo","ActiveCanvas","setActiveCanvas","itemOriginalPostHeight","setitemOriginalPostHeight","itemCLICKED","setitemCLICKED","onLoadDataOnce","setonLoadDataOnce","ActiveAutoPlay","setActiveAutoPlay","heightplus","postbackheighthold","document","documentElement","clientHeight","postbackheight","scrollTypeTimer","screenHeight","darkmode","activateLoader","state","GlobalReducer","screenHeightReducer","darkmodeReducer","activateLoaderReducer","addPostItemsRef","itemsRef","includes","push","addpostDivRef","divRef","addpostDivRefx","length","initialItemheight","map","obj","initialItemrealheighthold","itemrealheighthold","initialtemcroptype","initialitemFinalPostHeight","itemInteractGo1xx","initialitemOriginalPostHeight","initialitemCLICKED","initialsetonLoadDataOnce","initialsetActiveAutoPlay","newArraa","newArrxy","newArrayFinalPostHeight","newArrxq","newArrayitemOriginalPostHeight","newArrx","newArr","percentage","num","per","navvScroll","scrollTop","onPostsItemload","e","index","itemnum","imageHeight","newh","choppedHeight","choppedwidth","imageWidth","clientWidth","scrollToPost","scrollIntoView","behavior","block","scrollToPostx","postitemSHOWFULLHEIGHT","type","newitemHeight","scrollLongPicTimer","scrollLongPicTimerx","snapTimer","freesnap","clearTimeout","AUTOSlideLongImages","scrollTo","top","onPostsItemClicked","newclickArray","loggedIn","IsLoggedReducer","loggedInReducer","PaperStyleLight","PaperStyleDark","PaperReducerLightnDark","PaperStyleReducer","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","widthProfilePic","topProfilePic","leftProfilePic","optionsClass","fontOptions","image","UserdataReducer","imageReducer","blank","showModalUpload","setShowModalUpload","closeUploadModal","backbutton","window","onpopstate","history","pushState","location","href","OpenUploadModal","position","width","padding","height","zIndex","cursor","paddingLeft","paddingRight","marginTop","post","i","scrollSnapAlign","display","backgroundColor","Profile","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport { Menu } from \"./Menu\";\r\nimport { Billboard } from \"./Billboard\";\r\nimport { Post } from \"./Post\";\r\nimport { MiniPost } from \"./MiniPost\";\r\nimport { OptionsSlider } from \"./OptionsSlider\";\r\nimport $ from \"jquery\";\r\n\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  createTheme,\r\n  MuiThemeProvider,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport ImagePhotoSizeSelectSmall from \"material-ui/svg-icons/image/photo-size-select-small\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { Upload } from \"../upload/Upload\";\r\nimport { SnapToggleAction } from \".././GlobalActions\";\r\nimport { UpdateLoader } from \".././GlobalActions\";\r\n\r\nfunction Profilex({\r\n  OpenModalForm,\r\n  getSliderWidthRef,\r\n  getSliderWidth,\r\n  postData,\r\n  formtype,\r\n  showModalForm,\r\n  CloseModalForm,\r\n  aboutTemplateGo,\r\n  commentTemplateGo,\r\n  postDatainner,\r\n  postDatainnerThumb,\r\n  showProfiileData,\r\n  paperPostScrollRef,\r\n  setx,\r\n  x,\r\n  setDiscussionImage,\r\n  setCommentPostid,\r\n  miniLayoutPost,\r\n  setStopBodyScroll,\r\n  setSliderIndexMini,\r\n  zoomClickedIndex,\r\n  setzoomClickedIndex,\r\n  miniProfile,\r\n  setminiProfile,\r\n  sliderIndexMini,\r\n  setconnectTemplateGo,\r\n  settypeEmo,\r\n  ScrollTo,\r\n  setshowThisComponenet,\r\n  showThisComponenet,\r\n  setscrollLocation,\r\n  setShowLoader2,\r\n  ShowLoader2,\r\n  StopMini,\r\n  setStopMini,\r\n  postDatainnerInteraction1,\r\n  postDatainnerInteraction2,\r\n  TopRef,\r\n  postDivRef,\r\n  clearAllTimers,\r\n  setindexRoll,\r\n  postDivRefx,\r\n  CallMoreFeeds,\r\n  moreFeeds,\r\n  setmoreFeeds,\r\n  lastItemElement\r\n}: any) {\r\n  const [countAutoplay, setcountAutoplay] = useState<number>(0);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n\r\n  const postItemsRef = useRef<any>([]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (showProfiileData) {\r\n\r\n      setTimeout(() => {\r\n\r\n        // Initialize the observer in the effect\r\n        const observer = new IntersectionObserver((entries: any) => {\r\n          const ent = entries[0];\r\n          if (ent.isIntersecting) {\r\n            setmoreFeeds(ent.isIntersecting);\r\n            CallMoreFeeds()\r\n          } else {\r\n            setmoreFeeds(false);\r\n          }\r\n        });\r\n\r\n        if (lastItemElement.current) {\r\n          observer.observe(lastItemElement.current);\r\n        }\r\n\r\n        // Cleanup function to disconnect the observer\r\n        return () => {\r\n          observer.disconnect();\r\n        };\r\n      }, 4500)\r\n    }\r\n\r\n\r\n  }, [lastItemElement, postData, showProfiileData]); // Re-run the effect when dependencies change\r\n\r\n\r\n\r\n\r\n  const [second, setsecond] = useState<any>(0);\r\n  const [secondgo, setsecondgo] = useState<boolean>(false);\r\n\r\n  const [itemheight, setitemheight] = useState<Array<string>>([]);\r\n  const [itemheighthold, setitemheighthold] = useState<Array<string>>([]);\r\n  const [itemcroptype, setitemcroptype] = useState<Array<number>>([]);\r\n  const [itemFinalPostHeight, setitemFinalPostHeight] = useState<Array<number>>(\r\n    []\r\n  );\r\n\r\n  const [itemInteractGo, setitemInteractGo] = useState<Array<boolean>>(\r\n    []\r\n  );\r\n\r\n\r\n  const [ActiveCanvas, setActiveCanvas] = useState(0);\r\n\r\n  const [itemOriginalPostHeight, setitemOriginalPostHeight] = useState<\r\n    Array<number>\r\n  >([]);\r\n\r\n  const [itemCLICKED, setitemCLICKED] = useState<Array<boolean>>([]);\r\n  const [onLoadDataOnce, setonLoadDataOnce] = useState<Array<boolean>>([]);\r\n\r\n  const [ActiveAutoPlay, setActiveAutoPlay] = useState<Array<boolean>>([]);\r\n\r\n  var heightplus = matchPc ? 0.38 : matchTablet ? 0.3 : 0.265;\r\n  var postbackheighthold = document.documentElement.clientHeight * heightplus;\r\n\r\n  const [postbackheight] = useState<number>(postbackheighthold);\r\n\r\n  const scrollTypeTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n      activateLoader: boolean;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const { screenHeight, darkmode, activateLoader } = useSelector(\r\n    (state: RootStateGlobalReducer) => ({\r\n      ...state.GlobalReducer,\r\n    })\r\n  );\r\n  const screenHeightReducer = screenHeight;\r\n  const darkmodeReducer = darkmode;\r\n  const activateLoaderReducer = activateLoader;\r\n\r\n  ///\r\n  ///\r\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\r\n  const addPostItemsRef = (itemsRef: any) => {\r\n    if (itemsRef && !postItemsRef.current.includes(itemsRef)) {\r\n      postItemsRef.current.push(itemsRef);\r\n    }\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE div REFS FROM POSTS AND ADD THEM TO ARRAY\r\n  const addpostDivRef = (divRef: any) => {\r\n    if (divRef && !postDivRef.current.includes(divRef)) {\r\n      postDivRef.current.push(divRef);\r\n    }\r\n\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  const addpostDivRefx = (divRef: any) => {\r\n    if (divRef && !postDivRefx.current.includes(divRef)) {\r\n      postDivRefx.current.push(divRef);\r\n    }\r\n\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (postData.length > 0 && showProfiileData) {\r\n      const initialItemheight = postData.map((obj: any) => obj.itemheight);\r\n      setitemheight(initialItemheight);\r\n\r\n      const initialItemrealheighthold = postData.map(\r\n        (obj: any) => obj.itemrealheighthold\r\n      );\r\n      setitemheighthold(initialItemrealheighthold);\r\n\r\n      const initialtemcroptype = postData.map((obj: any) => obj.itemcroptype);\r\n      setitemcroptype(initialtemcroptype);\r\n\r\n      const initialitemFinalPostHeight = postData.map(\r\n        (obj: any) => obj.itemFinalPostHeight\r\n      );\r\n      setitemFinalPostHeight(initialitemFinalPostHeight);\r\n\r\n\r\n      const itemInteractGo1xx = postData.map(\r\n        (obj: any) => obj.itemInteractGo\r\n      );\r\n      setitemInteractGo(itemInteractGo1xx);\r\n\r\n\r\n\r\n      const initialitemOriginalPostHeight = postData.map(\r\n        (obj: any) => obj.itemOriginalPostHeight\r\n      );\r\n      setitemOriginalPostHeight(initialitemOriginalPostHeight);\r\n\r\n      const initialitemCLICKED = postData.map((obj: any) => obj.itemCLICKED);\r\n      setitemCLICKED(initialitemCLICKED);\r\n\r\n      const initialsetonLoadDataOnce = postData.map(\r\n        (obj: any) => obj.onLoadDataOnce\r\n      );\r\n      setonLoadDataOnce(initialsetonLoadDataOnce);\r\n\r\n      const initialsetActiveAutoPlay = postData.map(\r\n        (obj: any) => obj.ActiveAutoPlay\r\n      );\r\n      setActiveAutoPlay(initialsetActiveAutoPlay);\r\n    }\r\n  }, [postData, showProfiileData]);\r\n\r\n  const newArraa = [...itemheight];\r\n\r\n  const newArrxy = [...onLoadDataOnce];\r\n  const newArrayFinalPostHeight = [...itemFinalPostHeight];\r\n  const newArrxq = [...itemcroptype];\r\n\r\n  const newArrayitemOriginalPostHeight = [...itemOriginalPostHeight];\r\n\r\n  const newArrx = [...itemheighthold];\r\n\r\n  const newArr = [...itemheight];\r\n\r\n  function percentage(num: number, per: number) {\r\n    return (num / 100) * per;\r\n  }\r\n\r\n  const navvScroll = () => {\r\n    /// alert(ScrollTo);\r\n    if (ScrollTo === 0) {\r\n    } else {\r\n      ///alert(ScrollTo);\r\n      setTimeout(() => {\r\n        paperPostScrollRef.current.scrollTop = ScrollTo;\r\n      }, 30);\r\n    }\r\n\r\n    setTimeout(function () {\r\n      setshowThisComponenet(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const onPostsItemload = useCallback(\r\n    (e: any, index: number, itemnum: number) => {\r\n\r\n\r\n      ///\r\n      if (activateLoaderReducer) {\r\n        dispatch(UpdateLoader(false));\r\n      }\r\n\r\n      if (ScrollTo === index) {\r\n        navvScroll();\r\n      }\r\n      if (itemnum === 0) {\r\n        if (postItemsRef.current[index]) {\r\n          var imageHeight = postItemsRef.current[index].clientHeight;\r\n\r\n          ///////////////////////////////\r\n\r\n          newArraa[index] = `${imageHeight}px`;\r\n          setitemheight(newArraa);\r\n          ///////////////////////////////\r\n\r\n          ///////////////////////////////\r\n\r\n          var newh = imageHeight / 1.042 - postbackheighthold;\r\n          newArrx[index] = `${newh}`;\r\n          setitemheighthold(newArrx);\r\n          ///////////////////////////////\r\n\r\n          newArrayFinalPostHeight[index] = imageHeight;\r\n          setitemFinalPostHeight(newArrayFinalPostHeight);\r\n\r\n          ///////////////////////////////\r\n\r\n          newArrayitemOriginalPostHeight[index] = imageHeight;\r\n          setitemOriginalPostHeight(newArrayitemOriginalPostHeight);\r\n          ///////////////////////////////\r\n\r\n          var choppedHeight = percentage(screenHeightReducer, 101);\r\n\r\n          var choppedwidth = percentage(\r\n            screenHeightReducer,\r\n            matchPc ? 55 : matchTablet ? 52 : 35\r\n          );\r\n\r\n          if (imageHeight < choppedwidth) {\r\n            /////WIDE IMAGE SET\r\n\r\n            newArr[index] = `${choppedwidth}px`;\r\n            setitemheight(newArr);\r\n            ///////////////////////////////\r\n\r\n            var newh = choppedwidth / 1.015 - postbackheighthold;\r\n            newArrx[index] = `${newh}`;\r\n            setitemheighthold(newArrx);\r\n            ////////////////////////////\r\n            ///////////////////////////////\r\n\r\n            newArrxq[index] = 1;\r\n            setitemcroptype(newArrxq);\r\n            ////////////////////////////\r\n            ///////////////////////////////\r\n\r\n            newArrayFinalPostHeight[index] = choppedwidth;\r\n            setitemFinalPostHeight(newArrayFinalPostHeight);\r\n          } else if (imageHeight > choppedHeight) {\r\n            /////LONG IMAGE SET\r\n\r\n            newArr[index] = `${choppedHeight}px`;\r\n            setitemheight(newArr);\r\n            ///////////////////////////////\r\n\r\n            var newh = choppedHeight / 1 - postbackheighthold;\r\n            newArrx[index] = `${newh}`;\r\n            setitemheighthold(newArrx);\r\n            ////////////////////////////////\r\n            ///////////////////////////////\r\n\r\n            newArrxq[index] = 2;\r\n            setitemcroptype(newArrxq);\r\n            ///////////////////////////////\r\n\r\n            newArrayFinalPostHeight[index] = choppedHeight;\r\n            setitemFinalPostHeight(newArrayFinalPostHeight);\r\n            ///////////////////////////////\r\n          } else {\r\n            var imageWidth = postItemsRef.current[index].clientWidth;\r\n            if (imageWidth > imageHeight) {\r\n              ///////////////////////////////\r\n\r\n              var newh = imageHeight / 1.066 - postbackheighthold;\r\n              newArrx[index] = `${newh}`;\r\n              setitemheighthold(newArrx);\r\n              ///////////////////////////////\r\n              ///////////////////////////////\r\n\r\n              newArrxq[index] = 3;\r\n              setitemcroptype(newArrxq);\r\n              ///////////////////////////////\r\n            } else {\r\n              ///////////////////////////////\r\n\r\n              newArrxq[index] = 4;\r\n              setitemcroptype(newArrxq);\r\n              ///////////////////////////////\r\n            }\r\n          }\r\n          ///////////////////////////////\r\n\r\n          newArrxy[index] = true;\r\n          setonLoadDataOnce(newArrxy);\r\n          ///////////////////////////////\r\n\r\n          if (postData.length - 1 === index) {\r\n            ////\r\n            navvScroll();\r\n            ///\r\n            ///\r\n\r\n            setTimeout(function () {\r\n              ///setx(true);\r\n              /// setSliderIndexMini(sliderIndex);\r\n              //// setzoomClickedIndex(pey + 1);\r\n\r\n              if (StopMini) {\r\n\r\n                setStopMini(false)\r\n              } else {\r\n                setminiProfile(true);\r\n              }\r\n\r\n              ///////////\r\n            }, 1000);\r\n\r\n\r\n\r\n\r\n\r\n          }\r\n        }\r\n\r\n      }\r\n    },\r\n    [StopMini,\r\n      screenHeightReducer,\r\n      itemheight,\r\n      itemheighthold,\r\n      itemFinalPostHeight,\r\n      showProfiileData,\r\n      activateLoaderReducer,\r\n      postItemsRef\r\n    ]\r\n  );\r\n\r\n  const scrollToPost = (index: any) => {\r\n    postDivRef.current[index].scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\",\r\n    });\r\n  };\r\n\r\n  const scrollToPostx = (index: any) => {\r\n    postDivRefx.current[index].scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\",\r\n    });\r\n  };\r\n\r\n  const postitemSHOWFULLHEIGHT = (index: any, type: number) => {\r\n    if (itemcroptype[index] === 1 || itemcroptype[index] === 2) {\r\n      if (type === 0) {\r\n        const newitemHeight = [...itemheight];\r\n        newitemHeight[index] = `auto`;\r\n        setitemheight(newitemHeight);\r\n      } else {\r\n        const newitemHeight = [...itemheight];\r\n        newitemHeight[index] = `${itemFinalPostHeight[index]}px`;\r\n        setitemheight(newitemHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  const scrollLongPicTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const scrollLongPicTimerx = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const snapTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const freesnap = () => {\r\n    dispatch(SnapToggleAction(false));\r\n    if (snapTimer.current) {\r\n      clearTimeout(snapTimer.current);\r\n    }\r\n    snapTimer.current = setTimeout(\r\n      function () {\r\n        dispatch(SnapToggleAction(true));\r\n      },\r\n      matchMobile ? 6000 : 11000\r\n    );\r\n  };\r\n\r\n  const AUTOSlideLongImages = (index: number) => {\r\n    ////freesnap();\r\n    if (itemcroptype[index] === 2) {\r\n      scrollLongPicTimerx.current = setTimeout(() => {\r\n        if (paperPostScrollRef.current) {\r\n          paperPostScrollRef.current.scrollTo({\r\n            top:\r\n              paperPostScrollRef.current.scrollTop +\r\n              itemOriginalPostHeight[index] / 3,\r\n            behavior: \"auto\",\r\n          });\r\n        }\r\n      }, 500);\r\n      scrollLongPicTimer.current = setTimeout(() => {\r\n        postDivRef.current[index].scrollIntoView({\r\n          behavior: \"smooth\",\r\n          block: \"start\",\r\n        });\r\n      }, 1300);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const onPostsItemClicked = useCallback((index: number) => {\r\n\r\n    setindexRoll(index);\r\n\r\n    clearAllTimers();\r\n\r\n    setActiveCanvas(index);\r\n\r\n    if (itemCLICKED[index]) {\r\n\r\n\r\n\r\n      dispatch(SnapToggleAction(true));\r\n\r\n\r\n      if (snapTimer.current) {\r\n        clearTimeout(snapTimer.current);\r\n      }\r\n      snapTimer.current = setTimeout(function () { }, 3000);\r\n\r\n\r\n\r\n      const newclickArray = [...itemCLICKED];\r\n      newclickArray[index] = false;\r\n      setitemCLICKED(newclickArray);\r\n      postitemSHOWFULLHEIGHT(index, 1);\r\n      scrollToPost(index);\r\n    } else {\r\n\r\n\r\n\r\n      dispatch(SnapToggleAction(false));\r\n\r\n\r\n\r\n      AUTOSlideLongImages(index);\r\n      if (scrollTypeTimer.current) {\r\n        clearTimeout(scrollTypeTimer.current);\r\n      }\r\n\r\n      const newclickArray = [...itemCLICKED];\r\n      newclickArray[index] = true;\r\n      setitemCLICKED(newclickArray);\r\n      postitemSHOWFULLHEIGHT(index, 0);\r\n      scrollToPost(index);\r\n    }\r\n\r\n\r\n  }, [itemCLICKED]\r\n  );\r\n\r\n\r\n\r\n  ///\r\n  ///\r\n  ///TYPES FOR ISLOGGEDIN\r\n  interface RootStateIsLogged {\r\n    IsLoggedReducer: {\r\n      loggedIn: boolean;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///LOGGED IN DATA FROM REDUX\r\n  const { loggedIn } = useSelector((state: RootStateIsLogged) => ({\r\n    ...state.IsLoggedReducer,\r\n  }));\r\n  const loggedInReducer = loggedIn;\r\n\r\n  ///\r\n  ///\r\n  ///MUI PAPER STYLES FROM REDUX\r\n  const { PaperStyleLight, PaperStyleDark } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.PaperReducerLightnDark,\r\n    })\r\n  );\r\n  var PaperStyleReducer = \"\";\r\n\r\n  if (darkmodeReducer) {\r\n    PaperStyleReducer = PaperStyleDark;\r\n  } else {\r\n    PaperStyleReducer = PaperStyleLight;\r\n  }\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  var widthProfilePic = matchPc ? \"72%\" : matchTablet ? \"84%\" : \"44vw\";\r\n  var topProfilePic = matchPc ? \"-20vh\" : matchTablet ? \"-12vh\" : \"-8vh\";\r\n  var leftProfilePic = matchPc ? \"1vw\" : matchTablet ? \"3.5vw\" : \"2.7vw\";\r\n\r\n  var optionsClass = \"\";\r\n  var fontOptions = \"\";\r\n\r\n  if (matchPc) {\r\n    optionsClass = \"profile-optionsImagePc\";\r\n    fontOptions = \"2.7vw\";\r\n  } else if (matchTablet) {\r\n    optionsClass = \"profile-optionsImageTablet\";\r\n    fontOptions = \"5rem\";\r\n  } else {\r\n    optionsClass = \"profile-optionsImageMobile\";\r\n    fontOptions = \"1.9rem\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      image: string;\r\n    };\r\n  }\r\n  const { image } = useSelector((state: RootStateReducerImage) => ({\r\n    ...state.UserdataReducer,\r\n  }));\r\n  const imageReducer = image;\r\n\r\n  const blank = () => { };\r\n\r\n  const [showModalUpload, setShowModalUpload] = useState<boolean>(false);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\r\n  const closeUploadModal = useCallback((backbutton: number) => {\r\n    //pop states fires when back and forward buttons used\r\n    if (backbutton === 1) {\r\n      window.onpopstate = () => {\r\n        window.history.pushState(null, \"\", window.location.href);\r\n        window.onpopstate = null;\r\n        setShowModalUpload(false);\r\n      };\r\n    } else {\r\n      window.history.pushState(null, \"\", \".\");\r\n      window.onpopstate = null;\r\n      setShowModalUpload(false);\r\n    }\r\n  }, []);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///OPEN MODAL THEN CALL CLOSEMODAL FUNCTION WHICH WAITS FOR A POP EVENT(for closing modal)\r\n  const OpenUploadModal = useCallback(() => {\r\n    setShowModalUpload(!showModalUpload);\r\n    //pushstate add enteries to your history\r\n    window.history.pushState(null, \"\", \"Options\");\r\n    closeUploadModal(1);\r\n  }, [showModalUpload, closeUploadModal]);\r\n\r\n  useEffect(() => {\r\n    /// miniProfile ? setx(false) : setx(true);\r\n  }, [miniProfile]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(function () {\r\n      dispatch(UpdateLoader(false));\r\n      if (showThisComponenet) setshowThisComponenet(false);\r\n    }, 3000);\r\n\r\n    setTimeout(function () {\r\n      if (ShowLoader2) {\r\n        setShowLoader2(false);\r\n      }\r\n    }, 1500);\r\n  }, [postData]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container className=\"dontallowhighlighting\">\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            position: \"fixed\",\r\n            width: \"100%\",\r\n            padding: \"0px\",\r\n            height: \"0px\",\r\n            zIndex: 20000,\r\n            top: \"0px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        ></Grid>\r\n\r\n        <Grid\r\n          ref={TopRef}\r\n          className=\"parent-containerEffect  effect\"\r\n          item\r\n          xs={12}\r\n          style={{\r\n            padding: \"0px\",\r\n            paddingLeft: miniProfile ? (matchPc ? \"10.5vw\" : \"3vw\") : \"0vw\",\r\n            paddingRight: miniProfile ? (matchPc ? \"10.5vw\" : \"3vw\") : \"0vw\",\r\n            height: \"auto\",\r\n            marginTop: '5.5vh'\r\n          }}\r\n        >\r\n          {postData.length > 0 ? (\r\n            <Masonry\r\n              columns={matchPc ? 2 : miniProfile ? 2 : 1}\r\n              spacing={miniProfile && matchMobile ? 1 : miniProfile ? 4 : 0}\r\n              style={{\r\n                padding: \"0px\",\r\n              }}\r\n            >\r\n              {postData.map((post: any, i: any) => (\r\n                <div\r\n                  key={i}\r\n                  style={{\r\n                    position: \"relative\",\r\n                    scrollSnapAlign: x ? \"start\" : \"\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      display: miniProfile ? \"block\" : \"none\",\r\n                      marginTop: \"-5px\",\r\n                    }}\r\n                  >\r\n                    <MiniPost\r\n                      setSliderIndexMini={setSliderIndexMini}\r\n                      sliderIndexMini={sliderIndexMini}\r\n                      zoomClickedIndex={zoomClickedIndex}\r\n                      setzoomClickedIndex={setzoomClickedIndex}\r\n                      miniProfile={miniProfile}\r\n                      setminiProfile={setminiProfile}\r\n                      setStopBodyScroll={setStopBodyScroll}\r\n                      setx={setx}\r\n                      miniLayoutPost={miniLayoutPost}\r\n                      setCommentPostid={setCommentPostid}\r\n                      postData={postData}\r\n                      setDiscussionImage={setDiscussionImage}\r\n                      OpenModalForm={OpenModalForm}\r\n                      second={second}\r\n                      setsecond={setsecond}\r\n                      secondgo={secondgo}\r\n                      setsecondgo={setsecondgo}\r\n                      setcountAutoplay={setcountAutoplay}\r\n                      countAutoplay={countAutoplay}\r\n                      onLoadDataOnce={onLoadDataOnce}\r\n                      pey={i}\r\n                      addPostItemsRef={addPostItemsRef}\r\n                      postDivRefx={postDivRefx}\r\n                      onPostsItemload={onPostsItemload}\r\n                      post={post}\r\n                      itemheight={itemheight}\r\n                      itemheighthold={itemheighthold}\r\n                      postbackheight={postbackheight}\r\n                      itemcroptype={itemcroptype}\r\n                      length={postData.length}\r\n                      itemFinalPostHeight={itemFinalPostHeight}\r\n                      onPostsItemClicked={onPostsItemClicked}\r\n                      itemCLICKED={itemCLICKED}\r\n                      addpostDivRefx={addpostDivRefx}\r\n                      postDatainner={postDatainner}\r\n                      postDatainnerThumb={postDatainnerThumb}\r\n                      itemOriginalPostHeight={itemOriginalPostHeight}\r\n                      ActiveAutoPlay={ActiveAutoPlay}\r\n                      setActiveAutoPlay={setActiveAutoPlay}\r\n                      AUTOSlideLongImages={AUTOSlideLongImages}\r\n                      scrollToPostx={scrollToPostx}\r\n                    />\r\n                  </div>\r\n                  <div style={{ display: miniProfile ? \"none\" : \"block\", }}>\r\n                    <Post\r\n                      ActiveCanvas={ActiveCanvas}\r\n                      postItemsRef={postItemsRef}\r\n                      postDatainnerInteraction2={postDatainnerInteraction2}\r\n                      postDatainnerInteraction1={postDatainnerInteraction1}\r\n                      setscrollLocation={setscrollLocation}\r\n                      paperPostScrollRef={paperPostScrollRef}\r\n                      settypeEmo={settypeEmo}\r\n                      setconnectTemplateGo={setconnectTemplateGo}\r\n                      sliderIndexMini={sliderIndexMini}\r\n                      setsliderIndexMini={setSliderIndexMini}\r\n                      zoomClickedIndex={zoomClickedIndex}\r\n                      setzoomClickedIndex={setzoomClickedIndex}\r\n                      miniProfile={miniProfile}\r\n                      setminiProfile={setminiProfile}\r\n                      setStopBodyScroll={setStopBodyScroll}\r\n                      setx={setx}\r\n                      miniLayoutPost={miniLayoutPost}\r\n                      setCommentPostid={setCommentPostid}\r\n                      postData={postData}\r\n                      setDiscussionImage={setDiscussionImage}\r\n                      OpenModalForm={OpenModalForm}\r\n                      second={second}\r\n                      setsecond={setsecond}\r\n                      secondgo={secondgo}\r\n                      setsecondgo={setsecondgo}\r\n                      setcountAutoplay={setcountAutoplay}\r\n                      countAutoplay={countAutoplay}\r\n                      onLoadDataOnce={onLoadDataOnce}\r\n                      pey={i}\r\n                      addPostItemsRef={addPostItemsRef}\r\n                      postDivRef={postDivRef}\r\n                      onPostsItemload={onPostsItemload}\r\n                      post={post}\r\n                      itemheight={itemheight}\r\n                      itemheighthold={itemheighthold}\r\n                      postbackheight={postbackheight}\r\n                      itemcroptype={itemcroptype}\r\n                      length={postData.length}\r\n                      itemFinalPostHeight={itemFinalPostHeight}\r\n                      onPostsItemClicked={onPostsItemClicked}\r\n                      itemCLICKED={itemCLICKED}\r\n                      addpostDivRef={addpostDivRef}\r\n                      postDatainner={postDatainner}\r\n                      postDatainnerThumb={postDatainnerThumb}\r\n                      itemOriginalPostHeight={itemOriginalPostHeight}\r\n                      ActiveAutoPlay={ActiveAutoPlay}\r\n                      setActiveAutoPlay={setActiveAutoPlay}\r\n                      AUTOSlideLongImages={AUTOSlideLongImages}\r\n                      scrollToPost={scrollToPost}\r\n                    />\r\n                  </div>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n\r\n                      height: \"10px\",\r\n                      backgroundColor: '#00ccff'\r\n                    }}\r\n                  ></Grid>\r\n\r\n                </div>\r\n              ))}\r\n            </Masonry>\r\n          ) : null}\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            ref={lastItemElement}\r\n            style={{\r\n              marginTop: \"60vh\",\r\n              height: \"10px\",\r\n              backgroundColor: '#00ccff'\r\n            }}\r\n          ></Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Profile = React.memo(Profilex);\r\n"]},"metadata":{},"sourceType":"module"}