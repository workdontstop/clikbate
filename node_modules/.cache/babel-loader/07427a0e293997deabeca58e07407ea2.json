{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\UploadMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useCallback, useEffect, useLayoutEffect } from \"react\";\nimport { matchPc } from \"../DetectDevice\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { animated } from \"react-spring\";\nimport Masonry from \"@mui/lab/Masonry\";\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\nimport PhotoIcon from \"@mui/icons-material/Photo\";\nimport GifIcon from \"@mui/icons-material/Gif\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport Axios from \"axios\";\nimport CropIcon from \"@mui/icons-material/Crop\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\nimport { PreviewCanvas } from \"./PreviewCanvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UploadMenux({\n  optionsShow,\n  optinstopshowingReducer,\n  typeTop,\n  closeoptionsslide,\n  animationop,\n  optionsCollectImageRef,\n  handleTouchStartOptions,\n  handleTouchMoveOptions,\n  modalanimation,\n  nextSlidePc,\n  optionsImages,\n  ActiveSlide,\n  optionsNameData,\n  clickOptions,\n  optionsClickType,\n  getSliderWidthNew,\n  cropTOPLEVELScrollRef,\n  refWithimageData,\n  CropSaved,\n  setCropSaved\n}) {\n  _s();\n\n  const [selectedImage, setselectedImage] = useState([]); ///\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env; ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype;\n  const [cropimage, setcropimage] = useState(\"\");\n  const [showCrop, setshowCrop] = useState(false);\n  const [selectedImageUpload, setselectedImageUpload] = useState(null);\n  const updateColor = useCallback(formData => {\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/upload`, formData).then(response => {\n      if (response.data.message === \"ok\") {}\n    }).catch(function (error) {\n      alert(\"about color error\");\n    });\n  }, [REACT_APP_SUPERSTARZ_URL]);\n\n  const imageHandleChange = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const FileArray = Array.from(e.target.files).map(file => URL.createObjectURL(file));\n      setselectedImage(prevImages => prevImages.concat(FileArray));\n      setcropimage(FileArray[0]);\n      const formData = new FormData();\n\n      for (let i = 0; i < e.target.files.length; i++) {\n        formData.append(\"superImages\", e.target.files[i]);\n      }\n\n      setshowCrop(true);\n    }\n  }; ///////////////////////////////////////////////////////SUPER CROP ///////////////////////////////////\n\n\n  const cropCanvasRef = useRef(null); ////\n  ////\n  ////\n\n  const [cropArea, setcropArea] = useState(null); //\n\n  const [crop, setcrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [cropInitial, setcropInitial] = useState({\n    x: 0,\n    y: 0\n  });\n  const [cropOffset, setcropOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [Drag, setDrag] = useState(false);\n  const [SourceWidthForCropX, setSourceWidthForCropX] = useState(0);\n  const [SourceWidthForCropY, setSourceWidthForCropY] = useState(0);\n  const [cropwidth, setcropwidth] = useState(0);\n  const [cropheight, setcropheight] = useState(0);\n  const [canvasToimage, setcanvasToimage] = useState(false);\n  const getpreviewFixedWidthRef = useRef(null);\n  const getCropHeightRef = useRef(null);\n  const getFixedCropWidthRef = useRef(null);\n  const [getCropHeight, setgetCropHeight] = useState(0);\n  const [getCropHeightRealImageRatio, setgetCropHeightRealImageRatio] = useState(0);\n  const [getFixedCropWidth, setgetFixedCropWidth] = useState(0);\n  const [getpreviewFixedWidth, setgetpreviewFixedWidth] = useState(0);\n  const [CropImageHolder, setCropImageHolder] = useState(null);\n  const [OriginalImageWidth, setOriginalImageWidth] = useState(0);\n  const [OriginalImageHeight, setOriginalImageHeight] = useState(0);\n  const [WideImageCheck, setWideImageCheck] = useState(false);\n  const hdcanvasvalue = 2;\n  const [BoxCropActivated, setBoxCropActivated] = useState(true);\n  const cropScrollRef = useRef(null); ///\n  ///\n  ///\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\n\n  useEffect(() => {\n    if (getpreviewFixedWidthRef.current && getpreviewFixedWidthRef.current.clientWidth) {\n      setgetpreviewFixedWidth(getpreviewFixedWidthRef.current.clientWidth);\n    }\n\n    if (getCropHeightRef.current && getCropHeightRef.current.clientWidth) {\n      setgetCropHeight(getCropHeightRef.current.clientHeight * hdcanvasvalue);\n      setgetCropHeightRealImageRatio(getCropHeightRef.current.clientHeight);\n    }\n\n    if (getFixedCropWidthRef.current && getFixedCropWidthRef.current.clientWidth) {\n      setgetFixedCropWidth(getFixedCropWidthRef.current.clientWidth);\n    }\n  }, []); ///\n  ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n  const handleTouchStart = (e, type) => {\n    if (BoxCropActivated) {\n      if (type === 0) {\n        setcropInitial({ ...cropInitial,\n          x: e.clientX * 2.8 - cropOffset.x,\n          y: e.clientY * 3.3 - cropOffset.y\n        });\n      } else {\n        setcropInitial({ ...cropInitial,\n          x: e.touches[0].clientX * 2.8 - cropOffset.x,\n          y: e.touches[0].clientY * 3.3 - cropOffset.y\n        });\n      }\n\n      if (e.target) {\n        setDrag(true);\n      }\n    } else {\n      setBoxCropActivated(true);\n    }\n  };\n\n  const handleTouchEnd = () => {\n    setcropInitial({ ...cropInitial,\n      x: crop.x,\n      y: crop.y\n    });\n    setDrag(false);\n  };\n\n  const handleTouchDrag = (e, type) => {\n    if (Drag) {\n      if (type === 0) {\n        setcrop({ ...crop,\n          x: e.clientX * 2.8 - cropInitial.x,\n          y: e.clientY * 3.3 - cropInitial.y\n        });\n      } else {\n        setcrop({ ...crop,\n          x: e.touches[0].clientX * 2.8 - cropInitial.x,\n          y: e.touches[0].clientY * 3.3 - cropInitial.y\n        });\n      }\n\n      setcropOffset({ ...cropOffset,\n        x: crop.x,\n        y: crop.y\n      });\n    }\n  };\n\n  const draw = useCallback((ctx, dimensions, type, axis) => {\n    if (type === 1) {\n      ctx.drawImage(CropImageHolder, axis, 0, dimensions, getCropHeight);\n    } else if (type === 2) {\n      ctx.drawImage(CropImageHolder, 0, axis, getCropHeight, dimensions);\n    } else {\n      ctx.drawImage(CropImageHolder, 0, 0, OriginalImageWidth, OriginalImageHeight);\n    }\n  }, [OriginalImageWidth, OriginalImageHeight, CropImageHolder, getCropHeight]);\n  useLayoutEffect(() => {\n    const Newcropimage = new Image();\n    Newcropimage.src = cropimage;\n\n    Newcropimage.onload = function () {\n      setCropImageHolder(Newcropimage);\n      var data1 = Newcropimage.naturalWidth;\n      var data2 = Newcropimage.naturalHeight;\n      setOriginalImageWidth(data1);\n      setOriginalImageHeight(data2);\n\n      if (Newcropimage.naturalWidth > Newcropimage.naturalHeight) {\n        setWideImageCheck(true);\n      } else {\n        setWideImageCheck(false);\n      }\n\n      setcropwidth(data1);\n      setcropheight(data2);\n    };\n  }, [cropimage, BoxCropActivated, showCrop]);\n  useLayoutEffect(() => {\n    if (CropImageHolder && cropCanvasRef.current) {\n      const ctx = cropCanvasRef.current.getContext(\"2d\");\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / getCropHeight;\n      var NewBoxRatioWidth_WIDEIMAGE = OriginalImageWidth / RatiofromOriginalandfixedHeight;\n      setSourceWidthForCropX(NewBoxRatioWidth_WIDEIMAGE);\n      var RatiofromOriginalandfixedHeightx = OriginalImageWidth / getCropHeight;\n      var NewBoxRatioWidth_LONGIMAGE = OriginalImageHeight / RatiofromOriginalandfixedHeightx;\n      setSourceWidthForCropY(NewBoxRatioWidth_LONGIMAGE);\n      var ratioh = OriginalImageWidth * 3 / OriginalImageWidth;\n      var ratiow = OriginalImageHeight * 3 / OriginalImageHeight;\n\n      if (BoxCropActivated) {\n        cropCanvasRef.current.width = getCropHeight;\n        cropCanvasRef.current.height = getCropHeight;\n      } else {\n        cropCanvasRef.current.width = OriginalImageWidth;\n        cropCanvasRef.current.height = OriginalImageHeight;\n      }\n\n      var centerpreview = cropCanvasRef.current.width / 1.5 - NewBoxRatioWidth_LONGIMAGE / 1.5;\n      var xtraZoom = getCropHeight / NewBoxRatioWidth_WIDEIMAGE;\n      var centerCropCanvas = cropCanvasRef.current.width / 2 - NewBoxRatioWidth_WIDEIMAGE / 2;\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / getCropHeightRealImageRatio;\n      var newcropCSSWidth = OriginalImageWidth / RatiofromOriginalandfixedHeight;\n\n      if (BoxCropActivated) {\n        var dragDistanceY = NewBoxRatioWidth_LONGIMAGE - getCropHeight;\n        var dragDistanceX = NewBoxRatioWidth_WIDEIMAGE - getCropHeight;\n\n        if (OriginalImageWidth > OriginalImageHeight) {\n          if (crop.x < -dragDistanceX) {\n            setcrop({ ...crop,\n              x: -dragDistanceX\n            });\n          } else if (crop.x > 0) {\n            setcrop({ ...crop,\n              x: 0\n            });\n          } else {}\n\n          requestAnimationFrame(() => {\n            draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, crop.x);\n          });\n        } else {\n          if (crop.y < -dragDistanceY) {\n            setcrop({ ...crop,\n              y: -dragDistanceY\n            });\n          } else if (crop.y > 0) {\n            setcrop({ ...crop,\n              y: 0\n            });\n          } else {}\n\n          requestAnimationFrame(() => {\n            draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, crop.y);\n          });\n        }\n\n        cropCanvasRef.current.style.width = `${getCropHeight / hdcanvasvalue}px`;\n        cropCanvasRef.current.style.height = `${getCropHeight / hdcanvasvalue}px`;\n      } else {\n        requestAnimationFrame(() => {\n          draw(ctx, 0, 3, 0);\n        });\n        cropCanvasRef.current.style.width = `${newcropCSSWidth}px`;\n        cropCanvasRef.current.style.height = `${getCropHeightRealImageRatio}px`;\n      }\n    }\n  }, [CropImageHolder, cropCanvasRef, BoxCropActivated, OriginalImageWidth, OriginalImageHeight, crop]);\n\n  const gg = () => {};\n\n  const cropaspectchange = () => {\n    setBoxCropActivated(BoxCropActivated => !BoxCropActivated);\n  };\n\n  const complete = () => {\n    setCropSaved(true);\n    setshowCrop(false);\n    setcanvasToimage(true);\n  }; //////////////////////////////////////////////////////////////////////SUPER CROP ///////////////////////////\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        position: showCrop ? \"relative\" : \"fixed\",\n        top: showCrop ? \"0px\" : \"-800vh\",\n        width: \"100%\",\n        height: \"70%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        onMouseDown: e => {\n          handleTouchStart(e, 0);\n        },\n        onTouchStart: e => {\n          handleTouchStart(e, 1);\n        },\n        onMouseMove: e => {\n          handleTouchDrag(e, 0);\n        },\n        onTouchMove: e => {\n          handleTouchDrag(e, 1);\n        },\n        onMouseUp: handleTouchEnd,\n        onTouchEnd: handleTouchEnd,\n        className: darkmodeReducer ? \"turdarkCrop topcanvas\" : \"turdarkCrop topcanvas\",\n        ref: cropCanvasRef,\n        style: {\n          padding: \"0px\",\n          margin: \"auto\",\n          cursor: \"pointer\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          padding: \"0px\",\n          bottom: \"13.6vh\",\n          margin: \"auto\",\n          width: `100%`,\n          height: \"0px\",\n          position: \"absolute\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          alignContent: \"center\",\n          alignSelf: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          style: {\n            padding: \"0px\",\n            height: \"0px\",\n            margin: \"auto\",\n            display: \"grid\",\n            alignItems: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CropIcon, {\n            onClick: cropaspectchange,\n            className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \",\n            style: {\n              margin: \"auto\",\n              marginRight: \"9%\",\n              fontSize: \"2.9vw\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          style: {\n            padding: \"0px\",\n            height: \"0px\",\n            margin: \"auto\",\n            display: \"grid\",\n            alignItems: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n            onClick: complete,\n            className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \",\n            style: {\n              margin: \"auto\",\n              marginLeft: \"9%\",\n              fontSize: \"2.9vw\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), showCrop ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: imageHandleChange,\n        type: \"file\",\n        name: \"superImages\",\n        accept: \"image/*\",\n        multiple: true,\n        id: \"file\",\n        style: {\n          visibility: \"hidden\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        onTouchStart: handleTouchStartOptions,\n        onTouchMove: handleTouchMoveOptions,\n        style: {\n          zIndex: 1,\n          padding: \"0px\",\n          top: matchPc ? \"-2vh\" : \"0vh\",\n          position: \"relative\",\n          margin: \"0 auto\",\n          overflow: \"hidden\",\n          left: \"0px\",\n          height: matchPc ? \"24.4vh\" : \"20.5vh\",\n          paddingBottom: \"1px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(animated.div, {\n          ref: optionsCollectImageRef,\n          style: modalanimation,\n          children: optionsImages.map((im, i) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [ActiveSlide === 1 && i === 1 ? /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"file\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => {\n                  clickOptions(i, optionsClickType, \"\");\n                },\n                style: {\n                  cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\n                  width: `${getSliderWidthNew}px`,\n                  height: `${getSliderWidthNew}px`,\n                  backgroundColor: darkmodeReducer ? \"rgba(010,010,010, 0.68)\" : \"rgba(220,220,220, 0.7)\",\n                  borderRadius: \"50%\",\n                  marginTop: \"2.15vh\",\n                  textAlign: \"center\",\n                  alignItems: \"center\",\n                  display: \"grid\",\n                  justifyContent: \"center\",\n                  boxShadow: darkmodeReducer ? ActiveSlide === i ? colortypeReducer === 0 ? `0 0 5.5px ${colorReducerdark}` : `0 0 5.5px ${colorReducer}` : \"0 0 5.5px#aaaaaa\" : ActiveSlide === i ? `0 0 5.5px ${colorReducer}` : \"0 0 5.45px#222222\"\n                },\n                children: /*#__PURE__*/_jsxDEV(PhotoIcon, {\n                  style: {\n                    fontSize: matchPc ? \"2vw\" : \"5vh\",\n                    color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                  },\n                  className: \"zuperkinginfo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => {\n                  clickOptions(i, optionsClickType, \"\");\n                },\n                style: {\n                  cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\n                  width: `${getSliderWidthNew}px`,\n                  height: `${getSliderWidthNew}px`,\n                  backgroundColor: darkmodeReducer ? \"rgba(010,010,010, 0.68)\" : \"rgba(220,220,220, 0.7)\",\n                  borderRadius: \"50%\",\n                  marginTop: \"2.15vh\",\n                  textAlign: \"center\",\n                  alignItems: \"center\",\n                  display: \"grid\",\n                  justifyContent: \"center\",\n                  boxShadow: darkmodeReducer ? ActiveSlide === i ? colortypeReducer === 0 ? `0 0 5.5px ${colorReducerdark}` : `0 0 5.5px ${colorReducer}` : \"0 0 5.5px#aaaaaa\" : ActiveSlide === i ? `0 0 5.5px ${colorReducer}` : \"0 0 5.45px#222222\"\n                },\n                children: [i === 0 ? /*#__PURE__*/_jsxDEV(MusicNoteIcon, {\n                  style: {\n                    fontSize: matchPc ? \"2vw\" : \"5vh\",\n                    color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                  },\n                  className: \"zuperkinginfo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 27\n                }, this) : null, i === 1 ? /*#__PURE__*/_jsxDEV(PhotoIcon, {\n                  style: {\n                    fontSize: matchPc ? \"2vw\" : \"5vh\",\n                    color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                  },\n                  className: \"zuperkinginfo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 27\n                }, this) : null, i === 2 && CropSaved ? /*#__PURE__*/_jsxDEV(CropIcon, {\n                  style: {\n                    fontSize: matchPc ? \"2vw\" : \"5vh\",\n                    color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                  },\n                  className: \"zuperkinginfo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 27\n                }, this) : null, i === CropSaved ? 3 : 2 ? /*#__PURE__*/_jsxDEV(GifIcon, {\n                  style: {\n                    fontSize: matchPc ? \"2.5vw\" : \"5vh\",\n                    color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                  },\n                  className: \"zuperkinginfo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 27\n                }, this) : null, i === CropSaved ? 4 : 3 ? /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n                  style: {\n                    fontSize: matchPc ? \"2.3vw\" : \"5vh\",\n                    color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                  },\n                  className: \"zuperkinginfo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 27\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              style: {\n                margin: \"auto\",\n                textAlign: \"center\",\n                position: \"relative\",\n                bottom: \"-0.5em\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                style: {\n                  fontSize: matchPc ? \"1.1vw\" : \"2vh\",\n                  fontWeight: \"bolder\",\n                  fontFamily: \"Arial, Helvetica, sans-serif\",\n                  visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\n                  color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\"\n                },\n                children: [\" \", optionsNameData[i]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [showCrop ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" \", selectedImage.length > 0 ? /*#__PURE__*/_jsxDEV(Masonry, {\n            columns: matchPc ? selectedImage.length > 2 ? 3 : 2 : 1,\n            spacing: 0,\n            style: {\n              overflowX: \"hidden\",\n              position: \"relative\",\n              zIndex: 2\n            },\n            children: [selectedImage.map((photo, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(PreviewCanvas, {\n                  image: photo,\n                  cropTOPLEVELScrollRef: cropTOPLEVELScrollRef,\n                  index: index,\n                  setcropimage: setcropimage,\n                  setcrop: setcrop,\n                  crop: crop\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 720,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 23\n              }, this);\n            }), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 17\n          }, this) : null, \" \"]\n        }, void 0, true) : null, /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: selectedImage.length > 0 ? /*#__PURE__*/_jsxDEV(Masonry, {\n            columns: matchPc ? 3 : 1,\n            spacing: 0,\n            style: {\n              overflowX: \"hidden\",\n              zIndex: 2,\n              position: showCrop ? \"fixed\" : \"relative\",\n              top: showCrop ? \"-800vh\" : \"0px\"\n            },\n            children: [selectedImage.map((photo, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(PreviewCanvasCropAll, {\n                  showCrop: showCrop,\n                  WideImageCheck: WideImageCheck,\n                  SourceWidthForCropX: SourceWidthForCropX,\n                  SourceWidthForCropY: SourceWidthForCropY,\n                  hdcanvasvalue: hdcanvasvalue,\n                  BoxCropActivated: BoxCropActivated,\n                  cropheight: cropheight,\n                  cropwidth: cropwidth,\n                  CropImageHolder: CropImageHolder,\n                  cropCanvasRef: cropCanvasRef,\n                  crop: crop,\n                  image: photo,\n                  getpreviewFixedWidth: getpreviewFixedWidth,\n                  getCropHeight: getCropHeight,\n                  canvasToimage: canvasToimage,\n                  refWithimageData: refWithimageData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 751,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 750,\n                columnNumber: 21\n              }, this);\n            }), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 15\n          }, this) : null\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        height: \"100%\",\n        position: \"fixed\",\n        top: \"-800vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getpreviewFixedWidthRef,\n          xs: 5,\n          style: {\n            padding: \"0px\",\n            backgroundColor: \"blue\",\n            height: \"40%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getFixedCropWidthRef,\n          xs: 4,\n          style: {\n            padding: \"0px\",\n            backgroundColor: \"yellow\",\n            height: \"35%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropHeightRef,\n          xs: 12,\n          style: {\n            height: \"70%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UploadMenux, \"xxY5LSg/AoBHr/LneYexF3P0DS0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = UploadMenux;\nexport const UploadMenu = /*#__PURE__*/React.memo(UploadMenux);\n_c2 = UploadMenu;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadMenux\");\n$RefreshReg$(_c2, \"UploadMenu\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/UploadMenu.tsx"],"names":["React","useRef","useState","useCallback","useEffect","useLayoutEffect","matchPc","Grid","useSelector","animated","Masonry","MusicNoteIcon","PhotoIcon","GifIcon","ChevronRightIcon","Axios","CropIcon","CheckIcon","PreviewCanvasCropAll","PreviewCanvas","UploadMenux","optionsShow","optinstopshowingReducer","typeTop","closeoptionsslide","animationop","optionsCollectImageRef","handleTouchStartOptions","handleTouchMoveOptions","modalanimation","nextSlidePc","optionsImages","ActiveSlide","optionsNameData","clickOptions","optionsClickType","getSliderWidthNew","cropTOPLEVELScrollRef","refWithimageData","CropSaved","setCropSaved","selectedImage","setselectedImage","darkmode","state","GlobalReducer","darkmodeReducer","REACT_APP_SUPERSTARZ_URL","process","env","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","cropimage","setcropimage","showCrop","setshowCrop","selectedImageUpload","setselectedImageUpload","updateColor","formData","post","then","response","data","message","catch","error","alert","imageHandleChange","e","target","files","length","FileArray","Array","from","map","file","URL","createObjectURL","prevImages","concat","FormData","i","append","cropCanvasRef","cropArea","setcropArea","crop","setcrop","x","y","cropInitial","setcropInitial","cropOffset","setcropOffset","Drag","setDrag","SourceWidthForCropX","setSourceWidthForCropX","SourceWidthForCropY","setSourceWidthForCropY","cropwidth","setcropwidth","cropheight","setcropheight","canvasToimage","setcanvasToimage","getpreviewFixedWidthRef","getCropHeightRef","getFixedCropWidthRef","getCropHeight","setgetCropHeight","getCropHeightRealImageRatio","setgetCropHeightRealImageRatio","getFixedCropWidth","setgetFixedCropWidth","getpreviewFixedWidth","setgetpreviewFixedWidth","CropImageHolder","setCropImageHolder","OriginalImageWidth","setOriginalImageWidth","OriginalImageHeight","setOriginalImageHeight","WideImageCheck","setWideImageCheck","hdcanvasvalue","BoxCropActivated","setBoxCropActivated","cropScrollRef","current","clientWidth","clientHeight","handleTouchStart","type","clientX","clientY","touches","handleTouchEnd","handleTouchDrag","draw","ctx","dimensions","axis","drawImage","Newcropimage","Image","src","onload","data1","naturalWidth","data2","naturalHeight","getContext","RatiofromOriginalandfixedHeight","NewBoxRatioWidth_WIDEIMAGE","RatiofromOriginalandfixedHeightx","NewBoxRatioWidth_LONGIMAGE","ratioh","ratiow","width","height","centerpreview","xtraZoom","centerCropCanvas","newcropCSSWidth","dragDistanceY","dragDistanceX","requestAnimationFrame","style","gg","cropaspectchange","complete","position","top","padding","margin","cursor","bottom","display","justifyContent","alignItems","alignContent","alignSelf","marginRight","fontSize","marginLeft","visibility","zIndex","overflow","left","paddingBottom","im","backgroundColor","borderRadius","marginTop","textAlign","boxShadow","fontWeight","fontFamily","overflowX","photo","index","UploadMenu","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,MADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,eALF,QAMO,OANP;AAOA,SAASC,OAAT,QAAqC,iBAArC;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,SAASC,WAAT,QAAyC,aAAzC;AACA,SAAoBC,QAApB,QAAoC,cAApC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAGA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,aAAT,QAA8B,iBAA9B;;;;AAEA,SAASC,WAAT,CAAqB;AACnBC,EAAAA,WADmB;AAEnBC,EAAAA,uBAFmB;AAGnBC,EAAAA,OAHmB;AAInBC,EAAAA,iBAJmB;AAKnBC,EAAAA,WALmB;AAMnBC,EAAAA,sBANmB;AAOnBC,EAAAA,uBAPmB;AAQnBC,EAAAA,sBARmB;AASnBC,EAAAA,cATmB;AAUnBC,EAAAA,WAVmB;AAWnBC,EAAAA,aAXmB;AAYnBC,EAAAA,WAZmB;AAanBC,EAAAA,eAbmB;AAcnBC,EAAAA,YAdmB;AAenBC,EAAAA,gBAfmB;AAgBnBC,EAAAA,iBAhBmB;AAiBnBC,EAAAA,qBAjBmB;AAkBnBC,EAAAA,gBAlBmB;AAmBnBC,EAAAA,SAnBmB;AAoBnBC,EAAAA;AApBmB,CAArB,EAqBqB;AAAA;;AACnB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCxC,QAAQ,CAAa,EAAb,CAAlD,CADmB,CAEnB;AACA;AACA;AACA;;AAMA,QAAM;AAAEyC,IAAAA;AAAF,MAAenC,WAAW,CAAEoC,KAAD,KAAoC,EACnE,GAAGA,KAAK,CAACC;AAD0D,GAApC,CAAD,CAAhC;AAIA,QAAMC,eAAe,GAAGH,QAAxB;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAA+BC,OAAO,CAACC,GAA7C,CAjBmB,CAmBnB;AACA;AACA;;AAQA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,MAAkC5C,WAAW,CAChDoC,KAAD,KAAmC,EACjC,GAAGA,KAAK,CAACS;AADwB,GAAnC,CADiD,CAAnD;AAKA,QAAMC,YAAY,GAAGJ,KAArB;AACA,QAAMK,gBAAgB,GAAGJ,SAAzB;AACA,QAAMK,gBAAgB,GAAGJ,SAAzB;AAEA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BxD,QAAQ,CAAqB,EAArB,CAA1C;AACA,QAAM,CAACyD,QAAD,EAAWC,WAAX,IAA0B1D,QAAQ,CAAU,KAAV,CAAxC;AAEA,QAAM,CAAC2D,mBAAD,EAAsBC,sBAAtB,IAAgD5D,QAAQ,CAAM,IAAN,CAA9D;AAEA,QAAM6D,WAAW,GAAG5D,WAAW,CAC5B6D,QAAD,IAAmB;AACjBjD,IAAAA,KAAK,CAACkD,IAAN,CAAY,UAASlB,wBAAyB,SAA9C,EAAwDiB,QAAxD,EACGE,IADH,CACSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAd,KAA0B,IAA9B,EAAoC,CACnC;AACF,KAJH,EAKGC,KALH,CAKS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACD,KAPH;AAQD,GAV4B,EAW7B,CAACzB,wBAAD,CAX6B,CAA/B;;AAcA,QAAM0B,iBAAiB,GAAIC,CAAD,IAAY;AACpC,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkBF,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAA9C,EAAiD;AAC/C,YAAMC,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAWN,CAAC,CAACC,MAAF,CAASC,KAApB,EAA2BK,GAA3B,CAAgCC,IAAD,IAC/CC,GAAG,CAACC,eAAJ,CAAoBF,IAApB,CADgB,CAAlB;AAIAxC,MAAAA,gBAAgB,CAAE2C,UAAD,IAAqBA,UAAU,CAACC,MAAX,CAAkBR,SAAlB,CAAtB,CAAhB;AAEApB,MAAAA,YAAY,CAACoB,SAAS,CAAC,CAAD,CAAV,CAAZ;AAEA,YAAMd,QAAQ,GAAG,IAAIuB,QAAJ,EAAjB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAnC,EAA2CW,CAAC,EAA5C,EAAgD;AAC9CxB,QAAAA,QAAQ,CAACyB,MAAT,CAAgB,aAAhB,EAA+Bf,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeY,CAAf,CAA/B;AACD;;AAED5B,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GAlBD,CAzDmB,CA6EnB;;;AAEA,QAAM8B,aAAkB,GAAGzF,MAAM,CAAC,IAAD,CAAjC,CA/EmB,CAiFnB;AACA;AACA;;AACA,QAAM,CAAC0F,QAAD,EAAWC,WAAX,IAA0B1F,QAAQ,CAAM,IAAN,CAAxC,CApFmB,CAsFnB;;AACA,QAAM,CAAC2F,IAAD,EAAOC,OAAP,IAAkB5F,QAAQ,CAAM;AAAE6F,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAN,CAAhC;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChG,QAAQ,CAAM;AAAE6F,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAN,CAA9C;AAEA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BlG,QAAQ,CAAM;AAAE6F,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAN,CAA5C;AAEA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBpG,QAAQ,CAAU,KAAV,CAAhC;AAEA,QAAM,CAACqG,mBAAD,EAAsBC,sBAAtB,IAAgDtG,QAAQ,CAAC,CAAD,CAA9D;AAEA,QAAM,CAACuG,mBAAD,EAAsBC,sBAAtB,IAAgDxG,QAAQ,CAAC,CAAD,CAA9D;AAEA,QAAM,CAACyG,SAAD,EAAYC,YAAZ,IAA4B1G,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAAC2G,UAAD,EAAaC,aAAb,IAA8B5G,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAM,CAAC6G,aAAD,EAAgBC,gBAAhB,IAAoC9G,QAAQ,CAAU,KAAV,CAAlD;AAEA,QAAM+G,uBAAuB,GAAGhH,MAAM,CAAiB,IAAjB,CAAtC;AAEA,QAAMiH,gBAAqB,GAAGjH,MAAM,CAAiB,IAAjB,CAApC;AAEA,QAAMkH,oBAAyB,GAAGlH,MAAM,CAAiB,IAAjB,CAAxC;AAEA,QAAM,CAACmH,aAAD,EAAgBC,gBAAhB,IAAoCnH,QAAQ,CAAC,CAAD,CAAlD;AAEA,QAAM,CAACoH,2BAAD,EAA8BC,8BAA9B,IACJrH,QAAQ,CAAC,CAAD,CADV;AAGA,QAAM,CAACsH,iBAAD,EAAoBC,oBAApB,IAA4CvH,QAAQ,CAAC,CAAD,CAA1D;AAEA,QAAM,CAACwH,oBAAD,EAAuBC,uBAAvB,IAAkDzH,QAAQ,CAAC,CAAD,CAAhE;AAEA,QAAM,CAAC0H,eAAD,EAAkBC,kBAAlB,IAAwC3H,QAAQ,CAAM,IAAN,CAAtD;AAEA,QAAM,CAAC4H,kBAAD,EAAqBC,qBAArB,IAA8C7H,QAAQ,CAAS,CAAT,CAA5D;AACA,QAAM,CAAC8H,mBAAD,EAAsBC,sBAAtB,IAAgD/H,QAAQ,CAAS,CAAT,CAA9D;AAEA,QAAM,CAACgI,cAAD,EAAiBC,iBAAjB,IAAsCjI,QAAQ,CAAU,KAAV,CAApD;AAEA,QAAMkI,aAAa,GAAG,CAAtB;AAEA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CpI,QAAQ,CAAU,IAAV,CAAxD;AAEA,QAAMqI,aAAkB,GAAGtI,MAAM,CAAC,IAAD,CAAjC,CAlImB,CAoInB;AACA;AACA;AACA;;AACAG,EAAAA,SAAS,CAAC,MAAM;AACd,QACE6G,uBAAuB,CAACuB,OAAxB,IACAvB,uBAAuB,CAACuB,OAAxB,CAAgCC,WAFlC,EAGE;AACAd,MAAAA,uBAAuB,CAACV,uBAAuB,CAACuB,OAAxB,CAAgCC,WAAjC,CAAvB;AACD;;AAED,QAAIvB,gBAAgB,CAACsB,OAAjB,IAA4BtB,gBAAgB,CAACsB,OAAjB,CAAyBC,WAAzD,EAAsE;AACpEpB,MAAAA,gBAAgB,CAACH,gBAAgB,CAACsB,OAAjB,CAAyBE,YAAzB,GAAwCN,aAAzC,CAAhB;AACAb,MAAAA,8BAA8B,CAACL,gBAAgB,CAACsB,OAAjB,CAAyBE,YAA1B,CAA9B;AACD;;AAED,QACEvB,oBAAoB,CAACqB,OAArB,IACArB,oBAAoB,CAACqB,OAArB,CAA6BC,WAF/B,EAGE;AACAhB,MAAAA,oBAAoB,CAACN,oBAAoB,CAACqB,OAArB,CAA6BC,WAA9B,CAApB;AACD;AACF,GAnBQ,EAmBN,EAnBM,CAAT,CAxImB,CA4JnB;AAEA;AACA;AACA;AACA;;AACA,QAAME,gBAAgB,GAAG,CAACjE,CAAD,EAASkE,IAAT,KAAuB;AAC9C,QAAIP,gBAAJ,EAAsB;AACpB,UAAIO,IAAI,KAAK,CAAb,EAAgB;AACd1C,QAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEbF,UAAAA,CAAC,EAAErB,CAAC,CAACmE,OAAF,GAAY,GAAZ,GAAkB1C,UAAU,CAACJ,CAFnB;AAGbC,UAAAA,CAAC,EAAEtB,CAAC,CAACoE,OAAF,GAAY,GAAZ,GAAkB3C,UAAU,CAACH;AAHnB,SAAD,CAAd;AAKD,OAND,MAMO;AACLE,QAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEbF,UAAAA,CAAC,EAAErB,CAAC,CAACqE,OAAF,CAAU,CAAV,EAAaF,OAAb,GAAuB,GAAvB,GAA6B1C,UAAU,CAACJ,CAF9B;AAGbC,UAAAA,CAAC,EAAEtB,CAAC,CAACqE,OAAF,CAAU,CAAV,EAAaD,OAAb,GAAuB,GAAvB,GAA6B3C,UAAU,CAACH;AAH9B,SAAD,CAAd;AAKD;;AACD,UAAItB,CAAC,CAACC,MAAN,EAAc;AACZ2B,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,KAjBD,MAiBO;AACLgC,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;AACF,GArBD;;AAuBA,QAAMU,cAAc,GAAG,MAAM;AAC3B9C,IAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEbF,MAAAA,CAAC,EAAEF,IAAI,CAACE,CAFK;AAGbC,MAAAA,CAAC,EAAEH,IAAI,CAACG;AAHK,KAAD,CAAd;AAKAM,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAPD;;AASA,QAAM2C,eAAe,GAAG,CAACvE,CAAD,EAASkE,IAAT,KAAuB;AAC7C,QAAIvC,IAAJ,EAAU;AACR,UAAIuC,IAAI,KAAK,CAAb,EAAgB;AACd9C,QAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAENE,UAAAA,CAAC,EAAErB,CAAC,CAACmE,OAAF,GAAY,GAAZ,GAAkB5C,WAAW,CAACF,CAF3B;AAGNC,UAAAA,CAAC,EAAEtB,CAAC,CAACoE,OAAF,GAAY,GAAZ,GAAkB7C,WAAW,CAACD;AAH3B,SAAD,CAAP;AAKD,OAND,MAMO;AACLF,QAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAENE,UAAAA,CAAC,EAAErB,CAAC,CAACqE,OAAF,CAAU,CAAV,EAAaF,OAAb,GAAuB,GAAvB,GAA6B5C,WAAW,CAACF,CAFtC;AAGNC,UAAAA,CAAC,EAAEtB,CAAC,CAACqE,OAAF,CAAU,CAAV,EAAaD,OAAb,GAAuB,GAAvB,GAA6B7C,WAAW,CAACD;AAHtC,SAAD,CAAP;AAKD;;AAEDI,MAAAA,aAAa,CAAC,EACZ,GAAGD,UADS;AAEZJ,QAAAA,CAAC,EAAEF,IAAI,CAACE,CAFI;AAGZC,QAAAA,CAAC,EAAEH,IAAI,CAACG;AAHI,OAAD,CAAb;AAKD;AACF,GAtBD;;AAwBA,QAAMkD,IAAI,GAAG/I,WAAW,CACtB,CAACgJ,GAAD,EAAWC,UAAX,EAA4BR,IAA5B,EAA0CS,IAA1C,KAA2D;AACzD,QAAIT,IAAI,KAAK,CAAb,EAAgB;AACdO,MAAAA,GAAG,CAACG,SAAJ,CAAc1B,eAAd,EAA+ByB,IAA/B,EAAqC,CAArC,EAAwCD,UAAxC,EAAoDhC,aAApD;AACD,KAFD,MAEO,IAAIwB,IAAI,KAAK,CAAb,EAAgB;AACrBO,MAAAA,GAAG,CAACG,SAAJ,CAAc1B,eAAd,EAA+B,CAA/B,EAAkCyB,IAAlC,EAAwCjC,aAAxC,EAAuDgC,UAAvD;AACD,KAFM,MAEA;AACLD,MAAAA,GAAG,CAACG,SAAJ,CACE1B,eADF,EAEE,CAFF,EAGE,CAHF,EAIEE,kBAJF,EAKEE,mBALF;AAOD;AACF,GAfqB,EAgBtB,CAACF,kBAAD,EAAqBE,mBAArB,EAA0CJ,eAA1C,EAA2DR,aAA3D,CAhBsB,CAAxB;AAmBA/G,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAMkJ,YAAiB,GAAG,IAAIC,KAAJ,EAA1B;AACAD,IAAAA,YAAY,CAACE,GAAb,GAAmBhG,SAAnB;;AACA8F,IAAAA,YAAY,CAACG,MAAb,GAAsB,YAAY;AAChC7B,MAAAA,kBAAkB,CAAC0B,YAAD,CAAlB;AAEA,UAAII,KAAK,GAAGJ,YAAY,CAACK,YAAzB;AACA,UAAIC,KAAK,GAAGN,YAAY,CAACO,aAAzB;AACA/B,MAAAA,qBAAqB,CAAC4B,KAAD,CAArB;AACA1B,MAAAA,sBAAsB,CAAC4B,KAAD,CAAtB;;AAEA,UAAIN,YAAY,CAACK,YAAb,GAA4BL,YAAY,CAACO,aAA7C,EAA4D;AAC1D3B,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,OAFD,MAEO;AACLA,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;;AAEDvB,MAAAA,YAAY,CAAC+C,KAAD,CAAZ;AACA7C,MAAAA,aAAa,CAAC+C,KAAD,CAAb;AACD,KAhBD;AAiBD,GApBc,EAoBZ,CAACpG,SAAD,EAAY4E,gBAAZ,EAA8B1E,QAA9B,CApBY,CAAf;AAsBAtD,EAAAA,eAAe,CAAC,MAAM;AACpB,QAAIuH,eAAe,IAAIlC,aAAa,CAAC8C,OAArC,EAA8C;AAC5C,YAAMW,GAAG,GAAGzD,aAAa,CAAC8C,OAAd,CAAsBuB,UAAtB,CAAiC,IAAjC,CAAZ;AAEA,UAAIC,+BAA+B,GAAGhC,mBAAmB,GAAGZ,aAA5D;AACA,UAAI6C,0BAA0B,GAC5BnC,kBAAkB,GAAGkC,+BADvB;AAGAxD,MAAAA,sBAAsB,CAACyD,0BAAD,CAAtB;AAEA,UAAIC,gCAAgC,GAAGpC,kBAAkB,GAAGV,aAA5D;AACA,UAAI+C,0BAA0B,GAC5BnC,mBAAmB,GAAGkC,gCADxB;AAGAxD,MAAAA,sBAAsB,CAACyD,0BAAD,CAAtB;AAEA,UAAIC,MAAM,GAAItC,kBAAkB,GAAG,CAAtB,GAA2BA,kBAAxC;AACA,UAAIuC,MAAM,GAAIrC,mBAAmB,GAAG,CAAvB,GAA4BA,mBAAzC;;AAEA,UAAIK,gBAAJ,EAAsB;AACpB3C,QAAAA,aAAa,CAAC8C,OAAd,CAAsB8B,KAAtB,GAA8BlD,aAA9B;AACA1B,QAAAA,aAAa,CAAC8C,OAAd,CAAsB+B,MAAtB,GAA+BnD,aAA/B;AACD,OAHD,MAGO;AACL1B,QAAAA,aAAa,CAAC8C,OAAd,CAAsB8B,KAAtB,GAA8BxC,kBAA9B;AACApC,QAAAA,aAAa,CAAC8C,OAAd,CAAsB+B,MAAtB,GAA+BvC,mBAA/B;AACD;;AAED,UAAIwC,aAAa,GACf9E,aAAa,CAAC8C,OAAd,CAAsB8B,KAAtB,GAA8B,GAA9B,GAAoCH,0BAA0B,GAAG,GADnE;AAGA,UAAIM,QAAQ,GAAGrD,aAAa,GAAG6C,0BAA/B;AAEA,UAAIS,gBAAgB,GAClBhF,aAAa,CAAC8C,OAAd,CAAsB8B,KAAtB,GAA8B,CAA9B,GAAkCL,0BAA0B,GAAG,CADjE;AAGA,UAAID,+BAA+B,GACjChC,mBAAmB,GAAGV,2BADxB;AAEA,UAAIqD,eAAe,GACjB7C,kBAAkB,GAAGkC,+BADvB;;AAGA,UAAI3B,gBAAJ,EAAsB;AACpB,YAAIuC,aAAa,GAAGT,0BAA0B,GAAG/C,aAAjD;AACA,YAAIyD,aAAa,GAAGZ,0BAA0B,GAAG7C,aAAjD;;AAEA,YAAIU,kBAAkB,GAAGE,mBAAzB,EAA8C;AAC5C,cAAInC,IAAI,CAACE,CAAL,GAAS,CAAC8E,aAAd,EAA6B;AAC3B/E,YAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWE,cAAAA,CAAC,EAAE,CAAC8E;AAAf,aAAD,CAAP;AACD,WAFD,MAEO,IAAIhF,IAAI,CAACE,CAAL,GAAS,CAAb,EAAgB;AACrBD,YAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWE,cAAAA,CAAC,EAAE;AAAd,aAAD,CAAP;AACD,WAFM,MAEA,CACN;;AAED+E,UAAAA,qBAAqB,CAAC,MAAM;AAC1B5B,YAAAA,IAAI,CAACC,GAAD,EAAMc,0BAAN,EAAkC,CAAlC,EAAqCpE,IAAI,CAACE,CAA1C,CAAJ;AACD,WAFoB,CAArB;AAGD,SAXD,MAWO;AACL,cAAIF,IAAI,CAACG,CAAL,GAAS,CAAC4E,aAAd,EAA6B;AAC3B9E,YAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWG,cAAAA,CAAC,EAAE,CAAC4E;AAAf,aAAD,CAAP;AACD,WAFD,MAEO,IAAI/E,IAAI,CAACG,CAAL,GAAS,CAAb,EAAgB;AACrBF,YAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWG,cAAAA,CAAC,EAAE;AAAd,aAAD,CAAP;AACD,WAFM,MAEA,CACN;;AAED8E,UAAAA,qBAAqB,CAAC,MAAM;AAC1B5B,YAAAA,IAAI,CAACC,GAAD,EAAMgB,0BAAN,EAAkC,CAAlC,EAAqCtE,IAAI,CAACG,CAA1C,CAAJ;AACD,WAFoB,CAArB;AAGD;;AAEDN,QAAAA,aAAa,CAAC8C,OAAd,CAAsBuC,KAAtB,CAA4BT,KAA5B,GAAqC,GACnClD,aAAa,GAAGgB,aACjB,IAFD;AAGA1C,QAAAA,aAAa,CAAC8C,OAAd,CAAsBuC,KAAtB,CAA4BR,MAA5B,GAAsC,GACpCnD,aAAa,GAAGgB,aACjB,IAFD;AAGD,OAlCD,MAkCO;AACL0C,QAAAA,qBAAqB,CAAC,MAAM;AAC1B5B,UAAAA,IAAI,CAACC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAY,CAAZ,CAAJ;AACD,SAFoB,CAArB;AAIAzD,QAAAA,aAAa,CAAC8C,OAAd,CAAsBuC,KAAtB,CAA4BT,KAA5B,GAAqC,GAAEK,eAAgB,IAAvD;AACAjF,QAAAA,aAAa,CAAC8C,OAAd,CAAsBuC,KAAtB,CAA4BR,MAA5B,GAAsC,GAAEjD,2BAA4B,IAApE;AACD;AACF;AACF,GAnFc,EAmFZ,CACDM,eADC,EAEDlC,aAFC,EAGD2C,gBAHC,EAIDP,kBAJC,EAKDE,mBALC,EAMDnC,IANC,CAnFY,CAAf;;AA2FA,QAAMmF,EAAE,GAAG,MAAM,CAAE,CAAnB;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B3C,IAAAA,mBAAmB,CAAED,gBAAD,IAAsB,CAACA,gBAAxB,CAAnB;AACD,GAFD;;AAIA,QAAM6C,QAAQ,GAAG,MAAM;AACrB1I,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAoB,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAoD,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAJD,CApWmB,CA0WnB;;;AACA,sBACE;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,KAAK,EAAE;AACLmE,QAAAA,QAAQ,EAAExH,QAAQ,GAAG,UAAH,GAAgB,OAD7B;AAELyH,QAAAA,GAAG,EAAEzH,QAAQ,GAAG,KAAH,GAAW,QAFnB;AAGL2G,QAAAA,KAAK,EAAE,MAHF;AAILC,QAAAA,MAAM,EAAE;AAJH,OAFT;AAAA,8BASE;AACE,QAAA,WAAW,EAAG7F,CAAD,IAAY;AACvBiE,UAAAA,gBAAgB,CAACjE,CAAD,EAAI,CAAJ,CAAhB;AACD,SAHH;AAIE,QAAA,YAAY,EAAGA,CAAD,IAAY;AACxBiE,UAAAA,gBAAgB,CAACjE,CAAD,EAAI,CAAJ,CAAhB;AACD,SANH;AAOE,QAAA,WAAW,EAAGA,CAAD,IAAY;AACvBuE,UAAAA,eAAe,CAACvE,CAAD,EAAI,CAAJ,CAAf;AACD,SATH;AAUE,QAAA,WAAW,EAAGA,CAAD,IAAY;AACvBuE,UAAAA,eAAe,CAACvE,CAAD,EAAI,CAAJ,CAAf;AACD,SAZH;AAaE,QAAA,SAAS,EAAEsE,cAbb;AAcE,QAAA,UAAU,EAAEA,cAdd;AAeE,QAAA,SAAS,EACPlG,eAAe,GAAG,uBAAH,GAA6B,uBAhBhD;AAkBE,QAAA,GAAG,EAAE4C,aAlBP;AAmBE,QAAA,KAAK,EAAE;AACL2F,UAAAA,OAAO,EAAE,KADJ;AAELC,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,MAAM,EAAE;AAHH;AAnBT;AAAA;AAAA;AAAA;AAAA,cATF,eAmCE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,KAAK,EAAE;AACLF,UAAAA,OAAO,EAAE,KADJ;AAELG,UAAAA,MAAM,EAAE,QAFH;AAGLF,UAAAA,MAAM,EAAE,MAHH;AAILhB,UAAAA,KAAK,EAAG,MAJH;AAKLC,UAAAA,MAAM,EAAE,KALH;AAMLY,UAAAA,QAAQ,EAAE,UANL;AAOLM,UAAAA,OAAO,EAAE,MAPJ;AAQLC,UAAAA,cAAc,EAAE,QARX;AASLC,UAAAA,UAAU,EAAE,QATP;AAULC,UAAAA,YAAY,EAAE,QAVT;AAWLC,UAAAA,SAAS,EAAE;AAXN,SAFT;AAAA,gCAgBE,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,EAAE,EAAE,CAFN;AAGE,UAAA,KAAK,EAAE;AACLR,YAAAA,OAAO,EAAE,KADJ;AAELd,YAAAA,MAAM,EAAE,KAFH;AAGLe,YAAAA,MAAM,EAAE,MAHH;AAILG,YAAAA,OAAO,EAAE,MAJJ;AAKLE,YAAAA,UAAU,EAAE;AALP,WAHT;AAAA,iCAWE,QAAC,QAAD;AACE,YAAA,OAAO,EAAEV,gBADX;AAEE,YAAA,SAAS,EACPnI,eAAe,GACX,mFADW,GAEX,oFALR;AAOE,YAAA,KAAK,EAAE;AACLwI,cAAAA,MAAM,EAAE,MADH;AAELQ,cAAAA,WAAW,EAAE,IAFR;AAGLC,cAAAA,QAAQ,EAAE;AAHL;AAPT;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,gBAhBF,eA0CE,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,EAAE,EAAE,CAFN;AAGE,UAAA,KAAK,EAAE;AACLV,YAAAA,OAAO,EAAE,KADJ;AAELd,YAAAA,MAAM,EAAE,KAFH;AAGLe,YAAAA,MAAM,EAAE,MAHH;AAILG,YAAAA,OAAO,EAAE,MAJJ;AAKLE,YAAAA,UAAU,EAAE;AALP,WAHT;AAAA,iCAWE,QAAC,SAAD;AACE,YAAA,OAAO,EAAET,QADX;AAEE,YAAA,SAAS,EACPpI,eAAe,GACX,mFADW,GAEX,oFALR;AAOE,YAAA,KAAK,EAAE;AACLwI,cAAAA,MAAM,EAAE,MADH;AAELU,cAAAA,UAAU,EAAE,IAFP;AAGLD,cAAAA,QAAQ,EAAE;AAHL;AAPT;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,gBA1CF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAyGGpI,QAAQ,GAAG,IAAH,gBACP;AAAA,iBACG,GADH,eAEE;AACE,QAAA,QAAQ,EAAEc,iBADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,aAHP;AAIE,QAAA,MAAM,EAAC,SAJT;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,EAAE,EAAC,MANL;AAOE,QAAA,KAAK,EAAE;AAAEwH,UAAAA,UAAU,EAAE;AAAd;AAPT;AAAA;AAAA;AAAA;AAAA,cAFF,eAWE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,YAAY,EAAEtK,uBAFhB;AAGE,QAAA,WAAW,EAAEC,sBAHf;AAIE,QAAA,KAAK,EAAE;AACLsK,UAAAA,MAAM,EAAE,CADH;AAELb,UAAAA,OAAO,EAAE,KAFJ;AAGLD,UAAAA,GAAG,EAAE9K,OAAO,GAAG,MAAH,GAAY,KAHnB;AAIL6K,UAAAA,QAAQ,EAAE,UAJL;AAKLG,UAAAA,MAAM,EAAE,QALH;AAMLa,UAAAA,QAAQ,EAAE,QANL;AAOLC,UAAAA,IAAI,EAAE,KAPD;AAQL7B,UAAAA,MAAM,EAAEjK,OAAO,GAAG,QAAH,GAAc,QARxB;AASL+L,UAAAA,aAAa,EAAE;AATV,SAJT;AAAA,+BAgBE,QAAC,QAAD,CAAU,GAAV;AAAc,UAAA,GAAG,EAAE3K,sBAAnB;AAA2C,UAAA,KAAK,EAAEG,cAAlD;AAAA,oBACGE,aAAa,CAACkD,GAAd,CAAkB,CAACqH,EAAD,EAAU9G,CAAV,kBACjB,QAAC,IAAD;AAAc,YAAA,IAAI,MAAlB;AAAmB,YAAA,EAAE,EAAE,EAAvB;AAAA,uBACGxD,WAAW,KAAK,CAAhB,IAAqBwD,CAAC,KAAK,CAA3B,gBACC;AAAO,cAAA,OAAO,EAAC,MAAf;AAAA,qCACE;AACE,gBAAA,OAAO,EAAE,MAAM;AACbtD,kBAAAA,YAAY,CAACsD,CAAD,EAAIrD,gBAAJ,EAAsB,EAAtB,CAAZ;AACD,iBAHH;AAIE,gBAAA,KAAK,EAAE;AACLoJ,kBAAAA,MAAM,EAAEvJ,WAAW,KAAKwD,CAAhB,GAAoB,SAApB,GAAgC,OADnC;AAEL8E,kBAAAA,KAAK,EAAG,GAAElI,iBAAkB,IAFvB;AAGLmI,kBAAAA,MAAM,EAAG,GAAEnI,iBAAkB,IAHxB;AAILmK,kBAAAA,eAAe,EAAEzJ,eAAe,GAC5B,yBAD4B,GAE5B,wBANC;AAOL0J,kBAAAA,YAAY,EAAE,KAPT;AAQLC,kBAAAA,SAAS,EAAE,QARN;AASLC,kBAAAA,SAAS,EAAE,QATN;AAULf,kBAAAA,UAAU,EAAE,QAVP;AAWLF,kBAAAA,OAAO,EAAE,MAXJ;AAYLC,kBAAAA,cAAc,EAAE,QAZX;AAaLiB,kBAAAA,SAAS,EAAE7J,eAAe,GACtBd,WAAW,KAAKwD,CAAhB,GACEhC,gBAAgB,KAAK,CAArB,GACG,aAAYD,gBAAiB,EADhC,GAEG,aAAYD,YAAa,EAH9B,GAIE,kBALoB,GAMtBtB,WAAW,KAAKwD,CAAhB,GACC,aAAYlC,YAAa,EAD1B,GAEA;AArBC,iBAJT;AAAA,uCA4BE,QAAC,SAAD;AACE,kBAAA,KAAK,EAAE;AACLyI,oBAAAA,QAAQ,EAAEzL,OAAO,GAAG,KAAH,GAAW,KADvB;AAEL4C,oBAAAA,KAAK,EAAEJ,eAAe,GAAG,SAAH,GAAe;AAFhC,mBADT;AAKE,kBAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA;AA5BF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADD,gBAwCC;AAAA,yBACG,GADH,eAEE;AACE,gBAAA,OAAO,EAAE,MAAM;AACbZ,kBAAAA,YAAY,CAACsD,CAAD,EAAIrD,gBAAJ,EAAsB,EAAtB,CAAZ;AACD,iBAHH;AAIE,gBAAA,KAAK,EAAE;AACLoJ,kBAAAA,MAAM,EAAEvJ,WAAW,KAAKwD,CAAhB,GAAoB,SAApB,GAAgC,OADnC;AAEL8E,kBAAAA,KAAK,EAAG,GAAElI,iBAAkB,IAFvB;AAGLmI,kBAAAA,MAAM,EAAG,GAAEnI,iBAAkB,IAHxB;AAILmK,kBAAAA,eAAe,EAAEzJ,eAAe,GAC5B,yBAD4B,GAE5B,wBANC;AAOL0J,kBAAAA,YAAY,EAAE,KAPT;AAQLC,kBAAAA,SAAS,EAAE,QARN;AASLC,kBAAAA,SAAS,EAAE,QATN;AAULf,kBAAAA,UAAU,EAAE,QAVP;AAWLF,kBAAAA,OAAO,EAAE,MAXJ;AAaLC,kBAAAA,cAAc,EAAE,QAbX;AAcLiB,kBAAAA,SAAS,EAAE7J,eAAe,GACtBd,WAAW,KAAKwD,CAAhB,GACEhC,gBAAgB,KAAK,CAArB,GACG,aAAYD,gBAAiB,EADhC,GAEG,aAAYD,YAAa,EAH9B,GAIE,kBALoB,GAMtBtB,WAAW,KAAKwD,CAAhB,GACC,aAAYlC,YAAa,EAD1B,GAEA;AAtBC,iBAJT;AAAA,2BA6BGkC,CAAC,KAAK,CAAN,gBACC,QAAC,aAAD;AACE,kBAAA,KAAK,EAAE;AACLuG,oBAAAA,QAAQ,EAAEzL,OAAO,GAAG,KAAH,GAAW,KADvB;AAEL4C,oBAAAA,KAAK,EAAEJ,eAAe,GAAG,SAAH,GAAe;AAFhC,mBADT;AAKE,kBAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,wBADD,GAQG,IArCN,EAsCG0C,CAAC,KAAK,CAAN,gBACC,QAAC,SAAD;AACE,kBAAA,KAAK,EAAE;AACLuG,oBAAAA,QAAQ,EAAEzL,OAAO,GAAG,KAAH,GAAW,KADvB;AAEL4C,oBAAAA,KAAK,EAAEJ,eAAe,GAAG,SAAH,GAAe;AAFhC,mBADT;AAKE,kBAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,wBADD,GAQG,IA9CN,EA+CG0C,CAAC,KAAK,CAAN,IAAWjD,SAAX,gBACC,QAAC,QAAD;AACE,kBAAA,KAAK,EAAE;AACLwJ,oBAAAA,QAAQ,EAAEzL,OAAO,GAAG,KAAH,GAAW,KADvB;AAEL4C,oBAAAA,KAAK,EAAEJ,eAAe,GAAG,SAAH,GAAe;AAFhC,mBADT;AAKE,kBAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,wBADD,GAQG,IAvDN,EAwDG0C,CAAC,KAAKjD,SAAN,GACC,CADD,GAEG,iBACF,QAAC,OAAD;AACE,kBAAA,KAAK,EAAE;AACLwJ,oBAAAA,QAAQ,EAAEzL,OAAO,GAAG,OAAH,GAAa,KADzB;AAEL4C,oBAAAA,KAAK,EAAEJ,eAAe,GAAG,SAAH,GAAe;AAFhC,mBADT;AAKE,kBAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,wBADE,GAQA,IAlEN,EAmEG0C,CAAC,KAAKjD,SAAN,GACC,CADD,GAEG,iBACF,QAAC,gBAAD;AACE,kBAAA,KAAK,EAAE;AACLwJ,oBAAAA,QAAQ,EAAEzL,OAAO,GAAG,OAAH,GAAa,KADzB;AAEL4C,oBAAAA,KAAK,EAAEJ,eAAe,GAAG,SAAH,GAAe;AAFhC,mBADT;AAKE,kBAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,wBADE,GAQA,IA7EN;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA,4BAzCJ,eA4HE,QAAC,IAAD;AACE,cAAA,IAAI,MADN;AAEE,cAAA,EAAE,EAAE,EAFN;AAGE,cAAA,KAAK,EAAE;AACLwI,gBAAAA,MAAM,EAAE,MADH;AAELoB,gBAAAA,SAAS,EAAE,QAFN;AAGLvB,gBAAAA,QAAQ,EAAE,UAHL;AAILK,gBAAAA,MAAM,EAAE;AAJH,eAHT;AAAA,qCAUE,QAAC,IAAD;AACE,gBAAA,IAAI,MADN;AAEE,gBAAA,EAAE,EAAE,EAFN;AAGE,gBAAA,KAAK,EAAE;AACLO,kBAAAA,QAAQ,EAAEzL,OAAO,GAAG,OAAH,GAAa,KADzB;AAELsM,kBAAAA,UAAU,EAAE,QAFP;AAGLC,kBAAAA,UAAU,EAAE,8BAHP;AAILZ,kBAAAA,UAAU,EAAEjK,WAAW,KAAKwD,CAAhB,GAAoB,SAApB,GAAgC,QAJvC;AAKLtC,kBAAAA,KAAK,EAAEJ,eAAe,GAAG,SAAH,GAAe;AALhC,iBAHT;AAAA,2BAWG,GAXH,EAYGb,eAAe,CAACuD,CAAD,CAZlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,oBA5HF;AAAA,aAAWA,CAAX;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AAhBF;AAAA;AAAA;AAAA;AAAA,cAXF,EAqLU,GArLV;AAAA,oBA1GJ,eAmSE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,mBACG7B,QAAQ,gBACP;AAAA,qBACG,GADH,EAEGlB,aAAa,CAACoC,MAAd,GAAuB,CAAvB,gBACC,QAAC,OAAD;AACE,YAAA,OAAO,EAAEvE,OAAO,GAAImC,aAAa,CAACoC,MAAd,GAAuB,CAAvB,GAA2B,CAA3B,GAA+B,CAAnC,GAAwC,CAD1D;AAEE,YAAA,OAAO,EAAE,CAFX;AAGE,YAAA,KAAK,EAAE;AACLiI,cAAAA,SAAS,EAAE,QADN;AAEL3B,cAAAA,QAAQ,EAAE,UAFL;AAGLe,cAAAA,MAAM,EAAE;AAHH,aAHT;AAAA,uBASGzJ,aAAa,CAACwC,GAAd,CAAkB,CAAC8H,KAAD,EAAaC,KAAb,KAA4B;AAC7C,kCACE;AAAA,uCACE,QAAC,aAAD;AACE,kBAAA,KAAK,EAAED,KADT;AAEE,kBAAA,qBAAqB,EAAE1K,qBAFzB;AAGE,kBAAA,KAAK,EAAE2K,KAHT;AAIE,kBAAA,YAAY,EAAEtJ,YAJhB;AAKE,kBAAA,OAAO,EAAEoC,OALX;AAME,kBAAA,IAAI,EAAED;AANR;AAAA;AAAA;AAAA;AAAA;AADF,iBAAUmH,KAAV;AAAA;AAAA;AAAA;AAAA,sBADF;AAYD,aAbA,CATH,EAsBM,GAtBN;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAyBG,IA3BN,EA2BY,GA3BZ;AAAA,wBADO,GA8BL,IA/BN,eAiCE;AAAA,oBACGvK,aAAa,CAACoC,MAAd,GAAuB,CAAvB,gBACC,QAAC,OAAD;AACE,YAAA,OAAO,EAAEvE,OAAO,GAAG,CAAH,GAAO,CADzB;AAEE,YAAA,OAAO,EAAE,CAFX;AAGE,YAAA,KAAK,EAAE;AACLwM,cAAAA,SAAS,EAAE,QADN;AAELZ,cAAAA,MAAM,EAAE,CAFH;AAGLf,cAAAA,QAAQ,EAAExH,QAAQ,GAAG,OAAH,GAAa,UAH1B;AAILyH,cAAAA,GAAG,EAAEzH,QAAQ,GAAG,QAAH,GAAc;AAJtB,aAHT;AAAA,uBAUGlB,aAAa,CAACwC,GAAd,CAAkB,CAAC8H,KAAD,EAAaC,KAAb,KAA4B;AAC7C,kCACE;AAAA,uCACE,QAAC,oBAAD;AACE,kBAAA,QAAQ,EAAErJ,QADZ;AAEE,kBAAA,cAAc,EAAEuE,cAFlB;AAGE,kBAAA,mBAAmB,EAAE3B,mBAHvB;AAIE,kBAAA,mBAAmB,EAAEE,mBAJvB;AAKE,kBAAA,aAAa,EAAE2B,aALjB;AAME,kBAAA,gBAAgB,EAAEC,gBANpB;AAOE,kBAAA,UAAU,EAAExB,UAPd;AAQE,kBAAA,SAAS,EAAEF,SARb;AASE,kBAAA,eAAe,EAAEiB,eATnB;AAUE,kBAAA,aAAa,EAAElC,aAVjB;AAWE,kBAAA,IAAI,EAAEG,IAXR;AAYE,kBAAA,KAAK,EAAEkH,KAZT;AAaE,kBAAA,oBAAoB,EAAErF,oBAbxB;AAcE,kBAAA,aAAa,EAAEN,aAdjB;AAeE,kBAAA,aAAa,EAAEL,aAfjB;AAgBE,kBAAA,gBAAgB,EAAEzE;AAhBpB;AAAA;AAAA;AAAA;AAAA;AADF,iBAAU0K,KAAV;AAAA;AAAA;AAAA;AAAA,sBADF;AAsBD,aAvBA,CAVH,EAiCM,GAjCN;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAoCG;AArCN,yBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnSF,eA+WE,QAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,KAAK,EAAE;AAAEzC,QAAAA,MAAM,EAAE,MAAV;AAAkBY,QAAAA,QAAQ,EAAE,OAA5B;AAAqCC,QAAAA,GAAG,EAAE;AAA1C,OAFT;AAAA,6BAIE,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,EAAE,EAAE,EAFN;AAGE,QAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE;AADJ,SAHT;AAAA,gCAOE,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,GAAG,EAAEpE,uBAFP;AAGE,UAAA,EAAE,EAAE,CAHN;AAIE,UAAA,KAAK,EAAE;AACLoE,YAAAA,OAAO,EAAE,KADJ;AAELkB,YAAAA,eAAe,EAAE,MAFZ;AAGLhC,YAAAA,MAAM,EAAE;AAHH;AAJT;AAAA;AAAA;AAAA;AAAA,gBAPF,eAkBE,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,GAAG,EAAEpD,oBAFP;AAGE,UAAA,EAAE,EAAE,CAHN;AAIE,UAAA,KAAK,EAAE;AACLkE,YAAAA,OAAO,EAAE,KADJ;AAELkB,YAAAA,eAAe,EAAE,QAFZ;AAGLhC,YAAAA,MAAM,EAAE;AAHH;AAJT;AAAA;AAAA;AAAA;AAAA,gBAlBF,eA6BE,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,GAAG,EAAErD,gBAFP;AAGE,UAAA,EAAE,EAAE,EAHN;AAIE,UAAA,KAAK,EAAE;AAAEqD,YAAAA,MAAM,EAAE;AAAV;AAJT;AAAA;AAAA;AAAA;AAAA,gBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YA/WF;AAAA,kBADF;AA2ZD;;GA3xBQnJ,W;UAgCcZ,W,EAkBmBA,W;;;KAlDjCY,W;AA6xBT,OAAO,MAAM6L,UAAU,gBAAGjN,KAAK,CAACkN,IAAN,CAAW9L,WAAX,CAAnB;MAAM6L,U","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { PreviewCanvas } from \"./PreviewCanvas\";\r\n\r\nfunction UploadMenux({\r\n  optionsShow,\r\n  optinstopshowingReducer,\r\n  typeTop,\r\n  closeoptionsslide,\r\n  animationop,\r\n  optionsCollectImageRef,\r\n  handleTouchStartOptions,\r\n  handleTouchMoveOptions,\r\n  modalanimation,\r\n  nextSlidePc,\r\n  optionsImages,\r\n  ActiveSlide,\r\n  optionsNameData,\r\n  clickOptions,\r\n  optionsClickType,\r\n  getSliderWidthNew,\r\n  cropTOPLEVELScrollRef,\r\n  refWithimageData,\r\n  CropSaved,\r\n  setCropSaved,\r\n}: any): JSX.Element {\r\n  const [selectedImage, setselectedImage] = useState<Array<any>>([]);\r\n  ///\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  const [cropimage, setcropimage] = useState<string | undefined>(\"\");\r\n  const [showCrop, setshowCrop] = useState<boolean>(false);\r\n\r\n  const [selectedImageUpload, setselectedImageUpload] = useState<any>(null);\r\n\r\n  const updateColor = useCallback(\r\n    (formData: any) => {\r\n      Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/upload`, formData)\r\n        .then((response) => {\r\n          if (response.data.message === \"ok\") {\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          alert(\"about color error\");\r\n        });\r\n    },\r\n    [REACT_APP_SUPERSTARZ_URL]\r\n  );\r\n\r\n  const imageHandleChange = (e: any) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const FileArray = Array.from(e.target.files).map((file: any) =>\r\n        URL.createObjectURL(file)\r\n      );\r\n\r\n      setselectedImage((prevImages: any) => prevImages.concat(FileArray));\r\n\r\n      setcropimage(FileArray[0]);\r\n\r\n      const formData = new FormData();\r\n\r\n      for (let i = 0; i < e.target.files.length; i++) {\r\n        formData.append(\"superImages\", e.target.files[i]);\r\n      }\r\n\r\n      setshowCrop(true);\r\n    }\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////SUPER CROP ///////////////////////////////////\r\n\r\n  const cropCanvasRef: any = useRef(null);\r\n\r\n  ////\r\n  ////\r\n  ////\r\n  const [cropArea, setcropArea] = useState<any>(null);\r\n\r\n  //\r\n  const [crop, setcrop] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [cropInitial, setcropInitial] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [cropOffset, setcropOffset] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [Drag, setDrag] = useState<boolean>(false);\r\n\r\n  const [SourceWidthForCropX, setSourceWidthForCropX] = useState(0);\r\n\r\n  const [SourceWidthForCropY, setSourceWidthForCropY] = useState(0);\r\n\r\n  const [cropwidth, setcropwidth] = useState(0);\r\n  const [cropheight, setcropheight] = useState(0);\r\n\r\n  const [canvasToimage, setcanvasToimage] = useState<boolean>(false);\r\n\r\n  const getpreviewFixedWidthRef = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropHeightRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getFixedCropWidthRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const [getCropHeight, setgetCropHeight] = useState(0);\r\n\r\n  const [getCropHeightRealImageRatio, setgetCropHeightRealImageRatio] =\r\n    useState(0);\r\n\r\n  const [getFixedCropWidth, setgetFixedCropWidth] = useState(0);\r\n\r\n  const [getpreviewFixedWidth, setgetpreviewFixedWidth] = useState(0);\r\n\r\n  const [CropImageHolder, setCropImageHolder] = useState<any>(null);\r\n\r\n  const [OriginalImageWidth, setOriginalImageWidth] = useState<number>(0);\r\n  const [OriginalImageHeight, setOriginalImageHeight] = useState<number>(0);\r\n\r\n  const [WideImageCheck, setWideImageCheck] = useState<boolean>(false);\r\n\r\n  const hdcanvasvalue = 2;\r\n\r\n  const [BoxCropActivated, setBoxCropActivated] = useState<boolean>(true);\r\n\r\n  const cropScrollRef: any = useRef(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\r\n  useEffect(() => {\r\n    if (\r\n      getpreviewFixedWidthRef.current &&\r\n      getpreviewFixedWidthRef.current.clientWidth\r\n    ) {\r\n      setgetpreviewFixedWidth(getpreviewFixedWidthRef.current.clientWidth);\r\n    }\r\n\r\n    if (getCropHeightRef.current && getCropHeightRef.current.clientWidth) {\r\n      setgetCropHeight(getCropHeightRef.current.clientHeight * hdcanvasvalue);\r\n      setgetCropHeightRealImageRatio(getCropHeightRef.current.clientHeight);\r\n    }\r\n\r\n    if (\r\n      getFixedCropWidthRef.current &&\r\n      getFixedCropWidthRef.current.clientWidth\r\n    ) {\r\n      setgetFixedCropWidth(getFixedCropWidthRef.current.clientWidth);\r\n    }\r\n  }, []);\r\n  ///\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const handleTouchStart = (e: any, type: any) => {\r\n    if (BoxCropActivated) {\r\n      if (type === 0) {\r\n        setcropInitial({\r\n          ...cropInitial,\r\n          x: e.clientX * 2.8 - cropOffset.x,\r\n          y: e.clientY * 3.3 - cropOffset.y,\r\n        });\r\n      } else {\r\n        setcropInitial({\r\n          ...cropInitial,\r\n          x: e.touches[0].clientX * 2.8 - cropOffset.x,\r\n          y: e.touches[0].clientY * 3.3 - cropOffset.y,\r\n        });\r\n      }\r\n      if (e.target) {\r\n        setDrag(true);\r\n      }\r\n    } else {\r\n      setBoxCropActivated(true);\r\n    }\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    setcropInitial({\r\n      ...cropInitial,\r\n      x: crop.x,\r\n      y: crop.y,\r\n    });\r\n    setDrag(false);\r\n  };\r\n\r\n  const handleTouchDrag = (e: any, type: any) => {\r\n    if (Drag) {\r\n      if (type === 0) {\r\n        setcrop({\r\n          ...crop,\r\n          x: e.clientX * 2.8 - cropInitial.x,\r\n          y: e.clientY * 3.3 - cropInitial.y,\r\n        });\r\n      } else {\r\n        setcrop({\r\n          ...crop,\r\n          x: e.touches[0].clientX * 2.8 - cropInitial.x,\r\n          y: e.touches[0].clientY * 3.3 - cropInitial.y,\r\n        });\r\n      }\r\n\r\n      setcropOffset({\r\n        ...cropOffset,\r\n        x: crop.x,\r\n        y: crop.y,\r\n      });\r\n    }\r\n  };\r\n\r\n  const draw = useCallback(\r\n    (ctx: any, dimensions: any, type: number, axis: number) => {\r\n      if (type === 1) {\r\n        ctx.drawImage(CropImageHolder, axis, 0, dimensions, getCropHeight);\r\n      } else if (type === 2) {\r\n        ctx.drawImage(CropImageHolder, 0, axis, getCropHeight, dimensions);\r\n      } else {\r\n        ctx.drawImage(\r\n          CropImageHolder,\r\n          0,\r\n          0,\r\n          OriginalImageWidth,\r\n          OriginalImageHeight\r\n        );\r\n      }\r\n    },\r\n    [OriginalImageWidth, OriginalImageHeight, CropImageHolder, getCropHeight]\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    const Newcropimage: any = new Image();\r\n    Newcropimage.src = cropimage;\r\n    Newcropimage.onload = function () {\r\n      setCropImageHolder(Newcropimage);\r\n\r\n      var data1 = Newcropimage.naturalWidth;\r\n      var data2 = Newcropimage.naturalHeight;\r\n      setOriginalImageWidth(data1);\r\n      setOriginalImageHeight(data2);\r\n\r\n      if (Newcropimage.naturalWidth > Newcropimage.naturalHeight) {\r\n        setWideImageCheck(true);\r\n      } else {\r\n        setWideImageCheck(false);\r\n      }\r\n\r\n      setcropwidth(data1);\r\n      setcropheight(data2);\r\n    };\r\n  }, [cropimage, BoxCropActivated, showCrop]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (CropImageHolder && cropCanvasRef.current) {\r\n      const ctx = cropCanvasRef.current.getContext(\"2d\");\r\n\r\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / getCropHeight;\r\n      var NewBoxRatioWidth_WIDEIMAGE =\r\n        OriginalImageWidth / RatiofromOriginalandfixedHeight;\r\n\r\n      setSourceWidthForCropX(NewBoxRatioWidth_WIDEIMAGE);\r\n\r\n      var RatiofromOriginalandfixedHeightx = OriginalImageWidth / getCropHeight;\r\n      var NewBoxRatioWidth_LONGIMAGE =\r\n        OriginalImageHeight / RatiofromOriginalandfixedHeightx;\r\n\r\n      setSourceWidthForCropY(NewBoxRatioWidth_LONGIMAGE);\r\n\r\n      var ratioh = (OriginalImageWidth * 3) / OriginalImageWidth;\r\n      var ratiow = (OriginalImageHeight * 3) / OriginalImageHeight;\r\n\r\n      if (BoxCropActivated) {\r\n        cropCanvasRef.current.width = getCropHeight;\r\n        cropCanvasRef.current.height = getCropHeight;\r\n      } else {\r\n        cropCanvasRef.current.width = OriginalImageWidth;\r\n        cropCanvasRef.current.height = OriginalImageHeight;\r\n      }\r\n\r\n      var centerpreview =\r\n        cropCanvasRef.current.width / 1.5 - NewBoxRatioWidth_LONGIMAGE / 1.5;\r\n\r\n      var xtraZoom = getCropHeight / NewBoxRatioWidth_WIDEIMAGE;\r\n\r\n      var centerCropCanvas =\r\n        cropCanvasRef.current.width / 2 - NewBoxRatioWidth_WIDEIMAGE / 2;\r\n\r\n      var RatiofromOriginalandfixedHeight =\r\n        OriginalImageHeight / getCropHeightRealImageRatio;\r\n      var newcropCSSWidth =\r\n        OriginalImageWidth / RatiofromOriginalandfixedHeight;\r\n\r\n      if (BoxCropActivated) {\r\n        var dragDistanceY = NewBoxRatioWidth_LONGIMAGE - getCropHeight;\r\n        var dragDistanceX = NewBoxRatioWidth_WIDEIMAGE - getCropHeight;\r\n\r\n        if (OriginalImageWidth > OriginalImageHeight) {\r\n          if (crop.x < -dragDistanceX) {\r\n            setcrop({ ...crop, x: -dragDistanceX });\r\n          } else if (crop.x > 0) {\r\n            setcrop({ ...crop, x: 0 });\r\n          } else {\r\n          }\r\n\r\n          requestAnimationFrame(() => {\r\n            draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, crop.x);\r\n          });\r\n        } else {\r\n          if (crop.y < -dragDistanceY) {\r\n            setcrop({ ...crop, y: -dragDistanceY });\r\n          } else if (crop.y > 0) {\r\n            setcrop({ ...crop, y: 0 });\r\n          } else {\r\n          }\r\n\r\n          requestAnimationFrame(() => {\r\n            draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, crop.y);\r\n          });\r\n        }\r\n\r\n        cropCanvasRef.current.style.width = `${\r\n          getCropHeight / hdcanvasvalue\r\n        }px`;\r\n        cropCanvasRef.current.style.height = `${\r\n          getCropHeight / hdcanvasvalue\r\n        }px`;\r\n      } else {\r\n        requestAnimationFrame(() => {\r\n          draw(ctx, 0, 3, 0);\r\n        });\r\n\r\n        cropCanvasRef.current.style.width = `${newcropCSSWidth}px`;\r\n        cropCanvasRef.current.style.height = `${getCropHeightRealImageRatio}px`;\r\n      }\r\n    }\r\n  }, [\r\n    CropImageHolder,\r\n    cropCanvasRef,\r\n    BoxCropActivated,\r\n    OriginalImageWidth,\r\n    OriginalImageHeight,\r\n    crop,\r\n  ]);\r\n  const gg = () => {};\r\n\r\n  const cropaspectchange = () => {\r\n    setBoxCropActivated((BoxCropActivated) => !BoxCropActivated);\r\n  };\r\n\r\n  const complete = () => {\r\n    setCropSaved(true);\r\n    setshowCrop(false);\r\n    setcanvasToimage(true);\r\n  };\r\n\r\n  //////////////////////////////////////////////////////////////////////SUPER CROP ///////////////////////////\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        style={{\r\n          position: showCrop ? \"relative\" : \"fixed\",\r\n          top: showCrop ? \"0px\" : \"-800vh\",\r\n          width: \"100%\",\r\n          height: \"70%\",\r\n        }}\r\n      >\r\n        <canvas\r\n          onMouseDown={(e: any) => {\r\n            handleTouchStart(e, 0);\r\n          }}\r\n          onTouchStart={(e: any) => {\r\n            handleTouchStart(e, 1);\r\n          }}\r\n          onMouseMove={(e: any) => {\r\n            handleTouchDrag(e, 0);\r\n          }}\r\n          onTouchMove={(e: any) => {\r\n            handleTouchDrag(e, 1);\r\n          }}\r\n          onMouseUp={handleTouchEnd}\r\n          onTouchEnd={handleTouchEnd}\r\n          className={\r\n            darkmodeReducer ? \"turdarkCrop topcanvas\" : \"turdarkCrop topcanvas\"\r\n          }\r\n          ref={cropCanvasRef}\r\n          style={{\r\n            padding: \"0px\",\r\n            margin: \"auto\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        />\r\n\r\n        <Grid\r\n          container\r\n          style={{\r\n            padding: \"0px\",\r\n            bottom: \"13.6vh\",\r\n            margin: \"auto\",\r\n            width: `100%`,\r\n            height: \"0px\",\r\n            position: \"absolute\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            alignContent: \"center\",\r\n            alignSelf: \"center\",\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            style={{\r\n              padding: \"0px\",\r\n              height: \"0px\",\r\n              margin: \"auto\",\r\n              display: \"grid\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <CropIcon\r\n              onClick={cropaspectchange}\r\n              className={\r\n                darkmodeReducer\r\n                  ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \"\r\n                  : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \"\r\n              }\r\n              style={{\r\n                margin: \"auto\",\r\n                marginRight: \"9%\",\r\n                fontSize: \"2.9vw\",\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            style={{\r\n              padding: \"0px\",\r\n              height: \"0px\",\r\n              margin: \"auto\",\r\n              display: \"grid\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <CheckIcon\r\n              onClick={complete}\r\n              className={\r\n                darkmodeReducer\r\n                  ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \"\r\n                  : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \"\r\n              }\r\n              style={{\r\n                margin: \"auto\",\r\n                marginLeft: \"9%\",\r\n                fontSize: \"2.9vw\",\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {showCrop ? null : (\r\n        <>\r\n          {\" \"}\r\n          <input\r\n            onChange={imageHandleChange}\r\n            type=\"file\"\r\n            name=\"superImages\"\r\n            accept=\"image/*\"\r\n            multiple\r\n            id=\"file\"\r\n            style={{ visibility: \"hidden\" }}\r\n          />\r\n          <Grid\r\n            container\r\n            onTouchStart={handleTouchStartOptions}\r\n            onTouchMove={handleTouchMoveOptions}\r\n            style={{\r\n              zIndex: 1,\r\n              padding: \"0px\",\r\n              top: matchPc ? \"-2vh\" : \"0vh\",\r\n              position: \"relative\",\r\n              margin: \"0 auto\",\r\n              overflow: \"hidden\",\r\n              left: \"0px\",\r\n              height: matchPc ? \"24.4vh\" : \"20.5vh\",\r\n              paddingBottom: \"1px\",\r\n            }}\r\n          >\r\n            <animated.div ref={optionsCollectImageRef} style={modalanimation}>\r\n              {optionsImages.map((im: any, i: any) => (\r\n                <Grid key={i} item xs={12}>\r\n                  {ActiveSlide === 1 && i === 1 ? (\r\n                    <label htmlFor=\"file\">\r\n                      <div\r\n                        onClick={() => {\r\n                          clickOptions(i, optionsClickType, \"\");\r\n                        }}\r\n                        style={{\r\n                          cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\r\n                          width: `${getSliderWidthNew}px`,\r\n                          height: `${getSliderWidthNew}px`,\r\n                          backgroundColor: darkmodeReducer\r\n                            ? \"rgba(010,010,010, 0.68)\"\r\n                            : \"rgba(220,220,220, 0.7)\",\r\n                          borderRadius: \"50%\",\r\n                          marginTop: \"2.15vh\",\r\n                          textAlign: \"center\",\r\n                          alignItems: \"center\",\r\n                          display: \"grid\",\r\n                          justifyContent: \"center\",\r\n                          boxShadow: darkmodeReducer\r\n                            ? ActiveSlide === i\r\n                              ? colortypeReducer === 0\r\n                                ? `0 0 5.5px ${colorReducerdark}`\r\n                                : `0 0 5.5px ${colorReducer}`\r\n                              : \"0 0 5.5px#aaaaaa\"\r\n                            : ActiveSlide === i\r\n                            ? `0 0 5.5px ${colorReducer}`\r\n                            : \"0 0 5.45px#222222\",\r\n                        }}\r\n                      >\r\n                        <PhotoIcon\r\n                          style={{\r\n                            fontSize: matchPc ? \"2vw\" : \"5vh\",\r\n                            color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                          }}\r\n                          className=\"zuperkinginfo\"\r\n                        />\r\n                      </div>\r\n                    </label>\r\n                  ) : (\r\n                    <>\r\n                      {\" \"}\r\n                      <div\r\n                        onClick={() => {\r\n                          clickOptions(i, optionsClickType, \"\");\r\n                        }}\r\n                        style={{\r\n                          cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\r\n                          width: `${getSliderWidthNew}px`,\r\n                          height: `${getSliderWidthNew}px`,\r\n                          backgroundColor: darkmodeReducer\r\n                            ? \"rgba(010,010,010, 0.68)\"\r\n                            : \"rgba(220,220,220, 0.7)\",\r\n                          borderRadius: \"50%\",\r\n                          marginTop: \"2.15vh\",\r\n                          textAlign: \"center\",\r\n                          alignItems: \"center\",\r\n                          display: \"grid\",\r\n\r\n                          justifyContent: \"center\",\r\n                          boxShadow: darkmodeReducer\r\n                            ? ActiveSlide === i\r\n                              ? colortypeReducer === 0\r\n                                ? `0 0 5.5px ${colorReducerdark}`\r\n                                : `0 0 5.5px ${colorReducer}`\r\n                              : \"0 0 5.5px#aaaaaa\"\r\n                            : ActiveSlide === i\r\n                            ? `0 0 5.5px ${colorReducer}`\r\n                            : \"0 0 5.45px#222222\",\r\n                        }}\r\n                      >\r\n                        {i === 0 ? (\r\n                          <MusicNoteIcon\r\n                            style={{\r\n                              fontSize: matchPc ? \"2vw\" : \"5vh\",\r\n                              color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                            }}\r\n                            className=\"zuperkinginfo\"\r\n                          />\r\n                        ) : null}\r\n                        {i === 1 ? (\r\n                          <PhotoIcon\r\n                            style={{\r\n                              fontSize: matchPc ? \"2vw\" : \"5vh\",\r\n                              color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                            }}\r\n                            className=\"zuperkinginfo\"\r\n                          />\r\n                        ) : null}\r\n                        {i === 2 && CropSaved ? (\r\n                          <CropIcon\r\n                            style={{\r\n                              fontSize: matchPc ? \"2vw\" : \"5vh\",\r\n                              color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                            }}\r\n                            className=\"zuperkinginfo\"\r\n                          />\r\n                        ) : null}\r\n                        {i === CropSaved ? (\r\n                          3\r\n                        ) : 2 ? (\r\n                          <GifIcon\r\n                            style={{\r\n                              fontSize: matchPc ? \"2.5vw\" : \"5vh\",\r\n                              color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                            }}\r\n                            className=\"zuperkinginfo\"\r\n                          />\r\n                        ) : null}\r\n                        {i === CropSaved ? (\r\n                          4\r\n                        ) : 3 ? (\r\n                          <ChevronRightIcon\r\n                            style={{\r\n                              fontSize: matchPc ? \"2.3vw\" : \"5vh\",\r\n                              color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                            }}\r\n                            className=\"zuperkinginfo\"\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                      margin: \"auto\",\r\n                      textAlign: \"center\",\r\n                      position: \"relative\",\r\n                      bottom: \"-0.5em\",\r\n                    }}\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      style={{\r\n                        fontSize: matchPc ? \"1.1vw\" : \"2vh\",\r\n                        fontWeight: \"bolder\",\r\n                        fontFamily: \"Arial, Helvetica, sans-serif\",\r\n                        visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\r\n                        color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      {optionsNameData[i]}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              ))}\r\n            </animated.div>\r\n          </Grid>{\" \"}\r\n        </>\r\n      )}\r\n\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          {showCrop ? (\r\n            <>\r\n              {\" \"}\r\n              {selectedImage.length > 0 ? (\r\n                <Masonry\r\n                  columns={matchPc ? (selectedImage.length > 2 ? 3 : 2) : 1}\r\n                  spacing={0}\r\n                  style={{\r\n                    overflowX: \"hidden\",\r\n                    position: \"relative\",\r\n                    zIndex: 2,\r\n                  }}\r\n                >\r\n                  {selectedImage.map((photo: any, index: any) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <PreviewCanvas\r\n                          image={photo}\r\n                          cropTOPLEVELScrollRef={cropTOPLEVELScrollRef}\r\n                          index={index}\r\n                          setcropimage={setcropimage}\r\n                          setcrop={setcrop}\r\n                          crop={crop}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}{\" \"}\r\n                </Masonry>\r\n              ) : null}{\" \"}\r\n            </>\r\n          ) : null}\r\n\r\n          <>\r\n            {selectedImage.length > 0 ? (\r\n              <Masonry\r\n                columns={matchPc ? 3 : 1}\r\n                spacing={0}\r\n                style={{\r\n                  overflowX: \"hidden\",\r\n                  zIndex: 2,\r\n                  position: showCrop ? \"fixed\" : \"relative\",\r\n                  top: showCrop ? \"-800vh\" : \"0px\",\r\n                }}\r\n              >\r\n                {selectedImage.map((photo: any, index: any) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <PreviewCanvasCropAll\r\n                        showCrop={showCrop}\r\n                        WideImageCheck={WideImageCheck}\r\n                        SourceWidthForCropX={SourceWidthForCropX}\r\n                        SourceWidthForCropY={SourceWidthForCropY}\r\n                        hdcanvasvalue={hdcanvasvalue}\r\n                        BoxCropActivated={BoxCropActivated}\r\n                        cropheight={cropheight}\r\n                        cropwidth={cropwidth}\r\n                        CropImageHolder={CropImageHolder}\r\n                        cropCanvasRef={cropCanvasRef}\r\n                        crop={crop}\r\n                        image={photo}\r\n                        getpreviewFixedWidth={getpreviewFixedWidth}\r\n                        getCropHeight={getCropHeight}\r\n                        canvasToimage={canvasToimage}\r\n                        refWithimageData={refWithimageData}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}{\" \"}\r\n              </Masonry>\r\n            ) : null}\r\n          </>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        style={{ height: \"100%\", position: \"fixed\", top: \"-800vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            padding: \"0px\",\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            ref={getpreviewFixedWidthRef}\r\n            xs={5}\r\n            style={{\r\n              padding: \"0px\",\r\n              backgroundColor: \"blue\",\r\n              height: \"40%\",\r\n            }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getFixedCropWidthRef}\r\n            xs={4}\r\n            style={{\r\n              padding: \"0px\",\r\n              backgroundColor: \"yellow\",\r\n              height: \"35%\",\r\n            }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropHeightRef}\r\n            xs={12}\r\n            style={{ height: \"70%\" }}\r\n          ></Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const UploadMenu = React.memo(UploadMenux);\r\n"]},"metadata":{},"sourceType":"module"}