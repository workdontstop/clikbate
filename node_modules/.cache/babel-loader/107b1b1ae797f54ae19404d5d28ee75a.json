{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\ImageTobeFiltered.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ImageTobeFilteredx({\n  filterImage,\n  index,\n  itemUploadRef,\n  setActivatefilterImage\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  const filterbaseimageRef = useRef(null);\n  const canvasRef = useRef(null);\n  const canvasRefdummy = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [itemUploadRef.current[index] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          id: itemUploadRef.current[index],\n          ref: filterbaseimageRef,\n          src: itemUploadRef.current ? itemUploadRef.current[index].src : null,\n          style: {\n            width: \"30%\",\n            height: \"auto\",\n            position: \"relative\",\n            margin: \"auto\",\n            marginRight: index === 0 ? \"20px\" : \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            padding: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRefdummy,\n          style: {\n            padding: \"0px\",\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n          style: animationop,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            className: typeTop ? darkmodeReducer ? `optionsTop-background-dark ` : `optionsTop-background-light ` : \"\",\n            onTouchStart: handleTouchStartOptions,\n            onTouchMove: handleTouchMoveOptions,\n            style: {\n              zIndex: 1,\n              padding: \"0px\",\n              position: \"relative\",\n              margin: \"0 auto\",\n              overflow: \"hidden\",\n              left: \"0px\",\n              height: \"auto\",\n              paddingBottom: \"1px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(animated.div, {\n              ref: optionsCollectImageRef,\n              style: modalanimation,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                style: {\n                  margin: \"auto\",\n                  textAlign: \"center\",\n                  position: \"relative\",\n                  bottom: typeTop ? \"-1.4em\" : \"0.2em\",\n                  left: typeTop ? \"-3px\" : matchPc ? \"-2px\" : \"0px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(CircleIcon, {\n                  onClick: () => {\n                    nextSlidePc();\n                  },\n                  className: \"buttonshake\",\n                  style: {\n                    fontSize: typeTop ? \"1.7vw\" : \"1.3vw\",\n                    cursor: \"pointer\",\n                    color: darkmodeReducer ? typeTop ? \"rgba(200, 200, 200, 0.5)\" : \"rgba(200, 200, 200, 0.1)\" : typeTop ? \"rgba(005, 005, 005, 0.4)\" : \"rgba(005, 005, 005, 0.2)\",\n                    display: matchPc ? \"block\" : \"none\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), optionsImages.map((im, i) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [typeTop ? /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  style: {\n                    margin: \"auto\",\n                    textAlign: \"center\",\n                    position: \"relative\",\n                    top: matchPc ? \"0.9em\" : \"0.54em\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    style: {\n                      fontSize: matchPc ? \"1.1vw\" : matchTablet ? \"2.08vh\" : \"2vh\",\n                      fontWeight: \"bolder\",\n                      fontFamily: \"Arial, Helvetica, sans-serif\",\n                      visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\n                      filter: darkmodeReducer ? \"drop-shadow(1.2px 0.1px 1.92px rgba(255, 255, 255, 0.4))\" : \"drop-shadow(1.2px 0.1px 1.92px rgba(41, 53, 70, 8.35))\",\n                      color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\"\n                    },\n                    children: [\" \", optionsNameData[i]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 25\n                }, this) : null, i === circleIdentify || i === circleIdentify2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: i === circleIdentify ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      onClick: () => {\n                        clickOptions(i, optionsClickType, \"\");\n                      },\n                      style: {\n                        cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\n                        width: `${getSliderWidthNew}px`,\n                        height: `${getSliderWidthNew}px`,\n                        backgroundColor: darkmodeReducer ? \"rgba(010,010,010, 0.68)\" : \"rgba(220,220,220, 0.7)\",\n                        borderRadius: \"50%\",\n                        marginTop: \"2.15vh\",\n                        textAlign: \"center\",\n                        alignItems: \"center\",\n                        display: \"grid\",\n                        justifyContent: \"center\",\n                        boxShadow: darkmodeReducer ? ActiveSlide === i ? colortypeReducer === 0 ? `0 0 5.5px ${colorReducerdark}` : `0 0 5.5px ${colorReducer}` : typeTop ? \"0 0 5.5px#aaaaaa\" : \"\" : ActiveSlide === i ? `0 0 5.5px ${colorReducer}` : typeTop ? \"0 0 5.45px#222222\" : ``\n                      },\n                      children: [\" \", /*#__PURE__*/_jsxDEV(SettingsIcon, {\n                        style: {\n                          fontSize: matchPc ? \"2vw\" : \"5vh\",\n                          color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                        },\n                        className: \"zuperkinginfo\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 186,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      onClick: () => {\n                        clickOptions(i, optionsClickType, \"upload\");\n                      },\n                      style: {\n                        cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\n                        width: `${getSliderWidthNew}px`,\n                        height: `${getSliderWidthNew}px`,\n                        backgroundColor: darkmodeReducer ? \"rgba(010,010,010, 0.68)\" : \"rgba(220,220,220, 0.7)\",\n                        borderRadius: \"50%\",\n                        marginTop: \"2.15vh\",\n                        textAlign: \"center\",\n                        alignItems: \"center\",\n                        display: \"grid\",\n                        justifyContent: \"center\",\n                        boxShadow: darkmodeReducer ? ActiveSlide === i ? colortypeReducer === 0 ? `0 0 5.5px ${colorReducerdark}` : `0 0 5.5px ${colorReducer}` : typeTop ? \"0 0 5.5px#aaaaaa\" : \"\" : ActiveSlide === i ? `0 0 5.5px ${colorReducer}` : typeTop ? \"0 0 5.45px#222222\" : ``\n                      },\n                      children: [\" \", /*#__PURE__*/_jsxDEV(CircleIcon, {\n                        style: {\n                          fontSize: matchPc ? \"1.65vw\" : \"4.5vh\",\n                          color: darkmodeReducer ? ActiveSlide === i ? \"red\" : \"#eeeeee\" : ActiveSlide === i ? \"red\" : \"#222222\"\n                        },\n                        className: \"zuperkinginfo\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: ` ${optionsNameData[i]}  option`,\n                  onClick: () => {\n                    clickOptions(i, optionsClickType, \" \");\n                  },\n                  style: {\n                    cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\n                    width: `${getSliderWidthNew}px`,\n                    height: `${getSliderWidthNew}px`,\n                    borderRadius: \"50%\",\n                    padding: \"0px\",\n                    objectFit: \"cover\",\n                    marginLeft: \"2px\",\n                    marginTop: \"14px\",\n                    boxShadow: darkmodeReducer ? ActiveSlide === i ? colortypeReducer === 0 ? `0 0 6.8px ${colorReducerdark}` : `0 0 6.8px ${colorReducer}` : typeTop ? \"0 0 12.5px#aaaaaa\" : \"\" : ActiveSlide === i ? `0 0 5.7px ${colorReducer}` : typeTop ? `0 0 14.45px#222222` : \"\",\n                    marginBottom: \"2.2px\"\n                  },\n                  src: `./images/options/${im}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 25\n                }, this), typeTop ? null : /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  style: {\n                    margin: \"auto\",\n                    textAlign: \"center\",\n                    position: \"relative\",\n                    bottom: i === circleIdentify || i === circleIdentify2 ? matchPc ? \"-0.5em\" : \"-0.3em\" : \"0.2em\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    style: {\n                      fontSize: matchPc ? \"1.1vw\" : matchTablet ? \"2vh\" : \"1.8vh\",\n                      fontWeight: \"bolder\",\n                      fontFamily: \"Arial, Helvetica, sans-serif\",\n                      visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\n                      opacity: typeTop ? 0 : optinstopshowingReducer ? 0 : 1,\n                      color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\"\n                    },\n                    children: [\" \", optionsNameData[i]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 25\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : null, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ImageTobeFilteredx, \"ZWhJm1DdZVPEYmfxvg5uQgXY6wQ=\");\n\n_c = ImageTobeFilteredx;\nexport const ImageTobeFiltered = /*#__PURE__*/React.memo(ImageTobeFilteredx);\n_c2 = ImageTobeFiltered;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImageTobeFilteredx\");\n$RefreshReg$(_c2, \"ImageTobeFiltered\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/ImageTobeFiltered.tsx"],"names":["React","useRef","Grid","ImageTobeFilteredx","filterImage","index","itemUploadRef","setActivatefilterImage","filterbaseimageRef","canvasRef","canvasRefdummy","current","src","width","height","position","margin","marginRight","padding","display","animationop","typeTop","darkmodeReducer","handleTouchStartOptions","handleTouchMoveOptions","zIndex","overflow","left","paddingBottom","optionsCollectImageRef","modalanimation","textAlign","bottom","matchPc","nextSlidePc","fontSize","cursor","color","optionsImages","map","im","i","top","matchTablet","fontWeight","fontFamily","visibility","ActiveSlide","filter","optionsNameData","circleIdentify","circleIdentify2","clickOptions","optionsClickType","getSliderWidthNew","backgroundColor","borderRadius","marginTop","alignItems","justifyContent","boxShadow","colortypeReducer","colorReducerdark","colorReducer","objectFit","marginLeft","marginBottom","opacity","optinstopshowingReducer","ImageTobeFiltered","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nfunction ImageTobeFilteredx({\r\n  filterImage,\r\n  index,\r\n  itemUploadRef,\r\n  setActivatefilterImage,\r\n}: any): JSX.Element {\r\n  ///\r\n  ///\r\n  ///\r\n  const filterbaseimageRef: any = useRef(null);\r\n\r\n  const canvasRef: any = useRef(null);\r\n\r\n  const canvasRefdummy: any = useRef(null);\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        {itemUploadRef.current[index] ? (\r\n          <>\r\n            {\" \"}\r\n            <img\r\n              id={itemUploadRef.current[index]}\r\n              ref={filterbaseimageRef}\r\n              src={\r\n                itemUploadRef.current ? itemUploadRef.current[index].src : null\r\n              }\r\n              style={{\r\n                width: \"30%\",\r\n                height: \"auto\",\r\n                position: \"relative\",\r\n                margin: \"auto\",\r\n                marginRight: index === 0 ? \"20px\" : \"0px\",\r\n              }}\r\n            />\r\n            <canvas\r\n              ref={canvasRef}\r\n              style={{\r\n                padding: \"0px\",\r\n              }}\r\n            />\r\n            <canvas\r\n              ref={canvasRefdummy}\r\n              style={{\r\n                padding: \"0px\",\r\n                display: \"none\",\r\n              }}\r\n            />\r\n            <animated.div style={animationop}>\r\n              <Grid\r\n                container\r\n                className={\r\n                  typeTop\r\n                    ? darkmodeReducer\r\n                      ? `optionsTop-background-dark `\r\n                      : `optionsTop-background-light `\r\n                    : \"\"\r\n                }\r\n                onTouchStart={handleTouchStartOptions}\r\n                onTouchMove={handleTouchMoveOptions}\r\n                style={{\r\n                  zIndex: 1,\r\n                  padding: \"0px\",\r\n\r\n                  position: \"relative\",\r\n                  margin: \"0 auto\",\r\n                  overflow: \"hidden\",\r\n                  left: \"0px\",\r\n                  height: \"auto\",\r\n                  paddingBottom: \"1px\",\r\n                }}\r\n              >\r\n                <animated.div\r\n                  ref={optionsCollectImageRef}\r\n                  style={modalanimation}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    style={{\r\n                      margin: \"auto\",\r\n                      textAlign: \"center\",\r\n                      position: \"relative\",\r\n                      bottom: typeTop ? \"-1.4em\" : \"0.2em\",\r\n                      left: typeTop ? \"-3px\" : matchPc ? \"-2px\" : \"0px\",\r\n                    }}\r\n                  >\r\n                    <CircleIcon\r\n                      onClick={() => {\r\n                        nextSlidePc();\r\n                      }}\r\n                      className=\"buttonshake\"\r\n                      style={{\r\n                        fontSize: typeTop ? \"1.7vw\" : \"1.3vw\",\r\n                        cursor: \"pointer\",\r\n                        color: darkmodeReducer\r\n                          ? typeTop\r\n                            ? \"rgba(200, 200, 200, 0.5)\"\r\n                            : \"rgba(200, 200, 200, 0.1)\"\r\n                          : typeTop\r\n                          ? \"rgba(005, 005, 005, 0.4)\"\r\n                          : \"rgba(005, 005, 005, 0.2)\",\r\n                        display: matchPc ? \"block\" : \"none\",\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  {optionsImages.map((im: any, i: any) => (\r\n                    <Grid key={i} item xs={12}>\r\n                      {typeTop ? (\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          style={{\r\n                            margin: \"auto\",\r\n                            textAlign: \"center\",\r\n                            position: \"relative\",\r\n                            top: matchPc ? \"0.9em\" : \"0.54em\",\r\n                          }}\r\n                        >\r\n                          <Grid\r\n                            item\r\n                            xs={12}\r\n                            style={{\r\n                              fontSize: matchPc\r\n                                ? \"1.1vw\"\r\n                                : matchTablet\r\n                                ? \"2.08vh\"\r\n                                : \"2vh\",\r\n                              fontWeight: \"bolder\",\r\n                              fontFamily: \"Arial, Helvetica, sans-serif\",\r\n                              visibility:\r\n                                ActiveSlide === i ? \"visible\" : \"hidden\",\r\n                              filter: darkmodeReducer\r\n                                ? \"drop-shadow(1.2px 0.1px 1.92px rgba(255, 255, 255, 0.4))\"\r\n                                : \"drop-shadow(1.2px 0.1px 1.92px rgba(41, 53, 70, 8.35))\",\r\n                              color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\",\r\n                            }}\r\n                          >\r\n                            {\" \"}\r\n                            {optionsNameData[i]}\r\n                          </Grid>\r\n                        </Grid>\r\n                      ) : null}\r\n                      {i === circleIdentify || i === circleIdentify2 ? (\r\n                        <>\r\n                          {i === circleIdentify ? (\r\n                            <>\r\n                              {\" \"}\r\n                              <div\r\n                                onClick={() => {\r\n                                  clickOptions(i, optionsClickType, \"\");\r\n                                }}\r\n                                style={{\r\n                                  cursor:\r\n                                    ActiveSlide === i ? \"pointer\" : \"alias\",\r\n                                  width: `${getSliderWidthNew}px`,\r\n                                  height: `${getSliderWidthNew}px`,\r\n                                  backgroundColor: darkmodeReducer\r\n                                    ? \"rgba(010,010,010, 0.68)\"\r\n                                    : \"rgba(220,220,220, 0.7)\",\r\n                                  borderRadius: \"50%\",\r\n                                  marginTop: \"2.15vh\",\r\n                                  textAlign: \"center\",\r\n                                  alignItems: \"center\",\r\n                                  display: \"grid\",\r\n\r\n                                  justifyContent: \"center\",\r\n                                  boxShadow: darkmodeReducer\r\n                                    ? ActiveSlide === i\r\n                                      ? colortypeReducer === 0\r\n                                        ? `0 0 5.5px ${colorReducerdark}`\r\n                                        : `0 0 5.5px ${colorReducer}`\r\n                                      : typeTop\r\n                                      ? \"0 0 5.5px#aaaaaa\"\r\n                                      : \"\"\r\n                                    : ActiveSlide === i\r\n                                    ? `0 0 5.5px ${colorReducer}`\r\n                                    : typeTop\r\n                                    ? \"0 0 5.45px#222222\"\r\n                                    : ``,\r\n                                }}\r\n                              >\r\n                                {\" \"}\r\n                                <SettingsIcon\r\n                                  style={{\r\n                                    fontSize: matchPc ? \"2vw\" : \"5vh\",\r\n                                    color: darkmodeReducer\r\n                                      ? \"#eeeeee\"\r\n                                      : \"#222222\",\r\n                                  }}\r\n                                  className=\"zuperkinginfo\"\r\n                                />\r\n                              </div>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              {\" \"}\r\n                              <div\r\n                                onClick={() => {\r\n                                  clickOptions(i, optionsClickType, \"upload\");\r\n                                }}\r\n                                style={{\r\n                                  cursor:\r\n                                    ActiveSlide === i ? \"pointer\" : \"alias\",\r\n                                  width: `${getSliderWidthNew}px`,\r\n                                  height: `${getSliderWidthNew}px`,\r\n                                  backgroundColor: darkmodeReducer\r\n                                    ? \"rgba(010,010,010, 0.68)\"\r\n                                    : \"rgba(220,220,220, 0.7)\",\r\n                                  borderRadius: \"50%\",\r\n                                  marginTop: \"2.15vh\",\r\n                                  textAlign: \"center\",\r\n                                  alignItems: \"center\",\r\n                                  display: \"grid\",\r\n                                  justifyContent: \"center\",\r\n                                  boxShadow: darkmodeReducer\r\n                                    ? ActiveSlide === i\r\n                                      ? colortypeReducer === 0\r\n                                        ? `0 0 5.5px ${colorReducerdark}`\r\n                                        : `0 0 5.5px ${colorReducer}`\r\n                                      : typeTop\r\n                                      ? \"0 0 5.5px#aaaaaa\"\r\n                                      : \"\"\r\n                                    : ActiveSlide === i\r\n                                    ? `0 0 5.5px ${colorReducer}`\r\n                                    : typeTop\r\n                                    ? \"0 0 5.45px#222222\"\r\n                                    : ``,\r\n                                }}\r\n                              >\r\n                                {\" \"}\r\n                                <CircleIcon\r\n                                  style={{\r\n                                    fontSize: matchPc ? \"1.65vw\" : \"4.5vh\",\r\n                                    color: darkmodeReducer\r\n                                      ? ActiveSlide === i\r\n                                        ? \"red\"\r\n                                        : \"#eeeeee\"\r\n                                      : ActiveSlide === i\r\n                                      ? \"red\"\r\n                                      : \"#222222\",\r\n                                  }}\r\n                                  className=\"zuperkinginfo\"\r\n                                />\r\n                              </div>\r\n                            </>\r\n                          )}\r\n                        </>\r\n                      ) : (\r\n                        <img\r\n                          alt={` ${optionsNameData[i]}  option`}\r\n                          onClick={() => {\r\n                            clickOptions(i, optionsClickType, \" \");\r\n                          }}\r\n                          style={{\r\n                            cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\r\n                            width: `${getSliderWidthNew}px`,\r\n                            height: `${getSliderWidthNew}px`,\r\n                            borderRadius: \"50%\",\r\n                            padding: \"0px\",\r\n                            objectFit: \"cover\",\r\n                            marginLeft: \"2px\",\r\n                            marginTop: \"14px\",\r\n\r\n                            boxShadow: darkmodeReducer\r\n                              ? ActiveSlide === i\r\n                                ? colortypeReducer === 0\r\n                                  ? `0 0 6.8px ${colorReducerdark}`\r\n                                  : `0 0 6.8px ${colorReducer}`\r\n                                : typeTop\r\n                                ? \"0 0 12.5px#aaaaaa\"\r\n                                : \"\"\r\n                              : ActiveSlide === i\r\n                              ? `0 0 5.7px ${colorReducer}`\r\n                              : typeTop\r\n                              ? `0 0 14.45px#222222`\r\n                              : \"\",\r\n\r\n                            marginBottom: \"2.2px\",\r\n                          }}\r\n                          src={`./images/options/${im}`}\r\n                        />\r\n                      )}\r\n\r\n                      {typeTop ? null : (\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          style={{\r\n                            margin: \"auto\",\r\n                            textAlign: \"center\",\r\n                            position: \"relative\",\r\n                            bottom:\r\n                              i === circleIdentify || i === circleIdentify2\r\n                                ? matchPc\r\n                                  ? \"-0.5em\"\r\n                                  : \"-0.3em\"\r\n                                : \"0.2em\",\r\n                          }}\r\n                        >\r\n                          <Grid\r\n                            item\r\n                            xs={12}\r\n                            style={{\r\n                              fontSize: matchPc\r\n                                ? \"1.1vw\"\r\n                                : matchTablet\r\n                                ? \"2vh\"\r\n                                : \"1.8vh\",\r\n                              fontWeight: \"bolder\",\r\n                              fontFamily: \"Arial, Helvetica, sans-serif\",\r\n                              visibility:\r\n                                ActiveSlide === i ? \"visible\" : \"hidden\",\r\n                              opacity: typeTop\r\n                                ? 0\r\n                                : optinstopshowingReducer\r\n                                ? 0\r\n                                : 1,\r\n                              color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\",\r\n                            }}\r\n                          >\r\n                            {\" \"}\r\n                            {optionsNameData[i]}\r\n                          </Grid>\r\n                        </Grid>\r\n                      )}\r\n                    </Grid>\r\n                  ))}\r\n                </animated.div>\r\n              </Grid>\r\n            </animated.div>\r\n          </>\r\n        ) : null}{\" \"}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const ImageTobeFiltered = React.memo(ImageTobeFilteredx);\r\n"]},"metadata":{},"sourceType":"module"}