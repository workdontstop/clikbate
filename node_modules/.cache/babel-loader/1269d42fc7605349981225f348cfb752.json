{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\Clikbate\\\\src\\\\profile\\\\Slider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback, useEffect, useLayoutEffect } from \"react\";\nimport { Arrow } from \"./Arrow\";\nimport { Dots } from \"./Dots\";\nimport { SliderNumber } from \"./SliderNumber\";\nimport { Grid } from \"@material-ui/core\";\nimport { animated, useTransition } from \"react-spring\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { matchMobile, matchPc } from \"../DetectDevice\";\nimport ZoomOutIcon from \"@mui/icons-material/ZoomOut\";\nimport { Loader } from \"./Loader\";\nimport { UpdateInteract } from \".././GlobalActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Sliderx({\n  slides,\n  slidesThumb,\n  pey,\n  addPostItemsRef,\n  itemheight,\n  onPostsItemClicked,\n  onPostsItemload,\n  post,\n  itemFinalPostHeight,\n  itemOriginalPostHeight,\n  itemcroptype,\n  itemCLICKED,\n  setActiveAutoPlay,\n  AUTOSlideLongImages,\n  clickslider,\n  stopSlider,\n  SliderAutoPlay,\n  showSliderLoader,\n  setshowSliderLoader,\n  autoPlayTimer,\n  sliderIndex,\n  setSliderIndex,\n  sliderIndexSlow,\n  setSliderIndexSlow,\n  length,\n  startSlider,\n  ActiveAutoPlay,\n  type,\n  setminiProfile,\n  miniProfile,\n  setzoomClickedIndex,\n  setsliderIndexMini,\n  postDatainnerInteraction1,\n  postDatainnerInteraction2,\n  postItemsRef,\n  ActiveCanvas,\n  checkifClicked,\n  postDivRef,\n  paperPostScrollRef\n}) {\n  _s();\n\n  const [sliderDuration] = useState(1500);\n  const aRef = useRef(null);\n  const dispatch = useDispatch();\n  var allow4dev = \"\";\n  const {\n    REACT_APP_APPX_STATE\n  } = process.env;\n\n  if (REACT_APP_APPX_STATE === \"dev\") {\n    allow4dev = \"http://localhost:1000\";\n  } else {\n    allow4dev = \"\";\n  } /// const getWidth = () => window.innerWidth;\n  ///var newGetWidth = getWidth() * slides.length;\n\n\n  const InteractTimerxx = useRef(null);\n  const waitChangeIndexTimer = useRef(null);\n  const handleTouchMoveTimer = useRef(null);\n  const callAutoPlayAgainTimer = useRef(null);\n  const videoPlayerReff = useRef(null);\n  const [showSpin, setshowSpin] = useState(false);\n  const SlideimageRef = useRef(null);\n  const SlideimageRefthumb = useRef(null);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [touchPosition, setTouchPosition] = useState(null);\n  const [ZoomOutBigger, setZoomOutBigger] = useState(false);\n  const [miniH, setminiH] = useState(50);\n  const [InteractedDark, setInteractedDark] = useState(false); ///\n  ///\n  ///\n  ///\n\n  const {\n    ActiveId\n  } = useSelector(state => ({ ...state.ActiveAutoPlayReducer\n  }));\n  const ActiveIdReducer = ActiveId; ///\n\n  const [interactContent, setinteractContent] = useState(\"\");\n  const [interacttypeAll, setinteracttypeAll] = useState(0);\n  const [interact, setinteract] = useState(false); ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    screenHeight,\n    darkmode,\n    snapStart,\n    activateLoader,\n    historyscroll\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const screenHeightReducer = screenHeight;\n  const darkmodeReducer = darkmode;\n  const snapStartReducer = snapStart;\n  const activateLoaderReducer = activateLoader;\n  const historyscrollReducer = historyscroll; ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype;\n  var colorx = colortypeReducer === 0 ? darkmodeReducer ? colorReducerdark : colorReducer : colorReducer;\n  useEffect(() => {\n    if (ActiveAutoPlay[pey]) {\n      setTimeout(function () {\n        stopSlider(0);\n      }, 1500);\n    }\n  }, [ActiveAutoPlay[pey]]);\n  var autoSlideDisplay = \"none\";\n  var sliderLoader = \"\";\n\n  if (showSliderLoader) {\n    autoSlideDisplay = \"none\";\n    sliderLoader = \"\";\n  } else {\n    autoSlideDisplay = \"block\";\n    sliderLoader = \"superloaderAutoSlider\";\n  } ///\n  ///\n  ///\n  /// SPRING TRANSITION WITH INDEX\n\n\n  const transitions = useTransition(sliderIndex, {\n    key: sliderIndex,\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    config: {\n      duration: sliderDuration - 50\n    }\n  }); ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\n\n  const sliderFirstImageOnLoad = item => {\n    if (item === 0) {\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\n        setImageHeight(SlideimageRef.current.clientHeight);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\n\n\n  const sliderFirstImageOnLoadthumb = item => {\n    if (item === 0 && imageHeight === 0) {\n      if (SlideimageRefthumb.current && SlideimageRefthumb.current.clientHeight) {\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\n      }\n    }\n  };\n\n  const tiim = useRef(null);\n  const TouchTimer = useRef(null);\n  const TouchTimer22 = useRef(null);\n  const [Touched, setTouched] = useState(0);\n  const [cropInitialIn, setcropInitialIn] = useState([{\n    x: post.interact1ax,\n    y: post.interact1ay\n  }, {\n    x: post.interact2ax,\n    y: post.interact2ay\n  }, {\n    x: post.interact3ax,\n    y: post.interact3ay\n  }]);\n  const [cropInitialIn2, setcropInitialIn2] = useState([{\n    x: post.interact1bx,\n    y: post.interact1by\n  }, {\n    x: post.interact2bx,\n    y: post.interact2by\n  }, {\n    x: post.interact3bx,\n    y: post.interact3by\n  }]);\n  const [showIntImage, setshowIntImage] = useState(false);\n  const [HasInteractivity, setHasInteractivity] = useState(false);\n  const [startInteractivity, setstartInteractivity] = useState(true);\n\n  const containsURL = str => {\n    // Regular expression pattern to match URLs (simplified, not covering all cases)\n    const urlPattern = /(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*/i; // Test if the string contains a URL using the regular expression\n\n    return urlPattern.test(str);\n  };\n\n  useEffect(() => {\n    //console.log(postDatainnerInteraction1[0])\n    postDatainnerInteraction1.map((str, index) => {\n      if (containsURL(str)) {\n        setHasInteractivity(true); ///alert('kk')\n      } else {\n        setHasInteractivity(false);\n        postDatainnerInteraction2.map((str, index) => {\n          if (containsURL(str)) {\n            setHasInteractivity(true);\n          } else {\n            setHasInteractivity(false);\n          }\n        });\n      }\n    });\n  }, [postDatainnerInteraction1, postDatainnerInteraction2, itemCLICKED]);\n  const [data, setdata] = useState(null);\n  const [canvasInteractWidth, setcanvasInteractWidth] = useState(0);\n  const [canvasInteractheight, setcanvasInteractheight] = useState(0);\n  const [imageWidthcss, setimageWidthcss] = useState(0);\n  const [imageHeightcss, setimageHeightcss] = useState(0);\n  const handleTouchStartIn = useCallback((event, type) => {\n    if (data) {\n      drawInteraction(0, event, 1);\n    }\n  }, [data]);\n  const pic = useRef(null);\n  const picanonymous = useRef(null);\n  const canvasRefIn = useRef(null);\n  const DummyCanvas4ToDataURL = useRef(null);\n  const ScaleCoOrdinates = useCallback((event, type) => {\n    if (canvasRefIn.current) {\n      const rect = canvasRefIn.current.getBoundingClientRect();\n      const scaleX = canvasRefIn.current.width / rect.width;\n      const scaleY = canvasRefIn.current.height / rect.height;\n      let x, y;\n\n      if (matchMobile) {\n        // Handle touch events\n        if (event && event.touches && event.touches.length > 0) {\n          x = (event.touches[0].clientX - rect.left) * scaleX;\n          y = (event.touches[0].clientY - rect.top) * scaleY; // Now you can use x and y in your code\n        }\n      } else {\n        // Handle mouse events\n        x = (event.clientX - rect.left) * scaleX;\n        y = (event.clientY - rect.top) * scaleY;\n      }\n\n      return {\n        x,\n        y\n      };\n    } else {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n  }, [matchMobile]);\n  const [interactHeightResolution, setinteractHeightResolution] = useState(window.innerHeight * 1.2);\n  useEffect(() => {\n    setinteractHeightResolution(window.innerHeight * 1.6);\n  }, [matchPc]);\n  useEffect(() => {\n    if (matchMobile) {\n      setinteractHeightResolution(window.innerHeight * 2);\n    }\n  }, [matchMobile]);\n  const callInteract = useCallback(() => {\n    if (!canvasRefIn.current) return;\n    const context = canvasRefIn.current.getContext(\"2d\");\n    context.clearRect(0, 0, canvasRefIn.current.width, canvasRefIn.current.height);\n    const previewFileReadimage = new Image();\n    previewFileReadimage.crossOrigin = \"anonymous\";\n    previewFileReadimage.src = pic.current.src;\n\n    previewFileReadimage.onload = () => {\n      const ratio = previewFileReadimage.naturalHeight / previewFileReadimage.naturalWidth;\n      const width = interactHeightResolution / ratio;\n      const ratiox = previewFileReadimage.naturalWidth / previewFileReadimage.naturalHeight;\n      const hei = window.innerHeight / ratiox;\n      setcanvasInteractWidth(width);\n      setcanvasInteractheight(hei);\n      setimageWidthcss(postDivRef.current[pey].clientWidth);\n      setimageHeightcss(postDivRef.current[pey].clientHeight);\n\n      if (data !== previewFileReadimage) {\n        setdata(previewFileReadimage);\n      }\n    };\n  }, [slides, sliderIndex, postItemsRef, postDivRef, interactHeightResolution]);\n  const acttii = useRef(null);\n  const [InteractClicked, setInteractClicked] = useState(false);\n  useLayoutEffect(() => {\n    if (data) {\n      drawInteraction(0, 0, 0);\n    }\n  }, [data]);\n  const [Tutorial, setTutorial] = useState(false);\n  useLayoutEffect(() => {\n    if (itemCLICKED[pey]) {\n      ///stop interaction first \n      setinteract(false);\n      setinteractContent(\"\");\n      setinteracttypeAll(0);\n      setfadeout(false); ///stop interaction first \n      ////alert('kk');\n\n      if (HasInteractivity) {\n        if (showIntImage) {} else {\n          ////load interact image\n          setshowIntImage(true);\n        }\n\n        setTimeout(() => {\n          setInteractClicked(true);\n          callInteract();\n        }, 1500);\n      } ////check for interaction and display canvas image flip\n\n    } else {\n      setinteract(false);\n      setinteractContent(\"\");\n      setinteracttypeAll(0);\n      setfadeout(false); ///setTutorial(false);\n    }\n  }, [itemCLICKED[pey], HasInteractivity, showIntImage, postDivRef]);\n  const tti = useRef(null);\n  const interacttime = useRef(null);\n  const interacttime2 = useRef(null);\n  const bh = useRef(null);\n  const [fadeout, setfadeout] = useState(false);\n  const [pause, setpause] = useState(false); // State to store the video duration\n\n  const [videoDuration, setVideoDuration] = useState(0);\n  const IntClose = useCallback(() => {\n    if (interact) {\n      setpause(false);\n      setHideCann(true);\n\n      if (interacttime.current) {\n        clearTimeout(interacttime.current);\n      }\n\n      if (interacttime2.current) {\n        clearTimeout(interacttime2.current);\n      }\n\n      var duration = 10000;\n\n      if (videoPlayerReff.current && interacttypeAll === 1) {\n        duration = videoPlayerReff.current.duration;\n      }\n\n      interacttime.current = setTimeout(() => {\n        setfadeout(true);\n\n        if (interacttime2.current) {\n          clearTimeout(interacttime2.current);\n        } /// setVideoDuration(duration);\n\n\n        interacttime2.current = setTimeout(() => {\n          ///  dispatch(UpdateInteract('', false));\n          setinteract(false);\n          setinteractContent(\"\");\n          setinteracttypeAll(0);\n          setfadeout(false);\n        }, 1800);\n      }, duration);\n    } else {\n      setHideCann(false);\n    }\n  }, [interact, videoPlayerReff, interacttypeAll]);\n  useEffect(() => {\n    IntClose();\n  }, [interact]);\n  const [HideCann, setHideCann] = useState(false);\n  const sc = useRef(null);\n\n  const spin = () => {\n    setshowSpin(true);\n\n    if (sc.current) {\n      clearTimeout(sc.current);\n    }\n\n    sc.current = setTimeout(() => {\n      setshowSpin(false);\n    }, 10000);\n  }; // Bilinear interpolation function\n\n\n  function interpolate(imageData, x, y) {\n    var x_floor = Math.floor(x);\n    var y_floor = Math.floor(y); // Ensure bounds are within the source image\n\n    x_floor = Math.max(0, Math.min(imageData.width - 2, x_floor));\n    y_floor = Math.max(0, Math.min(imageData.height - 2, y_floor));\n    var x_frac = x - x_floor;\n    var y_frac = y - y_floor;\n    var p1 = getPixel(imageData, x_floor, y_floor);\n    var p2 = getPixel(imageData, x_floor + 1, y_floor);\n    var p3 = getPixel(imageData, x_floor, y_floor + 1);\n    var p4 = getPixel(imageData, x_floor + 1, y_floor + 1);\n    var topInterpolation = interpolatePixelValues(p1, p2, x_frac);\n    var bottomInterpolation = interpolatePixelValues(p3, p4, x_frac);\n    return interpolatePixelValues(topInterpolation, bottomInterpolation, y_frac);\n  } // Helper function to get a pixel from image data\n\n\n  function getPixel(imageData, x, y) {\n    var index = (y * imageData.width + x) * 4;\n    return [imageData.data[index], imageData.data[index + 1], imageData.data[index + 2], imageData.data[index + 3]];\n  } // Helper function to interpolate between pixel values\n\n\n  function interpolatePixelValues(p1, p2, t) {\n    return [(1 - t) * p1[0] + t * p2[0], (1 - t) * p1[1] + t * p2[1], (1 - t) * p1[2] + t * p2[2], (1 - t) * p1[3] + t * p2[3]];\n  }\n\n  const drawInteraction = useCallback((typex, event, clicked) => {\n    const adjustedPos = ScaleCoOrdinates(event, 0);\n    const xnew = adjustedPos.x;\n    const ynew = adjustedPos.y;\n\n    if (canvasRefIn.current) {\n      const context = canvasRefIn.current.getContext(\"2d\");\n      canvasRefIn.current.height = interactHeightResolution;\n      canvasRefIn.current.width = canvasInteractWidth;\n      requestAnimationFrame(() => {\n        context.drawImage(data, 0, 0, canvasInteractWidth, interactHeightResolution);\n        var offsety = 0;\n        const isEdge = /Edg/i.test(navigator.userAgent);\n        const isFirefox = /Firefox/i.test(navigator.userAgent);\n\n        if (isEdge) {\n          offsety = -20;\n        } else if (isFirefox) {\n          offsety = -10;\n        } else {\n          offsety = 0;\n        } // Access the total width of the element, including margins and borders\n\n\n        var screenWidth = 0;\n\n        if (isEdge) {\n          screenWidth = window.innerWidth * 1.01;\n        } else if (isFirefox) {\n          screenWidth = window.innerWidth * 0.98;\n        } else {\n          screenWidth = window.innerWidth * 0.98;\n        }\n\n        var pictureWidth = canvasInteractWidth;\n        var offsetX = (screenWidth - pictureWidth) / 2;\n        var xx = cropInitialIn[0].x;\n        var yy = cropInitialIn[0].y;\n        const xxw = cropInitialIn2[0].x;\n        const yyw = cropInitialIn2[0].y;\n\n        if (post.rad1 === null) {\n          var r1 = 120;\n        } else {\n          // Given values\n          const percentageCoverage = post.rad1; // Replace with your actual percentageCoverage\n\n          const canvasWidth = canvasInteractWidth\n          /* your canvas width */\n          ; // Calculate the radius\n\n          var r1 = percentageCoverage * canvasWidth / 200;\n        }\n\n        if (post.rad2 === null) {\n          var r2 = 120;\n        } else {\n          const percentageCoveragex = post.rad2; // Replace with your actual percentageCoverage\n\n          const canvasWidthx = canvasInteractWidth\n          /* your canvas width */\n          ; // Calculate the radius\n\n          var r2 = percentageCoveragex * canvasWidthx / 200;\n        } // Calculate the X-coordinate\n\n\n        const xCoordinate = xx / 100 * canvasInteractWidth;\n        var x2 = xCoordinate;\n        const yCoordinate = yy / 100 * interactHeightResolution;\n        var y2 = yCoordinate;\n        const xCoordinatex = xxw / 100 * canvasInteractWidth;\n        var x2b = xCoordinatex;\n        const yCoordinatex = yyw / 100 * interactHeightResolution;\n        var y2b = yCoordinatex;\n        context.beginPath();\n        context.arc(xnew, ynew, 5, 0, Math.PI * 2);\n        context.fillStyle = \"rgba(250, 250,250,0)\";\n        context.fill();\n        context.closePath();\n        var clikarc1 = context.isPointInPath(0, 0);\n        var clikarc2 = context.isPointInPath(0, 0);\n\n        if (post.interact1a || post.interact1b) {\n          //alert('jj');\n          var scaleFactor = 1.03; // You can adjust this value to control the zoom level\n\n          if (post.interact1a) {\n            if (typex === 0 || typex === 3) {\n              var imageData = context.getImageData(x2 - 1 - r1, y2 - 0.5 - r1, 2.1 * r1, 2.1 * r1); // (x, y, width, height)\n              // Create a larger image data for the zoom effect\n\n              var zoomedImageData = context.createImageData(imageData.width * scaleFactor, imageData.height * scaleFactor); // Copy pixels from the original image data to the larger image data with bilinear interpolation\n\n              for (var ybb = 0; ybb < zoomedImageData.height; ybb++) {\n                for (var xbb = 0; xbb < zoomedImageData.width; xbb++) {\n                  var sourceX = xbb / scaleFactor;\n                  var sourceY = ybb / scaleFactor; // Get the interpolated pixel value\n\n                  var interpolatedPixel = interpolate(imageData, sourceX, sourceY); // Set the pixel values in the zoomed image data\n\n                  var destIndex = (ybb * zoomedImageData.width + xbb) * 4;\n                  zoomedImageData.data[destIndex] = interpolatedPixel[0];\n                  zoomedImageData.data[destIndex + 1] = interpolatedPixel[1];\n                  zoomedImageData.data[destIndex + 2] = interpolatedPixel[2];\n                  zoomedImageData.data[destIndex + 3] = interpolatedPixel[3];\n                }\n              } // Apply a light white border at the borders\n\n\n              var borderWidth = 0; // Adjust the width of the border\n\n              for (var ybb = 0; ybb < zoomedImageData.height; ybb++) {\n                for (var xbb = 0; xbb < zoomedImageData.width; xbb++) {\n                  if (xbb < borderWidth || xbb >= zoomedImageData.width - borderWidth || ybb < borderWidth || ybb >= zoomedImageData.height - borderWidth) {\n                    // Apply a light white color to the border\n                    var destIndex = (ybb * zoomedImageData.width + xbb) * 4;\n                    zoomedImageData.data[destIndex] = 230; // Red channel\n\n                    zoomedImageData.data[destIndex + 1] = 20; // Green channel\n\n                    zoomedImageData.data[destIndex + 2] = 2; // Blue channel\n\n                    zoomedImageData.data[destIndex + 3] = 0.8; // Alpha channel\n                  }\n                }\n              } // Put the modified pixel data back onto the canvas\n\n\n              context.putImageData(zoomedImageData, x2 - r1 * scaleFactor, y2 - r1 * scaleFactor);\n            } //////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n            if ([0, 3].includes(typex)) {\n              context.beginPath();\n              context.arc(x2, y2, r1, 0, Math.PI * 2);\n              clikarc1 = context.isPointInPath(xnew, ynew);\n              context.fillStyle = darkmodeReducer ? \"rgba(50, 50,50,0)\" : \"rgba(250, 250,250,0.0)\";\n              context.closePath();\n              context.fill();\n            } else if (typex === 1) {\n              context.beginPath();\n              context.arc(x2, y2, r1, 0, Math.PI * 2);\n              clikarc1 = context.isPointInPath(xnew, ynew);\n              context.fillStyle = `rgba(250, 250,250,0.0)`;\n              context.closePath();\n              context.fill();\n            }\n          }\n\n          if (post.interact1b) {\n            if (typex === 0 || typex === 3) {\n              var imageData2 = context.getImageData(x2b - 1 - r2, y2b - 0.5 - r2, 2.1 * r2, 2.1 * r2); // (x, y, width, height)\n              // Create a larger image data for the zoom effect\n\n              var zoomedImageData2 = context.createImageData(imageData2.width * scaleFactor, imageData2.height * scaleFactor); // Copy pixels from the original image data to the larger image data with bilinear interpolation\n\n              for (var ybb = 0; ybb < zoomedImageData2.height; ybb++) {\n                for (var xbb = 0; xbb < zoomedImageData2.width; xbb++) {\n                  var sourceX = xbb / scaleFactor;\n                  var sourceY = ybb / scaleFactor; // Get the interpolated pixel value\n\n                  var interpolatedPixel = interpolate(imageData2, sourceX, sourceY); // Set the pixel values in the zoomed image data\n\n                  var destIndex = (ybb * zoomedImageData2.width + xbb) * 4;\n                  zoomedImageData2.data[destIndex] = interpolatedPixel[0];\n                  zoomedImageData2.data[destIndex + 1] = interpolatedPixel[1];\n                  zoomedImageData2.data[destIndex + 2] = interpolatedPixel[2];\n                  zoomedImageData2.data[destIndex + 3] = interpolatedPixel[3];\n                }\n              } // Apply a light white border at the borders\n\n\n              var borderWidth = 0; // Adjust the width of the border\n\n              for (var ybb = 0; ybb < zoomedImageData2.height; ybb++) {\n                for (var xbb = 0; xbb < zoomedImageData2.width; xbb++) {\n                  if (xbb < borderWidth || xbb >= zoomedImageData2.width - borderWidth || ybb < borderWidth || ybb >= zoomedImageData2.height - borderWidth) {\n                    // Apply a light white color to the border\n                    var destIndex = (ybb * zoomedImageData2.width + xbb) * 4;\n                    zoomedImageData2.data[destIndex] = 230; // Red channel\n\n                    zoomedImageData2.data[destIndex + 1] = 20; // Green channel\n\n                    zoomedImageData2.data[destIndex + 2] = 2; // Blue channel\n\n                    zoomedImageData2.data[destIndex + 3] = 0.8; // Alpha channel\n                  }\n                }\n              } // Put the modified pixel data back onto the canvas\n\n\n              context.putImageData(zoomedImageData2, x2b - r2 * scaleFactor, y2b - r2 * scaleFactor);\n            } ///////////////////////////////////////////////////////////////////////////////////////////////\n\n\n            if ([0, 3].includes(typex)) {\n              context.beginPath();\n              context.arc(x2b, y2b, r2, 0, Math.PI * 2);\n              clikarc2 = context.isPointInPath(xnew, ynew);\n              context.fillStyle = darkmodeReducer ? \"rgba(50, 50,50,0)\" : \"rgba(250, 250,250,0.0)\";\n              context.closePath();\n              context.fill(); ///context.lineWidth = matchMobile ? 9.6 : itemcroptype[pey] === 3 ? 9 : 6;\n              ///context.strokeStyle = darkmodeReducer ? \"#ffffff\" : \"#333333\";\n              ///context.stroke();\n            } else if (typex === 1) {\n              context.beginPath();\n              context.arc(x2b, y2b, r2, 0, Math.PI * 2);\n              clikarc2 = context.isPointInPath(xnew, ynew);\n              context.fillStyle = `rgba(250, 250,250,0.0)`;\n              context.closePath();\n              context.fill();\n            }\n          }\n\n          if (typex === 3) {} else {\n            if (tiim.current) {\n              clearTimeout(tiim.current);\n            }\n\n            tiim.current = setTimeout(() => {\n              if (typex === 0 || typex === 3) {\n                drawInteraction(1, event, 0);\n              } else {\n                drawInteraction(0, event, 0);\n              }\n            }, 130);\n          }\n\n          if (canvasRefIn.current) {\n            canvasRefIn.current.style.width = `${imageWidthcss}px`;\n            canvasRefIn.current.style.height = `${imageHeightcss}px`;\n          }\n\n          if (post.interact1b || post.interact1a) {\n            if (clicked === 1 && clikarc2) {\n              /// alert(`xx: ${xx}, xnew: ${xnew}`);\n              /// dispatch(UpdateInteract(post.interact1b, true));\n              ///stop interaction first \n              setInteractedDark(false);\n              setinteract(false);\n              setinteractContent(\"\");\n              setinteracttypeAll(0);\n              setfadeout(false); ///stop interaction first \n\n              spin();\n              setinteract(true);\n              setinteractContent(post.interact1b);\n              setinteracttypeAll(post.interacttype2);\n            } else if (clicked === 1 && clikarc1) {\n              /// alert(`xx: ${xx}, xnew: ${xnew}`);\n              ///stop interaction first \n              setInteractedDark(false);\n              setinteract(false);\n              setinteractContent(\"\");\n              setinteracttypeAll(0);\n              setfadeout(false); ///stop interaction first \n\n              spin();\n              setinteract(true);\n              setinteractContent(post.interact1a);\n              setinteracttypeAll(post.interacttype1);\n            } else if (clicked === 1) {\n              switch (event.detail) {\n                case 1:\n                  setinteract(false);\n                  setinteractContent(\"\");\n                  setinteracttypeAll(0);\n                  setfadeout(false);\n                  context.clearRect(0, 0, canvasRefIn.current.width, canvasRefIn.current.width);\n\n                  if (tiim.current) {\n                    clearTimeout(tiim.current);\n                  }\n\n                  setHasInteractivity(false);\n                  clickslider(event);\n                  break;\n              } /// alert('jj');\n\n            } else {}\n          } else {} //alert(imageHeightcss);\n\n        }\n      });\n    }\n  }, [data, imageWidthcss, imageHeightcss, interact]); ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n  const In = e => {\n    if (itemCLICKED[pey]) {\n      ////onMouseDown onMouseMove\n      ////touchDown = e.clientX\n      const touchDown = e.touches[0].clientX;\n      setTouchPosition(touchDown);\n    }\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH MOVE EVENT\n\n\n  const handleTouchMove = e => {\n    if (itemCLICKED[pey]) {\n      if (handleTouchMoveTimer.current) {\n        clearTimeout(handleTouchMoveTimer.current);\n      }\n\n      handleTouchMoveTimer.current = setTimeout(function () {\n        const touchDown = touchPosition;\n\n        if (touchDown === null) {\n          return;\n        } ////currentTouch = e.clientX\n\n\n        const currentTouch = e.touches[0].clientX;\n        const diff = touchDown - currentTouch;\n\n        if (diff > 40) {\n          nextSlide();\n        } else if (diff < -40) {\n          prevSlide();\n        } else {}\n\n        setTouchPosition(null);\n        return false;\n      }, 200);\n      return false;\n    }\n  }; ///\n  ///\n  ///\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\n\n\n  const waitChangeIndex = (data, state) => {\n    if (waitChangeIndexTimer.current) {\n      clearTimeout(waitChangeIndexTimer.current);\n    }\n\n    waitChangeIndexTimer.current = setTimeout(function () {\n      setSliderIndexSlow(state => data);\n    }, 500);\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE\n\n\n  const nextSlide = () => {\n    AUTOSlideLongImages(pey);\n\n    if (ActiveAutoPlay[pey]) {} else {\n      setshowSliderLoader(true);\n\n      if (autoPlayTimer.current) {\n        clearTimeout(autoPlayTimer.current);\n      }\n    } ///set((state) => (state + 1) % slides.length);\n\n\n    if (sliderIndex === slides.length - 1) {\n      setSliderIndex(sliderIndex => 0);\n      waitChangeIndex(0, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex + 1);\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\n    }\n\n    if (ActiveAutoPlay[pey]) {} else {\n      if (callAutoPlayAgainTimer.current) {\n        clearTimeout(callAutoPlayAgainTimer.current);\n      }\n\n      callAutoPlayAgainTimer.current = setTimeout(function () {\n        SliderAutoPlay(1);\n      }, sliderDuration);\n    }\n  }; ///\n  ///\n  ///\n  /// PREV SLIDE\n\n\n  const prevSlide = () => {\n    AUTOSlideLongImages(pey);\n\n    if (ActiveAutoPlay[pey]) {} else {\n      setshowSliderLoader(true);\n\n      if (autoPlayTimer.current) {\n        clearTimeout(autoPlayTimer.current);\n      }\n    }\n\n    if (sliderIndex === 0) {\n      setSliderIndex(sliderIndex => slides.length - 1);\n      waitChangeIndex(slides.length - 1, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex - 1);\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\n    }\n\n    if (ActiveAutoPlay[pey]) {} else {\n      if (callAutoPlayAgainTimer.current) {\n        clearTimeout(callAutoPlayAgainTimer.current);\n      }\n\n      callAutoPlayAgainTimer.current = setTimeout(function () {\n        SliderAutoPlay(1);\n      }, sliderDuration);\n    }\n  }; ///\n  ///\n  ///\n  /// CHANGE SLIDER CONTENT USING  DOTS\n\n\n  const GotoDots = clickedDot => {\n    setSliderIndex(sliderIndex => clickedDot);\n    waitChangeIndex(clickedDot, sliderIndex);\n  }; // Function to play the video when it's loaded\n\n\n  const handleVideoLoad = () => {\n    if (videoPlayerReff.current) {\n      videoPlayerReff.current.play();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        position: \"fixed\",\n        top: \"3vh\",\n        padding: \"0px\",\n        zIndex: \"200\"\n      },\n      children: Tutorial ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        onClick: () => {\n          setTutorial(false);\n        },\n        xs: 6,\n        style: {\n          padding: \"10px\",\n          backgroundColor: \"#00ccff\",\n          borderRadius: \"8%\",\n          fontFamily: \"sans-serif\",\n          fontWeight: \"bold\"\n        },\n        children: \"Mobile Interaction Still In Development, Coming Soon \\uD83D\\uDE0A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      onTouchStart: In,\n      onTouchMove: handleTouchMove,\n      xs: 12,\n      style: {\n        position: \"relative\",\n        height: itemCLICKED[pey] ? `${itemOriginalPostHeight[pey]}px` : type === 1 ? `${itemOriginalPostHeight[pey]}px` : `${itemFinalPostHeight[pey]}px`,\n        padding: \"0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Loader, {\n        post: post,\n        autoSlideDisplay: autoSlideDisplay,\n        sliderLoader: sliderLoader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseOver: () => {\n          setZoomOutBigger(true);\n        },\n        onMouseOut: () => {\n          setZoomOutBigger(false);\n        },\n        style: {\n          position: \"absolute\",\n          zIndex: 30,\n          left: slides.length > 1 ? 165 : 25,\n          cursor: \"pointer\",\n          top: slides.length > 1 ? \"2.4vh\" : \"2.4vh\",\n          fontFamily: \"Arial, Helvetica, sans-serif\",\n          fontWeight: \"bolder\",\n          opacity: \"0.7\",\n          height: \"0px\",\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            setsliderIndexMini(sliderIndex);\n            setzoomClickedIndex(pey + 1);\n            type === 1 ? setminiProfile(false) : setminiProfile(true);\n          },\n          className: darkmodeReducer ? \"turlight\" : \"turdark\",\n          style: {\n            padding: \"1px\",\n            color: \"#ffffff\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ZoomOutIcon, {\n            className: darkmodeReducer ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-lightab  dontallowhighlighting zuperkingIcon  \",\n            style: {\n              fontSize: \"2.2vw\",\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1185,\n        columnNumber: 9\n      }, this), \" \", showSpin ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          position: \"absolute\",\n          zIndex: 100,\n          padding: \"3vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner zuperxyinfo\",\n          style: {\n            borderTop: `8px solid ${post.color1}`,\n            boxShadow: `0 0 8.5px, ${post.color1}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1236,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1231,\n        columnNumber: 11\n      }, this) : null, slides.length > 0 ? interactContent ? null : /*#__PURE__*/_jsxDEV(SliderNumber, {\n        ActiveCanvas: ActiveCanvas,\n        post: post,\n        HasInteractivity: HasInteractivity,\n        postDatainnerInteraction1: postDatainnerInteraction1,\n        postDatainnerInteraction2: postDatainnerInteraction2,\n        startSlider: startSlider,\n        ActiveAutoPlay: ActiveAutoPlay,\n        stopSlider: stopSlider,\n        activeSlide: sliderIndexSlow,\n        total: slides.length,\n        itemCLICKED: itemCLICKED,\n        pey: pey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1247,\n        columnNumber: 13\n      }, this) : null, /*#__PURE__*/_jsxDEV(Arrow, {\n        itemCLICKED: itemCLICKED,\n        pey: pey,\n        total: slides.length,\n        direction: \"left\",\n        clickSlideprev: prevSlide,\n        clickSlidenext: nextSlide,\n        itemOriginalPostHeight: itemOriginalPostHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1263,\n        columnNumber: 9\n      }, this), transitions((style, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(animated.img, {\n          onLoad: e => {\n            onPostsItemload(e, pey, i);\n          },\n          onMouseDown: clickslider,\n          ref: addPostItemsRef,\n          className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n          src: slidesThumb[i],\n          alt: \"a superstarz post \",\n          style: { ...style,\n            cursor: \"pointer\",\n            width: \"100%\",\n            height: type === 1 ? `auto` : itemheight[pey],\n            position: \"absolute\",\n            padding: \"0px\",\n            objectFit: \"cover\",\n            objectPosition: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"50% top\" : \"50% 50\",\n            zIndex: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          ref: pic,\n          onMouseDown: clickslider,\n          className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n          src: slides[i],\n          alt: \"a clikbate post \",\n          style: {\n            cursor: \"pointer\",\n            width: \"100%\",\n            height: type === 1 ? `auto` : itemheight[pey],\n            position: \"absolute\",\n            padding: \"0px\",\n            objectFit: \"cover\",\n            objectPosition: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"50% top\" : \"50% 50\",\n            zIndex: 1\n          },\n          crossOrigin: \"anonymous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1303,\n          columnNumber: 13\n        }, this), i === 0 && HasInteractivity && ActiveCanvas === pey ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n          onMouseUp: e => {\n            handleTouchStartIn(e, 0);\n          },\n          onTouchStart: e => {\n            handleTouchStartIn(e, 1);\n          },\n          ref: canvasRefIn,\n          style: {\n            cursor: \"pointer\",\n            padding: \"0px\",\n            position: \"absolute\",\n            zIndex: 11,\n            height: '0px',\n            width: '0px',\n            top: \"0vh\",\n            margin: \"auto\",\n            opacity: HideCann ? 0 : 1,\n            visibility: itemCLICKED[pey] ? 'visible' : 'hidden'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1330,\n          columnNumber: 15\n        }, this) : null, interact && HasInteractivity && ActiveCanvas === pey ? interacttypeAll === 1 ? /*#__PURE__*/_jsxDEV(\"video\", {\n          onLoadedData: handleVideoLoad,\n          ref: videoPlayerReff,\n          src: interactContent,\n          style: {\n            filter: InteractedDark ? 'brightness(40%)' : '',\n            cursor: \"pointer\",\n            height: \"100%\",\n            objectFit: \"contain\",\n            zIndex: 50,\n            position: \"absolute\",\n            margin: \"auto\",\n            textAlign: \"center\",\n            top: \"0vh\",\n            width: \"100%\",\n            backgroundColor: darkmodeReducer ? \"rgb(20,20,20,0.82)\" : \"rgb(210,210,210,0.77)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1363,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          className: fadeout ? \"fadeboyinOut\" : \"fadeboyinInt\",\n          src: interactContent,\n          onClick: () => {\n            if (InteractedDark) {\n              ////////\n              if (InteractTimerxx.current) {\n                clearTimeout(InteractTimerxx.current);\n              }\n\n              dispatch(UpdateInteract(interactContent, true));\n              setInteractedDark(false);\n              setinteract(false);\n              setinteractContent(\"\");\n              setinteracttypeAll(0);\n              setfadeout(false);\n\n              if (sc.current) {\n                clearTimeout(sc.current);\n              }\n\n              setshowSpin(false); /////////////////\n            } else {\n              setInteractedDark(true);\n\n              if (InteractTimerxx.current) {\n                clearTimeout(InteractTimerxx.current);\n              }\n\n              InteractTimerxx.current = setTimeout(() => {\n                setInteractedDark(false);\n                setinteract(false);\n                setinteractContent(\"\");\n                setinteracttypeAll(0);\n                setfadeout(false);\n\n                if (sc.current) {\n                  clearTimeout(sc.current);\n                }\n\n                setshowSpin(false);\n              }, 1100);\n            }\n          },\n          style: {\n            filter: InteractedDark ? 'brightness(40%)' : '',\n            cursor: \"pointer\",\n            height: \"100%\",\n            objectFit: \"contain\",\n            zIndex: 50,\n            position: \"absolute\",\n            margin: \"auto\",\n            textAlign: \"center\",\n            top: \"0vh\",\n            width: \"100%\",\n            backgroundColor: darkmodeReducer ? \"rgb(20,20,20,0.82)\" : \"rgb(210,210,210,0.77)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1381,\n          columnNumber: 17\n        }, this) : null]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1273,\n        columnNumber: 11\n      }, this)), \" \", /*#__PURE__*/_jsxDEV(Dots, {\n        total: slides.length,\n        itemCLICKED: itemCLICKED,\n        pey: pey,\n        GotoDots: GotoDots,\n        slides: slides,\n        activeSlide: sliderIndexSlow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1445,\n        columnNumber: 9\n      }, this), post.interact1a && HasInteractivity && ActiveCanvas === pey ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.interact1a,\n        style: {\n          height: \"100%\",\n          objectFit: \"contain\",\n          zIndex: 50,\n          position: \"absolute\",\n          margin: \"auto\",\n          textAlign: \"center\",\n          top: \"-200000vh\",\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1454,\n        columnNumber: 11\n      }, this) : null, post.interact1b && HasInteractivity && ActiveCanvas === pey ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.interact1b,\n        style: {\n          cursor: \"pointer\",\n          height: \"100%\",\n          objectFit: \"contain\",\n          zIndex: 50,\n          position: \"absolute\",\n          margin: \"auto\",\n          textAlign: \"center\",\n          top: \"-200000vh\",\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1469,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Sliderx, \"AajNZPFWJIBp1bm26wGeYt+Vv8I=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useTransition];\n});\n\n_c = Sliderx;\nexport const Slider = /*#__PURE__*/React.memo(Sliderx);\n_c2 = Slider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Sliderx\");\n$RefreshReg$(_c2, \"Slider\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/Clikbate/src/profile/Slider.tsx"],"names":["React","useState","useRef","useCallback","useEffect","useLayoutEffect","Arrow","Dots","SliderNumber","Grid","animated","useTransition","useSelector","useDispatch","matchMobile","matchPc","ZoomOutIcon","Loader","UpdateInteract","Sliderx","slides","slidesThumb","pey","addPostItemsRef","itemheight","onPostsItemClicked","onPostsItemload","post","itemFinalPostHeight","itemOriginalPostHeight","itemcroptype","itemCLICKED","setActiveAutoPlay","AUTOSlideLongImages","clickslider","stopSlider","SliderAutoPlay","showSliderLoader","setshowSliderLoader","autoPlayTimer","sliderIndex","setSliderIndex","sliderIndexSlow","setSliderIndexSlow","length","startSlider","ActiveAutoPlay","type","setminiProfile","miniProfile","setzoomClickedIndex","setsliderIndexMini","postDatainnerInteraction1","postDatainnerInteraction2","postItemsRef","ActiveCanvas","checkifClicked","postDivRef","paperPostScrollRef","sliderDuration","aRef","dispatch","allow4dev","REACT_APP_APPX_STATE","process","env","InteractTimerxx","waitChangeIndexTimer","handleTouchMoveTimer","callAutoPlayAgainTimer","videoPlayerReff","showSpin","setshowSpin","SlideimageRef","SlideimageRefthumb","imageHeight","setImageHeight","touchPosition","setTouchPosition","ZoomOutBigger","setZoomOutBigger","miniH","setminiH","InteractedDark","setInteractedDark","ActiveId","state","ActiveAutoPlayReducer","ActiveIdReducer","interactContent","setinteractContent","interacttypeAll","setinteracttypeAll","interact","setinteract","screenHeight","darkmode","snapStart","activateLoader","historyscroll","GlobalReducer","screenHeightReducer","darkmodeReducer","snapStartReducer","activateLoaderReducer","historyscrollReducer","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","colorx","setTimeout","autoSlideDisplay","sliderLoader","transitions","key","from","opacity","enter","leave","config","duration","sliderFirstImageOnLoad","item","current","clientHeight","sliderFirstImageOnLoadthumb","tiim","TouchTimer","TouchTimer22","Touched","setTouched","cropInitialIn","setcropInitialIn","x","interact1ax","y","interact1ay","interact2ax","interact2ay","interact3ax","interact3ay","cropInitialIn2","setcropInitialIn2","interact1bx","interact1by","interact2bx","interact2by","interact3bx","interact3by","showIntImage","setshowIntImage","HasInteractivity","setHasInteractivity","startInteractivity","setstartInteractivity","containsURL","str","urlPattern","test","map","index","data","setdata","canvasInteractWidth","setcanvasInteractWidth","canvasInteractheight","setcanvasInteractheight","imageWidthcss","setimageWidthcss","imageHeightcss","setimageHeightcss","handleTouchStartIn","event","drawInteraction","pic","picanonymous","canvasRefIn","DummyCanvas4ToDataURL","ScaleCoOrdinates","rect","getBoundingClientRect","scaleX","width","scaleY","height","touches","clientX","left","clientY","top","interactHeightResolution","setinteractHeightResolution","window","innerHeight","callInteract","context","getContext","clearRect","previewFileReadimage","Image","crossOrigin","src","onload","ratio","naturalHeight","naturalWidth","ratiox","hei","clientWidth","acttii","InteractClicked","setInteractClicked","Tutorial","setTutorial","setfadeout","tti","interacttime","interacttime2","bh","fadeout","pause","setpause","videoDuration","setVideoDuration","IntClose","setHideCann","clearTimeout","HideCann","sc","spin","interpolate","imageData","x_floor","Math","floor","y_floor","max","min","x_frac","y_frac","p1","getPixel","p2","p3","p4","topInterpolation","interpolatePixelValues","bottomInterpolation","t","typex","clicked","adjustedPos","xnew","ynew","requestAnimationFrame","drawImage","offsety","isEdge","navigator","userAgent","isFirefox","screenWidth","innerWidth","pictureWidth","offsetX","xx","yy","xxw","yyw","rad1","r1","percentageCoverage","canvasWidth","rad2","r2","percentageCoveragex","canvasWidthx","xCoordinate","x2","yCoordinate","y2","xCoordinatex","x2b","yCoordinatex","y2b","beginPath","arc","PI","fillStyle","fill","closePath","clikarc1","isPointInPath","clikarc2","interact1a","interact1b","scaleFactor","getImageData","zoomedImageData","createImageData","ybb","xbb","sourceX","sourceY","interpolatedPixel","destIndex","borderWidth","putImageData","includes","imageData2","zoomedImageData2","style","interacttype2","interacttype1","detail","In","e","touchDown","handleTouchMove","currentTouch","diff","nextSlide","prevSlide","waitChangeIndex","GotoDots","clickedDot","handleVideoLoad","play","position","padding","zIndex","backgroundColor","borderRadius","fontFamily","fontWeight","cursor","fontSize","display","borderTop","color1","boxShadow","i","objectFit","objectPosition","margin","visibility","filter","textAlign","Slider","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useState,\r\n  useRef,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { Arrow } from \"./Arrow\";\r\nimport { Dots } from \"./Dots\";\r\nimport { SliderNumber } from \"./SliderNumber\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { animated, useTransition } from \"react-spring\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { matchMobile, matchPc, matchTablet } from \"../DetectDevice\";\r\nimport ZoomOutIcon from \"@mui/icons-material/ZoomOut\";\r\nimport { Loader } from \"./Loader\";\r\nimport { UpdateInteract } from \".././GlobalActions\";\r\n\r\nfunction Sliderx({\r\n  slides,\r\n  slidesThumb,\r\n  pey,\r\n  addPostItemsRef,\r\n  itemheight,\r\n  onPostsItemClicked,\r\n  onPostsItemload,\r\n  post,\r\n  itemFinalPostHeight,\r\n  itemOriginalPostHeight,\r\n  itemcroptype,\r\n  itemCLICKED,\r\n  setActiveAutoPlay,\r\n  AUTOSlideLongImages,\r\n  clickslider,\r\n  stopSlider,\r\n  SliderAutoPlay,\r\n  showSliderLoader,\r\n  setshowSliderLoader,\r\n  autoPlayTimer,\r\n  sliderIndex,\r\n  setSliderIndex,\r\n  sliderIndexSlow,\r\n  setSliderIndexSlow,\r\n  length,\r\n  startSlider,\r\n  ActiveAutoPlay,\r\n  type,\r\n  setminiProfile,\r\n  miniProfile,\r\n  setzoomClickedIndex,\r\n  setsliderIndexMini,\r\n  postDatainnerInteraction1,\r\n  postDatainnerInteraction2,\r\n  postItemsRef,\r\n  ActiveCanvas,\r\n  checkifClicked,\r\n  postDivRef,\r\n  paperPostScrollRef,\r\n}: any): JSX.Element {\r\n  const [sliderDuration] = useState(1500);\r\n\r\n  const aRef: any = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  var allow4dev = \"\";\r\n  const { REACT_APP_APPX_STATE } = process.env;\r\n\r\n  if (REACT_APP_APPX_STATE === \"dev\") {\r\n    allow4dev = \"http://localhost:1000\";\r\n  } else {\r\n    allow4dev = \"\";\r\n  }\r\n\r\n  /// const getWidth = () => window.innerWidth;\r\n  ///var newGetWidth = getWidth() * slides.length;\r\n\r\n  const InteractTimerxx = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const waitChangeIndexTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const handleTouchMoveTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const callAutoPlayAgainTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  interface HTMLVideoElementWithCapture extends HTMLVideoElement {\r\n    captureStream(): MediaStream;\r\n  }\r\n\r\n\r\n  const videoPlayerReff = useRef<HTMLVideoElementWithCapture>(null);\r\n\r\n\r\n  const [showSpin, setshowSpin] = useState(false);\r\n\r\n  const SlideimageRef = useRef<HTMLImageElement>(null);\r\n\r\n  const SlideimageRefthumb = useRef<HTMLImageElement>(null);\r\n\r\n  const [imageHeight, setImageHeight] = useState(0);\r\n  const [touchPosition, setTouchPosition] = useState(null);\r\n\r\n  const [ZoomOutBigger, setZoomOutBigger] = useState<boolean>(false);\r\n\r\n  const [miniH, setminiH] = useState<number>(50);\r\n\r\n  const [InteractedDark, setInteractedDark] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n  interface RootStateActiveAutoPlayReducer {\r\n    ActiveAutoPlayReducer: {\r\n      ActiveId: number;\r\n    };\r\n  }\r\n  const { ActiveId } = useSelector((state: RootStateActiveAutoPlayReducer) => ({\r\n    ...state.ActiveAutoPlayReducer,\r\n  }));\r\n\r\n  const ActiveIdReducer = ActiveId;\r\n\r\n  ///\r\n\r\n  const [interactContent, setinteractContent] = useState(\"\");\r\n\r\n  const [interacttypeAll, setinteracttypeAll] = useState(0);\r\n\r\n  const [interact, setinteract] = useState(false);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      snapStart: boolean;\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n      activateLoader: boolean;\r\n      historyscroll: number;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const {\r\n    screenHeight,\r\n    darkmode,\r\n    snapStart,\r\n    activateLoader,\r\n    historyscroll,\r\n  } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const screenHeightReducer = screenHeight;\r\n  const darkmodeReducer = darkmode;\r\n  const snapStartReducer = snapStart;\r\n  const activateLoaderReducer = activateLoader;\r\n  const historyscrollReducer = historyscroll;\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  var colorx =\r\n    colortypeReducer === 0\r\n      ? darkmodeReducer\r\n        ? colorReducerdark\r\n        : colorReducer\r\n      : colorReducer;\r\n\r\n  useEffect(() => {\r\n    if (ActiveAutoPlay[pey]) {\r\n      setTimeout(function () {\r\n        stopSlider(0);\r\n      }, 1500);\r\n    }\r\n  }, [ActiveAutoPlay[pey]]);\r\n\r\n  var autoSlideDisplay = \"none\";\r\n  var sliderLoader = \"\";\r\n\r\n  if (showSliderLoader) {\r\n    autoSlideDisplay = \"none\";\r\n    sliderLoader = \"\";\r\n  } else {\r\n    autoSlideDisplay = \"block\";\r\n    sliderLoader = \"superloaderAutoSlider\";\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SPRING TRANSITION WITH INDEX\r\n  const transitions = useTransition(sliderIndex, {\r\n    key: sliderIndex,\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n    config: { duration: sliderDuration - 50 },\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\r\n  const sliderFirstImageOnLoad = (item: number) => {\r\n    if (item === 0) {\r\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\r\n        setImageHeight(SlideimageRef.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\r\n  const sliderFirstImageOnLoadthumb = (item: number) => {\r\n    if (item === 0 && imageHeight === 0) {\r\n      if (\r\n        SlideimageRefthumb.current &&\r\n        SlideimageRefthumb.current.clientHeight\r\n      ) {\r\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  const tiim = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const TouchTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const TouchTimer22 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const [Touched, setTouched] = useState(0);\r\n\r\n  const [cropInitialIn, setcropInitialIn] = useState([\r\n    { x: post.interact1ax, y: post.interact1ay },\r\n    { x: post.interact2ax, y: post.interact2ay },\r\n    { x: post.interact3ax, y: post.interact3ay },\r\n  ]);\r\n\r\n\r\n  const [cropInitialIn2, setcropInitialIn2] = useState([\r\n    { x: post.interact1bx, y: post.interact1by },\r\n    { x: post.interact2bx, y: post.interact2by },\r\n    { x: post.interact3bx, y: post.interact3by },\r\n  ]);\r\n\r\n  const [showIntImage, setshowIntImage] = useState(false);\r\n\r\n  const [HasInteractivity, setHasInteractivity] = useState(false);\r\n\r\n  const [startInteractivity, setstartInteractivity] = useState(true);\r\n\r\n  const containsURL = (str: any) => {\r\n    // Regular expression pattern to match URLs (simplified, not covering all cases)\r\n    const urlPattern = /(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*/i;\r\n\r\n    // Test if the string contains a URL using the regular expression\r\n    return urlPattern.test(str);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    //console.log(postDatainnerInteraction1[0])\r\n\r\n    postDatainnerInteraction1.map((str: any, index: any) => {\r\n      if (containsURL(str)) {\r\n        setHasInteractivity(true);\r\n        ///alert('kk')\r\n      } else {\r\n        setHasInteractivity(false);\r\n\r\n        postDatainnerInteraction2.map((str: any, index: any) => {\r\n          if (containsURL(str)) {\r\n\r\n            setHasInteractivity(true);\r\n          } else {\r\n            setHasInteractivity(false);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n\r\n  }, [postDatainnerInteraction1, postDatainnerInteraction2, itemCLICKED]);\r\n\r\n  const [data, setdata] = useState(null);\r\n  const [canvasInteractWidth, setcanvasInteractWidth] = useState(0);\r\n  const [canvasInteractheight, setcanvasInteractheight] = useState(0);\r\n  const [imageWidthcss, setimageWidthcss] = useState(0);\r\n  const [imageHeightcss, setimageHeightcss] = useState(0);\r\n\r\n  const handleTouchStartIn = useCallback(\r\n    (event: any, type: any) => {\r\n      if (data) {\r\n        drawInteraction(0, event, 1);\r\n      }\r\n    },\r\n    [data]\r\n  );\r\n\r\n  const pic: any = useRef(null);\r\n  const picanonymous: any = useRef(null);\r\n  const canvasRefIn: any = useRef(null);\r\n  const DummyCanvas4ToDataURL: any = useRef(null);\r\n\r\n  const ScaleCoOrdinates = useCallback(\r\n    (event, type) => {\r\n      if (canvasRefIn.current) {\r\n        const rect = canvasRefIn.current.getBoundingClientRect();\r\n        const scaleX = canvasRefIn.current.width / rect.width;\r\n        const scaleY = canvasRefIn.current.height / rect.height;\r\n\r\n        let x, y;\r\n\r\n        if (matchMobile) {\r\n          // Handle touch events\r\n          if (event && event.touches && event.touches.length > 0) {\r\n\r\n\r\n            x = (event.touches[0].clientX - rect.left) * scaleX;\r\n            y = (event.touches[0].clientY - rect.top) * scaleY;\r\n\r\n            // Now you can use x and y in your code\r\n          }\r\n        } else {\r\n          // Handle mouse events\r\n          x = (event.clientX - rect.left) * scaleX;\r\n          y = (event.clientY - rect.top) * scaleY;\r\n        }\r\n\r\n        return { x, y };\r\n      } else {\r\n        return {\r\n          x: 0,\r\n          y: 0,\r\n        };\r\n      }\r\n    },\r\n    [matchMobile]\r\n  );\r\n\r\n\r\n\r\n  const [interactHeightResolution, setinteractHeightResolution] = useState(window.innerHeight * 1.2);\r\n\r\n  useEffect(() => {\r\n    setinteractHeightResolution(window.innerHeight * 1.6);\r\n  }, [matchPc])\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (matchMobile) {\r\n      setinteractHeightResolution(window.innerHeight * 2);\r\n    }\r\n\r\n  }, [matchMobile])\r\n\r\n\r\n  const callInteract = useCallback(() => {\r\n    if (!canvasRefIn.current) return;\r\n\r\n    const context = canvasRefIn.current.getContext(\"2d\");\r\n    context.clearRect(\r\n      0,\r\n      0,\r\n      canvasRefIn.current.width,\r\n      canvasRefIn.current.height\r\n    );\r\n\r\n    const previewFileReadimage: any = new Image();\r\n    previewFileReadimage.crossOrigin = \"anonymous\";\r\n\r\n    previewFileReadimage.src = pic.current.src;\r\n\r\n    previewFileReadimage.onload = () => {\r\n      const ratio =\r\n        previewFileReadimage.naturalHeight / previewFileReadimage.naturalWidth;\r\n      const width = interactHeightResolution / ratio;\r\n      const ratiox =\r\n        previewFileReadimage.naturalWidth / previewFileReadimage.naturalHeight;\r\n      const hei = window.innerHeight / ratiox;\r\n      setcanvasInteractWidth(width);\r\n      setcanvasInteractheight(hei);\r\n      setimageWidthcss(postDivRef.current[pey].clientWidth);\r\n      setimageHeightcss(postDivRef.current[pey].clientHeight);\r\n\r\n      if (data !== previewFileReadimage) {\r\n        setdata(previewFileReadimage);\r\n      }\r\n    };\r\n  }, [slides, sliderIndex, postItemsRef, postDivRef, interactHeightResolution]);\r\n\r\n  const acttii = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const [InteractClicked, setInteractClicked] = useState(false);\r\n\r\n  useLayoutEffect(() => {\r\n    if (data) {\r\n      drawInteraction(0, 0, 0);\r\n    }\r\n  }, [data]);\r\n\r\n  const [Tutorial, setTutorial] = useState(false);\r\n\r\n  useLayoutEffect(() => {\r\n    if (itemCLICKED[pey]) {\r\n\r\n      ///stop interaction first \r\n      setinteract(false);\r\n      setinteractContent(\"\");\r\n      setinteracttypeAll(0);\r\n      setfadeout(false);\r\n      ///stop interaction first \r\n\r\n      ////alert('kk');\r\n\r\n      if (HasInteractivity) {\r\n\r\n\r\n\r\n\r\n\r\n        if (showIntImage) {\r\n        } else {\r\n          ////load interact image\r\n          setshowIntImage(true);\r\n        }\r\n\r\n        setTimeout(() => {\r\n          setInteractClicked(true);\r\n          callInteract();\r\n        }, 1500);\r\n      }\r\n      ////check for interaction and display canvas image flip\r\n    } else {\r\n      setinteract(false);\r\n      setinteractContent(\"\");\r\n      setinteracttypeAll(0);\r\n      setfadeout(false);\r\n      ///setTutorial(false);\r\n    }\r\n  }, [itemCLICKED[pey], HasInteractivity, showIntImage, postDivRef]);\r\n\r\n  const tti = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const interacttime = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const interacttime2 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const bh = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const [fadeout, setfadeout] = useState(false);\r\n\r\n  const [pause, setpause] = useState(false);\r\n\r\n\r\n  // State to store the video duration\r\n  const [videoDuration, setVideoDuration] = useState(0);\r\n\r\n\r\n  const IntClose = useCallback(() => {\r\n    if (interact) {\r\n      setpause(false);\r\n\r\n      setHideCann(true);\r\n\r\n      if (interacttime.current) {\r\n        clearTimeout(interacttime.current);\r\n      }\r\n      if (interacttime2.current) {\r\n        clearTimeout(interacttime2.current);\r\n      }\r\n      var duration = 10000;\r\n      if (videoPlayerReff.current && interacttypeAll === 1) { duration = videoPlayerReff.current.duration; }\r\n\r\n      interacttime.current = setTimeout(() => {\r\n        setfadeout(true);\r\n\r\n        if (interacttime2.current) {\r\n          clearTimeout(interacttime2.current);\r\n        }\r\n\r\n\r\n\r\n\r\n        /// setVideoDuration(duration);\r\n\r\n        interacttime2.current = setTimeout(() => {\r\n          ///  dispatch(UpdateInteract('', false));\r\n          setinteract(false);\r\n          setinteractContent(\"\");\r\n          setinteracttypeAll(0);\r\n          setfadeout(false);\r\n        }, 1800);\r\n      }, duration);\r\n    } else {\r\n      setHideCann(false);\r\n    }\r\n  }, [interact, videoPlayerReff, interacttypeAll]);\r\n\r\n  useEffect(() => {\r\n    IntClose();\r\n  }, [interact]);\r\n\r\n  const [HideCann, setHideCann] = useState(false);\r\n\r\n  const sc = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const spin = () => {\r\n    setshowSpin(true);\r\n\r\n    if (sc.current) {\r\n      clearTimeout(sc.current);\r\n    }\r\n    sc.current = setTimeout(() => {\r\n      setshowSpin(false);\r\n    }, 10000);\r\n  };\r\n\r\n\r\n  // Bilinear interpolation function\r\n  function interpolate(imageData: any, x: any, y: any) {\r\n    var x_floor = Math.floor(x);\r\n    var y_floor = Math.floor(y);\r\n\r\n    // Ensure bounds are within the source image\r\n    x_floor = Math.max(0, Math.min(imageData.width - 2, x_floor));\r\n    y_floor = Math.max(0, Math.min(imageData.height - 2, y_floor));\r\n\r\n    var x_frac = x - x_floor;\r\n    var y_frac = y - y_floor;\r\n\r\n    var p1 = getPixel(imageData, x_floor, y_floor);\r\n    var p2 = getPixel(imageData, x_floor + 1, y_floor);\r\n    var p3 = getPixel(imageData, x_floor, y_floor + 1);\r\n    var p4 = getPixel(imageData, x_floor + 1, y_floor + 1);\r\n\r\n    var topInterpolation = interpolatePixelValues(p1, p2, x_frac);\r\n    var bottomInterpolation = interpolatePixelValues(p3, p4, x_frac);\r\n\r\n    return interpolatePixelValues(topInterpolation, bottomInterpolation, y_frac);\r\n  }\r\n\r\n  // Helper function to get a pixel from image data\r\n  function getPixel(imageData: any, x: any, y: any) {\r\n    var index = (y * imageData.width + x) * 4;\r\n    return [\r\n      imageData.data[index],\r\n      imageData.data[index + 1],\r\n      imageData.data[index + 2],\r\n      imageData.data[index + 3]\r\n    ];\r\n  }\r\n\r\n  // Helper function to interpolate between pixel values\r\n  function interpolatePixelValues(p1: any, p2: any, t: any) {\r\n    return [\r\n      (1 - t) * p1[0] + t * p2[0],\r\n      (1 - t) * p1[1] + t * p2[1],\r\n      (1 - t) * p1[2] + t * p2[2],\r\n      (1 - t) * p1[3] + t * p2[3]\r\n    ];\r\n  }\r\n\r\n\r\n\r\n\r\n  const drawInteraction = useCallback(\r\n    (typex: any, event: any, clicked: number) => {\r\n      const adjustedPos = ScaleCoOrdinates(event, 0);\r\n      const xnew = adjustedPos.x;\r\n      const ynew = adjustedPos.y;\r\n\r\n      if (canvasRefIn.current) {\r\n        const context = canvasRefIn.current.getContext(\"2d\");\r\n\r\n        canvasRefIn.current.height = interactHeightResolution;\r\n        canvasRefIn.current.width = canvasInteractWidth;\r\n\r\n        requestAnimationFrame(() => {\r\n          context.drawImage(\r\n            data,\r\n            0,\r\n            0,\r\n            canvasInteractWidth,\r\n            interactHeightResolution\r\n          );\r\n\r\n\r\n\r\n\r\n          var offsety = 0;\r\n\r\n          const isEdge = /Edg/i.test(navigator.userAgent);\r\n          const isFirefox = /Firefox/i.test(navigator.userAgent);\r\n\r\n          if (isEdge) {\r\n            offsety = -20;\r\n          } else if (isFirefox) {\r\n            offsety = -10;\r\n          } else {\r\n            offsety = 0;\r\n          }\r\n\r\n          // Access the total width of the element, including margins and borders\r\n\r\n          var screenWidth = 0;\r\n\r\n          if (isEdge) {\r\n            screenWidth = window.innerWidth * 1.01;\r\n          } else if (isFirefox) {\r\n            screenWidth = window.innerWidth * 0.98;\r\n          } else {\r\n            screenWidth = window.innerWidth * 0.98;\r\n          }\r\n\r\n          var pictureWidth = canvasInteractWidth;\r\n          var offsetX = (screenWidth - pictureWidth) / 2;\r\n\r\n\r\n          var xx = cropInitialIn[0].x;\r\n          var yy = cropInitialIn[0].y;\r\n          const xxw = cropInitialIn2[0].x;\r\n          const yyw = cropInitialIn2[0].y;\r\n\r\n\r\n\r\n\r\n          if (post.rad1 === null) {\r\n            var r1 = 120;\r\n          }\r\n          else {\r\n            // Given values\r\n            const percentageCoverage = post.rad1; // Replace with your actual percentageCoverage\r\n            const canvasWidth = canvasInteractWidth/* your canvas width */;\r\n            // Calculate the radius\r\n            var r1 = (percentageCoverage * canvasWidth) / 200;\r\n\r\n          }\r\n\r\n          if (post.rad2 === null) {\r\n            var r2 = 120;\r\n          } else {\r\n            const percentageCoveragex = post.rad2; // Replace with your actual percentageCoverage\r\n            const canvasWidthx = canvasInteractWidth/* your canvas width */;\r\n            // Calculate the radius\r\n            var r2 = (percentageCoveragex * canvasWidthx) / 200;\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          // Calculate the X-coordinate\r\n          const xCoordinate = (xx / 100) * canvasInteractWidth;\r\n          var x2 = xCoordinate;\r\n\r\n          const yCoordinate = (yy / 100) * interactHeightResolution;\r\n          var y2 = yCoordinate;\r\n\r\n\r\n          const xCoordinatex = (xxw / 100) * canvasInteractWidth;\r\n          var x2b = xCoordinatex;\r\n\r\n          const yCoordinatex = (yyw / 100) * interactHeightResolution;\r\n          var y2b = yCoordinatex;\r\n\r\n\r\n\r\n\r\n\r\n\r\n          context.beginPath();\r\n          context.arc(xnew, ynew, 5, 0, Math.PI * 2);\r\n          context.fillStyle = \"rgba(250, 250,250,0)\";\r\n          context.fill();\r\n          context.closePath();\r\n\r\n          var clikarc1 = context.isPointInPath(0, 0);\r\n          var clikarc2 = context.isPointInPath(0, 0);\r\n\r\n          if (post.interact1a || post.interact1b) {\r\n            //alert('jj');\r\n\r\n            var scaleFactor = 1.03; // You can adjust this value to control the zoom level\r\n\r\n            if (post.interact1a) {\r\n              if (typex === 0 || typex === 3) {\r\n                var imageData = context.getImageData(\r\n                  x2 - 1 - r1,\r\n                  y2 - 0.5 - r1,\r\n                  2.1 * r1,\r\n                  2.1 * r1\r\n                ); // (x, y, width, height)\r\n\r\n                // Create a larger image data for the zoom effect\r\n                var zoomedImageData = context.createImageData(\r\n                  imageData.width * scaleFactor,\r\n                  imageData.height * scaleFactor\r\n                );\r\n\r\n                // Copy pixels from the original image data to the larger image data with bilinear interpolation\r\n                for (var ybb = 0; ybb < zoomedImageData.height; ybb++) {\r\n                  for (var xbb = 0; xbb < zoomedImageData.width; xbb++) {\r\n                    var sourceX = xbb / scaleFactor;\r\n                    var sourceY = ybb / scaleFactor;\r\n\r\n                    // Get the interpolated pixel value\r\n                    var interpolatedPixel = interpolate(imageData, sourceX, sourceY);\r\n\r\n                    // Set the pixel values in the zoomed image data\r\n                    var destIndex = (ybb * zoomedImageData.width + xbb) * 4;\r\n                    zoomedImageData.data[destIndex] = interpolatedPixel[0];\r\n                    zoomedImageData.data[destIndex + 1] = interpolatedPixel[1];\r\n                    zoomedImageData.data[destIndex + 2] = interpolatedPixel[2];\r\n                    zoomedImageData.data[destIndex + 3] = interpolatedPixel[3];\r\n                  }\r\n                }\r\n\r\n                // Apply a light white border at the borders\r\n                var borderWidth = 0; // Adjust the width of the border\r\n                for (var ybb = 0; ybb < zoomedImageData.height; ybb++) {\r\n                  for (var xbb = 0; xbb < zoomedImageData.width; xbb++) {\r\n                    if (\r\n                      xbb < borderWidth ||\r\n                      xbb >= zoomedImageData.width - borderWidth ||\r\n                      ybb < borderWidth ||\r\n                      ybb >= zoomedImageData.height - borderWidth\r\n                    ) {\r\n                      // Apply a light white color to the border\r\n                      var destIndex = (ybb * zoomedImageData.width + xbb) * 4;\r\n                      zoomedImageData.data[destIndex] = 230; // Red channel\r\n                      zoomedImageData.data[destIndex + 1] = 20; // Green channel\r\n                      zoomedImageData.data[destIndex + 2] = 2; // Blue channel\r\n                      zoomedImageData.data[destIndex + 3] = 0.8; // Alpha channel\r\n                    }\r\n                  }\r\n                }\r\n\r\n                // Put the modified pixel data back onto the canvas\r\n                context.putImageData(\r\n                  zoomedImageData,\r\n                  x2 - r1 * scaleFactor,\r\n                  y2 - r1 * scaleFactor\r\n                );\r\n              }\r\n              //////////////////////////////////////////////////////////////////////////////////////////////////\r\n              if ([0, 3].includes(typex)) {\r\n                context.beginPath();\r\n                context.arc(x2, y2, r1, 0, Math.PI * 2);\r\n\r\n                clikarc1 = context.isPointInPath(xnew, ynew);\r\n                context.fillStyle = darkmodeReducer\r\n                  ? \"rgba(50, 50,50,0)\"\r\n                  : \"rgba(250, 250,250,0.0)\";\r\n                context.closePath();\r\n                context.fill();\r\n\r\n              } else if (typex === 1) {\r\n                context.beginPath();\r\n                context.arc(x2, y2, r1, 0, Math.PI * 2);\r\n                clikarc1 = context.isPointInPath(xnew, ynew);\r\n                context.fillStyle = `rgba(250, 250,250,0.0)`;\r\n                context.closePath();\r\n                context.fill();\r\n              }\r\n\r\n\r\n            }\r\n\r\n            if (post.interact1b) {\r\n              if (typex === 0 || typex === 3) {\r\n                var imageData2 = context.getImageData(\r\n                  x2b - 1 - r2,\r\n                  y2b - 0.5 - r2,\r\n                  2.1 * r2,\r\n                  2.1 * r2\r\n                ); // (x, y, width, height)\r\n\r\n\r\n                // Create a larger image data for the zoom effect\r\n                var zoomedImageData2 = context.createImageData(\r\n                  imageData2.width * scaleFactor,\r\n                  imageData2.height * scaleFactor\r\n                );\r\n\r\n                // Copy pixels from the original image data to the larger image data with bilinear interpolation\r\n                for (var ybb = 0; ybb < zoomedImageData2.height; ybb++) {\r\n                  for (var xbb = 0; xbb < zoomedImageData2.width; xbb++) {\r\n                    var sourceX = xbb / scaleFactor;\r\n                    var sourceY = ybb / scaleFactor;\r\n\r\n                    // Get the interpolated pixel value\r\n                    var interpolatedPixel = interpolate(imageData2, sourceX, sourceY);\r\n\r\n                    // Set the pixel values in the zoomed image data\r\n                    var destIndex = (ybb * zoomedImageData2.width + xbb) * 4;\r\n                    zoomedImageData2.data[destIndex] = interpolatedPixel[0];\r\n                    zoomedImageData2.data[destIndex + 1] = interpolatedPixel[1];\r\n                    zoomedImageData2.data[destIndex + 2] = interpolatedPixel[2];\r\n                    zoomedImageData2.data[destIndex + 3] = interpolatedPixel[3];\r\n                  }\r\n                }\r\n\r\n                // Apply a light white border at the borders\r\n                var borderWidth = 0; // Adjust the width of the border\r\n                for (var ybb = 0; ybb < zoomedImageData2.height; ybb++) {\r\n                  for (var xbb = 0; xbb < zoomedImageData2.width; xbb++) {\r\n                    if (\r\n                      xbb < borderWidth ||\r\n                      xbb >= zoomedImageData2.width - borderWidth ||\r\n                      ybb < borderWidth ||\r\n                      ybb >= zoomedImageData2.height - borderWidth\r\n                    ) {\r\n                      // Apply a light white color to the border\r\n                      var destIndex = (ybb * zoomedImageData2.width + xbb) * 4;\r\n                      zoomedImageData2.data[destIndex] = 230; // Red channel\r\n                      zoomedImageData2.data[destIndex + 1] = 20; // Green channel\r\n                      zoomedImageData2.data[destIndex + 2] = 2; // Blue channel\r\n                      zoomedImageData2.data[destIndex + 3] = 0.8; // Alpha channel\r\n                    }\r\n                  }\r\n                }\r\n\r\n                // Put the modified pixel data back onto the canvas\r\n                context.putImageData(\r\n                  zoomedImageData2,\r\n                  x2b - r2 * scaleFactor,\r\n                  y2b - r2 * scaleFactor\r\n                );\r\n              }\r\n              ///////////////////////////////////////////////////////////////////////////////////////////////\r\n              if ([0, 3].includes(typex)) {\r\n                context.beginPath();\r\n                context.arc(x2b, y2b, r2, 0, Math.PI * 2);\r\n                clikarc2 = context.isPointInPath(xnew, ynew);\r\n                context.fillStyle = darkmodeReducer\r\n                  ? \"rgba(50, 50,50,0)\"\r\n                  : \"rgba(250, 250,250,0.0)\";\r\n                context.closePath();\r\n                context.fill();\r\n                ///context.lineWidth = matchMobile ? 9.6 : itemcroptype[pey] === 3 ? 9 : 6;\r\n                ///context.strokeStyle = darkmodeReducer ? \"#ffffff\" : \"#333333\";\r\n                ///context.stroke();\r\n              } else if (typex === 1) {\r\n                context.beginPath();\r\n                context.arc(x2b, y2b, r2, 0, Math.PI * 2);\r\n                clikarc2 = context.isPointInPath(xnew, ynew);\r\n                context.fillStyle = `rgba(250, 250,250,0.0)`;\r\n                context.closePath();\r\n                context.fill();\r\n              }\r\n            }\r\n\r\n            if (typex === 3) {\r\n            } else {\r\n              if (tiim.current) {\r\n                clearTimeout(tiim.current);\r\n              }\r\n              tiim.current = setTimeout(() => {\r\n                if (typex === 0 || typex === 3) {\r\n                  drawInteraction(1, event, 0);\r\n                } else {\r\n                  drawInteraction(0, event, 0);\r\n                }\r\n              }, 130);\r\n            }\r\n            if (canvasRefIn.current) {\r\n              canvasRefIn.current.style.width = `${imageWidthcss}px`;\r\n              canvasRefIn.current.style.height = `${imageHeightcss}px`;\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            if (post.interact1b || post.interact1a) {\r\n              if (clicked === 1 && clikarc2) {\r\n                /// alert(`xx: ${xx}, xnew: ${xnew}`);\r\n\r\n                /// dispatch(UpdateInteract(post.interact1b, true));\r\n                ///stop interaction first \r\n                setInteractedDark(false);\r\n                setinteract(false);\r\n                setinteractContent(\"\");\r\n                setinteracttypeAll(0);\r\n                setfadeout(false);\r\n                ///stop interaction first \r\n                spin();\r\n                setinteract(true);\r\n                setinteractContent(post.interact1b);\r\n                setinteracttypeAll(post.interacttype2);\r\n              } else if (clicked === 1 && clikarc1) {\r\n                /// alert(`xx: ${xx}, xnew: ${xnew}`);\r\n\r\n                ///stop interaction first \r\n                setInteractedDark(false);\r\n                setinteract(false);\r\n                setinteractContent(\"\");\r\n                setinteracttypeAll(0);\r\n                setfadeout(false);\r\n                ///stop interaction first \r\n                spin();\r\n                setinteract(true);\r\n                setinteractContent(post.interact1a);\r\n                setinteracttypeAll(post.interacttype1);\r\n              } else if (clicked === 1) {\r\n\r\n\r\n                switch (event.detail) {\r\n                  case 1:\r\n                    setinteract(false);\r\n                    setinteractContent(\"\");\r\n                    setinteracttypeAll(0);\r\n                    setfadeout(false);\r\n\r\n                    context.clearRect(0, 0, canvasRefIn.current.width, canvasRefIn.current.width);\r\n\r\n                    if (tiim.current) {\r\n                      clearTimeout(tiim.current);\r\n                    }\r\n                    setHasInteractivity(false);\r\n                    clickslider(event);\r\n                    break;\r\n\r\n                }\r\n\r\n\r\n                /// alert('jj');\r\n              } else {\r\n              }\r\n            } else {\r\n            }\r\n\r\n            //alert(imageHeightcss);\r\n          }\r\n        });\r\n      }\r\n    },\r\n    [data, imageWidthcss, imageHeightcss, interact]\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const In = (e: any) => {\r\n    if (itemCLICKED[pey]) {\r\n      ////onMouseDown onMouseMove\r\n      ////touchDown = e.clientX\r\n      const touchDown = e.touches[0].clientX;\r\n      setTouchPosition(touchDown);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH MOVE EVENT\r\n  const handleTouchMove = (e: any) => {\r\n    if (itemCLICKED[pey]) {\r\n      if (handleTouchMoveTimer.current) {\r\n        clearTimeout(handleTouchMoveTimer.current);\r\n      }\r\n      handleTouchMoveTimer.current = setTimeout(function () {\r\n        const touchDown = touchPosition;\r\n\r\n        if (touchDown === null) {\r\n          return;\r\n        }\r\n        ////currentTouch = e.clientX\r\n        const currentTouch = e.touches[0].clientX;\r\n        const diff = touchDown - currentTouch;\r\n\r\n        if (diff > 40) {\r\n          nextSlide();\r\n        } else if (diff < -40) {\r\n          prevSlide();\r\n        } else {\r\n        }\r\n\r\n        setTouchPosition(null);\r\n        return false;\r\n      }, 200);\r\n\r\n      return false;\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\r\n  const waitChangeIndex = (data: number, state: any) => {\r\n    if (waitChangeIndexTimer.current) {\r\n      clearTimeout(waitChangeIndexTimer.current);\r\n    }\r\n    waitChangeIndexTimer.current = setTimeout(function () {\r\n      setSliderIndexSlow((state: any) => data);\r\n    }, 500);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const nextSlide = () => {\r\n    AUTOSlideLongImages(pey);\r\n\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      setshowSliderLoader(true);\r\n      if (autoPlayTimer.current) {\r\n        clearTimeout(autoPlayTimer.current);\r\n      }\r\n    }\r\n\r\n    ///set((state) => (state + 1) % slides.length);\r\n    if (sliderIndex === slides.length - 1) {\r\n      setSliderIndex((sliderIndex: any) => 0);\r\n      waitChangeIndex(0, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex: any) => sliderIndex + 1);\r\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\r\n    }\r\n\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      if (callAutoPlayAgainTimer.current) {\r\n        clearTimeout(callAutoPlayAgainTimer.current);\r\n      }\r\n      callAutoPlayAgainTimer.current = setTimeout(function () {\r\n        SliderAutoPlay(1);\r\n      }, sliderDuration);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PREV SLIDE\r\n  const prevSlide = () => {\r\n    AUTOSlideLongImages(pey);\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      setshowSliderLoader(true);\r\n      if (autoPlayTimer.current) {\r\n        clearTimeout(autoPlayTimer.current);\r\n      }\r\n    }\r\n\r\n    if (sliderIndex === 0) {\r\n      setSliderIndex((sliderIndex: any) => slides.length - 1);\r\n      waitChangeIndex(slides.length - 1, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex: any) => sliderIndex - 1);\r\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\r\n    }\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      if (callAutoPlayAgainTimer.current) {\r\n        clearTimeout(callAutoPlayAgainTimer.current);\r\n      }\r\n      callAutoPlayAgainTimer.current = setTimeout(function () {\r\n        SliderAutoPlay(1);\r\n      }, sliderDuration);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// CHANGE SLIDER CONTENT USING  DOTS\r\n  const GotoDots = (clickedDot: number) => {\r\n    setSliderIndex((sliderIndex: any) => clickedDot);\r\n    waitChangeIndex(clickedDot, sliderIndex);\r\n  };\r\n\r\n\r\n  // Function to play the video when it's loaded\r\n  const handleVideoLoad = () => {\r\n\r\n    if (videoPlayerReff.current) {\r\n      videoPlayerReff.current.play();\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"3vh\",\r\n          padding: \"0px\",\r\n          zIndex: \"200\",\r\n        }}\r\n      >\r\n        {Tutorial ? (\r\n          <Grid\r\n            item\r\n            onClick={() => {\r\n              setTutorial(false);\r\n            }}\r\n            xs={6}\r\n            style={{\r\n              padding: \"10px\",\r\n              backgroundColor: \"#00ccff\",\r\n              borderRadius: \"8%\",\r\n              fontFamily: \"sans-serif\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Mobile Interaction Still In Development, Coming Soon 😊\r\n          </Grid>\r\n        ) : null}\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        onTouchStart={In}\r\n        onTouchMove={handleTouchMove}\r\n        xs={12}\r\n        style={{\r\n          position: \"relative\",\r\n          height: itemCLICKED[pey]\r\n            ? `${itemOriginalPostHeight[pey]}px`\r\n            : type === 1\r\n              ? `${itemOriginalPostHeight[pey]}px`\r\n              : `${itemFinalPostHeight[pey]}px`,\r\n          padding: \"0px\",\r\n        }}\r\n      >\r\n        <Loader\r\n          post={post}\r\n          autoSlideDisplay={autoSlideDisplay}\r\n          sliderLoader={sliderLoader}\r\n        />\r\n        <div\r\n          onMouseOver={() => {\r\n            setZoomOutBigger(true);\r\n          }}\r\n          onMouseOut={() => {\r\n            setZoomOutBigger(false);\r\n          }}\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 30,\r\n            left: slides.length > 1 ? 165 : 25,\r\n            cursor: \"pointer\",\r\n            top: slides.length > 1 ? \"2.4vh\" : \"2.4vh\",\r\n            fontFamily: \"Arial, Helvetica, sans-serif\",\r\n            fontWeight: \"bolder\",\r\n            opacity: \"0.7\",\r\n            height: \"0px\",\r\n            padding: \"0px\",\r\n          }}\r\n        >\r\n          <span\r\n            onClick={() => {\r\n              setsliderIndexMini(sliderIndex);\r\n              setzoomClickedIndex(pey + 1);\r\n              type === 1 ? setminiProfile(false) : setminiProfile(true);\r\n            }}\r\n            className={darkmodeReducer ? \"turlight\" : \"turdark\"}\r\n            style={{\r\n              padding: \"1px\",\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            <ZoomOutIcon\r\n              className={\r\n                darkmodeReducer\r\n                  ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \"\r\n                  : \"make-small-icons-clickable-lightab  dontallowhighlighting zuperkingIcon  \"\r\n              }\r\n              style={{\r\n                fontSize: \"2.2vw\",\r\n                display: \"none\",\r\n              }}\r\n            />\r\n          </span>\r\n        </div>{\" \"}\r\n        {showSpin ? (\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{ position: \"absolute\", zIndex: 100, padding: \"3vh\" }}\r\n          >\r\n            <div\r\n              className=\"spinner zuperxyinfo\"\r\n              style={{\r\n                borderTop: `8px solid ${post.color1}`,\r\n                boxShadow: `0 0 8.5px, ${post.color1}`,\r\n              }}\r\n            ></div>\r\n          </Grid>\r\n        ) : null}\r\n        {slides.length > 0 ? (\r\n          interactContent ? null : (\r\n            <SliderNumber\r\n              ActiveCanvas={ActiveCanvas}\r\n              post={post}\r\n              HasInteractivity={HasInteractivity}\r\n              postDatainnerInteraction1={postDatainnerInteraction1}\r\n              postDatainnerInteraction2={postDatainnerInteraction2}\r\n              startSlider={startSlider}\r\n              ActiveAutoPlay={ActiveAutoPlay}\r\n              stopSlider={stopSlider}\r\n              activeSlide={sliderIndexSlow}\r\n              total={slides.length}\r\n              itemCLICKED={itemCLICKED}\r\n              pey={pey}\r\n            />\r\n          )\r\n        ) : null}\r\n        <Arrow\r\n          itemCLICKED={itemCLICKED}\r\n          pey={pey}\r\n          total={slides.length}\r\n          direction=\"left\"\r\n          clickSlideprev={prevSlide}\r\n          clickSlidenext={nextSlide}\r\n          itemOriginalPostHeight={itemOriginalPostHeight}\r\n        />\r\n        {transitions((style, i) => (\r\n          <div key={i}>\r\n            <animated.img\r\n              onLoad={(e: any) => {\r\n                onPostsItemload(e, pey, i);\r\n              }}\r\n              onMouseDown={clickslider}\r\n              ref={addPostItemsRef}\r\n              className={\r\n                darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n              }\r\n              src={slidesThumb[i]}\r\n              alt=\"a superstarz post \"\r\n              style={{\r\n                ...style,\r\n                cursor: \"pointer\",\r\n                width: \"100%\",\r\n                height: type === 1 ? `auto` : itemheight[pey],\r\n                position: \"absolute\",\r\n                padding: \"0px\",\r\n                objectFit: \"cover\",\r\n                objectPosition:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"50% top\"\r\n                    : \"50% 50\",\r\n                zIndex: 0,\r\n\r\n\r\n              }}\r\n            />\r\n\r\n            <img\r\n              ref={pic}\r\n              onMouseDown={clickslider}\r\n              className={\r\n                darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n              }\r\n              src={slides[i]}\r\n              alt=\"a clikbate post \"\r\n              style={{\r\n\r\n                cursor: \"pointer\",\r\n                width: \"100%\",\r\n                height: type === 1 ? `auto` : itemheight[pey],\r\n                position: \"absolute\",\r\n                padding: \"0px\",\r\n                objectFit: \"cover\",\r\n                objectPosition:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"50% top\"\r\n                    : \"50% 50\",\r\n                zIndex: 1,\r\n\r\n              }}\r\n              crossOrigin=\"anonymous\"\r\n            />\r\n\r\n            {i === 0 && HasInteractivity && ActiveCanvas === pey ? (\r\n              <canvas\r\n                onMouseUp={(e: any) => {\r\n                  handleTouchStartIn(e, 0);\r\n                }}\r\n                onTouchStart={(e: any) => {\r\n                  handleTouchStartIn(e, 1);\r\n                }}\r\n                ref={canvasRefIn}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  padding: \"0px\",\r\n                  position: \"absolute\",\r\n                  zIndex: 11,\r\n                  height: '0px',\r\n                  width: '0px',\r\n                  top: \"0vh\",\r\n                  margin: \"auto\",\r\n                  opacity: HideCann ? 0 : 1,\r\n                  visibility: itemCLICKED[pey] ? 'visible' : 'hidden',\r\n\r\n\r\n                }}\r\n              />\r\n            ) : null}\r\n\r\n\r\n\r\n\r\n\r\n            {interact && HasInteractivity && ActiveCanvas === pey ? (\r\n\r\n\r\n              interacttypeAll === 1 ?\r\n                <video\r\n                  onLoadedData={handleVideoLoad}\r\n                  ref={videoPlayerReff} src={interactContent} style={{\r\n                    filter: InteractedDark ? 'brightness(40%)' : '',\r\n                    cursor: \"pointer\",\r\n                    height: \"100%\",\r\n                    objectFit: \"contain\",\r\n                    zIndex: 50,\r\n                    position: \"absolute\",\r\n                    margin: \"auto\",\r\n                    textAlign: \"center\",\r\n                    top: \"0vh\",\r\n                    width: \"100%\",\r\n                    backgroundColor: darkmodeReducer\r\n                      ? \"rgb(20,20,20,0.82)\"\r\n                      : \"rgb(210,210,210,0.77)\",\r\n\r\n                  }}></video> :\r\n                <img\r\n                  className={fadeout ? \"fadeboyinOut\" : \"fadeboyinInt\"}\r\n                  src={interactContent}\r\n\r\n                  onClick={() => {\r\n\r\n\r\n\r\n                    if (InteractedDark) {\r\n                      ////////\r\n                      if (InteractTimerxx.current) {\r\n                        clearTimeout(InteractTimerxx.current);\r\n                      }\r\n                      dispatch(UpdateInteract(interactContent, true));\r\n                      setInteractedDark(false);\r\n                      setinteract(false);\r\n                      setinteractContent(\"\");\r\n                      setinteracttypeAll(0);\r\n                      setfadeout(false);\r\n                      if (sc.current) {\r\n                        clearTimeout(sc.current);\r\n                      }\r\n                      setshowSpin(false);\r\n                      /////////////////\r\n                    } else {\r\n                      setInteractedDark(true);\r\n                      if (InteractTimerxx.current) {\r\n                        clearTimeout(InteractTimerxx.current);\r\n                      }\r\n                      InteractTimerxx.current = setTimeout(() => {\r\n                        setInteractedDark(false);\r\n                        setinteract(false);\r\n                        setinteractContent(\"\");\r\n                        setinteracttypeAll(0);\r\n                        setfadeout(false);\r\n                        if (sc.current) {\r\n                          clearTimeout(sc.current);\r\n                        }\r\n                        setshowSpin(false);\r\n                      }, 1100)\r\n\r\n                    }\r\n\r\n\r\n                  }}\r\n                  style={{\r\n                    filter: InteractedDark ? 'brightness(40%)' : '',\r\n                    cursor: \"pointer\",\r\n                    height: \"100%\",\r\n                    objectFit: \"contain\",\r\n                    zIndex: 50,\r\n                    position: \"absolute\",\r\n                    margin: \"auto\",\r\n                    textAlign: \"center\",\r\n                    top: \"0vh\",\r\n                    width: \"100%\",\r\n                    backgroundColor: darkmodeReducer\r\n                      ? \"rgb(20,20,20,0.82)\"\r\n                      : \"rgb(210,210,210,0.77)\",\r\n                  }}\r\n                />\r\n            ) : null}\r\n          </div>\r\n        ))}{\" \"}\r\n        <Dots\r\n          total={slides.length}\r\n          itemCLICKED={itemCLICKED}\r\n          pey={pey}\r\n          GotoDots={GotoDots}\r\n          slides={slides}\r\n          activeSlide={sliderIndexSlow}\r\n        />\r\n        {post.interact1a && HasInteractivity && ActiveCanvas === pey ? (\r\n          <img\r\n            src={post.interact1a}\r\n            style={{\r\n              height: \"100%\",\r\n              objectFit: \"contain\",\r\n              zIndex: 50,\r\n              position: \"absolute\",\r\n              margin: \"auto\",\r\n              textAlign: \"center\",\r\n              top: \"-200000vh\",\r\n              width: \"100%\",\r\n            }}\r\n          />\r\n        ) : null}\r\n        {post.interact1b && HasInteractivity && ActiveCanvas === pey ? (\r\n          <img\r\n            src={post.interact1b}\r\n            style={{\r\n              cursor: \"pointer\",\r\n              height: \"100%\",\r\n              objectFit: \"contain\",\r\n              zIndex: 50,\r\n              position: \"absolute\",\r\n              margin: \"auto\",\r\n              textAlign: \"center\",\r\n              top: \"-200000vh\",\r\n              width: \"100%\",\r\n            }}\r\n          />\r\n        ) : null}\r\n\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Slider = React.memo(Sliderx);\r\n"]},"metadata":{},"sourceType":"module"}