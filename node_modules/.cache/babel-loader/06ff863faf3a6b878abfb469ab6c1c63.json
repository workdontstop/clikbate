{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\OptionsSlider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { matchPc, matchTablet } from \"../DetectDevice\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useSelector } from \"react-redux\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction OptionsSliderx({\n  getSliderWidth,\n  typeTop,\n  setShowOptionsmenu,\n  showOptionsmenu\n}) {\n  _s();\n\n  var getSliderWidthNew = matchPc ? getSliderWidth / 1.5 : matchTablet ? getSliderWidth / 1.02 : getSliderWidth / 0.77;\n  var optionsClickType = matchPc ? 1 : 0;\n  const optionsCollectImageRef = useRef(null);\n  const optionsImages = [\"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\", \"5.jpg\"];\n  const [translate, setTranslate] = useState(0);\n  const [stalestate] = useState(1);\n  const [ActiveSlide, setActiveSlide] = useState(0);\n  const [ShowHideNegativeValue, setShowHideNegativeValue] = useState(\"-\");\n  const [touchPosition, setTouchPosition] = useState(null);\n  const handleTouchMoveTimer = useRef(null);\n  const [transitionFast, settransitionFast] = useState(false);\n  const prevJoltTimer = useRef(null);\n  const nextJoltTimer = useRef(null);\n  const [optionsShow, setoptionsShow] = useState(true); ///\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  ///OPTIONS SLIDER VARIABLES DISCRIBING ITEMS\n\n  var optionsNameData = [\"filter feeds\", \"albums\", \"playlist\", \"showroom\", \"top posts\", \"settings\"]; ///\n  ///\n  ///\n  ///CREATE OPTIONS SLIDER ANIMATION WITH  REACT SPRING\n\n  const modalanimation = useSpring({\n    config: {\n      mass: 1,\n      tension: 120,\n      friction: 14\n    },\n    transform: `translateX(${ShowHideNegativeValue}${translate}px)`,\n    transition: transitionFast ? \"0s\" : \"0.15s\",\n    height: \"auto\",\n    display: \"flex\",\n    width: `auto`,\n    padding: \"0px\",\n    margin: \"auto\",\n    paddingLeft: typeTop ? matchPc ? \"0px\" : \"8px\" : \"0px\"\n  }); ///\n  ///\n  ///\n  /// ACTIVATES SLIDER ITEM TO BE VIEWED ON CLICK\n\n  const clickOptions = (i, type) => {\n    if (type === 1) {\n      setTranslate(stalestate + i);\n      setActiveSlide(i);\n    } else {\n      setTranslate(getSliderWidthNew * i + 1.5 * i);\n      setActiveSlide(i);\n    }\n  }; ///\n  ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n\n  const {\n    color,\n    colordark\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorDarkReducer = colordark; ///\n  ///\n  ///\n  ///PUSH OPTIONS SLIDE A LITTLE BIT ON LAST SLIDE ITEM\n\n  const TouchJoltOnLastNEXT = () => {\n    setShowHideNegativeValue(\"-\");\n    var i = ActiveSlide;\n    var colorPaddingAllowance = 1.67 + i / 10;\n    var getSliderWidthNewx = getSliderWidthNew / 2;\n    setTranslate(getSliderWidthNew * i + getSliderWidthNewx);\n    nextJoltTimer.current = setTimeout(function () {\n      setTranslate(getSliderWidthNew * 0 + colorPaddingAllowance * 0);\n      setActiveSlide(ActiveSlide => 0);\n    }, 200);\n  }; ///\n  ///\n  ///\n  ///PUSH OPTIONS SLIDE A LITTLE BIT ON FIRST SLIDE ITEM\n\n\n  const TouchJoltOnLastPREV = () => {\n    setShowHideNegativeValue(\"\");\n    var i = ActiveSlide;\n    var colorPaddingAllowance = 1.67 + i / 10;\n    var ix = optionsImages.length - 1;\n    var getSliderWidthNewx = getSliderWidthNew / 2;\n    setTranslate(getSliderWidthNewx);\n    prevJoltTimer.current = setTimeout(function () {\n      setShowHideNegativeValue(\"-\");\n      setTranslate(getSliderWidthNew * ix + colorPaddingAllowance * ix);\n      setActiveSlide(ActiveSlide => ix);\n    }, 200);\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE  FOR PC\n\n\n  const nextSlidePc = () => {\n    if (typeTop) {\n      closeoptionsslide();\n    } else {\n      var i = ActiveSlide + 1;\n      setShowHideNegativeValue(\"-\"); ///set((state) => (state + 1) % slides.length)\n\n      if (ActiveSlide === optionsImages.length - 1) {\n        settransitionFast(true);\n        setTranslate(0);\n        setActiveSlide(0);\n      } else {\n        settransitionFast(false);\n        setTranslate(stalestate + i);\n        setActiveSlide(i);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE\n\n\n  const nextSlide = () => {\n    var i = ActiveSlide + 1;\n    var colorPaddingAllowance = 1.67 + i / 10; ///set((state) => (state + 1) % slides.length)\n\n    if (ActiveSlide === optionsImages.length - 1) {\n      settransitionFast(true);\n      TouchJoltOnLastNEXT();\n    } else {\n      if (nextJoltTimer.current) {\n        clearTimeout(nextJoltTimer.current);\n      }\n\n      setShowHideNegativeValue(\"-\");\n      settransitionFast(false);\n      setTranslate(getSliderWidthNew * i + colorPaddingAllowance * i);\n      setActiveSlide(ActiveSlide => ActiveSlide + 1);\n    }\n  }; ///\n  ///\n  ///\n  /// PREV SLIDE\n\n\n  const prevSlide = () => {\n    ///set((state) => (state + 1) % slides.length)\n    var i = ActiveSlide - 1;\n    var colorPaddingAllowance = 1.67 + i / 10;\n\n    if (ActiveSlide === 0) {\n      settransitionFast(true);\n\n      if (typeTop) {\n        closeoptionsslide();\n      } else {\n        TouchJoltOnLastPREV();\n      }\n    } else {\n      if (prevJoltTimer.current) {\n        clearTimeout(prevJoltTimer.current);\n      }\n\n      setShowHideNegativeValue(\"-\");\n      settransitionFast(false);\n      setTranslate(getSliderWidthNew * i + colorPaddingAllowance * i);\n      setActiveSlide(ActiveSlide => ActiveSlide - 1);\n    }\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n\n  const handleTouchStartOptions = e => {\n    ////onMouseDown onMouseMove\n    ////touchDown = e.clientX\n    const touchDown = e.touches[0].clientX;\n    setTouchPosition(touchDown);\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH MOVE EVENT\n\n\n  const handleTouchMoveOptions = e => {\n    if (handleTouchMoveTimer.current) {\n      clearTimeout(handleTouchMoveTimer.current);\n    }\n\n    handleTouchMoveTimer.current = setTimeout(function () {\n      const touchDown = touchPosition;\n\n      if (touchDown === null) {\n        return;\n      } ////currentTouch = e.clientX\n\n\n      const currentTouch = e.touches[0].clientX;\n      const diff = touchDown - currentTouch;\n\n      if (diff > 18) {\n        nextSlide();\n      } else if (diff < -18) {\n        prevSlide();\n      } else {}\n\n      setTouchPosition(null);\n      return false;\n    }, 50);\n    return false;\n  };\n\n  const closeoptionsslide = () => {\n    setShowOptionsmenu(false);\n  };\n\n  var visibleOptions = \"\";\n\n  if (showOptionsmenu && typeTop) {\n    visibleOptions = \"visible\";\n  } else if (showOptionsmenu) {\n    visibleOptions = \"hidden\";\n  } else {}\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: optionsShow ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: typeTop ? darkmodeReducer ? `optionsTop-background-dark ` : `optionsTop-background-light ` : \"\",\n        onTouchStart: handleTouchStartOptions,\n        onTouchMove: handleTouchMoveOptions,\n        style: {\n          padding: \"0px\",\n          top: matchPc ? typeTop ? \"-2vh\" : \"0vh\" : \"0vh\",\n          position: \"relative\",\n          margin: \"0 auto\",\n          overflow: \"hidden\",\n          left: \"0px\",\n          height: typeTop ? matchPc ? \"21vh\" : \"18.5vh\" : \"auto\",\n          paddingBottom: \"1px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(animated.div, {\n          ref: optionsCollectImageRef,\n          style: modalanimation,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              margin: \"auto\",\n              textAlign: \"center\",\n              position: \"relative\",\n              bottom: typeTop ? \"-1.4em\" : \"0.2em\",\n              left: \"-4px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CircleIcon, {\n              onClick: () => {\n                nextSlidePc();\n              },\n              className: \"buttonshake\",\n              style: {\n                fontSize: \"1.2vw\",\n                cursor: \"pointer\",\n                color: darkmodeReducer ? typeTop ? \"rgba(200, 200, 200, 0.5)\" : \"rgba(200, 200, 200, 0.1)\" : typeTop ? \"rgba(005, 005, 005, 0.4)\" : \"rgba(005, 005, 005, 0.2)\",\n                display: matchPc ? \"block\" : \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), optionsImages.map((im, i) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [typeTop ? /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              style: {\n                margin: \"auto\",\n                textAlign: \"center\",\n                position: \"relative\",\n                top: matchPc ? \"0.8em\" : \"0.54em\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                style: {\n                  fontSize: matchPc ? \"1.1vw\" : \"2vh\",\n                  fontWeight: \"bolder\",\n                  fontFamily: \"Arial, Helvetica, sans-serif\",\n                  visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\n                  color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\"\n                },\n                children: [\" \", optionsNameData[i]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 21\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: ` ${optionsNameData[i]}  option`,\n              onClick: () => {\n                clickOptions(i, optionsClickType);\n              },\n              style: {\n                cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\n                width: `${getSliderWidthNew}px`,\n                height: `${getSliderWidthNew}px`,\n                borderRadius: \"50%\",\n                padding: \"0px\",\n                objectFit: \"cover\",\n                marginLeft: \"2px\",\n                marginTop: \"14px\",\n                boxShadow: darkmodeReducer ? ActiveSlide === i ? `0 0 5px ${colorDarkReducer}` : \"\" : ActiveSlide === i ? `0 0 3.5px ${colorReducer}` : \"\",\n                marginBottom: \"2.2px\"\n              },\n              src: `./images/options/${im}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 19\n            }, this), typeTop ? null : /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              style: {\n                margin: \"auto\",\n                textAlign: \"center\",\n                position: \"relative\",\n                bottom: \"0.2em\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                style: {\n                  fontSize: matchPc ? \"1.1vw\" : \"2vh\",\n                  fontWeight: \"bolder\",\n                  fontFamily: \"Arial, Helvetica, sans-serif\",\n                  visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\n                  color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\"\n                },\n                children: [\" \", optionsNameData[i]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 9,\n          style: {\n            textAlign: \"right\",\n            marginTop: matchPc ? \"6.4vh\" : matchTablet ? \"8.8vh\" : \"8.3vh\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              padding: \"16px\",\n              cursor: \"pointer\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CircleIcon, {\n              style: {\n                fontSize: matchPc ? \"1.2vw\" : matchTablet ? \"2.5vh\" : \"2.3vh\",\n                color: darkmodeReducer ? \"rgba(200, 200, 200, 0.1)\" : \"rgba(005, 005, 005, 0.2)\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n}\n\n_s(OptionsSliderx, \"YRWM8DcVnVVyki8lJadNliJTCdE=\", false, function () {\n  return [useSelector, useSpring, useSelector];\n});\n\n_c = OptionsSliderx;\nexport const OptionsSlider = /*#__PURE__*/React.memo(OptionsSliderx);\n_c2 = OptionsSlider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OptionsSliderx\");\n$RefreshReg$(_c2, \"OptionsSlider\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/OptionsSlider.tsx"],"names":["React","useRef","useState","Grid","matchPc","matchTablet","useSpring","animated","useSelector","CircleIcon","OptionsSliderx","getSliderWidth","typeTop","setShowOptionsmenu","showOptionsmenu","getSliderWidthNew","optionsClickType","optionsCollectImageRef","optionsImages","translate","setTranslate","stalestate","ActiveSlide","setActiveSlide","ShowHideNegativeValue","setShowHideNegativeValue","touchPosition","setTouchPosition","handleTouchMoveTimer","transitionFast","settransitionFast","prevJoltTimer","nextJoltTimer","optionsShow","setoptionsShow","darkmode","state","GlobalReducer","darkmodeReducer","optionsNameData","modalanimation","config","mass","tension","friction","transform","transition","height","display","width","padding","margin","paddingLeft","clickOptions","i","type","color","colordark","GlobalReducerColor","colorReducer","colorDarkReducer","TouchJoltOnLastNEXT","colorPaddingAllowance","getSliderWidthNewx","current","setTimeout","TouchJoltOnLastPREV","ix","length","nextSlidePc","closeoptionsslide","nextSlide","clearTimeout","prevSlide","handleTouchStartOptions","e","touchDown","touches","clientX","handleTouchMoveOptions","currentTouch","diff","visibleOptions","top","position","overflow","left","paddingBottom","textAlign","bottom","fontSize","cursor","map","im","fontWeight","fontFamily","visibility","borderRadius","objectFit","marginLeft","marginTop","boxShadow","marginBottom","OptionsSlider","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\n\r\nfunction OptionsSliderx({\r\n  getSliderWidth,\r\n  typeTop,\r\n  setShowOptionsmenu,\r\n  showOptionsmenu,\r\n}: any) {\r\n  var getSliderWidthNew = matchPc\r\n    ? getSliderWidth / 1.5\r\n    : matchTablet\r\n    ? getSliderWidth / 1.02\r\n    : getSliderWidth / 0.77;\r\n\r\n  var optionsClickType: number = matchPc ? 1 : 0;\r\n\r\n  const optionsCollectImageRef = useRef<HTMLDivElement>(null);\r\n  const optionsImages = [\"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\", \"5.jpg\"];\r\n  const [translate, setTranslate] = useState(0);\r\n  const [stalestate] = useState(1);\r\n\r\n  const [ActiveSlide, setActiveSlide] = useState(0);\r\n  const [ShowHideNegativeValue, setShowHideNegativeValue] = useState(\"-\");\r\n\r\n  const [touchPosition, setTouchPosition] = useState(null);\r\n  const handleTouchMoveTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const [transitionFast, settransitionFast] = useState<boolean>(false);\r\n\r\n  const prevJoltTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const nextJoltTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const [optionsShow, setoptionsShow] = useState<boolean>(true);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///OPTIONS SLIDER VARIABLES DISCRIBING ITEMS\r\n  var optionsNameData = [\r\n    \"filter feeds\",\r\n    \"albums\",\r\n    \"playlist\",\r\n    \"showroom\",\r\n    \"top posts\",\r\n    \"settings\",\r\n  ];\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE OPTIONS SLIDER ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      mass: 1,\r\n      tension: 120,\r\n      friction: 14,\r\n    },\r\n    transform: `translateX(${ShowHideNegativeValue}${translate}px)`,\r\n    transition: transitionFast ? \"0s\" : \"0.15s\",\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    width: `auto`,\r\n    padding: \"0px\",\r\n    margin: \"auto\",\r\n    paddingLeft: typeTop ? (matchPc ? \"0px\" : \"8px\") : \"0px\",\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// ACTIVATES SLIDER ITEM TO BE VIEWED ON CLICK\r\n  const clickOptions = (i: number, type: number) => {\r\n    if (type === 1) {\r\n      setTranslate(stalestate + i);\r\n      setActiveSlide(i);\r\n    } else {\r\n      setTranslate(getSliderWidthNew * i + 1.5 * i);\r\n      setActiveSlide(i);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n    };\r\n  }\r\n  const { color, colordark } = useSelector((state: RootStateReducerColor) => ({\r\n    ...state.GlobalReducerColor,\r\n  }));\r\n  const colorReducer = color;\r\n  const colorDarkReducer = colordark;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///PUSH OPTIONS SLIDE A LITTLE BIT ON LAST SLIDE ITEM\r\n  const TouchJoltOnLastNEXT = () => {\r\n    setShowHideNegativeValue(\"-\");\r\n    var i = ActiveSlide;\r\n    var colorPaddingAllowance = 1.67 + i / 10;\r\n    var getSliderWidthNewx = getSliderWidthNew / 2;\r\n    setTranslate(getSliderWidthNew * i + getSliderWidthNewx);\r\n    nextJoltTimer.current = setTimeout(function () {\r\n      setTranslate(getSliderWidthNew * 0 + colorPaddingAllowance * 0);\r\n      setActiveSlide((ActiveSlide) => 0);\r\n    }, 200);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///PUSH OPTIONS SLIDE A LITTLE BIT ON FIRST SLIDE ITEM\r\n  const TouchJoltOnLastPREV = () => {\r\n    setShowHideNegativeValue(\"\");\r\n    var i = ActiveSlide;\r\n    var colorPaddingAllowance = 1.67 + i / 10;\r\n    var ix = optionsImages.length - 1;\r\n    var getSliderWidthNewx = getSliderWidthNew / 2;\r\n    setTranslate(getSliderWidthNewx);\r\n    prevJoltTimer.current = setTimeout(function () {\r\n      setShowHideNegativeValue(\"-\");\r\n      setTranslate(getSliderWidthNew * ix + colorPaddingAllowance * ix);\r\n      setActiveSlide((ActiveSlide) => ix);\r\n    }, 200);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE  FOR PC\r\n  const nextSlidePc = () => {\r\n    if (typeTop) {\r\n      closeoptionsslide();\r\n    } else {\r\n      var i = ActiveSlide + 1;\r\n      setShowHideNegativeValue(\"-\");\r\n      ///set((state) => (state + 1) % slides.length)\r\n      if (ActiveSlide === optionsImages.length - 1) {\r\n        settransitionFast(true);\r\n        setTranslate(0);\r\n        setActiveSlide(0);\r\n      } else {\r\n        settransitionFast(false);\r\n        setTranslate(stalestate + i);\r\n        setActiveSlide(i);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const nextSlide = () => {\r\n    var i = ActiveSlide + 1;\r\n    var colorPaddingAllowance = 1.67 + i / 10;\r\n    ///set((state) => (state + 1) % slides.length)\r\n    if (ActiveSlide === optionsImages.length - 1) {\r\n      settransitionFast(true);\r\n      TouchJoltOnLastNEXT();\r\n    } else {\r\n      if (nextJoltTimer.current) {\r\n        clearTimeout(nextJoltTimer.current);\r\n      }\r\n      setShowHideNegativeValue(\"-\");\r\n      settransitionFast(false);\r\n      setTranslate(getSliderWidthNew * i + colorPaddingAllowance * i);\r\n      setActiveSlide((ActiveSlide) => ActiveSlide + 1);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PREV SLIDE\r\n  const prevSlide = () => {\r\n    ///set((state) => (state + 1) % slides.length)\r\n    var i = ActiveSlide - 1;\r\n    var colorPaddingAllowance = 1.67 + i / 10;\r\n    if (ActiveSlide === 0) {\r\n      settransitionFast(true);\r\n      if (typeTop) {\r\n        closeoptionsslide();\r\n      } else {\r\n        TouchJoltOnLastPREV();\r\n      }\r\n    } else {\r\n      if (prevJoltTimer.current) {\r\n        clearTimeout(prevJoltTimer.current);\r\n      }\r\n      setShowHideNegativeValue(\"-\");\r\n      settransitionFast(false);\r\n      setTranslate(getSliderWidthNew * i + colorPaddingAllowance * i);\r\n      setActiveSlide((ActiveSlide) => ActiveSlide - 1);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const handleTouchStartOptions = (e: any) => {\r\n    ////onMouseDown onMouseMove\r\n    ////touchDown = e.clientX\r\n    const touchDown = e.touches[0].clientX;\r\n    setTouchPosition(touchDown);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH MOVE EVENT\r\n  const handleTouchMoveOptions = (e: any) => {\r\n    if (handleTouchMoveTimer.current) {\r\n      clearTimeout(handleTouchMoveTimer.current);\r\n    }\r\n    handleTouchMoveTimer.current = setTimeout(function () {\r\n      const touchDown = touchPosition;\r\n\r\n      if (touchDown === null) {\r\n        return;\r\n      }\r\n      ////currentTouch = e.clientX\r\n      const currentTouch = e.touches[0].clientX;\r\n      const diff = touchDown - currentTouch;\r\n\r\n      if (diff > 18) {\r\n        nextSlide();\r\n      } else if (diff < -18) {\r\n        prevSlide();\r\n      } else {\r\n      }\r\n\r\n      setTouchPosition(null);\r\n      return false;\r\n    }, 50);\r\n\r\n    return false;\r\n  };\r\n\r\n  const closeoptionsslide = () => {\r\n    setShowOptionsmenu(false);\r\n  };\r\n\r\n  var visibleOptions = \"\";\r\n  if (showOptionsmenu && typeTop) {\r\n    visibleOptions = \"visible\";\r\n  } else if (showOptionsmenu) {\r\n    visibleOptions = \"hidden\";\r\n  } else {\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {optionsShow ? (\r\n        <>\r\n          {\" \"}\r\n          <Grid\r\n            container\r\n            className={\r\n              typeTop\r\n                ? darkmodeReducer\r\n                  ? `optionsTop-background-dark `\r\n                  : `optionsTop-background-light `\r\n                : \"\"\r\n            }\r\n            onTouchStart={handleTouchStartOptions}\r\n            onTouchMove={handleTouchMoveOptions}\r\n            style={{\r\n              padding: \"0px\",\r\n\r\n              top: matchPc ? (typeTop ? \"-2vh\" : \"0vh\") : \"0vh\",\r\n              position: \"relative\",\r\n              margin: \"0 auto\",\r\n              overflow: \"hidden\",\r\n              left: \"0px\",\r\n              height: typeTop ? (matchPc ? \"21vh\" : \"18.5vh\") : \"auto\",\r\n              paddingBottom: \"1px\",\r\n            }}\r\n          >\r\n            <animated.div ref={optionsCollectImageRef} style={modalanimation}>\r\n              <Grid\r\n                item\r\n                style={{\r\n                  margin: \"auto\",\r\n                  textAlign: \"center\",\r\n                  position: \"relative\",\r\n                  bottom: typeTop ? \"-1.4em\" : \"0.2em\",\r\n                  left: \"-4px\",\r\n                }}\r\n              >\r\n                <CircleIcon\r\n                  onClick={() => {\r\n                    nextSlidePc();\r\n                  }}\r\n                  className=\"buttonshake\"\r\n                  style={{\r\n                    fontSize: \"1.2vw\",\r\n                    cursor: \"pointer\",\r\n                    color: darkmodeReducer\r\n                      ? typeTop\r\n                        ? \"rgba(200, 200, 200, 0.5)\"\r\n                        : \"rgba(200, 200, 200, 0.1)\"\r\n                      : typeTop\r\n                      ? \"rgba(005, 005, 005, 0.4)\"\r\n                      : \"rgba(005, 005, 005, 0.2)\",\r\n                    display: matchPc ? \"block\" : \"none\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n              {optionsImages.map((im: any, i: any) => (\r\n                <Grid key={i} item xs={12}>\r\n                  {typeTop ? (\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      style={{\r\n                        margin: \"auto\",\r\n                        textAlign: \"center\",\r\n                        position: \"relative\",\r\n                        top: matchPc ? \"0.8em\" : \"0.54em\",\r\n                      }}\r\n                    >\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        style={{\r\n                          fontSize: matchPc ? \"1.1vw\" : \"2vh\",\r\n                          fontWeight: \"bolder\",\r\n                          fontFamily: \"Arial, Helvetica, sans-serif\",\r\n                          visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\r\n                          color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        {optionsNameData[i]}\r\n                      </Grid>\r\n                    </Grid>\r\n                  ) : null}\r\n\r\n                  <img\r\n                    alt={` ${optionsNameData[i]}  option`}\r\n                    onClick={() => {\r\n                      clickOptions(i, optionsClickType);\r\n                    }}\r\n                    style={{\r\n                      cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\r\n                      width: `${getSliderWidthNew}px`,\r\n                      height: `${getSliderWidthNew}px`,\r\n                      borderRadius: \"50%\",\r\n                      padding: \"0px\",\r\n                      objectFit: \"cover\",\r\n                      marginLeft: \"2px\",\r\n                      marginTop: \"14px\",\r\n                      boxShadow: darkmodeReducer\r\n                        ? ActiveSlide === i\r\n                          ? `0 0 5px ${colorDarkReducer}`\r\n                          : \"\"\r\n                        : ActiveSlide === i\r\n                        ? `0 0 3.5px ${colorReducer}`\r\n                        : \"\",\r\n\r\n                      marginBottom: \"2.2px\",\r\n                    }}\r\n                    src={`./images/options/${im}`}\r\n                  />\r\n                  {typeTop ? null : (\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      style={{\r\n                        margin: \"auto\",\r\n                        textAlign: \"center\",\r\n                        position: \"relative\",\r\n                        bottom: \"0.2em\",\r\n                      }}\r\n                    >\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        style={{\r\n                          fontSize: matchPc ? \"1.1vw\" : \"2vh\",\r\n                          fontWeight: \"bolder\",\r\n                          fontFamily: \"Arial, Helvetica, sans-serif\",\r\n                          visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\r\n                          color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        {optionsNameData[i]}\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              ))}\r\n            </animated.div>\r\n          </Grid>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Grid container>\r\n            <Grid\r\n              item\r\n              xs={9}\r\n              style={{\r\n                textAlign: \"right\",\r\n                marginTop: matchPc ? \"6.4vh\" : matchTablet ? \"8.8vh\" : \"8.3vh\",\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  padding: \"16px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                <CircleIcon\r\n                  style={{\r\n                    fontSize: matchPc\r\n                      ? \"1.2vw\"\r\n                      : matchTablet\r\n                      ? \"2.5vh\"\r\n                      : \"2.3vh\",\r\n                    color: darkmodeReducer\r\n                      ? \"rgba(200, 200, 200, 0.1)\"\r\n                      : \"rgba(005, 005, 005, 0.2)\",\r\n                  }}\r\n                />\r\n              </span>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const OptionsSlider = React.memo(OptionsSliderx);\r\n"]},"metadata":{},"sourceType":"module"}