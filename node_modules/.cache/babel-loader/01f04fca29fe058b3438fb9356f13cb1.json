{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\super-login\\\\src\\\\profile\\\\ArrowBillboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { matchPc } from \"../DetectDevice\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ArrowBillboardx({\n  clickSlideprev,\n  clickSlidenext,\n  imageHeight,\n  ShowBillboard\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          position: \"absolute\",\n          zIndex: 3,\n          height: \"0px\",\n          width: matchPc ? \"100.8%\" : \"100%\",\n          padding: \"1px\",\n          left: matchPc ? \"-4px\" : \"0px\",\n          paddingLeft: \"0px\",\n          paddingRight: \"0px\",\n          top: \"-1px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          onClick: clickSlideprev,\n          className: darkmodeReducer ? \"slider-arrow-backpad-leftDARK\" : \"slider-arrow-backpad-leftLIGHT\",\n          style: {\n            height: `${imageHeight}px`,\n            cursor: \"pointer\",\n            display: ShowBillboard ? \"block\" : \"none\"\n          },\n          xs: 2,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            height: \"0px\"\n          },\n          xs: 8,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          onClick: clickSlidenext,\n          className: darkmodeReducer ? \"slider-arrow-backpad-rightDARK\" : \"slider-arrow-backpad-rightLIGHT\",\n          style: {\n            height: `${imageHeight}px`,\n            cursor: \"pointer\",\n            display: ShowBillboard ? \"block\" : \"none\"\n          },\n          xs: 2,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n}\n\n_s(ArrowBillboardx, \"pyUiayCCYEIzD5+dG/9/J7hvlxI=\", false, function () {\n  return [useSelector];\n});\n\n_c = ArrowBillboardx;\nexport const ArrowBillboard = /*#__PURE__*/React.memo(ArrowBillboardx);\n_c2 = ArrowBillboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ArrowBillboardx\");\n$RefreshReg$(_c2, \"ArrowBillboard\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/super-login/src/profile/ArrowBillboard.tsx"],"names":["React","Grid","matchPc","useSelector","ArrowBillboardx","clickSlideprev","clickSlidenext","imageHeight","ShowBillboard","darkmode","state","GlobalReducer","darkmodeReducer","position","zIndex","height","width","padding","left","paddingLeft","paddingRight","top","cursor","display","ArrowBillboard","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAAyC,aAAzC;;;;AAEA,SAASC,eAAT,CAAyB;AACvBC,EAAAA,cADuB;AAEvBC,EAAAA,cAFuB;AAGvBC,EAAAA,WAHuB;AAIvBC,EAAAA;AAJuB,CAAzB,EAKqB;AAAA;;AACnB;AACA;AACA;AACA;AAMA,QAAM;AAAEC,IAAAA;AAAF,MAAeN,WAAW,CAAEO,KAAD,KAAoC,EACnE,GAAGA,KAAK,CAACC;AAD0D,GAApC,CAAD,CAAhC;AAIA,QAAMC,eAAe,GAAGH,QAAxB;AAEA,sBACE;AAAA,2BACE;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,KAAK,EAAE;AACLI,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,MAAM,EAAE,CAFH;AAGLC,UAAAA,MAAM,EAAE,KAHH;AAILC,UAAAA,KAAK,EAAEd,OAAO,GAAG,QAAH,GAAc,MAJvB;AAKLe,UAAAA,OAAO,EAAE,KALJ;AAMLC,UAAAA,IAAI,EAAEhB,OAAO,GAAG,MAAH,GAAY,KANpB;AAOLiB,UAAAA,WAAW,EAAE,KAPR;AAQLC,UAAAA,YAAY,EAAE,KART;AASLC,UAAAA,GAAG,EAAE;AATA,SAFT;AAAA,gCAcE,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,OAAO,EAAEhB,cAFX;AAGE,UAAA,SAAS,EACPO,eAAe,GACX,+BADW,GAEX,gCANR;AAQE,UAAA,KAAK,EAAE;AACLG,YAAAA,MAAM,EAAG,GAAER,WAAY,IADlB;AAELe,YAAAA,MAAM,EAAE,SAFH;AAGLC,YAAAA,OAAO,EAAEf,aAAa,GAAG,OAAH,GAAa;AAH9B,WART;AAaE,UAAA,EAAE,EAAE,CAbN;AAAA,oBAeG;AAfH;AAAA;AAAA;AAAA;AAAA,gBAdF,EA8BU,GA9BV,eA+BE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,KAAK,EAAE;AAAEO,YAAAA,MAAM,EAAE;AAAV,WAAlB;AAAqC,UAAA,EAAE,EAAE,CAAzC;AAAA,oBACG;AADH;AAAA;AAAA;AAAA;AAAA,gBA/BF,EAiCU,GAjCV,eAkCE,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,OAAO,EAAET,cAFX;AAGE,UAAA,SAAS,EACPM,eAAe,GACX,gCADW,GAEX,iCANR;AAQE,UAAA,KAAK,EAAE;AACLG,YAAAA,MAAM,EAAG,GAAER,WAAY,IADlB;AAELe,YAAAA,MAAM,EAAE,SAFH;AAGLC,YAAAA,OAAO,EAAEf,aAAa,GAAG,OAAH,GAAa;AAH9B,WART;AAaE,UAAA,EAAE,EAAE,CAbN;AAAA,oBAeG;AAfH;AAAA;AAAA;AAAA;AAAA,gBAlCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AADF,mBADF;AA0DD;;GA/EQJ,e;UAecD,W;;;KAfdC,e;AAiFT,OAAO,MAAMoB,cAAc,gBAAGxB,KAAK,CAACyB,IAAN,CAAWrB,eAAX,CAAvB;MAAMoB,c","sourcesContent":["import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { matchPc } from \"../DetectDevice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction ArrowBillboardx({\r\n  clickSlideprev,\r\n  clickSlidenext,\r\n  imageHeight,\r\n  ShowBillboard,\r\n}: any): JSX.Element {\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <Grid\r\n          container\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 3,\r\n            height: \"0px\",\r\n            width: matchPc ? \"100.8%\" : \"100%\",\r\n            padding: \"1px\",\r\n            left: matchPc ? \"-4px\" : \"0px\",\r\n            paddingLeft: \"0px\",\r\n            paddingRight: \"0px\",\r\n            top: \"-1px\",\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            onClick={clickSlideprev}\r\n            className={\r\n              darkmodeReducer\r\n                ? \"slider-arrow-backpad-leftDARK\"\r\n                : \"slider-arrow-backpad-leftLIGHT\"\r\n            }\r\n            style={{\r\n              height: `${imageHeight}px`,\r\n              cursor: \"pointer\",\r\n              display: ShowBillboard ? \"block\" : \"none\",\r\n            }}\r\n            xs={2}\r\n          >\r\n            {\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item style={{ height: \"0px\" }} xs={8}>\r\n            {\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid\r\n            item\r\n            onClick={clickSlidenext}\r\n            className={\r\n              darkmodeReducer\r\n                ? \"slider-arrow-backpad-rightDARK\"\r\n                : \"slider-arrow-backpad-rightLIGHT\"\r\n            }\r\n            style={{\r\n              height: `${imageHeight}px`,\r\n              cursor: \"pointer\",\r\n              display: ShowBillboard ? \"block\" : \"none\",\r\n            }}\r\n            xs={2}\r\n          >\r\n            {\" \"}\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const ArrowBillboard = React.memo(ArrowBillboardx);\r\n"]},"metadata":{},"sourceType":"module"}