{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\ModalLog.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRef, useEffect, useState, useCallback } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { Grid, DialogContent, Paper, makeStyles, createMuiTheme, TextField, Button } from \"@material-ui/core\";\nimport im1 from \"./images/modalpic1.jpg\";\nimport im2 from \"./images/modalpic2.jpg\";\nimport im3 from \"./images/modalpic3.png\";\nimport im4 from \"./images/modalpic4.jpg\";\nimport \"./ModalLog.css\";\nimport Axios from \"axios\";\nimport ModalLogFormError from \"./ModalLogFormError\";\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Modalx({\n  formtype,\n  CloseModalForm,\n  showModalForm,\n  setShowModalForm,\n  PaperStyle,\n  signupclass,\n  loginclass,\n  darkmode\n}) {\n  _s();\n\n  ///\n  ///\n  ///SUPERSTARZ ICON SELECT\n  var SuperIcon = \"\";\n  darkmode ? SuperIcon = SuperstarzIconDark : SuperIcon = SuperstarzIconLight; ///\n  ///\n  ///\n  /// ALL VARIABLES ,ERROR VARIABLES,CONSTANT AND  STATES\n\n  const initialLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialRawSignValue = {\n    inputedEmail: \"\",\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialCleanSignValue = {\n    inputedEmail: \"\",\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialErrorSignValue = {\n    inputedEmail: 0,\n    inputedUsername: 0,\n    inputedPassword: 0\n  };\n  const [showimage, setShowimage] = useState(\" \");\n  const [zoomedModal, setZoomedModal] = useState(false);\n  const [wideImage, setWideImage] = useState(false);\n  const EmailCheckingTimer = useRef(null);\n  const PasswordCheckingTimer = useRef(null);\n  const EmailErrorHider = useRef(null);\n  const [loginvalues, setLoginvalues] = useState(initialLogValue);\n  const [cantPassBadEmail, setCantPassBadEmail] = useState(false);\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\n  const [cleanSignupValues, setCleanSignupValues] = useState(initialCleanSignValue);\n  const [errorsSignupValues, setErrorsSignupValues] = useState(initialErrorSignValue);\n  let usernameErrorData = null;\n  let usernameErrorDisplay = 0;\n  let emailErrorData = null;\n  let emailErrorDisplay = 0;\n  let passwordErrorData = null;\n  let passwordErrorDisplay = 0;\n\n  switch (errorsSignupValues.inputedUsername) {\n    case 1:\n      usernameErrorData = \"Usernames can only use letters, numbers, underscores and periods\";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 4:\n      usernameErrorData = \" Username  required \";\n      usernameErrorDisplay = 1;\n      break;\n\n    default:\n      usernameErrorData = null;\n      usernameErrorDisplay = 0;\n      break;\n  }\n\n  switch (errorsSignupValues.inputedPassword) {\n    case 1:\n      passwordErrorData = \"Password must be at Least 6 characters\";\n      passwordErrorDisplay = 1;\n      break;\n\n    case 4:\n      passwordErrorData = \" Password  required \";\n      passwordErrorDisplay = 1;\n      break;\n\n    default:\n      passwordErrorData = null;\n      passwordErrorDisplay = 0;\n      break;\n  }\n\n  switch (errorsSignupValues.inputedEmail) {\n    case 1:\n      emailErrorData = \"Checking...\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 2:\n      emailErrorData = \"Email address is not valid\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 3:\n      emailErrorData = \"Email is restricted to certain characters\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 4:\n      emailErrorData = \"Email required\";\n      emailErrorDisplay = 1;\n      break;\n\n    default:\n      emailErrorData = null;\n      emailErrorDisplay = 0;\n      break;\n  } ///\n  ///\n  ///\n  ///ALL VARIABLES ,ERROR VARIABLES,CONSTANT AND  STATES\n  ///\n  ///\n  ///\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n\n\n  const modalanimation = useSpring({\n    config: {\n      duration: 1000\n    },\n    opacity: showModalForm ? 1 : 0.9,\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`\n  }); ///\n  ///\n  ///\n  /// USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\n\n  const ModalBackgroundRef = useRef(null);\n\n  const onBackgroundFocus = e => {\n    if (ModalBackgroundRef.current === e.target) {\n      CloseModalForm(0);\n    }\n  }; ///\n  ///\n  ///\n  /// ESCAPE KEY CLOSE MODAL\n\n\n  const escapePress = useCallback(e => {\n    if (e.key === \"Escape\" && showModalForm) {\n      CloseModalForm(0);\n    }\n  }, [setShowModalForm, showModalForm]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escapePress);\n    return () => document.removeEventListener(\"keydown\", escapePress);\n  }, [escapePress]); ///\n  ///\n  ///\n  ///CLOSE MODAL FORM ON SMALL ICON PRESS\n\n  const iconclicked = () => {\n    CloseModalForm(0);\n  }; ///\n  ///\n  ///\n  /// RANDOMISE IMAGE\n\n\n  useEffect(() => {\n    let imagecontrol = [1, 2, 3, 4];\n    var randomimage = imagecontrol[Math.floor(Math.random() * imagecontrol.length)];\n\n    if (randomimage == 1) {\n      setShowimage(im1);\n    } else if (randomimage == 2) {\n      setShowimage(im2);\n    } else if (randomimage == 3) {\n      setShowimage(im3);\n    } else {\n      setShowimage(im4);\n    }\n  }, []); ///\n  ///\n  ///\n  /// GET IMAGE WIDTH ,HEIGHT AND SET WIDE IMAGE\n\n  const onimageload = e => {\n    const imageHeight = e.target.clientHeight;\n    const imageWidth = e.target.clientWidth;\n\n    if (imageWidth > imageHeight) {\n      setWideImage(true);\n    }\n  }; ///\n  ///\n  ///\n  /// SHOW A FULLSCREEN MODAL VIEW\n\n\n  const zoomlogmodal = () => {\n    setZoomedModal(!zoomedModal);\n  }; ///\n  ///\n  ///\n  /// DYNAMIC MODAL LAYOUT VARIABLES\n\n\n  const wideImageControlTrue = \"75vw\";\n  const wideImageControlfalse = \"70vw\";\n  const zoomImageControl = \"100vw\";\n  const GridMiniAwide = 8;\n  const GridMiniBwide = 4;\n  const GridMiniAlong = 7;\n  const GridMiniBlong = 5;\n  const GridZoomAwide = 8;\n  const GridZoomBwide = 4;\n  const GridZoomAlong = 6;\n  const GridZoomBlong = 6;\n  let GridHolderA = 7;\n  let GridHolderB = 5;\n  let GridxA = 7;\n  let GridxB = 5;\n  let GridyA = 7;\n  let GridyB = 5;\n  let wideImageControl = \"70vw\";\n  let imageReal = \"75vw\";\n  let borderGrid = \"11px\";\n  var WidthHolder = \"82%\";\n\n  if (zoomedModal) {\n    WidthHolder = \"100%\";\n    borderGrid = \"0px\";\n\n    if (wideImage) {\n      wideImageControl = wideImageControlTrue;\n      GridxA = GridZoomAwide;\n      GridxB = GridZoomBwide;\n    } else {\n      wideImageControl = wideImageControlfalse;\n      GridxA = GridZoomAlong;\n      GridxB = GridZoomBlong;\n    }\n\n    imageReal = zoomImageControl;\n    GridHolderA = GridxA;\n    GridHolderB = GridxB;\n  } else {\n    WidthHolder = \"82%\";\n    borderGrid = \"11px\";\n\n    if (wideImage) {\n      wideImageControl = wideImageControlTrue;\n      GridyA = GridMiniAwide;\n      GridyB = GridMiniBwide;\n    } else {\n      wideImageControl = wideImageControlfalse;\n      GridyA = GridMiniAlong;\n      GridyB = GridMiniBlong;\n    }\n\n    imageReal = wideImageControl;\n    GridHolderA = GridyA;\n    GridHolderB = GridyB;\n  } ///\n  ///\n  ///\n  /// DYNAMIC MODAL LAYOUT VARIABLES\n  ///\n  ///\n  ///\n  /// MATERIAL UI  CUSTOM STYLES\n\n\n  let themeGeneralSettingsModal = createMuiTheme({});\n  var useStyleModal = makeStyles(themeGeneralSettingsModal => ({\n    containerStyle: {\n      width: imageReal,\n      height: \"auto\",\n      boxShadow: \"0 5px 16px rgba(0, 0, 0, 0.2)\",\n      color: \"#000000\",\n      position: \"relative\",\n      zIndex: 10,\n      borderRadius: borderGrid\n    },\n    imageStyle: {\n      cursor: \"pointer\",\n      objectFit: \"cover\",\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: `${borderGrid} 0 0 10px`,\n      background: \"#000000\"\n    }\n  })); ///\n  ///\n  ///\n  /// SANITISE SIGN UP FORM INPUT CLIENT SIDE\n\n  const updateSignvalues = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"inputedUsername\") {\n      let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\n      let cleanValue = value.replace(usernameCleaner, \"\");\n      let usernameLimiter = /^.{26}$/;\n      let finalUsername = cleanValue.replace(usernameLimiter, \"\");\n      let checkUsernameClean = usernameCleaner.test(value);\n      let checkUsernameLimited = usernameLimiter.test(cleanValue);\n      checkUsernameClean ? setErrorsSignupValues({ ...errorsSignupValues,\n        [name]: 1\n      }) : setErrorsSignupValues({ ...errorsSignupValues,\n        [name]: 0\n      });\n\n      if (!checkUsernameLimited) {\n        setRawSignupValues({ ...rawSignupValues,\n          [name]: finalUsername\n        });\n        setCleanSignupValues({ ...cleanSignupValues,\n          [name]: finalUsername\n        });\n      } /////////\n\n    } else if (name === \"inputedEmail\") {\n      const emailValidation = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      const emailCleaner = /[^*$%#+@a-z0-9áéíóúñü \\.'_]/gim;\n      let finalEmail = value.replace(emailCleaner, \"\");\n      let checkEmailClean = emailCleaner.test(value);\n      let checkEmailValidated = emailValidation.test(String(value).toLowerCase());\n\n      if (EmailCheckingTimer.current) {\n        clearTimeout(EmailCheckingTimer.current);\n      }\n\n      if (!checkEmailValidated) {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n        EmailCheckingTimer.current = setTimeout(() => {\n          setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 2\n          });\n          checkEmailClean && setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 3\n          });\n        }, 2000);\n      } else {\n        if (EmailCheckingTimer.current) {\n          clearTimeout(EmailCheckingTimer.current);\n        }\n\n        checkEmailClean ? setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 3\n        }) : setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: finalEmail\n      });\n      setCleanSignupValues({ ...cleanSignupValues,\n        [name]: finalEmail\n      }); ////////\n    } else {\n      if (PasswordCheckingTimer.current) {\n        clearTimeout(PasswordCheckingTimer.current);\n      }\n\n      PasswordCheckingTimer.current = setTimeout(() => {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n      }, 2000);\n      var passwordLength = value.length;\n\n      if (passwordLength >= 6 || passwordLength === 0) {\n        if (PasswordCheckingTimer.current) {\n          clearTimeout(PasswordCheckingTimer.current);\n        }\n\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: value\n      });\n      setCleanSignupValues({ ...cleanSignupValues,\n        [name]: value\n      });\n    }\n  }; ///\n  ///\n  ///\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\n\n\n  const updateLoginvalues = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginvalues({ ...loginvalues,\n      [name]: value\n    });\n  }; ///\n  ///\n  ///\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\n\n\n  const signmeup = () => {\n    if (cleanSignupValues.inputedEmail && cleanSignupValues.inputedUsername && cleanSignupValues.inputedPassword) {\n      if (errorsSignupValues.inputedEmail == 0) {\n        Axios.post(\"http://localhost:3001/registration\", {\n          values: cleanSignupValues\n        }).then(response => {\n          if (response.data.message === \"username not unique\") {\n            console.log(\"Username is Not Availabe\");\n            alert(response.data.message);\n          } else {\n            console.log(response.status);\n            alert(\"REGISTRATION COMPLETE\");\n          }\n        }).catch(function (error) {\n          if (error.response) {\n            // Request made and server responded\n            //express typo can activate this\n            console.log(error.response);\n          } else if (error.request) {\n            // The request was made but no response was received Or request not made\n            // Axios.post(\"http://localhost:3003/reg\" can activate this error\n            console.log(error.request);\n          } else {\n            // Something happened in setting up the request that triggered an Error\n            console.log(\"Error\", error.message);\n          }\n        });\n      } else {\n        setCantPassBadEmail(true);\n        setTimeout(() => {\n          setCantPassBadEmail(false);\n        }, 3000);\n      }\n    } else {\n      let passwordErrorHolder = errorsSignupValues.inputedPassword;\n      let emailErrorHolder = errorsSignupValues.inputedEmail;\n      let usernameErrorHolder = errorsSignupValues.inputedUsername;\n\n      if (!cleanSignupValues.inputedPassword) {\n        passwordErrorHolder = 4;\n      }\n\n      if (!cleanSignupValues.inputedEmail) {\n        emailErrorHolder = 4;\n      }\n\n      if (!cleanSignupValues.inputedUsername) {\n        usernameErrorHolder = 4;\n      }\n\n      setErrorsSignupValues({ ...errorsSignupValues,\n        inputedPassword: passwordErrorHolder,\n        inputedEmail: emailErrorHolder,\n        inputedUsername: usernameErrorHolder\n      });\n    }\n  }; ///\n  ///\n  ///\n  /// SENDING LOG IN  DATA TO SERVER SIDE\n\n\n  const logmein = () => {\n    Axios.post(\"http://localhost:3001/logging\", {\n      values: loginvalues\n    }).then(response => {\n      console.log(response.status);\n\n      if (response.data.message === \"Wrong, Password and Username combination\") {\n        alert(response.data.message);\n      } else {\n        if (response.data.message === \"Wrong username\") {\n          alert(response.data.message);\n        } else {\n          alert(\"LOGGED IN\");\n        }\n      }\n    }).catch(function (error) {\n      if (error.response) {\n        alert(\"1\"); // Request made and server responded\n        //express typo can activate this\n\n        console.log(error.response);\n      } else if (error.request) {\n        alert(\"2\"); // The request was made but no response was received Or request not made\n        // Axios.post(\"http://localhost:3003/reg\" can activate this error\n\n        console.log(error.request);\n      } else {\n        alert(\"3\"); // Something happened in setting up the request that triggered an Error\n\n        console.log(\"Error\", error.message);\n      }\n    });\n  };\n\n  var classes = useStyleModal();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModalForm ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: \"FormDialog-container dontallowhighlighting \",\n      onClick: onBackgroundFocus,\n      style: {\n        overflow: \"hidden\"\n      },\n      ref: ModalBackgroundRef,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        xs: 12,\n        style: {\n          zIndex: 2,\n          position: \"fixed\",\n          bottom: \"0em\",\n          padding: \"0px\",\n          fontWeight: \"bold\",\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"Background-footer-light\",\n          item: true,\n          xs: 12,\n          style: {\n            paddingBottom: \"20.1rem\",\n            fontSize: \"0.83vw\",\n            display: \"flex\",\n            alignItems: \"center\",\n            paddingRight: \"15px\",\n            justifyContent: \"flex-end\",\n            textAlign: \"left\",\n            fontWeight: \"normal\",\n            fontFamily: \"sans-serif\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(ErrorOutlineIcon, {\n              className: cantPassBadEmail ? \"element-bop\" : \"\",\n              style: {\n                opacity: 1,\n                marginLeft: \"8px\",\n                marginRight: \"12px\",\n                color: \"red\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            xs: 10,\n            style: {\n              opacity: 0.9\n            },\n            children: \"something went wrong\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n        style: modalanimation,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: PaperStyle,\n          style: {\n            borderRadius: borderGrid\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            xs: 12,\n            className: classes.containerStyle,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: GridHolderA,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                xs: 12,\n                item: true,\n                style: {\n                  position: \"fixed\",\n                  left: \"1em\",\n                  top: \"2.6em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: zoomedModal ? \"hide-logo\" : \"log-logo\",\n                  onClick: iconclicked,\n                  src: SuperIcon,\n                  alt: \"SuperstarZ logo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                onClick: zoomlogmodal,\n                onLoad: onimageload,\n                src: showimage,\n                className: classes.imageStyle,\n                alt: \"Login Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 17\n            }, this), formtype ? /*#__PURE__*/_jsxDEV(Grid, {\n              xs: GridHolderB,\n              item: true,\n              className: \"formholder\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                xs: 12,\n                className: \"center-content-vertically\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  onClick: iconclicked,\n                  className: zoomedModal ? \"zoom-login-logo\" : \"hide-logo\",\n                  src: SuperIcon,\n                  alt: \"SuperstarZ logo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: WidthHolder,\n                    paddingBottom: \"60px\"\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Username\",\n                  onChange: updateLoginvalues,\n                  name: \"inputedUsername\",\n                  value: loginvalues.inputedUsername,\n                  variant: \"filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: WidthHolder,\n                    paddingBottom: \"50px\"\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Password\",\n                  onChange: updateLoginvalues,\n                  name: \"inputedPassword\",\n                  value: loginvalues.inputedPassword,\n                  variant: \"filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 643,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    xs: 4\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 655,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    className: \"buttonpad buttonshake\",\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: logmein,\n                      className: loginclass,\n                      fullWidth: true,\n                      variant: \"outlined\",\n                      size: \"large\",\n                      color: \"primary\",\n                      children: \"Log In\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 657,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 656,\n                    columnNumber: 25\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 654,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n              xs: GridHolderB,\n              item: true,\n              className: \"formholder\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                xs: 12,\n                className: \"center-content-vertically\",\n                style: {\n                  padding: \"0px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  onClick: iconclicked,\n                  className: zoomedModal ? \"zoom-signup-logo\" : \"hide-logo\",\n                  src: SuperIcon,\n                  alt: \"SuperstarZ logo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 678,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ModalLogFormError, {\n                  WidthHolder: WidthHolder,\n                  darkmode: darkmode,\n                  type: true,\n                  cantPassBadEmail: cantPassBadEmail,\n                  ErrorDisplay: emailErrorDisplay,\n                  ErrorData: emailErrorData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: WidthHolder,\n                    paddingBottom: \"45px\"\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Email\",\n                  onChange: updateSignvalues,\n                  name: \"inputedEmail\",\n                  value: rawSignupValues.inputedEmail,\n                  variant: \"filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 694,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ModalLogFormError, {\n                  WidthHolder: WidthHolder,\n                  darkmode: darkmode,\n                  type: true,\n                  cantPassBadEmail: cantPassBadEmail,\n                  ErrorDisplay: usernameErrorDisplay,\n                  ErrorData: usernameErrorData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: WidthHolder,\n                    paddingBottom: \"45px\"\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Username\",\n                  onChange: updateSignvalues,\n                  name: \"inputedUsername\",\n                  value: rawSignupValues.inputedUsername,\n                  variant: \"filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 712,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: WidthHolder,\n                    paddingBottom: \"30px\",\n                    zIndex: 1\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Password\",\n                  onChange: updateSignvalues,\n                  name: \"inputedPassword\",\n                  value: rawSignupValues.inputedPassword,\n                  variant: \"filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 723,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ModalLogFormError, {\n                  darkmode: darkmode,\n                  WidthHolder: WidthHolder,\n                  type: false,\n                  cantPassBadEmail: cantPassBadEmail,\n                  ErrorDisplay: passwordErrorDisplay,\n                  ErrorData: passwordErrorData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 737,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  xs: 12,\n                  style: {\n                    marginTop: \"20px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    xs: 4\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 747,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    className: \"buttonpad buttonshake\",\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      className: signupclass,\n                      onClick: signmeup,\n                      fullWidth: true,\n                      variant: \"contained\",\n                      size: \"large\",\n                      color: \"secondary\",\n                      children: \"Sign Up\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 749,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 748,\n                    columnNumber: 25\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(Modalx, \"anMPi6aUJ7gPEcbQ2QFJaisqAaM=\", true, function () {\n  return [useSpring];\n});\n\n_c = Modalx;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modalx\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/ModalLog.tsx"],"names":["React","useRef","useEffect","useState","useCallback","useSpring","animated","Grid","DialogContent","Paper","makeStyles","createMuiTheme","TextField","Button","im1","im2","im3","im4","Axios","ModalLogFormError","SuperstarzIconLight","SuperstarzIconDark","ErrorOutlineIcon","Modalx","formtype","CloseModalForm","showModalForm","setShowModalForm","PaperStyle","signupclass","loginclass","darkmode","SuperIcon","initialLogValue","inputedUsername","inputedPassword","initialRawSignValue","inputedEmail","initialCleanSignValue","initialErrorSignValue","showimage","setShowimage","zoomedModal","setZoomedModal","wideImage","setWideImage","EmailCheckingTimer","PasswordCheckingTimer","EmailErrorHider","loginvalues","setLoginvalues","cantPassBadEmail","setCantPassBadEmail","rawSignupValues","setRawSignupValues","cleanSignupValues","setCleanSignupValues","errorsSignupValues","setErrorsSignupValues","usernameErrorData","usernameErrorDisplay","emailErrorData","emailErrorDisplay","passwordErrorData","passwordErrorDisplay","modalanimation","config","duration","opacity","transform","ModalBackgroundRef","onBackgroundFocus","e","current","target","escapePress","key","document","addEventListener","removeEventListener","iconclicked","imagecontrol","randomimage","Math","floor","random","length","onimageload","imageHeight","clientHeight","imageWidth","clientWidth","zoomlogmodal","wideImageControlTrue","wideImageControlfalse","zoomImageControl","GridMiniAwide","GridMiniBwide","GridMiniAlong","GridMiniBlong","GridZoomAwide","GridZoomBwide","GridZoomAlong","GridZoomBlong","GridHolderA","GridHolderB","GridxA","GridxB","GridyA","GridyB","wideImageControl","imageReal","borderGrid","WidthHolder","themeGeneralSettingsModal","useStyleModal","containerStyle","width","height","boxShadow","color","position","zIndex","borderRadius","imageStyle","cursor","objectFit","background","updateSignvalues","name","value","usernameCleaner","cleanValue","replace","usernameLimiter","finalUsername","checkUsernameClean","test","checkUsernameLimited","emailValidation","emailCleaner","finalEmail","checkEmailClean","checkEmailValidated","String","toLowerCase","clearTimeout","setTimeout","passwordLength","updateLoginvalues","signmeup","post","values","then","response","data","message","console","log","alert","status","catch","error","request","passwordErrorHolder","emailErrorHolder","usernameErrorHolder","logmein","classes","overflow","bottom","padding","fontWeight","display","alignItems","paddingBottom","fontSize","paddingRight","justifyContent","textAlign","fontFamily","marginLeft","marginRight","left","top","style","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport {\r\n  Grid,\r\n  DialogContent,\r\n  Paper,\r\n  makeStyles,\r\n  createMuiTheme,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport im1 from \"./images/modalpic1.jpg\";\r\nimport im2 from \"./images/modalpic2.jpg\";\r\nimport im3 from \"./images/modalpic3.png\";\r\nimport im4 from \"./images/modalpic4.jpg\";\r\nimport { ImodalLog, IGrid } from \"./appFolder-Interfaces\";\r\nimport \"./ModalLog.css\";\r\nimport Axios from \"axios\";\r\nimport ModalLogFormError from \"./ModalLogFormError\";\r\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\r\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\n\r\nexport default function Modalx({\r\n  formtype,\r\n  CloseModalForm,\r\n  showModalForm,\r\n  setShowModalForm,\r\n  PaperStyle,\r\n  signupclass,\r\n  loginclass,\r\n  darkmode,\r\n}: ImodalLog): JSX.Element {\r\n  ///\r\n  ///\r\n  ///SUPERSTARZ ICON SELECT\r\n  var SuperIcon = \"\";\r\n  darkmode\r\n    ? (SuperIcon = SuperstarzIconDark)\r\n    : (SuperIcon = SuperstarzIconLight);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// ALL VARIABLES ,ERROR VARIABLES,CONSTANT AND  STATES\r\n  const initialLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialRawSignValue = {\r\n    inputedEmail: \"\",\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialCleanSignValue = {\r\n    inputedEmail: \"\",\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialErrorSignValue = {\r\n    inputedEmail: 0,\r\n    inputedUsername: 0,\r\n    inputedPassword: 0,\r\n  };\r\n  const [showimage, setShowimage] = useState<string>(\" \");\r\n  const [zoomedModal, setZoomedModal] = useState<boolean>(false);\r\n  const [wideImage, setWideImage] = useState<boolean>(false);\r\n  const EmailCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const PasswordCheckingTimer =\r\n    useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const EmailErrorHider = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const [loginvalues, setLoginvalues] = useState(initialLogValue);\r\n  const [cantPassBadEmail, setCantPassBadEmail] = useState<boolean>(false);\r\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\r\n  const [cleanSignupValues, setCleanSignupValues] = useState(\r\n    initialCleanSignValue\r\n  );\r\n  const [errorsSignupValues, setErrorsSignupValues] = useState(\r\n    initialErrorSignValue\r\n  );\r\n\r\n  let usernameErrorData = null;\r\n  let usernameErrorDisplay = 0;\r\n\r\n  let emailErrorData = null;\r\n  let emailErrorDisplay = 0;\r\n\r\n  let passwordErrorData = null;\r\n  let passwordErrorDisplay = 0;\r\n\r\n  switch (errorsSignupValues.inputedUsername) {\r\n    case 1:\r\n      usernameErrorData =\r\n        \"Usernames can only use letters, numbers, underscores and periods\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 4:\r\n      usernameErrorData = \" Username  required \";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      usernameErrorData = null;\r\n      usernameErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  switch (errorsSignupValues.inputedPassword) {\r\n    case 1:\r\n      passwordErrorData = \"Password must be at Least 6 characters\";\r\n      passwordErrorDisplay = 1;\r\n      break;\r\n    case 4:\r\n      passwordErrorData = \" Password  required \";\r\n      passwordErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      passwordErrorData = null;\r\n      passwordErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  switch (errorsSignupValues.inputedEmail) {\r\n    case 1:\r\n      emailErrorData = \"Checking...\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 2:\r\n      emailErrorData = \"Email address is not valid\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 3:\r\n      emailErrorData = \"Email is restricted to certain characters\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 4:\r\n      emailErrorData = \"Email required\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      emailErrorData = null;\r\n      emailErrorDisplay = 0;\r\n      break;\r\n  }\r\n  ///\r\n  ///\r\n  ///\r\n  ///ALL VARIABLES ,ERROR VARIABLES,CONSTANT AND  STATES\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      duration: 1000,\r\n    },\r\n    opacity: showModalForm ? 1 : 0.9,\r\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`,\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\r\n  const ModalBackgroundRef = useRef<HTMLInputElement>(null);\r\n  const onBackgroundFocus = (e: any): void => {\r\n    if (ModalBackgroundRef.current === e.target) {\r\n      CloseModalForm(0);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// ESCAPE KEY CLOSE MODAL\r\n  const escapePress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Escape\" && showModalForm) {\r\n        CloseModalForm(0);\r\n      }\r\n    },\r\n    [setShowModalForm, showModalForm]\r\n  );\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escapePress);\r\n    return () => document.removeEventListener(\"keydown\", escapePress);\r\n  }, [escapePress]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CLOSE MODAL FORM ON SMALL ICON PRESS\r\n  const iconclicked = () => {\r\n    CloseModalForm(0);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// RANDOMISE IMAGE\r\n  useEffect(() => {\r\n    let imagecontrol: number[] = [1, 2, 3, 4];\r\n    var randomimage =\r\n      imagecontrol[Math.floor(Math.random() * imagecontrol.length)];\r\n\r\n    if (randomimage == 1) {\r\n      setShowimage(im1);\r\n    } else if (randomimage == 2) {\r\n      setShowimage(im2);\r\n    } else if (randomimage == 3) {\r\n      setShowimage(im3);\r\n    } else {\r\n      setShowimage(im4);\r\n    }\r\n  }, []);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET IMAGE WIDTH ,HEIGHT AND SET WIDE IMAGE\r\n  const onimageload = (e: any) => {\r\n    const imageHeight = e.target.clientHeight;\r\n    const imageWidth = e.target.clientWidth;\r\n    if (imageWidth > imageHeight) {\r\n      setWideImage(true);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW A FULLSCREEN MODAL VIEW\r\n  const zoomlogmodal = () => {\r\n    setZoomedModal(!zoomedModal);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// DYNAMIC MODAL LAYOUT VARIABLES\r\n  const wideImageControlTrue: string = \"75vw\";\r\n  const wideImageControlfalse: string = \"70vw\";\r\n  const zoomImageControl: string = \"100vw\";\r\n  const GridMiniAwide: IGrid = 8;\r\n  const GridMiniBwide: IGrid = 4;\r\n  const GridMiniAlong: IGrid = 7;\r\n  const GridMiniBlong: IGrid = 5;\r\n  const GridZoomAwide: IGrid = 8;\r\n  const GridZoomBwide: IGrid = 4;\r\n  const GridZoomAlong: IGrid = 6;\r\n  const GridZoomBlong: IGrid = 6;\r\n\r\n  let GridHolderA: IGrid = 7;\r\n  let GridHolderB: IGrid = 5;\r\n\r\n  let GridxA: IGrid = 7;\r\n  let GridxB: IGrid = 5;\r\n\r\n  let GridyA: IGrid = 7;\r\n  let GridyB: IGrid = 5;\r\n\r\n  let wideImageControl: string = \"70vw\";\r\n  let imageReal: string = \"75vw\";\r\n\r\n  let borderGrid: string = \"11px\";\r\n  var WidthHolder = \"82%\";\r\n\r\n  if (zoomedModal) {\r\n    WidthHolder = \"100%\";\r\n    borderGrid = \"0px\";\r\n    if (wideImage) {\r\n      wideImageControl = wideImageControlTrue;\r\n      GridxA = GridZoomAwide;\r\n      GridxB = GridZoomBwide;\r\n    } else {\r\n      wideImageControl = wideImageControlfalse;\r\n      GridxA = GridZoomAlong;\r\n      GridxB = GridZoomBlong;\r\n    }\r\n    imageReal = zoomImageControl;\r\n    GridHolderA = GridxA;\r\n    GridHolderB = GridxB;\r\n  } else {\r\n    WidthHolder = \"82%\";\r\n    borderGrid = \"11px\";\r\n    if (wideImage) {\r\n      wideImageControl = wideImageControlTrue;\r\n      GridyA = GridMiniAwide;\r\n      GridyB = GridMiniBwide;\r\n    } else {\r\n      wideImageControl = wideImageControlfalse;\r\n      GridyA = GridMiniAlong;\r\n      GridyB = GridMiniBlong;\r\n    }\r\n    imageReal = wideImageControl;\r\n    GridHolderA = GridyA;\r\n    GridHolderB = GridyB;\r\n  }\r\n  ///\r\n  ///\r\n  ///\r\n  /// DYNAMIC MODAL LAYOUT VARIABLES\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// MATERIAL UI  CUSTOM STYLES\r\n  let themeGeneralSettingsModal = createMuiTheme({});\r\n  var useStyleModal = makeStyles((themeGeneralSettingsModal) => ({\r\n    containerStyle: {\r\n      width: imageReal,\r\n      height: \"auto\",\r\n      boxShadow: \"0 5px 16px rgba(0, 0, 0, 0.2)\",\r\n      color: \"#000000\",\r\n      position: \"relative\",\r\n      zIndex: 10,\r\n      borderRadius: borderGrid,\r\n    },\r\n    imageStyle: {\r\n      cursor: \"pointer\",\r\n      objectFit: \"cover\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: `${borderGrid} 0 0 10px`,\r\n      background: \"#000000\",\r\n    },\r\n  }));\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SANITISE SIGN UP FORM INPUT CLIENT SIDE\r\n  const updateSignvalues = (e: any) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"inputedUsername\") {\r\n      let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\r\n      let cleanValue = value.replace(usernameCleaner, \"\");\r\n\r\n      let usernameLimiter = /^.{26}$/;\r\n      let finalUsername = cleanValue.replace(usernameLimiter, \"\");\r\n\r\n      let checkUsernameClean = usernameCleaner.test(value);\r\n      let checkUsernameLimited = usernameLimiter.test(cleanValue);\r\n\r\n      checkUsernameClean\r\n        ? setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 })\r\n        : setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n      if (!checkUsernameLimited) {\r\n        setRawSignupValues({ ...rawSignupValues, [name]: finalUsername });\r\n        setCleanSignupValues({ ...cleanSignupValues, [name]: finalUsername });\r\n      }\r\n      /////////\r\n    } else if (name === \"inputedEmail\") {\r\n      const emailValidation =\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      const emailCleaner = /[^*$%#+@a-z0-9áéíóúñü \\.'_]/gim;\r\n      let finalEmail = value.replace(emailCleaner, \"\");\r\n\r\n      let checkEmailClean = emailCleaner.test(value);\r\n      let checkEmailValidated = emailValidation.test(\r\n        String(value).toLowerCase()\r\n      );\r\n      if (EmailCheckingTimer.current) {\r\n        clearTimeout(EmailCheckingTimer.current);\r\n      }\r\n      if (!checkEmailValidated) {\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n        EmailCheckingTimer.current = setTimeout(() => {\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n          checkEmailClean &&\r\n            setErrorsSignupValues({ ...errorsSignupValues, [name]: 3 });\r\n        }, 2000);\r\n      } else {\r\n        if (EmailCheckingTimer.current) {\r\n          clearTimeout(EmailCheckingTimer.current);\r\n        }\r\n        checkEmailClean\r\n          ? setErrorsSignupValues({ ...errorsSignupValues, [name]: 3 })\r\n          : setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n      }\r\n\r\n      setRawSignupValues({ ...rawSignupValues, [name]: finalEmail });\r\n      setCleanSignupValues({ ...cleanSignupValues, [name]: finalEmail });\r\n      ////////\r\n    } else {\r\n      if (PasswordCheckingTimer.current) {\r\n        clearTimeout(PasswordCheckingTimer.current);\r\n      }\r\n\r\n      PasswordCheckingTimer.current = setTimeout(() => {\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n      }, 2000);\r\n\r\n      var passwordLength = value.length;\r\n\r\n      if (passwordLength >= 6 || passwordLength === 0) {\r\n        if (PasswordCheckingTimer.current) {\r\n          clearTimeout(PasswordCheckingTimer.current);\r\n        }\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n      }\r\n      setRawSignupValues({ ...rawSignupValues, [name]: value });\r\n      setCleanSignupValues({ ...cleanSignupValues, [name]: value });\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\r\n  const updateLoginvalues = (e: any) => {\r\n    const { name, value } = e.target;\r\n    setLoginvalues({ ...loginvalues, [name]: value });\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\r\n  const signmeup = () => {\r\n    if (\r\n      cleanSignupValues.inputedEmail &&\r\n      cleanSignupValues.inputedUsername &&\r\n      cleanSignupValues.inputedPassword\r\n    ) {\r\n      if (errorsSignupValues.inputedEmail == 0) {\r\n        Axios.post(\"http://localhost:3001/registration\", {\r\n          values: cleanSignupValues,\r\n        })\r\n          .then((response) => {\r\n            if (response.data.message === \"username not unique\") {\r\n              console.log(\"Username is Not Availabe\");\r\n              alert(response.data.message);\r\n            } else {\r\n              console.log(response.status);\r\n              alert(\"REGISTRATION COMPLETE\");\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            if (error.response) {\r\n              // Request made and server responded\r\n              //express typo can activate this\r\n              console.log(error.response);\r\n            } else if (error.request) {\r\n              // The request was made but no response was received Or request not made\r\n              // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n              console.log(error.request);\r\n            } else {\r\n              // Something happened in setting up the request that triggered an Error\r\n              console.log(\"Error\", error.message);\r\n            }\r\n          });\r\n      } else {\r\n        setCantPassBadEmail(true);\r\n        setTimeout(() => {\r\n          setCantPassBadEmail(false);\r\n        }, 3000);\r\n      }\r\n    } else {\r\n      let passwordErrorHolder = errorsSignupValues.inputedPassword;\r\n      let emailErrorHolder = errorsSignupValues.inputedEmail;\r\n      let usernameErrorHolder = errorsSignupValues.inputedUsername;\r\n\r\n      if (!cleanSignupValues.inputedPassword) {\r\n        passwordErrorHolder = 4;\r\n      }\r\n      if (!cleanSignupValues.inputedEmail) {\r\n        emailErrorHolder = 4;\r\n      }\r\n      if (!cleanSignupValues.inputedUsername) {\r\n        usernameErrorHolder = 4;\r\n      }\r\n\r\n      setErrorsSignupValues({\r\n        ...errorsSignupValues,\r\n        inputedPassword: passwordErrorHolder,\r\n        inputedEmail: emailErrorHolder,\r\n        inputedUsername: usernameErrorHolder,\r\n      });\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SENDING LOG IN  DATA TO SERVER SIDE\r\n  const logmein = () => {\r\n    Axios.post(\"http://localhost:3001/logging\", {\r\n      values: loginvalues,\r\n    })\r\n      .then((response) => {\r\n        console.log(response.status);\r\n        if (\r\n          response.data.message === \"Wrong, Password and Username combination\"\r\n        ) {\r\n          alert(response.data.message);\r\n        } else {\r\n          if (response.data.message === \"Wrong username\") {\r\n            alert(response.data.message);\r\n          } else {\r\n            alert(\"LOGGED IN\");\r\n          }\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        if (error.response) {\r\n          alert(\"1\");\r\n          // Request made and server responded\r\n          //express typo can activate this\r\n          console.log(error.response);\r\n        } else if (error.request) {\r\n          alert(\"2\");\r\n          // The request was made but no response was received Or request not made\r\n          // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n          console.log(error.request);\r\n        } else {\r\n          alert(\"3\");\r\n          // Something happened in setting up the request that triggered an Error\r\n          console.log(\"Error\", error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  var classes = useStyleModal();\r\n\r\n  return (\r\n    <>\r\n      {showModalForm ? (\r\n        <DialogContent\r\n          className=\"FormDialog-container dontallowhighlighting \"\r\n          onClick={onBackgroundFocus}\r\n          style={{ overflow: \"hidden\" }}\r\n          ref={ModalBackgroundRef}\r\n        >\r\n          <Grid\r\n            container\r\n            xs={12}\r\n            style={{\r\n              zIndex: 2,\r\n              position: \"fixed\",\r\n              bottom: \"0em\",\r\n              padding: \"0px\",\r\n              fontWeight: \"bold\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Grid\r\n              className=\"Background-footer-light\"\r\n              item\r\n              xs={12}\r\n              style={{\r\n                paddingBottom: \"20.1rem\",\r\n                fontSize: \"0.83vw\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                paddingRight: \"15px\",\r\n                justifyContent: \"flex-end\",\r\n                textAlign: \"left\",\r\n                fontWeight: \"normal\",\r\n                fontFamily: \"sans-serif\",\r\n              }}\r\n            >\r\n              <Grid xs={2}>\r\n                <ErrorOutlineIcon\r\n                  className={cantPassBadEmail ? \"element-bop\" : \"\"}\r\n                  style={{\r\n                    opacity: 1,\r\n                    marginLeft: \"8px\",\r\n                    marginRight: \"12px\",\r\n                    color: \"red\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid xs={10} style={{ opacity: 0.9 }}>\r\n                something went wrong\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <animated.div style={modalanimation}>\r\n            <Paper className={PaperStyle} style={{ borderRadius: borderGrid }}>\r\n              <Grid container xs={12} className={classes.containerStyle}>\r\n                <Grid item xs={GridHolderA}>\r\n                  <Grid\r\n                    xs={12}\r\n                    item\r\n                    style={{\r\n                      position: \"fixed\",\r\n                      left: \"1em\",\r\n                      top: \"2.6em\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      className={zoomedModal ? \"hide-logo\" : \"log-logo\"}\r\n                      onClick={iconclicked}\r\n                      src={SuperIcon}\r\n                      alt=\"SuperstarZ logo\"\r\n                    />\r\n                  </Grid>\r\n                  <img\r\n                    onClick={zoomlogmodal}\r\n                    onLoad={onimageload}\r\n                    src={showimage}\r\n                    className={classes.imageStyle}\r\n                    alt=\"Login Image\"\r\n                  />\r\n                </Grid>\r\n\r\n                {formtype ? (\r\n                  <Grid xs={GridHolderB} item className=\"formholder\">\r\n                    <Grid xs={12} className=\"center-content-vertically\">\r\n                      <img\r\n                        onClick={iconclicked}\r\n                        className={\r\n                          zoomedModal ? \"zoom-login-logo\" : \"hide-logo\"\r\n                        }\r\n                        src={SuperIcon}\r\n                        alt=\"SuperstarZ logo\"\r\n                      />\r\n\r\n                      <TextField\r\n                        style={{\r\n                          width: WidthHolder,\r\n                          paddingBottom: \"60px\",\r\n                        }}\r\n                        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                        label=\"Username\"\r\n                        onChange={updateLoginvalues}\r\n                        name=\"inputedUsername\"\r\n                        value={loginvalues.inputedUsername}\r\n                        variant=\"filled\"\r\n                      />\r\n                      <TextField\r\n                        style={{ width: WidthHolder, paddingBottom: \"50px\" }}\r\n                        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                        label=\"Password\"\r\n                        onChange={updateLoginvalues}\r\n                        name=\"inputedPassword\"\r\n                        value={loginvalues.inputedPassword}\r\n                        variant=\"filled\"\r\n                      />\r\n\r\n                      <Grid container xs={12}>\r\n                        <Grid xs={4}></Grid>\r\n                        <Grid item className=\"buttonpad buttonshake\" xs={4}>\r\n                          <Button\r\n                            onClick={logmein}\r\n                            className={loginclass}\r\n                            fullWidth={true}\r\n                            variant=\"outlined\"\r\n                            size=\"large\"\r\n                            color=\"primary\"\r\n                          >\r\n                            Log In\r\n                          </Button>\r\n                        </Grid>{\" \"}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                ) : (\r\n                  <Grid xs={GridHolderB} item className=\"formholder\">\r\n                    <Grid\r\n                      xs={12}\r\n                      className=\"center-content-vertically\"\r\n                      style={{ padding: \"0px\" }}\r\n                    >\r\n                      <img\r\n                        onClick={iconclicked}\r\n                        className={\r\n                          zoomedModal ? \"zoom-signup-logo\" : \"hide-logo\"\r\n                        }\r\n                        src={SuperIcon}\r\n                        alt=\"SuperstarZ logo\"\r\n                      />\r\n                      <ModalLogFormError\r\n                        WidthHolder={WidthHolder}\r\n                        darkmode={darkmode}\r\n                        type={true}\r\n                        cantPassBadEmail={cantPassBadEmail}\r\n                        ErrorDisplay={emailErrorDisplay}\r\n                        ErrorData={emailErrorData}\r\n                      />\r\n                      <TextField\r\n                        style={{ width: WidthHolder, paddingBottom: \"45px\" }}\r\n                        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                        label=\"Email\"\r\n                        onChange={updateSignvalues}\r\n                        name=\"inputedEmail\"\r\n                        value={rawSignupValues.inputedEmail}\r\n                        variant=\"filled\"\r\n                      />\r\n                      <ModalLogFormError\r\n                        WidthHolder={WidthHolder}\r\n                        darkmode={darkmode}\r\n                        type={true}\r\n                        cantPassBadEmail={cantPassBadEmail}\r\n                        ErrorDisplay={usernameErrorDisplay}\r\n                        ErrorData={usernameErrorData}\r\n                      />\r\n                      <TextField\r\n                        style={{ width: WidthHolder, paddingBottom: \"45px\" }}\r\n                        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                        label=\"Username\"\r\n                        onChange={updateSignvalues}\r\n                        name=\"inputedUsername\"\r\n                        value={rawSignupValues.inputedUsername}\r\n                        variant=\"filled\"\r\n                      />\r\n\r\n                      <TextField\r\n                        style={{\r\n                          width: WidthHolder,\r\n                          paddingBottom: \"30px\",\r\n                          zIndex: 1,\r\n                        }}\r\n                        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                        label=\"Password\"\r\n                        onChange={updateSignvalues}\r\n                        name=\"inputedPassword\"\r\n                        value={rawSignupValues.inputedPassword}\r\n                        variant=\"filled\"\r\n                      />\r\n                      <ModalLogFormError\r\n                        darkmode={darkmode}\r\n                        WidthHolder={WidthHolder}\r\n                        type={false}\r\n                        cantPassBadEmail={cantPassBadEmail}\r\n                        ErrorDisplay={passwordErrorDisplay}\r\n                        ErrorData={passwordErrorData}\r\n                      />\r\n\r\n                      <Grid container xs={12} style={{ marginTop: \"20px\" }}>\r\n                        <Grid xs={4}></Grid>\r\n                        <Grid item className=\"buttonpad buttonshake\" xs={4}>\r\n                          <Button\r\n                            className={signupclass}\r\n                            onClick={signmeup}\r\n                            fullWidth={true}\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            color=\"secondary\"\r\n                          >\r\n                            Sign Up\r\n                          </Button>\r\n                        </Grid>{\" \"}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </Paper>\r\n          </animated.div>\r\n        </DialogContent>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}