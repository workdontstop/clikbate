{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\OptionsSlider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { matchPc, matchTablet } from \"../DetectDevice\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useSelector } from \"react-redux\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction OptionsSliderx({\n  getSliderWidth\n}) {\n  _s();\n\n  var getSliderWidthNew = matchPc ? getSliderWidth / 1.53 : matchTablet ? getSliderWidth / 1 : getSliderWidth / 0.82;\n  var optionsClickType = matchPc ? 1 : 0;\n  const optionsCollectImageRef = useRef(null);\n  const optionsImages = [\"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\", \"5.jpg\"];\n  const [translate, setTranslate] = useState(0);\n  const [stalestate, setstalestate] = useState(1);\n  const [ActiveSlide, setActiveSlide] = useState(0);\n  const [ShowHideNegativeValue, setShowHideNegativeValue] = useState(\"-\");\n  const [touchPosition, setTouchPosition] = useState(null);\n  const handleTouchMoveTimer = useRef(null);\n  const [transitionFast, settransitionFast] = useState(false);\n  const prevJoltTimer = useRef(null);\n  const nextJoltTimer = useRef(null); ///\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  var optionsNameData = [\"filter feeds\", \"albums\", \"playlist\", \"showroom\", \"posts  today\", \"settings\"]; ///\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n\n  const modalanimation = useSpring({\n    config: {\n      mass: 1,\n      tension: 120,\n      friction: 14\n    },\n    transform: `translateX(${ShowHideNegativeValue}${translate}px)`,\n    transition: transitionFast ? \"0s\" : \"0.15s\",\n    height: \"auto\",\n    display: \"flex\",\n    width: `auto`,\n    margin: \"auto\"\n  }); ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\n\n  const clickOptions = (i, type) => {\n    if (type === 1) {\n      setTranslate(stalestate + i);\n      setActiveSlide(i);\n    } else {\n      setTranslate(getSliderWidthNew * i + 1.5 * i);\n      setActiveSlide(i);\n    }\n  }; ///\n  ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n\n  const {\n    color\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color; ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n  const handleTouchStartOptions = e => {\n    ////onMouseDown onMouseMove\n    ////touchDown = e.clientX\n    const touchDown = e.touches[0].clientX;\n    setTouchPosition(touchDown);\n  };\n\n  const TouchJoltOnLastNEXT = () => {\n    setShowHideNegativeValue(\"-\");\n    var i = ActiveSlide;\n    var colorPaddingAllowance = 1.67 + i / 10;\n    var getSliderWidthNewx = getSliderWidthNew / 2;\n    setTranslate(getSliderWidthNew * i + getSliderWidthNewx);\n    nextJoltTimer.current = setTimeout(function () {\n      setTranslate(getSliderWidthNew * 0 + colorPaddingAllowance * 0);\n      setActiveSlide(ActiveSlide => 0);\n    }, 200);\n  };\n\n  const TouchJoltOnLastPREV = () => {\n    setShowHideNegativeValue(\"\");\n    var i = ActiveSlide;\n    var colorPaddingAllowance = 1.67 + i / 10;\n    var ix = optionsImages.length - 1;\n    var getSliderWidthNewx = getSliderWidthNew / 2;\n    setTranslate(getSliderWidthNewx);\n    prevJoltTimer.current = setTimeout(function () {\n      setShowHideNegativeValue(\"-\");\n      setTranslate(getSliderWidthNew * ix + colorPaddingAllowance * ix);\n      setActiveSlide(ActiveSlide => ix);\n    }, 200);\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE  FOR PC\n\n\n  const nextSlidePc = () => {\n    var i = ActiveSlide + 1;\n    var colorPaddingAllowance = 1.67 + i / 10;\n    setShowHideNegativeValue(\"-\"); ///set((state) => (state + 1) % slides.length)\n\n    if (ActiveSlide === optionsImages.length - 1) {\n      settransitionFast(true);\n      setTranslate(0);\n      setActiveSlide(0);\n    } else {\n      settransitionFast(false);\n      setTranslate(stalestate + i);\n      setActiveSlide(i);\n    }\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE\n\n\n  const nextSlide = () => {\n    var i = ActiveSlide + 1;\n    var colorPaddingAllowance = 1.67 + i / 10; ///set((state) => (state + 1) % slides.length)\n\n    if (ActiveSlide === optionsImages.length - 1) {\n      settransitionFast(true);\n      TouchJoltOnLastNEXT();\n    } else {\n      if (nextJoltTimer.current) {\n        clearTimeout(nextJoltTimer.current);\n      }\n\n      setShowHideNegativeValue(\"-\");\n      settransitionFast(false);\n      setTranslate(getSliderWidthNew * i + colorPaddingAllowance * i);\n      setActiveSlide(ActiveSlide => ActiveSlide + 1);\n    }\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE\n\n\n  const prevSlide = () => {\n    ///set((state) => (state + 1) % slides.length)\n    var i = ActiveSlide - 1;\n    var colorPaddingAllowance = 1.67 + i / 10;\n\n    if (ActiveSlide === 0) {\n      settransitionFast(true);\n      TouchJoltOnLastPREV();\n    } else {\n      if (prevJoltTimer.current) {\n        clearTimeout(prevJoltTimer.current);\n      }\n\n      setShowHideNegativeValue(\"-\");\n      settransitionFast(false);\n      setTranslate(getSliderWidthNew * i + colorPaddingAllowance * i);\n      setActiveSlide(ActiveSlide => ActiveSlide - 1);\n    }\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH MOVE EVENT\n\n\n  const handleTouchMoveOptions = e => {\n    if (handleTouchMoveTimer.current) {\n      clearTimeout(handleTouchMoveTimer.current);\n    }\n\n    handleTouchMoveTimer.current = setTimeout(function () {\n      const touchDown = touchPosition;\n\n      if (touchDown === null) {\n        return;\n      } ////currentTouch = e.clientX\n\n\n      const currentTouch = e.touches[0].clientX;\n      const diff = touchDown - currentTouch;\n\n      if (diff > 1) {\n        nextSlide();\n      } else if (diff < -1) {\n        prevSlide();\n      } else {}\n\n      setTouchPosition(null);\n      return false;\n    }, 50);\n    return false;\n  }; ///\n  ///\n  ///\n  ///MUI PAPER STYLES FROM REDUX\n\n\n  const {\n    PaperStyleLight,\n    PaperStyleDark\n  } = useSelector(state => ({ ...state.PaperReducerLightnDark\n  }));\n  var PaperStyleReducer = \"\";\n\n  if (darkmodeReducer) {\n    PaperStyleReducer = PaperStyleDark;\n  } else {\n    PaperStyleReducer = PaperStyleLight;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      onTouchStart: handleTouchStartOptions,\n      onTouchMove: handleTouchMoveOptions,\n      style: {\n        position: \"relative\",\n        margin: \"0 auto\",\n        overflow: \"hidden\",\n        left: \"0px\",\n        paddingBottom: \"19px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        ref: optionsCollectImageRef,\n        style: modalanimation,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            margin: \"auto\",\n            textAlign: \"center\",\n            position: \"relative\",\n            bottom: \"0.2em\",\n            left: \"-4px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CircleIcon, {\n            onClick: () => {\n              nextSlidePc();\n            },\n            className: \"buttonshake\",\n            style: {\n              fontSize: \"1.3vw\",\n              cursor: \"pointer\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), optionsImages.map((im, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => {\n                clickOptions(i, optionsClickType);\n              },\n              className: darkmodeReducer ? `turoptionDark` : ` turoptionLight`,\n              style: {\n                cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\n                width: `${getSliderWidthNew}px`,\n                height: `${getSliderWidthNew}px`,\n                borderRadius: \"50%\",\n                padding: \"0px\",\n                objectFit: \"cover\",\n                marginLeft: \"2px\",\n                marginTop: \"14px\",\n                boxShadow: darkmodeReducer ? ActiveSlide === i ? `0 0 6.5px ${colorReducer}` : \"\" : ActiveSlide === i ? `0 0 5px ${colorReducer}` : \"\",\n                marginBottom: \"2.2px\"\n              },\n              src: `./images/options/${im}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              style: {\n                margin: \"auto\",\n                textAlign: \"center\",\n                position: \"relative\",\n                bottom: \"0.2em\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                style: {\n                  fontSize: matchPc ? \"1vw\" : \"1.74vh\",\n                  fontWeight: \"bolder\",\n                  fontFamily: \"Arial, Helvetica, sans-serif\",\n                  display: ActiveSlide === i ? \"block\" : \"none\",\n                  color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\"\n                },\n                children: [\" \", optionsNameData[i]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)\n        }, void 0, false))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true);\n}\n\n_s(OptionsSliderx, \"H2G+Y1/djsgnSMmt/ucb1XXjFCw=\", false, function () {\n  return [useSelector, useSpring, useSelector, useSelector];\n});\n\n_c = OptionsSliderx;\nexport const OptionsSlider = /*#__PURE__*/React.memo(OptionsSliderx);\n_c2 = OptionsSlider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OptionsSliderx\");\n$RefreshReg$(_c2, \"OptionsSlider\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/OptionsSlider.tsx"],"names":["React","useRef","useState","Grid","matchPc","matchTablet","useSpring","animated","useSelector","CircleIcon","OptionsSliderx","getSliderWidth","getSliderWidthNew","optionsClickType","optionsCollectImageRef","optionsImages","translate","setTranslate","stalestate","setstalestate","ActiveSlide","setActiveSlide","ShowHideNegativeValue","setShowHideNegativeValue","touchPosition","setTouchPosition","handleTouchMoveTimer","transitionFast","settransitionFast","prevJoltTimer","nextJoltTimer","darkmode","state","GlobalReducer","darkmodeReducer","optionsNameData","modalanimation","config","mass","tension","friction","transform","transition","height","display","width","margin","clickOptions","i","type","color","GlobalReducerColor","colorReducer","handleTouchStartOptions","e","touchDown","touches","clientX","TouchJoltOnLastNEXT","colorPaddingAllowance","getSliderWidthNewx","current","setTimeout","TouchJoltOnLastPREV","ix","length","nextSlidePc","nextSlide","clearTimeout","prevSlide","handleTouchMoveOptions","currentTouch","diff","PaperStyleLight","PaperStyleDark","PaperReducerLightnDark","PaperStyleReducer","position","overflow","left","paddingBottom","textAlign","bottom","fontSize","cursor","map","im","borderRadius","padding","objectFit","marginLeft","marginTop","boxShadow","marginBottom","fontWeight","fontFamily","OptionsSlider","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\n\r\nfunction OptionsSliderx({ getSliderWidth }: any) {\r\n  var getSliderWidthNew = matchPc\r\n    ? getSliderWidth / 1.53\r\n    : matchTablet\r\n    ? getSliderWidth / 1\r\n    : getSliderWidth / 0.82;\r\n\r\n  var optionsClickType: number = matchPc ? 1 : 0;\r\n\r\n  const optionsCollectImageRef = useRef<HTMLDivElement>(null);\r\n  const optionsImages = [\"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\", \"5.jpg\"];\r\n  const [translate, setTranslate] = useState(0);\r\n  const [stalestate, setstalestate] = useState(1);\r\n\r\n  const [ActiveSlide, setActiveSlide] = useState(0);\r\n  const [ShowHideNegativeValue, setShowHideNegativeValue] = useState(\"-\");\r\n\r\n  const [touchPosition, setTouchPosition] = useState(null);\r\n  const handleTouchMoveTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const [transitionFast, settransitionFast] = useState<boolean>(false);\r\n\r\n  const prevJoltTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const nextJoltTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  var optionsNameData = [\r\n    \"filter feeds\",\r\n    \"albums\",\r\n    \"playlist\",\r\n    \"showroom\",\r\n    \"posts  today\",\r\n    \"settings\",\r\n  ];\r\n\r\n  ///\r\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      mass: 1,\r\n      tension: 120,\r\n      friction: 14,\r\n    },\r\n\r\n    transform: `translateX(${ShowHideNegativeValue}${translate}px)`,\r\n    transition: transitionFast ? \"0s\" : \"0.15s\",\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    width: `auto`,\r\n    margin: \"auto\",\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\r\n  const clickOptions = (i: number, type: number) => {\r\n    if (type === 1) {\r\n      setTranslate(stalestate + i);\r\n      setActiveSlide(i);\r\n    } else {\r\n      setTranslate(getSliderWidthNew * i + 1.5 * i);\r\n      setActiveSlide(i);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n    };\r\n  }\r\n  const { color } = useSelector((state: RootStateReducerColor) => ({\r\n    ...state.GlobalReducerColor,\r\n  }));\r\n  const colorReducer = color;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const handleTouchStartOptions = (e: any) => {\r\n    ////onMouseDown onMouseMove\r\n    ////touchDown = e.clientX\r\n    const touchDown = e.touches[0].clientX;\r\n    setTouchPosition(touchDown);\r\n  };\r\n\r\n  const TouchJoltOnLastNEXT = () => {\r\n    setShowHideNegativeValue(\"-\");\r\n    var i = ActiveSlide;\r\n    var colorPaddingAllowance = 1.67 + i / 10;\r\n    var getSliderWidthNewx = getSliderWidthNew / 2;\r\n    setTranslate(getSliderWidthNew * i + getSliderWidthNewx);\r\n    nextJoltTimer.current = setTimeout(function () {\r\n      setTranslate(getSliderWidthNew * 0 + colorPaddingAllowance * 0);\r\n      setActiveSlide((ActiveSlide) => 0);\r\n    }, 200);\r\n  };\r\n\r\n  const TouchJoltOnLastPREV = () => {\r\n    setShowHideNegativeValue(\"\");\r\n    var i = ActiveSlide;\r\n    var colorPaddingAllowance = 1.67 + i / 10;\r\n    var ix = optionsImages.length - 1;\r\n    var getSliderWidthNewx = getSliderWidthNew / 2;\r\n    setTranslate(getSliderWidthNewx);\r\n    prevJoltTimer.current = setTimeout(function () {\r\n      setShowHideNegativeValue(\"-\");\r\n      setTranslate(getSliderWidthNew * ix + colorPaddingAllowance * ix);\r\n      setActiveSlide((ActiveSlide) => ix);\r\n    }, 200);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE  FOR PC\r\n  const nextSlidePc = () => {\r\n    var i = ActiveSlide + 1;\r\n    var colorPaddingAllowance = 1.67 + i / 10;\r\n    setShowHideNegativeValue(\"-\");\r\n    ///set((state) => (state + 1) % slides.length)\r\n    if (ActiveSlide === optionsImages.length - 1) {\r\n      settransitionFast(true);\r\n      setTranslate(0);\r\n      setActiveSlide(0);\r\n    } else {\r\n      settransitionFast(false);\r\n      setTranslate(stalestate + i);\r\n      setActiveSlide(i);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const nextSlide = () => {\r\n    var i = ActiveSlide + 1;\r\n    var colorPaddingAllowance = 1.67 + i / 10;\r\n    ///set((state) => (state + 1) % slides.length)\r\n    if (ActiveSlide === optionsImages.length - 1) {\r\n      settransitionFast(true);\r\n      TouchJoltOnLastNEXT();\r\n    } else {\r\n      if (nextJoltTimer.current) {\r\n        clearTimeout(nextJoltTimer.current);\r\n      }\r\n      setShowHideNegativeValue(\"-\");\r\n      settransitionFast(false);\r\n      setTranslate(getSliderWidthNew * i + colorPaddingAllowance * i);\r\n      setActiveSlide((ActiveSlide) => ActiveSlide + 1);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const prevSlide = () => {\r\n    ///set((state) => (state + 1) % slides.length)\r\n    var i = ActiveSlide - 1;\r\n    var colorPaddingAllowance = 1.67 + i / 10;\r\n    if (ActiveSlide === 0) {\r\n      settransitionFast(true);\r\n      TouchJoltOnLastPREV();\r\n    } else {\r\n      if (prevJoltTimer.current) {\r\n        clearTimeout(prevJoltTimer.current);\r\n      }\r\n      setShowHideNegativeValue(\"-\");\r\n      settransitionFast(false);\r\n      setTranslate(getSliderWidthNew * i + colorPaddingAllowance * i);\r\n      setActiveSlide((ActiveSlide) => ActiveSlide - 1);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH MOVE EVENT\r\n  const handleTouchMoveOptions = (e: any) => {\r\n    if (handleTouchMoveTimer.current) {\r\n      clearTimeout(handleTouchMoveTimer.current);\r\n    }\r\n    handleTouchMoveTimer.current = setTimeout(function () {\r\n      const touchDown = touchPosition;\r\n\r\n      if (touchDown === null) {\r\n        return;\r\n      }\r\n      ////currentTouch = e.clientX\r\n      const currentTouch = e.touches[0].clientX;\r\n      const diff = touchDown - currentTouch;\r\n\r\n      if (diff > 1) {\r\n        nextSlide();\r\n      } else if (diff < -1) {\r\n        prevSlide();\r\n      } else {\r\n      }\r\n\r\n      setTouchPosition(null);\r\n      return false;\r\n    }, 50);\r\n\r\n    return false;\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///MUI PAPER STYLES FROM REDUX\r\n  const { PaperStyleLight, PaperStyleDark } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.PaperReducerLightnDark,\r\n    })\r\n  );\r\n  var PaperStyleReducer = \"\";\r\n\r\n  if (darkmodeReducer) {\r\n    PaperStyleReducer = PaperStyleDark;\r\n  } else {\r\n    PaperStyleReducer = PaperStyleLight;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        onTouchStart={handleTouchStartOptions}\r\n        onTouchMove={handleTouchMoveOptions}\r\n        style={{\r\n          position: \"relative\",\r\n          margin: \"0 auto\",\r\n          overflow: \"hidden\",\r\n          left: \"0px\",\r\n          paddingBottom: \"19px\",\r\n        }}\r\n      >\r\n        <animated.div ref={optionsCollectImageRef} style={modalanimation}>\r\n          <Grid\r\n            item\r\n            style={{\r\n              margin: \"auto\",\r\n              textAlign: \"center\",\r\n              position: \"relative\",\r\n              bottom: \"0.2em\",\r\n              left: \"-4px\",\r\n            }}\r\n          >\r\n            <CircleIcon\r\n              onClick={() => {\r\n                nextSlidePc();\r\n              }}\r\n              className=\"buttonshake\"\r\n              style={{ fontSize: \"1.3vw\", cursor: \"pointer\" }}\r\n            />\r\n          </Grid>\r\n          {optionsImages.map((im: any, i: any) => (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <img\r\n                  onClick={() => {\r\n                    clickOptions(i, optionsClickType);\r\n                  }}\r\n                  className={\r\n                    darkmodeReducer ? `turoptionDark` : ` turoptionLight`\r\n                  }\r\n                  style={{\r\n                    cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\r\n                    width: `${getSliderWidthNew}px`,\r\n                    height: `${getSliderWidthNew}px`,\r\n                    borderRadius: \"50%\",\r\n                    padding: \"0px\",\r\n                    objectFit: \"cover\",\r\n                    marginLeft: \"2px\",\r\n                    marginTop: \"14px\",\r\n                    boxShadow: darkmodeReducer\r\n                      ? ActiveSlide === i\r\n                        ? `0 0 6.5px ${colorReducer}`\r\n                        : \"\"\r\n                      : ActiveSlide === i\r\n                      ? `0 0 5px ${colorReducer}`\r\n                      : \"\",\r\n                    marginBottom: \"2.2px\",\r\n                  }}\r\n                  src={`./images/options/${im}`}\r\n                />\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{\r\n                    margin: \"auto\",\r\n                    textAlign: \"center\",\r\n                    position: \"relative\",\r\n                    bottom: \"0.2em\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                      fontSize: matchPc ? \"1vw\" : \"1.74vh\",\r\n                      fontWeight: \"bolder\",\r\n                      fontFamily: \"Arial, Helvetica, sans-serif\",\r\n                      display: ActiveSlide === i ? \"block\" : \"none\",\r\n                      color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {optionsNameData[i]}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          ))}\r\n        </animated.div>\r\n      </Grid>{\" \"}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const OptionsSlider = React.memo(OptionsSliderx);\r\n"]},"metadata":{},"sourceType":"module"}