{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\ShowComments.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport QuickreplyIcon from \"@mui/icons-material/Quickreply\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n///Axios.defaults.withCredentials = true;\nfunction ShowCommentsx({\n  i,\n  zoomedModal,\n  wideImage,\n  post,\n  AddRef,\n  length,\n  callObserver\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n  ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n  const {\n    image,\n    imageThumb,\n    id\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const imageReducer = image;\n  const imageReducerThumb = imageThumb;\n  const idReducer = id;\n  useEffect(() => {\n    if (i + 1 === length) {\n      callObserver();\n    }\n  }, [i]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        position: \"relative\",\n        height: \"auto\",\n        color: darkmodeReducer ? \"#ffffff\" : \"#000000\",\n        fontFamily: \"Arial, Helvetica, sans-seri\",\n        paddingRight: \"0vh\",\n        paddingBottom: \"3vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => {},\n          className: darkmodeReducer ? `turprofileDark image-gray-on-click ` : ` turprofileLight image-gray-on-click`,\n          style: {\n            cursor: \"pointer\",\n            position: \"relative\",\n            top: \"0px\",\n            padding: \"0px\",\n            zIndex: 1,\n            objectFit: \"contain\",\n            width: zoomedModal ? \"5%\" : \"13%\",\n            height: \"auto\",\n            left: wideImage ? zoomedModal ? \"1.5vw\" : \"\" : zoomedModal ? \"3vw\" : \"\",\n            borderRadius: \"50%\",\n            margin: \"auto\"\n          },\n          src: `${post.profile_image}`,\n          alt: \"Superstarz Billboard \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            width: \"80%\"\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              opacity: 0.9,\n              display: \"block\",\n              fontWeight: \"bold\",\n              fontSize: zoomedModal ? \"0.7vw\" : \"0.9vw\",\n              paddingLeft: \"1.3vh\"\n            },\n            children: post.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"0.8vw\"\n            },\n            children: [\" \", /*#__PURE__*/_jsxDEV(CircleIcon, {\n              style: {\n                fontSize: \"0.5vw\",\n                color: post.color1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: zoomedModal ? \"1vw\" : \"0.9vw\",\n              opacity: 0.7\n            },\n            children: [\" \", post.com, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(QuickreplyIcon, {\n          style: {\n            top: \"0vh\",\n            color: darkmodeReducer ? \"#ffffff\" : \"#000000\",\n            position: \"relative\",\n            fontSize: \"1.5vw\",\n            opacity: 0.26,\n            left: zoomedModal ? \"-4vw\" : \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false)\n  /*MOBILE  MOBILE  MOBILE  MOBILE  SIGNUP MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\n  ;\n}\n\n_s(ShowCommentsx, \"XEF5Oc/XXLKJ6v5pj3/3WPhHTpk=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ShowCommentsx;\nexport const ShowComments = /*#__PURE__*/React.memo(ShowCommentsx);\n_c2 = ShowComments;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShowCommentsx\");\n$RefreshReg$(_c2, \"ShowComments\");","map":{"version":3,"sources":["C:/Users/oghen/Documents/ClikBate/super/src/profile/ShowComments.tsx"],"names":["React","useEffect","Grid","useSelector","QuickreplyIcon","CircleIcon","ShowCommentsx","i","zoomedModal","wideImage","post","AddRef","length","callObserver","darkmode","state","GlobalReducer","darkmodeReducer","image","imageThumb","id","UserdataReducer","imageReducer","imageReducerThumb","idReducer","position","height","color","fontFamily","paddingRight","paddingBottom","display","alignItems","cursor","top","padding","zIndex","objectFit","width","left","borderRadius","margin","profile_image","opacity","fontWeight","fontSize","paddingLeft","username","marginLeft","color1","com","ShowComments","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAA+CC,SAA/C,QAAgE,OAAhE;AASA,SAAiBC,IAAjB,QAA6B,mBAA7B;AAEA,SAAyBC,WAAzB,QAAyD,aAAzD;AAYA,OAAOC,cAAP,MAA2B,gCAA3B;AAEA,OAAOC,UAAP,MAAuB,4BAAvB;;;;AAOA;AAEA,SAASC,aAAT,CAAuB;AACrBC,EAAAA,CADqB;AAErBC,EAAAA,WAFqB;AAGrBC,EAAAA,SAHqB;AAIrBC,EAAAA,IAJqB;AAKrBC,EAAAA,MALqB;AAMrBC,EAAAA,MANqB;AAOrBC,EAAAA;AAPqB,CAAvB,EAQQ;AAAA;;AACN;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeX,WAAW,CAAEY,KAAD,KAAoC,EACnE,GAAGA,KAAK,CAACC;AAD0D,GAApC,CAAD,CAAhC;AAGA,QAAMC,eAAe,GAAGH,QAAxB,CAnBM,CAqBN;AACA;AACA;AACA;;AAQA,QAAM;AAAEI,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA;AAArB,MAA4BjB,WAAW,CAC1CY,KAAD,KAAmC,EACjC,GAAGA,KAAK,CAACM;AADwB,GAAnC,CAD2C,CAA7C;AAKA,QAAMC,YAAY,GAAGJ,KAArB;AACA,QAAMK,iBAAiB,GAAGJ,UAA1B;AACA,QAAMK,SAAS,GAAGJ,EAAlB;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,CAAC,GAAG,CAAJ,KAAUK,MAAd,EAAsB;AACpBC,MAAAA,YAAY;AACb;AACF,GAJQ,EAIN,CAACN,CAAD,CAJM,CAAT;AAMA,sBACE;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,EAAE,EAAE,EAFN;AAGE,MAAA,KAAK,EAAE;AACLkB,QAAAA,QAAQ,EAAE,UADL;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,KAAK,EAAEV,eAAe,GAAG,SAAH,GAAe,SAHhC;AAILW,QAAAA,UAAU,EAAE,6BAJP;AAKLC,QAAAA,YAAY,EAAE,KALT;AAMLC,QAAAA,aAAa,EAAE;AANV,OAHT;AAAA,8BAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,UAAU,EAAE;AAA/B,SAAb;AAAA,mBACG,GADH,eAEE;AACE,UAAA,OAAO,EAAE,MAAM,CAAE,CADnB;AAEE,UAAA,SAAS,EACPf,eAAe,GACV,qCADU,GAEV,sCALT;AAOE,UAAA,KAAK,EAAE;AACLgB,YAAAA,MAAM,EAAE,SADH;AAELR,YAAAA,QAAQ,EAAE,UAFL;AAGLS,YAAAA,GAAG,EAAE,KAHA;AAILC,YAAAA,OAAO,EAAE,KAJJ;AAKLC,YAAAA,MAAM,EAAE,CALH;AAMLC,YAAAA,SAAS,EAAE,SANN;AAOLC,YAAAA,KAAK,EAAE9B,WAAW,GAAG,IAAH,GAAU,KAPvB;AAQLkB,YAAAA,MAAM,EAAE,MARH;AASLa,YAAAA,IAAI,EAAE9B,SAAS,GACXD,WAAW,GACT,OADS,GAET,EAHS,GAIXA,WAAW,GACX,KADW,GAEX,EAfC;AAgBLgC,YAAAA,YAAY,EAAE,KAhBT;AAiBLC,YAAAA,MAAM,EAAE;AAjBH,WAPT;AA0BE,UAAA,GAAG,EAAG,GAAE/B,IAAI,CAACgC,aAAc,EA1B7B;AA2BE,UAAA,GAAG,EAAC;AA3BN;AAAA;AAAA;AAAA;AAAA,gBAFF,EA8BK,GA9BL,eA+BE;AAAM,UAAA,KAAK,EAAE;AAAEJ,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA,qBACG,GADH,eAEE;AACE,YAAA,KAAK,EAAE;AACLK,cAAAA,OAAO,EAAE,GADJ;AAELZ,cAAAA,OAAO,EAAE,OAFJ;AAGLa,cAAAA,UAAU,EAAE,MAHP;AAILC,cAAAA,QAAQ,EAAErC,WAAW,GAAG,OAAH,GAAa,OAJ7B;AAKLsC,cAAAA,WAAW,EAAE;AALR,aADT;AAAA,sBASGpC,IAAI,CAACqC;AATR;AAAA;AAAA;AAAA;AAAA,kBAFF,eAaE;AAAM,YAAA,KAAK,EAAE;AAAEC,cAAAA,UAAU,EAAE;AAAd,aAAb;AAAA,uBACG,GADH,eAEE,QAAC,UAAD;AACE,cAAA,KAAK,EAAE;AACLH,gBAAAA,QAAQ,EAAE,OADL;AAELlB,gBAAAA,KAAK,EAAEjB,IAAI,CAACuC;AAFP;AADT;AAAA;AAAA;AAAA;AAAA,oBAFF,EAOK,GAPL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAsBE;AACE,YAAA,KAAK,EAAE;AACLJ,cAAAA,QAAQ,EAAErC,WAAW,GAAG,KAAH,GAAW,OAD3B;AAELmC,cAAAA,OAAO,EAAE;AAFJ,aADT;AAAA,uBAMG,GANH,EAOGjC,IAAI,CAACwC,GAPR,EAOa,GAPb;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BF,EA8DU,GA9DV,eA+DE,QAAC,cAAD;AACE,UAAA,KAAK,EAAE;AACLhB,YAAAA,GAAG,EAAE,KADA;AAELP,YAAAA,KAAK,EAAEV,eAAe,GAAG,SAAH,GAAe,SAFhC;AAGLQ,YAAAA,QAAQ,EAAE,UAHL;AAILoB,YAAAA,QAAQ,EAAE,OAJL;AAKLF,YAAAA,OAAO,EAAE,IALJ;AAMLJ,YAAAA,IAAI,EAAE/B,WAAW,GAAG,MAAH,GAAY;AANxB;AADT;AAAA;AAAA;AAAA;AAAA,gBA/DF,EAwEK,GAxEL;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AA0FA;AA3FF;AA6FD;;GApJQF,a;UAwBcH,W,EAgBaA,W;;;KAxC3BG,a;AAsJT,OAAO,MAAM6C,YAAY,gBAAGnD,KAAK,CAACoD,IAAN,CAAW9C,aAAX,CAArB;MAAM6C,Y","sourcesContent":["import React, { useRef, useState, useCallback, useEffect } from \"react\";\r\nimport { Ispinnerinterface, IFormHolder } from \"../log/log-Interfaces\";\r\nimport Axios from \"axios\";\r\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\r\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\r\nimport { TextFieldLogin } from \"../log/TextFieldLogin\";\r\nimport { TextFieldSignup } from \"../log/TextFieldSignup\";\r\nimport { ModalFormSignupError } from \"../log/ModalFormSignupError\";\r\nimport { ModalFormLoginError } from \"../log/ModalFormLoginError\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { IsLoggedAction } from \"../log/actions/IsLoggedAction\";\r\nimport { UserdataAction } from \"../log/actions/UserdataAction\";\r\nimport { ActivateLoaderAction, HideLoaderAction } from \"../GlobalActions\";\r\n//////import { useHistory } from \"react-router-dom\";\r\nimport { PasswordCheck } from \"../log/PasswordCheck\";\r\nimport { UpdateColorAction } from \"../GlobalActions\";\r\nimport { UserInfoUpdateAction } from \"../log/actions/UserdataAction\";\r\nimport KeyboardDoubleArrowRightIcon from \"@mui/icons-material/KeyboardDoubleArrowRight\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport ReplyAllIcon from \"@mui/icons-material/ReplyAll\";\r\nimport QuickreplyIcon from \"@mui/icons-material/Quickreply\";\r\nimport { ICommentTemplate, IGrid } from \"../log/log-Interfaces\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport CommentIcon from \"@mui/icons-material/Comment\";\r\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\r\nimport TextareaAutosize from \"@mui/base/TextareaAutosize\";\r\nimport { DialogContent } from \"@material-ui/core\";\r\nimport { animated } from \"react-spring\";\r\n\r\n///Axios.defaults.withCredentials = true;\r\n\r\nfunction ShowCommentsx({\r\n  i,\r\n  zoomedModal,\r\n  wideImage,\r\n  post,\r\n  AddRef,\r\n  length,\r\n  callObserver,\r\n}: any) {\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      image: string;\r\n      imageThumb: string;\r\n      id: number;\r\n    };\r\n  }\r\n  const { image, imageThumb, id } = useSelector(\r\n    (state: RootStateReducerImage) => ({\r\n      ...state.UserdataReducer,\r\n    })\r\n  );\r\n  const imageReducer = image;\r\n  const imageReducerThumb = imageThumb;\r\n  const idReducer = id;\r\n\r\n  useEffect(() => {\r\n    if (i + 1 === length) {\r\n      callObserver();\r\n    }\r\n  }, [i]);\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          position: \"relative\",\r\n          height: \"auto\",\r\n          color: darkmodeReducer ? \"#ffffff\" : \"#000000\",\r\n          fontFamily: \"Arial, Helvetica, sans-seri\",\r\n          paddingRight: \"0vh\",\r\n          paddingBottom: \"3vh\",\r\n        }}\r\n      >\r\n        <span> </span>\r\n        <span style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          {\" \"}\r\n          <img\r\n            onClick={() => {}}\r\n            className={\r\n              darkmodeReducer\r\n                ? `turprofileDark image-gray-on-click `\r\n                : ` turprofileLight image-gray-on-click`\r\n            }\r\n            style={{\r\n              cursor: \"pointer\",\r\n              position: \"relative\",\r\n              top: \"0px\",\r\n              padding: \"0px\",\r\n              zIndex: 1,\r\n              objectFit: \"contain\",\r\n              width: zoomedModal ? \"5%\" : \"13%\",\r\n              height: \"auto\",\r\n              left: wideImage\r\n                ? zoomedModal\r\n                  ? \"1.5vw\"\r\n                  : \"\"\r\n                : zoomedModal\r\n                ? \"3vw\"\r\n                : \"\",\r\n              borderRadius: \"50%\",\r\n              margin: \"auto\",\r\n            }}\r\n            src={`${post.profile_image}`}\r\n            alt=\"Superstarz Billboard \"\r\n          />{\" \"}\r\n          <span style={{ width: \"80%\" }}>\r\n            {\" \"}\r\n            <span\r\n              style={{\r\n                opacity: 0.9,\r\n                display: \"block\",\r\n                fontWeight: \"bold\",\r\n                fontSize: zoomedModal ? \"0.7vw\" : \"0.9vw\",\r\n                paddingLeft: \"1.3vh\",\r\n              }}\r\n            >\r\n              {post.username}\r\n            </span>\r\n            <span style={{ marginLeft: \"0.8vw\" }}>\r\n              {\" \"}\r\n              <CircleIcon\r\n                style={{\r\n                  fontSize: \"0.5vw\",\r\n                  color: post.color1,\r\n                }}\r\n              />{\" \"}\r\n            </span>\r\n            <span\r\n              style={{\r\n                fontSize: zoomedModal ? \"1vw\" : \"0.9vw\",\r\n                opacity: 0.7,\r\n              }}\r\n            >\r\n              {\" \"}\r\n              {post.com}{\" \"}\r\n            </span>\r\n          </span>{\" \"}\r\n          <QuickreplyIcon\r\n            style={{\r\n              top: \"0vh\",\r\n              color: darkmodeReducer ? \"#ffffff\" : \"#000000\",\r\n              position: \"relative\",\r\n              fontSize: \"1.5vw\",\r\n              opacity: 0.26,\r\n              left: zoomedModal ? \"-4vw\" : \"0px\",\r\n            }}\r\n          />{\" \"}\r\n        </span>\r\n      </Grid>\r\n    </>\r\n    /*MOBILE  MOBILE  MOBILE  MOBILE  SIGNUP MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\r\n  );\r\n}\r\n\r\nexport const ShowComments = React.memo(ShowCommentsx);\r\n"]},"metadata":{},"sourceType":"module"}