{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\Option.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { OptionInnerModal } from \"./OptionInnerModal\";\nimport { useTheme, useMediaQuery, Grid } from \"@material-ui/core\";\nimport \"./Option.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Optionx([darkmode, setDarkmode]) {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n  var usetheme = useTheme();\n  var matchPc = useMediaQuery(usetheme.breakpoints.up(\"md\"));\n  var matchTablet = useMediaQuery(usetheme.breakpoints.up(\"sm\"));\n  var superFont = \"\";\n  var optionsContainer = \"\";\n  var fontData;\n  const fontDataPc = {\n    fontSize: \"3.1rem\"\n  };\n  const fontDataTablet = {\n    fontSize: \"3.2rem\"\n  };\n  const fontDataMobile = {\n    fontSize: \"1.7rem\"\n  }; ///\n  ///\n  ///\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\n\n  if (matchPc) {\n    superFont = \"super-starz-text-Pc\";\n    optionsContainer = \"optionsContainer-Pc-Tab\";\n    fontData = fontDataPc; ///\n  } else if (matchTablet) {\n    superFont = \"super-starz-text-Tablet\";\n    optionsContainer = \"optionsContainer-Pc-Tab\";\n    fontData = fontDataTablet; ///\n  } else {\n    superFont = \"super-starz-text-Mobile\";\n    optionsContainer = \"optionsContainer-Mobile\";\n    fontData = fontDataMobile;\n  } ///\n  ///\n  ///\n  /// CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\n\n\n  const closemodal = useCallback(backbutton => {\n    //pop states fires when back and forward buttons used\n    if (backbutton === 1) {\n      window.onpopstate = () => {\n        window.history.pushState(null, \"\", window.location.href);\n        window.onpopstate = null;\n        setShowModal(false);\n      };\n    } else {\n      window.history.pushState(null, \"\", \".\");\n      window.onpopstate = null;\n      setShowModal(false);\n    }\n  }, [showModal]); ///\n  ///\n  ///\n  ///OPEN MODAL THEN CALL CLOSEMODAL FUNCTION WHICH WAITS FOR A POP EVENT(for closing modal)\n\n  const Openmodal = useCallback(() => {\n    setShowModal(!showModal); //pushstate add enteries to your history\n\n    window.history.pushState(null, \"\", \"Options\");\n    closemodal(1);\n  }, [showModal, closemodal]);\n  console.log(\"zerformance issues\");\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [showModal ? null : /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: optionsContainer,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        style: {\n          textAlign: \"left\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: superFont,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: darkmode ? \"text-superstarz-dark   text-superstarz-dark-colorA  \" : \"text-superstarz-light  text-superstarz-light-colorA  \",\n            children: \"Super\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: darkmode ? \"text-superstarz-dark     text-superstarz-dark-colorB  \" : \"text-superstarz-light   text-superstarz-light-colorB   \",\n            children: \"starZ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        className: \"text-align-right\",\n        children: /*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n          onClick: Openmodal,\n          className: darkmode ? \"make-small-icons-clickable-dark dontallowhighlighting  \" : \"make-small-icons-clickable-light  dontallowhighlighting  \",\n          fontSize: \"large\",\n          style: fontData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(OptionInnerModal, {\n      showModal: showModal,\n      closemodal: closemodal,\n      darkmode: darkmode,\n      setDarkmode: setDarkmode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Optionx, \"Pz6BgRMBveT5z429dgzfZp8EjZw=\", false, function () {\n  return [useTheme, useMediaQuery, useMediaQuery];\n});\n\n_c = Optionx;\nexport const Option = /*#__PURE__*/React.memo(Optionx);\n_c2 = Option;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Optionx\");\n$RefreshReg$(_c2, \"Option\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/Option.tsx"],"names":["React","useState","useCallback","MoreHorizIcon","OptionInnerModal","useTheme","useMediaQuery","Grid","Optionx","darkmode","setDarkmode","showModal","setShowModal","usetheme","matchPc","breakpoints","up","matchTablet","superFont","optionsContainer","fontData","fontDataPc","fontSize","fontDataTablet","fontDataMobile","closemodal","backbutton","window","onpopstate","history","pushState","location","href","Openmodal","console","log","textAlign","Option","memo"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\n\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { OptionInnerModal } from \"./OptionInnerModal\";\r\nimport { IOption } from \"./appFolder-Interfaces\";\r\n\r\nimport { useTheme, useMediaQuery, Grid } from \"@material-ui/core\";\r\n\r\nimport \"./Option.css\";\r\nimport * as CSS from \"csstype\";\r\n\r\nfunction Optionx([darkmode, setDarkmode]: IOption): JSX.Element {\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  var usetheme = useTheme();\r\n  var matchPc = useMediaQuery(usetheme.breakpoints.up(\"md\"));\r\n  var matchTablet = useMediaQuery(usetheme.breakpoints.up(\"sm\"));\r\n\r\n  var superFont = \"\";\r\n  var optionsContainer = \"\";\r\n  var fontData: CSS.Properties;\r\n\r\n  const fontDataPc: CSS.Properties = { fontSize: \"3.1rem\" };\r\n  const fontDataTablet: CSS.Properties = { fontSize: \"3.2rem\" };\r\n  const fontDataMobile: CSS.Properties = { fontSize: \"1.7rem\" };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\r\n  if (matchPc) {\r\n    superFont = \"super-starz-text-Pc\";\r\n    optionsContainer = \"optionsContainer-Pc-Tab\";\r\n    fontData = fontDataPc;\r\n    ///\r\n  } else if (matchTablet) {\r\n    superFont = \"super-starz-text-Tablet\";\r\n    optionsContainer = \"optionsContainer-Pc-Tab\";\r\n    fontData = fontDataTablet;\r\n    ///\r\n  } else {\r\n    superFont = \"super-starz-text-Mobile\";\r\n    optionsContainer = \"optionsContainer-Mobile\";\r\n    fontData = fontDataMobile;\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\r\n  const closemodal = useCallback(\r\n    (backbutton: number) => {\r\n      //pop states fires when back and forward buttons used\r\n      if (backbutton === 1) {\r\n        window.onpopstate = () => {\r\n          window.history.pushState(null, \"\", window.location.href);\r\n          window.onpopstate = null;\r\n          setShowModal(false);\r\n        };\r\n      } else {\r\n        window.history.pushState(null, \"\", \".\");\r\n        window.onpopstate = null;\r\n        setShowModal(false);\r\n      }\r\n    },\r\n    [showModal]\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///OPEN MODAL THEN CALL CLOSEMODAL FUNCTION WHICH WAITS FOR A POP EVENT(for closing modal)\r\n  const Openmodal = useCallback(() => {\r\n    setShowModal(!showModal);\r\n    //pushstate add enteries to your history\r\n    window.history.pushState(null, \"\", \"Options\");\r\n    closemodal(1);\r\n  }, [showModal, closemodal]);\r\n\r\n  console.log(\"zerformance issues\");\r\n\r\n  return (\r\n    <Grid container>\r\n      {showModal ? null : (\r\n        <Grid item xs={12} className={optionsContainer}>\r\n          <Grid item xs={6} style={{ textAlign: \"left\" }}>\r\n            <span className={superFont}>\r\n              <span\r\n                className={\r\n                  darkmode\r\n                    ? \"text-superstarz-dark   text-superstarz-dark-colorA  \"\r\n                    : \"text-superstarz-light  text-superstarz-light-colorA  \"\r\n                }\r\n              >\r\n                Super\r\n              </span>\r\n              <span\r\n                className={\r\n                  darkmode\r\n                    ? \"text-superstarz-dark     text-superstarz-dark-colorB  \"\r\n                    : \"text-superstarz-light   text-superstarz-light-colorB   \"\r\n                }\r\n              >\r\n                starZ\r\n              </span>\r\n            </span>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className=\"text-align-right\">\r\n            <MoreHorizIcon\r\n              onClick={Openmodal}\r\n              className={\r\n                darkmode\r\n                  ? \"make-small-icons-clickable-dark dontallowhighlighting  \"\r\n                  : \"make-small-icons-clickable-light  dontallowhighlighting  \"\r\n              }\r\n              fontSize=\"large\"\r\n              style={fontData}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n\r\n      <OptionInnerModal\r\n        showModal={showModal}\r\n        closemodal={closemodal}\r\n        darkmode={darkmode}\r\n        setDarkmode={setDarkmode}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport const Option = React.memo(Optionx);\r\n"]},"metadata":{},"sourceType":"module"}