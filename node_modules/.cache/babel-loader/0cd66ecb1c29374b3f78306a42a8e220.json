{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\log\\\\LogButtons.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { isBrowser, isTablet } from \"react-device-detect\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginButtonsx({\n  OpenModalForm\n}) {\n  _s();\n\n  var matchPc = isBrowser;\n  var matchTablet = isTablet; ///\n  ///\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\n\n  var buttonFont = \"\";\n  var buttonTransform = \" \";\n  var pad = \"\";\n\n  if (matchPc) {\n    buttonFont = \"1vw\";\n    buttonTransform = \" \";\n    pad = \"14.5px\"; ///\n  } else if (matchTablet) {\n    pad = \"16px\";\n    buttonFont = \"2vw\";\n    buttonTransform = \" \"; ///\n  } else {\n    buttonFont = \"\";\n    buttonTransform = \"scale(0.95)\";\n    pad = \"16px\";\n  } ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  /// GET  SIGNUP BUTTON AND LOGIN BUTTON STYLE FROM REDUX\n\n  const {\n    borderRadiusSD,\n    MozBoxShadowSD,\n    WebkitBoxShadowSD,\n    boxShadowSD\n  } = useSelector(state => ({ ...state.ButtonsSignUpReducerDark\n  }));\n  const {\n    borderRadiusSL,\n    MozBoxShadowSL,\n    WebkitBoxShadowSL,\n    boxShadowSL\n  } = useSelector(state => ({ ...state.ButtonsSignUpReducerLight\n  }));\n  const {\n    borderRadiusLD,\n    MozBoxShadowLD,\n    WebkitBoxShadowLD,\n    boxShadowLD\n  } = useSelector(state => ({ ...state.ButtonsLoginReducerDark\n  }));\n  const {\n    borderRadiusLL,\n    MozBoxShadowLL,\n    WebkitBoxShadowLL,\n    boxShadowLL\n  } = useSelector(state => ({ ...state.ButtonsLoginReducerLight\n  }));\n  var borderRadiusReducerLogin = \" \";\n  var MozBoxShadowReducerLogin = \" \";\n  var WebkitBoxShadowReducerLogin = \" \";\n  var boxShadowReducerLogin = \" \";\n  var borderRadiusReducerSign = \" \";\n  var MozBoxShadowReducerSign = \" \";\n  var WebkitBoxShadowReducerSign = \" \";\n  var boxShadowReducerSign = \" \";\n\n  if (darkmodeReducer) {\n    MozBoxShadowReducerLogin = MozBoxShadowLD;\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLD;\n    boxShadowReducerLogin = boxShadowLD;\n    MozBoxShadowReducerSign = MozBoxShadowSD;\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSD;\n    boxShadowReducerSign = boxShadowSD;\n  } else {\n    MozBoxShadowReducerLogin = MozBoxShadowLL;\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLL;\n    boxShadowReducerLogin = boxShadowLL;\n    MozBoxShadowReducerSign = MozBoxShadowSL;\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSL;\n    boxShadowReducerSign = boxShadowSL;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: matchPc ? \"containerloginpc\" : \"containerloginmobile \",\n    item: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      md: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: \"buttonpad buttonshake\",\n      xs: 12,\n      sm: 6,\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => OpenModalForm(1),\n        style: {\n          fontSize: buttonFont,\n          transform: buttonTransform,\n          padding: \"11.5px\",\n          borderRadius: \"52px\",\n          MozBoxShadow: MozBoxShadowReducerLogin,\n          WebkitBoxShadow: WebkitBoxShadowReducerLogin,\n          boxShadow: boxShadowReducerLogin\n        },\n        fullWidth: true,\n        variant: \"outlined\",\n        size: \"large\",\n        color: \"primary\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 12,\n      className: \"logbuttonspace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      md: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: \"buttonpad buttonshake\",\n      xs: 12,\n      sm: 6,\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => OpenModalForm(0),\n        style: {\n          fontSize: buttonFont,\n          transform: buttonTransform,\n          padding: pad,\n          borderRadius: \"50px\",\n          MozBoxShadow: MozBoxShadowReducerSign,\n          WebkitBoxShadow: WebkitBoxShadowReducerSign,\n          boxShadow: boxShadowReducerSign\n        },\n        fullWidth: true,\n        variant: \"contained\",\n        size: \"large\",\n        color: \"secondary\",\n        children: [\" \", \"Sign Up\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginButtonsx, \"UZYL0uN7k1VGUW53UFTWchbyvmE=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = LoginButtonsx;\nexport const LoginButtons = /*#__PURE__*/React.memo(LoginButtonsx);\n_c2 = LoginButtons;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginButtonsx\");\n$RefreshReg$(_c2, \"LoginButtons\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/log/LogButtons.tsx"],"names":["React","Grid","Button","isBrowser","isTablet","useSelector","LoginButtonsx","OpenModalForm","matchPc","matchTablet","buttonFont","buttonTransform","pad","darkmode","state","GlobalReducer","darkmodeReducer","borderRadiusSD","MozBoxShadowSD","WebkitBoxShadowSD","boxShadowSD","ButtonsSignUpReducerDark","borderRadiusSL","MozBoxShadowSL","WebkitBoxShadowSL","boxShadowSL","ButtonsSignUpReducerLight","borderRadiusLD","MozBoxShadowLD","WebkitBoxShadowLD","boxShadowLD","ButtonsLoginReducerDark","borderRadiusLL","MozBoxShadowLL","WebkitBoxShadowLL","boxShadowLL","ButtonsLoginReducerLight","borderRadiusReducerLogin","MozBoxShadowReducerLogin","WebkitBoxShadowReducerLogin","boxShadowReducerLogin","borderRadiusReducerSign","MozBoxShadowReducerSign","WebkitBoxShadowReducerSign","boxShadowReducerSign","fontSize","transform","padding","borderRadius","MozBoxShadow","WebkitBoxShadow","boxShadow","LoginButtons","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport { isBrowser, isTablet } from \"react-device-detect\";\r\nimport { ILogButtons } from \"./log-Interfaces\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction LoginButtonsx({ OpenModalForm }: ILogButtons) {\r\n  var matchPc = isBrowser;\r\n  var matchTablet = isTablet;\r\n\r\n  ///\r\n  ///\r\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\r\n\r\n  var buttonFont = \"\";\r\n  var buttonTransform = \" \";\r\n  var pad = \"\";\r\n\r\n  if (matchPc) {\r\n    buttonFont = \"1vw\";\r\n    buttonTransform = \" \";\r\n    pad = \"14.5px\";\r\n    ///\r\n  } else if (matchTablet) {\r\n    pad = \"16px\";\r\n    buttonFont = \"2vw\";\r\n    buttonTransform = \" \";\r\n    ///\r\n  } else {\r\n    buttonFont = \"\";\r\n    buttonTransform = \"scale(0.95)\";\r\n    pad = \"16px\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET  SIGNUP BUTTON AND LOGIN BUTTON STYLE FROM REDUX\r\n  const { borderRadiusSD, MozBoxShadowSD, WebkitBoxShadowSD, boxShadowSD } =\r\n    useSelector((state: RootStateOrAny) => ({\r\n      ...state.ButtonsSignUpReducerDark,\r\n    }));\r\n\r\n  const { borderRadiusSL, MozBoxShadowSL, WebkitBoxShadowSL, boxShadowSL } =\r\n    useSelector((state: RootStateOrAny) => ({\r\n      ...state.ButtonsSignUpReducerLight,\r\n    }));\r\n\r\n  const { borderRadiusLD, MozBoxShadowLD, WebkitBoxShadowLD, boxShadowLD } =\r\n    useSelector((state: RootStateOrAny) => ({\r\n      ...state.ButtonsLoginReducerDark,\r\n    }));\r\n\r\n  const { borderRadiusLL, MozBoxShadowLL, WebkitBoxShadowLL, boxShadowLL } =\r\n    useSelector((state: RootStateOrAny) => ({\r\n      ...state.ButtonsLoginReducerLight,\r\n    }));\r\n\r\n  var borderRadiusReducerLogin = \" \";\r\n  var MozBoxShadowReducerLogin = \" \";\r\n  var WebkitBoxShadowReducerLogin = \" \";\r\n  var boxShadowReducerLogin = \" \";\r\n\r\n  var borderRadiusReducerSign = \" \";\r\n  var MozBoxShadowReducerSign = \" \";\r\n  var WebkitBoxShadowReducerSign = \" \";\r\n  var boxShadowReducerSign = \" \";\r\n\r\n  if (darkmodeReducer) {\r\n\r\n    MozBoxShadowReducerLogin = MozBoxShadowLD;\r\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLD;\r\n    boxShadowReducerLogin = boxShadowLD;\r\n\r\n    MozBoxShadowReducerSign = MozBoxShadowSD;\r\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSD;\r\n    boxShadowReducerSign = boxShadowSD;\r\n  } else {\r\n    MozBoxShadowReducerLogin = MozBoxShadowLL;\r\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLL;\r\n    boxShadowReducerLogin = boxShadowLL;\r\n\r\n    MozBoxShadowReducerSign = MozBoxShadowSL;\r\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSL;\r\n    boxShadowReducerSign = boxShadowSL;\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      className={matchPc ? \"containerloginpc\" : \"containerloginmobile \"}\r\n      item\r\n    >\r\n      <Grid item sm={3} md={5}></Grid>\r\n      <Grid item className=\"buttonpad buttonshake\" xs={12} sm={6} md={2}>\r\n        <Button\r\n          onClick={() => OpenModalForm(1)}\r\n          style={{\r\n            fontSize: buttonFont,\r\n            transform: buttonTransform,\r\n            padding: \"11.5px\",\r\n            borderRadius: \"52px\",\r\n            MozBoxShadow: MozBoxShadowReducerLogin,\r\n            WebkitBoxShadow: WebkitBoxShadowReducerLogin,\r\n            boxShadow: boxShadowReducerLogin,\r\n          }}\r\n          fullWidth={true}\r\n          variant=\"outlined\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n        >\r\n          Log In\r\n        </Button>\r\n      </Grid>\r\n      <Grid item sm={12} className=\"logbuttonspace\"></Grid>\r\n\r\n      <Grid item sm={3} md={5}></Grid>\r\n      <Grid item className=\"buttonpad buttonshake\" xs={12} sm={6} md={2}>\r\n        <Button\r\n          onClick={() => OpenModalForm(0)}\r\n          style={{\r\n            fontSize: buttonFont,\r\n            transform: buttonTransform,\r\n            padding: pad,\r\n            borderRadius: \"50px\",\r\n            MozBoxShadow: MozBoxShadowReducerSign,\r\n            WebkitBoxShadow: WebkitBoxShadowReducerSign,\r\n            boxShadow: boxShadowReducerSign,\r\n          }}\r\n          fullWidth={true}\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"secondary\"\r\n        >\r\n          {\" \"}\r\n          Sign Up\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport const LoginButtons = React.memo(LoginButtonsx);\r\n"]},"metadata":{},"sourceType":"module"}