{"ast":null,"code":"import _objectSpread from\"C:/Users/oghen/OneDrive/Documents/ClikBate/super/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{Grid}from\"@material-ui/core\";import{useSelector}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function SuperLoaderx(){///\n///\n///\n/// GET DARKMODE FROM REDUX STORE\nvar _useSelector=useSelector(function(state){return _objectSpread({},state.GlobalReducerLoader);}),loader=_useSelector.loader;var loaderReducer=loader;///\n///\n///\n/// GET DARKMODE FROM REDUX STORE\nvar _useSelector2=useSelector(function(state){return _objectSpread({},state.GlobalReducer);}),darkmode=_useSelector2.darkmode;var darkmodeReducer=darkmode;///\n///\n///\n/// GET COLOR FROM REDUX STORE\nvar _useSelector3=useSelector(function(state){return _objectSpread({},state.GlobalReducerColor);}),color=_useSelector3.color;var colorReducer=color;var superloader=\"\";var superloaderDisplay=\"none\";if(loaderReducer){superloader=\"superloader\";superloaderDisplay=\"block\";}else{superloader=\"\";superloaderDisplay=\"none\";}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Grid,{container:true,className:darkmodeReducer?\"\".concat(superloader,\" turdark\"):\"\".concat(superloader,\" turlight\"),style:{boxShadow:\"0 0 3px \".concat(colorReducer),backgroundColor:colorReducer,height:\"3px\",position:\"fixed\",display:superloaderDisplay,zIndex:100000,top:\"0em\"}})});}export var SuperLoader=/*#__PURE__*/React.memo(SuperLoaderx);","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/SuperLoader.tsx"],"names":["React","Grid","useSelector","SuperLoaderx","state","GlobalReducerLoader","loader","loaderReducer","GlobalReducer","darkmode","darkmodeReducer","GlobalReducerColor","color","colorReducer","superloader","superloaderDisplay","boxShadow","backgroundColor","height","position","display","zIndex","top","SuperLoader","memo"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,IAAT,KAAqB,mBAArB,CAEA,OAASC,WAAT,KAA4B,aAA5B,C,gGAEA,QAASC,CAAAA,YAAT,EAAqC,CACnC;AACA;AACA;AACA;AAJmC,iBAUhBD,WAAW,CAAC,SAACE,KAAD,0BAC1BA,KAAK,CAACC,mBADoB,GAAD,CAVK,CAU3BC,MAV2B,cAU3BA,MAV2B,CAanC,GAAMC,CAAAA,aAAa,CAAGD,MAAtB,CAEA;AACA;AACA;AACA;AAlBmC,kBAwBdJ,WAAW,CAAC,SAACE,KAAD,0BAC5BA,KAAK,CAACI,aADsB,GAAD,CAxBG,CAwB3BC,QAxB2B,eAwB3BA,QAxB2B,CA2BnC,GAAMC,CAAAA,eAAe,CAAGD,QAAxB,CAEA;AACA;AACA;AACA;AAhCmC,kBAsCjBP,WAAW,CAAC,SAACE,KAAD,0BACzBA,KAAK,CAACO,kBADmB,GAAD,CAtCM,CAsC3BC,KAtC2B,eAsC3BA,KAtC2B,CAyCnC,GAAMC,CAAAA,YAAY,CAAGD,KAArB,CAEA,GAAIE,CAAAA,WAAW,CAAG,EAAlB,CACA,GAAIC,CAAAA,kBAAkB,CAAG,MAAzB,CAEA,GAAIR,aAAJ,CAAmB,CACjBO,WAAW,CAAG,aAAd,CACAC,kBAAkB,CAAG,OAArB,CACD,CAHD,IAGO,CACLD,WAAW,CAAG,EAAd,CACAC,kBAAkB,CAAG,MAArB,CACD,CAED,mBACE,sCACE,KAAC,IAAD,EACE,SAAS,KADX,CAEE,SAAS,CACPL,eAAe,WAAMI,WAAN,uBAAiCA,WAAjC,aAHnB,CAKE,KAAK,CAAE,CACLE,SAAS,mBAAaH,YAAb,CADJ,CAELI,eAAe,CAAEJ,YAFZ,CAGLK,MAAM,CAAE,KAHH,CAILC,QAAQ,CAAE,OAJL,CAKLC,OAAO,CAAEL,kBALJ,CAMLM,MAAM,CAAE,MANH,CAOLC,GAAG,CAAE,KAPA,CALT,EADF,EADF,CAmBD,CAED,MAAO,IAAMC,CAAAA,WAAW,cAAGvB,KAAK,CAACwB,IAAN,CAAWrB,YAAX,CAApB","sourcesContent":["import React from \"react\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction SuperLoaderx(): JSX.Element {\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateLoaderReducer {\r\n    GlobalReducerLoader: {\r\n      loader: boolean;\r\n    };\r\n  }\r\n  const { loader } = useSelector((state: RootStateLoaderReducer) => ({\r\n    ...state.GlobalReducerLoader,\r\n  }));\r\n  const loaderReducer = loader;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n    };\r\n  }\r\n  const { color } = useSelector((state: RootStateReducerColor) => ({\r\n    ...state.GlobalReducerColor,\r\n  }));\r\n  const colorReducer = color;\r\n\r\n  var superloader = \"\";\r\n  var superloaderDisplay = \"none\";\r\n\r\n  if (loaderReducer) {\r\n    superloader = \"superloader\";\r\n    superloaderDisplay = \"block\";\r\n  } else {\r\n    superloader = \"\";\r\n    superloaderDisplay = \"none\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        className={\r\n          darkmodeReducer ? `${superloader} turdark` : `${superloader} turlight`\r\n        }\r\n        style={{\r\n          boxShadow: `0 0 3px ${colorReducer}`,\r\n          backgroundColor: colorReducer,\r\n          height: \"3px\",\r\n          position: \"fixed\",\r\n          display: superloaderDisplay,\r\n          zIndex: 100000,\r\n          top: \"0em\",\r\n        }}\r\n      ></Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const SuperLoader = React.memo(SuperLoaderx);\r\n"]},"metadata":{},"sourceType":"module"}