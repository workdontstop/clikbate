{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\ImageFilterinner.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { matchPc, matchTablet } from \"../DetectDevice\";\nimport { Grid } from \"@material-ui/core\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { useSelector } from \"react-redux\";\nimport { animated } from \"react-spring\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ImageFilterinnerx({\n  ActivatefilterImage,\n  optionsShow,\n  optinstopshowingReducer,\n  typeTop,\n  closeoptionsslide,\n  animationop,\n  optionsCollectImageRef,\n  handleTouchStartOptions,\n  handleTouchMoveOptions,\n  modalanimation,\n  nextSlidePc,\n  optionsImages,\n  ActiveSlide,\n  optionsNameData,\n  clickOptions,\n  optionsClickType,\n  getSliderWidthNew,\n  itemUploadRef,\n  ApplyImageFilter,\n  imageFiltersRef,\n  getImageWidth\n}) {\n  _s();\n\n  const getFilterWidthViewable = useRef([]);\n  const getFilterWidthfull = useRef([]); ///\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  var circleIdentify = typeTop ? 0 : 4;\n  var circleIdentify2 = typeTop ? 1 : 5; ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype;\n  const [showfiltersOnload, setshowfiltersOnload] = useState(false);\n\n  const addimageFiltersRef = imageRef => {\n    if (imageRef && !imageFiltersRef.current.includes(imageRef)) {\n      imageFiltersRef.current.push(imageRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  };\n\n  useEffect(() => {\n    if (itemUploadRef.current[0] && imageFiltersRef && ActivatefilterImage) {\n      setshowfiltersOnload(true);\n      ApplyImageFilter(\"lift\", 0, 1, imageFiltersRef, \"thumb\");\n    }\n  }, [itemUploadRef, ActivatefilterImage, imageFiltersRef]);\n\n  const startImageFilter = i => {\n    clickOptions(i, optionsClickType, \"filter\");\n    ApplyImageFilter(optionsNameData[i], 0, 0, getImageWidth, \"image\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: optionsShow ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [optinstopshowingReducer ? typeTop ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          style: {\n            width: matchPc ? \"10%\" : matchTablet ? \"30%\" : \"10%\",\n            margin: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n              className: darkmodeReducer ? \"make-small-icons-clickable-dark dontallowhighlighting  \" : \"make-small-icons-clickable-light  dontallowhighlighting  \",\n              onClick: closeoptionsslide,\n              style: {\n                fontSize: matchPc ? \"2.55vw\" : \"4.7vh\",\n                verticalAlign: \"middle\",\n                justifyContent: \"center\",\n                zIndex: 2,\n                marginTop: matchPc ? \"9vh\" : \"6.5vh\",\n                position: \"absolute\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : null, /*#__PURE__*/_jsxDEV(animated.div, {\n        ref: getFilterWidthViewable,\n        style: animationop,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: typeTop ? darkmodeReducer ? `optionsTop-background-dark ` : `optionsTop-background-light ` : \"\",\n          onTouchStart: handleTouchStartOptions,\n          onTouchMove: handleTouchMoveOptions,\n          style: {\n            zIndex: 1,\n            padding: \"0px\",\n            top: matchPc ? typeTop ? \"-2vh\" : \"0vh\" : \"0vh\",\n            position: \"relative\",\n            margin: \"0 auto\",\n            overflow: \"hidden\",\n            left: \"0px\",\n            height: typeTop ? matchPc ? \"24.4vh\" : \"20.5vh\" : \"auto\",\n            paddingBottom: \"1px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(animated.div, {\n            ref: optionsCollectImageRef,\n            style: modalanimation,\n            children: optionsImages.map((im, i) => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                style: {\n                  margin: \"auto\",\n                  textAlign: \"center\",\n                  position: \"relative\",\n                  top: matchPc ? \"1.55vh\" : \"0.54em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  style: {\n                    margin: \"auto\",\n                    marginLeft: \"2vw\",\n                    paddingBottom: \"0px\",\n                    fontFamily: \"kaushan_scriptregular\",\n                    fontSize: matchPc ? \"1.25vw\" : matchTablet ? \"2.08vh\" : \"2vh\",\n                    fontWeight: \"bolder\",\n                    visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\n                    filter: darkmodeReducer ? \"drop-shadow(1.2px 0.1px 1.92px rgba(255, 255, 255, 0.4))\" : \"drop-shadow(1.2px 0.1px 1.92px rgba(41, 53, 70, 8.35))\",\n                    color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\"\n                  },\n                  children: [\" \", optionsNameData[i]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this), showfiltersOnload ? /*#__PURE__*/_jsxDEV(\"img\", {\n                ref: addimageFiltersRef,\n                alt: ` ${optionsNameData[i]}  option`,\n                onClick: () => {\n                  startImageFilter(i);\n                },\n                style: {\n                  cursor: ActiveSlide === i ? \"pointer\" : \"copy\",\n                  width: `${getSliderWidthNew + 20}px`,\n                  height: `${getSliderWidthNew + 20}px`,\n                  borderRadius: \"50%\",\n                  padding: \"0px\",\n                  objectFit: \"cover\",\n                  marginLeft: \"2vw\",\n                  marginTop: \"13px\",\n                  boxShadow: darkmodeReducer ? ActiveSlide === i ? colortypeReducer === 0 ? `0 0 6.8px ${colorReducerdark}` : `0 0 6.8px ${colorReducer}` : typeTop ? \"0 0 12.5px#aaaaaa\" : \"\" : ActiveSlide === i ? `0 0 5.7px ${colorReducer}` : typeTop ? `0 0 14.45px#222222` : \"\"\n                },\n                src: itemUploadRef.current[0] ? itemUploadRef.current[0].src : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 23\n              }, this) : null]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 9,\n          style: {\n            textAlign: \"right\",\n            marginTop: matchPc ? \"6.4vh\" : matchTablet ? \"8.8vh\" : \"8.3vh\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              padding: \"16px\",\n              cursor: \"pointer\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CircleIcon, {\n              style: {\n                fontSize: matchPc ? \"1.2vw\" : matchTablet ? \"2.5vh\" : \"2.3vh\",\n                color: darkmodeReducer ? \"rgba(200, 200, 200, 0.1)\" : \"rgba(005, 005, 005, 0.2)\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n}\n\n_s(ImageFilterinnerx, \"S7Se/olE1b3coI2U7unZPci7bTw=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ImageFilterinnerx;\nexport const ImageFilterinner = /*#__PURE__*/React.memo(ImageFilterinnerx);\n_c2 = ImageFilterinner;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImageFilterinnerx\");\n$RefreshReg$(_c2, \"ImageFilterinner\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/ImageFilterinner.tsx"],"names":["React","useState","useEffect","useRef","matchPc","matchTablet","Grid","MoreHorizIcon","useSelector","animated","CircleIcon","ImageFilterinnerx","ActivatefilterImage","optionsShow","optinstopshowingReducer","typeTop","closeoptionsslide","animationop","optionsCollectImageRef","handleTouchStartOptions","handleTouchMoveOptions","modalanimation","nextSlidePc","optionsImages","ActiveSlide","optionsNameData","clickOptions","optionsClickType","getSliderWidthNew","itemUploadRef","ApplyImageFilter","imageFiltersRef","getImageWidth","getFilterWidthViewable","getFilterWidthfull","darkmode","state","GlobalReducer","darkmodeReducer","circleIdentify","circleIdentify2","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","showfiltersOnload","setshowfiltersOnload","addimageFiltersRef","imageRef","current","includes","push","startImageFilter","i","width","margin","fontSize","verticalAlign","justifyContent","zIndex","marginTop","position","padding","top","overflow","left","height","paddingBottom","map","im","textAlign","marginLeft","fontFamily","fontWeight","visibility","filter","cursor","borderRadius","objectFit","boxShadow","src","ImageFilterinner","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\n\r\nfunction ImageFilterinnerx({\r\n  ActivatefilterImage,\r\n  optionsShow,\r\n  optinstopshowingReducer,\r\n  typeTop,\r\n  closeoptionsslide,\r\n  animationop,\r\n  optionsCollectImageRef,\r\n  handleTouchStartOptions,\r\n  handleTouchMoveOptions,\r\n  modalanimation,\r\n  nextSlidePc,\r\n  optionsImages,\r\n  ActiveSlide,\r\n  optionsNameData,\r\n  clickOptions,\r\n  optionsClickType,\r\n  getSliderWidthNew,\r\n  itemUploadRef,\r\n  ApplyImageFilter,\r\n  imageFiltersRef,\r\n  getImageWidth,\r\n}: any): JSX.Element {\r\n  const getFilterWidthViewable = useRef<any>([]);\r\n  const getFilterWidthfull = useRef<any>([]);\r\n  ///\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  var circleIdentify = typeTop ? 0 : 4;\r\n  var circleIdentify2 = typeTop ? 1 : 5;\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  const [showfiltersOnload, setshowfiltersOnload] = useState(false);\r\n\r\n  const addimageFiltersRef = (imageRef: any) => {\r\n    if (imageRef && !imageFiltersRef.current.includes(imageRef)) {\r\n      imageFiltersRef.current.push(imageRef);\r\n    }\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (itemUploadRef.current[0] && imageFiltersRef && ActivatefilterImage) {\r\n      setshowfiltersOnload(true);\r\n\r\n      ApplyImageFilter(\"lift\", 0, 1, imageFiltersRef, \"thumb\");\r\n    }\r\n  }, [itemUploadRef, ActivatefilterImage, imageFiltersRef]);\r\n\r\n  const startImageFilter = (i: number) => {\r\n    clickOptions(i, optionsClickType, \"filter\");\r\n\r\n    ApplyImageFilter(optionsNameData[i], 0, 0, getImageWidth, \"image\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {optionsShow ? (\r\n        <>\r\n          {optinstopshowingReducer ? (\r\n            typeTop ? null : (\r\n              <>\r\n                {\" \"}\r\n                <Grid\r\n                  container\r\n                  style={{\r\n                    width: matchPc ? \"10%\" : matchTablet ? \"30%\" : \"10%\",\r\n                    margin: \"auto\",\r\n                  }}\r\n                >\r\n                  <span>\r\n                    <MoreHorizIcon\r\n                      className={\r\n                        darkmodeReducer\r\n                          ? \"make-small-icons-clickable-dark dontallowhighlighting  \"\r\n                          : \"make-small-icons-clickable-light  dontallowhighlighting  \"\r\n                      }\r\n                      onClick={closeoptionsslide}\r\n                      style={{\r\n                        fontSize: matchPc ? \"2.55vw\" : \"4.7vh\",\r\n                        verticalAlign: \"middle\",\r\n                        justifyContent: \"center\",\r\n                        zIndex: 2,\r\n                        marginTop: matchPc ? \"9vh\" : \"6.5vh\",\r\n                        position: \"absolute\",\r\n                      }}\r\n                    />\r\n                  </span>{\" \"}\r\n                </Grid>\r\n              </>\r\n            )\r\n          ) : null}\r\n\r\n          <animated.div ref={getFilterWidthViewable} style={animationop}>\r\n            <Grid\r\n              container\r\n              className={\r\n                typeTop\r\n                  ? darkmodeReducer\r\n                    ? `optionsTop-background-dark `\r\n                    : `optionsTop-background-light `\r\n                  : \"\"\r\n              }\r\n              onTouchStart={handleTouchStartOptions}\r\n              onTouchMove={handleTouchMoveOptions}\r\n              style={{\r\n                zIndex: 1,\r\n                padding: \"0px\",\r\n                top: matchPc ? (typeTop ? \"-2vh\" : \"0vh\") : \"0vh\",\r\n                position: \"relative\",\r\n                margin: \"0 auto\",\r\n                overflow: \"hidden\",\r\n                left: \"0px\",\r\n                height: typeTop ? (matchPc ? \"24.4vh\" : \"20.5vh\") : \"auto\",\r\n                paddingBottom: \"1px\",\r\n              }}\r\n            >\r\n              <animated.div ref={optionsCollectImageRef} style={modalanimation}>\r\n                {optionsImages.map((im: any, i: any) => (\r\n                  <Grid key={i} item xs={12}>\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      style={{\r\n                        margin: \"auto\",\r\n                        textAlign: \"center\",\r\n                        position: \"relative\",\r\n                        top: matchPc ? \"1.55vh\" : \"0.54em\",\r\n                      }}\r\n                    >\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        style={{\r\n                          margin: \"auto\",\r\n                          marginLeft: \"2vw\",\r\n                          paddingBottom: \"0px\",\r\n                          fontFamily: \"kaushan_scriptregular\",\r\n                          fontSize: matchPc\r\n                            ? \"1.25vw\"\r\n                            : matchTablet\r\n                            ? \"2.08vh\"\r\n                            : \"2vh\",\r\n                          fontWeight: \"bolder\",\r\n                          visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\r\n                          filter: darkmodeReducer\r\n                            ? \"drop-shadow(1.2px 0.1px 1.92px rgba(255, 255, 255, 0.4))\"\r\n                            : \"drop-shadow(1.2px 0.1px 1.92px rgba(41, 53, 70, 8.35))\",\r\n                          color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        {optionsNameData[i]}\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    {showfiltersOnload ? (\r\n                      <img\r\n                        ref={addimageFiltersRef}\r\n                        alt={` ${optionsNameData[i]}  option`}\r\n                        onClick={() => {\r\n                          startImageFilter(i);\r\n                        }}\r\n                        style={{\r\n                          cursor: ActiveSlide === i ? \"pointer\" : \"copy\",\r\n                          width: `${getSliderWidthNew + 20}px`,\r\n                          height: `${getSliderWidthNew + 20}px`,\r\n                          borderRadius: \"50%\",\r\n                          padding: \"0px\",\r\n                          objectFit: \"cover\",\r\n                          marginLeft: \"2vw\",\r\n                          marginTop: \"13px\",\r\n                          boxShadow: darkmodeReducer\r\n                            ? ActiveSlide === i\r\n                              ? colortypeReducer === 0\r\n                                ? `0 0 6.8px ${colorReducerdark}`\r\n                                : `0 0 6.8px ${colorReducer}`\r\n                              : typeTop\r\n                              ? \"0 0 12.5px#aaaaaa\"\r\n                              : \"\"\r\n                            : ActiveSlide === i\r\n                            ? `0 0 5.7px ${colorReducer}`\r\n                            : typeTop\r\n                            ? `0 0 14.45px#222222`\r\n                            : \"\",\r\n                        }}\r\n                        src={\r\n                          itemUploadRef.current[0]\r\n                            ? itemUploadRef.current[0].src\r\n                            : null\r\n                        }\r\n                      />\r\n                    ) : null}\r\n                  </Grid>\r\n                ))}\r\n              </animated.div>\r\n            </Grid>\r\n          </animated.div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Grid container>\r\n            <Grid\r\n              item\r\n              xs={9}\r\n              style={{\r\n                textAlign: \"right\",\r\n                marginTop: matchPc ? \"6.4vh\" : matchTablet ? \"8.8vh\" : \"8.3vh\",\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  padding: \"16px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                <CircleIcon\r\n                  style={{\r\n                    fontSize: matchPc\r\n                      ? \"1.2vw\"\r\n                      : matchTablet\r\n                      ? \"2.5vh\"\r\n                      : \"2.3vh\",\r\n                    color: darkmodeReducer\r\n                      ? \"rgba(200, 200, 200, 0.1)\"\r\n                      : \"rgba(005, 005, 005, 0.2)\",\r\n                  }}\r\n                />\r\n              </span>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const ImageFilterinner = React.memo(ImageFilterinnerx);\r\n"]},"metadata":{},"sourceType":"module"}