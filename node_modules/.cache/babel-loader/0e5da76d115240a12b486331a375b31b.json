{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\ProfileOutter.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { matchPc } from \"../DetectDevice\";\nimport { Profile } from \"./Profile\";\nimport { useSelector } from \"react-redux\";\nimport { Paper } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ProfileOutter() {\n  _s();\n\n  ///\n  ///\n  ///TYPES FOR ISLOGGEDIN\n  const [paperHeight, setPaperHeight] = useState(\"auto\"); ///\n  ///LOGGED IN DATA FROM REDUX\n\n  const {\n    loggedIn\n  } = useSelector(state => ({ ...state.IsLoggedReducer\n  }));\n  const loggedInReducer = loggedIn; ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///MUI PAPER STYLES FROM REDUX\n\n  const {\n    PaperStyleLight,\n    PaperStyleDark\n  } = useSelector(state => ({ ...state.PaperReducerLightnDark\n  }));\n  var PaperStyleReducer = \"\";\n\n  if (darkmodeReducer) {\n    PaperStyleReducer = PaperStyleDark;\n  } else {\n    PaperStyleReducer = PaperStyleLight;\n  }\n\n  const paperscrollRef = useRef(null);\n  const autoScrollWindowNImage = useCallback(() => {\n    setTimeout(function () {\n      paperscrollRef.current.scrollTo(0, 30);\n    }, 970);\n  }, []); ///\n  ///\n  ///\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\n\n  useEffect(() => {\n    autoScrollWindowNImage();\n  }, []);\n  return loggedInReducer ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: matchPc ? /*#__PURE__*/_jsxDEV(Scrollbars, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        ref: paperscrollRef,\n        style: {\n          backgroundImage: PaperStyleReducer,\n          borderRadius: \"2px\",\n          overflow: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Profile, {\n          paperHeight: paperHeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Profile, {\n      paperHeight: paperHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)\n  }, void 0, false) : null;\n}\n\n_s(ProfileOutter, \"3/VR6Qe22a3vfSG+NpcZbEy9oU4=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = ProfileOutter;\nexport default ProfileOutter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileOutter\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/ProfileOutter.tsx"],"names":["React","useState","useRef","useCallback","useEffect","Scrollbars","matchPc","Profile","useSelector","Paper","ProfileOutter","paperHeight","setPaperHeight","loggedIn","state","IsLoggedReducer","loggedInReducer","darkmode","GlobalReducer","darkmodeReducer","PaperStyleLight","PaperStyleDark","PaperReducerLightnDark","PaperStyleReducer","paperscrollRef","autoScrollWindowNImage","setTimeout","current","scrollTo","backgroundImage","borderRadius","overflow"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,EAA+CC,SAA/C,QAAgE,OAAhE;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAAyBC,WAAzB,QAA4C,aAA5C;AACA,SAASC,KAAT,QAAiC,mBAAjC;;;;AACA,SAASC,aAAT,GAAyB;AAAA;;AACvB;AACA;AACA;AAMA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,MAAD,CAA9C,CATuB,CAWvB;AACA;;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAeL,WAAW,CAAEM,KAAD,KAA+B,EAC9D,GAAGA,KAAK,CAACC;AADqD,GAA/B,CAAD,CAAhC;AAGA,QAAMC,eAAe,GAAGH,QAAxB,CAhBuB,CAkBvB;AACA;AACA;AACA;;AAMA,QAAM;AAAEI,IAAAA;AAAF,MAAeT,WAAW,CAAEM,KAAD,KAAoC,EACnE,GAAGA,KAAK,CAACI;AAD0D,GAApC,CAAD,CAAhC;AAIA,QAAMC,eAAe,GAAGF,QAAxB,CA/BuB,CAiCvB;AACA;AACA;;AACA,QAAM;AAAEG,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAsCb,WAAW,CACpDM,KAAD,KAA4B,EAC1B,GAAGA,KAAK,CAACQ;AADiB,GAA5B,CADqD,CAAvD;AAKA,MAAIC,iBAAiB,GAAG,EAAxB;;AAEA,MAAIJ,eAAJ,EAAqB;AACnBI,IAAAA,iBAAiB,GAAGF,cAApB;AACD,GAFD,MAEO;AACLE,IAAAA,iBAAiB,GAAGH,eAApB;AACD;;AAED,QAAMI,cAAc,GAAGtB,MAAM,CAAM,IAAN,CAA7B;AAEA,QAAMuB,sBAA2B,GAAGtB,WAAW,CAAC,MAAM;AACpDuB,IAAAA,UAAU,CAAC,YAAY;AACrBF,MAAAA,cAAc,CAACG,OAAf,CAAuBC,QAAvB,CAAgC,CAAhC,EAAmC,EAAnC;AACD,KAFS,EAEP,GAFO,CAAV;AAGD,GAJ8C,EAI5C,EAJ4C,CAA/C,CAnDuB,CAyDvB;AACA;AACA;AACA;;AACAxB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,sBAAsB;AACvB,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAOT,eAAe,gBACpB;AAAA,cACGV,OAAO,gBACN,QAAC,UAAD;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,GAAG,EAAEkB,cADP;AAEE,QAAA,KAAK,EAAE;AACLK,UAAAA,eAAe,EAAEN,iBADZ;AAELO,UAAAA,YAAY,EAAE,KAFT;AAGLC,UAAAA,QAAQ,EAAE;AAHL,SAFT;AAAA,+BAQE,QAAC,OAAD;AAAS,UAAA,WAAW,EAAEpB;AAAtB;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADM,gBAcN,QAAC,OAAD;AAAS,MAAA,WAAW,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA;AAfJ,mBADoB,GAmBlB,IAnBJ;AAoBD;;GApFQD,a;UAacF,W,EAcAA,W,EASuBA,W;;;KApCrCE,a;AAsFT,eAAeA,aAAf","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { matchPc } from \"../DetectDevice\";\r\nimport { Profile } from \"./Profile\";\r\nimport { RootStateOrAny, useSelector } from \"react-redux\";\r\nimport { Paper, Grid, Box } from \"@material-ui/core\";\r\nfunction ProfileOutter() {\r\n  ///\r\n  ///\r\n  ///TYPES FOR ISLOGGEDIN\r\n  interface RootStateIsLogged {\r\n    IsLoggedReducer: {\r\n      loggedIn: boolean;\r\n    };\r\n  }\r\n  const [paperHeight, setPaperHeight] = useState(\"auto\");\r\n\r\n  ///\r\n  ///LOGGED IN DATA FROM REDUX\r\n  const { loggedIn } = useSelector((state: RootStateIsLogged) => ({\r\n    ...state.IsLoggedReducer,\r\n  }));\r\n  const loggedInReducer = loggedIn;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///MUI PAPER STYLES FROM REDUX\r\n  const { PaperStyleLight, PaperStyleDark } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.PaperReducerLightnDark,\r\n    })\r\n  );\r\n  var PaperStyleReducer = \"\";\r\n\r\n  if (darkmodeReducer) {\r\n    PaperStyleReducer = PaperStyleDark;\r\n  } else {\r\n    PaperStyleReducer = PaperStyleLight;\r\n  }\r\n\r\n  const paperscrollRef = useRef<any>(null);\r\n\r\n  const autoScrollWindowNImage: any = useCallback(() => {\r\n    setTimeout(function () {\r\n      paperscrollRef.current.scrollTo(0, 30);\r\n    }, 970);\r\n  }, []);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\r\n  useEffect(() => {\r\n    autoScrollWindowNImage();\r\n  }, []);\r\n  return loggedInReducer ? (\r\n    <>\r\n      {matchPc ? (\r\n        <Scrollbars>\r\n          <Paper\r\n            ref={paperscrollRef}\r\n            style={{\r\n              backgroundImage: PaperStyleReducer,\r\n              borderRadius: \"2px\",\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <Profile paperHeight={paperHeight} />\r\n          </Paper>\r\n        </Scrollbars>\r\n      ) : (\r\n        <Profile paperHeight={paperHeight} />\r\n      )}\r\n    </>\r\n  ) : null;\r\n}\r\n\r\nexport default ProfileOutter;\r\n"]},"metadata":{},"sourceType":"module"}