{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\step1.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Step1() {\n  _s();\n\n  const [name, setName] = useState();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    reset\n  } = useForm();\n  const currentName = watch(\"name\");\n\n  const onSubmit = async data => {\n    setName(data.name);\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          width: \"82%\",\n          paddingBottom: \"30px\"\n        },\n        inputProps: {\n          style: {\n            fontSize: \"2.5vh\"\n          }\n        },\n        InputLabelProps: {\n          style: {\n            fontSize: \"1.8vh\"\n          }\n        },\n        label: \"name\",\n        id: \"name\",\n        name: \"name\",\n        variant: \"filled\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), \" \", currentName && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Current: \", currentName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this), name && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Submitted: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Step1, \"E6dcLk4R1h/e9Xngk81rUq9B5Lw=\", false, function () {\n  return [useForm];\n});\n\n_c = Step1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step1\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/step1.tsx"],"names":["React","useState","useForm","TextField","Step1","name","setName","register","handleSubmit","watch","reset","currentName","onSubmit","data","width","paddingBottom","style","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AAKA,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAA2CR,OAAO,EAAxD;AAEA,QAAMS,WAAW,GAAGF,KAAK,CAAC,MAAD,CAAzB;;AAEA,QAAMG,QAAQ,GAAG,MAAOC,IAAP,IAAwB;AACvCP,IAAAA,OAAO,CAACO,IAAI,CAACR,IAAN,CAAP;AACAK,IAAAA,KAAK;AACN,GAHD;;AAKA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEF,YAAY,CAACI,QAAD,CAA5B;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,aAAa,EAAE;AAA/B,SADT;AAEE,QAAA,UAAU,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ;AAAT,SAFd;AAGE,QAAA,eAAe,EAAE;AAAED,UAAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ;AAAT,SAHnB;AAIE,QAAA,KAAK,EAAC,MAJR;AAKE,QAAA,EAAE,EAAC,MALL;AAME,QAAA,IAAI,EAAC,MANP;AAOE,QAAA,OAAO,EAAC,QAPV;AAQE,QAAA,IAAI,EAAC;AARP;AAAA;AAAA;AAAA;AAAA,cADF,EAUK,GAVL,EAWGN,WAAW,iBAAI;AAAA,gCAAeA,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAXlB,EAYGN,IAAI,iBAAI;AAAA,kCAAiBA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAZX,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,EAa0B,GAb1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAlCuBD,K;UAM2BF,O;;;KAN3BE,K","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nexport default function Step1() {\r\n  const [name, setName] = useState<string>();\r\n\r\n  interface Inputs {\r\n    name: string;\r\n  }\r\n  const { register, handleSubmit, watch, reset } = useForm<Inputs>();\r\n\r\n  const currentName = watch(\"name\");\r\n\r\n  const onSubmit = async (data: Inputs) => {\r\n    setName(data.name);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <TextField\r\n          style={{ width: \"82%\", paddingBottom: \"30px\" }}\r\n          inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n          InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n          label=\"name\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          variant=\"filled\"\r\n          type=\"text\"\r\n        />{\" \"}\r\n        {currentName && <div>Current: {currentName}</div>}\r\n        {name && <div>Submitted: {name}</div>}\r\n        <button>SUBMIT</button>{\" \"}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}