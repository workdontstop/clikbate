{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\Clikbate\\\\src\\\\profile\\\\SliderBillboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { ArrowBillboard } from \"./ArrowBillboard\";\nimport { matchPc } from \"../DetectDevice\";\nimport { Grid } from \"@material-ui/core\";\nimport { animated, useTransition } from \"react-spring\";\nimport { useSelector } from \"react-redux\";\nimport { DotsBillboard } from \"./DotsBillboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SliderBillboardx({\n  slidesthumb,\n  slides,\n  billboardDynamicHeight,\n  ClickBillboardClose,\n  ShowBillboard,\n  billboardserverswitch\n}) {\n  _s();\n\n  const {\n    REACT_APP_APPX_STATE\n  } = process.env;\n  var allow4dev = \"\";\n  const [sliderIndex, setSliderIndex] = useState(0);\n  const [allowAutoPlay, setAllowAutoPlay] = useState(true);\n  const [sliderDuration, setsliderDuration] = useState(2000);\n  const [autoSlideDuration] = useState(3000); /// const getWidth = () => window.innerWidth;\n  ///var newGetWidth = getWidth() * slides.length;\n\n  const handleTouchMoveTimer = useRef(null);\n  const cancelAutoBillboardTimer = useRef(null);\n  const changeBillboardAutoSlideDurationTimer = useRef(null);\n  const autoPlayTimer = useRef(null);\n  const SlideimageRef = useRef(null);\n  const SlideimageRefthumb = useRef(null);\n  const SlideRef = useRef(null);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [touchPosition, setTouchPosition] = useState(null); ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n  const {\n    billboard2,\n    MemberProfileData\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const billboard2Reducer = billboard2;\n  const MemberProfileDataReducer = MemberProfileData; ///\n  ///\n  ///\n  /// SPRING TRANSITION WITH INDEX\n\n  const transitions = useTransition(sliderIndex, {\n    key: sliderIndex,\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    config: {\n      duration: sliderDuration - 50\n    }\n  }); ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\n\n  const sliderFirstImageOnLoad = item => {\n    if (item === 0) {\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\n        setImageHeight(SlideimageRef.current.clientHeight);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE THUMBS IF IMAGE DOES NOT LOAD\n\n\n  const sliderFirstImageOnLoadthumb = item => {\n    if (item === 0 && imageHeight === 0) {\n      if (SlideimageRefthumb.current && SlideimageRefthumb.current.clientHeight) {\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n\n  const handleTouchStart = e => {\n    ////onMouseDown onMouseMove\n    ////touchDown = e.clientX\n    const touchDown = e.touches[0].clientX;\n    setTouchPosition(touchDown);\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH MOVE EVENT\n\n\n  const handleTouchMove = e => {\n    if (handleTouchMoveTimer.current) {\n      clearTimeout(handleTouchMoveTimer.current);\n    }\n\n    handleTouchMoveTimer.current = setTimeout(function () {\n      const touchDown = touchPosition;\n\n      if (touchDown === null) {\n        return;\n      } ////currentTouch = e.clientX\n\n\n      const currentTouch = e.touches[0].clientX;\n      const diff = touchDown - currentTouch;\n\n      if (diff > 40) {\n        nextSlide();\n      } else if (diff < -40) {\n        prevSlide();\n      } else {}\n\n      setTouchPosition(null);\n      return false;\n    }, 200);\n    return false;\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE\n\n\n  const nextSlide = () => {\n    if (autoPlayTimer.current) {\n      clearTimeout(autoPlayTimer.current);\n    } ///set((state) => (state + 1) % slides.length);\n\n\n    if (sliderIndex === slides.length - 1) {\n      setSliderIndex(sliderIndex => 0);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex + 1);\n    }\n  }; ///\n  ///\n  ///\n  /// PREV SLIDE\n\n\n  const prevSlide = () => {\n    if (autoPlayTimer.current) {\n      clearTimeout(autoPlayTimer.current);\n    }\n\n    if (sliderIndex === 0) {\n      setSliderIndex(sliderIndex => slides.length - 1);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex - 1);\n    }\n  }; ///\n  ///\n  ///\n  /// AUTO PLAY SLIDER DEPENDENT FUNCTION\n\n\n  const startSlider = () => {\n    setAllowAutoPlay(false);\n    autoPlayTimer.current = setInterval(function () {\n      setSliderIndex(state => (state + 1) % slides.length);\n    }, autoSlideDuration);\n  }; ///\n  ///\n  ///\n  /// AUTO PLAY SLIDER START\n\n\n  const SliderAutoPlay = () => {\n    if (allowAutoPlay) {\n      startSlider();\n    } else {\n      setAllowAutoPlay(true);\n\n      if (autoPlayTimer.current) {\n        clearInterval(autoPlayTimer.current);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// UPDATE AUTO  PLAY  DURATION  AFTER INITIAL QUICK SLIDE\n\n\n  const callNewAutoBillboard = useCallback(() => {\n    if (autoPlayTimer.current) {\n      clearInterval(autoPlayTimer.current);\n    }\n\n    autoPlayTimer.current = setInterval(function () {\n      if (ShowBillboard) {\n        if (autoPlayTimer.current) {\n          clearInterval(autoPlayTimer.current);\n        }\n      } else {\n        setSliderIndex(state => (state + 1) % slides.length);\n      }\n    }, 12000);\n\n    if (cancelAutoBillboardTimer.current) {\n      clearTimeout(cancelAutoBillboardTimer.current);\n    }\n\n    cancelAutoBillboardTimer.current = setTimeout(function () {\n      if (autoPlayTimer.current) {\n        clearInterval(autoPlayTimer.current);\n      }\n    }, 240000);\n  }, [ShowBillboard, autoPlayTimer]); ///\n  ///\n  ///START AUTOPLAY ON PAGE LOAD\n\n  useEffect(() => {\n    var f;\n\n    if (MemberProfileDataReducer === 0) {\n      f = 9000;\n    } else {\n      f = 9000;\n    }\n\n    if (slides[1]) {\n      if (autoPlayTimer.current) {\n        clearInterval(autoPlayTimer.current);\n      }\n\n      SliderAutoPlay();\n      changeBillboardAutoSlideDurationTimer.current = setTimeout(function () {\n        setsliderDuration(2000);\n        callNewAutoBillboard();\n      }, f);\n    }\n  }, [slides, MemberProfileDataReducer]);\n  useEffect(() => {\n    if (slides[1]) {\n      setSliderIndex(state => 1 % slides.length);\n    }\n  }, [billboard2Reducer]); ///\n  ///\n  /// WATCH FOR CHANGE IN [ShowBillboard] AND USE THAT CONTROL SLIDER DURATION(ON VIEW) AND CLEAR AUTOPLAY TIMER\n\n  useEffect(() => {\n    if (ShowBillboard) {\n      setsliderDuration(2000);\n\n      if (autoPlayTimer.current) {\n        clearInterval(autoPlayTimer.current);\n      }\n    } else {}\n  }, [ShowBillboard]);\n  useEffect(() => {\n    if (SlideRef.current) {\n      SlideRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }, [SlideRef]); ///\n  ///\n  ///  CHANGE [showBillboard == close]  EXTEND SLIDER DURATION(ON VIEW) AND  START AUTOPLAY\n\n  const ClickBillboardCloseStart = () => {\n    ClickBillboardClose();\n    setsliderDuration(2000);\n\n    if (allowAutoPlay) {} else {\n      callNewAutoBillboard();\n    }\n  }; ///\n  ///\n  ///\n  /// CHANGE SLIDER CONTENT USING  DOTS\n\n\n  const GotoDots = clickedDot => {\n    setSliderIndex(sliderIndex => clickedDot);\n  }; ///\n  ///\n  ///\n\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    ref: SlideRef,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    xs: 12,\n    style: {\n      position: \"relative\",\n      height: `${imageHeight}px`,\n      opacity: imageHeight === 0 ? 0 : 1\n    },\n    children: [slides[1] === null || slides[1] === \"\" ? null : /*#__PURE__*/_jsxDEV(ArrowBillboard, {\n      ShowBillboard: ShowBillboard,\n      direction: \"left\",\n      clickSlideprev: prevSlide,\n      clickSlidenext: nextSlide,\n      imageHeight: imageHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }, this), transitions((style, i) => /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      item: true,\n      children: [/*#__PURE__*/_jsxDEV(animated.img, {\n        ref: SlideimageRef,\n        onClick: ClickBillboardCloseStart,\n        onLoad: () => {\n          sliderFirstImageOnLoad(i);\n        },\n        style: { ...style,\n          cursor: \"pointer\",\n          width: \"100%\",\n          objectFit: \"cover\",\n          position: \"absolute\",\n          height: billboardDynamicHeight,\n          borderRadius: \"0px\",\n          borderBottomLeftRadius: ShowBillboard ? \"0px\" : matchPc ? \"7px\" : \"0px\",\n          borderBottomRightRadius: ShowBillboard ? \"0px\" : matchPc ? \"7px\" : \"0px\",\n          left: \"0\",\n          zIndex: 1,\n          filter: \"blur(0px)\"\n        },\n        src: slidesthumb[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(animated.img, {\n        ref: SlideimageRef,\n        onClick: ClickBillboardCloseStart,\n        onLoad: () => {\n          sliderFirstImageOnLoad(i);\n        },\n        style: { ...style,\n          cursor: \"pointer\",\n          width: \"100%\",\n          objectFit: \"cover\",\n          position: \"absolute\",\n          height: billboardDynamicHeight,\n          borderRadius: \"0px\",\n          borderBottomLeftRadius: ShowBillboard ? \"0px\" : matchPc ? \"20px\" : \"0px\",\n          borderBottomRightRadius: ShowBillboard ? \"0px\" : matchPc ? \"20px\" : \"0px\",\n          left: \"0\",\n          zIndex: 2\n        },\n        src: slides[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }, this)), \" \", slides[1] === null || slides[1] === \"\" ? null : /*#__PURE__*/_jsxDEV(DotsBillboard, {\n      ShowBillboard: ShowBillboard,\n      GotoDots: GotoDots,\n      slides: slides,\n      activeSlide: sliderIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 333,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SliderBillboardx, \"p60l/Ag+qpn1G0bJoVhAQamHtyc=\", false, function () {\n  return [useSelector, useSelector, useTransition];\n});\n\n_c = SliderBillboardx;\nexport const SliderBillboard = /*#__PURE__*/React.memo(SliderBillboardx);\n_c2 = SliderBillboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SliderBillboardx\");\n$RefreshReg$(_c2, \"SliderBillboard\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/Clikbate/src/profile/SliderBillboard.tsx"],"names":["React","useState","useRef","useEffect","useCallback","ArrowBillboard","matchPc","Grid","animated","useTransition","useSelector","DotsBillboard","SliderBillboardx","slidesthumb","slides","billboardDynamicHeight","ClickBillboardClose","ShowBillboard","billboardserverswitch","REACT_APP_APPX_STATE","process","env","allow4dev","sliderIndex","setSliderIndex","allowAutoPlay","setAllowAutoPlay","sliderDuration","setsliderDuration","autoSlideDuration","handleTouchMoveTimer","cancelAutoBillboardTimer","changeBillboardAutoSlideDurationTimer","autoPlayTimer","SlideimageRef","SlideimageRefthumb","SlideRef","imageHeight","setImageHeight","touchPosition","setTouchPosition","darkmode","state","GlobalReducer","darkmodeReducer","billboard2","MemberProfileData","UserdataReducer","billboard2Reducer","MemberProfileDataReducer","transitions","key","from","opacity","enter","leave","config","duration","sliderFirstImageOnLoad","item","current","clientHeight","sliderFirstImageOnLoadthumb","handleTouchStart","e","touchDown","touches","clientX","handleTouchMove","clearTimeout","setTimeout","currentTouch","diff","nextSlide","prevSlide","length","startSlider","setInterval","SliderAutoPlay","clearInterval","callNewAutoBillboard","f","scrollIntoView","behavior","block","ClickBillboardCloseStart","GotoDots","clickedDot","position","height","style","i","cursor","width","objectFit","borderRadius","borderBottomLeftRadius","borderBottomRightRadius","left","zIndex","filter","SliderBillboard","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport { ArrowBillboard } from \"./ArrowBillboard\";\r\nimport { matchPc } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { animated, useTransition } from \"react-spring\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { DotsBillboard } from \"./DotsBillboard\";\r\n\r\nfunction SliderBillboardx({\r\n  slidesthumb,\r\n  slides,\r\n  billboardDynamicHeight,\r\n  ClickBillboardClose,\r\n  ShowBillboard,\r\n  billboardserverswitch,\r\n}: any): JSX.Element {\r\n  const { REACT_APP_APPX_STATE } = process.env;\r\n\r\n  var allow4dev = \"\";\r\n\r\n  const [sliderIndex, setSliderIndex] = useState(0);\r\n\r\n  const [allowAutoPlay, setAllowAutoPlay] = useState(true);\r\n\r\n  const [sliderDuration, setsliderDuration] = useState(2000);\r\n  const [autoSlideDuration] = useState(3000);\r\n\r\n  /// const getWidth = () => window.innerWidth;\r\n  ///var newGetWidth = getWidth() * slides.length;\r\n\r\n  const handleTouchMoveTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const cancelAutoBillboardTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const changeBillboardAutoSlideDurationTimer = useRef<ReturnType<\r\n    typeof setTimeout\r\n  > | null>(null);\r\n\r\n  const autoPlayTimer = useRef<ReturnType<typeof setInterval> | null>(null);\r\n\r\n  const SlideimageRef = useRef<HTMLImageElement>(null);\r\n  const SlideimageRefthumb = useRef<HTMLImageElement>(null);\r\n  const SlideRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [imageHeight, setImageHeight] = useState(0);\r\n  const [touchPosition, setTouchPosition] = useState(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      billboard2: string;\r\n      MemberProfileData: any;\r\n    };\r\n  }\r\n  const { billboard2, MemberProfileData } = useSelector(\r\n    (state: RootStateReducerImage) => ({\r\n      ...state.UserdataReducer,\r\n    })\r\n  );\r\n\r\n  const billboard2Reducer = billboard2;\r\n\r\n  const MemberProfileDataReducer = MemberProfileData;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SPRING TRANSITION WITH INDEX\r\n  const transitions = useTransition(sliderIndex, {\r\n    key: sliderIndex,\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n    config: { duration: sliderDuration - 50 },\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\r\n  const sliderFirstImageOnLoad = (item: number) => {\r\n    if (item === 0) {\r\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\r\n        setImageHeight(SlideimageRef.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE THUMBS IF IMAGE DOES NOT LOAD\r\n  const sliderFirstImageOnLoadthumb = (item: number) => {\r\n    if (item === 0 && imageHeight === 0) {\r\n      if (\r\n        SlideimageRefthumb.current &&\r\n        SlideimageRefthumb.current.clientHeight\r\n      ) {\r\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const handleTouchStart = (e: any) => {\r\n    ////onMouseDown onMouseMove\r\n    ////touchDown = e.clientX\r\n    const touchDown = e.touches[0].clientX;\r\n    setTouchPosition(touchDown);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH MOVE EVENT\r\n  const handleTouchMove = (e: any) => {\r\n    if (handleTouchMoveTimer.current) {\r\n      clearTimeout(handleTouchMoveTimer.current);\r\n    }\r\n    handleTouchMoveTimer.current = setTimeout(function () {\r\n      const touchDown = touchPosition;\r\n\r\n      if (touchDown === null) {\r\n        return;\r\n      }\r\n      ////currentTouch = e.clientX\r\n      const currentTouch = e.touches[0].clientX;\r\n      const diff = touchDown - currentTouch;\r\n\r\n      if (diff > 40) {\r\n        nextSlide();\r\n      } else if (diff < -40) {\r\n        prevSlide();\r\n      } else {\r\n      }\r\n\r\n      setTouchPosition(null);\r\n      return false;\r\n    }, 200);\r\n\r\n    return false;\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const nextSlide = () => {\r\n    if (autoPlayTimer.current) {\r\n      clearTimeout(autoPlayTimer.current);\r\n    }\r\n\r\n    ///set((state) => (state + 1) % slides.length);\r\n    if (sliderIndex === slides.length - 1) {\r\n      setSliderIndex((sliderIndex) => 0);\r\n    } else {\r\n      setSliderIndex((sliderIndex) => sliderIndex + 1);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PREV SLIDE\r\n  const prevSlide = () => {\r\n    if (autoPlayTimer.current) {\r\n      clearTimeout(autoPlayTimer.current);\r\n    }\r\n\r\n    if (sliderIndex === 0) {\r\n      setSliderIndex((sliderIndex) => slides.length - 1);\r\n    } else {\r\n      setSliderIndex((sliderIndex) => sliderIndex - 1);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// AUTO PLAY SLIDER DEPENDENT FUNCTION\r\n  const startSlider = () => {\r\n    setAllowAutoPlay(false);\r\n\r\n    autoPlayTimer.current = setInterval(function () {\r\n      setSliderIndex((state) => (state + 1) % slides.length);\r\n    }, autoSlideDuration);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// AUTO PLAY SLIDER START\r\n  const SliderAutoPlay = () => {\r\n    if (allowAutoPlay) {\r\n      startSlider();\r\n    } else {\r\n      setAllowAutoPlay(true);\r\n\r\n      if (autoPlayTimer.current) {\r\n        clearInterval(autoPlayTimer.current);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// UPDATE AUTO  PLAY  DURATION  AFTER INITIAL QUICK SLIDE\r\n\r\n  const callNewAutoBillboard = useCallback(() => {\r\n    if (autoPlayTimer.current) {\r\n      clearInterval(autoPlayTimer.current);\r\n    }\r\n    autoPlayTimer.current = setInterval(function () {\r\n      if (ShowBillboard) {\r\n        if (autoPlayTimer.current) {\r\n          clearInterval(autoPlayTimer.current);\r\n        }\r\n      } else {\r\n        setSliderIndex((state) => (state + 1) % slides.length);\r\n      }\r\n    }, 12000);\r\n\r\n    if (cancelAutoBillboardTimer.current) {\r\n      clearTimeout(cancelAutoBillboardTimer.current);\r\n    }\r\n    cancelAutoBillboardTimer.current = setTimeout(function () {\r\n      if (autoPlayTimer.current) {\r\n        clearInterval(autoPlayTimer.current);\r\n      }\r\n    }, 240000);\r\n  }, [ShowBillboard, autoPlayTimer]);\r\n\r\n  ///\r\n  ///\r\n  ///START AUTOPLAY ON PAGE LOAD\r\n  useEffect(() => {\r\n    var f;\r\n    if (MemberProfileDataReducer === 0) {\r\n      f = 9000;\r\n    } else {\r\n      f = 9000;\r\n    }\r\n    if (slides[1]) {\r\n      if (autoPlayTimer.current) {\r\n        clearInterval(autoPlayTimer.current);\r\n      }\r\n\r\n      SliderAutoPlay();\r\n      changeBillboardAutoSlideDurationTimer.current = setTimeout(function () {\r\n        setsliderDuration(2000);\r\n        callNewAutoBillboard();\r\n      }, f);\r\n    }\r\n  }, [slides, MemberProfileDataReducer]);\r\n\r\n  useEffect(() => {\r\n    if (slides[1]) {\r\n      setSliderIndex((state) => 1 % slides.length);\r\n    }\r\n  }, [billboard2Reducer]);\r\n\r\n  ///\r\n  ///\r\n  /// WATCH FOR CHANGE IN [ShowBillboard] AND USE THAT CONTROL SLIDER DURATION(ON VIEW) AND CLEAR AUTOPLAY TIMER\r\n  useEffect(() => {\r\n    if (ShowBillboard) {\r\n      setsliderDuration(2000);\r\n      if (autoPlayTimer.current) {\r\n        clearInterval(autoPlayTimer.current);\r\n      }\r\n    } else {\r\n    }\r\n  }, [ShowBillboard]);\r\n\r\n  useEffect(() => {\r\n    if (SlideRef.current) {\r\n      SlideRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n      });\r\n    }\r\n  }, [SlideRef]);\r\n\r\n  ///\r\n  ///\r\n  ///  CHANGE [showBillboard == close]  EXTEND SLIDER DURATION(ON VIEW) AND  START AUTOPLAY\r\n  const ClickBillboardCloseStart = () => {\r\n    ClickBillboardClose();\r\n    setsliderDuration(2000);\r\n    if (allowAutoPlay) {\r\n    } else {\r\n      callNewAutoBillboard();\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// CHANGE SLIDER CONTENT USING  DOTS\r\n  const GotoDots = (clickedDot: number) => {\r\n    setSliderIndex((sliderIndex) => clickedDot);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  return (\r\n    <Grid\r\n      item\r\n      ref={SlideRef}\r\n      onTouchStart={handleTouchStart}\r\n      onTouchMove={handleTouchMove}\r\n      xs={12}\r\n      style={{\r\n        position: \"relative\",\r\n        height: `${imageHeight}px`,\r\n        opacity: imageHeight === 0 ? 0 : 1,\r\n      }}\r\n    >\r\n      {slides[1] === null || slides[1] === \"\" ? null : (\r\n        <ArrowBillboard\r\n          ShowBillboard={ShowBillboard}\r\n          direction=\"left\"\r\n          clickSlideprev={prevSlide}\r\n          clickSlidenext={nextSlide}\r\n          imageHeight={imageHeight}\r\n        />\r\n      )}\r\n      {transitions((style, i) => (\r\n        <Grid key={i} xs={12} item>\r\n          <animated.img\r\n            ref={SlideimageRef}\r\n            onClick={ClickBillboardCloseStart}\r\n            onLoad={() => {\r\n              sliderFirstImageOnLoad(i);\r\n            }}\r\n            style={{\r\n              ...style,\r\n              cursor: \"pointer\",\r\n              width: \"100%\",\r\n              objectFit: \"cover\",\r\n              position: \"absolute\",\r\n              height: billboardDynamicHeight,\r\n              borderRadius: \"0px\",\r\n              borderBottomLeftRadius: ShowBillboard\r\n                ? \"0px\"\r\n                : matchPc\r\n                  ? \"7px\"\r\n                  : \"0px\",\r\n              borderBottomRightRadius: ShowBillboard\r\n                ? \"0px\"\r\n                : matchPc\r\n                  ? \"7px\"\r\n                  : \"0px\",\r\n              left: \"0\",\r\n              zIndex: 1,\r\n              filter: \"blur(0px)\",\r\n            }}\r\n            src={slidesthumb[i]}\r\n          />\r\n          <animated.img\r\n            ref={SlideimageRef}\r\n            onClick={ClickBillboardCloseStart}\r\n            onLoad={() => {\r\n              sliderFirstImageOnLoad(i);\r\n            }}\r\n            style={{\r\n              ...style,\r\n              cursor: \"pointer\",\r\n              width: \"100%\",\r\n              objectFit: \"cover\",\r\n              position: \"absolute\",\r\n              height: billboardDynamicHeight,\r\n              borderRadius: \"0px\",\r\n              borderBottomLeftRadius: ShowBillboard\r\n                ? \"0px\"\r\n                : matchPc\r\n                  ? \"20px\"\r\n                  : \"0px\",\r\n              borderBottomRightRadius: ShowBillboard\r\n                ? \"0px\"\r\n                : matchPc\r\n                  ? \"20px\"\r\n                  : \"0px\",\r\n              left: \"0\",\r\n              zIndex: 2,\r\n            }}\r\n            src={slides[i]}\r\n          />\r\n        </Grid>\r\n      ))}{\" \"}\r\n      {slides[1] === null || slides[1] === \"\" ? null : (\r\n        <DotsBillboard\r\n          ShowBillboard={ShowBillboard}\r\n          GotoDots={GotoDots}\r\n          slides={slides}\r\n          activeSlide={sliderIndex}\r\n        />\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport const SliderBillboard = React.memo(SliderBillboardx);\r\n"]},"metadata":{},"sourceType":"module"}