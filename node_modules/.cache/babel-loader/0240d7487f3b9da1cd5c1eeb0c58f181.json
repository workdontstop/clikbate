{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\log\\\\FormHolder.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\nimport { TextFieldLogin } from \"./TextFieldLogin\";\nimport { TextFieldSignup } from \"./TextFieldSignup\";\nimport { ModalFormSignupError } from \"./ModalFormSignupError\";\nimport { ModalFormLoginError } from \"./ModalFormLoginError\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { matchPc, matchTablet } from \"../DetectDevice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { IsLoggedAction } from \"./actions/IsLoggedAction\";\nimport { UserdataAction } from \"./actions/UserdataAction\";\nimport { ActivateLoaderAction, HideLoaderAction } from \"../GlobalActions\"; //////import { useHistory } from \"react-router-dom\";\n\nimport { PasswordCheck } from \"./PasswordCheck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FormHolderx({\n  zoomedModal,\n  WidthHolder,\n  loginForm,\n  setServerErrorData,\n  setServerErrorDisplay,\n  setserverEmojiplain,\n  checkSignupPasswordACTIVATE,\n  setcheckSignupPasswordACTIVATE\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [focusUsername, setFocusUsername] = useState(false);\n  const [focusPassword, setFocusPassword] = useState(false);\n  const [focusUsernameSign, setFocusUsernameSign] = useState(false);\n  const [focusPasswordSign, setFocusPasswordSign] = useState(false);\n  const [focusEmailSign, setFocusEmailSign] = useState(false);\n  const [bopEmail, setbopEmail] = useState(false);\n  const [bopUsername, setbopUsername] = useState(false);\n  const [bopPassword, setbopPassword] = useState(false);\n  const [showFocusTextFieldByHidePadding, setShowFocusTextFieldByHidePadding] = useState(false);\n  const [responseErrorConfirmPassword, setresponseErrorConfirmPassword] = useState(false);\n  var fieldSize = \"\";\n  var tabletMobile = \"\";\n  var buttonFont = \"\";\n  var buttonTransform = \" \";\n  var pad = \"\"; ///\n  ///\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\n\n  if (matchPc) {\n    buttonFont = \"1vw\";\n    buttonTransform = \" \";\n    pad = \"14.5px\"; ///\n  } else if (matchTablet) {\n    fieldSize = \"smallTablet\";\n    tabletMobile = \"Tablet\";\n    pad = \"16px\";\n    buttonFont = \"2vw\";\n    buttonTransform = \" \"; ///\n  } else {\n    fieldSize = \"small\";\n    tabletMobile = \"Mobile\";\n    buttonFont = \"\";\n    buttonTransform = \"scale(0.95)\";\n    pad = \"16px\";\n  } ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  /// GET  SIGNUP BUTTON AND LOGIN BUTTON STYLE FROM REDUX\n\n  const {\n    MozBoxShadowSD,\n    WebkitBoxShadowSD,\n    boxShadowSD\n  } = useSelector(state => ({ ...state.ButtonsSignUpReducerDark\n  }));\n  const {\n    MozBoxShadowSL,\n    WebkitBoxShadowSL,\n    boxShadowSL\n  } = useSelector(state => ({ ...state.ButtonsSignUpReducerLight\n  }));\n  const {\n    MozBoxShadowLD,\n    WebkitBoxShadowLD,\n    boxShadowLD\n  } = useSelector(state => ({ ...state.ButtonsLoginReducerDark\n  }));\n  const {\n    MozBoxShadowLL,\n    WebkitBoxShadowLL,\n    boxShadowLL\n  } = useSelector(state => ({ ...state.ButtonsLoginReducerLight\n  }));\n  var MozBoxShadowReducerLogin = \" \";\n  var WebkitBoxShadowReducerLogin = \" \";\n  var boxShadowReducerLogin = \" \";\n  var MozBoxShadowReducerSign = \" \";\n  var WebkitBoxShadowReducerSign = \" \";\n  var boxShadowReducerSign = \" \";\n\n  if (darkmodeReducer) {\n    MozBoxShadowReducerLogin = MozBoxShadowLD;\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLD;\n    boxShadowReducerLogin = boxShadowLD;\n    MozBoxShadowReducerSign = MozBoxShadowSD;\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSD;\n    boxShadowReducerSign = boxShadowSD;\n  } else {\n    MozBoxShadowReducerLogin = MozBoxShadowLL;\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLL;\n    boxShadowReducerLogin = boxShadowLL;\n    MozBoxShadowReducerSign = MozBoxShadowSL;\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSL;\n    boxShadowReducerSign = boxShadowSL;\n  } ///\n  ///\n  ///\n  ///HISTORY VARIABLE\n  ////const history = useHistory();\n  ///\n  ///\n  ///\n  ///SUPERSTARZ ICON SELECT\n\n\n  var SuperIcon = \"\";\n  darkmodeReducer ? SuperIcon = SuperstarzIconDark : SuperIcon = SuperstarzIconLight;\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env; ///\n  ///\n  ///LOGGING UPDATE VALUES DETAILS\n\n  const initialLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialCleanLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialErrorLogValue = {\n    inputedUsername: 0,\n    inputedPassword: 0\n  };\n  const [rawLoginValues, setRawLoginValues] = useState(initialLogValue);\n  const [cleanLoginValues, setCleanLoginValues] = useState(initialCleanLogValue);\n  const [errorsLoginValues, setErrorsLoginValues] = useState(initialErrorLogValue);\n  const [loginShowPassword, setLoginShowPassword] = useState(false);\n  const loginShowPasswordTimer = useRef(null); ///\n  ///\n  ///\n  /// SHOW  LOGIN PASSWORD FOR A WHILE\n\n  const ShowLoginPasswordForaWhile = useCallback(() => {\n    if (loginShowPasswordTimer.current) {\n      clearTimeout(loginShowPasswordTimer.current);\n    }\n\n    setLoginShowPassword(!loginShowPassword);\n    loginShowPasswordTimer.current = setTimeout(() => {\n      setLoginShowPassword(false);\n    }, 2000);\n  }, [loginShowPassword]); ///\n  ///\n  ///\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\n\n  const updateLoginvalues = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setErrorsLoginValues({ ...errorsLoginValues,\n      [name]: 0\n    });\n    setRawLoginValues({ ...rawLoginValues,\n      [name]: value\n    });\n    setCleanLoginValues({ ...cleanLoginValues,\n      [name]: value\n    });\n  }, [errorsLoginValues, rawLoginValues, cleanLoginValues]);\n  const logmein = useCallback(() => {\n    if (cleanLoginValues.inputedUsername && cleanLoginValues.inputedPassword) {\n      dispatch(ActivateLoaderAction());\n      Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/loging`, {\n        values: cleanLoginValues\n      }, {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.message === \"Wrong Password\") {\n          setServerErrorData(\"wrong username and  password combination\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(false);\n          dispatch(HideLoaderAction());\n        } else {\n          if (response.data.message === \"Wrong username\") {\n            setServerErrorData(\"username does not exist\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(false);\n            dispatch(HideLoaderAction());\n          } else if (response.data.payload) {\n            /*  history.push({\r\n              pathname: \"/supercheck\",\r\n              state: { userdata: response.data.payload },\r\n            });*/\n            ///console.log(response.data.payload);\n            /// alert(loggedIn);\n            dispatch(HideLoaderAction());\n            dispatch(UserdataAction(response.data.payload));\n            dispatch(IsLoggedAction());\n          } else {\n            setServerErrorData(\"user info could not be retrieved\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(false);\n            dispatch(HideLoaderAction());\n          }\n        }\n      }).catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          //express typo can activate this\n          // Request made and server responded\n          //express typo can activate this\n          //let textFieldParam = error.response.data.error.errors[0].param;\n          let affectedTextField = \"wrong password and username combination\";\n          let dynamicError = `${affectedTextField}  `;\n          setServerErrorData(dynamicError);\n          setServerErrorDisplay(1);\n          setserverEmojiplain(false);\n          dispatch(HideLoaderAction());\n        } else if (error.request) {\n          // The request was made but no response was received Or request not made\n          // Axios.post(\"http://localhost:3003/reg\" can activate this error\n          setServerErrorData(\"error connecting to server, check your connection\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(true);\n          dispatch(HideLoaderAction());\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          setServerErrorData(\"request setup failed , pls try again\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(true);\n          dispatch(HideLoaderAction());\n        }\n      });\n    } else {\n      let passwordErrorHolder = errorsLoginValues.inputedPassword;\n      let usernameErrorHolder = errorsLoginValues.inputedUsername;\n\n      if (!cleanLoginValues.inputedPassword) {\n        passwordErrorHolder = 1;\n      }\n\n      if (!cleanLoginValues.inputedUsername) {\n        usernameErrorHolder = 1;\n      }\n\n      setErrorsLoginValues({ ...errorsLoginValues,\n        inputedPassword: passwordErrorHolder,\n        inputedUsername: usernameErrorHolder\n      });\n    }\n  }, [REACT_APP_SUPERSTARZ_URL, cleanLoginValues, dispatch, errorsLoginValues, setServerErrorData, setServerErrorDisplay, setserverEmojiplain]); ///\n  ///\n  ///UPDATE SIGN UP DETAILS\n  ///\n  ///\n  ///\n  /// SANITISE SIGN UP FORM INPUT CLIENT\n\n  const initialRawSignValue = {\n    inputedEmail: \"\",\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialCleanSignValue = {\n    inputedEmail: \"\",\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialErrorSignValue = {\n    inputedEmail: 0,\n    inputedUsername: 0,\n    inputedPassword: 0\n  };\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\n  const [cleanSignupValues, setCleanSignupValues] = useState(initialCleanSignValue);\n  const [errorsSignupValues, setErrorsSignupValues] = useState(initialErrorSignValue);\n  const EmailCheckingTimer = useRef(null);\n  const UsernameCheckingTimer = useRef(null);\n  const initialspinner = {\n    inputedUsername: false,\n    inputedPassword: false,\n    inputedEmail: false\n  };\n  const [errorFormChecking, setErrorFormChecking] = useState(initialspinner);\n  const PasswordCheckingTimer = useRef(null);\n  const [signupShowPassword, setSignupShowPassword] = useState(false);\n  const signupShowPasswordTimer = useRef(null); ///\n  ///\n  ///\n  ///SIGN UP ERROR VARIABLES\n\n  let usernameErrorData = null;\n  let usernameErrorDisplay = 0;\n  let emailErrorData = null;\n  let emailErrorDisplay = 0;\n  let passwordErrorData = null;\n  let passwordErrorDisplay = 0;\n\n  switch (errorsSignupValues.inputedUsername) {\n    case 1:\n      usernameErrorData = \"usernames can only use letters, numbers, underscores and periods \";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 2:\n      usernameErrorData = \"username is taken\";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 3:\n      usernameErrorData = \"username is available\";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 4:\n      usernameErrorData = \"username  required\";\n      usernameErrorDisplay = 1;\n      break;\n\n    default:\n      usernameErrorData = null;\n      usernameErrorDisplay = 0;\n      break;\n  }\n\n  switch (errorsSignupValues.inputedPassword) {\n    case 1:\n      passwordErrorData = \"password must be at Least 8 characters\";\n      passwordErrorDisplay = 1;\n      break;\n\n    case 2:\n      passwordErrorData = \"checking\";\n      passwordErrorDisplay = 1;\n      break;\n\n    case 4:\n      passwordErrorData = \" password  required \";\n      passwordErrorDisplay = 1;\n      break;\n\n    default:\n      passwordErrorData = null;\n      passwordErrorDisplay = 0;\n      break;\n  }\n\n  switch (errorsSignupValues.inputedEmail) {\n    case 1:\n      emailErrorData = \"checking\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 2:\n      emailErrorData = \"email address is not valid\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 3:\n      emailErrorData = \"email is restricted to certain characters\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 4:\n      emailErrorData = \"email required\";\n      emailErrorDisplay = 1;\n      break;\n\n    default:\n      emailErrorData = null;\n      emailErrorDisplay = 0;\n      break;\n  } ///\n  ///\n  ///\n  ///SIGN UP ERROR VARIABLES\n  ///\n  ///\n  ///\n  /// SHOW  SIGNUP PASSWORD FOR A WHILE\n\n\n  const ShowSignupPasswordForaWhile = useCallback(() => {\n    if (signupShowPasswordTimer.current) {\n      clearTimeout(signupShowPasswordTimer.current);\n    }\n\n    setSignupShowPassword(!signupShowPassword);\n    signupShowPasswordTimer.current = setTimeout(() => {\n      setSignupShowPassword(false);\n    }, 2000);\n  }, [signupShowPassword]); /// SANITISE LOG IN FORM INPUT CLIENT SIDE\n\n  const updateSignvalues = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"inputedUsername\") {\n      let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\n      let cleanValue = value.replace(usernameCleaner, \"\");\n      let usernameLimiter = /^.{26}$/;\n      let finalUsername = cleanValue.replace(usernameLimiter, \"\");\n      let checkUsernameClean = usernameCleaner.test(value);\n      let checkUsernameLimited = usernameLimiter.test(cleanValue);\n\n      if (checkUsernameClean) {\n        if (UsernameCheckingTimer.current) {\n          clearTimeout(UsernameCheckingTimer.current);\n        }\n\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n      } else {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      let userNameLength = finalUsername.length;\n\n      if (checkUsernameClean) {} else {\n        if (checkUsernameLimited || userNameLength > 26) {} else {\n          setRawSignupValues({ ...rawSignupValues,\n            [name]: finalUsername\n          });\n          setCleanSignupValues({ ...cleanSignupValues,\n            [name]: finalUsername\n          }); /// AXIOS REQUEST FOR CHECK USERNAME\n\n          if (UsernameCheckingTimer.current) {\n            clearTimeout(UsernameCheckingTimer.current);\n            setErrorsSignupValues({ ...errorsSignupValues,\n              [name]: 0\n            });\n          }\n\n          if (errorFormChecking.inputedUsername) {} else {\n            setErrorFormChecking({ ...errorFormChecking,\n              [name]: true\n            });\n          }\n\n          setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 2\n          });\n          UsernameCheckingTimer.current = setTimeout(() => {\n            if (value.length === 0) {\n              setErrorsSignupValues({ ...errorsSignupValues,\n                [name]: 0\n              });\n              setErrorFormChecking({ ...errorFormChecking,\n                [name]: false\n              });\n            } else {\n              Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/usernamecheck`, {\n                value: finalUsername\n              }).then(response => {\n                if (response.data.message === \"username is not unique\") {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 2\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else if (response.data.message === \"username is available\") {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 3\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                }\n              }).catch(function (error) {\n                if (error.response) {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else if (error.request) {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                }\n              });\n            }\n          }, 3000); /// AXIOS REQUEST FOR CHECK USERNAME\n        }\n      } ///\n\n    } else if (name === \"inputedEmail\") {\n      const emailValidation = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      const emailCleaner = /[^*$%#+@a-z0-9áéíóúñü \\.'_]/gim;\n      let finalEmail = value.replace(emailCleaner, \"\");\n      let checkEmailClean = emailCleaner.test(value);\n      let checkEmailValidated = emailValidation.test(String(value).toLowerCase());\n\n      if (EmailCheckingTimer.current) {\n        clearTimeout(EmailCheckingTimer.current);\n      }\n\n      if (!checkEmailValidated) {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n\n        if (errorFormChecking.inputedEmail) {} else {\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: true\n          });\n        }\n\n        EmailCheckingTimer.current = setTimeout(() => {\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n          setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 2\n          });\n          checkEmailClean && setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 3\n          });\n        }, 2000);\n      } else {\n        if (EmailCheckingTimer.current) {\n          clearTimeout(EmailCheckingTimer.current);\n        }\n\n        checkEmailClean ? setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 3\n        }) : setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: finalEmail\n      });\n      setCleanSignupValues({ ...cleanSignupValues,\n        [name]: finalEmail\n      }); ////////\n    } else {\n      if (PasswordCheckingTimer.current) {\n        clearTimeout(PasswordCheckingTimer.current);\n      }\n\n      setErrorsSignupValues({ ...errorsSignupValues,\n        [name]: 2\n      });\n\n      if (errorFormChecking.inputedPassword) {} else {\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: true\n        });\n      }\n\n      PasswordCheckingTimer.current = setTimeout(() => {\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: false\n        });\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n      }, 2000);\n      var passwordLength = value.length;\n\n      if (passwordLength >= 8 || passwordLength === 0) {\n        if (PasswordCheckingTimer.current) {\n          clearTimeout(PasswordCheckingTimer.current);\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n        }\n\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: value\n      });\n      setCleanSignupValues({ ...cleanSignupValues,\n        [name]: value\n      });\n    }\n  }, [cleanSignupValues, rawSignupValues, errorsSignupValues, errorFormChecking, REACT_APP_SUPERSTARZ_URL]); ///\n  ///\n  ///\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\n\n  const signmeup = useCallback((checkSignupPasswordinputed = \" \") => {\n    if (cleanSignupValues.inputedEmail && cleanSignupValues.inputedUsername && cleanSignupValues.inputedPassword) {\n      if (errorsSignupValues.inputedPassword === 0) {\n        if (errorsSignupValues.inputedEmail === 0) {\n          if (errorsSignupValues.inputedUsername === 3) {\n            if (checkSignupPasswordACTIVATE) {\n              if (checkSignupPasswordinputed === cleanSignupValues.inputedPassword) {\n                dispatch(ActivateLoaderAction());\n                Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/registration`, {\n                  values: cleanSignupValues\n                }).then(response => {\n                  if (response.data.message === \"username not unique\") {\n                    setServerErrorData(\"username is taken\");\n                    setServerErrorDisplay(1);\n                    setserverEmojiplain(true);\n                    dispatch(HideLoaderAction());\n                  } else if (response.data.payload) {\n                    /*  history.push({\r\n                    pathname: \"/supercheck\",\r\n                    state: { userdata: response.data.payload },\r\n                    });*/\n                    ///console.log(response.data.payload);\n                    /// alert(loggedIn);\n                    dispatch(HideLoaderAction());\n                    dispatch(UserdataAction(response.data.payload));\n                    dispatch(IsLoggedAction());\n                  } else {\n                    setServerErrorData(\"something went wrong\");\n                    setServerErrorDisplay(1);\n                    setserverEmojiplain(true);\n                    dispatch(HideLoaderAction());\n                  }\n                }).catch(function (error) {\n                  if (error.response) {\n                    // Request made and server responded\n                    //express typo can activate this\n                    let textFieldParam = error.response.data.error.errors[0].param;\n                    let affectedTextField = \" \";\n\n                    if (textFieldParam === \"values.inputedPassword\") {\n                      affectedTextField = \"password must be at least 8 characters\";\n                    } else if (textFieldParam === \"values.inputedEmail\") {\n                      affectedTextField = \"email address is not valid\";\n                    } else {\n                      affectedTextField = \"usernames use letters, numbers, underscores and periods\";\n                    }\n\n                    let dynamicError = `${affectedTextField}.  ${error.response.data.error.errors[0].msg} `;\n                    setServerErrorData(dynamicError);\n                    setServerErrorDisplay(1);\n                    setserverEmojiplain(true);\n                    dispatch(HideLoaderAction());\n                  } else if (error.request) {\n                    // The request was made but no response was received Or request not made\n                    // Axios.post(\"http://localhost:3003/reg\" can activate this error\n                    setServerErrorData(\"error connecting to server, check your connection\");\n                    setServerErrorDisplay(1);\n                    setserverEmojiplain(true);\n                    dispatch(HideLoaderAction());\n                  } else {\n                    // Something happened in setting up the request that triggered an Error\n                    setServerErrorData(\"request setup failed , pls try again\");\n                    setServerErrorDisplay(1);\n                    setserverEmojiplain(true);\n                    dispatch(HideLoaderAction());\n                  }\n                });\n              } else {\n                setresponseErrorConfirmPassword(true);\n                setTimeout(function () {\n                  setresponseErrorConfirmPassword(false);\n                }, 2500); ////////////////RESPONSE ERROR CONFIRM PASSWORD\n              }\n            } else {\n              setcheckSignupPasswordACTIVATE(true);\n            }\n          } else {\n            setbopUsername(true);\n            setTimeout(() => {\n              setbopUsername(false);\n            }, 2500);\n          }\n        } else {\n          setbopEmail(true);\n          setTimeout(() => {\n            setbopEmail(false);\n          }, 2500);\n        }\n      } else {\n        setbopPassword(true);\n        setTimeout(() => {\n          setbopPassword(false);\n        }, 2500);\n      }\n    } else {\n      if (checkSignupPasswordACTIVATE) {\n        setcheckSignupPasswordACTIVATE(false);\n      }\n\n      let passwordErrorHolder = errorsSignupValues.inputedPassword;\n      let emailErrorHolder = errorsSignupValues.inputedEmail;\n      let usernameErrorHolder = errorsSignupValues.inputedUsername;\n\n      if (!cleanSignupValues.inputedPassword) {\n        passwordErrorHolder = 4;\n      }\n\n      if (!cleanSignupValues.inputedEmail) {\n        emailErrorHolder = 4;\n      }\n\n      if (!cleanSignupValues.inputedUsername) {\n        usernameErrorHolder = 4;\n      }\n\n      setErrorsSignupValues({ ...errorsSignupValues,\n        inputedPassword: passwordErrorHolder,\n        inputedEmail: emailErrorHolder,\n        inputedUsername: usernameErrorHolder\n      });\n    }\n  }, [REACT_APP_SUPERSTARZ_URL, cleanSignupValues, errorsSignupValues, checkSignupPasswordACTIVATE, dispatch, setServerErrorData, setServerErrorDisplay, setcheckSignupPasswordACTIVATE, setserverEmojiplain]); ///\n  ///\n  ///\n  ///ENTER KEY EMULATE FORM ACTION\n\n  const enterPress = useCallback(e => {\n    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n      if (loginForm) {\n        logmein();\n      } else {\n        signmeup();\n      }\n    }\n  }, [signmeup, loginForm, logmein]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", enterPress);\n    return () => document.removeEventListener(\"keydown\", enterPress);\n  }, [enterPress]); ///\n  ///\n  ///\n  ///\n  ///\n  /// UPDATE SIGN UP DETAILS\n  ///\n  ///\n  ///\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loginForm ? matchPc\n    /*PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\n    ?\n    /*#__PURE__*/\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: zoomedModal ? \"zoom-login-logo  make-small-icons-clickable-neutral\" : \"hide-logo \",\n        src: SuperIcon,\n        alt: \"SuperstarZ logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n        focus: focusUsername,\n        device: \"pc\",\n        type: true,\n        ErrorDisplay: errorsLoginValues.inputedUsername,\n        WidthHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 898,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldLogin, {\n        focus: focusUsername,\n        setFocus: setFocusUsername,\n        updateLoginvalues: updateLoginvalues,\n        rawLoginValues: rawLoginValues,\n        ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\n        loginShowPassword: loginShowPassword,\n        size: \"medium\",\n        passwordType: false,\n        withHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldLogin, {\n        focus: focusPassword,\n        setFocus: setFocusPassword,\n        updateLoginvalues: updateLoginvalues,\n        rawLoginValues: rawLoginValues,\n        ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\n        loginShowPassword: loginShowPassword,\n        size: \"medium\",\n        passwordType: true,\n        withHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 916,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n        focus: focusPassword,\n        device: \"pc\",\n        type: false,\n        ErrorDisplay: errorsLoginValues.inputedPassword,\n        WidthHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          marginTop: \"70px\",\n          zIndex: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: \"buttonpad buttonshake\",\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: logmein,\n            style: {\n              fontSize: buttonFont,\n              transform: buttonTransform,\n              padding: \"11.5px\",\n              borderRadius: \"52px\",\n              MozBoxShadow: MozBoxShadowReducerLogin,\n              WebkitBoxShadow: WebkitBoxShadowReducerLogin,\n              boxShadow: boxShadowReducerLogin\n            },\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"large\",\n            color: \"primary\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 15\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n    /*PC PC PC PC PC PC PC PC PC LOGIN  PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\n    :\n    /*#__PURE__*/\n\n    /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n        focus: focusUsername,\n        type: true,\n        device: tabletMobile,\n        ErrorDisplay: errorsLoginValues.inputedUsername,\n        WidthHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldLogin, {\n        focus: focusUsername,\n        setFocus: setFocusUsername,\n        updateLoginvalues: updateLoginvalues,\n        rawLoginValues: rawLoginValues,\n        ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\n        loginShowPassword: loginShowPassword,\n        size: fieldSize,\n        passwordType: false,\n        withHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldLogin, {\n        focus: focusPassword,\n        setFocus: setFocusPassword,\n        updateLoginvalues: updateLoginvalues,\n        rawLoginValues: rawLoginValues,\n        ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\n        loginShowPassword: loginShowPassword,\n        size: fieldSize,\n        passwordType: true,\n        withHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n        focus: focusPassword,\n        type: false,\n        ErrorDisplay: errorsLoginValues.inputedPassword,\n        device: tabletMobile,\n        WidthHolder: WidthHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: \"modal-hold-login\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          sm: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: \"buttonpad buttonshake\",\n          xs: 4,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: logmein,\n            style: {\n              fontSize: buttonFont,\n              transform: buttonTransform,\n              padding: \"11.5px\",\n              borderRadius: \"52px\",\n              MozBoxShadow: MozBoxShadowReducerLogin,\n              WebkitBoxShadow: WebkitBoxShadowReducerLogin,\n              boxShadow: boxShadowReducerLogin\n            },\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"large\",\n            color: \"primary\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 15\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n    /*MOBILE  MOBILE  MOBILE  MOBILE  LOGIN   MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\n    : matchPc\n    /*PC PC PC PC PC PC PC PC  SIGNUP  PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\n    ?\n    /*#__PURE__*/\n    _jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        className: zoomedModal ? \"zoom-signup-logo make-small-icons-clickable-neutral\" : \"hide-logo make-small-icons-clickable-neutral \",\n        src: SuperIcon,\n        alt: \"SuperstarZ logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1025,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n        focus: focusEmailSign,\n        device: \"pc\",\n        ErrorType: 0,\n        textField: \"email\",\n        errorFormChecking: errorFormChecking.inputedEmail,\n        WidthHolder: WidthHolder,\n        type: true,\n        ErrorDisplay: emailErrorDisplay,\n        ErrorData: emailErrorData,\n        bop: bopEmail,\n        checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1034,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n        showFocusTextFieldByHidePadding: showFocusTextFieldByHidePadding,\n        setShowFocusTextFieldByHidePadding: setShowFocusTextFieldByHidePadding,\n        focus: focusEmailSign,\n        setFocus: setFocusEmailSign,\n        updateSignvalues: updateSignvalues,\n        rawSignupValues: rawSignupValues,\n        ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n        signupShowPassword: signupShowPassword,\n        size: \"medium\",\n        emailType: true,\n        passwordType: false,\n        withHolder: WidthHolder,\n        checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n        focus: focusUsernameSign,\n        device: \"pc\",\n        ErrorType: errorsSignupValues.inputedUsername,\n        textField: \"username\",\n        errorFormChecking: errorFormChecking.inputedUsername,\n        WidthHolder: WidthHolder,\n        type: true,\n        ErrorDisplay: usernameErrorDisplay,\n        ErrorData: usernameErrorData,\n        bop: bopUsername,\n        checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1064,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n        showFocusTextFieldByHidePadding: showFocusTextFieldByHidePadding,\n        setShowFocusTextFieldByHidePadding: setShowFocusTextFieldByHidePadding,\n        focus: focusUsernameSign,\n        setFocus: setFocusUsernameSign,\n        updateSignvalues: updateSignvalues,\n        rawSignupValues: rawSignupValues,\n        ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n        signupShowPassword: signupShowPassword,\n        size: \"medium\",\n        emailType: false,\n        passwordType: false,\n        withHolder: WidthHolder,\n        checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1077,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n        showFocusTextFieldByHidePadding: showFocusTextFieldByHidePadding,\n        setShowFocusTextFieldByHidePadding: setShowFocusTextFieldByHidePadding,\n        focus: focusPasswordSign,\n        setFocus: setFocusPasswordSign,\n        updateSignvalues: updateSignvalues,\n        rawSignupValues: rawSignupValues,\n        ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n        signupShowPassword: signupShowPassword,\n        size: \"medium\",\n        emailType: false,\n        passwordType: true,\n        withHolder: WidthHolder,\n        checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1094,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n        focus: focusPasswordSign,\n        device: \"pc\",\n        ErrorType: 0,\n        textField: \"password\",\n        errorFormChecking: errorFormChecking.inputedPassword,\n        WidthHolder: WidthHolder,\n        type: false,\n        ErrorDisplay: passwordErrorDisplay,\n        ErrorData: passwordErrorData,\n        bop: bopPassword,\n        checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PasswordCheck, {\n        signmeup: signmeup,\n        widthHolder: WidthHolder,\n        checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE,\n        responseErrorConfirmPassword: responseErrorConfirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          opacity: checkSignupPasswordACTIVATE ? 0 : 1\n        },\n        className: \"modal-hold-signup\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: \"buttonpad buttonshake\",\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              fontSize: buttonFont,\n              transform: buttonTransform,\n              padding: pad,\n              borderRadius: \"50px\",\n              MozBoxShadow: MozBoxShadowReducerSign,\n              WebkitBoxShadow: WebkitBoxShadowReducerSign,\n              boxShadow: boxShadowReducerSign\n            },\n            onClick: signmeup,\n            fullWidth: true,\n            variant: \"contained\",\n            size: \"large\",\n            color: \"secondary\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1130,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true)\n    /*PC PC PC PC   SIGN UP PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\n    :\n    /*#__PURE__*/\n\n    /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\n    _jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n        focus: focusEmailSign,\n        device: tabletMobile,\n        ErrorType: 0,\n        textField: \"email\",\n        errorFormChecking: errorFormChecking.inputedEmail,\n        WidthHolder: WidthHolder,\n        type: true,\n        ErrorDisplay: emailErrorDisplay,\n        ErrorData: emailErrorData,\n        bop: bopEmail,\n        checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n        showFocusTextFieldByHidePadding: showFocusTextFieldByHidePadding,\n        setShowFocusTextFieldByHidePadding: setShowFocusTextFieldByHidePadding,\n        focus: focusEmailSign,\n        setFocus: setFocusEmailSign,\n        updateSignvalues: updateSignvalues,\n        rawSignupValues: rawSignupValues,\n        ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n        signupShowPassword: signupShowPassword,\n        size: fieldSize,\n        emailType: true,\n        passwordType: false,\n        withHolder: WidthHolder,\n        checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n        focus: focusUsernameSign,\n        device: tabletMobile,\n        ErrorType: errorsSignupValues.inputedUsername,\n        textField: \"username\",\n        errorFormChecking: errorFormChecking.inputedUsername,\n        WidthHolder: WidthHolder,\n        type: true,\n        ErrorDisplay: usernameErrorDisplay,\n        ErrorData: usernameErrorData,\n        bop: bopUsername,\n        checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n        showFocusTextFieldByHidePadding: showFocusTextFieldByHidePadding,\n        setShowFocusTextFieldByHidePadding: setShowFocusTextFieldByHidePadding,\n        focus: focusUsernameSign,\n        setFocus: setFocusUsernameSign,\n        updateSignvalues: updateSignvalues,\n        rawSignupValues: rawSignupValues,\n        ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n        signupShowPassword: signupShowPassword,\n        size: fieldSize,\n        emailType: false,\n        passwordType: false,\n        withHolder: WidthHolder,\n        checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n        showFocusTextFieldByHidePadding: showFocusTextFieldByHidePadding,\n        setShowFocusTextFieldByHidePadding: setShowFocusTextFieldByHidePadding,\n        focus: focusPasswordSign,\n        setFocus: setFocusPasswordSign,\n        updateSignvalues: updateSignvalues,\n        rawSignupValues: rawSignupValues,\n        ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n        signupShowPassword: signupShowPassword,\n        size: fieldSize,\n        emailType: false,\n        passwordType: true,\n        withHolder: WidthHolder,\n        checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n        focus: focusPasswordSign,\n        device: tabletMobile,\n        ErrorType: 0,\n        textField: \"password\",\n        errorFormChecking: errorFormChecking.inputedPassword,\n        WidthHolder: WidthHolder,\n        type: false,\n        ErrorDisplay: passwordErrorDisplay,\n        ErrorData: passwordErrorData,\n        bop: bopPassword,\n        checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PasswordCheck, {\n        signmeup: signmeup,\n        widthHolder: WidthHolder,\n        checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE,\n        responseErrorConfirmPassword: responseErrorConfirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          opacity: checkSignupPasswordACTIVATE ? 0 : 1\n        },\n        className: \"modal-hold-signup\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          sm: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: \"buttonpad buttonshake\",\n          xs: 4,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              fontSize: buttonFont,\n              transform: buttonTransform,\n              padding: pad,\n              borderRadius: \"50px\",\n              MozBoxShadow: MozBoxShadowReducerSign,\n              WebkitBoxShadow: WebkitBoxShadowReducerSign,\n              boxShadow: boxShadowReducerSign\n            },\n            onClick: signmeup,\n            fullWidth: true,\n            variant: \"contained\",\n            size: \"large\",\n            color: \"secondary\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1265,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1264,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1258,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true)\n  }, void 0, false)\n  /*MOBILE  MOBILE  MOBILE  MOBILE  SIGNUP MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\n  ;\n}\n\n_s(FormHolderx, \"yLxNgxPHX5mHJY21fj2ntGhrWks=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = FormHolderx;\nexport const FormHolder = /*#__PURE__*/React.memo(FormHolderx);\n_c2 = FormHolder;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormHolderx\");\n$RefreshReg$(_c2, \"FormHolder\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/log/FormHolder.tsx"],"names":["React","useRef","useState","useCallback","useEffect","Axios","SuperstarzIconLight","SuperstarzIconDark","TextFieldLogin","TextFieldSignup","ModalFormSignupError","ModalFormLoginError","Button","Grid","matchPc","matchTablet","useSelector","useDispatch","IsLoggedAction","UserdataAction","ActivateLoaderAction","HideLoaderAction","PasswordCheck","FormHolderx","zoomedModal","WidthHolder","loginForm","setServerErrorData","setServerErrorDisplay","setserverEmojiplain","checkSignupPasswordACTIVATE","setcheckSignupPasswordACTIVATE","dispatch","focusUsername","setFocusUsername","focusPassword","setFocusPassword","focusUsernameSign","setFocusUsernameSign","focusPasswordSign","setFocusPasswordSign","focusEmailSign","setFocusEmailSign","bopEmail","setbopEmail","bopUsername","setbopUsername","bopPassword","setbopPassword","showFocusTextFieldByHidePadding","setShowFocusTextFieldByHidePadding","responseErrorConfirmPassword","setresponseErrorConfirmPassword","fieldSize","tabletMobile","buttonFont","buttonTransform","pad","darkmode","state","GlobalReducer","darkmodeReducer","MozBoxShadowSD","WebkitBoxShadowSD","boxShadowSD","ButtonsSignUpReducerDark","MozBoxShadowSL","WebkitBoxShadowSL","boxShadowSL","ButtonsSignUpReducerLight","MozBoxShadowLD","WebkitBoxShadowLD","boxShadowLD","ButtonsLoginReducerDark","MozBoxShadowLL","WebkitBoxShadowLL","boxShadowLL","ButtonsLoginReducerLight","MozBoxShadowReducerLogin","WebkitBoxShadowReducerLogin","boxShadowReducerLogin","MozBoxShadowReducerSign","WebkitBoxShadowReducerSign","boxShadowReducerSign","SuperIcon","REACT_APP_SUPERSTARZ_URL","process","env","initialLogValue","inputedUsername","inputedPassword","initialCleanLogValue","initialErrorLogValue","rawLoginValues","setRawLoginValues","cleanLoginValues","setCleanLoginValues","errorsLoginValues","setErrorsLoginValues","loginShowPassword","setLoginShowPassword","loginShowPasswordTimer","ShowLoginPasswordForaWhile","current","clearTimeout","setTimeout","updateLoginvalues","e","name","value","target","logmein","post","values","withCredentials","then","response","data","message","payload","catch","error","affectedTextField","dynamicError","request","passwordErrorHolder","usernameErrorHolder","initialRawSignValue","inputedEmail","initialCleanSignValue","initialErrorSignValue","rawSignupValues","setRawSignupValues","cleanSignupValues","setCleanSignupValues","errorsSignupValues","setErrorsSignupValues","EmailCheckingTimer","UsernameCheckingTimer","initialspinner","errorFormChecking","setErrorFormChecking","PasswordCheckingTimer","signupShowPassword","setSignupShowPassword","signupShowPasswordTimer","usernameErrorData","usernameErrorDisplay","emailErrorData","emailErrorDisplay","passwordErrorData","passwordErrorDisplay","ShowSignupPasswordForaWhile","updateSignvalues","usernameCleaner","cleanValue","replace","usernameLimiter","finalUsername","checkUsernameClean","test","checkUsernameLimited","userNameLength","length","emailValidation","emailCleaner","finalEmail","checkEmailClean","checkEmailValidated","String","toLowerCase","passwordLength","signmeup","checkSignupPasswordinputed","textFieldParam","errors","param","msg","emailErrorHolder","enterPress","key","document","addEventListener","removeEventListener","marginTop","zIndex","fontSize","transform","padding","borderRadius","MozBoxShadow","WebkitBoxShadow","boxShadow","opacity","FormHolder","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useCallback, useEffect } from \"react\";\r\nimport { Ispinnerinterface, IFormHolder } from \"./log-Interfaces\";\r\nimport Axios from \"axios\";\r\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\r\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\r\nimport { TextFieldLogin } from \"./TextFieldLogin\";\r\nimport { TextFieldSignup } from \"./TextFieldSignup\";\r\nimport { ModalFormSignupError } from \"./ModalFormSignupError\";\r\nimport { ModalFormLoginError } from \"./ModalFormLoginError\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { IsLoggedAction } from \"./actions/IsLoggedAction\";\r\n\r\nimport { UserdataAction } from \"./actions/UserdataAction\";\r\nimport { ActivateLoaderAction, HideLoaderAction } from \"../GlobalActions\";\r\n//////import { useHistory } from \"react-router-dom\";\r\nimport { PasswordCheck } from \"./PasswordCheck\";\r\n\r\nfunction FormHolderx({\r\n  zoomedModal,\r\n  WidthHolder,\r\n  loginForm,\r\n  setServerErrorData,\r\n  setServerErrorDisplay,\r\n  setserverEmojiplain,\r\n  checkSignupPasswordACTIVATE,\r\n  setcheckSignupPasswordACTIVATE,\r\n}: IFormHolder) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [focusUsername, setFocusUsername] = useState<boolean>(false);\r\n  const [focusPassword, setFocusPassword] = useState<boolean>(false);\r\n  const [focusUsernameSign, setFocusUsernameSign] = useState<boolean>(false);\r\n  const [focusPasswordSign, setFocusPasswordSign] = useState<boolean>(false);\r\n  const [focusEmailSign, setFocusEmailSign] = useState<boolean>(false);\r\n\r\n  const [bopEmail, setbopEmail] = useState<boolean>(false);\r\n  const [bopUsername, setbopUsername] = useState<boolean>(false);\r\n  const [bopPassword, setbopPassword] = useState<boolean>(false);\r\n\r\n  const [showFocusTextFieldByHidePadding, setShowFocusTextFieldByHidePadding] =\r\n    useState<boolean>(false);\r\n\r\n  const [responseErrorConfirmPassword, setresponseErrorConfirmPassword] =\r\n    useState<boolean>(false);\r\n\r\n  var fieldSize = \"\";\r\n  var tabletMobile = \"\";\r\n  var buttonFont = \"\";\r\n  var buttonTransform = \" \";\r\n  var pad = \"\";\r\n\r\n  ///\r\n  ///\r\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\r\n  if (matchPc) {\r\n    buttonFont = \"1vw\";\r\n    buttonTransform = \" \";\r\n    pad = \"14.5px\";\r\n    ///\r\n  } else if (matchTablet) {\r\n    fieldSize = \"smallTablet\";\r\n    tabletMobile = \"Tablet\";\r\n\r\n    pad = \"16px\";\r\n    buttonFont = \"2vw\";\r\n    buttonTransform = \" \";\r\n    ///\r\n  } else {\r\n    fieldSize = \"small\";\r\n    tabletMobile = \"Mobile\";\r\n\r\n    buttonFont = \"\";\r\n    buttonTransform = \"scale(0.95)\";\r\n    pad = \"16px\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET  SIGNUP BUTTON AND LOGIN BUTTON STYLE FROM REDUX\r\n  const { MozBoxShadowSD, WebkitBoxShadowSD, boxShadowSD } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.ButtonsSignUpReducerDark,\r\n    })\r\n  );\r\n\r\n  const { MozBoxShadowSL, WebkitBoxShadowSL, boxShadowSL } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.ButtonsSignUpReducerLight,\r\n    })\r\n  );\r\n\r\n  const { MozBoxShadowLD, WebkitBoxShadowLD, boxShadowLD } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.ButtonsLoginReducerDark,\r\n    })\r\n  );\r\n\r\n  const { MozBoxShadowLL, WebkitBoxShadowLL, boxShadowLL } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.ButtonsLoginReducerLight,\r\n    })\r\n  );\r\n\r\n  var MozBoxShadowReducerLogin = \" \";\r\n  var WebkitBoxShadowReducerLogin = \" \";\r\n  var boxShadowReducerLogin = \" \";\r\n\r\n  var MozBoxShadowReducerSign = \" \";\r\n  var WebkitBoxShadowReducerSign = \" \";\r\n  var boxShadowReducerSign = \" \";\r\n\r\n  if (darkmodeReducer) {\r\n    MozBoxShadowReducerLogin = MozBoxShadowLD;\r\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLD;\r\n    boxShadowReducerLogin = boxShadowLD;\r\n\r\n    MozBoxShadowReducerSign = MozBoxShadowSD;\r\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSD;\r\n    boxShadowReducerSign = boxShadowSD;\r\n  } else {\r\n    MozBoxShadowReducerLogin = MozBoxShadowLL;\r\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLL;\r\n    boxShadowReducerLogin = boxShadowLL;\r\n\r\n    MozBoxShadowReducerSign = MozBoxShadowSL;\r\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSL;\r\n    boxShadowReducerSign = boxShadowSL;\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///HISTORY VARIABLE\r\n  ////const history = useHistory();\r\n  ///\r\n\r\n  ///\r\n  ///\r\n  ///SUPERSTARZ ICON SELECT\r\n  var SuperIcon = \"\";\r\n  darkmodeReducer\r\n    ? (SuperIcon = SuperstarzIconDark)\r\n    : (SuperIcon = SuperstarzIconLight);\r\n\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n\r\n  ///\r\n  ///\r\n  ///LOGGING UPDATE VALUES DETAILS\r\n  const initialLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialCleanLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialErrorLogValue = {\r\n    inputedUsername: 0,\r\n    inputedPassword: 0,\r\n  };\r\n  const [rawLoginValues, setRawLoginValues] = useState(initialLogValue);\r\n  const [cleanLoginValues, setCleanLoginValues] =\r\n    useState(initialCleanLogValue);\r\n  const [errorsLoginValues, setErrorsLoginValues] =\r\n    useState(initialErrorLogValue);\r\n  const [loginShowPassword, setLoginShowPassword] = useState<boolean>(false);\r\n  const loginShowPasswordTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW  LOGIN PASSWORD FOR A WHILE\r\n  const ShowLoginPasswordForaWhile = useCallback(() => {\r\n    if (loginShowPasswordTimer.current) {\r\n      clearTimeout(loginShowPasswordTimer.current);\r\n    }\r\n    setLoginShowPassword(!loginShowPassword);\r\n    loginShowPasswordTimer.current = setTimeout(() => {\r\n      setLoginShowPassword(false);\r\n    }, 2000);\r\n  }, [loginShowPassword]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\r\n  const updateLoginvalues = useCallback(\r\n    (e: any) => {\r\n      const { name, value } = e.target;\r\n      setErrorsLoginValues({ ...errorsLoginValues, [name]: 0 });\r\n      setRawLoginValues({ ...rawLoginValues, [name]: value });\r\n      setCleanLoginValues({ ...cleanLoginValues, [name]: value });\r\n    },\r\n\r\n    [errorsLoginValues, rawLoginValues, cleanLoginValues]\r\n  );\r\n\r\n  const logmein = useCallback(() => {\r\n    if (cleanLoginValues.inputedUsername && cleanLoginValues.inputedPassword) {\r\n      dispatch(ActivateLoaderAction());\r\n\r\n      Axios.post(\r\n        `http://${REACT_APP_SUPERSTARZ_URL}/loging`,\r\n        {\r\n          values: cleanLoginValues,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n        .then((response) => {\r\n          if (response.data.message === \"Wrong Password\") {\r\n            setServerErrorData(\"wrong username and  password combination\");\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(false);\r\n            dispatch(HideLoaderAction());\r\n          } else {\r\n            if (response.data.message === \"Wrong username\") {\r\n              setServerErrorData(\"username does not exist\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(false);\r\n              dispatch(HideLoaderAction());\r\n            } else if (response.data.payload) {\r\n              /*  history.push({\r\n                pathname: \"/supercheck\",\r\n                state: { userdata: response.data.payload },\r\n              });*/\r\n              ///console.log(response.data.payload);\r\n              /// alert(loggedIn);\r\n              dispatch(HideLoaderAction());\r\n              dispatch(UserdataAction(response.data.payload));\r\n              dispatch(IsLoggedAction());\r\n            } else {\r\n              setServerErrorData(\"user info could not be retrieved\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(false);\r\n              dispatch(HideLoaderAction());\r\n            }\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          if (error.response) {\r\n            // Request made and server responded\r\n            //express typo can activate this\r\n            // Request made and server responded\r\n            //express typo can activate this\r\n            //let textFieldParam = error.response.data.error.errors[0].param;\r\n            let affectedTextField = \"wrong password and username combination\";\r\n\r\n            let dynamicError = `${affectedTextField}  `;\r\n            setServerErrorData(dynamicError);\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(false);\r\n            dispatch(HideLoaderAction());\r\n          } else if (error.request) {\r\n            // The request was made but no response was received Or request not made\r\n            // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n            setServerErrorData(\r\n              \"error connecting to server, check your connection\"\r\n            );\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(true);\r\n            dispatch(HideLoaderAction());\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            setServerErrorData(\"request setup failed , pls try again\");\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(true);\r\n            dispatch(HideLoaderAction());\r\n          }\r\n        });\r\n    } else {\r\n      let passwordErrorHolder = errorsLoginValues.inputedPassword;\r\n\r\n      let usernameErrorHolder = errorsLoginValues.inputedUsername;\r\n\r\n      if (!cleanLoginValues.inputedPassword) {\r\n        passwordErrorHolder = 1;\r\n      }\r\n\r\n      if (!cleanLoginValues.inputedUsername) {\r\n        usernameErrorHolder = 1;\r\n      }\r\n\r\n      setErrorsLoginValues({\r\n        ...errorsLoginValues,\r\n        inputedPassword: passwordErrorHolder,\r\n        inputedUsername: usernameErrorHolder,\r\n      });\r\n    }\r\n  }, [\r\n    REACT_APP_SUPERSTARZ_URL,\r\n    cleanLoginValues,\r\n    dispatch,\r\n    errorsLoginValues,\r\n    setServerErrorData,\r\n    setServerErrorDisplay,\r\n    setserverEmojiplain,\r\n  ]);\r\n\r\n  ///\r\n  ///\r\n  ///UPDATE SIGN UP DETAILS\r\n  ///\r\n  ///\r\n  ///\r\n  /// SANITISE SIGN UP FORM INPUT CLIENT\r\n  const initialRawSignValue = {\r\n    inputedEmail: \"\",\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialCleanSignValue = {\r\n    inputedEmail: \"\",\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n\r\n  const initialErrorSignValue = {\r\n    inputedEmail: 0,\r\n    inputedUsername: 0,\r\n    inputedPassword: 0,\r\n  };\r\n\r\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\r\n  const [cleanSignupValues, setCleanSignupValues] = useState(\r\n    initialCleanSignValue\r\n  );\r\n  const [errorsSignupValues, setErrorsSignupValues] = useState(\r\n    initialErrorSignValue\r\n  );\r\n\r\n  const EmailCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const UsernameCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const initialspinner: Ispinnerinterface = {\r\n    inputedUsername: false,\r\n    inputedPassword: false,\r\n    inputedEmail: false,\r\n  };\r\n\r\n  const [errorFormChecking, setErrorFormChecking] = useState(initialspinner);\r\n  const PasswordCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const [signupShowPassword, setSignupShowPassword] = useState<boolean>(false);\r\n  const signupShowPasswordTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///SIGN UP ERROR VARIABLES\r\n  let usernameErrorData = null;\r\n  let usernameErrorDisplay = 0;\r\n\r\n  let emailErrorData = null;\r\n  let emailErrorDisplay = 0;\r\n\r\n  let passwordErrorData = null;\r\n  let passwordErrorDisplay = 0;\r\n\r\n  switch (errorsSignupValues.inputedUsername) {\r\n    case 1:\r\n      usernameErrorData =\r\n        \"usernames can only use letters, numbers, underscores and periods \";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 2:\r\n      usernameErrorData = \"username is taken\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 3:\r\n      usernameErrorData = \"username is available\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 4:\r\n      usernameErrorData = \"username  required\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      usernameErrorData = null;\r\n      usernameErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  switch (errorsSignupValues.inputedPassword) {\r\n    case 1:\r\n      passwordErrorData = \"password must be at Least 8 characters\";\r\n      passwordErrorDisplay = 1;\r\n      break;\r\n\r\n    case 2:\r\n      passwordErrorData = \"checking\";\r\n      passwordErrorDisplay = 1;\r\n\r\n      break;\r\n    case 4:\r\n      passwordErrorData = \" password  required \";\r\n      passwordErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      passwordErrorData = null;\r\n      passwordErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  switch (errorsSignupValues.inputedEmail) {\r\n    case 1:\r\n      emailErrorData = \"checking\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 2:\r\n      emailErrorData = \"email address is not valid\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 3:\r\n      emailErrorData = \"email is restricted to certain characters\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 4:\r\n      emailErrorData = \"email required\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      emailErrorData = null;\r\n      emailErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///SIGN UP ERROR VARIABLES\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW  SIGNUP PASSWORD FOR A WHILE\r\n  const ShowSignupPasswordForaWhile = useCallback(() => {\r\n    if (signupShowPasswordTimer.current) {\r\n      clearTimeout(signupShowPasswordTimer.current);\r\n    }\r\n    setSignupShowPassword(!signupShowPassword);\r\n    signupShowPasswordTimer.current = setTimeout(() => {\r\n      setSignupShowPassword(false);\r\n    }, 2000);\r\n  }, [signupShowPassword]);\r\n\r\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\r\n  const updateSignvalues = useCallback(\r\n    (e: any) => {\r\n      const { name, value } = e.target;\r\n\r\n      if (name === \"inputedUsername\") {\r\n        let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\r\n        let cleanValue = value.replace(usernameCleaner, \"\");\r\n\r\n        let usernameLimiter = /^.{26}$/;\r\n        let finalUsername = cleanValue.replace(usernameLimiter, \"\");\r\n\r\n        let checkUsernameClean = usernameCleaner.test(value);\r\n        let checkUsernameLimited = usernameLimiter.test(cleanValue);\r\n\r\n        if (checkUsernameClean) {\r\n          if (UsernameCheckingTimer.current) {\r\n            clearTimeout(UsernameCheckingTimer.current);\r\n          }\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n        } else {\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n        }\r\n\r\n        let userNameLength = finalUsername.length;\r\n\r\n        if (checkUsernameClean) {\r\n        } else {\r\n          if (checkUsernameLimited || userNameLength > 26) {\r\n          } else {\r\n            setRawSignupValues({\r\n              ...rawSignupValues,\r\n              [name]: finalUsername,\r\n            });\r\n            setCleanSignupValues({\r\n              ...cleanSignupValues,\r\n              [name]: finalUsername,\r\n            });\r\n            /// AXIOS REQUEST FOR CHECK USERNAME\r\n            if (UsernameCheckingTimer.current) {\r\n              clearTimeout(UsernameCheckingTimer.current);\r\n\r\n              setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n            }\r\n\r\n            if (errorFormChecking.inputedUsername) {\r\n            } else {\r\n              setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n            }\r\n\r\n            setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n            UsernameCheckingTimer.current = setTimeout(() => {\r\n              if (value.length === 0) {\r\n                setErrorsSignupValues({\r\n                  ...errorsSignupValues,\r\n                  [name]: 0,\r\n                });\r\n                setErrorFormChecking({\r\n                  ...errorFormChecking,\r\n                  [name]: false,\r\n                });\r\n              } else {\r\n                Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/usernamecheck`, {\r\n                  value: finalUsername,\r\n                })\r\n                  .then((response) => {\r\n                    if (response.data.message === \"username is not unique\") {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 2,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    } else if (\r\n                      response.data.message === \"username is available\"\r\n                    ) {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 3,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    } else {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 0,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    }\r\n                  })\r\n                  .catch(function (error) {\r\n                    if (error.response) {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 0,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    } else if (error.request) {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 0,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    } else {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 0,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    }\r\n                  });\r\n              }\r\n            }, 3000);\r\n            /// AXIOS REQUEST FOR CHECK USERNAME\r\n          }\r\n        }\r\n        ///\r\n      } else if (name === \"inputedEmail\") {\r\n        const emailValidation =\r\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        const emailCleaner = /[^*$%#+@a-z0-9áéíóúñü \\.'_]/gim;\r\n        let finalEmail = value.replace(emailCleaner, \"\");\r\n\r\n        let checkEmailClean = emailCleaner.test(value);\r\n        let checkEmailValidated = emailValidation.test(\r\n          String(value).toLowerCase()\r\n        );\r\n        if (EmailCheckingTimer.current) {\r\n          clearTimeout(EmailCheckingTimer.current);\r\n        }\r\n        if (!checkEmailValidated) {\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n\r\n          if (errorFormChecking.inputedEmail) {\r\n          } else {\r\n            setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n          }\r\n\r\n          EmailCheckingTimer.current = setTimeout(() => {\r\n            setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n            setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n            checkEmailClean &&\r\n              setErrorsSignupValues({ ...errorsSignupValues, [name]: 3 });\r\n          }, 2000);\r\n        } else {\r\n          if (EmailCheckingTimer.current) {\r\n            clearTimeout(EmailCheckingTimer.current);\r\n          }\r\n          checkEmailClean\r\n            ? setErrorsSignupValues({ ...errorsSignupValues, [name]: 3 })\r\n            : setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n        }\r\n\r\n        setRawSignupValues({ ...rawSignupValues, [name]: finalEmail });\r\n        setCleanSignupValues({ ...cleanSignupValues, [name]: finalEmail });\r\n        ////////\r\n      } else {\r\n        if (PasswordCheckingTimer.current) {\r\n          clearTimeout(PasswordCheckingTimer.current);\r\n        }\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n\r\n        if (errorFormChecking.inputedPassword) {\r\n        } else {\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n        }\r\n\r\n        PasswordCheckingTimer.current = setTimeout(() => {\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n        }, 2000);\r\n\r\n        var passwordLength = value.length;\r\n\r\n        if (passwordLength >= 8 || passwordLength === 0) {\r\n          if (PasswordCheckingTimer.current) {\r\n            clearTimeout(PasswordCheckingTimer.current);\r\n            setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n          }\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n        }\r\n        setRawSignupValues({ ...rawSignupValues, [name]: value });\r\n        setCleanSignupValues({ ...cleanSignupValues, [name]: value });\r\n      }\r\n    },\r\n    [\r\n      cleanSignupValues,\r\n      rawSignupValues,\r\n      errorsSignupValues,\r\n      errorFormChecking,\r\n      REACT_APP_SUPERSTARZ_URL,\r\n    ]\r\n  );\r\n  ///\r\n  ///\r\n  ///\r\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\r\n\r\n  const signmeup = useCallback(\r\n    (checkSignupPasswordinputed: any = \" \") => {\r\n      if (\r\n        cleanSignupValues.inputedEmail &&\r\n        cleanSignupValues.inputedUsername &&\r\n        cleanSignupValues.inputedPassword\r\n      ) {\r\n        if (errorsSignupValues.inputedPassword === 0) {\r\n          if (errorsSignupValues.inputedEmail === 0) {\r\n            if (errorsSignupValues.inputedUsername === 3) {\r\n              if (checkSignupPasswordACTIVATE) {\r\n                if (\r\n                  checkSignupPasswordinputed ===\r\n                  cleanSignupValues.inputedPassword\r\n                ) {\r\n                  dispatch(ActivateLoaderAction());\r\n\r\n                  Axios.post(\r\n                    `http://${REACT_APP_SUPERSTARZ_URL}/registration`,\r\n                    {\r\n                      values: cleanSignupValues,\r\n                    }\r\n                  )\r\n                    .then((response) => {\r\n                      if (response.data.message === \"username not unique\") {\r\n                        setServerErrorData(\"username is taken\");\r\n                        setServerErrorDisplay(1);\r\n                        setserverEmojiplain(true);\r\n                        dispatch(HideLoaderAction());\r\n                      } else if (response.data.payload) {\r\n                        /*  history.push({\r\n                pathname: \"/supercheck\",\r\n                state: { userdata: response.data.payload },\r\n              });*/\r\n                        ///console.log(response.data.payload);\r\n                        /// alert(loggedIn);\r\n                        dispatch(HideLoaderAction());\r\n                        dispatch(UserdataAction(response.data.payload));\r\n                        dispatch(IsLoggedAction());\r\n                      } else {\r\n                        setServerErrorData(\"something went wrong\");\r\n                        setServerErrorDisplay(1);\r\n                        setserverEmojiplain(true);\r\n                        dispatch(HideLoaderAction());\r\n                      }\r\n                    })\r\n                    .catch(function (error) {\r\n                      if (error.response) {\r\n                        // Request made and server responded\r\n                        //express typo can activate this\r\n                        let textFieldParam =\r\n                          error.response.data.error.errors[0].param;\r\n                        let affectedTextField = \" \";\r\n\r\n                        if (textFieldParam === \"values.inputedPassword\") {\r\n                          affectedTextField =\r\n                            \"password must be at least 8 characters\";\r\n                        } else if (textFieldParam === \"values.inputedEmail\") {\r\n                          affectedTextField = \"email address is not valid\";\r\n                        } else {\r\n                          affectedTextField =\r\n                            \"usernames use letters, numbers, underscores and periods\";\r\n                        }\r\n                        let dynamicError = `${affectedTextField}.  ${error.response.data.error.errors[0].msg} `;\r\n                        setServerErrorData(dynamicError);\r\n                        setServerErrorDisplay(1);\r\n                        setserverEmojiplain(true);\r\n                        dispatch(HideLoaderAction());\r\n                      } else if (error.request) {\r\n                        // The request was made but no response was received Or request not made\r\n                        // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n                        setServerErrorData(\r\n                          \"error connecting to server, check your connection\"\r\n                        );\r\n                        setServerErrorDisplay(1);\r\n                        setserverEmojiplain(true);\r\n                        dispatch(HideLoaderAction());\r\n                      } else {\r\n                        // Something happened in setting up the request that triggered an Error\r\n                        setServerErrorData(\r\n                          \"request setup failed , pls try again\"\r\n                        );\r\n                        setServerErrorDisplay(1);\r\n                        setserverEmojiplain(true);\r\n                        dispatch(HideLoaderAction());\r\n                      }\r\n                    });\r\n                } else {\r\n                  setresponseErrorConfirmPassword(true);\r\n                  setTimeout(function () {\r\n                    setresponseErrorConfirmPassword(false);\r\n                  }, 2500);\r\n                  ////////////////RESPONSE ERROR CONFIRM PASSWORD\r\n                }\r\n              } else {\r\n                setcheckSignupPasswordACTIVATE(true);\r\n              }\r\n            } else {\r\n              setbopUsername(true);\r\n              setTimeout(() => {\r\n                setbopUsername(false);\r\n              }, 2500);\r\n            }\r\n          } else {\r\n            setbopEmail(true);\r\n            setTimeout(() => {\r\n              setbopEmail(false);\r\n            }, 2500);\r\n          }\r\n        } else {\r\n          setbopPassword(true);\r\n          setTimeout(() => {\r\n            setbopPassword(false);\r\n          }, 2500);\r\n        }\r\n      } else {\r\n        if (checkSignupPasswordACTIVATE) {\r\n          setcheckSignupPasswordACTIVATE(false);\r\n        }\r\n\r\n        let passwordErrorHolder = errorsSignupValues.inputedPassword;\r\n        let emailErrorHolder = errorsSignupValues.inputedEmail;\r\n        let usernameErrorHolder = errorsSignupValues.inputedUsername;\r\n\r\n        if (!cleanSignupValues.inputedPassword) {\r\n          passwordErrorHolder = 4;\r\n        }\r\n        if (!cleanSignupValues.inputedEmail) {\r\n          emailErrorHolder = 4;\r\n        }\r\n        if (!cleanSignupValues.inputedUsername) {\r\n          usernameErrorHolder = 4;\r\n        }\r\n\r\n        setErrorsSignupValues({\r\n          ...errorsSignupValues,\r\n          inputedPassword: passwordErrorHolder,\r\n          inputedEmail: emailErrorHolder,\r\n          inputedUsername: usernameErrorHolder,\r\n        });\r\n      }\r\n    },\r\n    [\r\n      REACT_APP_SUPERSTARZ_URL,\r\n      cleanSignupValues,\r\n\r\n      errorsSignupValues,\r\n\r\n      checkSignupPasswordACTIVATE,\r\n      dispatch,\r\n      setServerErrorData,\r\n      setServerErrorDisplay,\r\n      setcheckSignupPasswordACTIVATE,\r\n      setserverEmojiplain,\r\n    ]\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///ENTER KEY EMULATE FORM ACTION\r\n  const enterPress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n        if (loginForm) {\r\n          logmein();\r\n        } else {\r\n          signmeup();\r\n        }\r\n      }\r\n    },\r\n    [signmeup, loginForm, logmein]\r\n  );\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", enterPress);\r\n    return () => document.removeEventListener(\"keydown\", enterPress);\r\n  }, [enterPress]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n  /// UPDATE SIGN UP DETAILS\r\n\r\n  ///\r\n  ///\r\n  ///\r\n\r\n  return (\r\n    <>\r\n      {loginForm ? (\r\n        matchPc /*PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */ ? (\r\n          <>\r\n            <img\r\n              className={\r\n                zoomedModal\r\n                  ? \"zoom-login-logo  make-small-icons-clickable-neutral\"\r\n                  : \"hide-logo \"\r\n              }\r\n              src={SuperIcon}\r\n              alt=\"SuperstarZ logo\"\r\n            />\r\n\r\n            <ModalFormLoginError\r\n              focus={focusUsername}\r\n              device=\"pc\"\r\n              type={true}\r\n              ErrorDisplay={errorsLoginValues.inputedUsername}\r\n              WidthHolder={WidthHolder}\r\n            />\r\n            <TextFieldLogin\r\n              focus={focusUsername}\r\n              setFocus={setFocusUsername}\r\n              updateLoginvalues={updateLoginvalues}\r\n              rawLoginValues={rawLoginValues}\r\n              ShowLoginPasswordForaWhile={ShowLoginPasswordForaWhile}\r\n              loginShowPassword={loginShowPassword}\r\n              size=\"medium\"\r\n              passwordType={false}\r\n              withHolder={WidthHolder}\r\n            />\r\n            <TextFieldLogin\r\n              focus={focusPassword}\r\n              setFocus={setFocusPassword}\r\n              updateLoginvalues={updateLoginvalues}\r\n              rawLoginValues={rawLoginValues}\r\n              ShowLoginPasswordForaWhile={ShowLoginPasswordForaWhile}\r\n              loginShowPassword={loginShowPassword}\r\n              size=\"medium\"\r\n              passwordType={true}\r\n              withHolder={WidthHolder}\r\n            />\r\n            <ModalFormLoginError\r\n              focus={focusPassword}\r\n              device=\"pc\"\r\n              type={false}\r\n              ErrorDisplay={errorsLoginValues.inputedPassword}\r\n              WidthHolder={WidthHolder}\r\n            />\r\n            <Grid container style={{ marginTop: \"70px\", zIndex: 300 }}>\r\n              <Grid item xs={4}></Grid>\r\n              <Grid item className=\"buttonpad buttonshake\" xs={4}>\r\n                <Button\r\n                  onClick={logmein}\r\n                  style={{\r\n                    fontSize: buttonFont,\r\n                    transform: buttonTransform,\r\n                    padding: \"11.5px\",\r\n                    borderRadius: \"52px\",\r\n                    MozBoxShadow: MozBoxShadowReducerLogin,\r\n                    WebkitBoxShadow: WebkitBoxShadowReducerLogin,\r\n                    boxShadow: boxShadowReducerLogin,\r\n                  }}\r\n                  fullWidth={true}\r\n                  variant=\"outlined\"\r\n                  size=\"large\"\r\n                  color=\"primary\"\r\n                >\r\n                  Log In\r\n                </Button>\r\n              </Grid>{\" \"}\r\n            </Grid>\r\n          </> /*PC PC PC PC PC PC PC PC PC LOGIN  PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\r\n        ) : (\r\n          /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\r\n          <>\r\n            <ModalFormLoginError\r\n              focus={focusUsername}\r\n              type={true}\r\n              device={tabletMobile}\r\n              ErrorDisplay={errorsLoginValues.inputedUsername}\r\n              WidthHolder={WidthHolder}\r\n            />\r\n            <TextFieldLogin\r\n              focus={focusUsername}\r\n              setFocus={setFocusUsername}\r\n              updateLoginvalues={updateLoginvalues}\r\n              rawLoginValues={rawLoginValues}\r\n              ShowLoginPasswordForaWhile={ShowLoginPasswordForaWhile}\r\n              loginShowPassword={loginShowPassword}\r\n              size={fieldSize}\r\n              passwordType={false}\r\n              withHolder={WidthHolder}\r\n            />\r\n            <TextFieldLogin\r\n              focus={focusPassword}\r\n              setFocus={setFocusPassword}\r\n              updateLoginvalues={updateLoginvalues}\r\n              rawLoginValues={rawLoginValues}\r\n              ShowLoginPasswordForaWhile={ShowLoginPasswordForaWhile}\r\n              loginShowPassword={loginShowPassword}\r\n              size={fieldSize}\r\n              passwordType={true}\r\n              withHolder={WidthHolder}\r\n            />\r\n            <ModalFormLoginError\r\n              focus={focusPassword}\r\n              type={false}\r\n              ErrorDisplay={errorsLoginValues.inputedPassword}\r\n              device={tabletMobile}\r\n              WidthHolder={WidthHolder}\r\n            />\r\n            <Grid container className=\"modal-hold-login\">\r\n              <Grid item xs={4} sm={5}></Grid>\r\n              <Grid item className=\"buttonpad buttonshake\" xs={4} sm={2}>\r\n                <Button\r\n                  onClick={logmein}\r\n                  style={{\r\n                    fontSize: buttonFont,\r\n                    transform: buttonTransform,\r\n                    padding: \"11.5px\",\r\n                    borderRadius: \"52px\",\r\n                    MozBoxShadow: MozBoxShadowReducerLogin,\r\n                    WebkitBoxShadow: WebkitBoxShadowReducerLogin,\r\n                    boxShadow: boxShadowReducerLogin,\r\n                  }}\r\n                  fullWidth={true}\r\n                  variant=\"outlined\"\r\n                  size=\"large\"\r\n                  color=\"primary\"\r\n                >\r\n                  Log In\r\n                </Button>\r\n              </Grid>{\" \"}\r\n            </Grid>\r\n          </> /*MOBILE  MOBILE  MOBILE  MOBILE  LOGIN   MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\r\n        )\r\n      ) : matchPc /*PC PC PC PC PC PC PC PC  SIGNUP  PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */ ? (\r\n        <>\r\n          {\" \"}\r\n          <img\r\n            className={\r\n              zoomedModal\r\n                ? \"zoom-signup-logo make-small-icons-clickable-neutral\"\r\n                : \"hide-logo make-small-icons-clickable-neutral \"\r\n            }\r\n            src={SuperIcon}\r\n            alt=\"SuperstarZ logo\"\r\n          />{\" \"}\r\n          <ModalFormSignupError\r\n            focus={focusEmailSign}\r\n            device=\"pc\"\r\n            ErrorType={0}\r\n            textField=\"email\"\r\n            errorFormChecking={errorFormChecking.inputedEmail}\r\n            WidthHolder={WidthHolder}\r\n            type={true}\r\n            ErrorDisplay={emailErrorDisplay}\r\n            ErrorData={emailErrorData}\r\n            bop={bopEmail}\r\n            checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n          />\r\n          <TextFieldSignup\r\n            showFocusTextFieldByHidePadding={showFocusTextFieldByHidePadding}\r\n            setShowFocusTextFieldByHidePadding={\r\n              setShowFocusTextFieldByHidePadding\r\n            }\r\n            focus={focusEmailSign}\r\n            setFocus={setFocusEmailSign}\r\n            updateSignvalues={updateSignvalues}\r\n            rawSignupValues={rawSignupValues}\r\n            ShowSignupPasswordForaWhile={ShowSignupPasswordForaWhile}\r\n            signupShowPassword={signupShowPassword}\r\n            size=\"medium\"\r\n            emailType={true}\r\n            passwordType={false}\r\n            withHolder={WidthHolder}\r\n            checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n          />\r\n          <ModalFormSignupError\r\n            focus={focusUsernameSign}\r\n            device=\"pc\"\r\n            ErrorType={errorsSignupValues.inputedUsername}\r\n            textField=\"username\"\r\n            errorFormChecking={errorFormChecking.inputedUsername}\r\n            WidthHolder={WidthHolder}\r\n            type={true}\r\n            ErrorDisplay={usernameErrorDisplay}\r\n            ErrorData={usernameErrorData}\r\n            bop={bopUsername}\r\n            checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n          />\r\n          <TextFieldSignup\r\n            showFocusTextFieldByHidePadding={showFocusTextFieldByHidePadding}\r\n            setShowFocusTextFieldByHidePadding={\r\n              setShowFocusTextFieldByHidePadding\r\n            }\r\n            focus={focusUsernameSign}\r\n            setFocus={setFocusUsernameSign}\r\n            updateSignvalues={updateSignvalues}\r\n            rawSignupValues={rawSignupValues}\r\n            ShowSignupPasswordForaWhile={ShowSignupPasswordForaWhile}\r\n            signupShowPassword={signupShowPassword}\r\n            size=\"medium\"\r\n            emailType={false}\r\n            passwordType={false}\r\n            withHolder={WidthHolder}\r\n            checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n          />\r\n          <TextFieldSignup\r\n            showFocusTextFieldByHidePadding={showFocusTextFieldByHidePadding}\r\n            setShowFocusTextFieldByHidePadding={\r\n              setShowFocusTextFieldByHidePadding\r\n            }\r\n            focus={focusPasswordSign}\r\n            setFocus={setFocusPasswordSign}\r\n            updateSignvalues={updateSignvalues}\r\n            rawSignupValues={rawSignupValues}\r\n            ShowSignupPasswordForaWhile={ShowSignupPasswordForaWhile}\r\n            signupShowPassword={signupShowPassword}\r\n            size=\"medium\"\r\n            emailType={false}\r\n            passwordType={true}\r\n            withHolder={WidthHolder}\r\n            checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n          />\r\n          <ModalFormSignupError\r\n            focus={focusPasswordSign}\r\n            device=\"pc\"\r\n            ErrorType={0}\r\n            textField=\"password\"\r\n            errorFormChecking={errorFormChecking.inputedPassword}\r\n            WidthHolder={WidthHolder}\r\n            type={false}\r\n            ErrorDisplay={passwordErrorDisplay}\r\n            ErrorData={passwordErrorData}\r\n            bop={bopPassword}\r\n            checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n          />\r\n          <PasswordCheck\r\n            signmeup={signmeup}\r\n            widthHolder={WidthHolder}\r\n            checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n            responseErrorConfirmPassword={responseErrorConfirmPassword}\r\n          />\r\n          <Grid\r\n            container\r\n            style={{ opacity: checkSignupPasswordACTIVATE ? 0 : 1 }}\r\n            className=\"modal-hold-signup\"\r\n          >\r\n            <Grid item xs={4}></Grid>\r\n            <Grid item className=\"buttonpad buttonshake\" xs={4}>\r\n              <Button\r\n                style={{\r\n                  fontSize: buttonFont,\r\n                  transform: buttonTransform,\r\n                  padding: pad,\r\n                  borderRadius: \"50px\",\r\n                  MozBoxShadow: MozBoxShadowReducerSign,\r\n                  WebkitBoxShadow: WebkitBoxShadowReducerSign,\r\n                  boxShadow: boxShadowReducerSign,\r\n                }}\r\n                onClick={signmeup}\r\n                fullWidth={true}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"secondary\"\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Grid>{\" \"}\r\n          </Grid>{\" \"}\r\n        </> /*PC PC PC PC   SIGN UP PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC PC */\r\n      ) : (\r\n        /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\r\n        <>\r\n          {\" \"}\r\n          <ModalFormSignupError\r\n            focus={focusEmailSign}\r\n            device={tabletMobile}\r\n            ErrorType={0}\r\n            textField=\"email\"\r\n            errorFormChecking={errorFormChecking.inputedEmail}\r\n            WidthHolder={WidthHolder}\r\n            type={true}\r\n            ErrorDisplay={emailErrorDisplay}\r\n            ErrorData={emailErrorData}\r\n            bop={bopEmail}\r\n            checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n          />\r\n          <TextFieldSignup\r\n            showFocusTextFieldByHidePadding={showFocusTextFieldByHidePadding}\r\n            setShowFocusTextFieldByHidePadding={\r\n              setShowFocusTextFieldByHidePadding\r\n            }\r\n            focus={focusEmailSign}\r\n            setFocus={setFocusEmailSign}\r\n            updateSignvalues={updateSignvalues}\r\n            rawSignupValues={rawSignupValues}\r\n            ShowSignupPasswordForaWhile={ShowSignupPasswordForaWhile}\r\n            signupShowPassword={signupShowPassword}\r\n            size={fieldSize}\r\n            emailType={true}\r\n            passwordType={false}\r\n            withHolder={WidthHolder}\r\n            checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n          />\r\n          <ModalFormSignupError\r\n            focus={focusUsernameSign}\r\n            device={tabletMobile}\r\n            ErrorType={errorsSignupValues.inputedUsername}\r\n            textField=\"username\"\r\n            errorFormChecking={errorFormChecking.inputedUsername}\r\n            WidthHolder={WidthHolder}\r\n            type={true}\r\n            ErrorDisplay={usernameErrorDisplay}\r\n            ErrorData={usernameErrorData}\r\n            bop={bopUsername}\r\n            checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n          />\r\n          <TextFieldSignup\r\n            showFocusTextFieldByHidePadding={showFocusTextFieldByHidePadding}\r\n            setShowFocusTextFieldByHidePadding={\r\n              setShowFocusTextFieldByHidePadding\r\n            }\r\n            focus={focusUsernameSign}\r\n            setFocus={setFocusUsernameSign}\r\n            updateSignvalues={updateSignvalues}\r\n            rawSignupValues={rawSignupValues}\r\n            ShowSignupPasswordForaWhile={ShowSignupPasswordForaWhile}\r\n            signupShowPassword={signupShowPassword}\r\n            size={fieldSize}\r\n            emailType={false}\r\n            passwordType={false}\r\n            withHolder={WidthHolder}\r\n            checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n          />\r\n          <TextFieldSignup\r\n            showFocusTextFieldByHidePadding={showFocusTextFieldByHidePadding}\r\n            setShowFocusTextFieldByHidePadding={\r\n              setShowFocusTextFieldByHidePadding\r\n            }\r\n            focus={focusPasswordSign}\r\n            setFocus={setFocusPasswordSign}\r\n            updateSignvalues={updateSignvalues}\r\n            rawSignupValues={rawSignupValues}\r\n            ShowSignupPasswordForaWhile={ShowSignupPasswordForaWhile}\r\n            signupShowPassword={signupShowPassword}\r\n            size={fieldSize}\r\n            emailType={false}\r\n            passwordType={true}\r\n            withHolder={WidthHolder}\r\n            checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n          />\r\n          <ModalFormSignupError\r\n            focus={focusPasswordSign}\r\n            device={tabletMobile}\r\n            ErrorType={0}\r\n            textField=\"password\"\r\n            errorFormChecking={errorFormChecking.inputedPassword}\r\n            WidthHolder={WidthHolder}\r\n            type={false}\r\n            ErrorDisplay={passwordErrorDisplay}\r\n            ErrorData={passwordErrorData}\r\n            bop={bopPassword}\r\n            checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n          />\r\n          <PasswordCheck\r\n            signmeup={signmeup}\r\n            widthHolder={WidthHolder}\r\n            checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n            responseErrorConfirmPassword={responseErrorConfirmPassword}\r\n          />\r\n          <Grid\r\n            container\r\n            style={{ opacity: checkSignupPasswordACTIVATE ? 0 : 1 }}\r\n            className=\"modal-hold-signup\"\r\n          >\r\n            <Grid item xs={4} sm={5}></Grid>\r\n            <Grid item className=\"buttonpad buttonshake\" xs={4} sm={2}>\r\n              <Button\r\n                style={{\r\n                  fontSize: buttonFont,\r\n                  transform: buttonTransform,\r\n                  padding: pad,\r\n                  borderRadius: \"50px\",\r\n                  MozBoxShadow: MozBoxShadowReducerSign,\r\n                  WebkitBoxShadow: WebkitBoxShadowReducerSign,\r\n                  boxShadow: boxShadowReducerSign,\r\n                }}\r\n                onClick={signmeup}\r\n                fullWidth={true}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"secondary\"\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Grid>{\" \"}\r\n          </Grid>{\" \"}\r\n        </>\r\n      )}\r\n    </>\r\n    /*MOBILE  MOBILE  MOBILE  MOBILE  SIGNUP MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\r\n  );\r\n}\r\n\r\nexport const FormHolder = React.memo(FormHolderx);\r\n"]},"metadata":{},"sourceType":"module"}