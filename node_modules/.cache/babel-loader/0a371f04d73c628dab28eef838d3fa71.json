{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\upload\\\\InteractivePost.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid } from \"@material-ui/core\";\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction InteractivePostx({\n  setopeninteraction,\n  selectedImagexx\n}) {\n  _s();\n\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    var ctx = canvasRef.current.getContext(\"2d\");\n    const previewFileReadimage = new Image();\n    previewFileReadimage.src = selectedImagexx[0];\n\n    previewFileReadimage.onload = function () {\n      ///\n      ///\n      var scalex = window.innerWidth / previewFileReadimage.naturalWidth;\n      var height = window.innerHeight * scalex;\n      var scale = window.innerHeight / previewFileReadimage.naturalHeight;\n      var ratio = previewFileReadimage.naturalWidth / previewFileReadimage.naturalHeight;\n      var height = window.innerHeight * ratio;\n      canvasRef.current.height = height;\n      canvasRef.current.width = width;\n      ctx.drawImage(previewFileReadimage, 0, 0, width, height);\n    };\n  }, [selectedImagexx]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        width: \"100%\",\n        margin: \"auto\",\n        backgroundColor: \"#cccccc\",\n        height: \"100%\",\n        position: \"fixed\",\n        zIndex: \"2\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            padding: \"0px\",\n            zIndex: 0,\n            backgroundColor: \"#00ccff\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(InteractivePostx, \"1fh5FDK8ZFLS3ZVcL1MimT5TBkw=\");\n\n_c = InteractivePostx;\nexport const InteractivePost = /*#__PURE__*/React.memo(InteractivePostx);\n_c2 = InteractivePost;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InteractivePostx\");\n$RefreshReg$(_c2, \"InteractivePost\");","map":{"version":3,"sources":["C:/Users/oghen/Documents/ClikBate/super/src/upload/InteractivePost.tsx"],"names":["Grid","React","useEffect","useRef","InteractivePostx","setopeninteraction","selectedImagexx","canvasRef","ctx","current","getContext","previewFileReadimage","Image","src","onload","scalex","window","innerWidth","naturalWidth","height","innerHeight","scale","naturalHeight","ratio","width","drawImage","margin","backgroundColor","position","zIndex","padding","InteractivePost","memo"],"mappings":";;;AACA,SAASA,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,IAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;;AAEA,SAASC,gBAAT,CAA0B;AACxBC,EAAAA,kBADwB;AAExBC,EAAAA;AAFwB,CAA1B,EAGqB;AAAA;;AACnB,QAAMC,SAAc,GAAGJ,MAAM,CAAC,IAAD,CAA7B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,GAAG,GAAGD,SAAS,CAACE,OAAV,CAAkBC,UAAlB,CAA6B,IAA7B,CAAV;AAEA,UAAMC,oBAAoB,GAAG,IAAIC,KAAJ,EAA7B;AACAD,IAAAA,oBAAoB,CAACE,GAArB,GAA2BP,eAAe,CAAC,CAAD,CAA1C;;AAEAK,IAAAA,oBAAoB,CAACG,MAArB,GAA8B,YAAY;AACxC;AACA;AACA,UAAIC,MAAM,GAAGC,MAAM,CAACC,UAAP,GAAoBN,oBAAoB,CAACO,YAAtD;AACA,UAAIC,MAAM,GAAGH,MAAM,CAACI,WAAP,GAAqBL,MAAlC;AACA,UAAIM,KAAK,GAAGL,MAAM,CAACI,WAAP,GAAqBT,oBAAoB,CAACW,aAAtD;AAGA,UAAIC,KAAK,GACPZ,oBAAoB,CAACO,YAArB,GAAoCP,oBAAoB,CAACW,aAD3D;AAIE,UAAKH,MAAM,GAAKH,MAAM,CAACI,WAAP,GAAqBG,KAArC;AAEFhB,MAAAA,SAAS,CAACE,OAAV,CAAkBU,MAAlB,GAA2BA,MAA3B;AACAZ,MAAAA,SAAS,CAACE,OAAV,CAAkBe,KAAlB,GAA0BA,KAA1B;AAEAhB,MAAAA,GAAG,CAACiB,SAAJ,CAAcd,oBAAd,EAAoC,CAApC,EAAuC,CAAvC,EAA0Ca,KAA1C,EAAiDL,MAAjD;AACD,KAlBD;AAmBD,GAzBQ,EAyBN,CAACb,eAAD,CAzBM,CAAT;AA2BA,sBACE;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,KAAK,EAAE;AACLkB,QAAAA,KAAK,EAAE,MADF;AAELE,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,eAAe,EAAE,SAHZ;AAILR,QAAAA,MAAM,EAAE,MAJH;AAKLS,QAAAA,QAAQ,EAAE,OALL;AAMLC,QAAAA,MAAM,EAAE;AANH,OAFT;AAAA,6BAWE,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,EAAE,EAAE,EAFN;AAGE,QAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE;AADJ,SAHT;AAAA,+BAOE;AACE,UAAA,GAAG,EAAEvB,SADP;AAEE,UAAA,KAAK,EAAE;AACLuB,YAAAA,OAAO,EAAE,KADJ;AAELD,YAAAA,MAAM,EAAE,CAFH;AAGLF,YAAAA,eAAe,EAAE;AAHZ;AAFT;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgCD;;GAjEQvB,gB;;KAAAA,gB;AAmET,OAAO,MAAM2B,eAAe,gBAAG9B,KAAK,CAAC+B,IAAN,CAAW5B,gBAAX,CAAxB;MAAM2B,e","sourcesContent":["import { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction InteractivePostx({\r\n  setopeninteraction,\r\n  selectedImagexx,\r\n}: any): JSX.Element {\r\n  const canvasRef: any = useRef(null);\r\n\r\n  useEffect(() => {\r\n    var ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n    const previewFileReadimage = new Image();\r\n    previewFileReadimage.src = selectedImagexx[0];\r\n\r\n    previewFileReadimage.onload = function () {\r\n      ///\r\n      ///\r\n      var scalex = window.innerWidth / previewFileReadimage.naturalWidth;\r\n      var height = window.innerHeight * scalex;\r\n      var scale = window.innerHeight / previewFileReadimage.naturalHeight;\r\n     \r\n\r\n      var ratio =\r\n        previewFileReadimage.naturalWidth / previewFileReadimage.naturalHeight;\r\n\r\n\r\n        var  height=    window.innerHeight * ratio;\r\n\r\n      canvasRef.current.height = height;\r\n      canvasRef.current.width = width;\r\n\r\n      ctx.drawImage(previewFileReadimage, 0, 0, width, height);\r\n    };\r\n  }, [selectedImagexx]);\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        style={{\r\n          width: \"100%\",\r\n          margin: \"auto\",\r\n          backgroundColor: \"#cccccc\",\r\n          height: \"100%\",\r\n          position: \"fixed\",\r\n          zIndex: \"2\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            padding: \"0px\",\r\n          }}\r\n        >\r\n          <canvas\r\n            ref={canvasRef}\r\n            style={{\r\n              padding: \"0px\",\r\n              zIndex: 0,\r\n              backgroundColor: \"#00ccff\",\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const InteractivePost = React.memo(InteractivePostx);\r\n"]},"metadata":{},"sourceType":"module"}