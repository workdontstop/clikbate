{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\ModalForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { Grid, DialogContent } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Modalx({\n  CloseModalForm,\n  showModalForm,\n  setShowModalForm\n}) {\n  _s();\n\n  //\n  //\n  //\n  //CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n  const animation = useSpring({\n    config: {\n      duration: 500\n    },\n    opacity: showModalForm ? 1 : 0.9,\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`\n  }); //\n  //\n  //\n  // USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\n\n  const ModalBackgroundRef = useRef(null);\n\n  const onBackgroundFocus = e => {\n    if (ModalBackgroundRef.current === e.target) {\n      CloseModalForm(0);\n    }\n  }; //\n  //\n  //\n  // ESCAPE KEY CLOSE MODAL\n\n\n  const escapePress = useCallback(e => {\n    if (e.key === \"Escape\" && showModalForm) {\n      CloseModalForm(0);\n    }\n  }, [setShowModalForm, showModalForm]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escapePress);\n    return () => document.removeEventListener(\"keydown\", escapePress);\n  }, [escapePress]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModal ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: \"dialog-container dontallowhighlighting \",\n      onClick: onBackgroundFocus,\n      style: {\n        height: \"100%\",\n        width: \"100%\",\n        position: \"fixed\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        top: \"0em\",\n        zIndex: 8\n      },\n      ref: ModalBackgroundRef,\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          xs: 12,\n          className: darkmode ? \"Background-header-dark theme-more-container\" : \"Background-header-light theme-more-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(Modalx, \"xbvjIBJqjd3UWrzv/facxb2/gxk=\", false, function () {\n  return [useSpring];\n});\n\n_c = Modalx;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modalx\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/ModalForm.tsx"],"names":["React","useRef","useEffect","useCallback","useSpring","animated","Grid","DialogContent","Modalx","CloseModalForm","showModalForm","setShowModalForm","animation","config","duration","opacity","transform","ModalBackgroundRef","onBackgroundFocus","e","current","target","escapePress","key","document","addEventListener","removeEventListener","showModal","height","width","position","display","justifyContent","alignItems","top","zIndex","darkmode"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,WAAnC,QAA2D,OAA3D;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,SAASC,IAAT,EAAeC,aAAf,QAAoC,mBAApC;;;AAUA,eAAe,SAASC,MAAT,CAAgB;AAC7BC,EAAAA,cAD6B;AAE7BC,EAAAA,aAF6B;AAG7BC,EAAAA;AAH6B,CAAhB,EAIa;AAAA;;AAC1B;AACA;AACA;AACA;AACA,QAAMC,SAAS,GAAGR,SAAS,CAAC;AAC1BS,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADkB;AAI1BC,IAAAA,OAAO,EAAEL,aAAa,GAAG,CAAH,GAAO,GAJH;AAK1BM,IAAAA,SAAS,EAAEN,aAAa,GAAI,gBAAJ,GAAuB;AALrB,GAAD,CAA3B,CAL0B,CAa1B;AACA;AACA;AACA;;AACA,QAAMO,kBAAkB,GAAGhB,MAAM,CAAmB,IAAnB,CAAjC;;AAEA,QAAMiB,iBAAiB,GAAIC,CAAD,IAAkB;AAC1C,QAAIF,kBAAkB,CAACG,OAAnB,KAA+BD,CAAC,CAACE,MAArC,EAA6C;AAC3CZ,MAAAA,cAAc,CAAC,CAAD,CAAd;AACD;AACF,GAJD,CAnB0B,CAwB1B;AACA;AACA;AACA;;;AACA,QAAMa,WAAW,GAAGnB,WAAW,CAC5BgB,CAAD,IAAO;AACL,QAAIA,CAAC,CAACI,GAAF,KAAU,QAAV,IAAsBb,aAA1B,EAAyC;AACvCD,MAAAA,cAAc,CAAC,CAAD,CAAd;AACD;AACF,GAL4B,EAM7B,CAACE,gBAAD,EAAmBD,aAAnB,CAN6B,CAA/B;AAQAR,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCH,WAArC;AACA,WAAO,MAAME,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCJ,WAAxC,CAAb;AACD,GAHQ,EAGN,CAACA,WAAD,CAHM,CAAT;AAKA,sBACE;AAAA,cACGK,SAAS,gBACR,QAAC,aAAD;AACE,MAAA,SAAS,EAAC,yCADZ;AAEE,MAAA,OAAO,EAAET,iBAFX;AAGE,MAAA,KAAK,EAAE;AACLU,QAAAA,MAAM,EAAE,MADH;AAELC,QAAAA,KAAK,EAAE,MAFF;AAGLC,QAAAA,QAAQ,EAAE,OAHL;AAILC,QAAAA,OAAO,EAAE,MAJJ;AAKLC,QAAAA,cAAc,EAAE,QALX;AAMLC,QAAAA,UAAU,EAAE,QANP;AAOLC,QAAAA,GAAG,EAAE,KAPA;AAQLC,QAAAA,MAAM,EAAE;AARH,OAHT;AAaE,MAAA,GAAG,EAAElB,kBAbP;AAAA,6BAeE,QAAC,QAAD,CAAU,GAAV;AAAc,QAAA,KAAK,EAAEL,SAArB;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,EAAE,EAAE,EAFN;AAGE,UAAA,SAAS,EACPwB,QAAQ,GACJ,6CADI,GAEJ;AANR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAfF;AAAA;AAAA;AAAA;AAAA,YADQ,GA4BN;AA7BN,mBADF;AAiCD;;GA9EuB5B,M;UASJJ,S;;;KATII,M","sourcesContent":["import React, { useRef, useEffect, useCallback, Ref } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { Grid, DialogContent } from \"@material-ui/core\";\r\n\r\nimport im from \"./images/modalpic.jpg\";\r\n\r\ninterface ImodalForm {\r\n  CloseModalForm: (backbutton: number) => void;\r\n  showModalForm: boolean;\r\n  setShowModalForm: (showModal: boolean) => void;\r\n}\r\n\r\nexport default function Modalx({\r\n  CloseModalForm,\r\n  showModalForm,\r\n  setShowModalForm,\r\n}: ImodalForm): JSX.Element {\r\n  //\r\n  //\r\n  //\r\n  //CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 500,\r\n    },\r\n    opacity: showModalForm ? 1 : 0.9,\r\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`,\r\n  });\r\n\r\n  //\r\n  //\r\n  //\r\n  // USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\r\n  const ModalBackgroundRef = useRef<HTMLInputElement>(null);\r\n\r\n  const onBackgroundFocus = (e: any): void => {\r\n    if (ModalBackgroundRef.current === e.target) {\r\n      CloseModalForm(0);\r\n    }\r\n  };\r\n  //\r\n  //\r\n  //\r\n  // ESCAPE KEY CLOSE MODAL\r\n  const escapePress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Escape\" && showModalForm) {\r\n        CloseModalForm(0);\r\n      }\r\n    },\r\n    [setShowModalForm, showModalForm]\r\n  );\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escapePress);\r\n    return () => document.removeEventListener(\"keydown\", escapePress);\r\n  }, [escapePress]);\r\n\r\n  return (\r\n    <>\r\n      {showModal ? (\r\n        <DialogContent\r\n          className=\"dialog-container dontallowhighlighting \"\r\n          onClick={onBackgroundFocus}\r\n          style={{\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            position: \"fixed\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            top: \"0em\",\r\n            zIndex: 8,\r\n          }}\r\n          ref={ModalBackgroundRef}\r\n        >\r\n          <animated.div style={animation}>\r\n            <Grid\r\n              container\r\n              xs={12}\r\n              className={\r\n                darkmode\r\n                  ? \"Background-header-dark theme-more-container\"\r\n                  : \"Background-header-light theme-more-container\"\r\n              }\r\n            ></Grid>\r\n          </animated.div>\r\n        </DialogContent>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}