{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\SupercheckOptions.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport { matchPc, matchTablet } from \"./DetectDevice\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\nimport \"./log/logCss.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SupercheckOptionsx() {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n  var marginData;\n  var fontData;\n  const fontDataPc = {\n    fontSize: \"2.5vw\"\n  };\n  const fontDataTablet = {\n    fontSize: \"3.4vh\"\n  };\n  const fontDataMobile = {\n    fontSize: \"3.8vh\"\n  };\n  const marginDataPc = {\n    marginLeft: \"-35px\"\n  };\n  const marginDataMobile = {\n    marginLeft: \"-15.5px\"\n  }; ///\n  ///\n  ///\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\n\n  if (matchPc) {\n    marginData = marginDataPc;\n    fontData = fontDataPc; ///\n  } else if (matchTablet) {\n    marginData = marginDataPc;\n    fontData = fontDataTablet; ///\n  } else {\n    marginData = marginDataMobile;\n    fontData = fontDataMobile;\n  } ///\n  ///\n  ///\n  /// CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\n\n\n  const closemodal = useCallback(backbutton => {\n    //pop states fires when back and forward buttons used\n    if (backbutton === 1) {\n      window.onpopstate = () => {\n        window.history.pushState(null, \"\", window.location.href);\n        window.onpopstate = null;\n        setShowModal(false);\n      };\n    } else {\n      window.history.pushState(null, \"\", \".\");\n      window.onpopstate = null;\n      setShowModal(false);\n    }\n  }, [showModal]); ///\n  ///\n  ///\n  ///OPEN MODAL THEN CALL CLOSEMODAL FUNCTION WHICH WAITS FOR A POP EVENT(for closing modal)\n\n  const Openmodal = useCallback(() => {\n    setShowModal(!showModal); //pushstate add enteries to your history\n\n    window.history.pushState(null, \"\", \"Options\");\n    closemodal(1);\n  }, [showModal, closemodal]); //\n  //\n  //\n  //USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\n\n  const inputRef = useRef(null);\n\n  const onBackgroundFocus = e => {\n    if (inputRef.current === e.target) {\n      closemodal(0);\n    }\n  }; //\n  //\n  //\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\n\n\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0.0,\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  }); ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    style: {\n      position: \"fixed\"\n    },\n    children: showModal ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: \"dialog-container dontallowhighlighting \",\n      onClick: onBackgroundFocus,\n      style: {\n        padding: \"0px\",\n        height: \"100vh\"\n      },\n      ref: inputRef,\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: darkmodeReducer ? \"Background-header-dark theme-more-container\" : \"Background-header-light theme-more-container\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 8,\n            md: 10,\n            xs: 7\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            sm: 2,\n            md: 1,\n            className: \"zuperking\",\n            style: marginData,\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              size: \"medium\",\n              checked: darkmodeReducer,\n              className: darkmodeReducer ? \"icon-color-dark dontallowhighlighting  \" : \"icon-color-light  dontallowhighlighting  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            className: \"dontallowhighlighting add-rounded-icon-right\",\n            sm: 2,\n            md: 1,\n            children: /*#__PURE__*/_jsxDEV(AddRoundedIcon, {\n              className: darkmodeReducer ? \"make-small-icons-clickable-dark  dontallowhighlighting  \" : \"make-small-icons-clickable-light  dontallowhighlighting  \",\n              fontSize: \"large\",\n              style: fontData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SupercheckOptionsx, \"xnjhBpVUNU5VgTWCnYTRvFXwZ4Q=\", false, function () {\n  return [useSpring, useSelector];\n});\n\n_c = SupercheckOptionsx;\nexport const SupercheckOptions = /*#__PURE__*/React.memo(SupercheckOptionsx);\n_c2 = SupercheckOptions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SupercheckOptionsx\");\n$RefreshReg$(_c2, \"SupercheckOptions\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/SupercheckOptions.tsx"],"names":["React","useState","useRef","useCallback","useSpring","animated","AddRoundedIcon","matchPc","matchTablet","useSelector","Grid","Switch","DialogContent","SupercheckOptionsx","showModal","setShowModal","marginData","fontData","fontDataPc","fontSize","fontDataTablet","fontDataMobile","marginDataPc","marginLeft","marginDataMobile","closemodal","backbutton","window","onpopstate","history","pushState","location","href","Openmodal","inputRef","onBackgroundFocus","e","current","target","animation","config","duration","opacity","transform","darkmode","state","GlobalReducer","darkmodeReducer","position","padding","height","SupercheckOptions","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\n\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { OptionInnerModal } from \"./log/OptionInnerModal\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { matchPc, matchTablet } from \"./DetectDevice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\n\r\nimport \"./log/logCss.css\";\r\nimport * as CSS from \"csstype\";\r\n\r\nfunction SupercheckOptionsx(): JSX.Element {\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n\r\n  var marginData: CSS.Properties;\r\n  var fontData: CSS.Properties;\r\n  const fontDataPc: CSS.Properties = { fontSize: \"2.5vw\" };\r\n  const fontDataTablet: CSS.Properties = { fontSize: \"3.4vh\" };\r\n  const fontDataMobile: CSS.Properties = { fontSize: \"3.8vh\" };\r\n  const marginDataPc: CSS.Properties = { marginLeft: \"-35px\" };\r\n  const marginDataMobile: CSS.Properties = { marginLeft: \"-15.5px\" };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\r\n  if (matchPc) {\r\n    marginData = marginDataPc;\r\n    fontData = fontDataPc;\r\n    ///\r\n  } else if (matchTablet) {\r\n    marginData = marginDataPc;\r\n    fontData = fontDataTablet;\r\n    ///\r\n  } else {\r\n    marginData = marginDataMobile;\r\n    fontData = fontDataMobile;\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\r\n  const closemodal = useCallback(\r\n    (backbutton: number) => {\r\n      //pop states fires when back and forward buttons used\r\n      if (backbutton === 1) {\r\n        window.onpopstate = () => {\r\n          window.history.pushState(null, \"\", window.location.href);\r\n          window.onpopstate = null;\r\n          setShowModal(false);\r\n        };\r\n      } else {\r\n        window.history.pushState(null, \"\", \".\");\r\n        window.onpopstate = null;\r\n        setShowModal(false);\r\n      }\r\n    },\r\n    [showModal]\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///OPEN MODAL THEN CALL CLOSEMODAL FUNCTION WHICH WAITS FOR A POP EVENT(for closing modal)\r\n  const Openmodal = useCallback(() => {\r\n    setShowModal(!showModal);\r\n    //pushstate add enteries to your history\r\n    window.history.pushState(null, \"\", \"Options\");\r\n    closemodal(1);\r\n  }, [showModal, closemodal]);\r\n\r\n  //\r\n  //\r\n  //\r\n  //USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const onBackgroundFocus = (e: any): void => {\r\n    if (inputRef.current === e.target) {\r\n      closemodal(0);\r\n    }\r\n  };\r\n\r\n  //\r\n  //\r\n  //\r\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 250,\r\n    },\r\n    opacity: showModal ? 1 : 0.0,\r\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`,\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  return (\r\n    <Grid container style={{ position: \"fixed\" }}>\r\n      {showModal ? (\r\n        <DialogContent\r\n          className=\"dialog-container dontallowhighlighting \"\r\n          onClick={onBackgroundFocus}\r\n          style={{\r\n            padding: \"0px\",\r\n            height: \"100vh\",\r\n          }}\r\n          ref={inputRef}\r\n        >\r\n          <animated.div style={animation}>\r\n            <Grid\r\n              container\r\n              className={\r\n                darkmodeReducer\r\n                  ? \"Background-header-dark theme-more-container\"\r\n                  : \"Background-header-light theme-more-container\"\r\n              }\r\n            >\r\n              <Grid item sm={8} md={10} xs={7}></Grid>\r\n              <Grid\r\n                item\r\n                xs={2}\r\n                sm={2}\r\n                md={1}\r\n                className=\"zuperking\"\r\n                style={marginData}\r\n              >\r\n                <Switch\r\n                  size=\"medium\"\r\n                  checked={darkmodeReducer}\r\n                  className={\r\n                    darkmodeReducer\r\n                      ? \"icon-color-dark dontallowhighlighting  \"\r\n                      : \"icon-color-light  dontallowhighlighting  \"\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                xs={3}\r\n                className=\"dontallowhighlighting add-rounded-icon-right\"\r\n                sm={2}\r\n                md={1}\r\n              >\r\n                <AddRoundedIcon\r\n                  className={\r\n                    darkmodeReducer\r\n                      ? \"make-small-icons-clickable-dark  dontallowhighlighting  \"\r\n                      : \"make-small-icons-clickable-light  dontallowhighlighting  \"\r\n                  }\r\n                  fontSize=\"large\"\r\n                  style={fontData}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </animated.div>\r\n        </DialogContent>\r\n      ) : null}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport const SupercheckOptions = React.memo(SupercheckOptionsx);\r\n"]},"metadata":{},"sourceType":"module"}