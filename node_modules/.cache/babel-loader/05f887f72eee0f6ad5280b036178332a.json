{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\FilterMode.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { useSpring, animated } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FilterModex({\n  filterImage,\n  selectedImage,\n  itemUploadRef,\n  setActivatefilterImage\n}) {\n  _s();\n\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const originalfilterImageRef = useRef(null);\n  const [ShowHideNegativeValue, setShowHideNegativeValue] = useState(\"-\");\n  const [translate, setTranslate] = useState(0);\n  const [stalestate] = useState(1);\n  const [ActiveSlide, setActiveSlide] = useState(0);\n  var getSliderWidthNew = 0;\n  const [transitionFast, settransitionFast] = useState(false);\n  const getCropHeightRef = useRef(null);\n  const optionsCollectImageRef = useRef(null); ///\n  ///\n  ///\n  /// ACTIVATES SLIDER ITEM TO BE VIEWED ON CLICK\n\n  const clickOptions = (i, type, source) => {\n    if (type === 1) {\n      setTranslate(stalestate + i);\n      setActiveSlide(i);\n    } else {\n      setTranslate(getSliderWidthNew * i + 1.5 * i);\n      setActiveSlide(i);\n    }\n  }; ///\n  ///\n  ///\n  ///CREATE OPTIONS SLIDER ANIMATION WITH  REACT SPRING\n\n\n  const modalanimation = useSpring({\n    config: {\n      mass: 1,\n      tension: 120,\n      friction: 14\n    },\n    transform: `translateX(${ShowHideNegativeValue}${translate}px)`,\n    transition: transitionFast ? \"0s\" : \"0.15s\",\n    height: \"auto\",\n    display: \"flex\",\n    width: `auto`,\n    padding: \"0px\",\n    margin: \"auto\"\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [selectedImage ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: darkmodeReducer ? `optionsTop-background-dark ` : `optionsTop-background-light `,\n      style: {\n        zIndex: 1,\n        padding: \"0px\",\n        position: \"relative\",\n        margin: \"0 auto\",\n        overflow: \"hidden\",\n        left: \"0px\",\n        height: \"auto\",\n        paddingBottom: \"1px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        ref: optionsCollectImageRef,\n        style: modalanimation,\n        children: selectedImage.map((imagee, index) => {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            id: itemUploadRef.current[index],\n            src: itemUploadRef.current[index] ? itemUploadRef.current[index].src : null,\n            style: {\n              width: \"200px\",\n              height: \"auto\",\n              position: \"relative\",\n              margin: \"auto\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        height: \"100%\",\n        position: \"fixed\",\n        top: \"-800vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropHeightRef,\n          xs: 12,\n          style: {\n            height: \"70%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FilterModex, \"fTkQHgHUGFKztQn7FVWIGxpQmYY=\", false, function () {\n  return [useSelector, useSpring];\n});\n\n_c = FilterModex;\nexport const FilterMode = /*#__PURE__*/React.memo(FilterModex);\n_c2 = FilterMode;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FilterModex\");\n$RefreshReg$(_c2, \"FilterMode\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/FilterMode.tsx"],"names":["React","useRef","useState","Grid","useSelector","useSpring","animated","FilterModex","filterImage","selectedImage","itemUploadRef","setActivatefilterImage","darkmode","state","GlobalReducer","darkmodeReducer","originalfilterImageRef","ShowHideNegativeValue","setShowHideNegativeValue","translate","setTranslate","stalestate","ActiveSlide","setActiveSlide","getSliderWidthNew","transitionFast","settransitionFast","getCropHeightRef","optionsCollectImageRef","clickOptions","i","type","source","modalanimation","config","mass","tension","friction","transform","transition","height","display","width","padding","margin","zIndex","position","overflow","left","paddingBottom","map","imagee","index","current","src","top","FilterMode","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { ImageTobeFiltered } from \"./ImageTobeFiltered\";\r\n\r\nfunction FilterModex({\r\n  filterImage,\r\n  selectedImage,\r\n  itemUploadRef,\r\n  setActivatefilterImage,\r\n}: any): JSX.Element {\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  const originalfilterImageRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [ShowHideNegativeValue, setShowHideNegativeValue] = useState(\"-\");\r\n\r\n  const [translate, setTranslate] = useState(0);\r\n  const [stalestate] = useState(1);\r\n\r\n  const [ActiveSlide, setActiveSlide] = useState(0);\r\n\r\n  var getSliderWidthNew = 0;\r\n\r\n  const [transitionFast, settransitionFast] = useState<boolean>(false);\r\n\r\n  const getCropHeightRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const optionsCollectImageRef = useRef<HTMLDivElement>(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// ACTIVATES SLIDER ITEM TO BE VIEWED ON CLICK\r\n  const clickOptions = (i: number, type: number, source: string) => {\r\n    if (type === 1) {\r\n      setTranslate(stalestate + i);\r\n      setActiveSlide(i);\r\n    } else {\r\n      setTranslate(getSliderWidthNew * i + 1.5 * i);\r\n      setActiveSlide(i);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE OPTIONS SLIDER ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      mass: 1,\r\n      tension: 120,\r\n      friction: 14,\r\n    },\r\n    transform: `translateX(${ShowHideNegativeValue}${translate}px)`,\r\n    transition: transitionFast ? \"0s\" : \"0.15s\",\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    width: `auto`,\r\n    padding: \"0px\",\r\n    margin: \"auto\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {selectedImage ? (\r\n        <Grid\r\n          container\r\n          className={\r\n            darkmodeReducer\r\n              ? `optionsTop-background-dark `\r\n              : `optionsTop-background-light `\r\n          }\r\n          style={{\r\n            zIndex: 1,\r\n            padding: \"0px\",\r\n            position: \"relative\",\r\n            margin: \"0 auto\",\r\n            overflow: \"hidden\",\r\n            left: \"0px\",\r\n            height: \"auto\",\r\n            paddingBottom: \"1px\",\r\n          }}\r\n        >\r\n          <animated.div ref={optionsCollectImageRef} style={modalanimation}>\r\n            {selectedImage.map((imagee: any, index: any) => {\r\n              return (\r\n                <img\r\n                  id={itemUploadRef.current[index]}\r\n                  src={\r\n                    itemUploadRef.current[index]\r\n                      ? itemUploadRef.current[index].src\r\n                      : null\r\n                  }\r\n                  style={{\r\n                    width: \"200px\",\r\n                    height: \"auto\",\r\n                    position: \"relative\",\r\n                    margin: \"auto\",\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          </animated.div>\r\n        </Grid>\r\n      ) : null}\r\n\r\n      <Grid\r\n        container\r\n        style={{ height: \"100%\", position: \"fixed\", top: \"-800vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            padding: \"0px\",\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            ref={getCropHeightRef}\r\n            xs={12}\r\n            style={{ height: \"70%\" }}\r\n          ></Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const FilterMode = React.memo(FilterModex);\r\n"]},"metadata":{},"sourceType":"module"}