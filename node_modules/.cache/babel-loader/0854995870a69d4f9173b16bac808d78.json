{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\TaskbarSuperphotoImageView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskbarSuperphotoImageViewx({\n  AddMainImageRef,\n  index,\n  MainImageFiltersRef,\n  finalImage\n}) {\n  _s();\n\n  const [original, setoriginal] = useState(false);\n\n  const originalShow = () => {\n    setoriginal(true);\n  };\n\n  const Timervv = useRef(null);\n  useEffect(() => {\n    if (Timervv.current) {\n      clearTimeout(Timervv.current);\n    }\n\n    Timervv.current = setTimeout(() => {\n      setoriginal(false);\n    }, 2000);\n  }, [original]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: original ? /*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: originalShow,\n      ref: AddMainImageRef,\n      style: {\n        cursor: 'pointer'\n      },\n      src: finalImage[index],\n      alt: `Image ${index}`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: originalShow,\n      ref: AddMainImageRef,\n      style: {\n        cursor: 'pointer'\n      },\n      src: MainImageFiltersRef.current[index] ? MainImageFiltersRef.current[index].src : null,\n      alt: `Image ${index}`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(TaskbarSuperphotoImageViewx, \"Ot05jtTNaAJCcMyjHRAm6rXPx4c=\");\n\n_c = TaskbarSuperphotoImageViewx;\nexport const TaskbarSuperphotoImageView = /*#__PURE__*/React.memo(TaskbarSuperphotoImageViewx);\n_c2 = TaskbarSuperphotoImageView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskbarSuperphotoImageViewx\");\n$RefreshReg$(_c2, \"TaskbarSuperphotoImageView\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/TaskbarSuperphotoImageView.tsx"],"names":["React","useRef","useEffect","useState","TaskbarSuperphotoImageViewx","AddMainImageRef","index","MainImageFiltersRef","finalImage","original","setoriginal","originalShow","Timervv","current","clearTimeout","setTimeout","cursor","src","TaskbarSuperphotoImageView","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IACIC,MADJ,EAEIC,SAFJ,EAIIC,QAJJ,QAMO,OANP;;;;AAqCA,SAASC,2BAAT,CAAqC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA,mBAA1B;AAA+CC,EAAAA;AAA/C,CAArC,EAAoH;AAAA;;AAGhH,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;;AAIA,QAAMQ,YAAY,GAAG,MAAM;AACvBD,IAAAA,WAAW,CAAC,IAAD,CAAX;AAKH,GAND;;AAUA,QAAME,OAAO,GAAGX,MAAM,CAAuC,IAAvC,CAAtB;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,OAAO,CAACC,OAAZ,EAAqB;AACjBC,MAAAA,YAAY,CAACF,OAAO,CAACC,OAAT,CAAZ;AACH;;AACDD,IAAAA,OAAO,CAACC,OAAR,GAAkBE,UAAU,CAAC,MAAM;AAC/BL,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH,KAF2B,EAEzB,IAFyB,CAA5B;AAIH,GARQ,EAQN,CAACD,QAAD,CARM,CAAT;AAaA,sBACI;AAAA,cAEKA,QAAQ,gBAAG;AAAiB,MAAA,OAAO,EAAEE,YAA1B;AAAwC,MAAA,GAAG,EAAEN,eAA7C;AAA8D,MAAA,KAAK,EAAE;AAAEW,QAAAA,MAAM,EAAE;AAAV,OAArE;AAA4F,MAAA,GAAG,EAAER,UAAU,CAACF,KAAD,CAA3G;AACR,MAAA,GAAG,EAAG,SAAQA,KAAM;AADZ,OAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,YAAH,gBAGL;AAAiB,MAAA,OAAO,EAAEK,YAA1B;AAAwC,MAAA,GAAG,EAAEN,eAA7C;AAA8D,MAAA,KAAK,EAAE;AAAEW,QAAAA,MAAM,EAAE;AAAV,OAArE;AAA4F,MAAA,GAAG,EAC3FT,mBAAmB,CAACM,OAApB,CAA4BP,KAA5B,IACMC,mBAAmB,CAACM,OAApB,CAA4BP,KAA5B,EAAmCW,GADzC,GAEM,IAHV;AAKI,MAAA,GAAG,EAAG,SAAQX,KAAM;AALxB,OAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AALR,mBADJ;AAkBH;;GAnDQF,2B;;KAAAA,2B;AAqDT,OAAO,MAAMc,0BAA0B,gBAAGlB,KAAK,CAACmB,IAAN,CAAWf,2BAAX,CAAnC;MAAMc,0B","sourcesContent":["import React, {\r\n    useRef,\r\n    useEffect,\r\n    useCallback,\r\n    useState,\r\n    useLayoutEffect,\r\n} from \"react\";\r\nimport ControlPointDuplicateIcon from \"@mui/icons-material/ControlPointDuplicate\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport Axios from \"axios\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport date from \"date-and-time\";\r\nimport { UserInfoUpdatePROFILE } from \"../log/actions/UserdataAction\";\r\nimport { UserInfoUpdateBILLBOARD } from \"../log/actions/UserdataAction\";\r\nimport { usePalette } from \"react-palette\";\r\nimport { UpdateColorAction } from \"../GlobalActions\";\r\nimport EditTwoToneIcon from \"@mui/icons-material/EditTwoTone\";\r\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\r\nimport { UpdateUploadData } from \"../GlobalActions\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\nimport CropIcon from '@mui/icons-material/Crop';\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { TaskbarCrop } from \"./TaskbarCrop\";\r\nimport set from \"date-fns/set/index.js\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TaskbarSuperphotoImageViewx({ AddMainImageRef, index, MainImageFiltersRef, finalImage }: any): JSX.Element {\r\n\r\n\r\n    const [original, setoriginal] = useState(false);\r\n\r\n\r\n\r\n    const originalShow = () => {\r\n        setoriginal(true);\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const Timervv = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n\r\n    useEffect(() => {\r\n        if (Timervv.current) {\r\n            clearTimeout(Timervv.current);\r\n        }\r\n        Timervv.current = setTimeout(() => {\r\n            setoriginal(false);\r\n        }, 2000)\r\n\r\n    }, [original])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {original ? <img key={index} onClick={originalShow} ref={AddMainImageRef} style={{ cursor: 'pointer' }} src={finalImage[index]}\r\n                alt={`Image ${index}`} />\r\n                :\r\n                <img key={index} onClick={originalShow} ref={AddMainImageRef} style={{ cursor: 'pointer' }} src={\r\n                    MainImageFiltersRef.current[index]\r\n                        ? MainImageFiltersRef.current[index].src\r\n                        : null\r\n                }\r\n                    alt={`Image ${index}`} />}\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport const TaskbarSuperphotoImageView = React.memo(TaskbarSuperphotoImageViewx);\r\n"]},"metadata":{},"sourceType":"module"}