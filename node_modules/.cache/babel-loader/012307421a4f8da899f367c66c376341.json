{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\UploadMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { matchPc } from \"../DetectDevice\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { animated } from \"react-spring\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UploadMenux({\n  optionsShow,\n  optinstopshowingReducer,\n  typeTop,\n  closeoptionsslide,\n  animationop,\n  optionsCollectImageRef,\n  handleTouchStartOptions,\n  handleTouchMoveOptions,\n  modalanimation,\n  nextSlidePc,\n  optionsImages,\n  ActiveSlide,\n  optionsNameData,\n  clickOptions,\n  optionsClickType,\n  getSliderWidthNew\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  var circleIdentify = typeTop ? 0 : 4;\n  var circleIdentify2 = typeTop ? 1 : 5; ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(animated.div, {\n      style: animationop,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: typeTop ? darkmodeReducer ? `optionsTop-background-dark ` : `optionsTop-background-light ` : \"\",\n        onTouchStart: handleTouchStartOptions,\n        onTouchMove: handleTouchMoveOptions,\n        style: {\n          zIndex: 1,\n          padding: \"0px\",\n          top: matchPc ? typeTop ? \"-2vh\" : \"0vh\" : \"0vh\",\n          position: \"relative\",\n          margin: \"0 auto\",\n          overflow: \"hidden\",\n          left: \"0px\",\n          height: typeTop ? matchPc ? \"24.4vh\" : \"20.5vh\" : \"auto\",\n          paddingBottom: \"1px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(animated.div, {\n          ref: optionsCollectImageRef,\n          style: modalanimation,\n          children: optionsImages.map((im, i) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                clickOptions(i, optionsClickType, \"\");\n              },\n              style: {\n                cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\n                width: `${getSliderWidthNew}px`,\n                height: `${getSliderWidthNew}px`,\n                backgroundColor: darkmodeReducer ? \"rgba(010,010,010, 0.68)\" : \"rgba(220,220,220, 0.7)\",\n                borderRadius: \"50%\",\n                marginTop: \"2.15vh\",\n                textAlign: \"center\",\n                alignItems: \"center\",\n                display: \"grid\",\n                justifyContent: \"center\",\n                boxShadow: darkmodeReducer ? ActiveSlide === i ? colortypeReducer === 0 ? `0 0 5.5px ${colorReducerdark}` : `0 0 5.5px ${colorReducer}` : typeTop ? \"0 0 5.5px#aaaaaa\" : \"\" : ActiveSlide === i ? `0 0 5.5px ${colorReducer}` : typeTop ? \"0 0 5.45px#222222\" : ``\n              },\n              children: [\" \", /*#__PURE__*/_jsxDEV(SettingsIcon, {\n                style: {\n                  fontSize: matchPc ? \"2vw\" : \"5vh\",\n                  color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                },\n                className: \"zuperkinginfo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              style: {\n                margin: \"auto\",\n                textAlign: \"center\",\n                position: \"relative\",\n                bottom: \"-0.5em\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                style: {\n                  fontSize: matchPc ? \"1.1vw\" : \"2vh\",\n                  fontWeight: \"bolder\",\n                  fontFamily: \"Arial, Helvetica, sans-serif\",\n                  visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\n                  color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\"\n                },\n                children: [\" \", optionsNameData[i]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(UploadMenux, \"l9V5GnzgsaHuUpw3fMVpEkusZC4=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = UploadMenux;\nexport const UploadMenu = /*#__PURE__*/React.memo(UploadMenux);\n_c2 = UploadMenu;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadMenux\");\n$RefreshReg$(_c2, \"UploadMenu\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/UploadMenu.tsx"],"names":["React","matchPc","Grid","useSelector","animated","SettingsIcon","UploadMenux","optionsShow","optinstopshowingReducer","typeTop","closeoptionsslide","animationop","optionsCollectImageRef","handleTouchStartOptions","handleTouchMoveOptions","modalanimation","nextSlidePc","optionsImages","ActiveSlide","optionsNameData","clickOptions","optionsClickType","getSliderWidthNew","darkmode","state","GlobalReducer","darkmodeReducer","circleIdentify","circleIdentify2","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","zIndex","padding","top","position","margin","overflow","left","height","paddingBottom","map","im","i","cursor","width","backgroundColor","borderRadius","marginTop","textAlign","alignItems","display","justifyContent","boxShadow","fontSize","bottom","fontWeight","fontFamily","visibility","UploadMenu","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\n\r\nfunction UploadMenux({\r\n  optionsShow,\r\n  optinstopshowingReducer,\r\n  typeTop,\r\n  closeoptionsslide,\r\n  animationop,\r\n  optionsCollectImageRef,\r\n  handleTouchStartOptions,\r\n  handleTouchMoveOptions,\r\n  modalanimation,\r\n  nextSlidePc,\r\n  optionsImages,\r\n  ActiveSlide,\r\n  optionsNameData,\r\n  clickOptions,\r\n  optionsClickType,\r\n  getSliderWidthNew,\r\n}: any): JSX.Element {\r\n  ///\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  var circleIdentify = typeTop ? 0 : 4;\r\n  var circleIdentify2 = typeTop ? 1 : 5;\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  return (\r\n    <>\r\n      <animated.div style={animationop}>\r\n        <Grid\r\n          container\r\n          className={\r\n            typeTop\r\n              ? darkmodeReducer\r\n                ? `optionsTop-background-dark `\r\n                : `optionsTop-background-light `\r\n              : \"\"\r\n          }\r\n          onTouchStart={handleTouchStartOptions}\r\n          onTouchMove={handleTouchMoveOptions}\r\n          style={{\r\n            zIndex: 1,\r\n            padding: \"0px\",\r\n            top: matchPc ? (typeTop ? \"-2vh\" : \"0vh\") : \"0vh\",\r\n            position: \"relative\",\r\n            margin: \"0 auto\",\r\n            overflow: \"hidden\",\r\n            left: \"0px\",\r\n            height: typeTop ? (matchPc ? \"24.4vh\" : \"20.5vh\") : \"auto\",\r\n            paddingBottom: \"1px\",\r\n          }}\r\n        >\r\n          <animated.div ref={optionsCollectImageRef} style={modalanimation}>\r\n            {optionsImages.map((im: any, i: any) => (\r\n              <Grid key={i} item xs={12}>\r\n                <div\r\n                  onClick={() => {\r\n                    clickOptions(i, optionsClickType, \"\");\r\n                  }}\r\n                  style={{\r\n                    cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\r\n                    width: `${getSliderWidthNew}px`,\r\n                    height: `${getSliderWidthNew}px`,\r\n                    backgroundColor: darkmodeReducer\r\n                      ? \"rgba(010,010,010, 0.68)\"\r\n                      : \"rgba(220,220,220, 0.7)\",\r\n                    borderRadius: \"50%\",\r\n                    marginTop: \"2.15vh\",\r\n                    textAlign: \"center\",\r\n                    alignItems: \"center\",\r\n                    display: \"grid\",\r\n\r\n                    justifyContent: \"center\",\r\n                    boxShadow: darkmodeReducer\r\n                      ? ActiveSlide === i\r\n                        ? colortypeReducer === 0\r\n                          ? `0 0 5.5px ${colorReducerdark}`\r\n                          : `0 0 5.5px ${colorReducer}`\r\n                        : typeTop\r\n                        ? \"0 0 5.5px#aaaaaa\"\r\n                        : \"\"\r\n                      : ActiveSlide === i\r\n                      ? `0 0 5.5px ${colorReducer}`\r\n                      : typeTop\r\n                      ? \"0 0 5.45px#222222\"\r\n                      : ``,\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  <SettingsIcon\r\n                    style={{\r\n                      fontSize: matchPc ? \"2vw\" : \"5vh\",\r\n                      color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                    }}\r\n                    className=\"zuperkinginfo\"\r\n                  />\r\n                </div>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{\r\n                    margin: \"auto\",\r\n                    textAlign: \"center\",\r\n                    position: \"relative\",\r\n                    bottom: \"-0.5em\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                      fontSize: matchPc ? \"1.1vw\" : \"2vh\",\r\n                      fontWeight: \"bolder\",\r\n                      fontFamily: \"Arial, Helvetica, sans-serif\",\r\n                      visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\r\n\r\n                      color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {optionsNameData[i]}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n          </animated.div>\r\n        </Grid>\r\n      </animated.div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const UploadMenu = React.memo(UploadMenux);\r\n"]},"metadata":{},"sourceType":"module"}