{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\Taskbar.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, DialogContent } from \"@material-ui/core\";\nimport { useSpring, animated } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Taskbarx({\n  showModalUploadTask,\n  uploadClose\n}) {\n  _s();\n\n  const animation = useSpring({\n    config: {\n      duration: 600\n    },\n    opacity: showModalUploadTask ? 1 : 1,\n    transform: showModalUploadTask ? `translateY(0%)` : `translateY(-100%)`,\n    padding: \"0px\"\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(animated.div, {\n      style: animation,\n      children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n        style: {\n          padding: \"0px\",\n          width: '94%',\n          height: \"100vh\",\n          position: \"fixed\",\n          top: '-0vh',\n          zIndex: 100,\n          cursor: \"default\",\n          overflow: \"hidden\",\n          backgroundColor: '#00ccff'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          style: {\n            padding: \"0px\",\n            width: '100%'\n          },\n          children: \"jhbgvbghjkl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Taskbarx, \"84dvVC8rOQE1LXpTrRxuus6xoA8=\", false, function () {\n  return [useSpring];\n});\n\n_c = Taskbarx;\nexport const Taskbar = /*#__PURE__*/React.memo(Taskbarx);\n_c2 = Taskbar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Taskbarx\");\n$RefreshReg$(_c2, \"Taskbar\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/Taskbar.tsx"],"names":["React","Grid","DialogContent","useSpring","animated","Taskbarx","showModalUploadTask","uploadClose","animation","config","duration","opacity","transform","padding","width","height","position","top","zIndex","cursor","overflow","backgroundColor","Taskbar","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAMO,OANP;AAQA,SAASC,IAAT,EAAuBC,aAAvB,QAA4C,mBAA5C;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;;;;AAYA,SAASC,QAAT,CAAkB;AAChBC,EAAAA,mBADgB;AAEhBC,EAAAA;AAFgB,CAAlB,EAIqB;AAAA;;AAGnB,QAAMC,SAAS,GAAGL,SAAS,CAAC;AAC1BM,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADkB;AAI1BC,IAAAA,OAAO,EAAEL,mBAAmB,GAAG,CAAH,GAAO,CAJT;AAK1BM,IAAAA,SAAS,EAAEN,mBAAmB,GAAI,gBAAJ,GAAuB,mBAL3B;AAM1BO,IAAAA,OAAO,EAAE;AANiB,GAAD,CAA3B;AASE,sBACE;AAAA,2BACE,QAAC,QAAD,CAAU,GAAV;AAAe,MAAA,KAAK,EAAEL,SAAtB;AAAA,8BACG,QAAC,aAAD;AACG,QAAA,KAAK,EAAE;AACLK,UAAAA,OAAO,EAAE,KADJ;AAELC,UAAAA,KAAK,EAAC,KAFD;AAGLC,UAAAA,MAAM,EAAE,OAHH;AAILC,UAAAA,QAAQ,EAAE,OAJL;AAKLC,UAAAA,GAAG,EAAC,MALC;AAMLC,UAAAA,MAAM,EAAE,GANH;AAOLC,UAAAA,MAAM,EAAE,SAPH;AAQLC,UAAAA,QAAQ,EAAE,QARL;AASLC,UAAAA,eAAe,EAAC;AATX,SADV;AAAA,+BAcG,QAAC,IAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,KAAK,EAAE;AACLR,YAAAA,OAAO,EAAE,KADJ;AACWC,YAAAA,KAAK,EAAC;AADjB,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdH;AAAA;AAAA;AAAA;AAAA,cADH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA6BH;;GA7CQT,Q;UAOWF,S;;;KAPXE,Q;AA+CT,OAAO,MAAMiB,OAAO,gBAAGtB,KAAK,CAACuB,IAAN,CAAWlB,QAAX,CAAhB;MAAMiB,O","sourcesContent":["import React, {\r\n  useRef,\r\n  useEffect,\r\n  useCallback,\r\n  useState,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport ControlPointDuplicateIcon from \"@mui/icons-material/ControlPointDuplicate\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport Axios from \"axios\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport date from \"date-and-time\";\r\nimport { UserInfoUpdatePROFILE } from \"../log/actions/UserdataAction\";\r\nimport { UserInfoUpdateBILLBOARD } from \"../log/actions/UserdataAction\";\r\nimport { usePalette } from \"react-palette\";\r\nimport { UpdateColorAction } from \"../GlobalActions\";\r\n\r\nfunction Taskbarx({\r\n  showModalUploadTask,\r\n  uploadClose,\r\n  \r\n}: any): JSX.Element {\r\n \r\n\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 600,\r\n    },\r\n    opacity: showModalUploadTask ? 1 : 1,\r\n    transform: showModalUploadTask ? `translateY(0%)` : `translateY(-100%)`,\r\n    padding: \"0px\",\r\n  });\r\n\r\n    return (\r\n      <>\r\n        <animated.div  style={animation}>\r\n           <DialogContent\r\n              style={{\r\n                padding: \"0px\",\r\n                width:'94%',\r\n                height: \"100vh\",\r\n                position: \"fixed\",\r\n                top:'-0vh',\r\n                zIndex: 100,\r\n                cursor: \"default\",\r\n                overflow: \"hidden\",\r\n                backgroundColor:'#00ccff'\r\n              }}\r\n            >\r\n            \r\n              <Grid\r\n                container\r\n                style={{\r\n                  padding: \"0px\", width:'100%'}}>\r\n      \r\n                    jhbgvbghjkl</Grid>\r\n                    \r\n                   </DialogContent> </animated.div>\r\n                    \r\n                    \r\n    </>\r\n  );\r\n}\r\n\r\nexport const Taskbar = React.memo(Taskbarx);\r\n"]},"metadata":{},"sourceType":"module"}