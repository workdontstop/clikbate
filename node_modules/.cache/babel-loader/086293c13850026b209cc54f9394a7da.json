{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\ProfileOutter.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { matchPc } from \"../DetectDevice\";\nimport { useSelector } from \"react-redux\";\nimport \"./profile.css\";\nimport { Profile } from \"./Profile\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ProfileOutter() {\n  _s();\n\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env;\n  const [postData, setPostData] = useState([]);\n  const [postDatainner, setpostDatainner] = useState([[]]);\n  const getSliderWidthRef = useRef(null);\n  const [formtype] = useState(1);\n  const [showModalForm, setShowModalForm] = useState(false);\n  const [getSliderWidth, setgetSliderWidth] = useState(0);\n  const [aboutTemplateGo] = useState(true);\n  const [commentTemplateGo] = useState(false);\n  const [itemheight, setitemheight] = useState([]);\n  const [itemheighthold, setitemheighthold] = useState([]);\n  const [itemcroptype, setitemcroptype] = useState([]);\n  const [itemFinalPostHeight, setitemFinalPostHeight] = useState([]);\n  const [itemOriginalPostHeight, setitemOriginalPostHeight] = useState([]);\n  const [itemCLICKED, setitemCLICKED] = useState([]);\n  const postDivRef = useRef([]);\n  const postItemsRef = useRef([]);\n  const [scrollType, setscrollType] = useState(\"y mandatory\");\n  var postbackheighthold = document.documentElement.clientHeight * 0.3;\n  const [postbackheight] = useState(postbackheighthold);\n  const scrollTypeTimer = useRef(null); ///\n  ///\n  ///CLOSE LOG MODAL\n\n  const [OpenModalFormOnce, setOpenModalFormOnce] = useState(false);\n  const CloseModalForm = useCallback(DeviceBackButtonClicked => {\n    ///onpopstate fires when back and forward buttons used\n    if (DeviceBackButtonClicked === 1) {\n      window.onpopstate = () => {\n        setShowModalForm(false);\n        setOpenModalFormOnce(false);\n      };\n    } else {\n      setShowModalForm(false);\n      setOpenModalFormOnce(false); ///Replace modal history state with previous history state\n\n      window.history.back();\n    }\n  }, []);\n  const OpenModalForm = useCallback(formtypedata => {\n    setShowModalForm(true); ///Replace current history state (since opening a modal Level 2 grid)...\n    /// if this was a level 1 grid (profile-info page use Pushstate to create new history state)\n\n    let modalName = \"Biography\";\n\n    if (!OpenModalFormOnce) {\n      window.history.pushState(null, \"\", modalName);\n      setOpenModalFormOnce(true);\n      CloseModalForm(1);\n    }\n  }, [OpenModalFormOnce, CloseModalForm]); ///\n  ///\n  ///\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\n\n  useEffect(() => {\n    if (getSliderWidthRef.current && getSliderWidthRef.current.clientWidth) {\n      setgetSliderWidth(getSliderWidthRef.current.clientWidth);\n    }\n  }, []); ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    screenHeight,\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const screenHeightReducer = screenHeight;\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  ///MUI PAPER STYLES FROM REDUX\n\n  const {\n    PaperStyleLight,\n    PaperStyleDark\n  } = useSelector(state => ({ ...state.PaperReducerLightnDark\n  }));\n  var PaperStyleReducer = \"\";\n\n  if (darkmodeReducer) {\n    PaperStyleReducer = PaperStyleDark;\n  } else {\n    PaperStyleReducer = PaperStyleLight;\n  }\n\n  function percentage(num, per) {\n    return num / 100 * per;\n  } ////////////////////////////////////////////////////////////////////\n  ///\n  ///\n  ///\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\n\n\n  const addPostItemsRef = itemsRef => {\n    if (itemsRef && !postItemsRef.current.includes(itemsRef)) {\n      postItemsRef.current.push(itemsRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  }; ///\n  ///\n  ///\n  ///CREATE div REFS FROM POSTS AND ADD THEM TO ARRAY\n\n\n  const addpostDivRef = divRef => {\n    if (divRef && !postDivRef.current.includes(divRef)) {\n      postDivRef.current.push(divRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  }; ///\n  ///\n  ///\n  ///DOT ENV DATA\n  ///\n  ///\n  ///MODAL ZOOMED STATE\n\n\n  useEffect(() => {\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/feeds_chronological`, {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.message === \"feeds fetched\") {\n        var postdataRep = response.data.payload;\n        postdataRep.forEach(obj => {\n          obj.itemheight = \"auto\";\n          obj.itemrealheighthold = \"0\";\n          obj.itemcroptype = \"0\";\n          obj.itemFinalPostHeight = \"0\";\n          obj.itemCLICKED = false;\n        });\n        const newArrxt = [[...postDatainner]];\n        postdataRep.map((obj, index) => {\n          const newArrxtq = [];\n\n          for (let i = 0; i < postdataRep[index].post_count; i++) {\n            ///////////////////////////////\n            if (i === 0) {\n              newArrxtq[i] = `${postdataRep[index].item1}`;\n            } else if (i === 1) {\n              newArrxtq[i] = `${postdataRep[index].item2}`;\n            }\n\n            if (i + 1 === postdataRep[index].post_count) {\n              newArrxt[index] = newArrxtq;\n              setpostDatainner(newArrxt);\n            } /////\n            ///////////////////////////////\n\n          }\n        });\n        setPostData(postdataRep);\n      } else if (response.data.message === \"error in fetching feeds\") {\n        alert(\"Connection malfunction\");\n      }\n    }).catch(function (error) {});\n  }, [REACT_APP_SUPERSTARZ_URL]);\n  useEffect(() => {\n    if (postData.length > 0) {\n      const initialItemheight = postData.map(obj => obj.itemheight);\n      setitemheight(initialItemheight);\n      const initialItemrealheighthold = postData.map(obj => obj.itemrealheighthold);\n      setitemheighthold(initialItemrealheighthold);\n      const initialtemcroptype = postData.map(obj => obj.itemcroptype);\n      setitemcroptype(initialtemcroptype);\n      const initialitemFinalPostHeight = postData.map(obj => obj.itemFinalPostHeight);\n      setitemFinalPostHeight(initialitemFinalPostHeight);\n      const initialitemCLICKED = postData.map(obj => obj.itemCLICKED);\n      setitemCLICKED(initialitemCLICKED);\n    }\n  }, [postData]); ///\n  ///\n\n  const onPostsItemload = useCallback((e, index, itemnum) => {\n    if (itemnum === 0) {\n      if (postItemsRef.current[index]) {\n        var imageHeight = postItemsRef.current[index].clientHeight;\n        var imageWidth = postItemsRef.current[index].clientWidth; ///////////////////////////////\n\n        const newArraa = [...itemheight];\n        newArraa[index] = `${imageHeight}px`;\n        setitemheight(newArraa); ///////////////////////////////\n        ///////////////////////////////\n\n        const newArrx = [...itemheighthold];\n        var newh = imageHeight / 1.042 - postbackheighthold;\n        newArrx[index] = `${newh}`;\n        setitemheighthold(newArrx); ///////////////////////////////\n\n        const newArrayFinalPostHeight = [...itemFinalPostHeight];\n        newArrayFinalPostHeight[index] = imageHeight;\n        setitemFinalPostHeight(newArrayFinalPostHeight); //console.log(screenHeightReducer);\n        ///console.log(\"jj\");\n        ///console.log(imageHeight);\n\n        var choppedHeight = percentage(screenHeightReducer, 100);\n        var choppedwidth = percentage(screenHeightReducer, 58);\n\n        if (imageHeight < choppedwidth) {\n          /////WIDE IMAGE SET\n          const newArr = [...itemheight];\n          newArr[index] = `${choppedwidth}px`;\n          setitemheight(newArr); ///////////////////////////////\n\n          const newArrx = [...itemheighthold];\n          var newh = choppedwidth / 1.055 - postbackheighthold;\n          newArrx[index] = `${newh}`;\n          setitemheighthold(newArrx); ////////////////////////////\n          ///////////////////////////////\n\n          const newArrxq = [...itemcroptype];\n          newArrxq[index] = 1;\n          setitemcroptype(newArrxq); ////////////////////////////\n          ///////////////////////////////\n\n          const newArrayFinalPostHeight = [...itemFinalPostHeight];\n          newArrayFinalPostHeight[index] = choppedwidth;\n          setitemFinalPostHeight(newArrayFinalPostHeight);\n        } else if (imageHeight > choppedHeight) {\n          /////LONG IMAGE SET\n          const newArr = [...itemheight];\n          newArr[index] = `${choppedHeight}px`;\n          setitemheight(newArr); ///////////////////////////////\n\n          const newArrx = [...itemheighthold];\n          var newh = choppedHeight / 1.032 - postbackheighthold;\n          newArrx[index] = `${newh}`;\n          setitemheighthold(newArrx); ////////////////////////////////\n          ///////////////////////////////\n\n          const newArrxq = [...itemcroptype];\n          newArrxq[index] = 2;\n          setitemcroptype(newArrxq); ///////////////////////////////\n\n          const newArrayFinalPostHeight = [...itemFinalPostHeight];\n          newArrayFinalPostHeight[index] = choppedHeight;\n          setitemFinalPostHeight(newArrayFinalPostHeight); ///////////////////////////////\n        } else if (imageWidth > imageHeight) {\n          ///////////////////////////////\n          const newArrx = [...itemheighthold];\n          var newh = imageHeight / 1.066 - postbackheighthold;\n          newArrx[index] = `${newh}`;\n          setitemheighthold(newArrx); ///////////////////////////////\n        } else {}\n      }\n    }\n  }, [screenHeightReducer, itemheight, itemheighthold, itemFinalPostHeight]);\n\n  const scrollToPost = index => {\n    postItemsRef.current[index].scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  const postitemSHOWFULLHEIGHT = (index, type) => {\n    if (itemcroptype[index] === 1 || itemcroptype[index] === 2) {\n      if (type === 0) {\n        const newitemHeight = [...itemheight];\n        newitemHeight[index] = `auto`;\n        setitemheight(newitemHeight);\n      } else {\n        const newitemHeight = [...itemheight];\n        newitemHeight[index] = `${itemFinalPostHeight[index]}px`;\n        setitemheight(newitemHeight);\n      }\n    }\n  };\n\n  const onPostsItemClicked = index => {\n    if (itemCLICKED[index]) {\n      const newclickArray = [...itemCLICKED];\n      newclickArray[index] = false;\n      setitemCLICKED(newclickArray);\n      postitemSHOWFULLHEIGHT(index, 1);\n      scrollToPost(index);\n    } else {\n      if (scrollTypeTimer.current) {\n        clearTimeout(scrollTypeTimer.current);\n      }\n\n      setscrollType(\" \");\n      scrollTypeTimer.current = setTimeout(() => {\n        setscrollType(\"y mandatory\");\n      }, 6000);\n      const newclickArray = [...itemCLICKED];\n      newclickArray[index] = true;\n      setitemCLICKED(newclickArray);\n      postitemSHOWFULLHEIGHT(index, 0);\n      scrollToPost(index);\n    }\n  };\n\n  const breakPoints = {\n    default: 2,\n    960: 2,\n    600: 1\n  }; ///\n  ///\n  ///TYPES FOR ISLOGGEDIN\n\n  ///\n  ///LOGGED IN DATA FROM REDUX\n  const {\n    loggedIn\n  } = useSelector(state => ({ ...state.IsLoggedReducer\n  }));\n  const loggedInReducer = loggedIn; ///\n  ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color,\n    colordark\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loggedInReducer ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: matchPc ? /*#__PURE__*/_jsxDEV(Paper, {\n        className: darkmodeReducer ? \"postscroll-dark\" : \"postscroll-light\",\n        style: {\n          backgroundImage: PaperStyleReducer,\n          borderRadius: \"0px\",\n          height: \"100vh\",\n          overflowY: \"scroll\",\n          overflowX: \"hidden\",\n          scrollSnapType: scrollType\n        },\n        children: /*#__PURE__*/_jsxDEV(Profile, {\n          getSliderWidthRef: getSliderWidthRef,\n          OpenModalForm: OpenModalForm,\n          getSliderWidth: getSliderWidth,\n          postData: postData,\n          addPostItemsRef: addPostItemsRef,\n          onPostsItemload: onPostsItemload,\n          itemheight: itemheight,\n          itemheighthold: itemheighthold,\n          postbackheight: postbackheight,\n          formtype: formtype,\n          showModalForm: showModalForm,\n          CloseModalForm: CloseModalForm,\n          aboutTemplateGo: aboutTemplateGo,\n          commentTemplateGo: commentTemplateGo,\n          itemcroptype: itemcroptype,\n          itemFinalPostHeight: itemFinalPostHeight,\n          onPostsItemClicked: onPostsItemClicked,\n          itemCLICKED: itemCLICKED,\n          addpostDivRef: addpostDivRef,\n          postDatainner: postDatainner,\n          itemOriginalPostHeight: itemOriginalPostHeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          backgroundImage: PaperStyleReducer,\n          borderRadius: \"0px\",\n          height: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Profile, {\n          getSliderWidthRef: getSliderWidthRef,\n          OpenModalForm: OpenModalForm,\n          getSliderWidth: getSliderWidth,\n          postData: postData,\n          addPostItemsRef: addPostItemsRef,\n          onPostsItemload: onPostsItemload,\n          itemheight: itemheight,\n          itemheighthold: itemheighthold,\n          postbackheight: postbackheight,\n          formtype: formtype,\n          showModalForm: showModalForm,\n          CloseModalForm: CloseModalForm,\n          aboutTemplateGo: aboutTemplateGo,\n          commentTemplateGo: commentTemplateGo,\n          itemcroptype: itemcroptype,\n          itemFinalPostHeight: itemFinalPostHeight,\n          onPostsItemClicked: onPostsItemClicked,\n          itemCLICKED: itemCLICKED,\n          addpostDivRef: addpostDivRef,\n          postDatainner: postDatainner,\n          itemOriginalPostHeight: itemOriginalPostHeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : null\n  }, void 0, false);\n}\n\n_s(ProfileOutter, \"qVUXLZgieKRnIXl+en4SGBEsTzc=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileOutter;\nexport default ProfileOutter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileOutter\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/ProfileOutter.tsx"],"names":["React","useRef","useState","useEffect","useCallback","Paper","matchPc","useSelector","Profile","Axios","ProfileOutter","REACT_APP_SUPERSTARZ_URL","process","env","postData","setPostData","postDatainner","setpostDatainner","getSliderWidthRef","formtype","showModalForm","setShowModalForm","getSliderWidth","setgetSliderWidth","aboutTemplateGo","commentTemplateGo","itemheight","setitemheight","itemheighthold","setitemheighthold","itemcroptype","setitemcroptype","itemFinalPostHeight","setitemFinalPostHeight","itemOriginalPostHeight","setitemOriginalPostHeight","itemCLICKED","setitemCLICKED","postDivRef","postItemsRef","scrollType","setscrollType","postbackheighthold","document","documentElement","clientHeight","postbackheight","scrollTypeTimer","OpenModalFormOnce","setOpenModalFormOnce","CloseModalForm","DeviceBackButtonClicked","window","onpopstate","history","back","OpenModalForm","formtypedata","modalName","pushState","current","clientWidth","screenHeight","darkmode","state","GlobalReducer","screenHeightReducer","darkmodeReducer","PaperStyleLight","PaperStyleDark","PaperReducerLightnDark","PaperStyleReducer","percentage","num","per","addPostItemsRef","itemsRef","includes","push","addpostDivRef","divRef","post","withCredentials","then","response","data","message","postdataRep","payload","forEach","obj","itemrealheighthold","newArrxt","map","index","newArrxtq","i","post_count","item1","item2","alert","catch","error","length","initialItemheight","initialItemrealheighthold","initialtemcroptype","initialitemFinalPostHeight","initialitemCLICKED","onPostsItemload","e","itemnum","imageHeight","imageWidth","newArraa","newArrx","newh","newArrayFinalPostHeight","choppedHeight","choppedwidth","newArr","newArrxq","scrollToPost","scrollIntoView","behavior","postitemSHOWFULLHEIGHT","type","newitemHeight","onPostsItemClicked","newclickArray","clearTimeout","setTimeout","breakPoints","default","loggedIn","IsLoggedReducer","loggedInReducer","color","colordark","GlobalReducerColor","colorReducer","colorReducerdark","backgroundImage","borderRadius","height","overflowY","overflowX","scrollSnapType"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport { Paper, Grid, Box } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector } from \"react-redux\";\r\nimport \"./profile.css\";\r\nimport { Profile } from \"./Profile\";\r\nimport Axios from \"axios\";\r\n\r\nfunction ProfileOutter() {\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n\r\n  const [postData, setPostData] = useState<Array<any>>([]);\r\n  const [postDatainner, setpostDatainner] = useState<Array<any>>([[]]);\r\n\r\n  const getSliderWidthRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [formtype] = useState<number>(1);\r\n  const [showModalForm, setShowModalForm] = useState<boolean>(false);\r\n\r\n  const [getSliderWidth, setgetSliderWidth] = useState(0);\r\n\r\n  const [aboutTemplateGo] = useState<boolean>(true);\r\n  const [commentTemplateGo] = useState<boolean>(false);\r\n\r\n  const [itemheight, setitemheight] = useState<Array<string>>([]);\r\n  const [itemheighthold, setitemheighthold] = useState<Array<string>>([]);\r\n  const [itemcroptype, setitemcroptype] = useState<Array<number>>([]);\r\n  const [itemFinalPostHeight, setitemFinalPostHeight] = useState<Array<number>>(\r\n    []\r\n  );\r\n   const [itemOriginalPostHeight, setitemOriginalPostHeight] = useState<\r\n     Array<number>\r\n   >([]);\r\n  const [itemCLICKED, setitemCLICKED] = useState<Array<boolean>>([]);\r\n\r\n  const postDivRef = useRef<any>([]);\r\n\r\n  const postItemsRef = useRef<any>([]);\r\n\r\n  const [scrollType, setscrollType] = useState<string>(\"y mandatory\");\r\n\r\n  var postbackheighthold = document.documentElement.clientHeight * 0.3;\r\n  const [postbackheight] = useState<number>(postbackheighthold);\r\n\r\n  const scrollTypeTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  ///\r\n  ///\r\n  ///CLOSE LOG MODAL\r\n  const [OpenModalFormOnce, setOpenModalFormOnce] = useState<boolean>(false);\r\n  const CloseModalForm = useCallback((DeviceBackButtonClicked: number) => {\r\n    ///onpopstate fires when back and forward buttons used\r\n    if (DeviceBackButtonClicked === 1) {\r\n      window.onpopstate = () => {\r\n        setShowModalForm(false);\r\n        setOpenModalFormOnce(false);\r\n      };\r\n    } else {\r\n      setShowModalForm(false);\r\n      setOpenModalFormOnce(false);\r\n      ///Replace modal history state with previous history state\r\n      window.history.back();\r\n    }\r\n  }, []);\r\n\r\n  const OpenModalForm = useCallback(\r\n    (formtypedata: number) => {\r\n      setShowModalForm(true);\r\n      ///Replace current history state (since opening a modal Level 2 grid)...\r\n      /// if this was a level 1 grid (profile-info page use Pushstate to create new history state)\r\n      let modalName = \"Biography\";\r\n\r\n      if (!OpenModalFormOnce) {\r\n        window.history.pushState(null, \"\", modalName);\r\n        setOpenModalFormOnce(true);\r\n        CloseModalForm(1);\r\n      }\r\n    },\r\n    [OpenModalFormOnce, CloseModalForm]\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\r\n  useEffect(() => {\r\n    if (getSliderWidthRef.current && getSliderWidthRef.current.clientWidth) {\r\n      setgetSliderWidth(getSliderWidthRef.current.clientWidth);\r\n    }\r\n  }, []);\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const { screenHeight, darkmode } = useSelector(\r\n    (state: RootStateGlobalReducer) => ({\r\n      ...state.GlobalReducer,\r\n    })\r\n  );\r\n  const screenHeightReducer = screenHeight;\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///MUI PAPER STYLES FROM REDUX\r\n  const { PaperStyleLight, PaperStyleDark } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.PaperReducerLightnDark,\r\n    })\r\n  );\r\n  var PaperStyleReducer = \"\";\r\n\r\n  if (darkmodeReducer) {\r\n    PaperStyleReducer = PaperStyleDark;\r\n  } else {\r\n    PaperStyleReducer = PaperStyleLight;\r\n  }\r\n\r\n  function percentage(num: number, per: number) {\r\n    return (num / 100) * per;\r\n  }\r\n\r\n  ////////////////////////////////////////////////////////////////////\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\r\n  const addPostItemsRef = (itemsRef: any) => {\r\n    if (itemsRef && !postItemsRef.current.includes(itemsRef)) {\r\n      postItemsRef.current.push(itemsRef);\r\n    }\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE div REFS FROM POSTS AND ADD THEM TO ARRAY\r\n  const addpostDivRef = (divRef: any) => {\r\n    if (divRef && !postDivRef.current.includes(divRef)) {\r\n      postDivRef.current.push(divRef);\r\n    }\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///DOT ENV DATA\r\n\r\n  ///\r\n  ///\r\n  ///MODAL ZOOMED STATE\r\n  useEffect(() => {\r\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/feeds_chronological`, {\r\n      withCredentials: true,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.message === \"feeds fetched\") {\r\n          var postdataRep = response.data.payload;\r\n\r\n          postdataRep.forEach((obj: any) => {\r\n            obj.itemheight = \"auto\";\r\n            obj.itemrealheighthold = \"0\";\r\n            obj.itemcroptype = \"0\";\r\n            obj.itemFinalPostHeight = \"0\";\r\n            obj.itemCLICKED = false;\r\n          });\r\n\r\n          const newArrxt: any = [[...postDatainner]];\r\n          postdataRep.map((obj: any, index: any) => {\r\n            const newArrxtq: any = [];\r\n            for (let i = 0; i < postdataRep[index].post_count; i++) {\r\n              ///////////////////////////////\r\n\r\n              if (i === 0) {\r\n                newArrxtq[i] = `${postdataRep[index].item1}`;\r\n              } else if (i === 1) {\r\n                newArrxtq[i] = `${postdataRep[index].item2}`;\r\n              }\r\n              if (i + 1 === postdataRep[index].post_count) {\r\n                newArrxt[index] = newArrxtq;\r\n                setpostDatainner(newArrxt);\r\n              }\r\n              /////\r\n              ///////////////////////////////\r\n            }\r\n          });\r\n\r\n          setPostData(postdataRep);\r\n        } else if (response.data.message === \"error in fetching feeds\") {\r\n          alert(\"Connection malfunction\");\r\n        }\r\n      })\r\n      .catch(function (error) {});\r\n  }, [REACT_APP_SUPERSTARZ_URL]);\r\n\r\n  useEffect(() => {\r\n    if (postData.length > 0) {\r\n      const initialItemheight = postData.map((obj) => obj.itemheight);\r\n      setitemheight(initialItemheight);\r\n\r\n      const initialItemrealheighthold = postData.map(\r\n        (obj) => obj.itemrealheighthold\r\n      );\r\n      setitemheighthold(initialItemrealheighthold);\r\n\r\n      const initialtemcroptype = postData.map((obj) => obj.itemcroptype);\r\n      setitemcroptype(initialtemcroptype);\r\n\r\n      const initialitemFinalPostHeight = postData.map(\r\n        (obj) => obj.itemFinalPostHeight\r\n      );\r\n      setitemFinalPostHeight(initialitemFinalPostHeight);\r\n\r\n      const initialitemCLICKED = postData.map((obj) => obj.itemCLICKED);\r\n      setitemCLICKED(initialitemCLICKED);\r\n    }\r\n  }, [postData]);\r\n\r\n  ///\r\n  ///\r\n  const onPostsItemload = useCallback(\r\n    (e: any, index: number, itemnum: number) => {\r\n      if (itemnum === 0) {\r\n        if (postItemsRef.current[index]) {\r\n          var imageHeight = postItemsRef.current[index].clientHeight;\r\n          var imageWidth = postItemsRef.current[index].clientWidth;\r\n\r\n          ///////////////////////////////\r\n          const newArraa = [...itemheight];\r\n          newArraa[index] = `${imageHeight}px`;\r\n          setitemheight(newArraa);\r\n          ///////////////////////////////\r\n\r\n          ///////////////////////////////\r\n          const newArrx = [...itemheighthold];\r\n          var newh = imageHeight / 1.042 - postbackheighthold;\r\n          newArrx[index] = `${newh}`;\r\n          setitemheighthold(newArrx);\r\n          ///////////////////////////////\r\n          const newArrayFinalPostHeight = [...itemFinalPostHeight];\r\n          newArrayFinalPostHeight[index] = imageHeight;\r\n          setitemFinalPostHeight(newArrayFinalPostHeight);\r\n\r\n          //console.log(screenHeightReducer);\r\n          ///console.log(\"jj\");\r\n          ///console.log(imageHeight);\r\n\r\n          var choppedHeight = percentage(screenHeightReducer, 100);\r\n\r\n          var choppedwidth = percentage(screenHeightReducer, 58);\r\n\r\n          if (imageHeight < choppedwidth) {\r\n            /////WIDE IMAGE SET\r\n            const newArr = [...itemheight];\r\n            newArr[index] = `${choppedwidth}px`;\r\n            setitemheight(newArr);\r\n            ///////////////////////////////\r\n            const newArrx = [...itemheighthold];\r\n            var newh = choppedwidth / 1.055 - postbackheighthold;\r\n            newArrx[index] = `${newh}`;\r\n            setitemheighthold(newArrx);\r\n            ////////////////////////////\r\n            ///////////////////////////////\r\n            const newArrxq = [...itemcroptype];\r\n            newArrxq[index] = 1;\r\n            setitemcroptype(newArrxq);\r\n            ////////////////////////////\r\n            ///////////////////////////////\r\n            const newArrayFinalPostHeight = [...itemFinalPostHeight];\r\n            newArrayFinalPostHeight[index] = choppedwidth;\r\n            setitemFinalPostHeight(newArrayFinalPostHeight);\r\n          } else if (imageHeight > choppedHeight) {\r\n            /////LONG IMAGE SET\r\n            const newArr = [...itemheight];\r\n            newArr[index] = `${choppedHeight}px`;\r\n            setitemheight(newArr);\r\n            ///////////////////////////////\r\n            const newArrx = [...itemheighthold];\r\n            var newh = choppedHeight / 1.032 - postbackheighthold;\r\n            newArrx[index] = `${newh}`;\r\n            setitemheighthold(newArrx);\r\n            ////////////////////////////////\r\n            ///////////////////////////////\r\n            const newArrxq = [...itemcroptype];\r\n            newArrxq[index] = 2;\r\n            setitemcroptype(newArrxq);\r\n            ///////////////////////////////\r\n            const newArrayFinalPostHeight = [...itemFinalPostHeight];\r\n            newArrayFinalPostHeight[index] = choppedHeight;\r\n            setitemFinalPostHeight(newArrayFinalPostHeight);\r\n            ///////////////////////////////\r\n          } else if (imageWidth > imageHeight) {\r\n            ///////////////////////////////\r\n            const newArrx = [...itemheighthold];\r\n            var newh = imageHeight / 1.066 - postbackheighthold;\r\n            newArrx[index] = `${newh}`;\r\n            setitemheighthold(newArrx);\r\n            ///////////////////////////////\r\n          } else {\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [screenHeightReducer, itemheight, itemheighthold, itemFinalPostHeight]\r\n  );\r\n\r\n  const scrollToPost = (index: any) => {\r\n    postItemsRef.current[index].scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const postitemSHOWFULLHEIGHT = (index: any, type: number) => {\r\n    if (itemcroptype[index] === 1 || itemcroptype[index] === 2) {\r\n      if (type === 0) {\r\n        const newitemHeight = [...itemheight];\r\n        newitemHeight[index] = `auto`;\r\n        setitemheight(newitemHeight);\r\n      } else {\r\n        const newitemHeight = [...itemheight];\r\n        newitemHeight[index] = `${itemFinalPostHeight[index]}px`;\r\n        setitemheight(newitemHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onPostsItemClicked = (index: number) => {\r\n    if (itemCLICKED[index]) {\r\n      const newclickArray = [...itemCLICKED];\r\n      newclickArray[index] = false;\r\n      setitemCLICKED(newclickArray);\r\n      postitemSHOWFULLHEIGHT(index, 1);\r\n      scrollToPost(index);\r\n    } else {\r\n      if (scrollTypeTimer.current) {\r\n        clearTimeout(scrollTypeTimer.current);\r\n      }\r\n      setscrollType(\" \");\r\n      scrollTypeTimer.current = setTimeout(() => {\r\n        setscrollType(\"y mandatory\");\r\n      }, 6000);\r\n\r\n      const newclickArray = [...itemCLICKED];\r\n      newclickArray[index] = true;\r\n      setitemCLICKED(newclickArray);\r\n      postitemSHOWFULLHEIGHT(index, 0);\r\n      scrollToPost(index);\r\n    }\r\n  };\r\n\r\n  const breakPoints = {\r\n    default: 2,\r\n    960: 2,\r\n    600: 1,\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///TYPES FOR ISLOGGEDIN\r\n  interface RootStateIsLogged {\r\n    IsLoggedReducer: {\r\n      loggedIn: boolean;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///LOGGED IN DATA FROM REDUX\r\n  const { loggedIn } = useSelector((state: RootStateIsLogged) => ({\r\n    ...state.IsLoggedReducer,\r\n  }));\r\n  const loggedInReducer = loggedIn;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n    };\r\n  }\r\n  const { color, colordark } = useSelector((state: RootStateReducerColor) => ({\r\n    ...state.GlobalReducerColor,\r\n  }));\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n\r\n  return (\r\n    <>\r\n      {loggedInReducer ? (\r\n        <>\r\n          {matchPc ? (\r\n            <Paper\r\n              className={\r\n                darkmodeReducer ? \"postscroll-dark\" : \"postscroll-light\"\r\n              }\r\n              style={{\r\n                backgroundImage: PaperStyleReducer,\r\n                borderRadius: \"0px\",\r\n                height: \"100vh\",\r\n                overflowY: \"scroll\",\r\n                overflowX: \"hidden\",\r\n                scrollSnapType: scrollType,\r\n              }}\r\n            >\r\n              <Profile\r\n                getSliderWidthRef={getSliderWidthRef}\r\n                OpenModalForm={OpenModalForm}\r\n                getSliderWidth={getSliderWidth}\r\n                postData={postData}\r\n                addPostItemsRef={addPostItemsRef}\r\n                onPostsItemload={onPostsItemload}\r\n                itemheight={itemheight}\r\n                itemheighthold={itemheighthold}\r\n                postbackheight={postbackheight}\r\n                formtype={formtype}\r\n                showModalForm={showModalForm}\r\n                CloseModalForm={CloseModalForm}\r\n                aboutTemplateGo={aboutTemplateGo}\r\n                commentTemplateGo={commentTemplateGo}\r\n                itemcroptype={itemcroptype}\r\n                itemFinalPostHeight={itemFinalPostHeight}\r\n                onPostsItemClicked={onPostsItemClicked}\r\n                itemCLICKED={itemCLICKED}\r\n                addpostDivRef={addpostDivRef}\r\n                postDatainner={postDatainner}\r\n                itemOriginalPostHeight={itemOriginalPostHeight}\r\n              />\r\n            </Paper>\r\n          ) : (\r\n            <Paper\r\n              style={{\r\n                backgroundImage: PaperStyleReducer,\r\n                borderRadius: \"0px\",\r\n                height: \"auto\",\r\n              }}\r\n            >\r\n              <Profile\r\n                getSliderWidthRef={getSliderWidthRef}\r\n                OpenModalForm={OpenModalForm}\r\n                getSliderWidth={getSliderWidth}\r\n                postData={postData}\r\n                addPostItemsRef={addPostItemsRef}\r\n                onPostsItemload={onPostsItemload}\r\n                itemheight={itemheight}\r\n                itemheighthold={itemheighthold}\r\n                postbackheight={postbackheight}\r\n                formtype={formtype}\r\n                showModalForm={showModalForm}\r\n                CloseModalForm={CloseModalForm}\r\n                aboutTemplateGo={aboutTemplateGo}\r\n                commentTemplateGo={commentTemplateGo}\r\n                itemcroptype={itemcroptype}\r\n                itemFinalPostHeight={itemFinalPostHeight}\r\n                onPostsItemClicked={onPostsItemClicked}\r\n                itemCLICKED={itemCLICKED}\r\n                addpostDivRef={addpostDivRef}\r\n                postDatainner={postDatainner}\r\n                itemOriginalPostHeight={itemOriginalPostHeight}\r\n              />\r\n            </Paper>\r\n          )}\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileOutter;\r\n"]},"metadata":{},"sourceType":"module"}