{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\TaskbarSuperphotoImageView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskbarSuperphotoImageViewx({\n  AddMainImageRef,\n  index,\n  MainImageFiltersRef,\n  finalImage,\n  ray,\n  Originalray,\n  setOriginalRay\n}) {\n  _s();\n\n  const [fade, setfade] = useState(false);\n  useEffect(() => {\n    setfade(true);\n    setTimeout(() => {\n      setfade(false);\n    }, 2000);\n  }, [MainImageFiltersRef.current]);\n  const Timer = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [Originalray[index] === 1 ? null : null, /*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: () => {\n        //alert('kj');\n        const updatedOriginalRay = [...Originalray];\n        updatedOriginalRay[index] = 1;\n        setOriginalRay(updatedOriginalRay); ////////////\n\n        setTimeout(() => {\n          updatedOriginalRay[index] = 0;\n          setOriginalRay(updatedOriginalRay);\n        }, 3000);\n      },\n      className: ray[index] === 1 ? 'fadeboyinFilter' : \"\",\n      ref: AddMainImageRef,\n      style: {\n        cursor: 'pointer',\n        position: 'relatuve'\n      },\n      src: MainImageFiltersRef.current[index] ? MainImageFiltersRef.current[index].src : null,\n      alt: `Image ${index}`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TaskbarSuperphotoImageViewx, \"TVL7aTf6TM/u6Yo/6f1K8dsyQe4=\");\n\n_c = TaskbarSuperphotoImageViewx;\nexport const TaskbarSuperphotoImageView = /*#__PURE__*/React.memo(TaskbarSuperphotoImageViewx);\n_c2 = TaskbarSuperphotoImageView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskbarSuperphotoImageViewx\");\n$RefreshReg$(_c2, \"TaskbarSuperphotoImageView\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/TaskbarSuperphotoImageView.tsx"],"names":["React","useRef","useEffect","useState","TaskbarSuperphotoImageViewx","AddMainImageRef","index","MainImageFiltersRef","finalImage","ray","Originalray","setOriginalRay","fade","setfade","setTimeout","current","Timer","updatedOriginalRay","cursor","position","src","TaskbarSuperphotoImageView","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IACIC,MADJ,EAEIC,SAFJ,EAIIC,QAJJ,QAMO,OANP;;;;AAqCA,SAASC,2BAAT,CAAqC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA,mBAA1B;AAA+CC,EAAAA,UAA/C;AAA2DC,EAAAA,GAA3D;AAAgEC,EAAAA,WAAhE;AAA6EC,EAAAA;AAA7E,CAArC,EAAsJ;AAAA;;AAGlJ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;AAKAD,EAAAA,SAAS,CAAC,MAAM;AAEZW,IAAAA,OAAO,CAAC,IAAD,CAAP;AAEAC,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAFS,EAEP,IAFO,CAAV;AAMH,GAVQ,EAUN,CAACN,mBAAmB,CAACQ,OAArB,CAVM,CAAT;AAcA,QAAMC,KAAK,GAAGf,MAAM,CAAuC,IAAvC,CAApB;AAEA,sBACI;AAAA,eAKKS,WAAW,CAACJ,KAAD,CAAX,KAAuB,CAAvB,GAA2B,IAA3B,GAAkC,IALvC,eAQI;AACI,MAAA,OAAO,EAAE,MAAM;AACX;AACA,cAAMW,kBAAuB,GAAG,CAAC,GAAGP,WAAJ,CAAhC;AACAO,QAAAA,kBAAkB,CAACX,KAAD,CAAlB,GAA4B,CAA5B;AACAK,QAAAA,cAAc,CAACM,kBAAD,CAAd,CAJW,CAKX;;AACAH,QAAAA,UAAU,CAAC,MAAM;AACbG,UAAAA,kBAAkB,CAACX,KAAD,CAAlB,GAA4B,CAA5B;AACAK,UAAAA,cAAc,CAACM,kBAAD,CAAd;AACH,SAHS,EAGP,IAHO,CAAV;AAKH,OAZL;AAaI,MAAA,SAAS,EAAER,GAAG,CAACH,KAAD,CAAH,KAAe,CAAf,GAAmB,iBAAnB,GAAuC,EAbtD;AAa0D,MAAA,GAAG,EAAED,eAb/D;AAcI,MAAA,KAAK,EAAE;AAAEa,QAAAA,MAAM,EAAE,SAAV;AAAqBC,QAAAA,QAAQ,EAAE;AAA/B,OAdX;AAcwD,MAAA,GAAG,EACnDZ,mBAAmB,CAACQ,OAApB,CAA4BT,KAA5B,IACMC,mBAAmB,CAACQ,OAApB,CAA4BT,KAA5B,EAAmCc,GADzC,GAEM,IAjBd;AAmBI,MAAA,GAAG,EAAG,SAAQd,KAAM;AAnBxB,OAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAiCH;;GAzDQF,2B;;KAAAA,2B;AA2DT,OAAO,MAAMiB,0BAA0B,gBAAGrB,KAAK,CAACsB,IAAN,CAAWlB,2BAAX,CAAnC;MAAMiB,0B","sourcesContent":["import React, {\r\n    useRef,\r\n    useEffect,\r\n    useCallback,\r\n    useState,\r\n    useLayoutEffect,\r\n} from \"react\";\r\nimport ControlPointDuplicateIcon from \"@mui/icons-material/ControlPointDuplicate\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport Axios from \"axios\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport date from \"date-and-time\";\r\nimport { UserInfoUpdatePROFILE } from \"../log/actions/UserdataAction\";\r\nimport { UserInfoUpdateBILLBOARD } from \"../log/actions/UserdataAction\";\r\nimport { usePalette } from \"react-palette\";\r\nimport { UpdateColorAction } from \"../GlobalActions\";\r\nimport EditTwoToneIcon from \"@mui/icons-material/EditTwoTone\";\r\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\r\nimport { UpdateUploadData } from \"../GlobalActions\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\nimport CropIcon from '@mui/icons-material/Crop';\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { TaskbarCrop } from \"./TaskbarCrop\";\r\nimport set from \"date-fns/set/index.js\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TaskbarSuperphotoImageViewx({ AddMainImageRef, index, MainImageFiltersRef, finalImage, ray, Originalray, setOriginalRay }: any): JSX.Element {\r\n\r\n\r\n    const [fade, setfade] = useState(false);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setfade(true)\r\n\r\n        setTimeout(() => {\r\n            setfade(false)\r\n        }, 2000);\r\n\r\n\r\n\r\n    }, [MainImageFiltersRef.current])\r\n\r\n\r\n\r\n    const Timer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n\r\n            {Originalray[index] === 1 ? null : null}\r\n\r\n\r\n            <img key={index}\r\n                onClick={() => {\r\n                    //alert('kj');\r\n                    const updatedOriginalRay: any = [...Originalray];\r\n                    updatedOriginalRay[index] = 1;\r\n                    setOriginalRay(updatedOriginalRay);\r\n                    ////////////\r\n                    setTimeout(() => {\r\n                        updatedOriginalRay[index] = 0;\r\n                        setOriginalRay(updatedOriginalRay);\r\n                    }, 3000);\r\n\r\n                }}\r\n                className={ray[index] === 1 ? 'fadeboyinFilter' : \"\"} ref={AddMainImageRef}\r\n                style={{ cursor: 'pointer', position: 'relatuve' }} src={\r\n                    MainImageFiltersRef.current[index]\r\n                        ? MainImageFiltersRef.current[index].src\r\n                        : null\r\n                }\r\n                alt={`Image ${index}`} />\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport const TaskbarSuperphotoImageView = React.memo(TaskbarSuperphotoImageViewx);\r\n"]},"metadata":{},"sourceType":"module"}