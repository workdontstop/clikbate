{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\Caption.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { matchTablet, matchMobile } from \"../DetectDevice\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport Axios from \"axios\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport date from \"date-and-time\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Captionx({\n  setstartTopicCap,\n  finalImageData,\n  selectedImage\n}) {\n  _s();\n\n  const [matchTabletMobile, setmatchTabletMobile] = useState(false);\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env;\n  const Value = {\n    caption: \"top\",\n    topic: \"super\"\n  };\n  const [captionvalues, setcaptionvalues] = useState(Value); ///\n  ///\n  ///DARKMODE FROM REDUX\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  var pcfont = 2.9;\n  var mobilefont = 4.8; //\n  ///\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\n\n  useEffect(() => {\n    if (matchMobile || matchTablet) {\n      setmatchTabletMobile(true);\n    }\n  }, []);\n  const UploadSuperData = useCallback(() => {\n    // Creating object of current date and time\n    // by using Date()\n    const now = new Date(); // Formatting the date and time\n    // by using date.format() method\n\n    const datevalue = date.format(now, \"YYYY_MM_DD_HH_mm_ss\");\n    let formData = new FormData();\n    const blob1 = new Blob([\"topic\"], {\n      type: \"text/plain\"\n    });\n    const blob2 = new Blob([\"captioin\"], {\n      type: \"text/plain\"\n    });\n    var newBlob = new Blob();\n\n    for (let i = 0; i < selectedImage.length + 2; i++) {\n      formData.append(\"final\", finalImageData[i], `blob${i}${datevalue}`);\n    }\n\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/upload`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n  }, [finalImageData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: darkmodeReducer ? \"mobileTextfield-backplateColorDark\" : \"mobileTextfield-backplateColorLight\",\n      style: {\n        padding: \"0px\",\n        height: \"100%\",\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        style: {\n          margin: \"auto\",\n          textAlign: \"center\",\n          height: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: () => {\n            UploadSuperData();\n          },\n          className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \",\n          style: {\n            margin: \"auto\",\n            color: \"#ffffff\",\n            fontSize: matchTabletMobile ? `${mobilefont}vh` : `${pcfont}vw`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Captionx, \"M+nh9fa/wDsqUIEps8rIGQJqicM=\", false, function () {\n  return [useSelector];\n});\n\n_c = Captionx;\nexport const Caption = /*#__PURE__*/React.memo(Captionx);\n_c2 = Caption;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Captionx\");\n$RefreshReg$(_c2, \"Caption\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/Caption.tsx"],"names":["React","useState","useCallback","useEffect","matchTablet","matchMobile","Grid","useSelector","Axios","CloseIcon","date","Captionx","setstartTopicCap","finalImageData","selectedImage","matchTabletMobile","setmatchTabletMobile","REACT_APP_SUPERSTARZ_URL","process","env","Value","caption","topic","captionvalues","setcaptionvalues","darkmode","state","GlobalReducer","darkmodeReducer","pcfont","mobilefont","UploadSuperData","now","Date","datevalue","format","formData","FormData","blob1","Blob","type","blob2","newBlob","i","length","append","post","headers","padding","height","zIndex","margin","textAlign","color","fontSize","Caption","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Grid, GridSize } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { ImageTobeFiltered } from \"./ImageTobeFiltered\";\r\nimport { FilterModeArrow } from \"./FilterModeArrow\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { convertHexToRGB } from \"material-ui/utils/colorManipulator\";\r\nimport InsertPhotoIcon from \"@mui/icons-material/InsertPhoto\";\r\nimport FormatColorTextIcon from \"@mui/icons-material/FormatColorText\";\r\nimport UndoIcon from \"@mui/icons-material/Undo\";\r\nimport LayersIcon from \"@mui/icons-material/Layers\";\r\nimport FormatSizeIcon from \"@mui/icons-material/FormatSize\";\r\nimport FontDownloadIcon from \"@mui/icons-material/FontDownload\";\r\nimport LightbulbIcon from \"@mui/icons-material/Lightbulb\";\r\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\r\nimport TextFormatIcon from \"@mui/icons-material/TextFormat\";\r\nimport HighlightIcon from \"@mui/icons-material/Highlight\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { HexColorPicker } from \"react-colorful\";\r\nimport ColorizeIcon from \"@mui/icons-material/Colorize\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport PhotoSizeSelectLargeIcon from \"@mui/icons-material/PhotoSizeSelectLarge\";\r\nimport CropRotateIcon from \"@mui/icons-material/CropRotate\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport RestoreIcon from \"@mui/icons-material/Restore\";\r\nimport SettingsBackupRestoreIcon from \"@mui/icons-material/SettingsBackupRestore\";\r\nimport date from \"date-and-time\";\r\n\r\nfunction Captionx({\r\n  setstartTopicCap,\r\n  finalImageData,\r\n  selectedImage,\r\n}: any): JSX.Element {\r\n  const [matchTabletMobile, setmatchTabletMobile] = useState<boolean>(false);\r\n\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n\r\n  const Value = {\r\n    caption: \"top\",\r\n    topic: \"super\",\r\n  };\r\n\r\n  const [captionvalues, setcaptionvalues] = useState(Value);\r\n\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  var pcfont = 2.9;\r\n\r\n  var mobilefont = 4.8;\r\n\r\n  //\r\n  ///\r\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\r\n  useEffect(() => {\r\n    if (matchMobile || matchTablet) {\r\n      setmatchTabletMobile(true);\r\n    }\r\n  }, []);\r\n\r\n  const UploadSuperData = useCallback(\r\n    () => {\r\n      // Creating object of current date and time\r\n      // by using Date()\r\n      const now = new Date();\r\n\r\n      // Formatting the date and time\r\n      // by using date.format() method\r\n      const datevalue = date.format(now, \"YYYY_MM_DD_HH_mm_ss\");\r\n      let formData = new FormData();\r\n\r\n      const blob1 = new Blob([\"topic\"], { type: \"text/plain\" });\r\n      const blob2 = new Blob([\"captioin\"], { type: \"text/plain\" });\r\n      var newBlob = new Blob();\r\n      for (let i = 0; i < selectedImage.length + 2; i++) {\r\n        formData.append(\"final\", finalImageData[i], `blob${i}${datevalue}`);\r\n      }\r\n\r\n      Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/upload`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n    },\r\n    [finalImageData]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        className={\r\n          darkmodeReducer\r\n            ? \"mobileTextfield-backplateColorDark\"\r\n            : \"mobileTextfield-backplateColorLight\"\r\n        }\r\n        style={{\r\n          padding: \"0px\",\r\n          height: \"100%\",\r\n          zIndex: 1,\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            padding: \"0px\",\r\n          }}\r\n        ></Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          style={{\r\n            margin: \"auto\",\r\n            textAlign: \"center\",\r\n            height: \"0px\",\r\n          }}\r\n        >\r\n          {\r\n            <CloseIcon\r\n              onClick={() => {\r\n                UploadSuperData();\r\n              }}\r\n              className={\r\n                darkmodeReducer\r\n                  ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \"\r\n                  : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \"\r\n              }\r\n              style={{\r\n                margin: \"auto\",\r\n                color: \"#ffffff\",\r\n                fontSize: matchTabletMobile ? `${mobilefont}vh` : `${pcfont}vw`,\r\n              }}\r\n            />\r\n          }\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Caption = React.memo(Captionx);\r\n"]},"metadata":{},"sourceType":"module"}