{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\ModalLog.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState, useCallback } from \"react\";\nimport image1 from \"./images/modalpic1.jpg\";\nimport image2 from \"./images/modalpic2.jpg\";\nimport image3 from \"./images/modalpic3.png\";\nimport image4 from \"./images/modalpic4.jpg\";\nimport image5 from \"./images/modalpic5.jpg\";\nimport { useSpring } from \"react-spring\";\nimport image6 from \"./images/modalpic6.jpg\";\nimport \"./ModalLog.css\";\nimport Axios from \"axios\";\nimport PcModalLog from \"./PcModalLog\";\nimport MobileModalLog from \"./MobileModalLog\";\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nAxios.defaults.withCredentials = true;\nexport default function ModalLog({\n  matchPc,\n  matchTablet,\n  screenHeight,\n  formtype,\n  CloseModalForm,\n  showModalForm,\n  PaperStyle,\n  signupclass,\n  loginclass,\n  darkmode\n}) {\n  _s();\n\n  const [mobileZoom, setMobileZoom] = useState(false); ///\n  ///\n  ///HISTORY VARIABLE\n\n  const history = useHistory(); ///\n  ///\n  ///SUPERSTARZ ICON SELECT\n\n  var SuperIcon = \"\";\n  darkmode ? SuperIcon = SuperstarzIconDark : SuperIcon = SuperstarzIconLight; ///\n  ///\n  ///\n  /// ALL VARIABLES ,ERROR VARIABLES,CONSTANT AND  STATES\n\n  const initialLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialRawSignValue = {\n    inputedEmail: \"\",\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialCleanSignValue = {\n    inputedEmail: \"\",\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialCleanLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialErrorSignValue = {\n    inputedEmail: 0,\n    inputedUsername: 0,\n    inputedPassword: 0\n  };\n  const initialErrorLogValue = {\n    inputedUsername: 0,\n    inputedPassword: 0\n  };\n  const initialspinner = {\n    inputedUsername: false,\n    inputedPassword: false,\n    inputedEmail: false\n  };\n  const [showimage, setShowimage] = useState(\" \");\n  const [zoomedModal, setZoomedModal] = useState(false);\n  const [wideImage, setWideImage] = useState(false);\n  const EmailCheckingTimer = useRef(null);\n  const UsernameCheckingTimer = useRef(null);\n  const PasswordCheckingTimer = useRef(null);\n  const [rawLoginValues, setRawLoginValues] = useState(initialLogValue);\n  const [cantPassBadEmail, setCantPassBadEmail] = useState(false);\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\n  const [cleanSignupValues, setCleanSignupValues] = useState(initialCleanSignValue);\n  const [cleanLoginValues, setCleanLoginValues] = useState(initialCleanLogValue);\n  const [errorsSignupValues, setErrorsSignupValues] = useState(initialErrorSignValue);\n  const [errorsLoginValues, setErrorsLoginValues] = useState(initialErrorLogValue);\n  const [serverErrorData, setServerErrorData] = useState(null);\n  const [serverErrorDisplay, setServerErrorDisplay] = useState(0);\n  const [serverEmojiplain, setserverEmojiplain] = useState(true);\n  const [loginShowPassword, setLoginShowPassword] = useState(false);\n  const [signupShowPassword, setSignupShowPassword] = useState(false);\n  const loginShowPasswordTimer = useRef(null);\n  const signupShowPasswordTimer = useRef(null);\n  const [errorFormChecking, setErrorFormChecking] = useState(initialspinner);\n  const [imageHeightoverflow, setImageHeightoverflow] = useState(false);\n  const ModalSlidingImageRef = useRef(null);\n  let usernameErrorData = null;\n  let usernameErrorDisplay = 0;\n  let emailErrorData = null;\n  let emailErrorDisplay = 0;\n  let passwordErrorData = null;\n  let passwordErrorDisplay = 0;\n\n  switch (errorsSignupValues.inputedUsername) {\n    case 1:\n      usernameErrorData = \"Usernames can only use letters, numbers, underscores and periods \";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 2:\n      usernameErrorData = \"Username is taken\";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 3:\n      usernameErrorData = \"Username is available\";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 4:\n      usernameErrorData = \"Username  required\";\n      usernameErrorDisplay = 1;\n      break;\n\n    default:\n      usernameErrorData = null;\n      usernameErrorDisplay = 0;\n      break;\n  }\n\n  switch (errorsSignupValues.inputedPassword) {\n    case 1:\n      passwordErrorData = \"Password must be at Least 8 characters\";\n      passwordErrorDisplay = 1;\n      break;\n\n    case 2:\n      passwordErrorData = \"Checking\";\n      passwordErrorDisplay = 1;\n      break;\n\n    case 4:\n      passwordErrorData = \" Password  required \";\n      passwordErrorDisplay = 1;\n      break;\n\n    default:\n      passwordErrorData = null;\n      passwordErrorDisplay = 0;\n      break;\n  }\n\n  switch (errorsSignupValues.inputedEmail) {\n    case 1:\n      emailErrorData = \"Checking\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 2:\n      emailErrorData = \"Email address is not valid\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 3:\n      emailErrorData = \"Email is restricted to certain characters\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 4:\n      emailErrorData = \"Email required\";\n      emailErrorDisplay = 1;\n      break;\n\n    default:\n      emailErrorData = null;\n      emailErrorDisplay = 0;\n      break;\n  } ///\n  ///\n  ///\n  ///ALL VARIABLES ,ERROR VARIABLES,CONSTANT AND  STATES\n  ///\n  ///\n  ///\n  /// USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\n\n\n  const ModalBackgroundRef = useRef(null);\n\n  const onBackgroundFocus = e => {\n    if (ModalBackgroundRef.current === e.target) {\n      CloseModalForm(0);\n    }\n  }; ///\n  ///\n  ///\n  /// ESCAPE KEY CLOSE MODAL\n\n\n  const escapePress = useCallback(e => {\n    if (e.key === \"Escape\" && showModalForm) {\n      CloseModalForm(0);\n    }\n  }, [showModalForm, CloseModalForm]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escapePress);\n    return () => document.removeEventListener(\"keydown\", escapePress);\n  }, [escapePress]); ///\n  ///\n  ///\n  ///CLOSE MODAL FORM ON SMALL ICON PRESS\n\n  const iconclicked = () => {\n    CloseModalForm(0);\n  }; ///\n  ///\n  ///\n  /// RANDOMISE IMAGE\n\n\n  useEffect(() => {\n    let imagecontrol = [1, 2, 3, 4, 5, 6];\n    var result = null;\n    var randomimage = imagecontrol[Math.floor(Math.random() * imagecontrol.length)];\n    const img = new Image(); ///new image instance\n\n    if (randomimage === 1) {\n      result = image1;\n    } else if (randomimage === 2) {\n      result = image2;\n    } else if (randomimage === 3) {\n      result = image3;\n    } else if (randomimage === 4) {\n      result = image4;\n    } else if (randomimage === 5) {\n      result = image5;\n    } else {\n      result = image6;\n    }\n\n    img.src = result; //src forces a download\n\n    setShowimage(result);\n  }, []); ///\n  ///\n  ///\n  /// GET IMAGE WIDTH ,HEIGHT AND SET WIDE IMAGE\n\n  const onimageload = e => {\n    if (ModalSlidingImageRef && ModalSlidingImageRef.current) {\n      const imageHeight = ModalSlidingImageRef.current.clientHeight;\n      const imageWidth = ModalSlidingImageRef.current.clientWidth;\n\n      if (imageHeight + imageWidth / imageHeight * 3 > screenHeight) {\n        setImageHeightoverflow(true);\n      }\n\n      if (imageWidth > imageHeight + imageWidth / imageHeight * 100) {\n        setWideImage(true);\n      }\n    }\n  };\n\n  var gg = imageHeight / imageWidth; ///\n  ///\n  ///\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n\n  const mobileLogmodalanimation = useSpring({\n    config: {\n      duration: 1000\n    },\n    opacity: mobileZoom ? 1 : 0.99,\n    transform: mobileZoom ? `translateY(0%)` : `translateY(-40vh)`\n  }); ///\n  ///\n  ///\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n\n  const modalanimation = useSpring({\n    config: {\n      duration: 1000\n    },\n    opacity: showModalForm ? 1 : 0.9,\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`\n  });\n  const modalanimationTwo = useSpring({\n    config: {\n      duration: 900\n    },\n    opacity: showModalForm ? 1 : 0.9,\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`\n  }); ///\n  ///\n  ///\n  /// SHOW A FULLSCREEN MODAL VIEW\n\n  const zoomlogmodal = () => {\n    setZoomedModal(!zoomedModal);\n  }; ///\n  ///\n  ///\n  /// DYNAMIC MODAL LAYOUT VARIABLES\n\n\n  const wideImageControlTrue = \"75vw\";\n  const wideImageControlfalse = \"70vw\";\n  const zoomImageControl = \"100vw\";\n  const GridMiniAwide = 8;\n  const GridMiniBwide = 4;\n  const GridMiniAlong = 7;\n  const GridMiniBlong = 5;\n  const GridZoomAwide = 8;\n  const GridZoomBwide = 4;\n  const GridZoomAlong = 6;\n  const GridZoomBlong = 6;\n  let GridHolderA = 7;\n  let GridHolderB = 5;\n  let GridxA = 7;\n  let GridxB = 5;\n  let GridyA = 7;\n  let GridyB = 5;\n  let wideImageControl = \"70vw\";\n  let imageReal = \"75vw\";\n  let borderGrid = \"11px\";\n  var WidthHolder = \"82%\";\n  var opacitySlidingModalImage = \"0\";\n  var zIndexModalImageSmall = 10;\n  var zIndexModalImageZoom = 0;\n  var opacityFixedModalImage = \"1\";\n  var slidingModalImageBack = \"none\";\n  var slidingImageWidth = \"50%\";\n\n  if (zoomedModal) {\n    if (imageHeightoverflow) {\n      opacitySlidingModalImage = \"1\";\n      zIndexModalImageSmall = 0;\n      zIndexModalImageZoom = 10;\n      opacityFixedModalImage = \"0\";\n      slidingModalImageBack = \"block\";\n    }\n\n    borderGrid = \"0px\";\n\n    if (wideImage) {\n      slidingImageWidth = \"66%\";\n      WidthHolder = \"76%\";\n      wideImageControl = wideImageControlTrue;\n      GridxA = GridZoomAwide;\n      GridxB = GridZoomBwide;\n    } else {\n      slidingImageWidth = \"50%\";\n      WidthHolder = \"88%\";\n      wideImageControl = wideImageControlfalse;\n      GridxA = GridZoomAlong;\n      GridxB = GridZoomBlong;\n    }\n\n    imageReal = zoomImageControl;\n    GridHolderA = GridxA;\n    GridHolderB = GridxB;\n  } else {\n    WidthHolder = \"82%\";\n    borderGrid = \"11px\";\n\n    if (wideImage) {\n      wideImageControl = wideImageControlTrue;\n      GridyA = GridMiniAwide;\n      GridyB = GridMiniBwide;\n    } else {\n      wideImageControl = wideImageControlfalse;\n      GridyA = GridMiniAlong;\n      GridyB = GridMiniBlong;\n    }\n\n    imageReal = wideImageControl;\n    GridHolderA = GridyA;\n    GridHolderB = GridyB;\n  } ///\n  ///\n  ///\n  /// DYNAMIC MODAL LAYOUT VARIABLES\n  ///\n  ///\n  ///\n  /// SHOW  LOGIN PASSWORD FOR A WHILE\n\n\n  const ShowLoginPasswordForaWhile = () => {\n    if (loginShowPasswordTimer.current) {\n      clearTimeout(loginShowPasswordTimer.current);\n    }\n\n    setLoginShowPassword(!loginShowPassword);\n    loginShowPasswordTimer.current = setTimeout(() => {\n      setLoginShowPassword(false);\n    }, 1500);\n  }; ///\n  ///\n  ///\n  /// SHOW  SIGNUP PASSWORD FOR A WHILE\n\n\n  const ShowSignupPasswordForaWhile = () => {\n    if (signupShowPasswordTimer.current) {\n      clearTimeout(signupShowPasswordTimer.current);\n    }\n\n    setSignupShowPassword(!signupShowPassword);\n    signupShowPasswordTimer.current = setTimeout(() => {\n      setSignupShowPassword(false);\n    }, 1500);\n  }; ///\n  ///\n  ///\n  /// SANITISE SIGN UP FORM INPUT CLIENT SIDE\n\n\n  const updateSignvalues = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"inputedUsername\") {\n      let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\n      let cleanValue = value.replace(usernameCleaner, \"\");\n      let usernameLimiter = /^.{26}$/;\n      let finalUsername = cleanValue.replace(usernameLimiter, \"\");\n      let checkUsernameClean = usernameCleaner.test(value);\n      let checkUsernameLimited = usernameLimiter.test(cleanValue);\n\n      if (checkUsernameClean) {\n        if (UsernameCheckingTimer.current) {\n          clearTimeout(UsernameCheckingTimer.current);\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n        }\n\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n      } else {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      if (!checkUsernameLimited && !checkUsernameClean) {\n        /// AXIOS REQUEST FOR CHECK USERNAME\n        if (UsernameCheckingTimer.current) {\n          clearTimeout(UsernameCheckingTimer.current);\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n          setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 0\n          });\n        }\n\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: true\n        });\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 2\n        });\n        UsernameCheckingTimer.current = setTimeout(() => {\n          Axios.post(\"http://192.168.43.136:3001/usernamecheck\", {\n            value: finalUsername\n          }).then(response => {\n            if (response.data.message === \"username is not unique\") {\n              setErrorsSignupValues({ ...errorsSignupValues,\n                [name]: 2\n              });\n              setErrorFormChecking({ ...errorFormChecking,\n                [name]: false\n              });\n            } else {\n              setErrorsSignupValues({ ...errorsSignupValues,\n                [name]: 0\n              });\n              setErrorFormChecking({ ...errorFormChecking,\n                [name]: false\n              });\n            }\n          }).catch(function (error) {\n            if (error.response) {\n              setErrorsSignupValues({ ...errorsSignupValues,\n                [name]: 3\n              });\n              setErrorFormChecking({ ...errorFormChecking,\n                [name]: false\n              });\n            } else if (error.request) {\n              setErrorsSignupValues({ ...errorsSignupValues,\n                [name]: 0\n              });\n              setErrorFormChecking({ ...errorFormChecking,\n                [name]: false\n              });\n            } else {\n              setErrorsSignupValues({ ...errorsSignupValues,\n                [name]: 0\n              });\n              setErrorFormChecking({ ...errorFormChecking,\n                [name]: false\n              });\n            }\n          });\n        }, 3000); /// AXIOS REQUEST FOR CHECK USERNAME\n\n        setRawSignupValues({ ...rawSignupValues,\n          [name]: finalUsername\n        });\n        setCleanSignupValues({ ...cleanSignupValues,\n          [name]: finalUsername\n        });\n      } ///\n\n    } else if (name === \"inputedEmail\") {\n      const emailValidation = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      const emailCleaner = /[^*$%#+@a-z0-9áéíóúñü \\.'_]/gim;\n      let finalEmail = value.replace(emailCleaner, \"\");\n      let checkEmailClean = emailCleaner.test(value);\n      let checkEmailValidated = emailValidation.test(String(value).toLowerCase());\n\n      if (EmailCheckingTimer.current) {\n        clearTimeout(EmailCheckingTimer.current);\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: false\n        });\n      }\n\n      if (!checkEmailValidated) {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: true\n        });\n        EmailCheckingTimer.current = setTimeout(() => {\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n          setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 2\n          });\n          checkEmailClean && setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 3\n          });\n        }, 2000);\n      } else {\n        if (EmailCheckingTimer.current) {\n          clearTimeout(EmailCheckingTimer.current);\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n        }\n\n        checkEmailClean ? setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 3\n        }) : setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: finalEmail\n      });\n      setCleanSignupValues({ ...cleanSignupValues,\n        [name]: finalEmail\n      }); ////////\n    } else {\n      if (PasswordCheckingTimer.current) {\n        clearTimeout(PasswordCheckingTimer.current);\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: false\n        });\n      }\n\n      setErrorsSignupValues({ ...errorsSignupValues,\n        [name]: 2\n      });\n      setErrorFormChecking({ ...errorFormChecking,\n        [name]: true\n      });\n      PasswordCheckingTimer.current = setTimeout(() => {\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: false\n        });\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n      }, 2000);\n      var passwordLength = value.length;\n\n      if (passwordLength >= 8 || passwordLength === 0) {\n        if (PasswordCheckingTimer.current) {\n          clearTimeout(PasswordCheckingTimer.current);\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n        }\n\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: value\n      });\n      setCleanSignupValues({ ...cleanSignupValues,\n        [name]: value\n      });\n    }\n  }; ///\n  ///\n  ///\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\n\n\n  const signmeup = () => {\n    if (cleanSignupValues.inputedEmail && cleanSignupValues.inputedUsername && cleanSignupValues.inputedPassword && errorsSignupValues.inputedPassword === 0) {\n      if (errorsSignupValues.inputedEmail === 0) {\n        Axios.post(\"http://192.168.43.136:3001/registration\", {\n          values: cleanSignupValues\n        }).then(response => {\n          if (response.data.message === \"username not unique\") {\n            setServerErrorData(\"Username is taken\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          } else if (response.data.message === \"Registration Successful\") {\n            console.log(response.status);\n            alert(\"REGISTRATION COMPLETE\");\n          } else {\n            setServerErrorData(\"Something went wrong\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          }\n        }).catch(function (error) {\n          if (error.response) {\n            // Request made and server responded\n            //express typo can activate this\n            let textFieldParam = error.response.data.error.errors[0].param;\n            let affectedTextField = \" \";\n\n            if (textFieldParam === \"values.inputedPassword\") {\n              affectedTextField = \"Password must be at Least 8 characters\";\n            } else if (textFieldParam === \"values.inputedEmail\") {\n              affectedTextField = \"Email address is not valid\";\n            } else {\n              affectedTextField = \"Usernames use letters, numbers, underscores and periods\";\n            }\n\n            let dynamicError = `${affectedTextField}.  ${error.response.data.error.errors[0].msg} `;\n            setServerErrorData(dynamicError);\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          } else if (error.request) {\n            // The request was made but no response was received Or request not made\n            // Axios.post(\"http://localhost:3003/reg\" can activate this error\n            setServerErrorData(\"Error connecting to server, Check your connection\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          } else {\n            // Something happened in setting up the request that triggered an Error\n            setServerErrorData(\"Request setup failed , Pls try again\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          }\n        });\n      } else {\n        setCantPassBadEmail(true);\n        setTimeout(() => {\n          setCantPassBadEmail(false);\n        }, 3000);\n      }\n    } else {\n      let passwordErrorHolder = errorsSignupValues.inputedPassword;\n      let emailErrorHolder = errorsSignupValues.inputedEmail;\n      let usernameErrorHolder = errorsSignupValues.inputedUsername;\n\n      if (!cleanSignupValues.inputedPassword) {\n        passwordErrorHolder = 4;\n      }\n\n      if (!cleanSignupValues.inputedEmail) {\n        emailErrorHolder = 4;\n      }\n\n      if (!cleanSignupValues.inputedUsername) {\n        usernameErrorHolder = 4;\n      }\n\n      setErrorsSignupValues({ ...errorsSignupValues,\n        inputedPassword: passwordErrorHolder,\n        inputedEmail: emailErrorHolder,\n        inputedUsername: usernameErrorHolder\n      });\n    }\n  }; ///\n  ///\n  ///\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\n\n\n  const updateLoginvalues = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setErrorsLoginValues({ ...errorsLoginValues,\n      [name]: 0\n    });\n    setRawLoginValues({ ...rawLoginValues,\n      [name]: value\n    });\n    setCleanLoginValues({ ...cleanLoginValues,\n      [name]: value\n    });\n  }; ///\n  ///\n  ///\n  /// SENDING LOG IN  DATA TO SERVER SIDE\n\n\n  const logmein = () => {\n    if (cleanLoginValues.inputedUsername && cleanLoginValues.inputedPassword) {\n      Axios.post(\"http://192.168.43.136:3001/loging\", {\n        values: cleanLoginValues\n      }, {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.message === \"Wrong Password\") {\n          setServerErrorData(\"Wrong username and  password combination\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(false);\n        } else {\n          if (response.data.message === \"Wrong username\") {\n            setServerErrorData(\"Username does not exist\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(false);\n          } else if (response.data.payload) {\n            history.push({\n              pathname: \"/supercheck\",\n              state: {\n                userdata: response.data.payload\n              }\n            });\n          } else {\n            setServerErrorData(\"User info could not be retrieved\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(false);\n          }\n        }\n      }).catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          //express typo can activate this\n          // Request made and server responded\n          //express typo can activate this\n          //let textFieldParam = error.response.data.error.errors[0].param;\n          let affectedTextField = \"Wrong password and username combination\";\n          let dynamicError = `${affectedTextField}  `;\n          setServerErrorData(dynamicError);\n          setServerErrorDisplay(1);\n          setserverEmojiplain(false);\n        } else if (error.request) {\n          // The request was made but no response was received Or request not made\n          // Axios.post(\"http://localhost:3003/reg\" can activate this error\n          setServerErrorData(\"Error connecting to server, Check your connection\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(true);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          setServerErrorData(\"Request setup failed , Pls try again\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(true);\n        }\n      });\n    } else {\n      let passwordErrorHolder = errorsLoginValues.inputedPassword;\n      let usernameErrorHolder = errorsLoginValues.inputedUsername;\n\n      if (!cleanLoginValues.inputedPassword) {\n        passwordErrorHolder = 1;\n      }\n\n      if (!cleanLoginValues.inputedUsername) {\n        usernameErrorHolder = 1;\n      }\n\n      setErrorsLoginValues({ ...errorsLoginValues,\n        inputedPassword: passwordErrorHolder,\n        inputedUsername: usernameErrorHolder\n      });\n    }\n  }; ///\n  ///\n  ///\n  /// LOGOUT\n\n\n  const logout = () => {\n    Axios.post(\"http://localhost:3001/logout\", {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.message === \"cookie deleted\") {\n        alert(\"logout  complete\");\n      } else if (response.data.message === \"cookie null\") {\n        alert(\"logged out  already\");\n      }\n    }).catch(function (error) {\n      alert(\"logout fail\");\n    });\n  };\n\n  const DialogeData = {\n    ModalSlidingImageRef: ModalSlidingImageRef,\n    opacitySlidingModalImage: opacitySlidingModalImage,\n    opacityFixedModalImage: opacityFixedModalImage,\n    borderGrid: borderGrid,\n    imageReal: imageReal,\n    onBackgroundFocus: onBackgroundFocus,\n    slidingModalImageBack: slidingModalImageBack,\n    slidingImageWidth: slidingImageWidth,\n    ModalBackgroundRef: ModalBackgroundRef,\n    zoomlogmodal: zoomlogmodal,\n    showimage: showimage,\n    serverEmojiplain: serverEmojiplain,\n    serverErrorData: serverErrorData,\n    setServerErrorData: setServerErrorData,\n    serverErrorDisplay: serverErrorDisplay,\n    darkmode: darkmode,\n    PaperStyle: PaperStyle,\n    GridHolderA: GridHolderA,\n    iconclicked: iconclicked,\n    SuperIcon: SuperIcon,\n    onimageload: onimageload,\n    formtype: formtype,\n    GridHolderB: GridHolderB,\n    zoomedModal: zoomedModal,\n    logout: logout,\n    errorsLoginInputedUsername: errorsLoginValues.inputedUsername,\n    errorsLoginInputedPassword: errorsLoginValues.inputedPassword,\n    WidthHolder: WidthHolder,\n    updateLoginvalues: updateLoginvalues,\n    rawLogininputedUsername: rawLoginValues.inputedUsername,\n    rawLogininputedPassword: rawLoginValues.inputedPassword,\n    loginShowPassword: loginShowPassword,\n    ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\n    logmein: logmein,\n    loginclass: loginclass,\n    errorFormCheckinginputedEmail: errorFormChecking.inputedEmail,\n    cantPassBadEmail: cantPassBadEmail,\n    emailErrorDisplay: emailErrorDisplay,\n    emailErrorData: emailErrorData,\n    updateSignvalues: updateSignvalues,\n    rawSignupValuesinputedEmail: rawSignupValues.inputedEmail,\n    errorsSignupValuesinputedUsername: errorsSignupValues.inputedUsername,\n    errorFormCheckinginputedUsername: errorFormChecking.inputedUsername,\n    usernameErrorDisplay: usernameErrorDisplay,\n    usernameErrorData: usernameErrorData,\n    rawSignupValuesinputedUsername: rawSignupValues.inputedUsername,\n    signupShowPassword: signupShowPassword,\n    rawSignupValuesinputedPassword: rawSignupValues.inputedPassword,\n    ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n    errorFormCheckinginputedPassword: errorFormChecking.inputedPassword,\n    passwordErrorDisplay: passwordErrorDisplay,\n    passwordErrorData: passwordErrorData,\n    signupclass: signupclass,\n    signmeup: signmeup,\n    showModalForm: showModalForm,\n    modalanimation: modalanimation,\n    modalanimationTwo: modalanimationTwo,\n    zIndexModalImageSmall: zIndexModalImageSmall,\n    zIndexModalImageZoom: zIndexModalImageZoom\n  };\n  const DialogeDataMobile = {\n    onBackgroundFocus: onBackgroundFocus,\n    ModalBackgroundRef: ModalBackgroundRef,\n    opacitySlidingModalImage: opacitySlidingModalImage,\n    opacityFixedModalImage: opacityFixedModalImage,\n    borderGrid: borderGrid,\n    imageReal: imageReal,\n    slidingModalImageBack: slidingModalImageBack,\n    slidingImageWidth: slidingImageWidth,\n    zoomlogmodal: zoomlogmodal,\n    showimage: showimage,\n    serverEmojiplain: serverEmojiplain,\n    serverErrorData: serverErrorData,\n    setServerErrorData: setServerErrorData,\n    serverErrorDisplay: serverErrorDisplay,\n    darkmode: darkmode,\n    PaperStyle: PaperStyle,\n    GridHolderA: GridHolderA,\n    iconclicked: iconclicked,\n    SuperIcon: SuperIcon,\n    onimageload: onimageload,\n    formtype: formtype,\n    GridHolderB: GridHolderB,\n    zoomedModal: zoomedModal,\n    logout: logout,\n    errorsLoginInputedUsername: errorsLoginValues.inputedUsername,\n    errorsLoginInputedPassword: errorsLoginValues.inputedPassword,\n    WidthHolder: WidthHolder,\n    updateLoginvalues: updateLoginvalues,\n    rawLogininputedUsername: rawLoginValues.inputedUsername,\n    rawLogininputedPassword: rawLoginValues.inputedPassword,\n    loginShowPassword: loginShowPassword,\n    ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\n    logmein: logmein,\n    loginclass: loginclass,\n    errorFormCheckinginputedEmail: errorFormChecking.inputedEmail,\n    cantPassBadEmail: cantPassBadEmail,\n    emailErrorDisplay: emailErrorDisplay,\n    emailErrorData: emailErrorData,\n    updateSignvalues: updateSignvalues,\n    rawSignupValuesinputedEmail: rawSignupValues.inputedEmail,\n    errorsSignupValuesinputedUsername: errorsSignupValues.inputedUsername,\n    errorFormCheckinginputedUsername: errorFormChecking.inputedUsername,\n    usernameErrorDisplay: usernameErrorDisplay,\n    usernameErrorData: usernameErrorData,\n    rawSignupValuesinputedUsername: rawSignupValues.inputedUsername,\n    signupShowPassword: signupShowPassword,\n    rawSignupValuesinputedPassword: rawSignupValues.inputedPassword,\n    ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n    errorFormCheckinginputedPassword: errorFormChecking.inputedPassword,\n    passwordErrorDisplay: passwordErrorDisplay,\n    passwordErrorData: passwordErrorData,\n    signupclass: signupclass,\n    signmeup: signmeup,\n    showModalForm: showModalForm,\n    modalanimation: modalanimation,\n    modalanimationTwo: modalanimationTwo,\n    mobileLogmodalanimation: mobileLogmodalanimation,\n    mobileZoom: mobileZoom,\n    setMobileZoom: setMobileZoom\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModalForm ? matchPc ? /*#__PURE__*/_jsxDEV(PcModalLog, { ...DialogeData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 11\n    }, this) : matchTablet ? /*#__PURE__*/_jsxDEV(MobileModalLog, { ...DialogeDataMobile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(MobileModalLog, { ...DialogeDataMobile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 11\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(ModalLog, \"kdxucqCRmz8giISwlSh/lHCx4YU=\", false, function () {\n  return [useHistory, useSpring, useSpring, useSpring];\n});\n\n_c = ModalLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalLog\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/ModalLog.tsx"],"names":["useRef","useEffect","useState","useCallback","image1","image2","image3","image4","image5","useSpring","image6","Axios","PcModalLog","MobileModalLog","SuperstarzIconLight","SuperstarzIconDark","useHistory","defaults","withCredentials","ModalLog","matchPc","matchTablet","screenHeight","formtype","CloseModalForm","showModalForm","PaperStyle","signupclass","loginclass","darkmode","mobileZoom","setMobileZoom","history","SuperIcon","initialLogValue","inputedUsername","inputedPassword","initialRawSignValue","inputedEmail","initialCleanSignValue","initialCleanLogValue","initialErrorSignValue","initialErrorLogValue","initialspinner","showimage","setShowimage","zoomedModal","setZoomedModal","wideImage","setWideImage","EmailCheckingTimer","UsernameCheckingTimer","PasswordCheckingTimer","rawLoginValues","setRawLoginValues","cantPassBadEmail","setCantPassBadEmail","rawSignupValues","setRawSignupValues","cleanSignupValues","setCleanSignupValues","cleanLoginValues","setCleanLoginValues","errorsSignupValues","setErrorsSignupValues","errorsLoginValues","setErrorsLoginValues","serverErrorData","setServerErrorData","serverErrorDisplay","setServerErrorDisplay","serverEmojiplain","setserverEmojiplain","loginShowPassword","setLoginShowPassword","signupShowPassword","setSignupShowPassword","loginShowPasswordTimer","signupShowPasswordTimer","errorFormChecking","setErrorFormChecking","imageHeightoverflow","setImageHeightoverflow","ModalSlidingImageRef","usernameErrorData","usernameErrorDisplay","emailErrorData","emailErrorDisplay","passwordErrorData","passwordErrorDisplay","ModalBackgroundRef","onBackgroundFocus","e","current","target","escapePress","key","document","addEventListener","removeEventListener","iconclicked","imagecontrol","result","randomimage","Math","floor","random","length","img","Image","src","onimageload","imageHeight","clientHeight","imageWidth","clientWidth","gg","mobileLogmodalanimation","config","duration","opacity","transform","modalanimation","modalanimationTwo","zoomlogmodal","wideImageControlTrue","wideImageControlfalse","zoomImageControl","GridMiniAwide","GridMiniBwide","GridMiniAlong","GridMiniBlong","GridZoomAwide","GridZoomBwide","GridZoomAlong","GridZoomBlong","GridHolderA","GridHolderB","GridxA","GridxB","GridyA","GridyB","wideImageControl","imageReal","borderGrid","WidthHolder","opacitySlidingModalImage","zIndexModalImageSmall","zIndexModalImageZoom","opacityFixedModalImage","slidingModalImageBack","slidingImageWidth","ShowLoginPasswordForaWhile","clearTimeout","setTimeout","ShowSignupPasswordForaWhile","updateSignvalues","name","value","usernameCleaner","cleanValue","replace","usernameLimiter","finalUsername","checkUsernameClean","test","checkUsernameLimited","post","then","response","data","message","catch","error","request","emailValidation","emailCleaner","finalEmail","checkEmailClean","checkEmailValidated","String","toLowerCase","passwordLength","signmeup","values","console","log","status","alert","textFieldParam","errors","param","affectedTextField","dynamicError","msg","passwordErrorHolder","emailErrorHolder","usernameErrorHolder","updateLoginvalues","logmein","payload","push","pathname","state","userdata","logout","DialogeData","errorsLoginInputedUsername","errorsLoginInputedPassword","rawLogininputedUsername","rawLogininputedPassword","errorFormCheckinginputedEmail","rawSignupValuesinputedEmail","errorsSignupValuesinputedUsername","errorFormCheckinginputedUsername","rawSignupValuesinputedUsername","rawSignupValuesinputedPassword","errorFormCheckinginputedPassword","DialogeDataMobile"],"mappings":"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","sourcesContent":["import { useRef, useEffect, useState, useCallback } from \"react\";\r\n\r\nimport image1 from \"./images/modalpic1.jpg\";\r\nimport image2 from \"./images/modalpic2.jpg\";\r\nimport image3 from \"./images/modalpic3.png\";\r\nimport image4 from \"./images/modalpic4.jpg\";\r\nimport image5 from \"./images/modalpic5.jpg\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport image6 from \"./images/modalpic6.jpg\";\r\nimport { DialogContent } from \"@material-ui/core\";\r\n\r\nimport { ImodalLog, IGrid } from \"./appFolder-Interfaces\";\r\nimport \"./ModalLog.css\";\r\nimport Axios from \"axios\";\r\nimport PcModalLog from \"./PcModalLog\";\r\nimport MobileModalLog from \"./MobileModalLog\";\r\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\r\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nAxios.defaults.withCredentials = true;\r\n\r\nexport default function ModalLog({\r\n  matchPc,\r\n  matchTablet,\r\n  screenHeight,\r\n  formtype,\r\n  CloseModalForm,\r\n  showModalForm,\r\n  PaperStyle,\r\n  signupclass,\r\n  loginclass,\r\n  darkmode,\r\n}: ImodalLog): JSX.Element {\r\n  const [mobileZoom, setMobileZoom] = useState<boolean>(false);\r\n\r\n  ///\r\n  ///\r\n  ///HISTORY VARIABLE\r\n  const history = useHistory();\r\n\r\n  ///\r\n  ///\r\n  ///SUPERSTARZ ICON SELECT\r\n  var SuperIcon = \"\";\r\n  darkmode\r\n    ? (SuperIcon = SuperstarzIconDark)\r\n    : (SuperIcon = SuperstarzIconLight);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// ALL VARIABLES ,ERROR VARIABLES,CONSTANT AND  STATES\r\n  const initialLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialRawSignValue = {\r\n    inputedEmail: \"\",\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialCleanSignValue = {\r\n    inputedEmail: \"\",\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialCleanLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialErrorSignValue = {\r\n    inputedEmail: 0,\r\n    inputedUsername: 0,\r\n    inputedPassword: 0,\r\n  };\r\n  const initialErrorLogValue = {\r\n    inputedUsername: 0,\r\n    inputedPassword: 0,\r\n  };\r\n\r\n  interface Ispinnerinterface {\r\n    inputedUsername: boolean;\r\n    inputedPassword: boolean;\r\n    inputedEmail: boolean;\r\n  }\r\n\r\n  const initialspinner: Ispinnerinterface = {\r\n    inputedUsername: false,\r\n    inputedPassword: false,\r\n    inputedEmail: false,\r\n  };\r\n  const [showimage, setShowimage] = useState<string>(\" \");\r\n  const [zoomedModal, setZoomedModal] = useState<boolean>(false);\r\n  const [wideImage, setWideImage] = useState<boolean>(false);\r\n  const EmailCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const UsernameCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const PasswordCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const [rawLoginValues, setRawLoginValues] = useState(initialLogValue);\r\n  const [cantPassBadEmail, setCantPassBadEmail] = useState<boolean>(false);\r\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\r\n  const [cleanSignupValues, setCleanSignupValues] = useState(\r\n    initialCleanSignValue\r\n  );\r\n  const [cleanLoginValues, setCleanLoginValues] =\r\n    useState(initialCleanLogValue);\r\n  const [errorsSignupValues, setErrorsSignupValues] = useState(\r\n    initialErrorSignValue\r\n  );\r\n  const [errorsLoginValues, setErrorsLoginValues] =\r\n    useState(initialErrorLogValue);\r\n\r\n  const [serverErrorData, setServerErrorData] = useState<string | null>(null);\r\n  const [serverErrorDisplay, setServerErrorDisplay] = useState<number>(0);\r\n  const [serverEmojiplain, setserverEmojiplain] = useState<boolean>(true);\r\n\r\n  const [loginShowPassword, setLoginShowPassword] = useState<boolean>(false);\r\n  const [signupShowPassword, setSignupShowPassword] = useState<boolean>(false);\r\n  const loginShowPasswordTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const signupShowPasswordTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const [errorFormChecking, setErrorFormChecking] = useState(initialspinner);\r\n  const [imageHeightoverflow, setImageHeightoverflow] =\r\n    useState<boolean>(false);\r\n\r\n  const ModalSlidingImageRef = useRef<HTMLImageElement>(null);\r\n\r\n  let usernameErrorData = null;\r\n  let usernameErrorDisplay = 0;\r\n\r\n  let emailErrorData = null;\r\n  let emailErrorDisplay = 0;\r\n\r\n  let passwordErrorData = null;\r\n  let passwordErrorDisplay = 0;\r\n\r\n  switch (errorsSignupValues.inputedUsername) {\r\n    case 1:\r\n      usernameErrorData =\r\n        \"Usernames can only use letters, numbers, underscores and periods \";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 2:\r\n      usernameErrorData = \"Username is taken\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 3:\r\n      usernameErrorData = \"Username is available\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 4:\r\n      usernameErrorData = \"Username  required\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      usernameErrorData = null;\r\n      usernameErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  switch (errorsSignupValues.inputedPassword) {\r\n    case 1:\r\n      passwordErrorData = \"Password must be at Least 8 characters\";\r\n      passwordErrorDisplay = 1;\r\n      break;\r\n\r\n    case 2:\r\n      passwordErrorData = \"Checking\";\r\n      passwordErrorDisplay = 1;\r\n\r\n      break;\r\n    case 4:\r\n      passwordErrorData = \" Password  required \";\r\n      passwordErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      passwordErrorData = null;\r\n      passwordErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  switch (errorsSignupValues.inputedEmail) {\r\n    case 1:\r\n      emailErrorData = \"Checking\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 2:\r\n      emailErrorData = \"Email address is not valid\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 3:\r\n      emailErrorData = \"Email is restricted to certain characters\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 4:\r\n      emailErrorData = \"Email required\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      emailErrorData = null;\r\n      emailErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///ALL VARIABLES ,ERROR VARIABLES,CONSTANT AND  STATES\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\r\n  const ModalBackgroundRef = useRef<HTMLInputElement>(null);\r\n  const onBackgroundFocus = (e: any): void => {\r\n    if (ModalBackgroundRef.current === e.target) {\r\n      CloseModalForm(0);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// ESCAPE KEY CLOSE MODAL\r\n  const escapePress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Escape\" && showModalForm) {\r\n        CloseModalForm(0);\r\n      }\r\n    },\r\n    [showModalForm, CloseModalForm]\r\n  );\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escapePress);\r\n    return () => document.removeEventListener(\"keydown\", escapePress);\r\n  }, [escapePress]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CLOSE MODAL FORM ON SMALL ICON PRESS\r\n  const iconclicked = () => {\r\n    CloseModalForm(0);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// RANDOMISE IMAGE\r\n  useEffect(() => {\r\n    let imagecontrol: number[] = [1, 2, 3, 4, 5, 6];\r\n    var result = null;\r\n    var randomimage =\r\n      imagecontrol[Math.floor(Math.random() * imagecontrol.length)];\r\n    const img = new Image(); ///new image instance\r\n    if (randomimage === 1) {\r\n      result = image1;\r\n    } else if (randomimage === 2) {\r\n      result = image2;\r\n    } else if (randomimage === 3) {\r\n      result = image3;\r\n    } else if (randomimage === 4) {\r\n      result = image4;\r\n    } else if (randomimage === 5) {\r\n      result = image5;\r\n    } else {\r\n      result = image6;\r\n    }\r\n    img.src = result; //src forces a download\r\n    setShowimage(result);\r\n  }, []);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET IMAGE WIDTH ,HEIGHT AND SET WIDE IMAGE\r\n  const onimageload = (e: any) => {\r\n    if (ModalSlidingImageRef && ModalSlidingImageRef.current) {\r\n      const imageHeight = ModalSlidingImageRef.current.clientHeight;\r\n      const imageWidth = ModalSlidingImageRef.current.clientWidth;\r\n\r\n      if (imageHeight + (imageWidth / imageHeight) * 3 > screenHeight) {\r\n        setImageHeightoverflow(true);\r\n      }\r\n\r\n      if (imageWidth > imageHeight + (imageWidth / imageHeight) * 100) {\r\n        setWideImage(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  var gg = imageHeight / imageWidth;\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const mobileLogmodalanimation = useSpring({\r\n    config: {\r\n      duration: 1000,\r\n    },\r\n    opacity: mobileZoom ? 1 : 0.99,\r\n\r\n    transform: mobileZoom ? `translateY(0%)` : `translateY(-40vh)`,\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      duration: 1000,\r\n    },\r\n    opacity: showModalForm ? 1 : 0.9,\r\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`,\r\n  });\r\n\r\n  const modalanimationTwo = useSpring({\r\n    config: {\r\n      duration: 900,\r\n    },\r\n    opacity: showModalForm ? 1 : 0.9,\r\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`,\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW A FULLSCREEN MODAL VIEW\r\n  const zoomlogmodal = () => {\r\n    setZoomedModal(!zoomedModal);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// DYNAMIC MODAL LAYOUT VARIABLES\r\n  const wideImageControlTrue: string = \"75vw\";\r\n  const wideImageControlfalse: string = \"70vw\";\r\n  const zoomImageControl: string = \"100vw\";\r\n  const GridMiniAwide: IGrid = 8;\r\n  const GridMiniBwide: IGrid = 4;\r\n  const GridMiniAlong: IGrid = 7;\r\n  const GridMiniBlong: IGrid = 5;\r\n  const GridZoomAwide: IGrid = 8;\r\n  const GridZoomBwide: IGrid = 4;\r\n  const GridZoomAlong: IGrid = 6;\r\n  const GridZoomBlong: IGrid = 6;\r\n\r\n  let GridHolderA: IGrid = 7;\r\n  let GridHolderB: IGrid = 5;\r\n\r\n  let GridxA: IGrid = 7;\r\n  let GridxB: IGrid = 5;\r\n\r\n  let GridyA: IGrid = 7;\r\n  let GridyB: IGrid = 5;\r\n\r\n  let wideImageControl: string = \"70vw\";\r\n  let imageReal: string = \"75vw\";\r\n\r\n  let borderGrid: string = \"11px\";\r\n  var WidthHolder = \"82%\";\r\n\r\n  var opacitySlidingModalImage = \"0\";\r\n  var zIndexModalImageSmall = 10;\r\n  var zIndexModalImageZoom = 0;\r\n  var opacityFixedModalImage = \"1\";\r\n  var slidingModalImageBack = \"none\";\r\n  var slidingImageWidth = \"50%\";\r\n\r\n  if (zoomedModal) {\r\n    if (imageHeightoverflow) {\r\n      opacitySlidingModalImage = \"1\";\r\n      zIndexModalImageSmall = 0;\r\n      zIndexModalImageZoom = 10;\r\n      opacityFixedModalImage = \"0\";\r\n      slidingModalImageBack = \"block\";\r\n    }\r\n\r\n    borderGrid = \"0px\";\r\n    if (wideImage) {\r\n      slidingImageWidth = \"66%\";\r\n      WidthHolder = \"76%\";\r\n      wideImageControl = wideImageControlTrue;\r\n      GridxA = GridZoomAwide;\r\n      GridxB = GridZoomBwide;\r\n    } else {\r\n      slidingImageWidth = \"50%\";\r\n      WidthHolder = \"88%\";\r\n      wideImageControl = wideImageControlfalse;\r\n      GridxA = GridZoomAlong;\r\n      GridxB = GridZoomBlong;\r\n    }\r\n    imageReal = zoomImageControl;\r\n    GridHolderA = GridxA;\r\n    GridHolderB = GridxB;\r\n  } else {\r\n    WidthHolder = \"82%\";\r\n    borderGrid = \"11px\";\r\n    if (wideImage) {\r\n      wideImageControl = wideImageControlTrue;\r\n      GridyA = GridMiniAwide;\r\n      GridyB = GridMiniBwide;\r\n    } else {\r\n      wideImageControl = wideImageControlfalse;\r\n      GridyA = GridMiniAlong;\r\n      GridyB = GridMiniBlong;\r\n    }\r\n    imageReal = wideImageControl;\r\n    GridHolderA = GridyA;\r\n    GridHolderB = GridyB;\r\n  }\r\n  ///\r\n  ///\r\n  ///\r\n  /// DYNAMIC MODAL LAYOUT VARIABLES\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW  LOGIN PASSWORD FOR A WHILE\r\n  const ShowLoginPasswordForaWhile = () => {\r\n    if (loginShowPasswordTimer.current) {\r\n      clearTimeout(loginShowPasswordTimer.current);\r\n    }\r\n    setLoginShowPassword(!loginShowPassword);\r\n    loginShowPasswordTimer.current = setTimeout(() => {\r\n      setLoginShowPassword(false);\r\n    }, 1500);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW  SIGNUP PASSWORD FOR A WHILE\r\n  const ShowSignupPasswordForaWhile = () => {\r\n    if (signupShowPasswordTimer.current) {\r\n      clearTimeout(signupShowPasswordTimer.current);\r\n    }\r\n    setSignupShowPassword(!signupShowPassword);\r\n    signupShowPasswordTimer.current = setTimeout(() => {\r\n      setSignupShowPassword(false);\r\n    }, 1500);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SANITISE SIGN UP FORM INPUT CLIENT SIDE\r\n  const updateSignvalues = (e: any) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"inputedUsername\") {\r\n      let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\r\n      let cleanValue = value.replace(usernameCleaner, \"\");\r\n\r\n      let usernameLimiter = /^.{26}$/;\r\n      let finalUsername = cleanValue.replace(usernameLimiter, \"\");\r\n\r\n      let checkUsernameClean = usernameCleaner.test(value);\r\n      let checkUsernameLimited = usernameLimiter.test(cleanValue);\r\n\r\n      if (checkUsernameClean) {\r\n        if (UsernameCheckingTimer.current) {\r\n          clearTimeout(UsernameCheckingTimer.current);\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n        }\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n      } else {\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n      }\r\n\r\n      if (!checkUsernameLimited && !checkUsernameClean) {\r\n        /// AXIOS REQUEST FOR CHECK USERNAME\r\n        if (UsernameCheckingTimer.current) {\r\n          clearTimeout(UsernameCheckingTimer.current);\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n        }\r\n        setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n        UsernameCheckingTimer.current = setTimeout(() => {\r\n          Axios.post(\"http://192.168.43.136:3001/usernamecheck\", {\r\n            value: finalUsername,\r\n          })\r\n            .then((response) => {\r\n              if (response.data.message === \"username is not unique\") {\r\n                setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n                setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n              } else {\r\n                setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n                setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              if (error.response) {\r\n                setErrorsSignupValues({ ...errorsSignupValues, [name]: 3 });\r\n                setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n              } else if (error.request) {\r\n                setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n                setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n              } else {\r\n                setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n                setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n              }\r\n            });\r\n        }, 3000);\r\n        /// AXIOS REQUEST FOR CHECK USERNAME\r\n        setRawSignupValues({ ...rawSignupValues, [name]: finalUsername });\r\n        setCleanSignupValues({ ...cleanSignupValues, [name]: finalUsername });\r\n      }\r\n      ///\r\n    } else if (name === \"inputedEmail\") {\r\n      const emailValidation =\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      const emailCleaner = /[^*$%#+@a-z0-9áéíóúñü \\.'_]/gim;\r\n      let finalEmail = value.replace(emailCleaner, \"\");\r\n\r\n      let checkEmailClean = emailCleaner.test(value);\r\n      let checkEmailValidated = emailValidation.test(\r\n        String(value).toLowerCase()\r\n      );\r\n      if (EmailCheckingTimer.current) {\r\n        clearTimeout(EmailCheckingTimer.current);\r\n        setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n      }\r\n      if (!checkEmailValidated) {\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n        setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n        EmailCheckingTimer.current = setTimeout(() => {\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n          checkEmailClean &&\r\n            setErrorsSignupValues({ ...errorsSignupValues, [name]: 3 });\r\n        }, 2000);\r\n      } else {\r\n        if (EmailCheckingTimer.current) {\r\n          clearTimeout(EmailCheckingTimer.current);\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n        }\r\n        checkEmailClean\r\n          ? setErrorsSignupValues({ ...errorsSignupValues, [name]: 3 })\r\n          : setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n      }\r\n\r\n      setRawSignupValues({ ...rawSignupValues, [name]: finalEmail });\r\n      setCleanSignupValues({ ...cleanSignupValues, [name]: finalEmail });\r\n      ////////\r\n    } else {\r\n      if (PasswordCheckingTimer.current) {\r\n        clearTimeout(PasswordCheckingTimer.current);\r\n        setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n      }\r\n      setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n\r\n      setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n      PasswordCheckingTimer.current = setTimeout(() => {\r\n        setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n      }, 2000);\r\n\r\n      var passwordLength = value.length;\r\n\r\n      if (passwordLength >= 8 || passwordLength === 0) {\r\n        if (PasswordCheckingTimer.current) {\r\n          clearTimeout(PasswordCheckingTimer.current);\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n        }\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n      }\r\n      setRawSignupValues({ ...rawSignupValues, [name]: value });\r\n      setCleanSignupValues({ ...cleanSignupValues, [name]: value });\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\r\n  const signmeup = () => {\r\n    if (\r\n      cleanSignupValues.inputedEmail &&\r\n      cleanSignupValues.inputedUsername &&\r\n      cleanSignupValues.inputedPassword &&\r\n      errorsSignupValues.inputedPassword === 0\r\n    ) {\r\n      if (errorsSignupValues.inputedEmail === 0) {\r\n        Axios.post(\"http://192.168.43.136:3001/registration\", {\r\n          values: cleanSignupValues,\r\n        })\r\n          .then((response) => {\r\n            if (response.data.message === \"username not unique\") {\r\n              setServerErrorData(\"Username is taken\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            } else if (response.data.message === \"Registration Successful\") {\r\n              console.log(response.status);\r\n              alert(\"REGISTRATION COMPLETE\");\r\n            } else {\r\n              setServerErrorData(\"Something went wrong\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            if (error.response) {\r\n              // Request made and server responded\r\n              //express typo can activate this\r\n              let textFieldParam = error.response.data.error.errors[0].param;\r\n              let affectedTextField = \" \";\r\n\r\n              if (textFieldParam === \"values.inputedPassword\") {\r\n                affectedTextField = \"Password must be at Least 8 characters\";\r\n              } else if (textFieldParam === \"values.inputedEmail\") {\r\n                affectedTextField = \"Email address is not valid\";\r\n              } else {\r\n                affectedTextField =\r\n                  \"Usernames use letters, numbers, underscores and periods\";\r\n              }\r\n              let dynamicError = `${affectedTextField}.  ${error.response.data.error.errors[0].msg} `;\r\n              setServerErrorData(dynamicError);\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            } else if (error.request) {\r\n              // The request was made but no response was received Or request not made\r\n              // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n              setServerErrorData(\r\n                \"Error connecting to server, Check your connection\"\r\n              );\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            } else {\r\n              // Something happened in setting up the request that triggered an Error\r\n              setServerErrorData(\"Request setup failed , Pls try again\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            }\r\n          });\r\n      } else {\r\n        setCantPassBadEmail(true);\r\n        setTimeout(() => {\r\n          setCantPassBadEmail(false);\r\n        }, 3000);\r\n      }\r\n    } else {\r\n      let passwordErrorHolder = errorsSignupValues.inputedPassword;\r\n      let emailErrorHolder = errorsSignupValues.inputedEmail;\r\n      let usernameErrorHolder = errorsSignupValues.inputedUsername;\r\n\r\n      if (!cleanSignupValues.inputedPassword) {\r\n        passwordErrorHolder = 4;\r\n      }\r\n      if (!cleanSignupValues.inputedEmail) {\r\n        emailErrorHolder = 4;\r\n      }\r\n      if (!cleanSignupValues.inputedUsername) {\r\n        usernameErrorHolder = 4;\r\n      }\r\n\r\n      setErrorsSignupValues({\r\n        ...errorsSignupValues,\r\n        inputedPassword: passwordErrorHolder,\r\n        inputedEmail: emailErrorHolder,\r\n        inputedUsername: usernameErrorHolder,\r\n      });\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\r\n  const updateLoginvalues = (e: any) => {\r\n    const { name, value } = e.target;\r\n\r\n    setErrorsLoginValues({ ...errorsLoginValues, [name]: 0 });\r\n    setRawLoginValues({ ...rawLoginValues, [name]: value });\r\n    setCleanLoginValues({ ...cleanLoginValues, [name]: value });\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SENDING LOG IN  DATA TO SERVER SIDE\r\n  const logmein = () => {\r\n    if (cleanLoginValues.inputedUsername && cleanLoginValues.inputedPassword) {\r\n      Axios.post(\r\n        \"http://192.168.43.136:3001/loging\",\r\n        {\r\n          values: cleanLoginValues,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n        .then((response) => {\r\n          if (response.data.message === \"Wrong Password\") {\r\n            setServerErrorData(\"Wrong username and  password combination\");\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(false);\r\n          } else {\r\n            if (response.data.message === \"Wrong username\") {\r\n              setServerErrorData(\"Username does not exist\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(false);\r\n            } else if (response.data.payload) {\r\n              history.push({\r\n                pathname: \"/supercheck\",\r\n                state: { userdata: response.data.payload },\r\n              });\r\n            } else {\r\n              setServerErrorData(\"User info could not be retrieved\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(false);\r\n            }\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          if (error.response) {\r\n            // Request made and server responded\r\n            //express typo can activate this\r\n            // Request made and server responded\r\n            //express typo can activate this\r\n            //let textFieldParam = error.response.data.error.errors[0].param;\r\n            let affectedTextField = \"Wrong password and username combination\";\r\n\r\n            let dynamicError = `${affectedTextField}  `;\r\n            setServerErrorData(dynamicError);\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(false);\r\n          } else if (error.request) {\r\n            // The request was made but no response was received Or request not made\r\n            // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n            setServerErrorData(\r\n              \"Error connecting to server, Check your connection\"\r\n            );\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(true);\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            setServerErrorData(\"Request setup failed , Pls try again\");\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(true);\r\n          }\r\n        });\r\n    } else {\r\n      let passwordErrorHolder = errorsLoginValues.inputedPassword;\r\n\r\n      let usernameErrorHolder = errorsLoginValues.inputedUsername;\r\n\r\n      if (!cleanLoginValues.inputedPassword) {\r\n        passwordErrorHolder = 1;\r\n      }\r\n\r\n      if (!cleanLoginValues.inputedUsername) {\r\n        usernameErrorHolder = 1;\r\n      }\r\n\r\n      setErrorsLoginValues({\r\n        ...errorsLoginValues,\r\n        inputedPassword: passwordErrorHolder,\r\n        inputedUsername: usernameErrorHolder,\r\n      });\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// LOGOUT\r\n  const logout = () => {\r\n    Axios.post(\"http://localhost:3001/logout\", { withCredentials: true })\r\n      .then((response) => {\r\n        if (response.data.message === \"cookie deleted\") {\r\n          alert(\"logout  complete\");\r\n        } else if (response.data.message === \"cookie null\") {\r\n          alert(\"logged out  already\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"logout fail\");\r\n      });\r\n  };\r\n\r\n  const DialogeData = {\r\n    ModalSlidingImageRef: ModalSlidingImageRef,\r\n    opacitySlidingModalImage: opacitySlidingModalImage,\r\n    opacityFixedModalImage: opacityFixedModalImage,\r\n    borderGrid: borderGrid,\r\n    imageReal: imageReal,\r\n    onBackgroundFocus: onBackgroundFocus,\r\n    slidingModalImageBack: slidingModalImageBack,\r\n    slidingImageWidth: slidingImageWidth,\r\n    ModalBackgroundRef: ModalBackgroundRef,\r\n    zoomlogmodal: zoomlogmodal,\r\n    showimage: showimage,\r\n    serverEmojiplain: serverEmojiplain,\r\n    serverErrorData: serverErrorData,\r\n    setServerErrorData: setServerErrorData,\r\n    serverErrorDisplay: serverErrorDisplay,\r\n    darkmode: darkmode,\r\n    PaperStyle: PaperStyle,\r\n    GridHolderA: GridHolderA,\r\n    iconclicked: iconclicked,\r\n    SuperIcon: SuperIcon,\r\n    onimageload: onimageload,\r\n    formtype: formtype,\r\n    GridHolderB: GridHolderB,\r\n    zoomedModal: zoomedModal,\r\n    logout: logout,\r\n    errorsLoginInputedUsername: errorsLoginValues.inputedUsername,\r\n    errorsLoginInputedPassword: errorsLoginValues.inputedPassword,\r\n    WidthHolder: WidthHolder,\r\n    updateLoginvalues: updateLoginvalues,\r\n    rawLogininputedUsername: rawLoginValues.inputedUsername,\r\n    rawLogininputedPassword: rawLoginValues.inputedPassword,\r\n    loginShowPassword: loginShowPassword,\r\n    ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\r\n    logmein: logmein,\r\n    loginclass: loginclass,\r\n    errorFormCheckinginputedEmail: errorFormChecking.inputedEmail,\r\n    cantPassBadEmail: cantPassBadEmail,\r\n    emailErrorDisplay: emailErrorDisplay,\r\n    emailErrorData: emailErrorData,\r\n    updateSignvalues: updateSignvalues,\r\n    rawSignupValuesinputedEmail: rawSignupValues.inputedEmail,\r\n    errorsSignupValuesinputedUsername: errorsSignupValues.inputedUsername,\r\n    errorFormCheckinginputedUsername: errorFormChecking.inputedUsername,\r\n    usernameErrorDisplay: usernameErrorDisplay,\r\n    usernameErrorData: usernameErrorData,\r\n    rawSignupValuesinputedUsername: rawSignupValues.inputedUsername,\r\n    signupShowPassword: signupShowPassword,\r\n    rawSignupValuesinputedPassword: rawSignupValues.inputedPassword,\r\n    ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\r\n    errorFormCheckinginputedPassword: errorFormChecking.inputedPassword,\r\n    passwordErrorDisplay: passwordErrorDisplay,\r\n    passwordErrorData: passwordErrorData,\r\n    signupclass: signupclass,\r\n    signmeup: signmeup,\r\n    showModalForm: showModalForm,\r\n    modalanimation: modalanimation,\r\n    modalanimationTwo: modalanimationTwo,\r\n    zIndexModalImageSmall: zIndexModalImageSmall,\r\n    zIndexModalImageZoom: zIndexModalImageZoom,\r\n  };\r\n\r\n  const DialogeDataMobile = {\r\n    onBackgroundFocus: onBackgroundFocus,\r\n    ModalBackgroundRef: ModalBackgroundRef,\r\n\r\n    opacitySlidingModalImage: opacitySlidingModalImage,\r\n    opacityFixedModalImage: opacityFixedModalImage,\r\n    borderGrid: borderGrid,\r\n    imageReal: imageReal,\r\n    slidingModalImageBack: slidingModalImageBack,\r\n    slidingImageWidth: slidingImageWidth,\r\n    zoomlogmodal: zoomlogmodal,\r\n    showimage: showimage,\r\n    serverEmojiplain: serverEmojiplain,\r\n    serverErrorData: serverErrorData,\r\n    setServerErrorData: setServerErrorData,\r\n    serverErrorDisplay: serverErrorDisplay,\r\n    darkmode: darkmode,\r\n    PaperStyle: PaperStyle,\r\n    GridHolderA: GridHolderA,\r\n    iconclicked: iconclicked,\r\n    SuperIcon: SuperIcon,\r\n    onimageload: onimageload,\r\n    formtype: formtype,\r\n    GridHolderB: GridHolderB,\r\n    zoomedModal: zoomedModal,\r\n    logout: logout,\r\n    errorsLoginInputedUsername: errorsLoginValues.inputedUsername,\r\n    errorsLoginInputedPassword: errorsLoginValues.inputedPassword,\r\n    WidthHolder: WidthHolder,\r\n    updateLoginvalues: updateLoginvalues,\r\n    rawLogininputedUsername: rawLoginValues.inputedUsername,\r\n    rawLogininputedPassword: rawLoginValues.inputedPassword,\r\n    loginShowPassword: loginShowPassword,\r\n    ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\r\n    logmein: logmein,\r\n    loginclass: loginclass,\r\n    errorFormCheckinginputedEmail: errorFormChecking.inputedEmail,\r\n    cantPassBadEmail: cantPassBadEmail,\r\n    emailErrorDisplay: emailErrorDisplay,\r\n    emailErrorData: emailErrorData,\r\n    updateSignvalues: updateSignvalues,\r\n    rawSignupValuesinputedEmail: rawSignupValues.inputedEmail,\r\n    errorsSignupValuesinputedUsername: errorsSignupValues.inputedUsername,\r\n    errorFormCheckinginputedUsername: errorFormChecking.inputedUsername,\r\n    usernameErrorDisplay: usernameErrorDisplay,\r\n    usernameErrorData: usernameErrorData,\r\n    rawSignupValuesinputedUsername: rawSignupValues.inputedUsername,\r\n    signupShowPassword: signupShowPassword,\r\n    rawSignupValuesinputedPassword: rawSignupValues.inputedPassword,\r\n    ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\r\n    errorFormCheckinginputedPassword: errorFormChecking.inputedPassword,\r\n    passwordErrorDisplay: passwordErrorDisplay,\r\n    passwordErrorData: passwordErrorData,\r\n    signupclass: signupclass,\r\n    signmeup: signmeup,\r\n    showModalForm: showModalForm,\r\n    modalanimation: modalanimation,\r\n    modalanimationTwo: modalanimationTwo,\r\n    mobileLogmodalanimation: mobileLogmodalanimation,\r\n    mobileZoom: mobileZoom,\r\n    setMobileZoom: setMobileZoom,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModalForm ? (\r\n        matchPc ? (\r\n          <PcModalLog {...DialogeData} />\r\n        ) : matchTablet ? (\r\n          <MobileModalLog {...DialogeDataMobile} />\r\n        ) : (\r\n          <MobileModalLog {...DialogeDataMobile} />\r\n        )\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}