{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\ActualMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { animated } from \"react-spring\";\nimport { useSelector } from \"react-redux\";\nimport { matchPc, matchTablet } from \"../DetectDevice\";\nimport { useSpring } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ActualMenux({\n  showModalFormMenu,\n  setshowModalFormMenu\n}) {\n  _s();\n\n  const styles = useSpring({\n    from: {\n      transform: \"translateX(-100%)\"\n    },\n    to: {\n      transform: showModalFormMenu ? \"translateX(0%)\" : \"translateX(-100%)\"\n    },\n    config: {\n      tension: 280,\n      friction: 60\n    } // You can adjust these for smoother or stiffer animations\n\n  }); ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n  const {\n    username,\n    image,\n    imageThumb,\n    id,\n    memeberPageid,\n    MemberProfileData\n  } = useSelector(state => ({ ...state.UserdataReducer\n  })); /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///MUI PAPER STYLES FROM REDUX\n\n  const {\n    PaperStyleLight,\n    PaperStyleDark\n  } = useSelector(state => ({ ...state.PaperReducerLightnDark\n  }));\n  var superFont = \"\";\n\n  if (matchPc) {\n    superFont = \"super-starz-text-Pcx\"; ///\n  } else if (matchTablet) {\n    superFont = \"super-starz-text-Tabletx\"; ///\n  } else {\n    superFont = \"super-starz-text-Mobilex\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(animated.div, {\n      onClick: () => {\n        setshowModalFormMenu(false);\n      },\n      style: { ...styles,\n        width: '100%',\n        height: '100vh',\n        backgroundColor: darkmodeReducer ? 'rgb(20, 20, 20, 0.32)' : 'rgb(255, 255, 255, 0.22)',\n        position: 'fixed',\n        cursor: 'pointer',\n        top: 0,\n        left: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n      style: { ...styles,\n        width: '20%',\n        height: '100vh',\n        backgroundImage: darkmodeReducer ? PaperStyleDark : PaperStyleLight,\n        position: 'fixed',\n        top: 0,\n        left: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        className: darkmodeReducer ? ` ${superFont} ` : ` ${superFont}`,\n        style: {\n          height: '10vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              paddingLeft: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: darkmodeReducer ? \"text-superstarz-dark   text-superstarz-dark-colorA  \" : \"text-superstarz-light  text-superstarz-light-colorA  \",\n              style: {\n                color: darkmodeReducer ? \"#eeeeee\" : \"#444444\"\n              },\n              children: \"Clik\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: darkmodeReducer ? \"#ffe680\" : \"#ffcc00\",\n                opacity: darkmodeReducer ? \"1\" : \"1\"\n              },\n              className: darkmodeReducer ? \"text-superstarz-dark     text-superstarz-dark-colorB  \" : \"text-superstarz-light   text-superstarz-light-colorB   \",\n              children: \"Bate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              paddingRight: '20px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              style: {\n                width: '5vw',\n                height: '5vw',\n                borderRaduis: '50%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ActualMenux, \"5/T2tVQ875Op2egXHKYFgxoZ8OM=\", false, function () {\n  return [useSpring, useSelector, useSelector, useSelector];\n});\n\n_c = ActualMenux;\nexport const ActualMenu = /*#__PURE__*/React.memo(ActualMenux);\n_c2 = ActualMenu;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ActualMenux\");\n$RefreshReg$(_c2, \"ActualMenu\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/ActualMenu.tsx"],"names":["React","Grid","animated","useSelector","matchPc","matchTablet","useSpring","ActualMenux","showModalFormMenu","setshowModalFormMenu","styles","from","transform","to","config","tension","friction","username","image","imageThumb","id","memeberPageid","MemberProfileData","state","UserdataReducer","darkmode","GlobalReducer","darkmodeReducer","PaperStyleLight","PaperStyleDark","PaperReducerLightnDark","superFont","width","height","backgroundColor","position","cursor","top","left","backgroundImage","paddingLeft","color","opacity","paddingRight","borderRaduis","ActualMenu","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useState,\r\n  useRef,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { Arrow } from \"./Arrow\";\r\nimport { Dots } from \"./Dots\";\r\nimport { SliderNumber } from \"./SliderNumber\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { animated, useTransition } from \"react-spring\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { matchMobile, matchPc, matchTablet } from \"../DetectDevice\";\r\nimport ZoomOutIcon from \"@mui/icons-material/ZoomOut\";\r\nimport { Loader } from \"./Loader\";\r\nimport { UpdateInteract } from \"../GlobalActions\";\r\nimport { useSpring } from \"react-spring\";\r\n\r\nfunction ActualMenux({ showModalFormMenu, setshowModalFormMenu }: any): JSX.Element {\r\n  const styles = useSpring({\r\n    from: { transform: \"translateX(-100%)\" },\r\n    to: { transform: showModalFormMenu ? \"translateX(0%)\" : \"translateX(-100%)\" },\r\n    config: { tension: 280, friction: 60 }, // You can adjust these for smoother or stiffer animations\r\n  });\r\n\r\n\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      image: string;\r\n      imageThumb: string;\r\n      id: number;\r\n      username: string;\r\n      memeberPageid: number;\r\n      MemberProfileData: any;\r\n    };\r\n  }\r\n  const { username, image, imageThumb, id, memeberPageid, MemberProfileData } =\r\n    useSelector((state: RootStateReducerImage) => ({\r\n      ...state.UserdataReducer,\r\n    }));\r\n\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///MUI PAPER STYLES FROM REDUX\r\n  const { PaperStyleLight, PaperStyleDark } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.PaperReducerLightnDark,\r\n    })\r\n  );\r\n\r\n\r\n  var superFont = \"\";\r\n\r\n  if (matchPc) {\r\n    superFont = \"super-starz-text-Pcx\";\r\n\r\n    ///\r\n  } else if (matchTablet) {\r\n    superFont = \"super-starz-text-Tabletx\";\r\n\r\n    ///\r\n  } else {\r\n    superFont = \"super-starz-text-Mobilex\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n\r\n      <animated.div\r\n        onClick={() => {\r\n\r\n          setshowModalFormMenu(false);\r\n        }}\r\n        style={{\r\n          ...styles,\r\n          width: '100%',\r\n          height: '100vh',\r\n          backgroundColor: darkmodeReducer ? 'rgb(20, 20, 20, 0.32)' : 'rgb(255, 255, 255, 0.22)',\r\n          position: 'fixed',\r\n          cursor: 'pointer',\r\n          top: 0,\r\n          left: 0\r\n        }}\r\n      >\r\n        {/* Menu content goes here */}\r\n      </animated.div >\r\n\r\n\r\n      <animated.div\r\n        style={{\r\n          ...styles,\r\n          width: '20%',\r\n          height: '100vh',\r\n          backgroundImage: darkmodeReducer ? PaperStyleDark : PaperStyleLight,\r\n          position: 'fixed',\r\n          top: 0,\r\n          left: 0\r\n        }}\r\n      >\r\n\r\n        <Grid\r\n          xs={12}\r\n          className={\r\n            darkmodeReducer\r\n              ? ` ${superFont} `\r\n              : ` ${superFont}`\r\n          }\r\n          style={{\r\n            height: '10vh',\r\n\r\n\r\n          }}>\r\n\r\n\r\n\r\n          <Grid\r\n            xs={6}>\r\n\r\n\r\n\r\n            <span style={{ paddingLeft: '20px' }}>\r\n\r\n\r\n              < span\r\n                className={\r\n                  darkmodeReducer\r\n                    ? \"text-superstarz-dark   text-superstarz-dark-colorA  \"\r\n                    : \"text-superstarz-light  text-superstarz-light-colorA  \"\r\n                }\r\n                style={{\r\n                  color: darkmodeReducer ? \"#eeeeee\" : \"#444444\",\r\n                }}\r\n              >\r\n                Clik\r\n              </span>\r\n              {' '}\r\n              <span\r\n                style={{\r\n                  color: darkmodeReducer ? \"#ffe680\" : \"#ffcc00\",\r\n                  opacity: darkmodeReducer ? \"1\" : \"1\",\r\n\r\n                }}\r\n                className={\r\n                  darkmodeReducer\r\n                    ? \"text-superstarz-dark     text-superstarz-dark-colorB  \"\r\n                    : \"text-superstarz-light   text-superstarz-light-colorB   \"\r\n                }\r\n              >\r\n                Bate\r\n              </span>\r\n\r\n\r\n            </span>\r\n          </Grid>\r\n          <Grid\r\n            xs={6}>\r\n\r\n\r\n\r\n            <span style={{ paddingRight: '20px' }}>\r\n\r\n\r\n              <img src={image} style={{ width: '5vw', height: '5vw', borderRaduis: '50%' }} />\r\n\r\n            </span>\r\n          </Grid>\r\n\r\n\r\n\r\n\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n      </animated.div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const ActualMenu = React.memo(ActualMenux);\r\n"]},"metadata":{},"sourceType":"module"}