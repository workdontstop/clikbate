{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\log\\\\LogButtons.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { isBrowser, isTablet } from \"react-device-detect\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginButtonsx({\n  OpenModalForm\n}) {\n  _s();\n\n  var matchPc = isBrowser;\n  var matchTablet = isTablet; ///\n  ///\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\n\n  var buttonFont = \"\";\n  var buttonTransform = \" \";\n  var pad = \"\";\n\n  if (matchPc) {\n    buttonFont = \"1vw\";\n    buttonTransform = \" \";\n    pad = \"14.5px\"; ///\n  } else if (matchTablet) {\n    pad = \"16px\";\n    buttonFont = \"2vw\";\n    buttonTransform = \" \"; ///\n  } else {\n    buttonFont = \"\";\n    buttonTransform = \"scale(0.95)\";\n    pad = \"16px\";\n  } ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  /// GET  SIGNUP BUTTON AND LOGIN BUTTON STYLE FROM REDUX\n\n  const {\n    borderRadiusSD,\n    MozBoxShadowSD,\n    WebkitBoxShadowSD,\n    boxShadowSD\n  } = useSelector(state => ({ ...state.ButtonsSignUpReducerDark\n  }));\n  const {\n    borderRadiusSL,\n    MozBoxShadowSL,\n    WebkitBoxShadowSL,\n    boxShadowSL\n  } = useSelector(state => ({ ...state.ButtonsSignUpReducerLight\n  }));\n  const {\n    borderRadiusLD,\n    MozBoxShadowLD,\n    WebkitBoxShadowLD,\n    boxShadowLD\n  } = useSelector(state => ({ ...state.ButtonsLoginReducerDark\n  }));\n  const {\n    borderRadiusLL,\n    MozBoxShadowLL,\n    WebkitBoxShadowLL,\n    boxShadowLL\n  } = useSelector(state => ({ ...state.ButtonsLoginReducerLight\n  }));\n  const borderRadiusReducerLoginL = borderRadiusLL;\n  const MozBoxShadowReducerLoginL = MozBoxShadowLL;\n  const WebkitBoxShadowReducerLoginL = WebkitBoxShadowLL;\n  const boxShadowReducerLoginL = boxShadowLL;\n  const borderRadiusReducerSignL = borderRadiusSL;\n  const MozBoxShadowReducerSignL = MozBoxShadowSL;\n  const WebkitBoxShadowReducerSignL = WebkitBoxShadowSL;\n  const boxShadowReducerSignL = boxShadowSL;\n\n  if (darkmodeReducer) {\n    const borderRadiusReducerLoginD = borderRadiusLD;\n    const MozBoxShadowReducerLoginD = MozBoxShadowLD;\n    const WebkitBoxShadowReducerLoginD = WebkitBoxShadowLD;\n    const boxShadowReducerLoginD = boxShadowLD;\n    const borderRadiusReducerSignD = borderRadiusSD;\n    const MozBoxShadowReducerSignD = MozBoxShadowSD;\n    const WebkitBoxShadowReducerSignD = WebkitBoxShadowSD;\n    const boxShadowReducerSignD = boxShadowSD;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: matchPc ? \"containerloginpc\" : \"containerloginmobile \",\n    item: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      md: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: \"buttonpad buttonshake\",\n      xs: 12,\n      sm: 6,\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => OpenModalForm(1),\n        style: loginstyle,\n        fullWidth: true,\n        variant: \"outlined\",\n        size: \"large\",\n        color: \"primary\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 12,\n      className: \"logbuttonspace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      md: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: \"buttonpad buttonshake\",\n      xs: 12,\n      sm: 6,\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => OpenModalForm(0),\n        style: signupstyle,\n        fullWidth: true,\n        variant: \"contained\",\n        size: \"large\",\n        color: \"secondary\",\n        children: [\" \", \"Sign Up\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginButtonsx, \"UZYL0uN7k1VGUW53UFTWchbyvmE=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = LoginButtonsx;\nexport const LoginButtons = /*#__PURE__*/React.memo(LoginButtonsx);\n_c2 = LoginButtons;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginButtonsx\");\n$RefreshReg$(_c2, \"LoginButtons\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/log/LogButtons.tsx"],"names":["React","Grid","Button","isBrowser","isTablet","useSelector","LoginButtonsx","OpenModalForm","matchPc","matchTablet","buttonFont","buttonTransform","pad","darkmode","state","GlobalReducer","darkmodeReducer","borderRadiusSD","MozBoxShadowSD","WebkitBoxShadowSD","boxShadowSD","ButtonsSignUpReducerDark","borderRadiusSL","MozBoxShadowSL","WebkitBoxShadowSL","boxShadowSL","ButtonsSignUpReducerLight","borderRadiusLD","MozBoxShadowLD","WebkitBoxShadowLD","boxShadowLD","ButtonsLoginReducerDark","borderRadiusLL","MozBoxShadowLL","WebkitBoxShadowLL","boxShadowLL","ButtonsLoginReducerLight","borderRadiusReducerLoginL","MozBoxShadowReducerLoginL","WebkitBoxShadowReducerLoginL","boxShadowReducerLoginL","borderRadiusReducerSignL","MozBoxShadowReducerSignL","WebkitBoxShadowReducerSignL","boxShadowReducerSignL","borderRadiusReducerLoginD","MozBoxShadowReducerLoginD","WebkitBoxShadowReducerLoginD","boxShadowReducerLoginD","borderRadiusReducerSignD","MozBoxShadowReducerSignD","WebkitBoxShadowReducerSignD","boxShadowReducerSignD","loginstyle","signupstyle","LoginButtons","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport { isBrowser, isTablet } from \"react-device-detect\";\r\nimport { ILogButtons } from \"./log-Interfaces\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction LoginButtonsx({ OpenModalForm }: ILogButtons) {\r\n  var matchPc = isBrowser;\r\n  var matchTablet = isTablet;\r\n\r\n  ///\r\n  ///\r\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\r\n\r\n  var buttonFont = \"\";\r\n  var buttonTransform = \" \";\r\n  var pad = \"\";\r\n\r\n  if (matchPc) {\r\n    buttonFont = \"1vw\";\r\n    buttonTransform = \" \";\r\n    pad = \"14.5px\";\r\n    ///\r\n  } else if (matchTablet) {\r\n    pad = \"16px\";\r\n    buttonFont = \"2vw\";\r\n    buttonTransform = \" \";\r\n\r\n    ///\r\n  } else {\r\n    buttonFont = \"\";\r\n    buttonTransform = \"scale(0.95)\";\r\n    pad = \"16px\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET  SIGNUP BUTTON AND LOGIN BUTTON STYLE FROM REDUX\r\n  const { borderRadiusSD, MozBoxShadowSD, WebkitBoxShadowSD, boxShadowSD } =\r\n    useSelector((state: RootStateOrAny) => ({\r\n      ...state.ButtonsSignUpReducerDark,\r\n    }));\r\n\r\n  const { borderRadiusSL, MozBoxShadowSL, WebkitBoxShadowSL, boxShadowSL } =\r\n    useSelector((state: RootStateOrAny) => ({\r\n      ...state.ButtonsSignUpReducerLight,\r\n    }));\r\n\r\n  const { borderRadiusLD, MozBoxShadowLD, WebkitBoxShadowLD, boxShadowLD } =\r\n    useSelector((state: RootStateOrAny) => ({\r\n      ...state.ButtonsLoginReducerDark,\r\n    }));\r\n\r\n  const { borderRadiusLL, MozBoxShadowLL, WebkitBoxShadowLL, boxShadowLL } =\r\n    useSelector((state: RootStateOrAny) => ({\r\n      ...state.ButtonsLoginReducerLight,\r\n    }));\r\n\r\n  const borderRadiusReducerLoginL = borderRadiusLL;\r\n  const MozBoxShadowReducerLoginL = MozBoxShadowLL;\r\n  const WebkitBoxShadowReducerLoginL = WebkitBoxShadowLL;\r\n  const boxShadowReducerLoginL = boxShadowLL;\r\n\r\n  const borderRadiusReducerSignL = borderRadiusSL;\r\n  const MozBoxShadowReducerSignL = MozBoxShadowSL;\r\n  const WebkitBoxShadowReducerSignL = WebkitBoxShadowSL;\r\n  const boxShadowReducerSignL = boxShadowSL;\r\n\r\n  if (darkmodeReducer) {\r\n    const borderRadiusReducerLoginD = borderRadiusLD;\r\n    const MozBoxShadowReducerLoginD = MozBoxShadowLD;\r\n    const WebkitBoxShadowReducerLoginD = WebkitBoxShadowLD;\r\n    const boxShadowReducerLoginD = boxShadowLD;\r\n\r\n    const borderRadiusReducerSignD = borderRadiusSD;\r\n    const MozBoxShadowReducerSignD = MozBoxShadowSD;\r\n    const WebkitBoxShadowReducerSignD = WebkitBoxShadowSD;\r\n    const boxShadowReducerSignD = boxShadowSD;\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      className={matchPc ? \"containerloginpc\" : \"containerloginmobile \"}\r\n      item\r\n    >\r\n      <Grid item sm={3} md={5}></Grid>\r\n      <Grid item className=\"buttonpad buttonshake\" xs={12} sm={6} md={2}>\r\n        <Button\r\n          onClick={() => OpenModalForm(1)}\r\n          style={loginstyle}\r\n          fullWidth={true}\r\n          variant=\"outlined\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n        >\r\n          Log In\r\n        </Button>\r\n      </Grid>\r\n      <Grid item sm={12} className=\"logbuttonspace\"></Grid>\r\n\r\n      <Grid item sm={3} md={5}></Grid>\r\n      <Grid item className=\"buttonpad buttonshake\" xs={12} sm={6} md={2}>\r\n        <Button\r\n          onClick={() => OpenModalForm(0)}\r\n          style={signupstyle}\r\n          fullWidth={true}\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"secondary\"\r\n        >\r\n          {\" \"}\r\n          Sign Up\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport const LoginButtons = React.memo(LoginButtonsx);\r\n"]},"metadata":{},"sourceType":"module"}