{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\PreviewCanvas.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PreviewCanvasx({\n  image,\n  index,\n  setcropimage,\n  setcrop,\n  crop,\n  cropTOPLEVELScrollRef,\n  allowCropAllCanvas,\n  cutOffLoader,\n  setwaitONLOAD,\n  setsuperCropLoadFade,\n  setcutOffLoader,\n  length\n}) {\n  ///\n  ///\n  const changeCrop = () => {\n    setcropimage(image);\n    cropTOPLEVELScrollRef.current.scrollTo(\"topcanvas\", {\n      duration: 1800,\n      delay: 0,\n      smooth: \"easeInOutQuart\"\n    });\n  };\n\n  const loader = () => {\n    if (allowCropAllCanvas) {\n      if (length - 1 === index) {\n        if (cutOffLoader === 0) {\n          setcutOffLoader(1);\n        } else if (cutOffLoader === 1) {\n          setcutOffLoader(2);\n        } else if (cutOffLoader === 2) {\n          setTimeout(function () {\n            setwaitONLOAD(false);\n            setsuperCropLoadFade(false);\n          }, length * 600);\n          setcutOffLoader(true);\n        } else {}\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      onLoad: loader,\n      onClick: changeCrop,\n      src: image,\n      style: {\n        width: \"100%\",\n        height: \"auto\",\n        cursor: \"pointer\",\n        marginTop: index === 0 || index === 1 || index === 2 ? \"0px\" : \"-5px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = PreviewCanvasx;\nexport const PreviewCanvas = /*#__PURE__*/React.memo(PreviewCanvasx);\n_c2 = PreviewCanvas;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PreviewCanvasx\");\n$RefreshReg$(_c2, \"PreviewCanvas\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/PreviewCanvas.tsx"],"names":["React","PreviewCanvasx","image","index","setcropimage","setcrop","crop","cropTOPLEVELScrollRef","allowCropAllCanvas","cutOffLoader","setwaitONLOAD","setsuperCropLoadFade","setcutOffLoader","length","changeCrop","current","scrollTo","duration","delay","smooth","loader","setTimeout","width","height","cursor","marginTop","PreviewCanvas","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAmD,OAAnD;;;;AAgBA,SAASC,cAAT,CAAwB;AACtBC,EAAAA,KADsB;AAEtBC,EAAAA,KAFsB;AAGtBC,EAAAA,YAHsB;AAItBC,EAAAA,OAJsB;AAKtBC,EAAAA,IALsB;AAMtBC,EAAAA,qBANsB;AAOtBC,EAAAA,kBAPsB;AAQtBC,EAAAA,YARsB;AAStBC,EAAAA,aATsB;AAUtBC,EAAAA,oBAVsB;AAWtBC,EAAAA,eAXsB;AAYtBC,EAAAA;AAZsB,CAAxB,EAaqB;AACnB;AACA;AACA,QAAMC,UAAU,GAAG,MAAM;AACvBV,IAAAA,YAAY,CAACF,KAAD,CAAZ;AACAK,IAAAA,qBAAqB,CAACQ,OAAtB,CAA8BC,QAA9B,CAAuC,WAAvC,EAAoD;AAClDC,MAAAA,QAAQ,EAAE,IADwC;AAElDC,MAAAA,KAAK,EAAE,CAF2C;AAGlDC,MAAAA,MAAM,EAAE;AAH0C,KAApD;AAKD,GAPD;;AASA,QAAMC,MAAM,GAAG,MAAM;AACnB,QAAIZ,kBAAJ,EAAwB;AACtB,UAAIK,MAAM,GAAG,CAAT,KAAeV,KAAnB,EAA0B;AACxB,YAAIM,YAAY,KAAK,CAArB,EAAwB;AACtBG,UAAAA,eAAe,CAAC,CAAD,CAAf;AACD,SAFD,MAEO,IAAIH,YAAY,KAAK,CAArB,EAAwB;AAC7BG,UAAAA,eAAe,CAAC,CAAD,CAAf;AACD,SAFM,MAEA,IAAIH,YAAY,KAAK,CAArB,EAAwB;AAC7BY,UAAAA,UAAU,CAAC,YAAY;AACrBX,YAAAA,aAAa,CAAC,KAAD,CAAb;AACAC,YAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD,WAHS,EAGPE,MAAM,GAAG,GAHF,CAAV;AAIAD,UAAAA,eAAe,CAAC,IAAD,CAAf;AACD,SANM,MAMA,CACN;AACF;AACF;AACF,GAjBD;;AAmBA,sBACE;AAAA,2BACE;AACE,MAAA,MAAM,EAAEQ,MADV;AAEE,MAAA,OAAO,EAAEN,UAFX;AAGE,MAAA,GAAG,EAAEZ,KAHP;AAIE,MAAA,KAAK,EAAE;AACLoB,QAAAA,KAAK,EAAE,MADF;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,MAAM,EAAE,SAHH;AAILC,QAAAA,SAAS,EAAEtB,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,CAAzB,IAA8BA,KAAK,KAAK,CAAxC,GAA4C,KAA5C,GAAoD;AAJ1D;AAJT;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAeD;;KA3DQF,c;AA6DT,OAAO,MAAMyB,aAAa,gBAAG1B,KAAK,CAAC2B,IAAN,CAAW1B,cAAX,CAAtB;MAAMyB,a","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { AnySoaRecord } from \"dns\";\r\n\r\nfunction PreviewCanvasx({\r\n  image,\r\n  index,\r\n  setcropimage,\r\n  setcrop,\r\n  crop,\r\n  cropTOPLEVELScrollRef,\r\n  allowCropAllCanvas,\r\n  cutOffLoader,\r\n  setwaitONLOAD,\r\n  setsuperCropLoadFade,\r\n  setcutOffLoader,\r\n  length,\r\n}: any): JSX.Element {\r\n  ///\r\n  ///\r\n  const changeCrop = () => {\r\n    setcropimage(image);\r\n    cropTOPLEVELScrollRef.current.scrollTo(\"topcanvas\", {\r\n      duration: 1800,\r\n      delay: 0,\r\n      smooth: \"easeInOutQuart\",\r\n    });\r\n  };\r\n\r\n  const loader = () => {\r\n    if (allowCropAllCanvas) {\r\n      if (length - 1 === index) {\r\n        if (cutOffLoader === 0) {\r\n          setcutOffLoader(1);\r\n        } else if (cutOffLoader === 1) {\r\n          setcutOffLoader(2);\r\n        } else if (cutOffLoader === 2) {\r\n          setTimeout(function () {\r\n            setwaitONLOAD(false);\r\n            setsuperCropLoadFade(false);\r\n          }, length * 600);\r\n          setcutOffLoader(true);\r\n        } else {\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <img\r\n        onLoad={loader}\r\n        onClick={changeCrop}\r\n        src={image}\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"auto\",\r\n          cursor: \"pointer\",\r\n          marginTop: index === 0 || index === 1 || index === 2 ? \"0px\" : \"-5px\",\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport const PreviewCanvas = React.memo(PreviewCanvasx);\r\n"]},"metadata":{},"sourceType":"module"}