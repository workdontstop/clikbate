{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\Clikbate\\\\src\\\\upload\\\\VideoFFmpeg.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { createFFmpeg } from '@ffmpeg/ffmpeg';\nimport { fetchFile, toBlobURL } from '@ffmpeg/util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoFFmpegx = ({\n  VideoUrl\n}) => {\n  _s();\n  const [recordedVideoUrl, setRecordedVideoUrl] = useState(null);\n  const ffmpegRef = useRef(null);\n  if (!ffmpegRef.current) {\n    ffmpegRef.current = createFFmpeg({\n      log: true\n    });\n  }\n  const loadFFmpeg = async () => {\n    const ffmpeg = ffmpegRef.current;\n    const baseURL = 'https://unpkg.com/@ffmpeg/core-mt@0.12.5/dist/umd/';\n    try {\n      if (ffmpeg) {\n        await ffmpeg.load({\n          coreURL: await toBlobURL(`${baseURL}/ffmpeg-core.js`, 'text/javascript'),\n          wasmURL: await toBlobURL(`${baseURL}/ffmpeg-core.wasm`, 'application/wasm'),\n          workerURL: await toBlobURL(`${baseURL}/ffmpeg-core.worker.js`, 'text/javascript')\n        });\n      }\n    } catch (error) {\n      // Handle or log the error\n      console.error('Erro loading FFmpeg:', error);\n\n      // Specific handling for SharedArrayBuffer error\n      if (error.message.includes('SharedArrayBuffer')) {\n        console.error('SharedArrayBuffer is not defined. Check if your site is correctly set up for cross-origin isolation.');\n        // Implement fallback or additional error handling\n      }\n    }\n  };\n  const processVideo = async sourceVideoUrl => {\n    const ffmpeg = ffmpegRef.current;\n    if (!ffmpeg.isLoaded()) {\n      await loadFFmpeg();\n      alert('kk');\n    }\n    ffmpeg.FS('writeFile', 'input.webm', await fetchFile(sourceVideoUrl));\n    await ffmpeg.run('-ss', '00:01:00', '-i', 'input.webm', '-t', '10', '-c:v', 'libx264', '-c:a', 'aac', 'output.mp4');\n    const data = ffmpeg.FS('readFile', 'output.mp4');\n    const url = URL.createObjectURL(new Blob([data.buffer], {\n      type: 'video/mp4'\n    }));\n    setRecordedVideoUrl(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => processVideo(VideoUrl),\n      children: \"Process Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), recordedVideoUrl && /*#__PURE__*/_jsxDEV(\"video\", {\n      src: recordedVideoUrl,\n      controls: true,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoFFmpegx, \"1WrjxgCYSKmwKSxQQiVoz2Mos6A=\");\n_c = VideoFFmpegx;\nexport const VideoFFmpeg = /*#__PURE__*/React.memo(VideoFFmpegx);\n_c2 = VideoFFmpeg;\nvar _c, _c2;\n$RefreshReg$(_c, \"VideoFFmpegx\");\n$RefreshReg$(_c2, \"VideoFFmpeg\");","map":{"version":3,"names":["React","useState","useRef","createFFmpeg","fetchFile","toBlobURL","jsxDEV","_jsxDEV","VideoFFmpegx","VideoUrl","_s","recordedVideoUrl","setRecordedVideoUrl","ffmpegRef","current","log","loadFFmpeg","ffmpeg","baseURL","load","coreURL","wasmURL","workerURL","error","console","message","includes","processVideo","sourceVideoUrl","isLoaded","alert","FS","run","data","url","URL","createObjectURL","Blob","buffer","type","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","controls","style","width","_c","VideoFFmpeg","memo","_c2","$RefreshReg$"],"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/Clikbate/src/upload/VideoFFmpeg.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { createFFmpeg } from '@ffmpeg/ffmpeg';\r\nimport { fetchFile, toBlobURL } from '@ffmpeg/util';\r\n\r\nconst VideoFFmpegx = ({ VideoUrl }: any) => {\r\n    const [recordedVideoUrl, setRecordedVideoUrl] = useState(null);\r\n    const ffmpegRef = useRef(null);\r\n\r\n    if (!ffmpegRef.current) {\r\n        ffmpegRef.current = createFFmpeg({ log: true });\r\n    }\r\n\r\n    const loadFFmpeg = async () => {\r\n        const ffmpeg: any = ffmpegRef.current;\r\n        const baseURL = 'https://unpkg.com/@ffmpeg/core-mt@0.12.5/dist/umd/';\r\n\r\n        try {\r\n            if (ffmpeg) {\r\n\r\n                await ffmpeg.load({\r\n                    coreURL: await toBlobURL(`${baseURL}/ffmpeg-core.js`, 'text/javascript'),\r\n                    wasmURL: await toBlobURL(`${baseURL}/ffmpeg-core.wasm`, 'application/wasm'),\r\n                    workerURL: await toBlobURL(`${baseURL}/ffmpeg-core.worker.js`, 'text/javascript')\r\n                });\r\n            }\r\n        } catch (error: any) {\r\n            // Handle or log the error\r\n            console.error('Erro loading FFmpeg:', error);\r\n\r\n            // Specific handling for SharedArrayBuffer error\r\n            if (error.message.includes('SharedArrayBuffer')) {\r\n                console.error('SharedArrayBuffer is not defined. Check if your site is correctly set up for cross-origin isolation.');\r\n                // Implement fallback or additional error handling\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const processVideo = async (sourceVideoUrl: any) => {\r\n\r\n        const ffmpeg: any = ffmpegRef.current;\r\n        if (!ffmpeg.isLoaded()) {\r\n            await loadFFmpeg();\r\n            alert('kk');\r\n        }\r\n\r\n\r\n        ffmpeg.FS('writeFile', 'input.webm', await fetchFile(sourceVideoUrl));\r\n        await ffmpeg.run('-ss', '00:01:00', '-i', 'input.webm', '-t', '10', '-c:v', 'libx264', '-c:a', 'aac', 'output.mp4');\r\n        const data = ffmpeg.FS('readFile', 'output.mp4');\r\n        const url: any = URL.createObjectURL(new Blob([data.buffer], { type: 'video/mp4' }));\r\n        setRecordedVideoUrl(url);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => processVideo(VideoUrl)}>Process Video</button>\r\n            {recordedVideoUrl && <video src={recordedVideoUrl} controls style={{ width: '100%' }}></video>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const VideoFFmpeg = React.memo(VideoFFmpegx);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}