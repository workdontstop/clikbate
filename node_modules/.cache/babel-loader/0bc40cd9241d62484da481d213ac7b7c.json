{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\Clikbate\\\\src\\\\profile\\\\Profile.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport { Post } from \"./Post\";\nimport { MiniPost } from \"./MiniPost\";\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ActualMenu } from \"./ActualMenu\";\nimport { Grid } from \"@material-ui/core\";\nimport Masonry from \"@mui/lab/Masonry\";\nimport { SnapToggleAction } from \".././GlobalActions\";\nimport { UpdateLoader } from \".././GlobalActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Profilex({\n  OpenModalForm,\n  getSliderWidthRef,\n  getSliderWidth,\n  postData,\n  formtype,\n  showModalForm,\n  CloseModalForm,\n  aboutTemplateGo,\n  commentTemplateGo,\n  postDatainner,\n  postDatainnerThumb,\n  showProfiileData,\n  paperPostScrollRef,\n  setx,\n  x,\n  setDiscussionImage,\n  setCommentPostid,\n  miniLayoutPost,\n  setStopBodyScroll,\n  setSliderIndexMini,\n  zoomClickedIndex,\n  setzoomClickedIndex,\n  miniProfile,\n  setminiProfile,\n  sliderIndexMini,\n  setconnectTemplateGo,\n  settypeEmo,\n  ScrollTo,\n  setshowThisComponenet,\n  showThisComponenet,\n  setscrollLocation,\n  setShowLoader2,\n  ShowLoader2,\n  StopMini,\n  setStopMini,\n  postDatainnerInteraction1,\n  postDatainnerInteraction2,\n  clikplay,\n  callPagination,\n  setShowBigPlay,\n  setsuperSettings,\n  showModalFormMenu,\n  setshowModalFormMenu,\n  ShowBigPlay\n}) {\n  _s();\n\n  const [countAutoplay, setcountAutoplay] = useState(0);\n  const dispatch = useDispatch();\n  const postDivRef = useRef([]);\n  const postItemsRef = useRef([]);\n  const canvasRefIn = useRef(null); ///\n\n  const [second, setsecond] = useState(0);\n  const [secondgo, setsecondgo] = useState(false);\n  const [itemheight, setitemheight] = useState([]);\n  const [itemheighthold, setitemheighthold] = useState([]);\n  const [itemcroptype, setitemcroptype] = useState([]);\n  const [itemFinalPostHeight, setitemFinalPostHeight] = useState([]);\n  const [itemInteractGo, setitemInteractGo] = useState([]);\n  const lastItemElement = useRef();\n  const [showMoreIndicator, setshowMoreIndicator] = useState(false);\n  const [lastIndicatorPush, setlastIndicatorPush] = useState(false);\n  const [lastIndicatorPushH, setlastIndicatorPushH] = useState(37);\n  useEffect(() => {\n    if (clikplay) {\n      clearAllTimers();\n    }\n  }, [clikplay]);\n  useEffect(() => {\n    if (showProfiileData) {\n      if (postData.length < 20) {} else {\n        setTimeout(() => {\n          // Initialize the observer in the effect\n          const observer = new IntersectionObserver(entries => {\n            const ent = entries[0];\n\n            if (ent.isIntersecting) {\n              if (sTimer.current) {\n                clearTimeout(sTimer.current);\n              }\n\n              if (sTimer2.current) {\n                clearTimeout(sTimer2.current);\n              }\n\n              if (sTimer3.current) {\n                clearTimeout(sTimer3.current);\n              }\n\n              sTimer.current = setTimeout(() => {\n                setshowMoreIndicator(true);\n                sTimer2.current = setTimeout(() => {\n                  dispatch(UpdateLoader(true));\n                  setshowThisComponenet(true);\n                  setminiProfile(false);\n                  callPagination();\n                }, 1400);\n              }, 200);\n            } else {\n              if (sTimer.current) {\n                clearTimeout(sTimer.current);\n              }\n\n              if (sTimer2.current) {\n                clearTimeout(sTimer2.current);\n              }\n\n              setshowMoreIndicator(false); ///setmoreFeeds(false);\n            }\n          });\n\n          if (lastItemElement.current) {\n            observer.observe(lastItemElement.current);\n          } // Cleanup function to disconnect the observer\n\n\n          return () => {\n            observer.disconnect();\n          };\n        }, 4500);\n      }\n    }\n  }, [lastItemElement, postData, showProfiileData]); // Re-run the effect when dependencies change\n\n  const [ActiveCanvas, setActiveCanvas] = useState(0);\n  const [itemOriginalPostHeight, setitemOriginalPostHeight] = useState([]);\n  const [itemCLICKED, setitemCLICKED] = useState([]);\n  const [onLoadDataOnce, setonLoadDataOnce] = useState([]);\n  const [ActiveAutoPlay, setActiveAutoPlay] = useState([]);\n  var heightplus = matchPc ? 0.38 : matchTablet ? 0.3 : 0.265;\n  var postbackheighthold = document.documentElement.clientHeight * heightplus;\n  const [postbackheight] = useState(postbackheighthold);\n  const sTimer = useRef(null);\n  const sTimer2 = useRef(null);\n  const sTimer3 = useRef(null);\n  const scrollTypeTimer = useRef(null); ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    screenHeight,\n    darkmode,\n    activateLoader,\n    pagenum\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const screenHeightReducer = screenHeight;\n  const darkmodeReducer = darkmode;\n  const activateLoaderReducer = activateLoader;\n  const pagenumReducer = pagenum; ///\n  ///\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\n\n  const addPostItemsRef = itemsRef => {\n    if (itemsRef && !postItemsRef.current.includes(itemsRef)) {\n      postItemsRef.current.push(itemsRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  };\n\n  const addpostDivRefRoll = divRef => {\n    if (divRef && !postDivRefRoll.current.includes(divRef)) {\n      postDivRefRoll.current.push(divRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  }; ///\n  ///\n  ///\n  ///CREATE div REFS FROM POSTS AND ADD THEM TO ARRAY\n\n\n  const addpostDivRef = divRef => {\n    if (divRef && !postDivRef.current.includes(divRef)) {\n      postDivRef.current.push(divRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  };\n\n  const addpostDivRefx = divRef => {\n    if (divRef && !postDivRefx.current.includes(divRef)) {\n      postDivRefx.current.push(divRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  };\n\n  useEffect(() => {\n    if (postData.length > 0 && showProfiileData) {\n      const initialItemheight = postData.map(obj => obj.itemheight);\n      setitemheight(initialItemheight);\n      const initialItemrealheighthold = postData.map(obj => obj.itemrealheighthold);\n      setitemheighthold(initialItemrealheighthold);\n      const initialtemcroptype = postData.map(obj => obj.itemcroptype);\n      setitemcroptype(initialtemcroptype);\n      const initialitemFinalPostHeight = postData.map(obj => obj.itemFinalPostHeight);\n      setitemFinalPostHeight(initialitemFinalPostHeight);\n      const itemInteractGo1xx = postData.map(obj => obj.itemInteractGo);\n      setitemInteractGo(itemInteractGo1xx);\n      const initialitemOriginalPostHeight = postData.map(obj => obj.itemOriginalPostHeight);\n      setitemOriginalPostHeight(initialitemOriginalPostHeight);\n      const initialitemCLICKED = postData.map(obj => obj.itemCLICKED);\n      setitemCLICKED(initialitemCLICKED);\n      const initialsetonLoadDataOnce = postData.map(obj => obj.onLoadDataOnce);\n      setonLoadDataOnce(initialsetonLoadDataOnce);\n      const initialsetActiveAutoPlay = postData.map(obj => obj.ActiveAutoPlay);\n      setActiveAutoPlay(initialsetActiveAutoPlay);\n    }\n  }, [postData, showProfiileData]);\n  const newArraa = [...itemheight];\n  const newArrxy = [...onLoadDataOnce];\n  const newArrayFinalPostHeight = [...itemFinalPostHeight];\n  const newArrxq = [...itemcroptype];\n  const newArrayitemOriginalPostHeight = [...itemOriginalPostHeight];\n  const newArrx = [...itemheighthold];\n  const newArr = [...itemheight];\n\n  function percentage(num, per) {\n    return num / 100 * per;\n  }\n\n  const navvScroll = () => {\n    /// alert(ScrollTo);\n    if (ScrollTo === 0) {} else {\n      ///alert(ScrollTo);\n      setTimeout(() => {\n        paperPostScrollRef.current.scrollTop = ScrollTo;\n      }, 30);\n    }\n  };\n\n  const onPostsItemload = useCallback((e, index, itemnum) => {\n    ///\n    if (ScrollTo === index) {\n      navvScroll();\n    }\n\n    if (itemnum === 0) {\n      if (postItemsRef.current[index]) {\n        var imageHeight = postItemsRef.current[index].clientHeight; ///////////////////////////////\n\n        newArraa[index] = `${imageHeight}px`;\n        setitemheight(newArraa); ///////////////////////////////\n        ///////////////////////////////\n\n        var newh = imageHeight / 1.042 - postbackheighthold;\n        newArrx[index] = `${newh}`;\n        setitemheighthold(newArrx); ///////////////////////////////\n\n        newArrayFinalPostHeight[index] = imageHeight;\n        setitemFinalPostHeight(newArrayFinalPostHeight); ///////////////////////////////\n\n        newArrayitemOriginalPostHeight[index] = imageHeight;\n        setitemOriginalPostHeight(newArrayitemOriginalPostHeight); ///////////////////////////////\n\n        var choppedHeight = percentage(screenHeightReducer, 101);\n        var choppedwidth = percentage(screenHeightReducer, matchPc ? 55 : matchTablet ? 52 : 35);\n\n        if (imageHeight < choppedwidth) {\n          /////WIDE IMAGE SET\n          newArr[index] = `${choppedwidth}px`;\n          setitemheight(newArr); ///////////////////////////////\n\n          var newh = choppedwidth / 1.015 - postbackheighthold;\n          newArrx[index] = `${newh}`;\n          setitemheighthold(newArrx); ////////////////////////////\n          ///////////////////////////////\n\n          newArrxq[index] = 1;\n          setitemcroptype(newArrxq); ////////////////////////////\n          ///////////////////////////////\n\n          newArrayFinalPostHeight[index] = choppedwidth;\n          setitemFinalPostHeight(newArrayFinalPostHeight);\n        } else if (imageHeight > choppedHeight) {\n          /////LONG IMAGE SET\n          newArr[index] = `${choppedHeight}px`;\n          setitemheight(newArr); ///////////////////////////////\n\n          var newh = choppedHeight / 1 - postbackheighthold;\n          newArrx[index] = `${newh}`;\n          setitemheighthold(newArrx); ////////////////////////////////\n          ///////////////////////////////\n\n          newArrxq[index] = 2;\n          setitemcroptype(newArrxq); ///////////////////////////////\n\n          newArrayFinalPostHeight[index] = choppedHeight;\n          setitemFinalPostHeight(newArrayFinalPostHeight); ///////////////////////////////\n        } else {\n          var imageWidth = postItemsRef.current[index].clientWidth;\n\n          if (imageWidth > imageHeight) {\n            ///////////////////////////////\n            var newh = imageHeight / 1.066 - postbackheighthold;\n            newArrx[index] = `${newh}`;\n            setitemheighthold(newArrx); ///////////////////////////////\n            ///////////////////////////////\n\n            newArrxq[index] = 3;\n            setitemcroptype(newArrxq); ///////////////////////////////\n          } else {\n            ///////////////////////////////\n            newArrxq[index] = 4;\n            setitemcroptype(newArrxq); ///////////////////////////////\n          }\n        } ///////////////////////////////\n\n\n        newArrxy[index] = true;\n        setonLoadDataOnce(newArrxy); ///////////////////////////////\n\n        if (StopMini || pagenumReducer === 0) {} else {\n          if (postData[0].lim > 0 && index === 0) {\n            setTimeout(function () {\n              postDivRef.current[0].scrollIntoView({\n                behavior: \"smooth\",\n                block: \"start\"\n              });\n              postDivRefx.current[0].scrollIntoView({\n                behavior: \"smooth\",\n                block: \"start\"\n              }); ///////////\n            }, 1100);\n          }\n        }\n\n        if (postData.length - 1 === index) {\n          /**  if (activateLoaderReducer) {\r\n                          dispatch(UpdateLoader(false));\r\n                        } */\n          ////\n          navvScroll(); ///\n          ///\n\n          dispatch(UpdateLoader(true));\n          setTimeout(function () {\n            if (StopMini) {\n              setStopMini(false);\n            } else {\n              setminiProfile(true);\n            } ///////////\n\n          }, 2000);\n          setTimeout(function () {\n            setlastIndicatorPushH(22 + 37);\n            setlastIndicatorPush(true);\n            setshowThisComponenet(false);\n            dispatch(UpdateLoader(false));\n\n            if (StopMini) {} else {\n              setTimeout(() => {\n                scrollToRef();\n              }, 3600);\n            } ///////////\n\n          }, 4000);\n        }\n      }\n    }\n  }, [StopMini, screenHeightReducer, itemheight, itemheighthold, itemFinalPostHeight, showProfiileData, activateLoaderReducer, postItemsRef, postData, pagenumReducer]);\n\n  const scrollToPost = index => {\n    postDivRef.current[index].scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\"\n    });\n  };\n\n  const scrollToPostx = index => {\n    postDivRefx.current[index].scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\"\n    });\n  };\n\n  const postitemSHOWFULLHEIGHT = (index, type) => {\n    if (itemcroptype[index] === 1 || itemcroptype[index] === 2) {\n      if (type === 0) {\n        const newitemHeight = [...itemheight];\n        newitemHeight[index] = `auto`;\n        setitemheight(newitemHeight);\n      } else {\n        const newitemHeight = [...itemheight];\n        newitemHeight[index] = `${itemFinalPostHeight[index]}px`;\n        setitemheight(newitemHeight);\n      }\n    }\n  };\n\n  const scrollLongPicTimer = useRef(null);\n  const scrollLongPicTimerx = useRef(null);\n  const snapTimer = useRef(null);\n\n  const freesnap = () => {\n    dispatch(SnapToggleAction(false));\n\n    if (snapTimer.current) {\n      clearTimeout(snapTimer.current);\n    }\n\n    snapTimer.current = setTimeout(function () {\n      dispatch(SnapToggleAction(true));\n    }, matchMobile ? 6000 : 11000);\n  };\n\n  const AUTOSlideLongImages = index => {\n    ////freesnap();\n    if (itemcroptype[index] === 2) {\n      scrollLongPicTimerx.current = setTimeout(() => {\n        if (paperPostScrollRef.current) {\n          paperPostScrollRef.current.scrollTo({\n            top: paperPostScrollRef.current.scrollTop + itemOriginalPostHeight[index] / 3,\n            behavior: \"auto\"\n          });\n        }\n      }, 500);\n      scrollLongPicTimer.current = setTimeout(() => {\n        postDivRef.current[index].scrollIntoView({\n          behavior: \"smooth\",\n          block: \"start\"\n        });\n      }, 1300);\n    }\n  };\n\n  const onPostsItemClicked = useCallback(index => {\n    setindexRoll(index);\n    clearAllTimers();\n    setActiveCanvas(index);\n\n    if (itemCLICKED[index]) {\n      dispatch(SnapToggleAction(true));\n\n      if (snapTimer.current) {\n        clearTimeout(snapTimer.current);\n      }\n\n      snapTimer.current = setTimeout(function () {}, 3000);\n      const newclickArray = [...itemCLICKED];\n      newclickArray[index] = false;\n      setitemCLICKED(newclickArray);\n      postitemSHOWFULLHEIGHT(index, 1);\n      scrollToPost(index);\n    } else {\n      dispatch(SnapToggleAction(false));\n      AUTOSlideLongImages(index);\n\n      if (scrollTypeTimer.current) {\n        clearTimeout(scrollTypeTimer.current);\n      }\n\n      const newclickArray = [...itemCLICKED];\n      newclickArray[index] = true;\n      setitemCLICKED(newclickArray);\n      postitemSHOWFULLHEIGHT(index, 0);\n      scrollToPost(index);\n    }\n  }, [itemCLICKED]); ///\n  ///\n  ///TYPES FOR ISLOGGEDIN\n\n  ///\n  ///LOGGED IN DATA FROM REDUX\n  const {\n    loggedIn\n  } = useSelector(state => ({ ...state.IsLoggedReducer\n  }));\n  const loggedInReducer = loggedIn; ///\n  ///\n  ///MUI PAPER STYLES FROM REDUX\n\n  const {\n    PaperStyleLight,\n    PaperStyleDark\n  } = useSelector(state => ({ ...state.PaperReducerLightnDark\n  }));\n  var PaperStyleReducer = \"\";\n\n  if (darkmodeReducer) {\n    PaperStyleReducer = PaperStyleDark;\n  } else {\n    PaperStyleReducer = PaperStyleLight;\n  } ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype;\n  var widthProfilePic = matchPc ? \"72%\" : matchTablet ? \"84%\" : \"44vw\";\n  var topProfilePic = matchPc ? \"-20vh\" : matchTablet ? \"-12vh\" : \"-8vh\";\n  var leftProfilePic = matchPc ? \"1vw\" : matchTablet ? \"3.5vw\" : \"2.7vw\";\n  var optionsClass = \"\";\n  var fontOptions = \"\";\n\n  if (matchPc) {\n    optionsClass = \"profile-optionsImagePc\";\n    fontOptions = \"2.7vw\";\n  } else if (matchTablet) {\n    optionsClass = \"profile-optionsImageTablet\";\n    fontOptions = \"5rem\";\n  } else {\n    optionsClass = \"profile-optionsImageMobile\";\n    fontOptions = \"1.9rem\";\n  } ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n\n  const {\n    image\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const imageReducer = image;\n\n  const blank = () => {};\n\n  const [showModalUpload, setShowModalUpload] = useState(false); ///\n  ///\n  ///\n  /// CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\n\n  const closeUploadModal = useCallback(backbutton => {\n    //pop states fires when back and forward buttons used\n    if (backbutton === 1) {\n      window.onpopstate = () => {\n        window.history.pushState(null, \"\", window.location.href);\n        window.onpopstate = null;\n        setShowModalUpload(false);\n      };\n    } else {\n      window.history.pushState(null, \"\", \".\");\n      window.onpopstate = null;\n      setShowModalUpload(false);\n    }\n  }, []); ///\n  ///\n  ///\n  ///OPEN MODAL THEN CALL CLOSEMODAL FUNCTION WHICH WAITS FOR A POP EVENT(for closing modal)\n\n  const OpenUploadModal = useCallback(() => {\n    setShowModalUpload(!showModalUpload); //pushstate add enteries to your history\n\n    window.history.pushState(null, \"\", \"Options\");\n    closeUploadModal(1);\n  }, [showModalUpload, closeUploadModal]);\n  useEffect(() => {/// miniProfile ? setx(false) : setx(true);\n  }, [miniProfile]);\n  useEffect(() => {\n    setTimeout(function () {\n      dispatch(UpdateLoader(false));\n      if (showThisComponenet) setshowThisComponenet(false);\n    }, 7500);\n    setTimeout(function () {\n      if (ShowLoader2) {\n        setShowLoader2(false);\n      }\n    }, 1500);\n  }, [postData]);\n  const TopRef = useRef();\n  const [indexRoll, setindexRoll] = useState(0);\n  const postDivRefRoll = useRef([]);\n  const tyTimer = useRef([]);\n  const [AllowRoll, setAllowRoll] = useState(false);\n\n  const clearAllTimers = () => {\n    tyTimer.current.forEach(timer => {\n      if (timer !== null) {\n        clearTimeout(timer);\n      }\n    });\n    tyTimer.current = [];\n    setShowBigPlay(false);\n  };\n\n  const postDivRefx = useRef([]);\n  const scrollToRef = useCallback(() => {\n    var Limit = postData.length;\n    var Time = 0;\n\n    for (let i = 0; i <= Limit; i++) {\n      // <= 20 to include the reset to the first post\n      if (i > indexRoll) {\n        Time = Time + 7000;\n        setShowBigPlay(true);\n        tyTimer.current[i] = setTimeout(() => {\n          if (i === Limit) {\n            // Reset to the first post after reaching the last post\n            postDivRefx.current[Limit < 3 ? Limit - 1 : Limit - 3].scrollIntoView({\n              behavior: \"smooth\",\n              block: \"start\"\n            }); //\n\n            postDivRefRoll.current[Limit < 3 ? Limit - 1 : Limit - 3].scrollIntoView({\n              behavior: \"smooth\",\n              block: \"start\"\n            });\n            setShowBigPlay(false);\n          } else {\n            postDivRefx.current[i].scrollIntoView({\n              behavior: \"smooth\",\n              block: \"start\"\n            }); //\n\n            postDivRefRoll.current[i].scrollIntoView({\n              behavior: \"smooth\",\n              block: \"start\"\n            });\n          }\n        }, Time - 7000);\n      }\n    }\n  }, [AllowRoll, indexRoll, postData]); /////////////////////////////////////////////////////////////\n\n  const [Added, setAdded] = useState(100);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"dontallowhighlighting\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          position: \"fixed\",\n          width: \"100%\",\n          padding: \"0px\",\n          height: \"0px\",\n          zIndex: 20000,\n          top: \"0px\",\n          cursor: \"pointer\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 9\n      }, this), showModalFormMenu ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          height: \"0px\",\n          zIndex: 500000000000,\n          position: 'fixed',\n          top: '0vh',\n          backgroundColor: '#00ccff'\n        },\n        children: /*#__PURE__*/_jsxDEV(ActualMenu, {\n          scrollToRef: scrollToRef,\n          setsuperSettings: setsuperSettings,\n          postData: postData,\n          showModalFormMenu: showModalFormMenu,\n          setshowModalFormMenu: setshowModalFormMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 30\n      }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n        ref: TopRef,\n        className: \"parent-containerEffect  effect\",\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\",\n          paddingLeft: miniProfile ? matchPc ? \"6vw\" : \"0vw\" : \"0vw\",\n          paddingRight: miniProfile ? matchPc ? \"6vw\" : \"0vw\" : \"0vw\",\n          height: \"auto\",\n          marginTop: matchMobile ? '3vh' : '5.5vh',\n          marginLeft: miniProfile && matchPc ? '5.5vw' : '0px'\n        },\n        children: postData.length > 0 ? /*#__PURE__*/_jsxDEV(Masonry, {\n          columns: matchPc ? 2 : miniProfile ? 2 : 1,\n          spacing: miniProfile && matchMobile ? 0 : miniProfile ? 16 : 0,\n          style: {\n            padding: \"0px\"\n          },\n          children: postData.map((post, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"relative\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: miniProfile ? \"block\" : \"none\",\n                marginTop: \"-5px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(MiniPost, {\n                ShowBigPlay: ShowBigPlay,\n                setAdded: setAdded,\n                Added: Added,\n                postDatainnerInteraction2: postDatainnerInteraction2,\n                postDatainnerInteraction1: postDatainnerInteraction1,\n                paperPostScrollRef: paperPostScrollRef,\n                setSliderIndexMini: setSliderIndexMini,\n                sliderIndexMini: sliderIndexMini,\n                zoomClickedIndex: zoomClickedIndex,\n                setzoomClickedIndex: setzoomClickedIndex,\n                miniProfile: miniProfile,\n                setminiProfile: setminiProfile,\n                setStopBodyScroll: setStopBodyScroll,\n                setx: setx,\n                miniLayoutPost: miniLayoutPost,\n                setCommentPostid: setCommentPostid,\n                postData: postData,\n                setDiscussionImage: setDiscussionImage,\n                OpenModalForm: OpenModalForm,\n                second: second,\n                setsecond: setsecond,\n                secondgo: secondgo,\n                setsecondgo: setsecondgo,\n                setcountAutoplay: setcountAutoplay,\n                countAutoplay: countAutoplay,\n                onLoadDataOnce: onLoadDataOnce,\n                pey: i,\n                addPostItemsRef: addPostItemsRef,\n                postDivRefx: postDivRefx,\n                onPostsItemload: onPostsItemload,\n                post: post,\n                itemheight: itemheight,\n                itemheighthold: itemheighthold,\n                postbackheight: postbackheight,\n                itemcroptype: itemcroptype,\n                length: postData.length,\n                itemFinalPostHeight: itemFinalPostHeight,\n                onPostsItemClicked: onPostsItemClicked,\n                itemCLICKED: itemCLICKED,\n                addpostDivRefx: addpostDivRefx,\n                postDatainner: postDatainner,\n                postDatainnerThumb: postDatainnerThumb,\n                itemOriginalPostHeight: itemOriginalPostHeight,\n                ActiveAutoPlay: ActiveAutoPlay,\n                setActiveAutoPlay: setActiveAutoPlay,\n                AUTOSlideLongImages: AUTOSlideLongImages,\n                scrollToPostx: scrollToPostx\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1006,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                style: {\n                  marginTop: \"20px\",\n                  height: matchMobile ? \"9vh\" : ' 0vh'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1055,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: miniProfile ? \"none\" : \"block\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Post, {\n                ShowBigPlay: ShowBigPlay,\n                setAdded: setAdded,\n                Added: Added,\n                addpostDivRefRoll: addpostDivRefRoll,\n                canvasRefIn: canvasRefIn,\n                ActiveCanvas: ActiveCanvas,\n                postItemsRef: postItemsRef,\n                postDatainnerInteraction2: postDatainnerInteraction2,\n                postDatainnerInteraction1: postDatainnerInteraction1,\n                setscrollLocation: setscrollLocation,\n                paperPostScrollRef: paperPostScrollRef,\n                settypeEmo: settypeEmo,\n                setconnectTemplateGo: setconnectTemplateGo,\n                sliderIndexMini: sliderIndexMini,\n                setsliderIndexMini: setSliderIndexMini,\n                zoomClickedIndex: zoomClickedIndex,\n                setzoomClickedIndex: setzoomClickedIndex,\n                miniProfile: miniProfile,\n                setminiProfile: setminiProfile,\n                setStopBodyScroll: setStopBodyScroll,\n                setx: setx,\n                miniLayoutPost: miniLayoutPost,\n                setCommentPostid: setCommentPostid,\n                postData: postData,\n                setDiscussionImage: setDiscussionImage,\n                OpenModalForm: OpenModalForm,\n                second: second,\n                setsecond: setsecond,\n                secondgo: secondgo,\n                setsecondgo: setsecondgo,\n                setcountAutoplay: setcountAutoplay,\n                countAutoplay: countAutoplay,\n                onLoadDataOnce: onLoadDataOnce,\n                pey: i,\n                addPostItemsRef: addPostItemsRef,\n                postDivRef: postDivRef,\n                onPostsItemload: onPostsItemload,\n                post: post,\n                itemheight: itemheight,\n                itemheighthold: itemheighthold,\n                postbackheight: postbackheight,\n                itemcroptype: itemcroptype,\n                length: postData.length,\n                itemFinalPostHeight: itemFinalPostHeight,\n                onPostsItemClicked: onPostsItemClicked,\n                itemCLICKED: itemCLICKED,\n                addpostDivRef: addpostDivRef,\n                postDatainner: postDatainner,\n                postDatainnerThumb: postDatainnerThumb,\n                itemOriginalPostHeight: itemOriginalPostHeight,\n                ActiveAutoPlay: ActiveAutoPlay,\n                setActiveAutoPlay: setActiveAutoPlay,\n                AUTOSlideLongImages: AUTOSlideLongImages,\n                scrollToPost: scrollToPost\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1066,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                style: {\n                  marginTop: \"0px\",\n                  height: \"0.5vh\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1121,\n                columnNumber: 24\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 983,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: \"animateColorAndPadding\",\n          xs: 8,\n          ref: lastItemElement,\n          style: {\n            visibility: showMoreIndicator ? 'visible' : 'hidden',\n            marginTop: lastIndicatorPush ? `${lastIndicatorPushH}vh` : \"37vh\",\n            height: \"7px\",\n            backgroundColor: 'blue'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Profilex, \"ezKc1WN73f6TYbriAOoJVU7Rk98=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Profilex;\nexport const Profile = /*#__PURE__*/React.memo(Profilex);\n_c2 = Profile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Profilex\");\n$RefreshReg$(_c2, \"Profile\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/Clikbate/src/profile/Profile.tsx"],"names":["React","useState","useRef","useCallback","useEffect","Post","MiniPost","matchPc","matchTablet","matchMobile","useSelector","useDispatch","ActualMenu","Grid","Masonry","SnapToggleAction","UpdateLoader","Profilex","OpenModalForm","getSliderWidthRef","getSliderWidth","postData","formtype","showModalForm","CloseModalForm","aboutTemplateGo","commentTemplateGo","postDatainner","postDatainnerThumb","showProfiileData","paperPostScrollRef","setx","x","setDiscussionImage","setCommentPostid","miniLayoutPost","setStopBodyScroll","setSliderIndexMini","zoomClickedIndex","setzoomClickedIndex","miniProfile","setminiProfile","sliderIndexMini","setconnectTemplateGo","settypeEmo","ScrollTo","setshowThisComponenet","showThisComponenet","setscrollLocation","setShowLoader2","ShowLoader2","StopMini","setStopMini","postDatainnerInteraction1","postDatainnerInteraction2","clikplay","callPagination","setShowBigPlay","setsuperSettings","showModalFormMenu","setshowModalFormMenu","ShowBigPlay","countAutoplay","setcountAutoplay","dispatch","postDivRef","postItemsRef","canvasRefIn","second","setsecond","secondgo","setsecondgo","itemheight","setitemheight","itemheighthold","setitemheighthold","itemcroptype","setitemcroptype","itemFinalPostHeight","setitemFinalPostHeight","itemInteractGo","setitemInteractGo","lastItemElement","showMoreIndicator","setshowMoreIndicator","lastIndicatorPush","setlastIndicatorPush","lastIndicatorPushH","setlastIndicatorPushH","clearAllTimers","length","setTimeout","observer","IntersectionObserver","entries","ent","isIntersecting","sTimer","current","clearTimeout","sTimer2","sTimer3","observe","disconnect","ActiveCanvas","setActiveCanvas","itemOriginalPostHeight","setitemOriginalPostHeight","itemCLICKED","setitemCLICKED","onLoadDataOnce","setonLoadDataOnce","ActiveAutoPlay","setActiveAutoPlay","heightplus","postbackheighthold","document","documentElement","clientHeight","postbackheight","scrollTypeTimer","screenHeight","darkmode","activateLoader","pagenum","state","GlobalReducer","screenHeightReducer","darkmodeReducer","activateLoaderReducer","pagenumReducer","addPostItemsRef","itemsRef","includes","push","addpostDivRefRoll","divRef","postDivRefRoll","addpostDivRef","addpostDivRefx","postDivRefx","initialItemheight","map","obj","initialItemrealheighthold","itemrealheighthold","initialtemcroptype","initialitemFinalPostHeight","itemInteractGo1xx","initialitemOriginalPostHeight","initialitemCLICKED","initialsetonLoadDataOnce","initialsetActiveAutoPlay","newArraa","newArrxy","newArrayFinalPostHeight","newArrxq","newArrayitemOriginalPostHeight","newArrx","newArr","percentage","num","per","navvScroll","scrollTop","onPostsItemload","e","index","itemnum","imageHeight","newh","choppedHeight","choppedwidth","imageWidth","clientWidth","lim","scrollIntoView","behavior","block","scrollToRef","scrollToPost","scrollToPostx","postitemSHOWFULLHEIGHT","type","newitemHeight","scrollLongPicTimer","scrollLongPicTimerx","snapTimer","freesnap","AUTOSlideLongImages","scrollTo","top","onPostsItemClicked","setindexRoll","newclickArray","loggedIn","IsLoggedReducer","loggedInReducer","PaperStyleLight","PaperStyleDark","PaperReducerLightnDark","PaperStyleReducer","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","widthProfilePic","topProfilePic","leftProfilePic","optionsClass","fontOptions","image","UserdataReducer","imageReducer","blank","showModalUpload","setShowModalUpload","closeUploadModal","backbutton","window","onpopstate","history","pushState","location","href","OpenUploadModal","TopRef","indexRoll","tyTimer","AllowRoll","setAllowRoll","forEach","timer","Limit","Time","i","Added","setAdded","position","width","padding","height","zIndex","cursor","backgroundColor","paddingLeft","paddingRight","marginTop","marginLeft","post","display","visibility","Profile","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport { Menu } from \"./Menu\";\r\nimport { Billboard } from \"./Billboard\";\r\nimport { Post } from \"./Post\";\r\nimport { MiniPost } from \"./MiniPost\";\r\nimport { OptionsSlider } from \"./OptionsSlider\";\r\nimport $ from \"jquery\";\r\n\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { ActualMenu } from \"./ActualMenu\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  createTheme,\r\n  MuiThemeProvider,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport ImagePhotoSizeSelectSmall from \"material-ui/svg-icons/image/photo-size-select-small\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { Upload } from \"../upload/Upload\";\r\nimport { SnapToggleAction } from \".././GlobalActions\";\r\nimport { UpdateLoader } from \".././GlobalActions\";\r\n\r\nfunction Profilex({\r\n  OpenModalForm,\r\n  getSliderWidthRef,\r\n  getSliderWidth,\r\n  postData,\r\n  formtype,\r\n  showModalForm,\r\n  CloseModalForm,\r\n  aboutTemplateGo,\r\n  commentTemplateGo,\r\n  postDatainner,\r\n  postDatainnerThumb,\r\n  showProfiileData,\r\n  paperPostScrollRef,\r\n  setx,\r\n  x,\r\n  setDiscussionImage,\r\n  setCommentPostid,\r\n  miniLayoutPost,\r\n  setStopBodyScroll,\r\n  setSliderIndexMini,\r\n  zoomClickedIndex,\r\n  setzoomClickedIndex,\r\n  miniProfile,\r\n  setminiProfile,\r\n  sliderIndexMini,\r\n  setconnectTemplateGo,\r\n  settypeEmo,\r\n  ScrollTo,\r\n  setshowThisComponenet,\r\n  showThisComponenet,\r\n  setscrollLocation,\r\n  setShowLoader2,\r\n  ShowLoader2,\r\n  StopMini,\r\n  setStopMini,\r\n  postDatainnerInteraction1,\r\n  postDatainnerInteraction2,\r\n  clikplay,\r\n  callPagination,\r\n  setShowBigPlay,\r\n  setsuperSettings,\r\n  showModalFormMenu,\r\n  setshowModalFormMenu,\r\n  ShowBigPlay\r\n}: any) {\r\n  const [countAutoplay, setcountAutoplay] = useState<number>(0);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const postDivRef = useRef<any[]>([]);\r\n\r\n  const postItemsRef = useRef<any>([]);\r\n\r\n\r\n\r\n\r\n  const canvasRefIn: any = useRef(null);\r\n\r\n  ///\r\n\r\n  const [second, setsecond] = useState<any>(0);\r\n  const [secondgo, setsecondgo] = useState<boolean>(false);\r\n\r\n  const [itemheight, setitemheight] = useState<Array<string>>([]);\r\n  const [itemheighthold, setitemheighthold] = useState<Array<string>>([]);\r\n  const [itemcroptype, setitemcroptype] = useState<Array<number>>([]);\r\n  const [itemFinalPostHeight, setitemFinalPostHeight] = useState<Array<number>>(\r\n    []\r\n  );\r\n\r\n  const [itemInteractGo, setitemInteractGo] = useState<Array<boolean>>(\r\n    []\r\n  );\r\n\r\n  const lastItemElement = useRef<any>();\r\n\r\n  const [showMoreIndicator, setshowMoreIndicator] = useState(false);\r\n\r\n  const [lastIndicatorPush, setlastIndicatorPush] = useState(false);\r\n\r\n  const [lastIndicatorPushH, setlastIndicatorPushH] = useState(37);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (clikplay) {\r\n      clearAllTimers();\r\n    }\r\n\r\n  }, [clikplay])\r\n\r\n  useEffect(() => {\r\n\r\n    if (showProfiileData) {\r\n      if (postData.length < 20) { } else {\r\n        setTimeout(() => {\r\n\r\n          // Initialize the observer in the effect\r\n          const observer = new IntersectionObserver((entries: any) => {\r\n            const ent = entries[0];\r\n            if (ent.isIntersecting) {\r\n\r\n              if (sTimer.current) {\r\n                clearTimeout(sTimer.current);\r\n              }\r\n\r\n              if (sTimer2.current) {\r\n                clearTimeout(sTimer2.current);\r\n              }\r\n\r\n              if (sTimer3.current) {\r\n                clearTimeout(sTimer3.current);\r\n              }\r\n\r\n              sTimer.current = setTimeout(() => {\r\n                setshowMoreIndicator(true)\r\n\r\n                sTimer2.current = setTimeout(() => {\r\n\r\n                  dispatch(UpdateLoader(true));\r\n                  setshowThisComponenet(true);\r\n                  setminiProfile(false);\r\n                  callPagination();\r\n\r\n\r\n\r\n\r\n\r\n\r\n                }, 1400)\r\n\r\n\r\n              }, 200)\r\n\r\n\r\n            } else {\r\n              if (sTimer.current) {\r\n                clearTimeout(sTimer.current);\r\n              }\r\n\r\n              if (sTimer2.current) {\r\n                clearTimeout(sTimer2.current);\r\n              }\r\n\r\n\r\n              setshowMoreIndicator(false)\r\n              ///setmoreFeeds(false);\r\n            }\r\n          });\r\n\r\n          if (lastItemElement.current) {\r\n            observer.observe(lastItemElement.current);\r\n          }\r\n\r\n          // Cleanup function to disconnect the observer\r\n          return () => {\r\n            observer.disconnect();\r\n          };\r\n        }, 4500)\r\n      }\r\n    }\r\n\r\n\r\n  }, [lastItemElement, postData, showProfiileData]); // Re-run the effect when dependencies change\r\n\r\n\r\n\r\n  const [ActiveCanvas, setActiveCanvas] = useState(0);\r\n\r\n  const [itemOriginalPostHeight, setitemOriginalPostHeight] = useState<\r\n    Array<number>\r\n  >([]);\r\n\r\n  const [itemCLICKED, setitemCLICKED] = useState<Array<boolean>>([]);\r\n  const [onLoadDataOnce, setonLoadDataOnce] = useState<Array<boolean>>([]);\r\n\r\n  const [ActiveAutoPlay, setActiveAutoPlay] = useState<Array<boolean>>([]);\r\n\r\n  var heightplus = matchPc ? 0.38 : matchTablet ? 0.3 : 0.265;\r\n  var postbackheighthold = document.documentElement.clientHeight * heightplus;\r\n\r\n  const [postbackheight] = useState<number>(postbackheighthold);\r\n\r\n  const sTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const sTimer2 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const sTimer3 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n\r\n  const scrollTypeTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n\r\n\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n      activateLoader: boolean;\r\n      pagenum: number\r\n\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const { screenHeight, darkmode, activateLoader, pagenum } = useSelector(\r\n    (state: RootStateGlobalReducer) => ({\r\n      ...state.GlobalReducer,\r\n    })\r\n  );\r\n  const screenHeightReducer = screenHeight;\r\n  const darkmodeReducer = darkmode;\r\n  const activateLoaderReducer = activateLoader;\r\n  const pagenumReducer = pagenum;\r\n\r\n\r\n  ///\r\n  ///\r\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\r\n  const addPostItemsRef = (itemsRef: any) => {\r\n    if (itemsRef && !postItemsRef.current.includes(itemsRef)) {\r\n      postItemsRef.current.push(itemsRef);\r\n    }\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n\r\n  const addpostDivRefRoll = (divRef: any) => {\r\n    if (divRef && !postDivRefRoll.current.includes(divRef)) {\r\n      postDivRefRoll.current.push(divRef);\r\n    }\r\n\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE div REFS FROM POSTS AND ADD THEM TO ARRAY\r\n  const addpostDivRef = (divRef: any) => {\r\n    if (divRef && !postDivRef.current.includes(divRef)) {\r\n      postDivRef.current.push(divRef);\r\n    }\r\n\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  const addpostDivRefx = (divRef: any) => {\r\n    if (divRef && !postDivRefx.current.includes(divRef)) {\r\n      postDivRefx.current.push(divRef);\r\n    }\r\n\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (postData.length > 0 && showProfiileData) {\r\n      const initialItemheight = postData.map((obj: any) => obj.itemheight);\r\n      setitemheight(initialItemheight);\r\n\r\n      const initialItemrealheighthold = postData.map(\r\n        (obj: any) => obj.itemrealheighthold\r\n      );\r\n      setitemheighthold(initialItemrealheighthold);\r\n\r\n      const initialtemcroptype = postData.map((obj: any) => obj.itemcroptype);\r\n      setitemcroptype(initialtemcroptype);\r\n\r\n      const initialitemFinalPostHeight = postData.map(\r\n        (obj: any) => obj.itemFinalPostHeight\r\n      );\r\n      setitemFinalPostHeight(initialitemFinalPostHeight);\r\n\r\n\r\n      const itemInteractGo1xx = postData.map(\r\n        (obj: any) => obj.itemInteractGo\r\n      );\r\n      setitemInteractGo(itemInteractGo1xx);\r\n\r\n\r\n\r\n      const initialitemOriginalPostHeight = postData.map(\r\n        (obj: any) => obj.itemOriginalPostHeight\r\n      );\r\n      setitemOriginalPostHeight(initialitemOriginalPostHeight);\r\n\r\n      const initialitemCLICKED = postData.map((obj: any) => obj.itemCLICKED);\r\n      setitemCLICKED(initialitemCLICKED);\r\n\r\n      const initialsetonLoadDataOnce = postData.map(\r\n        (obj: any) => obj.onLoadDataOnce\r\n      );\r\n      setonLoadDataOnce(initialsetonLoadDataOnce);\r\n\r\n      const initialsetActiveAutoPlay = postData.map(\r\n        (obj: any) => obj.ActiveAutoPlay\r\n      );\r\n      setActiveAutoPlay(initialsetActiveAutoPlay);\r\n    }\r\n  }, [postData, showProfiileData]);\r\n\r\n  const newArraa = [...itemheight];\r\n\r\n  const newArrxy = [...onLoadDataOnce];\r\n  const newArrayFinalPostHeight = [...itemFinalPostHeight];\r\n  const newArrxq = [...itemcroptype];\r\n\r\n  const newArrayitemOriginalPostHeight = [...itemOriginalPostHeight];\r\n\r\n  const newArrx = [...itemheighthold];\r\n\r\n  const newArr = [...itemheight];\r\n\r\n  function percentage(num: number, per: number) {\r\n    return (num / 100) * per;\r\n  }\r\n\r\n  const navvScroll = () => {\r\n    /// alert(ScrollTo);\r\n    if (ScrollTo === 0) {\r\n    } else {\r\n      ///alert(ScrollTo);\r\n      setTimeout(() => {\r\n        paperPostScrollRef.current.scrollTop = ScrollTo;\r\n      }, 30);\r\n    }\r\n\r\n  };\r\n\r\n  const onPostsItemload = useCallback(\r\n    (e: any, index: number, itemnum: number) => {\r\n      ///\r\n      if (ScrollTo === index) {\r\n        navvScroll();\r\n      }\r\n      if (itemnum === 0) {\r\n        if (postItemsRef.current[index]) {\r\n          var imageHeight = postItemsRef.current[index].clientHeight;\r\n\r\n          ///////////////////////////////\r\n\r\n          newArraa[index] = `${imageHeight}px`;\r\n          setitemheight(newArraa);\r\n          ///////////////////////////////\r\n\r\n          ///////////////////////////////\r\n\r\n          var newh = imageHeight / 1.042 - postbackheighthold;\r\n          newArrx[index] = `${newh}`;\r\n          setitemheighthold(newArrx);\r\n          ///////////////////////////////\r\n\r\n          newArrayFinalPostHeight[index] = imageHeight;\r\n          setitemFinalPostHeight(newArrayFinalPostHeight);\r\n\r\n          ///////////////////////////////\r\n\r\n          newArrayitemOriginalPostHeight[index] = imageHeight;\r\n          setitemOriginalPostHeight(newArrayitemOriginalPostHeight);\r\n          ///////////////////////////////\r\n\r\n          var choppedHeight = percentage(screenHeightReducer, 101);\r\n\r\n          var choppedwidth = percentage(\r\n            screenHeightReducer,\r\n            matchPc ? 55 : matchTablet ? 52 : 35\r\n          );\r\n\r\n          if (imageHeight < choppedwidth) {\r\n            /////WIDE IMAGE SET\r\n\r\n            newArr[index] = `${choppedwidth}px`;\r\n            setitemheight(newArr);\r\n            ///////////////////////////////\r\n\r\n            var newh = choppedwidth / 1.015 - postbackheighthold;\r\n            newArrx[index] = `${newh}`;\r\n            setitemheighthold(newArrx);\r\n            ////////////////////////////\r\n            ///////////////////////////////\r\n\r\n            newArrxq[index] = 1;\r\n            setitemcroptype(newArrxq);\r\n\r\n\r\n            ////////////////////////////\r\n            ///////////////////////////////\r\n\r\n            newArrayFinalPostHeight[index] = choppedwidth;\r\n            setitemFinalPostHeight(newArrayFinalPostHeight);\r\n          } else if (imageHeight > choppedHeight) {\r\n            /////LONG IMAGE SET\r\n\r\n            newArr[index] = `${choppedHeight}px`;\r\n            setitemheight(newArr);\r\n            ///////////////////////////////\r\n\r\n            var newh = choppedHeight / 1 - postbackheighthold;\r\n            newArrx[index] = `${newh}`;\r\n            setitemheighthold(newArrx);\r\n            ////////////////////////////////\r\n            ///////////////////////////////\r\n\r\n            newArrxq[index] = 2;\r\n            setitemcroptype(newArrxq);\r\n            ///////////////////////////////\r\n\r\n            newArrayFinalPostHeight[index] = choppedHeight;\r\n            setitemFinalPostHeight(newArrayFinalPostHeight);\r\n            ///////////////////////////////\r\n          } else {\r\n            var imageWidth = postItemsRef.current[index].clientWidth;\r\n            if (imageWidth > imageHeight) {\r\n              ///////////////////////////////\r\n\r\n              var newh = imageHeight / 1.066 - postbackheighthold;\r\n              newArrx[index] = `${newh}`;\r\n              setitemheighthold(newArrx);\r\n              ///////////////////////////////\r\n              ///////////////////////////////\r\n\r\n              newArrxq[index] = 3;\r\n              setitemcroptype(newArrxq);\r\n\r\n\r\n              ///////////////////////////////\r\n            } else {\r\n              ///////////////////////////////\r\n\r\n              newArrxq[index] = 4;\r\n              setitemcroptype(newArrxq);\r\n              ///////////////////////////////\r\n            }\r\n          }\r\n          ///////////////////////////////\r\n\r\n          newArrxy[index] = true;\r\n          setonLoadDataOnce(newArrxy);\r\n          ///////////////////////////////\r\n\r\n\r\n\r\n          if (StopMini || pagenumReducer === 0) { } else {\r\n            if (postData[0].lim > 0 && index === 0) {\r\n              setTimeout(function () {\r\n\r\n\r\n                postDivRef.current[0].scrollIntoView({\r\n                  behavior: \"smooth\",\r\n                  block: \"start\",\r\n                });\r\n                postDivRefx.current[0].scrollIntoView({\r\n                  behavior: \"smooth\",\r\n                  block: \"start\",\r\n                });\r\n\r\n\r\n\r\n                ///////////\r\n              }, 1100);\r\n            }\r\n          }\r\n\r\n\r\n          if (postData.length - 1 === index) {\r\n\r\n\r\n\r\n\r\n\r\n            /**  if (activateLoaderReducer) {\r\n                            dispatch(UpdateLoader(false));\r\n                          } */\r\n\r\n            ////\r\n            navvScroll();\r\n            ///\r\n            ///\r\n\r\n            dispatch(UpdateLoader(true));\r\n            setTimeout(function () {\r\n\r\n              if (StopMini) {\r\n                setStopMini(false)\r\n              } else {\r\n                setminiProfile(true);\r\n              }\r\n              ///////////\r\n            }, 2000);\r\n\r\n\r\n            setTimeout(function () {\r\n\r\n              setlastIndicatorPushH(22 + 37);\r\n              setlastIndicatorPush(true);\r\n\r\n\r\n              setshowThisComponenet(false);\r\n              dispatch(UpdateLoader(false));\r\n\r\n              if (StopMini) {\r\n\r\n              } else {\r\n\r\n                setTimeout(() => {\r\n                  scrollToRef();\r\n\r\n                }, 3600)\r\n\r\n              }\r\n              ///////////\r\n            }, 4000);\r\n\r\n\r\n\r\n\r\n\r\n          }\r\n        }\r\n\r\n      }\r\n    },\r\n    [StopMini,\r\n      screenHeightReducer,\r\n      itemheight,\r\n      itemheighthold,\r\n      itemFinalPostHeight,\r\n      showProfiileData,\r\n      activateLoaderReducer,\r\n      postItemsRef,\r\n      postData,\r\n      pagenumReducer\r\n    ]\r\n  );\r\n\r\n  const scrollToPost = (index: any) => {\r\n    postDivRef.current[index].scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\",\r\n    });\r\n  };\r\n\r\n  const scrollToPostx = (index: any) => {\r\n    postDivRefx.current[index].scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\",\r\n    });\r\n  };\r\n\r\n  const postitemSHOWFULLHEIGHT = (index: any, type: number) => {\r\n    if (itemcroptype[index] === 1 || itemcroptype[index] === 2) {\r\n      if (type === 0) {\r\n        const newitemHeight = [...itemheight];\r\n        newitemHeight[index] = `auto`;\r\n        setitemheight(newitemHeight);\r\n      } else {\r\n        const newitemHeight = [...itemheight];\r\n        newitemHeight[index] = `${itemFinalPostHeight[index]}px`;\r\n        setitemheight(newitemHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  const scrollLongPicTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const scrollLongPicTimerx = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const snapTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const freesnap = () => {\r\n    dispatch(SnapToggleAction(false));\r\n    if (snapTimer.current) {\r\n      clearTimeout(snapTimer.current);\r\n    }\r\n    snapTimer.current = setTimeout(\r\n      function () {\r\n        dispatch(SnapToggleAction(true));\r\n      },\r\n      matchMobile ? 6000 : 11000\r\n    );\r\n  };\r\n\r\n  const AUTOSlideLongImages = (index: number) => {\r\n    ////freesnap();\r\n    if (itemcroptype[index] === 2) {\r\n      scrollLongPicTimerx.current = setTimeout(() => {\r\n        if (paperPostScrollRef.current) {\r\n          paperPostScrollRef.current.scrollTo({\r\n            top:\r\n              paperPostScrollRef.current.scrollTop +\r\n              itemOriginalPostHeight[index] / 3,\r\n            behavior: \"auto\",\r\n          });\r\n        }\r\n      }, 500);\r\n      scrollLongPicTimer.current = setTimeout(() => {\r\n        postDivRef.current[index].scrollIntoView({\r\n          behavior: \"smooth\",\r\n          block: \"start\",\r\n        });\r\n      }, 1300);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const onPostsItemClicked = useCallback((index: number) => {\r\n\r\n    setindexRoll(index);\r\n\r\n    clearAllTimers();\r\n\r\n    setActiveCanvas(index);\r\n\r\n    if (itemCLICKED[index]) {\r\n\r\n\r\n\r\n      dispatch(SnapToggleAction(true));\r\n\r\n\r\n      if (snapTimer.current) {\r\n        clearTimeout(snapTimer.current);\r\n      }\r\n      snapTimer.current = setTimeout(function () { }, 3000);\r\n\r\n\r\n\r\n      const newclickArray = [...itemCLICKED];\r\n      newclickArray[index] = false;\r\n      setitemCLICKED(newclickArray);\r\n      postitemSHOWFULLHEIGHT(index, 1);\r\n      scrollToPost(index);\r\n    } else {\r\n\r\n\r\n\r\n      dispatch(SnapToggleAction(false));\r\n\r\n\r\n\r\n      AUTOSlideLongImages(index);\r\n      if (scrollTypeTimer.current) {\r\n        clearTimeout(scrollTypeTimer.current);\r\n      }\r\n\r\n      const newclickArray = [...itemCLICKED];\r\n      newclickArray[index] = true;\r\n      setitemCLICKED(newclickArray);\r\n      postitemSHOWFULLHEIGHT(index, 0);\r\n      scrollToPost(index);\r\n    }\r\n\r\n\r\n  }, [itemCLICKED]\r\n  );\r\n\r\n\r\n\r\n  ///\r\n  ///\r\n  ///TYPES FOR ISLOGGEDIN\r\n  interface RootStateIsLogged {\r\n    IsLoggedReducer: {\r\n      loggedIn: boolean;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///LOGGED IN DATA FROM REDUX\r\n  const { loggedIn } = useSelector((state: RootStateIsLogged) => ({\r\n    ...state.IsLoggedReducer,\r\n  }));\r\n  const loggedInReducer = loggedIn;\r\n\r\n  ///\r\n  ///\r\n  ///MUI PAPER STYLES FROM REDUX\r\n  const { PaperStyleLight, PaperStyleDark } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.PaperReducerLightnDark,\r\n    })\r\n  );\r\n  var PaperStyleReducer = \"\";\r\n\r\n  if (darkmodeReducer) {\r\n    PaperStyleReducer = PaperStyleDark;\r\n  } else {\r\n    PaperStyleReducer = PaperStyleLight;\r\n  }\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  var widthProfilePic = matchPc ? \"72%\" : matchTablet ? \"84%\" : \"44vw\";\r\n  var topProfilePic = matchPc ? \"-20vh\" : matchTablet ? \"-12vh\" : \"-8vh\";\r\n  var leftProfilePic = matchPc ? \"1vw\" : matchTablet ? \"3.5vw\" : \"2.7vw\";\r\n\r\n  var optionsClass = \"\";\r\n  var fontOptions = \"\";\r\n\r\n  if (matchPc) {\r\n    optionsClass = \"profile-optionsImagePc\";\r\n    fontOptions = \"2.7vw\";\r\n  } else if (matchTablet) {\r\n    optionsClass = \"profile-optionsImageTablet\";\r\n    fontOptions = \"5rem\";\r\n  } else {\r\n    optionsClass = \"profile-optionsImageMobile\";\r\n    fontOptions = \"1.9rem\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      image: string;\r\n    };\r\n  }\r\n  const { image } = useSelector((state: RootStateReducerImage) => ({\r\n    ...state.UserdataReducer,\r\n  }));\r\n  const imageReducer = image;\r\n\r\n  const blank = () => { };\r\n\r\n  const [showModalUpload, setShowModalUpload] = useState<boolean>(false);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\r\n  const closeUploadModal = useCallback((backbutton: number) => {\r\n    //pop states fires when back and forward buttons used\r\n    if (backbutton === 1) {\r\n      window.onpopstate = () => {\r\n        window.history.pushState(null, \"\", window.location.href);\r\n        window.onpopstate = null;\r\n        setShowModalUpload(false);\r\n      };\r\n    } else {\r\n      window.history.pushState(null, \"\", \".\");\r\n      window.onpopstate = null;\r\n      setShowModalUpload(false);\r\n    }\r\n  }, []);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///OPEN MODAL THEN CALL CLOSEMODAL FUNCTION WHICH WAITS FOR A POP EVENT(for closing modal)\r\n  const OpenUploadModal = useCallback(() => {\r\n    setShowModalUpload(!showModalUpload);\r\n    //pushstate add enteries to your history\r\n    window.history.pushState(null, \"\", \"Options\");\r\n    closeUploadModal(1);\r\n  }, [showModalUpload, closeUploadModal]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    /// miniProfile ? setx(false) : setx(true);\r\n  }, [miniProfile]);\r\n\r\n  useEffect(() => {\r\n\r\n\r\n    setTimeout(function () {\r\n      dispatch(UpdateLoader(false));\r\n      if (showThisComponenet) setshowThisComponenet(false);\r\n    }, 7500);\r\n\r\n    setTimeout(function () {\r\n      if (ShowLoader2) {\r\n        setShowLoader2(false);\r\n      }\r\n    }, 1500);\r\n\r\n\r\n\r\n  }, [postData]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const TopRef = useRef<any>();\r\n\r\n\r\n\r\n  const [indexRoll, setindexRoll] = useState(0);\r\n\r\n  const postDivRefRoll = useRef<any[]>([]);\r\n\r\n\r\n\r\n  const tyTimer = useRef<ReturnType<typeof setTimeout>[]>([]);\r\n\r\n  const [AllowRoll, setAllowRoll] = useState(false);\r\n\r\n  const clearAllTimers = () => {\r\n    tyTimer.current.forEach(timer => {\r\n      if (timer !== null) {\r\n        clearTimeout(timer);\r\n      }\r\n    });\r\n    tyTimer.current = [];\r\n    setShowBigPlay(false);\r\n  }\r\n\r\n\r\n  const postDivRefx = useRef<any>([]);\r\n\r\n\r\n\r\n  const scrollToRef = useCallback(() => {\r\n\r\n    var Limit: number = postData.length;\r\n\r\n    var Time = 0;\r\n\r\n    for (let i = 0; i <= Limit; i++) {  // <= 20 to include the reset to the first post\r\n      if (i > indexRoll) {\r\n        Time = Time + 7000;\r\n        setShowBigPlay(true);\r\n\r\n        tyTimer.current[i] = setTimeout(() => {\r\n\r\n          if (i === Limit) {\r\n            // Reset to the first post after reaching the last post\r\n            postDivRefx.current[Limit < 3 ? Limit - 1 : Limit - 3].scrollIntoView({\r\n              behavior: \"smooth\",\r\n              block: \"start\",\r\n            });\r\n            //\r\n            postDivRefRoll.current[Limit < 3 ? Limit - 1 : Limit - 3].scrollIntoView({\r\n              behavior: \"smooth\",\r\n              block: \"start\",\r\n            });\r\n            setShowBigPlay(false);\r\n          } else {\r\n            postDivRefx.current[i].scrollIntoView({\r\n              behavior: \"smooth\",\r\n              block: \"start\",\r\n            });\r\n            //\r\n            postDivRefRoll.current[i].scrollIntoView({\r\n              behavior: \"smooth\",\r\n              block: \"start\",\r\n            });\r\n          }\r\n\r\n\r\n        }, Time - 7000);\r\n      }\r\n    }\r\n\r\n  }, [AllowRoll, indexRoll, postData]);\r\n\r\n\r\n  /////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n  const [Added, setAdded] = useState(100);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Grid container className=\"dontallowhighlighting\">\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            position: \"fixed\",\r\n            width: \"100%\",\r\n            padding: \"0px\",\r\n            height: \"0px\",\r\n            zIndex: 20000,\r\n            top: \"0px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        ></Grid>\r\n\r\n\r\n        {showModalFormMenu ? <Grid\r\n          item\r\n          style={{\r\n            height: \"0px\",\r\n            zIndex: 500000000000,\r\n            position: 'fixed',\r\n            top: '0vh',\r\n            backgroundColor: '#00ccff'\r\n          }}\r\n        >\r\n          <ActualMenu\r\n            scrollToRef={scrollToRef}\r\n            setsuperSettings={setsuperSettings}\r\n            postData={postData}\r\n            showModalFormMenu={showModalFormMenu}\r\n            setshowModalFormMenu={setshowModalFormMenu} />\r\n\r\n        </Grid> : null}\r\n\r\n\r\n\r\n\r\n        <Grid\r\n          ref={TopRef}\r\n          className=\"parent-containerEffect  effect\"\r\n          item\r\n          xs={12}\r\n          style={{\r\n            padding: \"0px\",\r\n            paddingLeft: miniProfile ? (matchPc ? \"6vw\" : \"0vw\") : \"0vw\",\r\n            paddingRight: miniProfile ? (matchPc ? \"6vw\" : \"0vw\") : \"0vw\",\r\n            height: \"auto\",\r\n            marginTop: matchMobile ? '3vh' : '5.5vh',\r\n            marginLeft: miniProfile && matchPc ? '5.5vw' : '0px',\r\n          }}\r\n        >\r\n          {postData.length > 0 ? (\r\n            <Masonry\r\n              columns={matchPc ? 2 : miniProfile ? 2 : 1}\r\n              spacing={miniProfile && matchMobile ? 0 : miniProfile ? 16 : 0}\r\n              style={{\r\n                padding: \"0px\",\r\n\r\n              }}\r\n            >\r\n              {postData.map((post: any, i: any) => (\r\n                <div\r\n                  key={i}\r\n                  style={{\r\n                    position: \"relative\",\r\n\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      display: miniProfile ? \"block\" : \"none\",\r\n                      marginTop: \"-5px\",\r\n\r\n                    }}\r\n                  >\r\n                    <MiniPost\r\n                      ShowBigPlay={ShowBigPlay}\r\n                      setAdded={setAdded}\r\n                      Added={Added}\r\n                      postDatainnerInteraction2={postDatainnerInteraction2}\r\n                      postDatainnerInteraction1={postDatainnerInteraction1}\r\n                      paperPostScrollRef={paperPostScrollRef}\r\n                      setSliderIndexMini={setSliderIndexMini}\r\n                      sliderIndexMini={sliderIndexMini}\r\n                      zoomClickedIndex={zoomClickedIndex}\r\n                      setzoomClickedIndex={setzoomClickedIndex}\r\n                      miniProfile={miniProfile}\r\n                      setminiProfile={setminiProfile}\r\n                      setStopBodyScroll={setStopBodyScroll}\r\n                      setx={setx}\r\n                      miniLayoutPost={miniLayoutPost}\r\n                      setCommentPostid={setCommentPostid}\r\n                      postData={postData}\r\n                      setDiscussionImage={setDiscussionImage}\r\n                      OpenModalForm={OpenModalForm}\r\n                      second={second}\r\n                      setsecond={setsecond}\r\n                      secondgo={secondgo}\r\n                      setsecondgo={setsecondgo}\r\n                      setcountAutoplay={setcountAutoplay}\r\n                      countAutoplay={countAutoplay}\r\n                      onLoadDataOnce={onLoadDataOnce}\r\n                      pey={i}\r\n                      addPostItemsRef={addPostItemsRef}\r\n                      postDivRefx={postDivRefx}\r\n                      onPostsItemload={onPostsItemload}\r\n                      post={post}\r\n                      itemheight={itemheight}\r\n                      itemheighthold={itemheighthold}\r\n                      postbackheight={postbackheight}\r\n                      itemcroptype={itemcroptype}\r\n                      length={postData.length}\r\n                      itemFinalPostHeight={itemFinalPostHeight}\r\n                      onPostsItemClicked={onPostsItemClicked}\r\n                      itemCLICKED={itemCLICKED}\r\n                      addpostDivRefx={addpostDivRefx}\r\n                      postDatainner={postDatainner}\r\n                      postDatainnerThumb={postDatainnerThumb}\r\n                      itemOriginalPostHeight={itemOriginalPostHeight}\r\n                      ActiveAutoPlay={ActiveAutoPlay}\r\n                      setActiveAutoPlay={setActiveAutoPlay}\r\n                      AUTOSlideLongImages={AUTOSlideLongImages}\r\n                      scrollToPostx={scrollToPostx}\r\n                    />\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      style={{\r\n                        marginTop: \"20px\",\r\n                        height: matchMobile ? \"9vh\" : ' 0vh',\r\n                      }}\r\n                    ></Grid>\r\n                  </div>\r\n\r\n                  <div key={i} style={{ display: miniProfile ? \"none\" : \"block\", }}>\r\n                    <Post\r\n                      ShowBigPlay={ShowBigPlay}\r\n                      setAdded={setAdded}\r\n                      Added={Added}\r\n                      addpostDivRefRoll={addpostDivRefRoll}\r\n                      canvasRefIn={canvasRefIn}\r\n                      ActiveCanvas={ActiveCanvas}\r\n                      postItemsRef={postItemsRef}\r\n                      postDatainnerInteraction2={postDatainnerInteraction2}\r\n                      postDatainnerInteraction1={postDatainnerInteraction1}\r\n                      setscrollLocation={setscrollLocation}\r\n                      paperPostScrollRef={paperPostScrollRef}\r\n                      settypeEmo={settypeEmo}\r\n                      setconnectTemplateGo={setconnectTemplateGo}\r\n                      sliderIndexMini={sliderIndexMini}\r\n                      setsliderIndexMini={setSliderIndexMini}\r\n                      zoomClickedIndex={zoomClickedIndex}\r\n                      setzoomClickedIndex={setzoomClickedIndex}\r\n                      miniProfile={miniProfile}\r\n                      setminiProfile={setminiProfile}\r\n                      setStopBodyScroll={setStopBodyScroll}\r\n                      setx={setx}\r\n                      miniLayoutPost={miniLayoutPost}\r\n                      setCommentPostid={setCommentPostid}\r\n                      postData={postData}\r\n                      setDiscussionImage={setDiscussionImage}\r\n                      OpenModalForm={OpenModalForm}\r\n                      second={second}\r\n                      setsecond={setsecond}\r\n                      secondgo={secondgo}\r\n                      setsecondgo={setsecondgo}\r\n                      setcountAutoplay={setcountAutoplay}\r\n                      countAutoplay={countAutoplay}\r\n                      onLoadDataOnce={onLoadDataOnce}\r\n                      pey={i}\r\n                      addPostItemsRef={addPostItemsRef}\r\n                      postDivRef={postDivRef}\r\n                      onPostsItemload={onPostsItemload}\r\n                      post={post}\r\n                      itemheight={itemheight}\r\n                      itemheighthold={itemheighthold}\r\n                      postbackheight={postbackheight}\r\n                      itemcroptype={itemcroptype}\r\n                      length={postData.length}\r\n                      itemFinalPostHeight={itemFinalPostHeight}\r\n                      onPostsItemClicked={onPostsItemClicked}\r\n                      itemCLICKED={itemCLICKED}\r\n                      addpostDivRef={addpostDivRef}\r\n                      postDatainner={postDatainner}\r\n                      postDatainnerThumb={postDatainnerThumb}\r\n                      itemOriginalPostHeight={itemOriginalPostHeight}\r\n                      ActiveAutoPlay={ActiveAutoPlay}\r\n                      setActiveAutoPlay={setActiveAutoPlay}\r\n                      AUTOSlideLongImages={AUTOSlideLongImages}\r\n                      scrollToPost={scrollToPost}\r\n                    /> <Grid\r\n                      item\r\n                      xs={12}\r\n                      style={{\r\n                        marginTop: \"0px\",\r\n                        height: \"0.5vh\",\r\n                      }}\r\n                    ></Grid>\r\n                  </div>\r\n\r\n                </div>\r\n              ))}\r\n            </Masonry>\r\n          ) : null}\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n        <Grid\r\n          container\r\n          xs={12}\r\n\r\n        >\r\n\r\n          <Grid\r\n            item\r\n            xs={2}>\r\n          </Grid>\r\n\r\n\r\n          <Grid\r\n            item\r\n            className=\"animateColorAndPadding\"\r\n            xs={8}\r\n            ref={lastItemElement}\r\n            style={{\r\n              visibility: showMoreIndicator ? 'visible' : 'hidden',\r\n              marginTop: lastIndicatorPush ? `${lastIndicatorPushH}vh` : \"37vh\",\r\n              height: \"7px\",\r\n              backgroundColor: 'blue'\r\n            }}\r\n          ></Grid>\r\n\r\n\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </Grid >\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Profile = React.memo(Profilex);\r\n"]},"metadata":{},"sourceType":"module"}