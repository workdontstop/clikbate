{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\MenuInner.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { matchPc, matchTablet } from \"../DetectDevice\";\nimport { Grid } from \"@material-ui/core\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { useSelector } from \"react-redux\";\nimport { animated } from \"react-spring\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MenuInnerx({\n  optionsShow,\n  optinstopshowingReducer,\n  typeTop,\n  closeoptionsslide,\n  animationop,\n  optionsCollectImageRef,\n  handleTouchStartOptions,\n  handleTouchMoveOptions,\n  modalanimation,\n  nextSlidePc,\n  optionsImages,\n  ActiveSlide,\n  optionsNameData,\n  clickOptions,\n  optionsClickType,\n  getSliderWidthNew\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  var circleIdentify = typeTop ? 0 : 4;\n  var circleIdentify2 = typeTop ? 1 : 5; ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype; ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n  const {\n    username,\n    image,\n    imageThumb,\n    id,\n    memeberPageid,\n    MemberProfileData\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const [imageReducer, setimageReducer] = useState(\"\");\n  const [imageReducerThumb, setimageReducerThumb] = useState(\"\");\n  const [ColorMemberReducer, setColorMemberReducer] = useState(\"\");\n  const [ShowLoader2, setShowLoader2] = useState(false);\n\n  const circleColor = () => {\n    if (memeberPageid === 0) {\n      setColorMemberReducer(colorReducer);\n    } else {\n      setColorMemberReducer(MemberProfileData.usercolor1);\n    }\n  };\n\n  useEffect(() => {\n    circleColor();\n  }, [MemberProfileData, colorReducer, imageThumb, image, memeberPageid]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [optinstopshowingReducer ? typeTop ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          style: {\n            width: matchPc ? \"10%\" : matchTablet ? \"30%\" : \"10%\",\n            margin: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n              className: darkmodeReducer ? \"make-small-icons-clickable-dark dontallowhighlighting  \" : \"make-small-icons-clickable-light  dontallowhighlighting  \",\n              onClick: closeoptionsslide,\n              style: {\n                fontSize: matchPc ? \"2.55vw\" : \"4.7vh\",\n                verticalAlign: \"middle\",\n                justifyContent: \"center\",\n                zIndex: 2,\n                marginTop: matchPc ? \"9vh\" : \"6.5vh\",\n                position: \"absolute\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : null, /*#__PURE__*/_jsxDEV(animated.div, {\n        style: animationop,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: typeTop ? darkmodeReducer ? `optionsTop-background-dark ` : `optionsTop-background-light ` : \"\",\n          onTouchStart: handleTouchStartOptions,\n          onTouchMove: handleTouchMoveOptions,\n          style: {\n            zIndex: 1,\n            padding: \"0px\",\n            top: matchPc ? typeTop ? \"-2vh\" : \"0vh\" : \"0vh\",\n            position: \"relative\",\n            margin: \"0 auto\",\n            overflow: \"hidden\",\n            left: \"0px\",\n            height: typeTop ? matchPc ? \"24.4vh\" : \"20.5vh\" : \"auto\",\n            paddingBottom: \"1.4vh\"\n          },\n          children: /*#__PURE__*/_jsxDEV(animated.div, {\n            ref: optionsCollectImageRef,\n            style: modalanimation,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                margin: \"auto\",\n                textAlign: \"center\",\n                position: \"relative\",\n                bottom: typeTop ? \"-2.6vh\" : \"0.2em\",\n                left: typeTop ? \"-3px\" : matchPc ? \"-2px\" : \"0px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(CircleIcon, {\n                onClick: () => {\n                  nextSlidePc();\n                },\n                className: \"buttonshake\",\n                style: {\n                  fontSize: typeTop ? \"1.7vw\" : \"1.3vw\",\n                  cursor: \"pointer\",\n                  color: darkmodeReducer ? typeTop ? \"rgba(200, 200, 200, 0.5)\" : \"rgba(200, 200, 200, 0.1)\" : typeTop ? \"rgba(005, 005, 005, 0.4)\" : \"rgba(005, 005, 005, 0.2)\",\n                  display: matchPc ? \"block\" : \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), optionsImages.map((im, i) => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [typeTop ? /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                style: {\n                  margin: \"auto\",\n                  textAlign: \"center\",\n                  position: \"relative\",\n                  top: \"2.2vh\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  style: {\n                    paddingBottom: \"10px\",\n                    fontSize: matchPc ? \"1.1vw\" : matchTablet ? \"2.08vh\" : \"2vh\",\n                    fontWeight: \"bolder\",\n                    fontFamily: \"Arial, Helvetica, sans-serif\",\n                    visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\n                    filter: darkmodeReducer ? \"drop-shadow(1.2px 0.1px 1.92px rgba(255, 255, 255, 0.4))\" : \"drop-shadow(1.2px 0.1px 1.92px rgba(41, 53, 70, 8.35))\",\n                    color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\"\n                  },\n                  children: [\" \", optionsNameData[i]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this) : null, i === circleIdentify || i === circleIdentify2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: i === circleIdentify ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    onClick: () => {\n                      clickOptions(i, optionsClickType, \"upload\");\n                    },\n                    style: {\n                      cursor: ActiveSlide === i ? \"pointer\" : \"copy\",\n                      width: `${getSliderWidthNew}px`,\n                      height: `${getSliderWidthNew}px`,\n                      backgroundColor: darkmodeReducer ? \"rgba(010,010,010, 0.68)\" : \"rgba(220,220,220, 0.7)\",\n                      borderRadius: \"50%\",\n                      marginTop: \"2.15vh\",\n                      textAlign: \"center\",\n                      alignItems: \"center\",\n                      display: \"grid\",\n                      justifyContent: \"center\",\n                      boxShadow: darkmodeReducer ? ActiveSlide === i ? `0 0 3.4px ${ColorMemberReducer}` : typeTop ? \"0 0 5.5px#aaaaaa\" : \"\" : ActiveSlide === i ? `0 0 3.4px ${ColorMemberReducer}` : typeTop ? \"0 0 5.45px#222222\" : ``\n                    },\n                    children: [\" \", /*#__PURE__*/_jsxDEV(SettingsIcon, {\n                      style: {\n                        fontSize: matchPc ? \"2vw\" : \"5vh\",\n                        opacity: ActiveSlide === i ? 0.5 : 1,\n                        color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                      },\n                      className: \"zuperkinginfo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    onClick: () => {\n                      clickOptions(i, optionsClickType, \"upload\");\n                    },\n                    style: {\n                      cursor: ActiveSlide === i ? \"pointer\" : \"copy\",\n                      width: `${getSliderWidthNew}px`,\n                      height: `${getSliderWidthNew}px`,\n                      backgroundColor: darkmodeReducer ? \"rgba(010,010,010, 0.68)\" : \"rgba(220,220,220, 0.7)\",\n                      borderRadius: \"50%\",\n                      marginTop: \"2.15vh\",\n                      textAlign: \"center\",\n                      alignItems: \"center\",\n                      display: \"grid\",\n                      justifyContent: \"center\",\n                      boxShadow: darkmodeReducer ? ActiveSlide === i ? `0 0 3.4px ${ColorMemberReducer}` : typeTop ? \"0 0 5.5px#aaaaaa\" : \"\" : ActiveSlide === i ? `0 0 3.4px ${ColorMemberReducer}` : typeTop ? \"0 0 5.45px#222222\" : ``\n                    },\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"file\",\n                      children: /*#__PURE__*/_jsxDEV(CircleIcon, {\n                        style: {\n                          fontSize: matchPc ? \"1.65vw\" : \"4.5vh\",\n                          opacity: ActiveSlide === i ? 0.5 : 1,\n                          color: darkmodeReducer ? ActiveSlide === i ? \"red\" : \"#eeeeee\" : ActiveSlide === i ? \"red\" : \"#222222\"\n                        },\n                        className: \"zuperkinginfo\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 315,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 314,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"file\",\n                      name: \"superImages\",\n                      accept: \"image/*\",\n                      multiple: true,\n                      id: \"file\",\n                      style: {\n                        visibility: \"hidden\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 1\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: ` ${optionsNameData[i]}  option`,\n                onClick: () => {\n                  clickOptions(i, optionsClickType, \" \");\n                },\n                style: {\n                  cursor: ActiveSlide === i ? \"pointer\" : \"copy\",\n                  width: `${getSliderWidthNew}px`,\n                  height: `${getSliderWidthNew}px`,\n                  borderRadius: \"50%\",\n                  padding: \"0px\",\n                  objectFit: \"cover\",\n                  marginLeft: \"2px\",\n                  marginTop: \"14px\",\n                  boxShadow: darkmodeReducer ? ActiveSlide === i ? `0 0 3.4px ${ColorMemberReducer}` : typeTop ? \"0 0 12.5px#aaaaaa\" : \"\" : ActiveSlide === i ? `0 0 3.4px ${ColorMemberReducer}` : typeTop ? `0 0 14.45px#222222` : \"\",\n                  marginBottom: \"2.2px\"\n                },\n                src: `./images/options/${im}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 21\n              }, this), typeTop ? null : /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                style: {\n                  margin: \"auto\",\n                  textAlign: \"center\",\n                  position: \"relative\",\n                  bottom: i === circleIdentify || i === circleIdentify2 ? matchPc ? \"-0.5em\" : \"-0.3em\" : \"0.2em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  style: {\n                    fontSize: matchPc ? \"0.95vw\" : matchTablet ? \"2vh\" : \"1.8vh\",\n                    fontWeight: \"bolder\",\n                    fontFamily: \"Arial, Helvetica, sans-serif\",\n                    visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\n                    opacity: typeTop ? 0 : optinstopshowingReducer ? 0 : 1,\n                    color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\"\n                  },\n                  children: [\" \", optionsNameData[i]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(MenuInnerx, \"myeqjiqRWbDh3Rwr33vMVn26pL8=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = MenuInnerx;\nexport const MenuInner = /*#__PURE__*/React.memo(MenuInnerx);\n_c2 = MenuInner;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MenuInnerx\");\n$RefreshReg$(_c2, \"MenuInner\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/MenuInner.tsx"],"names":["React","useState","useEffect","matchPc","matchTablet","Grid","MoreHorizIcon","useSelector","animated","CircleIcon","SettingsIcon","MenuInnerx","optionsShow","optinstopshowingReducer","typeTop","closeoptionsslide","animationop","optionsCollectImageRef","handleTouchStartOptions","handleTouchMoveOptions","modalanimation","nextSlidePc","optionsImages","ActiveSlide","optionsNameData","clickOptions","optionsClickType","getSliderWidthNew","darkmode","state","GlobalReducer","darkmodeReducer","circleIdentify","circleIdentify2","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","username","image","imageThumb","id","memeberPageid","MemberProfileData","UserdataReducer","imageReducer","setimageReducer","imageReducerThumb","setimageReducerThumb","ColorMemberReducer","setColorMemberReducer","ShowLoader2","setShowLoader2","circleColor","usercolor1","width","margin","fontSize","verticalAlign","justifyContent","zIndex","marginTop","position","padding","top","overflow","left","height","paddingBottom","textAlign","bottom","cursor","display","map","im","i","fontWeight","fontFamily","visibility","filter","backgroundColor","borderRadius","alignItems","boxShadow","opacity","objectFit","marginLeft","marginBottom","MenuInner","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\n\r\nfunction MenuInnerx({\r\n  optionsShow,\r\n  optinstopshowingReducer,\r\n  typeTop,\r\n  closeoptionsslide,\r\n  animationop,\r\n  optionsCollectImageRef,\r\n  handleTouchStartOptions,\r\n  handleTouchMoveOptions,\r\n  modalanimation,\r\n  nextSlidePc,\r\n  optionsImages,\r\n  ActiveSlide,\r\n  optionsNameData,\r\n  clickOptions,\r\n  optionsClickType,\r\n  getSliderWidthNew,\r\n}: any): JSX.Element {\r\n  ///\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  var circleIdentify = typeTop ? 0 : 4;\r\n  var circleIdentify2 = typeTop ? 1 : 5;\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      image: string;\r\n      imageThumb: string;\r\n      id: number;\r\n      username: string;\r\n      memeberPageid: number;\r\n      MemberProfileData: any;\r\n    };\r\n  }\r\n  const { username, image, imageThumb, id, memeberPageid, MemberProfileData } =\r\n    useSelector((state: RootStateReducerImage) => ({\r\n      ...state.UserdataReducer,\r\n    }));\r\n\r\n  const [imageReducer, setimageReducer] = useState(\"\");\r\n\r\n  const [imageReducerThumb, setimageReducerThumb] = useState(\"\");\r\n  const [ColorMemberReducer, setColorMemberReducer] = useState(\"\");\r\n\r\n  const [ShowLoader2, setShowLoader2] = useState(false);\r\n\r\n  const circleColor = () => {\r\n    if (memeberPageid === 0) {\r\n      setColorMemberReducer(colorReducer);\r\n    } else {\r\n      setColorMemberReducer(MemberProfileData.usercolor1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    circleColor();\r\n  }, [MemberProfileData, colorReducer, imageThumb, image, memeberPageid]);\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        {optinstopshowingReducer ? (\r\n          typeTop ? null : (\r\n            <>\r\n              {\" \"}\r\n              <Grid\r\n                container\r\n                style={{\r\n                  width: matchPc ? \"10%\" : matchTablet ? \"30%\" : \"10%\",\r\n                  margin: \"auto\",\r\n                }}\r\n              >\r\n                <span>\r\n                  <MoreHorizIcon\r\n                    className={\r\n                      darkmodeReducer\r\n                        ? \"make-small-icons-clickable-dark dontallowhighlighting  \"\r\n                        : \"make-small-icons-clickable-light  dontallowhighlighting  \"\r\n                    }\r\n                    onClick={closeoptionsslide}\r\n                    style={{\r\n                      fontSize: matchPc ? \"2.55vw\" : \"4.7vh\",\r\n                      verticalAlign: \"middle\",\r\n                      justifyContent: \"center\",\r\n                      zIndex: 2,\r\n                      marginTop: matchPc ? \"9vh\" : \"6.5vh\",\r\n                      position: \"absolute\",\r\n                    }}\r\n                  />\r\n                </span>{\" \"}\r\n              </Grid>\r\n            </>\r\n          )\r\n        ) : null}\r\n\r\n        <animated.div style={animationop}>\r\n          <Grid\r\n            container\r\n            className={\r\n              typeTop\r\n                ? darkmodeReducer\r\n                  ? `optionsTop-background-dark `\r\n                  : `optionsTop-background-light `\r\n                : \"\"\r\n            }\r\n            onTouchStart={handleTouchStartOptions}\r\n            onTouchMove={handleTouchMoveOptions}\r\n            style={{\r\n              zIndex: 1,\r\n              padding: \"0px\",\r\n              top: matchPc ? (typeTop ? \"-2vh\" : \"0vh\") : \"0vh\",\r\n              position: \"relative\",\r\n              margin: \"0 auto\",\r\n              overflow: \"hidden\",\r\n              left: \"0px\",\r\n              height: typeTop ? (matchPc ? \"24.4vh\" : \"20.5vh\") : \"auto\",\r\n              paddingBottom: \"1.4vh\",\r\n            }}\r\n          >\r\n            <animated.div ref={optionsCollectImageRef} style={modalanimation}>\r\n              <Grid\r\n                item\r\n                style={{\r\n                  margin: \"auto\",\r\n                  textAlign: \"center\",\r\n                  position: \"relative\",\r\n                  bottom: typeTop ? \"-2.6vh\" : \"0.2em\",\r\n                  left: typeTop ? \"-3px\" : matchPc ? \"-2px\" : \"0px\",\r\n                }}\r\n              >\r\n                <CircleIcon\r\n                  onClick={() => {\r\n                    nextSlidePc();\r\n                  }}\r\n                  className=\"buttonshake\"\r\n                  style={{\r\n                    fontSize: typeTop ? \"1.7vw\" : \"1.3vw\",\r\n                    cursor: \"pointer\",\r\n                    color: darkmodeReducer\r\n                      ? typeTop\r\n                        ? \"rgba(200, 200, 200, 0.5)\"\r\n                        : \"rgba(200, 200, 200, 0.1)\"\r\n                      : typeTop\r\n                      ? \"rgba(005, 005, 005, 0.4)\"\r\n                      : \"rgba(005, 005, 005, 0.2)\",\r\n                    display: matchPc ? \"block\" : \"none\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n              {optionsImages.map((im: any, i: any) => (\r\n                <Grid key={i} item xs={12}>\r\n                  {typeTop ? (\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      style={{\r\n                        margin: \"auto\",\r\n                        textAlign: \"center\",\r\n                        position: \"relative\",\r\n                        top: \"2.2vh\",\r\n                      }}\r\n                    >\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        style={{\r\n                          paddingBottom: \"10px\",\r\n                          fontSize: matchPc\r\n                            ? \"1.1vw\"\r\n                            : matchTablet\r\n                            ? \"2.08vh\"\r\n                            : \"2vh\",\r\n                          fontWeight: \"bolder\",\r\n                          fontFamily: \"Arial, Helvetica, sans-serif\",\r\n                          visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\r\n                          filter: darkmodeReducer\r\n                            ? \"drop-shadow(1.2px 0.1px 1.92px rgba(255, 255, 255, 0.4))\"\r\n                            : \"drop-shadow(1.2px 0.1px 1.92px rgba(41, 53, 70, 8.35))\",\r\n                          color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        {optionsNameData[i]}\r\n                      </Grid>\r\n                    </Grid>\r\n                  ) : null}\r\n                  {i === circleIdentify || i === circleIdentify2 ? (\r\n                    <>\r\n                      {i === circleIdentify ? (\r\n                        <>\r\n                          {\" \"}\r\n                          <div\r\n                            onClick={() => {\r\n                              clickOptions(i, optionsClickType, \"upload\");\r\n                            }}\r\n                            style={{\r\n                              cursor: ActiveSlide === i ? \"pointer\" : \"copy\",\r\n                              width: `${getSliderWidthNew}px`,\r\n                              height: `${getSliderWidthNew}px`,\r\n                              backgroundColor: darkmodeReducer\r\n                                ? \"rgba(010,010,010, 0.68)\"\r\n                                : \"rgba(220,220,220, 0.7)\",\r\n                              borderRadius: \"50%\",\r\n                              marginTop: \"2.15vh\",\r\n                              textAlign: \"center\",\r\n                              alignItems: \"center\",\r\n                              display: \"grid\",\r\n                              justifyContent: \"center\",\r\n                              boxShadow: darkmodeReducer\r\n                                ? ActiveSlide === i\r\n                                  ? `0 0 3.4px ${ColorMemberReducer}`\r\n                                  : typeTop\r\n                                  ? \"0 0 5.5px#aaaaaa\"\r\n                                  : \"\"\r\n                                : ActiveSlide === i\r\n                                ? `0 0 3.4px ${ColorMemberReducer}`\r\n                                : typeTop\r\n                                ? \"0 0 5.45px#222222\"\r\n                                : ``,\r\n                            }}\r\n                          >\r\n                            {\" \"}\r\n                            <SettingsIcon\r\n                              style={{\r\n                                fontSize: matchPc ? \"2vw\" : \"5vh\",\r\n                                opacity: ActiveSlide === i ? 0.5 : 1,\r\n                                color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                              }}\r\n                              className=\"zuperkinginfo\"\r\n                            />\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          {\" \"}\r\n                          <div\r\n                            onClick={() => {\r\n                              clickOptions(i, optionsClickType, \"upload\");\r\n                            }}\r\n                            style={{\r\n                              cursor: ActiveSlide === i ? \"pointer\" : \"copy\",\r\n                              width: `${getSliderWidthNew}px`,\r\n                              height: `${getSliderWidthNew}px`,\r\n                              backgroundColor: darkmodeReducer\r\n                                ? \"rgba(010,010,010, 0.68)\"\r\n                                : \"rgba(220,220,220, 0.7)\",\r\n                              borderRadius: \"50%\",\r\n                              marginTop: \"2.15vh\",\r\n                              textAlign: \"center\",\r\n                              alignItems: \"center\",\r\n                              display: \"grid\",\r\n                              justifyContent: \"center\",\r\n                              boxShadow: darkmodeReducer\r\n                                ? ActiveSlide === i\r\n                                  ? `0 0 3.4px ${ColorMemberReducer}`\r\n                                  : typeTop\r\n                                  ? \"0 0 5.5px#aaaaaa\"\r\n                                  : \"\"\r\n                                : ActiveSlide === i\r\n                                ? `0 0 3.4px ${ColorMemberReducer}`\r\n                                : typeTop\r\n                                ? \"0 0 5.45px#222222\"\r\n                                : ``,\r\n                            }}\r\n                          >\r\n                            {\" \"}\r\n\r\n\r\n                            <label htmlFor=\"file\">\r\n                            <CircleIcon\r\n                              style={{\r\n                                fontSize: matchPc ? \"1.65vw\" : \"4.5vh\",\r\n                                opacity: ActiveSlide === i ? 0.5 : 1,\r\n                                color: darkmodeReducer\r\n                                  ? ActiveSlide === i\r\n                                    ? \"red\" \r\n                                    : \"#eeeeee\"\r\n                                  : ActiveSlide === i\r\n                                  ? \"red\"\r\n                                  : \"#222222\",\r\n                              }}\r\n                              className=\"zuperkinginfo\"\r\n                            />\r\n                              </label>\r\n\r\n\r\n                          \r\n<input\r\n     type=\"file\"\r\n     name=\"superImages\"\r\n     accept=\"image/*\"\r\n     multiple\r\n     id=\"file\"\r\n     style={{ visibility: \"hidden\" }}\r\n   />\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    <img\r\n                      alt={` ${optionsNameData[i]}  option`}\r\n                      onClick={() => {\r\n                        clickOptions(i, optionsClickType, \" \");\r\n                      }}\r\n                      style={{\r\n                        cursor: ActiveSlide === i ? \"pointer\" : \"copy\",\r\n                        width: `${getSliderWidthNew}px`,\r\n                        height: `${getSliderWidthNew}px`,\r\n                        borderRadius: \"50%\",\r\n                        padding: \"0px\",\r\n                        objectFit: \"cover\",\r\n                        marginLeft: \"2px\",\r\n                        marginTop: \"14px\",\r\n                        boxShadow: darkmodeReducer\r\n                          ? ActiveSlide === i\r\n                            ? `0 0 3.4px ${ColorMemberReducer}`\r\n                            : typeTop\r\n                            ? \"0 0 12.5px#aaaaaa\"\r\n                            : \"\"\r\n                          : ActiveSlide === i\r\n                          ? `0 0 3.4px ${ColorMemberReducer}`\r\n                          : typeTop\r\n                          ? `0 0 14.45px#222222`\r\n                          : \"\",\r\n\r\n                        marginBottom: \"2.2px\",\r\n                      }}\r\n                      src={`./images/options/${im}`}\r\n                    />\r\n                  )}\r\n\r\n                  {typeTop ? null : (\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      style={{\r\n                        margin: \"auto\",\r\n                        textAlign: \"center\",\r\n                        position: \"relative\",\r\n                        bottom:\r\n                          i === circleIdentify || i === circleIdentify2\r\n                            ? matchPc\r\n                              ? \"-0.5em\"\r\n                              : \"-0.3em\"\r\n                            : \"0.2em\",\r\n                      }}\r\n                    >\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        style={{\r\n                          fontSize: matchPc\r\n                            ? \"0.95vw\"\r\n                            : matchTablet\r\n                            ? \"2vh\"\r\n                            : \"1.8vh\",\r\n                          fontWeight: \"bolder\",\r\n                          fontFamily: \"Arial, Helvetica, sans-serif\",\r\n                          visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\r\n                          opacity: typeTop\r\n                            ? 0\r\n                            : optinstopshowingReducer\r\n                            ? 0\r\n                            : 1,\r\n                          color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        {optionsNameData[i]}\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              ))}\r\n            </animated.div>\r\n          </Grid>\r\n        </animated.div>\r\n      </>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const MenuInner = React.memo(MenuInnerx);\r\n"]},"metadata":{},"sourceType":"module"}