{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\ShowReactions.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n///Axios.defaults.withCredentials = true;\nfunction ShowReactionsx({\n  i,\n  zoomedModal,\n  wideImage,\n  post,\n  AddRef,\n  length,\n  callObserver\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n  ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n  const {\n    image,\n    imageThumb,\n    id\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const imageReducer = image;\n  const imageReducerThumb = imageThumb;\n  const idReducer = id;\n  useEffect(() => {\n    if (i + 1 === length) {/////callObserver();\n    }\n  }, [i]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => {\n          flipper();\n        },\n        className: darkmodeReducer ? `turprofileDark image-gray-on-click ` : ` turprofileLight image-gray-on-click`,\n        style: {\n          display: \"block\",\n          zIndex: 2,\n          borderRadius: \"50%\",\n          cursor: \"pointer\",\n          position: \"relative\",\n          padding: \"0px\",\n          margin: \"auto\",\n          objectFit: \"contain\",\n          width: \"55%\",\n          paddingBottom: \"10px\"\n        },\n        src: `${post.profile_image}`,\n        alt: \"Superstarz Billboard \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"zuperxyinfo\",\n        style: {\n          marginTop: \"20px\"\n        },\n        children: \"hi there\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false)\n  /*MOBILE  MOBILE  MOBILE  MOBILE  SIGNUP MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\n  ;\n}\n\n_s(ShowReactionsx, \"XEF5Oc/XXLKJ6v5pj3/3WPhHTpk=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ShowReactionsx;\nexport const ShowReactions = /*#__PURE__*/React.memo(ShowReactionsx);\n_c2 = ShowReactions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShowReactionsx\");\n$RefreshReg$(_c2, \"ShowReactions\");","map":{"version":3,"sources":["C:/Users/oghen/Documents/ClikBate/super/src/profile/ShowReactions.tsx"],"names":["React","useEffect","useSelector","ShowReactionsx","i","zoomedModal","wideImage","post","AddRef","length","callObserver","darkmode","state","GlobalReducer","darkmodeReducer","image","imageThumb","id","UserdataReducer","imageReducer","imageReducerThumb","idReducer","textAlign","marginTop","flipper","display","zIndex","borderRadius","cursor","position","padding","margin","objectFit","width","paddingBottom","profile_image","ShowReactions","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAA+CC,SAA/C,QAAgE,OAAhE;AAWA,SAAyBC,WAAzB,QAAyD,aAAzD;;;;AAsBA;AAEA,SAASC,cAAT,CAAwB;AACtBC,EAAAA,CADsB;AAEtBC,EAAAA,WAFsB;AAGtBC,EAAAA,SAHsB;AAItBC,EAAAA,IAJsB;AAKtBC,EAAAA,MALsB;AAMtBC,EAAAA,MANsB;AAOtBC,EAAAA;AAPsB,CAAxB,EAQQ;AAAA;;AACN;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeT,WAAW,CAAEU,KAAD,KAAoC,EACnE,GAAGA,KAAK,CAACC;AAD0D,GAApC,CAAD,CAAhC;AAGA,QAAMC,eAAe,GAAGH,QAAxB,CAnBM,CAqBN;AACA;AACA;AACA;;AAQA,QAAM;AAAEI,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA;AAArB,MAA4Bf,WAAW,CAC1CU,KAAD,KAAmC,EACjC,GAAGA,KAAK,CAACM;AADwB,GAAnC,CAD2C,CAA7C;AAKA,QAAMC,YAAY,GAAGJ,KAArB;AACA,QAAMK,iBAAiB,GAAGJ,UAA1B;AACA,QAAMK,SAAS,GAAGJ,EAAlB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,CAAC,GAAG,CAAJ,KAAUK,MAAd,EAAsB,CACpB;AACD;AACF,GAJQ,EAIN,CAACL,CAAD,CAJM,CAAT;AAMA,sBACE;AAAA,2BACE;AAAM,MAAA,KAAK,EAAE;AAAEkB,QAAAA,SAAS,EAAE,QAAb;AAAuBC,QAAAA,SAAS,EAAE;AAAlC,OAAb;AAAA,8BACE;AACE,QAAA,OAAO,EAAE,MAAM;AACbC,UAAAA,OAAO;AACR,SAHH;AAIE,QAAA,SAAS,EACPV,eAAe,GACV,qCADU,GAEV,sCAPT;AASE,QAAA,KAAK,EAAE;AACLW,UAAAA,OAAO,EAAE,OADJ;AAELC,UAAAA,MAAM,EAAE,CAFH;AAGLC,UAAAA,YAAY,EAAE,KAHT;AAILC,UAAAA,MAAM,EAAE,SAJH;AAKLC,UAAAA,QAAQ,EAAE,UALL;AAMLC,UAAAA,OAAO,EAAE,KANJ;AAOLC,UAAAA,MAAM,EAAE,MAPH;AAQLC,UAAAA,SAAS,EAAE,SARN;AASLC,UAAAA,KAAK,EAAE,KATF;AAULC,UAAAA,aAAa,EAAE;AAVV,SATT;AAqBE,QAAA,GAAG,EAAG,GAAE3B,IAAI,CAAC4B,aAAc,EArB7B;AAsBE,QAAA,GAAG,EAAC;AAtBN;AAAA;AAAA;AAAA;AAAA,cADF,eAyBE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,KAAK,EAAE;AAAEZ,UAAAA,SAAS,EAAE;AAAb,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AA+BA;AAhCF;AAkCD;;GAzFQpB,c;UAwBcD,W,EAgBaA,W;;;KAxC3BC,c;AA2FT,OAAO,MAAMiC,aAAa,gBAAGpC,KAAK,CAACqC,IAAN,CAAWlC,cAAX,CAAtB;MAAMiC,a","sourcesContent":["import React, { useRef, useState, useCallback, useEffect } from \"react\";\r\nimport { Ispinnerinterface, IFormHolder } from \"../log/log-Interfaces\";\r\nimport Axios from \"axios\";\r\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\r\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\r\nimport { TextFieldLogin } from \"../log/TextFieldLogin\";\r\nimport { TextFieldSignup } from \"../log/TextFieldSignup\";\r\nimport { ModalFormSignupError } from \"../log/ModalFormSignupError\";\r\nimport { ModalFormLoginError } from \"../log/ModalFormLoginError\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { IsLoggedAction } from \"../log/actions/IsLoggedAction\";\r\nimport { UserdataAction } from \"../log/actions/UserdataAction\";\r\nimport { ActivateLoaderAction, HideLoaderAction } from \"../GlobalActions\";\r\n//////import { useHistory } from \"react-router-dom\";\r\nimport { PasswordCheck } from \"../log/PasswordCheck\";\r\nimport { UpdateColorAction } from \"../GlobalActions\";\r\nimport { UserInfoUpdateAction } from \"../log/actions/UserdataAction\";\r\nimport KeyboardDoubleArrowRightIcon from \"@mui/icons-material/KeyboardDoubleArrowRight\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport ReplyAllIcon from \"@mui/icons-material/ReplyAll\";\r\nimport QuickreplyIcon from \"@mui/icons-material/Quickreply\";\r\nimport { ICommentTemplate, IGrid } from \"../log/log-Interfaces\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport CommentIcon from \"@mui/icons-material/Comment\";\r\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\r\nimport TextareaAutosize from \"@mui/base/TextareaAutosize\";\r\nimport { DialogContent } from \"@material-ui/core\";\r\nimport { animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\n\r\n///Axios.defaults.withCredentials = true;\r\n\r\nfunction ShowReactionsx({\r\n  i,\r\n  zoomedModal,\r\n  wideImage,\r\n  post,\r\n  AddRef,\r\n  length,\r\n  callObserver,\r\n}: any) {\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      image: string;\r\n      imageThumb: string;\r\n      id: number;\r\n    };\r\n  }\r\n  const { image, imageThumb, id } = useSelector(\r\n    (state: RootStateReducerImage) => ({\r\n      ...state.UserdataReducer,\r\n    })\r\n  );\r\n  const imageReducer = image;\r\n  const imageReducerThumb = imageThumb;\r\n  const idReducer = id;\r\n\r\n  useEffect(() => {\r\n    if (i + 1 === length) {\r\n      /////callObserver();\r\n    }\r\n  }, [i]);\r\n\r\n  return (\r\n    <>\r\n      <span style={{ textAlign: \"center\", marginTop: \"5px\" }}>\r\n        <img\r\n          onClick={() => {\r\n            flipper();\r\n          }}\r\n          className={\r\n            darkmodeReducer\r\n              ? `turprofileDark image-gray-on-click `\r\n              : ` turprofileLight image-gray-on-click`\r\n          }\r\n          style={{\r\n            display: \"block\",\r\n            zIndex: 2,\r\n            borderRadius: \"50%\",\r\n            cursor: \"pointer\",\r\n            position: \"relative\",\r\n            padding: \"0px\",\r\n            margin: \"auto\",\r\n            objectFit: \"contain\",\r\n            width: \"55%\",\r\n            paddingBottom: \"10px\",\r\n          }}\r\n          src={`${post.profile_image}`}\r\n          alt=\"Superstarz Billboard \"\r\n        />\r\n        <span className=\"zuperxyinfo\" style={{ marginTop: \"20px\" }}>\r\n          hi there\r\n        </span>\r\n      </span>\r\n    </>\r\n    /*MOBILE  MOBILE  MOBILE  MOBILE  SIGNUP MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\r\n  );\r\n}\r\n\r\nexport const ShowReactions = React.memo(ShowReactionsx);\r\n"]},"metadata":{},"sourceType":"module"}