{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\step1.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Step1() {\n  _s();\n\n  const [name, setName] = useState();\n  const initialRawLogValue = {\n    inputedUsername: \"\",\n    inputedEmail: \"\",\n    inputedPassword: \"\"\n  };\n  const initialCleanLogValue = {\n    inputedUsername: \"\",\n    inputedEmail: \"\",\n    inputedPassword: \"\"\n  };\n  const initialErrorLogValue = {\n    inputedUsername: 0,\n    inputedEmail: 0\n  };\n  const [rawLoginValues, setRawLoginValues] = useState(initialRawLogValue);\n  const [cleanLoginValues, setCleanLoginValues] = useState(initialCleanLogValue);\n  const [errorsLoginValues, setErrorsLoginValues] = useState(initialErrorLogValue);\n\n  const updateLoginvalues = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name == \"inputedUsername\") {\n      let gg = /[^a-z0-9áéíóúñü \\.'_]/gim;\n      let val = value.replace(gg, \"\");\n      let gg1 = /^.{24}$/;\n      let valu = val.replace(gg1, \"\");\n      let vv = gg.test(value);\n      let vvx = gg1.test(val);\n      {\n        vv ? setErrorsLoginValues({ ...errorsLoginValues,\n          [name]: 1\n        }) : setErrorsLoginValues({ ...errorsLoginValues,\n          [name]: 0\n        });\n      }\n\n      if (!vvx) {\n        setRawLoginValues({ ...rawLoginValues,\n          [name]: valu\n        });\n      } else {\n        setErrorsLoginValues({ ...errorsLoginValues,\n          [name]: 3\n        });\n      }\n    } else if (name == \"inputedEmail\") {\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      let vaa = re.test(String(vaxlue).toLowerCase());\n      console.log(v);\n\n      if (!vvx) {\n        setRawLoginValues({ ...rawLoginValues,\n          [name]: valu\n        });\n      } else {\n        setErrorsLoginValues({ ...errorsLoginValues,\n          [name]: 3\n        });\n      }\n    } else {\n      setRawLoginValues({ ...rawLoginValues,\n        [name]: value\n      });\n    }\n  };\n\n  const onSubmit = () => {\n    alert(rawLoginValues.inputedUsername);\n  };\n\n  let qa = \"\";\n\n  switch (errorsLoginValues.inputedUsername) {\n    case 1:\n      qa = \"wrong input\";\n      break;\n\n    case 2:\n      qa = \"letter start not num\";\n      break;\n\n    case 3:\n      qa = \"maximun limit reached\";\n      break;\n\n    default:\n      qa = \"\";\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [qa, /*#__PURE__*/_jsxDEV(TextField, {\n      style: {\n        width: \"82%\",\n        paddingBottom: \"30px\"\n      },\n      inputProps: {\n        style: {\n          fontSize: \"2.5vh\"\n        }\n      },\n      InputLabelProps: {\n        style: {\n          fontSize: \"1.8vh\"\n        }\n      },\n      label: \"name\",\n      name: \"inputedUsername\",\n      variant: \"filled\",\n      type: \"text\",\n      onChange: updateLoginvalues,\n      value: rawLoginValues.inputedUsername\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      style: {\n        width: \"82%\",\n        paddingBottom: \"30px\"\n      },\n      inputProps: {\n        style: {\n          fontSize: \"2.5vh\"\n        }\n      },\n      InputLabelProps: {\n        style: {\n          fontSize: \"1.8vh\"\n        }\n      },\n      label: \"password\",\n      name: \"inputedPassword\",\n      variant: \"filled\",\n      type: \"password\",\n      onChange: updateLoginvalues,\n      value: rawLoginValues.inputedPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      style: {\n        width: \"82%\",\n        paddingBottom: \"30px\"\n      },\n      inputProps: {\n        style: {\n          fontSize: \"2.5vh\"\n        }\n      },\n      InputLabelProps: {\n        style: {\n          fontSize: \"1.8vh\"\n        }\n      },\n      label: \"email\",\n      name: \"inputedEmail\",\n      variant: \"filled\",\n      type: \"email\",\n      onChange: updateLoginvalues,\n      value: rawLoginValues.inputedEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onMouseDown: onSubmit,\n      children: \"SUBMIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Step1, \"3ZbPTbxPcHERVEPrRNziuRBCGeI=\");\n\n_c = Step1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step1\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/step1.tsx"],"names":["React","useState","TextField","Step1","name","setName","initialRawLogValue","inputedUsername","inputedEmail","inputedPassword","initialCleanLogValue","initialErrorLogValue","rawLoginValues","setRawLoginValues","cleanLoginValues","setCleanLoginValues","errorsLoginValues","setErrorsLoginValues","updateLoginvalues","e","value","target","gg","val","replace","gg1","valu","vv","test","vvx","re","vaa","String","vaxlue","toLowerCase","console","log","v","onSubmit","alert","qa","width","paddingBottom","style","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nexport default function Step1() {\r\n  const [name, setName] = useState<string>();\r\n\r\n  const initialRawLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedEmail: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n\r\n  const initialCleanLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedEmail: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n\r\n  const initialErrorLogValue = {\r\n    inputedUsername: 0,\r\n    inputedEmail: 0,\r\n  };\r\n\r\n  const [rawLoginValues, setRawLoginValues] = useState(initialRawLogValue);\r\n\r\n  const [cleanLoginValues, setCleanLoginValues] = useState(\r\n    initialCleanLogValue\r\n  );\r\n\r\n  const [errorsLoginValues, setErrorsLoginValues] = useState(\r\n    initialErrorLogValue\r\n  );\r\n\r\n  const updateLoginvalues = (e: any) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name == \"inputedUsername\") {\r\n      let gg = /[^a-z0-9áéíóúñü \\.'_]/gim;\r\n      let val = value.replace(gg, \"\");\r\n      let gg1 = /^.{24}$/;\r\n\r\n      let valu = val.replace(gg1, \"\");\r\n      let vv = gg.test(value);\r\n      let vvx = gg1.test(val);\r\n\r\n      {\r\n        vv\r\n          ? setErrorsLoginValues({ ...errorsLoginValues, [name]: 1 })\r\n          : setErrorsLoginValues({ ...errorsLoginValues, [name]: 0 });\r\n      }\r\n\r\n      if (!vvx) {\r\n        setRawLoginValues({ ...rawLoginValues, [name]: valu });\r\n      } else {\r\n        setErrorsLoginValues({ ...errorsLoginValues, [name]: 3 });\r\n      }\r\n    } else if (name == \"inputedEmail\") {\r\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      let vaa = re.test(String(vaxlue).toLowerCase());\r\n      console.log(v);\r\n      if (!vvx) {\r\n        setRawLoginValues({ ...rawLoginValues, [name]: valu });\r\n      } else {\r\n        setErrorsLoginValues({ ...errorsLoginValues, [name]: 3 });\r\n      }\r\n    } else {\r\n      setRawLoginValues({ ...rawLoginValues, [name]: value });\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    alert(rawLoginValues.inputedUsername);\r\n  };\r\n\r\n  let qa = \"\";\r\n\r\n  switch (errorsLoginValues.inputedUsername) {\r\n    case 1:\r\n      qa = \"wrong input\";\r\n      break;\r\n\r\n    case 2:\r\n      qa = \"letter start not num\";\r\n      break;\r\n\r\n    case 3:\r\n      qa = \"maximun limit reached\";\r\n      break;\r\n\r\n    default:\r\n      qa = \"\";\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {qa}\r\n      <TextField\r\n        style={{ width: \"82%\", paddingBottom: \"30px\" }}\r\n        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n        label=\"name\"\r\n        name=\"inputedUsername\"\r\n        variant=\"filled\"\r\n        type=\"text\"\r\n        onChange={updateLoginvalues}\r\n        value={rawLoginValues.inputedUsername}\r\n      />\r\n      <TextField\r\n        style={{ width: \"82%\", paddingBottom: \"30px\" }}\r\n        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n        label=\"password\"\r\n        name=\"inputedPassword\"\r\n        variant=\"filled\"\r\n        type=\"password\"\r\n        onChange={updateLoginvalues}\r\n        value={rawLoginValues.inputedPassword}\r\n      />\r\n\r\n      <TextField\r\n        style={{ width: \"82%\", paddingBottom: \"30px\" }}\r\n        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n        label=\"email\"\r\n        name=\"inputedEmail\"\r\n        variant=\"filled\"\r\n        type=\"email\"\r\n        onChange={updateLoginvalues}\r\n        value={rawLoginValues.inputedEmail}\r\n      />\r\n      <button onMouseDown={onSubmit}>SUBMIT</button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}