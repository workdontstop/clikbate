{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\FilterMode.tsx\";\nimport React from \"react\";\nimport { ImageTobeFiltered } from \"./ImageTobeFiltered\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FilterModex({\n  filterImage,\n  selectedImage,\n  itemUploadRef,\n  setActivatefilterImage\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: selectedImage ? selectedImage.map((imagee, index) => {\n      return /*#__PURE__*/_jsxDEV(ImageTobeFiltered, {\n        setActivatefilterImage: setActivatefilterImage,\n        itemUploadRef: itemUploadRef,\n        filterImage: filterImage,\n        index: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this);\n    }) : null\n  }, void 0, false);\n}\n\n_c = FilterModex;\nexport const FilterMode = /*#__PURE__*/React.memo(FilterModex);\n_c2 = FilterMode;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FilterModex\");\n$RefreshReg$(_c2, \"FilterMode\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/FilterMode.tsx"],"names":["React","ImageTobeFiltered","FilterModex","filterImage","selectedImage","itemUploadRef","setActivatefilterImage","map","imagee","index","FilterMode","memo"],"mappings":";AAAA,OAAOA,KAAP,MAMO,OANP;AAuBA,SAASC,iBAAT,QAAkC,qBAAlC;;;;AAEA,SAASC,WAAT,CAAqB;AACnBC,EAAAA,WADmB;AAEnBC,EAAAA,aAFmB;AAGnBC,EAAAA,aAHmB;AAInBC,EAAAA;AAJmB,CAArB,EAKqB;AACnB,sBACE;AAAA,cACGF,aAAa,GACVA,aAAa,CAACG,GAAd,CAAkB,CAACC,MAAD,EAAcC,KAAd,KAA6B;AAC7C,0BACE,QAAC,iBAAD;AACE,QAAA,sBAAsB,EAAEH,sBAD1B;AAEE,QAAA,aAAa,EAAED,aAFjB;AAIE,QAAA,WAAW,EAAEF,WAJf;AAKE,QAAA,KAAK,EAAEM;AALT,SAGOA,KAHP;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVD,CADU,GAYV;AAbN,mBADF;AAiBD;;KAvBQP,W;AAyBT,OAAO,MAAMQ,UAAU,gBAAGV,KAAK,CAACW,IAAN,CAAWT,WAAX,CAAnB;MAAMQ,U","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { ImageTobeFiltered } from \"./ImageTobeFiltered\";\r\n\r\nfunction FilterModex({\r\n  filterImage,\r\n  selectedImage,\r\n  itemUploadRef,\r\n  setActivatefilterImage,\r\n}: any): JSX.Element {\r\n  return (\r\n    <>\r\n      {selectedImage\r\n        ? selectedImage.map((imagee: any, index: any) => {\r\n            return (\r\n              <ImageTobeFiltered\r\n                setActivatefilterImage={setActivatefilterImage}\r\n                itemUploadRef={itemUploadRef}\r\n                key={index}\r\n                filterImage={filterImage}\r\n                index={index}\r\n              />\r\n            );\r\n          })\r\n        : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const FilterMode = React.memo(FilterModex);\r\n"]},"metadata":{},"sourceType":"module"}