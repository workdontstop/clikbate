{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\log\\\\ModalLog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport { useSpring, animated } from \"react-spring\";\nimport { DialogContent, Button, Paper, Grid } from \"@material-ui/core\";\nimport { isBrowser, isTablet } from \"react-device-detect\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport \"./logCss.css\";\nimport { TextFieldLogin } from \"./TextFieldLogin\";\nimport { TextFieldSignup } from \"./TextFieldSignup\";\nimport { ServerError } from \"./ServerError\";\nimport { ModalFormSignupError } from \"./ModalFormSignupError\";\nimport { ModalFormLoginError } from \"./ModalFormLoginError\";\nimport image1 from \"./images/modalpic1.jpg\";\nimport image2 from \"./images/modalpic2.jpg\";\nimport image3 from \"./images/modalpic3.png\";\nimport image4 from \"./images/modalpic4.jpg\";\nimport image5 from \"./images/modalpic5.jpg\";\nimport image6 from \"./images/modalpic6.jpg\";\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nAxios.defaults.withCredentials = true;\n\nfunction ModalLogx({\n  mobileZoom,\n  setMobileZoom,\n  zoomedModal,\n  setZoomedModal,\n  screenHeight,\n  formtype,\n  CloseModalForm,\n  showModalForm,\n  PaperStyle,\n  signupstyle,\n  loginstyle,\n  darkmode\n}) {\n  _s();\n\n  const matchPc = isBrowser;\n  const matchTablet = isTablet; ///\n  ///\n  ///\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n\n  const modalanimation = useSpring({\n    config: {\n      duration: 500\n    },\n    opacity: showModalForm ? 1 : 0.9,\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`\n  });\n  const modalanimationTwo = useSpring({\n    config: {\n      duration: 450\n    },\n    opacity: showModalForm ? 1 : 0.9,\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`\n  }); ///\n  ///\n  ///\n  ///CHANGE    CROPPED  IMAGE HEIGHT FOR TABLET\n\n  var choppedHeight = \"\"; ///\n  ///\n  ///\n  ///ON  MOBILE TEXTFIELD FOCUS\n\n  const [mobileTextFieldFocus, setmobileTextFieldFocus] = useState(false);\n  var textfieldFocusIndex = 0;\n  var textfieldFocusDisplay = \"none\";\n\n  if (mobileTextFieldFocus) {\n    textfieldFocusIndex = 12;\n    textfieldFocusDisplay = \"block\";\n  } else {\n    textfieldFocusIndex = 0;\n    textfieldFocusDisplay = \"none\";\n  } ///\n  ///\n  ///\n  ///ANIMATE MOBILE IMAGE ON ZOOM STATE CHANGE\n\n\n  const mobileLogmodalanimation = useSpring({\n    config: {\n      duration: 20\n    },\n    transition: \"height 1s\",\n    opacity: mobileZoom ? 1 : 0.98,\n    height: mobileZoom ? \"100%\" : matchTablet ? \"23vh\" : \"15vh\"\n  });\n  var formHolder = \"\";\n  var fieldSize = \"\";\n  var tabletMobile = \"\";\n  var MobileTabZoom = \"\";\n  var MobileTab = \"\";\n\n  if (matchTablet) {\n    formHolder = \"formholderTablet\";\n    fieldSize = \"smallTablet\";\n    tabletMobile = \"Tablet\";\n    MobileTabZoom = \"log-logoTabletZoom\";\n    MobileTab = \"log-logoTablet\";\n  } else {\n    formHolder = \"formholder\";\n    fieldSize = \"small\";\n    tabletMobile = \"Mobile\";\n    MobileTabZoom = \"log-logoMobileZoom\";\n    MobileTab = \"log-logoMobile\";\n  } ///\n  ///\n  ///\n  ///HISTORY VARIABLE\n\n\n  const history = useHistory(); ///\n  ///\n  ///ACESSING DOT ENV FILE VARIABLES\n\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env; ///\n  ///\n  ///LOGGING UPDATE VALUES DETAILS\n\n  const initialLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialCleanLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialErrorLogValue = {\n    inputedUsername: 0,\n    inputedPassword: 0\n  };\n  const [rawLoginValues, setRawLoginValues] = useState(initialLogValue);\n  const [cleanLoginValues, setCleanLoginValues] = useState(initialCleanLogValue);\n  const [errorsLoginValues, setErrorsLoginValues] = useState(initialErrorLogValue); ///\n  ///\n  ///\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\n\n  const updateLoginvalues = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setErrorsLoginValues({ ...errorsLoginValues,\n      [name]: 0\n    });\n    setRawLoginValues({ ...rawLoginValues,\n      [name]: value\n    });\n    setCleanLoginValues({ ...cleanLoginValues,\n      [name]: value\n    });\n  }, [errorsLoginValues, rawLoginValues, cleanLoginValues]); ///\n  ///\n  ///\n  /// SENDING LOGIN  DATA TO SERVER SIDE\n\n  const [serverErrorData, setServerErrorData] = useState(null);\n  const [serverErrorDisplay, setServerErrorDisplay] = useState(0);\n  const [serverEmojiplain, setserverEmojiplain] = useState(true);\n\n  const logmein = () => {\n    if (cleanLoginValues.inputedUsername && cleanLoginValues.inputedPassword) {\n      Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/loging`, {\n        values: cleanLoginValues\n      }, {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.message === \"Wrong Password\") {\n          setServerErrorData(\"wrong username and  password combination\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(false);\n        } else {\n          if (response.data.message === \"Wrong username\") {\n            setServerErrorData(\"username does not exist\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(false);\n          } else if (response.data.payload) {\n            history.push({\n              pathname: \"/supercheck\",\n              state: {\n                userdata: response.data.payload\n              }\n            });\n          } else {\n            setServerErrorData(\"user info could not be retrieved\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(false);\n          }\n        }\n      }).catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          //express typo can activate this\n          // Request made and server responded\n          //express typo can activate this\n          //let textFieldParam = error.response.data.error.errors[0].param;\n          let affectedTextField = \"wrong password and username combination\";\n          let dynamicError = `${affectedTextField}  `;\n          setServerErrorData(dynamicError);\n          setServerErrorDisplay(1);\n          setserverEmojiplain(false);\n        } else if (error.request) {\n          // The request was made but no response was received Or request not made\n          // Axios.post(\"http://localhost:3003/reg\" can activate this error\n          setServerErrorData(\"error connecting to server, check your connection\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(true);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          setServerErrorData(\"request setup failed , pls try again\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(true);\n        }\n      });\n    } else {\n      let passwordErrorHolder = errorsLoginValues.inputedPassword;\n      let usernameErrorHolder = errorsLoginValues.inputedUsername;\n\n      if (!cleanLoginValues.inputedPassword) {\n        passwordErrorHolder = 1;\n      }\n\n      if (!cleanLoginValues.inputedUsername) {\n        usernameErrorHolder = 1;\n      }\n\n      setErrorsLoginValues({ ...errorsLoginValues,\n        inputedPassword: passwordErrorHolder,\n        inputedUsername: usernameErrorHolder\n      });\n    }\n  }; ///\n  ///\n  ///UPDATE SIGN UP DETAILS\n  ///\n  ///\n  ///\n  /// SANITISE SIGN UP FORM INPUT CLIENT\n\n\n  const initialRawSignValue = {\n    inputedEmail: \"\",\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialCleanSignValue = {\n    inputedEmail: \"\",\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialErrorSignValue = {\n    inputedEmail: 0,\n    inputedUsername: 0,\n    inputedPassword: 0\n  };\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\n  const [cleanSignupValues, setCleanSignupValues] = useState(initialCleanSignValue);\n  const [errorsSignupValues, setErrorsSignupValues] = useState(initialErrorSignValue);\n  const EmailCheckingTimer = useRef(null);\n  const UsernameCheckingTimer = useRef(null);\n  const initialspinner = {\n    inputedUsername: false,\n    inputedPassword: false,\n    inputedEmail: false\n  };\n  const [errorFormChecking, setErrorFormChecking] = useState(initialspinner);\n  const PasswordCheckingTimer = useRef(null);\n  const [cantPassBadEmail, setCantPassBadEmail] = useState(false); /// SANITISE LOG IN FORM INPUT CLIENT SIDE\n\n  const updateSignvalues = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"inputedUsername\") {\n      let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\n      let cleanValue = value.replace(usernameCleaner, \"\");\n      let usernameLimiter = /^.{26}$/;\n      let finalUsername = cleanValue.replace(usernameLimiter, \"\");\n      let checkUsernameClean = usernameCleaner.test(value);\n      let checkUsernameLimited = usernameLimiter.test(cleanValue);\n\n      if (checkUsernameClean) {\n        if (UsernameCheckingTimer.current) {\n          clearTimeout(UsernameCheckingTimer.current);\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n        }\n\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n      } else {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      let userNameLength = finalUsername.length;\n\n      if (checkUsernameClean) {} else {\n        if (checkUsernameLimited || userNameLength > 26) {} else {\n          setRawSignupValues({ ...rawSignupValues,\n            [name]: finalUsername\n          });\n          setCleanSignupValues({ ...cleanSignupValues,\n            [name]: finalUsername\n          }); /// AXIOS REQUEST FOR CHECK USERNAME\n\n          if (UsernameCheckingTimer.current) {\n            clearTimeout(UsernameCheckingTimer.current);\n            setErrorFormChecking({ ...errorFormChecking,\n              [name]: false\n            });\n            setErrorsSignupValues({ ...errorsSignupValues,\n              [name]: 0\n            });\n          }\n\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: true\n          });\n          setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 2\n          });\n          UsernameCheckingTimer.current = setTimeout(() => {\n            if (value.length === 0) {\n              setErrorsSignupValues({ ...errorsSignupValues,\n                [name]: 0\n              });\n              setErrorFormChecking({ ...errorFormChecking,\n                [name]: false\n              });\n            } else {\n              Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/usernamecheck`, {\n                value: finalUsername\n              }).then(response => {\n                if (response.data.message === \"username is not unique\") {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 2\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else if (response.data.message === \"username is available\") {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 3\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                }\n              }).catch(function (error) {\n                if (error.response) {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else if (error.request) {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                }\n              });\n            }\n          }, 3000); /// AXIOS REQUEST FOR CHECK USERNAME\n        }\n      } ///\n\n    } else if (name === \"inputedEmail\") {\n      const emailValidation = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      const emailCleaner = /[^*$%#+@a-z0-9áéíóúñü \\.'_]/gim;\n      let finalEmail = value.replace(emailCleaner, \"\");\n      let checkEmailClean = emailCleaner.test(value);\n      let checkEmailValidated = emailValidation.test(String(value).toLowerCase());\n\n      if (EmailCheckingTimer.current) {\n        clearTimeout(EmailCheckingTimer.current);\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: false\n        });\n      }\n\n      if (!checkEmailValidated) {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: true\n        });\n        EmailCheckingTimer.current = setTimeout(() => {\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n          setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 2\n          });\n          checkEmailClean && setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 3\n          });\n        }, 2000);\n      } else {\n        if (EmailCheckingTimer.current) {\n          clearTimeout(EmailCheckingTimer.current);\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n        }\n\n        checkEmailClean ? setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 3\n        }) : setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: finalEmail\n      });\n      setCleanSignupValues({ ...cleanSignupValues,\n        [name]: finalEmail\n      }); ////////\n    } else {\n      if (PasswordCheckingTimer.current) {\n        clearTimeout(PasswordCheckingTimer.current);\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: false\n        });\n      }\n\n      setErrorsSignupValues({ ...errorsSignupValues,\n        [name]: 2\n      });\n      setErrorFormChecking({ ...errorFormChecking,\n        [name]: true\n      });\n      PasswordCheckingTimer.current = setTimeout(() => {\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: false\n        });\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n      }, 2000);\n      var passwordLength = value.length;\n\n      if (passwordLength >= 8 || passwordLength === 0) {\n        if (PasswordCheckingTimer.current) {\n          clearTimeout(PasswordCheckingTimer.current);\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n        }\n\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: value\n      });\n      setCleanSignupValues({ ...cleanSignupValues,\n        [name]: value\n      });\n    }\n  }, [cleanSignupValues, rawSignupValues, errorsSignupValues, errorFormChecking]); ///\n  ///\n  ///\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\n\n  const signmeup = () => {\n    if (cleanSignupValues.inputedEmail && cleanSignupValues.inputedUsername && cleanSignupValues.inputedPassword && errorsSignupValues.inputedPassword === 0) {\n      if (errorsSignupValues.inputedEmail === 0) {\n        Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/registration`, {\n          values: cleanSignupValues\n        }).then(response => {\n          if (response.data.message === \"username not unique\") {\n            setServerErrorData(\"username is taken\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          } else if (response.data.message === \"Registration Successful\") {\n            console.log(response.status);\n            alert(\"REGISTRATION COMPLETE\");\n          } else {\n            setServerErrorData(\"something went wrong\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          }\n        }).catch(function (error) {\n          if (error.response) {\n            // Request made and server responded\n            //express typo can activate this\n            let textFieldParam = error.response.data.error.errors[0].param;\n            let affectedTextField = \" \";\n\n            if (textFieldParam === \"values.inputedPassword\") {\n              affectedTextField = \"password must be at least 8 characters\";\n            } else if (textFieldParam === \"values.inputedEmail\") {\n              affectedTextField = \"email address is not valid\";\n            } else {\n              affectedTextField = \"usernames use letters, numbers, underscores and periods\";\n            }\n\n            let dynamicError = `${affectedTextField}.  ${error.response.data.error.errors[0].msg} `;\n            setServerErrorData(dynamicError);\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          } else if (error.request) {\n            // The request was made but no response was received Or request not made\n            // Axios.post(\"http://localhost:3003/reg\" can activate this error\n            setServerErrorData(\"error connecting to server, check your connection\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          } else {\n            // Something happened in setting up the request that triggered an Error\n            setServerErrorData(\"request setup failed , pls try again\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          }\n        });\n      } else {\n        setCantPassBadEmail(true);\n        setTimeout(() => {\n          setCantPassBadEmail(false);\n        }, 3000);\n      }\n    } else {\n      let passwordErrorHolder = errorsSignupValues.inputedPassword;\n      let emailErrorHolder = errorsSignupValues.inputedEmail;\n      let usernameErrorHolder = errorsSignupValues.inputedUsername;\n\n      if (!cleanSignupValues.inputedPassword) {\n        passwordErrorHolder = 4;\n      }\n\n      if (!cleanSignupValues.inputedEmail) {\n        emailErrorHolder = 4;\n      }\n\n      if (!cleanSignupValues.inputedUsername) {\n        usernameErrorHolder = 4;\n      }\n\n      setErrorsSignupValues({ ...errorsSignupValues,\n        inputedPassword: passwordErrorHolder,\n        inputedEmail: emailErrorHolder,\n        inputedUsername: usernameErrorHolder\n      });\n    }\n  }; ///\n  ///\n  ///\n  ///\n  ///\n  /// UPDATE SIGN UP DETAILS\n  ///\n  ///\n  ///\n  ///CLOSE MODAL FORM ON SMALL ICON PRESS\n\n\n  const iconclicked = () => {\n    CloseModalForm(0);\n  }; ///\n  ///\n  ///\n  /// AUTO SCROLL WINDOWS AND CONTENT GRID\n\n\n  const contentScrollRef = useRef(null);\n  const imagescrollRef = useRef(null);\n\n  const autoScrollWindowNImage = () => {\n    imagescrollRef.current.scrollTo(0, 0);\n    contentScrollRef.current.scrollTo(0, 2);\n  }; ///\n  ///\n  ///\n  /// SHOW A F ZOOMED/LOCKED MODAL VIEW PC\n\n\n  const zoomlogmodal = () => {\n    setZoomedModal(!zoomedModal);\n  }; ///\n  ///\n  ///\n  /// SHOW A  ZOOMED/LOCKED  MODAL VIEW  MOBILE(CHANGE MOBILEZOOM WITH A CLICK)\n\n\n  const clickMobileZoom = () => {\n    setMobileZoom(!mobileZoom);\n\n    if (mobileZoom) {\n      setCallMobileZoomLimiter(true);\n    } else {\n      setCallMobileZoomLimiter(false);\n    }\n\n    if (contentScrollRef.current && contentScrollRef) {\n      autoScrollWindowNImage();\n    }\n  }; ///\n  ///\n  ///\n  ///CHANGE MOBILEZOOM WITH A SCROLL(SCROLL CHANGE LAYOUT)\n\n\n  const [callMobileZoomLimiter, setCallMobileZoomLimiter] = useState(false);\n  const slide = useCallback(e => {\n    if (contentScrollRef.current.scrollTop <= 0) {\n      if (!callMobileZoomLimiter) {\n        setMobileZoom(true);\n        setCallMobileZoomLimiter(true);\n      }\n    } else if (contentScrollRef.current.scrollTop >= 2) {\n      if (callMobileZoomLimiter) {\n        autoScrollWindowNImage();\n        setMobileZoom(false);\n        setCallMobileZoomLimiter(false);\n      }\n    } else {}\n  }, [mobileZoom, callMobileZoomLimiter, contentScrollRef]); ///\n  ///\n  ///\n  ///ACTIVATE MOBILE VIEW TOP SCROLL(ZOOMABLE) ON INITIAL LOAD\n\n  const mobileImageOnLoad = () => {\n    if (contentScrollRef.current && contentScrollRef) {\n      autoScrollWindowNImage();\n    }\n  }; ///\n  ///\n  ///\n  /// SHOW  LOGIN PASSWORD FOR A WHILE\n\n\n  const [loginShowPassword, setLoginShowPassword] = useState(false);\n  const loginShowPasswordTimer = useRef(null);\n  const ShowLoginPasswordForaWhile = useCallback(() => {\n    if (loginShowPasswordTimer.current) {\n      clearTimeout(loginShowPasswordTimer.current);\n    }\n\n    setLoginShowPassword(!loginShowPassword);\n    loginShowPasswordTimer.current = setTimeout(() => {\n      setLoginShowPassword(false);\n    }, 2000);\n  }, [loginShowPassword]); ///\n  ///\n  ///\n  /// SHOW  SIGNUP PASSWORD FOR A WHILE\n\n  const [signupShowPassword, setSignupShowPassword] = useState(false);\n  const signupShowPasswordTimer = useRef(null);\n  const ShowSignupPasswordForaWhile = useCallback(() => {\n    if (signupShowPasswordTimer.current) {\n      clearTimeout(signupShowPasswordTimer.current);\n    }\n\n    setSignupShowPassword(!signupShowPassword);\n    signupShowPasswordTimer.current = setTimeout(() => {\n      setSignupShowPassword(false);\n    }, 2000);\n  }, [signupShowPassword]); ///\n  ///\n  ///\n  /// LOGOUT\n  ///\n  ///\n  ///\n  /// USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\n\n  const ModalBackgroundRef = useRef(null);\n\n  const onBackgroundFocus = e => {\n    if (ModalBackgroundRef.current === e.target) {\n      CloseModalForm(0);\n    }\n  }; ///\n  ///\n  ///\n  /// ESCAPE KEY CLOSE MODAL\n\n\n  const escapePress = useCallback(e => {\n    if (e.key === \"Escape\" && showModalForm) {\n      CloseModalForm(0);\n    }\n  }, [showModalForm, CloseModalForm]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escapePress);\n    return () => document.removeEventListener(\"keydown\", escapePress);\n  }, [escapePress]); ///\n  ///\n  ///\n  /// RANDOMISE IMAGE\n\n  const [showimage, setShowimage] = useState(\" \");\n  useEffect(() => {\n    let imagecontrol = [1, 2, 3, 4, 5, 6];\n    var result = null;\n    var randomimage = imagecontrol[Math.floor(Math.random() * imagecontrol.length)];\n    const img = new Image(); ///new image instance\n\n    if (randomimage === 1) {\n      result = image1;\n    } else if (randomimage === 2) {\n      result = image2;\n    } else if (randomimage === 3) {\n      result = image3;\n    } else if (randomimage === 4) {\n      result = image4;\n    } else if (randomimage === 5) {\n      result = image5;\n    } else {\n      result = image6;\n    }\n\n    img.src = result; //src forces a download\n\n    setShowimage(result);\n  }, [showimage]); ///\n  ///\n  ///\n  /// GET IMAGE WIDTH ,HEIGHT AND SET WIDE IMAGE\n\n  const ModalSlidingImageRef = useRef(null);\n  const [imageHeightoverflow, setImageHeightoverflow] = useState(false);\n  const [wideImage, setWideImage] = useState(false);\n  const onimageload = useCallback(e => {\n    if (ModalSlidingImageRef && ModalSlidingImageRef.current) {\n      const imageHeight = ModalSlidingImageRef.current.clientHeight;\n      const imageWidth = ModalSlidingImageRef.current.clientWidth;\n\n      if (imageHeight + imageWidth / imageHeight * 3 > screenHeight) {\n        setImageHeightoverflow(true);\n      }\n\n      if (imageWidth > imageHeight + imageWidth / imageHeight * 100) {\n        setWideImage(true);\n      }\n    }\n  }, [imageHeightoverflow, wideImage, screenHeight]);\n\n  const logout = () => {\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/logout`, {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.message === \"cookie deleted\") {\n        alert(\"logout  complete\");\n      } else if (response.data.message === \"cookie null\") {\n        alert(\"logged out  already\");\n      }\n    }).catch(function (error) {\n      alert(\"logout fail\");\n    });\n  }; ///\n  ///\n  ///\n  /// DYNAMIC MODAL LAYOUT VARIABLES\n  ///\n  ///\n  ///\n  /// DYNAMIC MODAL LAYOUT VARIABLES\n\n\n  const wideImageControlTrue = \"75vw\";\n  const wideImageControlfalse = \"70vw\";\n  const zoomImageControl = \"100vw\";\n  const GridMiniAwide = 8;\n  const GridMiniBwide = 4;\n  const GridMiniAlong = 7;\n  const GridMiniBlong = 5;\n  const GridZoomAwide = 8;\n  const GridZoomBwide = 4;\n  const GridZoomAlong = 6;\n  const GridZoomBlong = 6;\n  let GridHolderA = 7;\n  let GridHolderB = 5;\n  let GridxA = 7;\n  let GridxB = 5;\n  let GridyA = 7;\n  let GridyB = 5;\n  let wideImageControl = \"70vw\";\n  let imageReal = \"75vw\";\n  let borderGrid = \"11px\";\n  var WidthHolder = \"82%\";\n  var opacitySlidingModalImage = \"0\";\n  var zIndexModalImageSmall = 10;\n  var zIndexModalImageZoom = 0;\n  var opacityFixedModalImage = \"1\";\n  var slidingImageWidth = \"50%\";\n\n  if (zoomedModal) {\n    if (imageHeightoverflow) {\n      opacitySlidingModalImage = \"1\";\n      zIndexModalImageSmall = 0;\n      zIndexModalImageZoom = 10;\n      opacityFixedModalImage = \"0\";\n    }\n\n    borderGrid = \"0px\";\n\n    if (wideImage) {\n      slidingImageWidth = \"66%\";\n      WidthHolder = \"76%\";\n      wideImageControl = wideImageControlTrue;\n      GridxA = GridZoomAwide;\n      GridxB = GridZoomBwide;\n    } else {\n      slidingImageWidth = \"50%\";\n      WidthHolder = \"88%\";\n      wideImageControl = wideImageControlfalse;\n      GridxA = GridZoomAlong;\n      GridxB = GridZoomBlong;\n    }\n\n    imageReal = zoomImageControl;\n    GridHolderA = GridxA;\n    GridHolderB = GridxB;\n  } else {\n    WidthHolder = \"82%\";\n    borderGrid = \"11px\";\n\n    if (wideImage) {\n      wideImageControl = wideImageControlTrue;\n      GridyA = GridMiniAwide;\n      GridyB = GridMiniBwide;\n    } else {\n      wideImageControl = wideImageControlfalse;\n      GridyA = GridMiniAlong;\n      GridyB = GridMiniBlong;\n    }\n\n    imageReal = wideImageControl;\n    GridHolderA = GridyA;\n    GridHolderB = GridyB;\n  } ///\n  ///\n  ///\n  /// DYNAMIC MODAL LAYOUT VARIABLES\n  /// DYNAMIC MODAL LAYOUT VARIABLES\n  ///\n  ///\n  ///FADE SLIDING IMAGE\n\n\n  var fadeSlidingimage = \"fadermodal-imageslider\";\n\n  if (opacitySlidingModalImage === \"0\") {\n    fadeSlidingimage = \"\";\n  } else {\n    fadeSlidingimage = \"fadermodal-imageslider-zoomload\";\n    setTimeout(function () {\n      fadeSlidingimage = \"fadermodal-imageslider\";\n    }, 1600);\n  } ///\n  ///\n  ///SUPERSTARZ ICON SELECT\n\n\n  var SuperIcon = \"\";\n  darkmode ? SuperIcon = SuperstarzIconDark : SuperIcon = SuperstarzIconLight;\n  let usernameErrorData = null;\n  let usernameErrorDisplay = 0;\n  let emailErrorData = null;\n  let emailErrorDisplay = 0;\n  let passwordErrorData = null;\n  let passwordErrorDisplay = 0;\n\n  switch (errorsSignupValues.inputedUsername) {\n    case 1:\n      usernameErrorData = \"usernames can only use letters, numbers, underscores and periods \";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 2:\n      usernameErrorData = \"username is taken\";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 3:\n      usernameErrorData = \"username is available\";\n      usernameErrorDisplay = 1;\n      break;\n\n    case 4:\n      usernameErrorData = \"username  required\";\n      usernameErrorDisplay = 1;\n      break;\n\n    default:\n      usernameErrorData = null;\n      usernameErrorDisplay = 0;\n      break;\n  }\n\n  switch (errorsSignupValues.inputedPassword) {\n    case 1:\n      passwordErrorData = \"password must be at Least 8 characters\";\n      passwordErrorDisplay = 1;\n      break;\n\n    case 2:\n      passwordErrorData = \"checking\";\n      passwordErrorDisplay = 1;\n      break;\n\n    case 4:\n      passwordErrorData = \" password  required \";\n      passwordErrorDisplay = 1;\n      break;\n\n    default:\n      passwordErrorData = null;\n      passwordErrorDisplay = 0;\n      break;\n  }\n\n  switch (errorsSignupValues.inputedEmail) {\n    case 1:\n      emailErrorData = \"checking\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 2:\n      emailErrorData = \"email address is not valid\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 3:\n      emailErrorData = \"email is restricted to certain characters\";\n      emailErrorDisplay = 1;\n      break;\n\n    case 4:\n      emailErrorData = \"email required\";\n      emailErrorDisplay = 1;\n      break;\n\n    default:\n      emailErrorData = null;\n      emailErrorDisplay = 0;\n      break;\n  } ///\n  ///\n  ///\n  ///ALL VARIABLES ,ERROR VARIABLES,CONSTANT AND  STATES\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"apple-mobile-web-app-capable\",\n      content: \"yes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1027,\n      columnNumber: 7\n    }, this), showModalForm ? matchPc ?\n    /*#__PURE__*/\n\n    /*PC  PC  PC  PC  PC  PC  PC  PC  PPC  PC  PC  PC  PC  PC  PC  PC  PC PC  PC  PC  PC  PC  PC  PC  PC  PC PC  PC  PC  PC  PC  PC  PC  PC  PC C */\n    _jsxDEV(DialogContent, {\n      style: {\n        paddingLeft: \"0px\",\n        height: \"100%\",\n        zIndex: 100\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n        className: `${fadeSlidingimage} modalImageCustomSlider FormDialog-containerx dontallowhighlighting`,\n        onClick: onBackgroundFocus,\n        style: {\n          overflow: \"auto\",\n          cursor: \"pointer\",\n          height: \"101%\",\n          padding: \"0px\",\n          width: slidingImageWidth,\n          opacity: opacitySlidingModalImage,\n          zIndex: zIndexModalImageZoom\n        },\n        ref: ModalBackgroundRef,\n        children: [\" \", /*#__PURE__*/_jsxDEV(Scrollbars, {\n          style: {\n            width: \"100%\",\n            height: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(animated.div, {\n            style: modalanimationTwo,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              ref: ModalSlidingImageRef,\n              onClick: zoomlogmodal,\n              onLoad: onimageload,\n              src: showimage,\n              className: \"modalImageStylex\",\n              style: {\n                opacity: opacitySlidingModalImage\n              },\n              alt: \"Logzoom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1059,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        className: \"fadermodal FormDialog-container dontallowhighlighting\",\n        onClick: onBackgroundFocus,\n        style: {\n          overflow: \"hidden\",\n          cursor: \"pointer\"\n        },\n        ref: ModalBackgroundRef,\n        children: [/*#__PURE__*/_jsxDEV(ServerError, {\n          device: \"pc\",\n          serverEmojiplain: serverEmojiplain,\n          setServerErrorData: setServerErrorData,\n          serverErrorDisplay: serverErrorDisplay,\n          serverErrorData: serverErrorData,\n          darkmode: darkmode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1080,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n          style: modalanimation,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            style: {\n              backgroundImage: PaperStyle,\n              borderRadius: borderGrid,\n              cursor: \"default\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              className: \"containerStyle\",\n              style: {\n                width: imageReal,\n                borderRadius: borderGrid\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: GridHolderA,\n                style: {\n                  zIndex: zIndexModalImageSmall\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  onClick: iconclicked,\n                  className: zoomedModal ? \"hide-logo\" : \"log-logo  make-small-icons-clickable-neutralB\",\n                  src: SuperIcon,\n                  alt: \"SuperstarZ logosmallmode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1109,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  onClick: zoomlogmodal,\n                  src: showimage,\n                  className: \"modalImageStyle\",\n                  style: {\n                    opacity: opacityFixedModalImage,\n                    borderTopLeftRadius: borderGrid,\n                    borderBottomLeftRadius: borderGrid\n                  },\n                  alt: \"Logsmall\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1120,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1104,\n                columnNumber: 21\n              }, this), formtype ? /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: GridHolderB,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  xs: 12,\n                  item: true,\n                  className: \"formholder\",\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    className: \"center-content-vertically\",\n                    style: {\n                      marginTop: \"-5px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      onClick: iconclicked,\n                      className: zoomedModal ? \"zoom-login-logo  make-small-icons-clickable-neutral\" : \"hide-logo \",\n                      src: SuperIcon,\n                      alt: \"SuperstarZ logo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1142,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: logout,\n                      style: {\n                        cursor: \"pointer\",\n                        opacity: 0.1,\n                        position: \"fixed\",\n                        top: \"0.5em\",\n                        borderRadius: \"50%\"\n                      },\n                      children: [\" \", \"....\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1153,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n                      mobileTextFieldFocus: mobileTextFieldFocus,\n                      device: \"pc\",\n                      type: true,\n                      ErrorDisplay: errorsLoginValues.inputedUsername,\n                      darkmode: darkmode,\n                      WidthHolder: WidthHolder\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1166,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(TextFieldLogin, {\n                      setmobileTextFieldFocus: setmobileTextFieldFocus,\n                      mobileTextFieldFocus: mobileTextFieldFocus,\n                      updateLoginvalues: updateLoginvalues,\n                      rawLoginValues: rawLoginValues,\n                      ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\n                      loginShowPassword: loginShowPassword,\n                      size: \"medium\",\n                      passwordType: false,\n                      withHolder: WidthHolder\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1175,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(TextFieldLogin, {\n                      setmobileTextFieldFocus: setmobileTextFieldFocus,\n                      mobileTextFieldFocus: mobileTextFieldFocus,\n                      updateLoginvalues: updateLoginvalues,\n                      rawLoginValues: rawLoginValues,\n                      ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\n                      loginShowPassword: loginShowPassword,\n                      size: \"medium\",\n                      passwordType: true,\n                      withHolder: WidthHolder\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1188,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n                      mobileTextFieldFocus: mobileTextFieldFocus,\n                      device: \"pc\",\n                      type: false,\n                      ErrorDisplay: errorsLoginValues.inputedPassword,\n                      darkmode: darkmode,\n                      WidthHolder: WidthHolder\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1201,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      style: {\n                        marginTop: \"70px\",\n                        zIndex: 300\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 4\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1214,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        className: \"buttonpad buttonshake\",\n                        xs: 4,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: logmein,\n                          style: loginstyle,\n                          fullWidth: true,\n                          variant: \"outlined\",\n                          size: \"large\",\n                          color: \"primary\",\n                          children: \"Log In\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1220,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1215,\n                        columnNumber: 31\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1210,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1136,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1135,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1134,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                xs: GridHolderB,\n                item: true,\n                className: \"formholder\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  className: \"center-content-vertically\",\n                  style: {\n                    padding: \"0px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: iconclicked,\n                    className: zoomedModal ? \"zoom-signup-logo make-small-icons-clickable-neutral\" : \"hide-logo make-small-icons-clickable-neutral \",\n                    src: SuperIcon,\n                    alt: \"SuperstarZ logo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1243,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n                    device: \"pc\",\n                    ErrorType: 0,\n                    textField: \"email\",\n                    errorFormChecking: errorFormChecking.inputedEmail,\n                    WidthHolder: WidthHolder,\n                    darkmode: darkmode,\n                    type: true,\n                    cantPassBadEmail: cantPassBadEmail,\n                    ErrorDisplay: emailErrorDisplay,\n                    ErrorData: emailErrorData\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1253,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n                    updateSignvalues: updateSignvalues,\n                    rawSignupValues: rawSignupValues,\n                    ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n                    signupShowPassword: signupShowPassword,\n                    size: \"medium\",\n                    emailType: true,\n                    passwordType: false,\n                    withHolder: WidthHolder\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1266,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n                    device: \"pc\",\n                    ErrorType: errorsSignupValues.inputedUsername,\n                    textField: \"username\",\n                    errorFormChecking: errorFormChecking.inputedUsername,\n                    WidthHolder: WidthHolder,\n                    darkmode: darkmode,\n                    type: true,\n                    cantPassBadEmail: cantPassBadEmail,\n                    ErrorDisplay: usernameErrorDisplay,\n                    ErrorData: usernameErrorData\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1279,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n                    updateSignvalues: updateSignvalues,\n                    rawSignupValues: rawSignupValues,\n                    ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n                    signupShowPassword: signupShowPassword,\n                    size: \"medium\",\n                    emailType: false,\n                    passwordType: false,\n                    withHolder: WidthHolder\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1294,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n                    updateSignvalues: updateSignvalues,\n                    rawSignupValues: rawSignupValues,\n                    ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n                    signupShowPassword: signupShowPassword,\n                    size: \"medium\",\n                    emailType: false,\n                    passwordType: true,\n                    withHolder: WidthHolder\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1307,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n                    device: \"pc\",\n                    ErrorType: 0,\n                    textField: \"password\",\n                    errorFormChecking: errorFormChecking.inputedPassword,\n                    darkmode: darkmode,\n                    WidthHolder: WidthHolder,\n                    type: false,\n                    cantPassBadEmail: cantPassBadEmail,\n                    ErrorDisplay: passwordErrorDisplay,\n                    ErrorData: passwordErrorData\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1319,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    className: \"modal-hold-signup\",\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 4\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1335,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      className: \"buttonpad buttonshake\",\n                      xs: 4,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        style: signupstyle,\n                        onClick: signmeup,\n                        fullWidth: true,\n                        variant: \"contained\",\n                        size: \"large\",\n                        color: \"secondary\",\n                        children: \"Sign Up\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1337,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1336,\n                      columnNumber: 29\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1334,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1237,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1236,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1096,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1030,\n      columnNumber: 156\n    }, this)\n    /*PC  PC  PC PC  PC  PC  PC  PC  PC  PC  PC  PC PC  PC  PC  PC  PC  PC  PC  PC  PC PC  PC  PC  PC  PC  PC  PC  PC  PC  PC  PC  PC  PC  PC  PC */\n    :\n    /*#__PURE__*/\n\n    /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\n    _jsxDEV(DialogContent, {\n      className: \"fadermodal FormDialog-container-mobile dontallowhighlighting\",\n      ref: imagescrollRef,\n      style: {\n        overflow: \"auto\",\n        cursor: \"pointer\",\n        padding: \"0px\",\n        zIndex: 100,\n        backgroundImage: PaperStyle\n      },\n      children: [/*#__PURE__*/_jsxDEV(ServerError, {\n        device: \"mobile\",\n        serverEmojiplain: serverEmojiplain,\n        setServerErrorData: setServerErrorData,\n        serverErrorDisplay: serverErrorDisplay,\n        serverErrorData: serverErrorData,\n        darkmode: darkmode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1370,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n        style: modalanimation,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            cursor: \"default\",\n            backgroundColor: \"rgba(0,0,0,0.0)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              className: \"yyy\",\n              style: {\n                marginTop: \"0.5px\",\n                height: \"auto\"\n              },\n              children: /*#__PURE__*/_jsxDEV(animated.img, {\n                onClick: clickMobileZoom,\n                onLoad: mobileImageOnLoad,\n                src: showimage,\n                className: \"modalMobileImageStyle slow-Div-Change\",\n                alt: \"SuperstarZ\",\n                style: mobileLogmodalanimation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1395,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1386,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              className: mobileZoom ? \"zoomMobile\" : \"smallMobile\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(Paper, {\n                onScroll: slide,\n                ref: contentScrollRef,\n                style: {\n                  overflow: \"auto\",\n                  backgroundColor: \"rgba(0,0,0,0.0)\",\n                  cursor: \"default\",\n                  height: \"95vh\",\n                  borderRadius: \"0px\",\n                  marginTop: \"-1.9px\"\n                },\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  onClick: iconclicked,\n                  className: mobileZoom ? `${MobileTabZoom}  make-small-icons-clickable-neutralB` : `${MobileTab}  make-small-icons-clickable-neutralB`,\n                  src: SuperIcon,\n                  alt: \"Express Yourself\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1423,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  className: \"mobileTextfield-backplate FormDialog-container-mobile dontallowhighlighting\",\n                  style: {\n                    zIndex: textfieldFocusIndex,\n                    display: textfieldFocusDisplay\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1433,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  style: {\n                    height: \"6vh\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1442,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  xs: 12,\n                  item: true,\n                  className: formHolder,\n                  children: formtype ? /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    className: \"\",\n                    children: [/*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n                      type: true,\n                      device: tabletMobile,\n                      ErrorDisplay: errorsLoginValues.inputedUsername,\n                      darkmode: darkmode,\n                      WidthHolder: WidthHolder,\n                      mobileTextFieldFocus: mobileTextFieldFocus\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1446,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(TextFieldLogin, {\n                      setmobileTextFieldFocus: setmobileTextFieldFocus,\n                      mobileTextFieldFocus: mobileTextFieldFocus,\n                      updateLoginvalues: updateLoginvalues,\n                      rawLoginValues: rawLoginValues,\n                      ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\n                      loginShowPassword: loginShowPassword,\n                      size: fieldSize,\n                      passwordType: false,\n                      withHolder: WidthHolder\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1455,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(TextFieldLogin, {\n                      setmobileTextFieldFocus: setmobileTextFieldFocus,\n                      mobileTextFieldFocus: mobileTextFieldFocus,\n                      updateLoginvalues: updateLoginvalues,\n                      rawLoginValues: rawLoginValues,\n                      ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\n                      loginShowPassword: loginShowPassword,\n                      size: fieldSize,\n                      passwordType: true,\n                      withHolder: WidthHolder\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1468,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n                      type: false,\n                      ErrorDisplay: errorsLoginValues.inputedPassword,\n                      device: tabletMobile,\n                      darkmode: darkmode,\n                      WidthHolder: WidthHolder,\n                      mobileTextFieldFocus: mobileTextFieldFocus\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1481,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      className: \"modal-hold-login\",\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 4,\n                        sm: 5\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1490,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        className: \"buttonpad buttonshake\",\n                        xs: 4,\n                        sm: 2,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: logmein,\n                          style: loginstyle,\n                          fullWidth: true,\n                          variant: \"outlined\",\n                          size: \"large\",\n                          color: \"primary\",\n                          children: \"Log In\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1497,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1491,\n                        columnNumber: 31\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1489,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1445,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    className: \"\",\n                    style: {\n                      marginTop: \"-1.5px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n                      device: tabletMobile,\n                      ErrorType: 0,\n                      textField: \"email\",\n                      errorFormChecking: errorFormChecking.inputedEmail,\n                      WidthHolder: WidthHolder,\n                      darkmode: darkmode,\n                      type: true,\n                      cantPassBadEmail: cantPassBadEmail,\n                      ErrorDisplay: emailErrorDisplay,\n                      ErrorData: emailErrorData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1517,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n                      updateSignvalues: updateSignvalues,\n                      rawSignupValues: rawSignupValues,\n                      ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n                      signupShowPassword: signupShowPassword,\n                      size: fieldSize,\n                      emailType: true,\n                      passwordType: false,\n                      withHolder: WidthHolder\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1530,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n                      device: tabletMobile,\n                      ErrorType: errorsSignupValues.inputedUsername,\n                      textField: \"username\",\n                      errorFormChecking: errorFormChecking.inputedUsername,\n                      WidthHolder: WidthHolder,\n                      darkmode: darkmode,\n                      type: true,\n                      cantPassBadEmail: cantPassBadEmail,\n                      ErrorDisplay: usernameErrorDisplay,\n                      ErrorData: usernameErrorData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1542,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n                      updateSignvalues: updateSignvalues,\n                      rawSignupValues: rawSignupValues,\n                      ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n                      signupShowPassword: signupShowPassword,\n                      size: fieldSize,\n                      emailType: false,\n                      passwordType: false,\n                      withHolder: WidthHolder\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1556,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(TextFieldSignup, {\n                      updateSignvalues: updateSignvalues,\n                      rawSignupValues: rawSignupValues,\n                      ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n                      signupShowPassword: signupShowPassword,\n                      size: fieldSize,\n                      emailType: false,\n                      passwordType: true,\n                      withHolder: WidthHolder\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1568,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n                      device: tabletMobile,\n                      ErrorType: 0,\n                      textField: \"password\",\n                      errorFormChecking: errorFormChecking.inputedPassword,\n                      darkmode: darkmode,\n                      WidthHolder: WidthHolder,\n                      type: false,\n                      cantPassBadEmail: cantPassBadEmail,\n                      ErrorDisplay: passwordErrorDisplay,\n                      ErrorData: passwordErrorData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1580,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      className: \"modal-hold-signup\",\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 4,\n                        sm: 5\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1595,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        className: \"buttonpad buttonshake\",\n                        xs: 4,\n                        sm: 2,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          style: signupstyle,\n                          onClick: signmeup,\n                          fullWidth: true,\n                          variant: \"contained\",\n                          size: \"large\",\n                          color: \"secondary\",\n                          children: \"Sign Up\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1602,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1596,\n                        columnNumber: 31\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1594,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1511,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1443,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  style: {\n                    height: \"60vh\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1617,\n                  columnNumber: 23\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1410,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1404,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1385,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1379,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1378,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1359,\n      columnNumber: 11\n    }, this)\n    /*MOBILE  MOBILE  MOBILE  MOBILE MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE MOBILE  MOBILE  MOBILE*/\n    : null]\n  }, void 0, true);\n}\n\n_s(ModalLogx, \"dKdSFqQ/1wWRgDwmrpW6tGdMfUY=\", false, function () {\n  return [useSpring, useSpring, useSpring, useHistory];\n});\n\n_c = ModalLogx;\nexport const ModalLog = /*#__PURE__*/React.memo(ModalLogx);\n_c2 = ModalLog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalLogx\");\n$RefreshReg$(_c2, \"ModalLog\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/log/ModalLog.tsx"],"names":["React","useRef","useEffect","useState","useCallback","useHistory","Axios","useSpring","animated","DialogContent","Button","Paper","Grid","isBrowser","isTablet","Scrollbars","TextFieldLogin","TextFieldSignup","ServerError","ModalFormSignupError","ModalFormLoginError","image1","image2","image3","image4","image5","image6","SuperstarzIconLight","SuperstarzIconDark","require","config","defaults","withCredentials","ModalLogx","mobileZoom","setMobileZoom","zoomedModal","setZoomedModal","screenHeight","formtype","CloseModalForm","showModalForm","PaperStyle","signupstyle","loginstyle","darkmode","matchPc","matchTablet","modalanimation","duration","opacity","transform","modalanimationTwo","choppedHeight","mobileTextFieldFocus","setmobileTextFieldFocus","textfieldFocusIndex","textfieldFocusDisplay","mobileLogmodalanimation","transition","height","formHolder","fieldSize","tabletMobile","MobileTabZoom","MobileTab","history","REACT_APP_SUPERSTARZ_URL","process","env","initialLogValue","inputedUsername","inputedPassword","initialCleanLogValue","initialErrorLogValue","rawLoginValues","setRawLoginValues","cleanLoginValues","setCleanLoginValues","errorsLoginValues","setErrorsLoginValues","updateLoginvalues","e","name","value","target","serverErrorData","setServerErrorData","serverErrorDisplay","setServerErrorDisplay","serverEmojiplain","setserverEmojiplain","logmein","post","values","then","response","data","message","payload","push","pathname","state","userdata","catch","error","affectedTextField","dynamicError","request","passwordErrorHolder","usernameErrorHolder","initialRawSignValue","inputedEmail","initialCleanSignValue","initialErrorSignValue","rawSignupValues","setRawSignupValues","cleanSignupValues","setCleanSignupValues","errorsSignupValues","setErrorsSignupValues","EmailCheckingTimer","UsernameCheckingTimer","initialspinner","errorFormChecking","setErrorFormChecking","PasswordCheckingTimer","cantPassBadEmail","setCantPassBadEmail","updateSignvalues","usernameCleaner","cleanValue","replace","usernameLimiter","finalUsername","checkUsernameClean","test","checkUsernameLimited","current","clearTimeout","userNameLength","length","setTimeout","emailValidation","emailCleaner","finalEmail","checkEmailClean","checkEmailValidated","String","toLowerCase","passwordLength","signmeup","console","log","status","alert","textFieldParam","errors","param","msg","emailErrorHolder","iconclicked","contentScrollRef","imagescrollRef","autoScrollWindowNImage","scrollTo","zoomlogmodal","clickMobileZoom","setCallMobileZoomLimiter","callMobileZoomLimiter","slide","scrollTop","mobileImageOnLoad","loginShowPassword","setLoginShowPassword","loginShowPasswordTimer","ShowLoginPasswordForaWhile","signupShowPassword","setSignupShowPassword","signupShowPasswordTimer","ShowSignupPasswordForaWhile","ModalBackgroundRef","onBackgroundFocus","escapePress","key","document","addEventListener","removeEventListener","showimage","setShowimage","imagecontrol","result","randomimage","Math","floor","random","img","Image","src","ModalSlidingImageRef","imageHeightoverflow","setImageHeightoverflow","wideImage","setWideImage","onimageload","imageHeight","clientHeight","imageWidth","clientWidth","logout","wideImageControlTrue","wideImageControlfalse","zoomImageControl","GridMiniAwide","GridMiniBwide","GridMiniAlong","GridMiniBlong","GridZoomAwide","GridZoomBwide","GridZoomAlong","GridZoomBlong","GridHolderA","GridHolderB","GridxA","GridxB","GridyA","GridyB","wideImageControl","imageReal","borderGrid","WidthHolder","opacitySlidingModalImage","zIndexModalImageSmall","zIndexModalImageZoom","opacityFixedModalImage","slidingImageWidth","fadeSlidingimage","SuperIcon","usernameErrorData","usernameErrorDisplay","emailErrorData","emailErrorDisplay","passwordErrorData","passwordErrorDisplay","paddingLeft","zIndex","overflow","cursor","padding","width","backgroundImage","borderRadius","borderTopLeftRadius","borderBottomLeftRadius","marginTop","position","top","backgroundColor","display","ModalLog","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { DialogContent, Button, Paper, Grid } from \"@material-ui/core\";\r\nimport { isBrowser, isTablet } from \"react-device-detect\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nimport \"./logCss.css\";\r\nimport { ImodalLog, IGrid, Ispinnerinterface } from \"./log-Interfaces\";\r\nimport { TextFieldLogin } from \"./TextFieldLogin\";\r\nimport { TextFieldSignup } from \"./TextFieldSignup\";\r\nimport { ServerError } from \"./ServerError\";\r\nimport { ModalFormSignupError } from \"./ModalFormSignupError\";\r\nimport { ModalFormLoginError } from \"./ModalFormLoginError\";\r\n\r\nimport image1 from \"./images/modalpic1.jpg\";\r\nimport image2 from \"./images/modalpic2.jpg\";\r\nimport image3 from \"./images/modalpic3.png\";\r\nimport image4 from \"./images/modalpic4.jpg\";\r\nimport image5 from \"./images/modalpic5.jpg\";\r\nimport image6 from \"./images/modalpic6.jpg\";\r\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\r\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\r\n\r\nrequire(\"dotenv\").config();\r\nAxios.defaults.withCredentials = true;\r\n\r\nfunction ModalLogx({\r\n  mobileZoom,\r\n  setMobileZoom,\r\n  zoomedModal,\r\n  setZoomedModal,\r\n  screenHeight,\r\n  formtype,\r\n  CloseModalForm,\r\n  showModalForm,\r\n  PaperStyle,\r\n  signupstyle,\r\n  loginstyle,\r\n  darkmode,\r\n}: ImodalLog): JSX.Element {\r\n  const matchPc = isBrowser;\r\n  const matchTablet = isTablet;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      duration: 500,\r\n    },\r\n    opacity: showModalForm ? 1 : 0.9,\r\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`,\r\n  });\r\n\r\n  const modalanimationTwo = useSpring({\r\n    config: {\r\n      duration: 450,\r\n    },\r\n    opacity: showModalForm ? 1 : 0.9,\r\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`,\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CHANGE    CROPPED  IMAGE HEIGHT FOR TABLET\r\n  var choppedHeight = \"\";\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///ON  MOBILE TEXTFIELD FOCUS\r\n  const [mobileTextFieldFocus, setmobileTextFieldFocus] =\r\n    useState<boolean>(false);\r\n\r\n  var textfieldFocusIndex = 0;\r\n  var textfieldFocusDisplay = \"none\";\r\n\r\n  if (mobileTextFieldFocus) {\r\n    textfieldFocusIndex = 12;\r\n    textfieldFocusDisplay = \"block\";\r\n  } else {\r\n    textfieldFocusIndex = 0;\r\n    textfieldFocusDisplay = \"none\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///ANIMATE MOBILE IMAGE ON ZOOM STATE CHANGE\r\n  const mobileLogmodalanimation: any = useSpring({\r\n    config: {\r\n      duration: 20,\r\n    },\r\n    transition: \"height 1s\",\r\n    opacity: mobileZoom ? 1 : 0.98,\r\n    height: mobileZoom ? \"100%\" : matchTablet ? \"23vh\" : \"15vh\",\r\n  });\r\n  var formHolder = \"\";\r\n  var fieldSize = \"\";\r\n  var tabletMobile = \"\";\r\n  var MobileTabZoom = \"\";\r\n  var MobileTab = \"\";\r\n\r\n  if (matchTablet) {\r\n    formHolder = \"formholderTablet\";\r\n    fieldSize = \"smallTablet\";\r\n    tabletMobile = \"Tablet\";\r\n    MobileTabZoom = \"log-logoTabletZoom\";\r\n    MobileTab = \"log-logoTablet\";\r\n  } else {\r\n    formHolder = \"formholder\";\r\n    fieldSize = \"small\";\r\n    tabletMobile = \"Mobile\";\r\n    MobileTabZoom = \"log-logoMobileZoom\";\r\n    MobileTab = \"log-logoMobile\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///HISTORY VARIABLE\r\n  const history = useHistory();\r\n  ///\r\n  ///\r\n  ///ACESSING DOT ENV FILE VARIABLES\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n\r\n  ///\r\n  ///\r\n  ///LOGGING UPDATE VALUES DETAILS\r\n  const initialLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialCleanLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialErrorLogValue = {\r\n    inputedUsername: 0,\r\n    inputedPassword: 0,\r\n  };\r\n  const [rawLoginValues, setRawLoginValues] = useState(initialLogValue);\r\n  const [cleanLoginValues, setCleanLoginValues] =\r\n    useState(initialCleanLogValue);\r\n  const [errorsLoginValues, setErrorsLoginValues] =\r\n    useState(initialErrorLogValue);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\r\n  const updateLoginvalues = useCallback(\r\n    (e: any) => {\r\n      const { name, value } = e.target;\r\n      setErrorsLoginValues({ ...errorsLoginValues, [name]: 0 });\r\n      setRawLoginValues({ ...rawLoginValues, [name]: value });\r\n      setCleanLoginValues({ ...cleanLoginValues, [name]: value });\r\n    },\r\n\r\n    [errorsLoginValues, rawLoginValues, cleanLoginValues]\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SENDING LOGIN  DATA TO SERVER SIDE\r\n  const [serverErrorData, setServerErrorData] = useState<string | null>(null);\r\n  const [serverErrorDisplay, setServerErrorDisplay] = useState<number>(0);\r\n  const [serverEmojiplain, setserverEmojiplain] = useState<boolean>(true);\r\n\r\n  const logmein = () => {\r\n    if (cleanLoginValues.inputedUsername && cleanLoginValues.inputedPassword) {\r\n      Axios.post(\r\n        `http://${REACT_APP_SUPERSTARZ_URL}/loging`,\r\n        {\r\n          values: cleanLoginValues,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n        .then((response) => {\r\n          if (response.data.message === \"Wrong Password\") {\r\n            setServerErrorData(\"wrong username and  password combination\");\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(false);\r\n          } else {\r\n            if (response.data.message === \"Wrong username\") {\r\n              setServerErrorData(\"username does not exist\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(false);\r\n            } else if (response.data.payload) {\r\n              history.push({\r\n                pathname: \"/supercheck\",\r\n                state: { userdata: response.data.payload },\r\n              });\r\n            } else {\r\n              setServerErrorData(\"user info could not be retrieved\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(false);\r\n            }\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          if (error.response) {\r\n            // Request made and server responded\r\n            //express typo can activate this\r\n            // Request made and server responded\r\n            //express typo can activate this\r\n            //let textFieldParam = error.response.data.error.errors[0].param;\r\n            let affectedTextField = \"wrong password and username combination\";\r\n\r\n            let dynamicError = `${affectedTextField}  `;\r\n            setServerErrorData(dynamicError);\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(false);\r\n          } else if (error.request) {\r\n            // The request was made but no response was received Or request not made\r\n            // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n            setServerErrorData(\r\n              \"error connecting to server, check your connection\"\r\n            );\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(true);\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            setServerErrorData(\"request setup failed , pls try again\");\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(true);\r\n          }\r\n        });\r\n    } else {\r\n      let passwordErrorHolder = errorsLoginValues.inputedPassword;\r\n\r\n      let usernameErrorHolder = errorsLoginValues.inputedUsername;\r\n\r\n      if (!cleanLoginValues.inputedPassword) {\r\n        passwordErrorHolder = 1;\r\n      }\r\n\r\n      if (!cleanLoginValues.inputedUsername) {\r\n        usernameErrorHolder = 1;\r\n      }\r\n\r\n      setErrorsLoginValues({\r\n        ...errorsLoginValues,\r\n        inputedPassword: passwordErrorHolder,\r\n        inputedUsername: usernameErrorHolder,\r\n      });\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///UPDATE SIGN UP DETAILS\r\n  ///\r\n  ///\r\n  ///\r\n  /// SANITISE SIGN UP FORM INPUT CLIENT\r\n  const initialRawSignValue = {\r\n    inputedEmail: \"\",\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialCleanSignValue = {\r\n    inputedEmail: \"\",\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n\r\n  const initialErrorSignValue = {\r\n    inputedEmail: 0,\r\n    inputedUsername: 0,\r\n    inputedPassword: 0,\r\n  };\r\n\r\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\r\n  const [cleanSignupValues, setCleanSignupValues] = useState(\r\n    initialCleanSignValue\r\n  );\r\n  const [errorsSignupValues, setErrorsSignupValues] = useState(\r\n    initialErrorSignValue\r\n  );\r\n\r\n  const EmailCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const UsernameCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const initialspinner: Ispinnerinterface = {\r\n    inputedUsername: false,\r\n    inputedPassword: false,\r\n    inputedEmail: false,\r\n  };\r\n\r\n  const [errorFormChecking, setErrorFormChecking] = useState(initialspinner);\r\n  const PasswordCheckingTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const [cantPassBadEmail, setCantPassBadEmail] = useState<boolean>(false);\r\n\r\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\r\n\r\n  const updateSignvalues = useCallback(\r\n    (e: any) => {\r\n      const { name, value } = e.target;\r\n\r\n      if (name === \"inputedUsername\") {\r\n        let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\r\n        let cleanValue = value.replace(usernameCleaner, \"\");\r\n\r\n        let usernameLimiter = /^.{26}$/;\r\n        let finalUsername = cleanValue.replace(usernameLimiter, \"\");\r\n\r\n        let checkUsernameClean = usernameCleaner.test(value);\r\n        let checkUsernameLimited = usernameLimiter.test(cleanValue);\r\n\r\n        if (checkUsernameClean) {\r\n          if (UsernameCheckingTimer.current) {\r\n            clearTimeout(UsernameCheckingTimer.current);\r\n            setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n          }\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n        } else {\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n        }\r\n\r\n        let userNameLength = finalUsername.length;\r\n\r\n        if (checkUsernameClean) {\r\n        } else {\r\n          if (checkUsernameLimited || userNameLength > 26) {\r\n          } else {\r\n            setRawSignupValues({\r\n              ...rawSignupValues,\r\n              [name]: finalUsername,\r\n            });\r\n            setCleanSignupValues({\r\n              ...cleanSignupValues,\r\n              [name]: finalUsername,\r\n            });\r\n            /// AXIOS REQUEST FOR CHECK USERNAME\r\n            if (UsernameCheckingTimer.current) {\r\n              clearTimeout(UsernameCheckingTimer.current);\r\n              setErrorFormChecking({\r\n                ...errorFormChecking,\r\n                [name]: false,\r\n              });\r\n              setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n            }\r\n            setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n            setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n            UsernameCheckingTimer.current = setTimeout(() => {\r\n              if (value.length === 0) {\r\n                setErrorsSignupValues({\r\n                  ...errorsSignupValues,\r\n                  [name]: 0,\r\n                });\r\n                setErrorFormChecking({\r\n                  ...errorFormChecking,\r\n                  [name]: false,\r\n                });\r\n              } else {\r\n                Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/usernamecheck`, {\r\n                  value: finalUsername,\r\n                })\r\n                  .then((response) => {\r\n                    if (response.data.message === \"username is not unique\") {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 2,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    } else if (\r\n                      response.data.message === \"username is available\"\r\n                    ) {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 3,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    } else {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 0,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    }\r\n                  })\r\n                  .catch(function (error) {\r\n                    if (error.response) {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 0,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    } else if (error.request) {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 0,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    } else {\r\n                      setErrorsSignupValues({\r\n                        ...errorsSignupValues,\r\n                        [name]: 0,\r\n                      });\r\n                      setErrorFormChecking({\r\n                        ...errorFormChecking,\r\n                        [name]: false,\r\n                      });\r\n                    }\r\n                  });\r\n              }\r\n            }, 3000);\r\n            /// AXIOS REQUEST FOR CHECK USERNAME\r\n          }\r\n        }\r\n        ///\r\n      } else if (name === \"inputedEmail\") {\r\n        const emailValidation =\r\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        const emailCleaner = /[^*$%#+@a-z0-9áéíóúñü \\.'_]/gim;\r\n        let finalEmail = value.replace(emailCleaner, \"\");\r\n\r\n        let checkEmailClean = emailCleaner.test(value);\r\n        let checkEmailValidated = emailValidation.test(\r\n          String(value).toLowerCase()\r\n        );\r\n        if (EmailCheckingTimer.current) {\r\n          clearTimeout(EmailCheckingTimer.current);\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n        }\r\n        if (!checkEmailValidated) {\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n          EmailCheckingTimer.current = setTimeout(() => {\r\n            setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n            setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n            checkEmailClean &&\r\n              setErrorsSignupValues({ ...errorsSignupValues, [name]: 3 });\r\n          }, 2000);\r\n        } else {\r\n          if (EmailCheckingTimer.current) {\r\n            clearTimeout(EmailCheckingTimer.current);\r\n            setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n          }\r\n          checkEmailClean\r\n            ? setErrorsSignupValues({ ...errorsSignupValues, [name]: 3 })\r\n            : setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n        }\r\n\r\n        setRawSignupValues({ ...rawSignupValues, [name]: finalEmail });\r\n        setCleanSignupValues({ ...cleanSignupValues, [name]: finalEmail });\r\n        ////////\r\n      } else {\r\n        if (PasswordCheckingTimer.current) {\r\n          clearTimeout(PasswordCheckingTimer.current);\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n        }\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n\r\n        setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n        PasswordCheckingTimer.current = setTimeout(() => {\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n        }, 2000);\r\n\r\n        var passwordLength = value.length;\r\n\r\n        if (passwordLength >= 8 || passwordLength === 0) {\r\n          if (PasswordCheckingTimer.current) {\r\n            clearTimeout(PasswordCheckingTimer.current);\r\n            setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n          }\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n        }\r\n        setRawSignupValues({ ...rawSignupValues, [name]: value });\r\n        setCleanSignupValues({ ...cleanSignupValues, [name]: value });\r\n      }\r\n    },\r\n    [cleanSignupValues, rawSignupValues, errorsSignupValues, errorFormChecking]\r\n  );\r\n  ///\r\n  ///\r\n  ///\r\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\r\n  const signmeup = () => {\r\n    if (\r\n      cleanSignupValues.inputedEmail &&\r\n      cleanSignupValues.inputedUsername &&\r\n      cleanSignupValues.inputedPassword &&\r\n      errorsSignupValues.inputedPassword === 0\r\n    ) {\r\n      if (errorsSignupValues.inputedEmail === 0) {\r\n        Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/registration`, {\r\n          values: cleanSignupValues,\r\n        })\r\n          .then((response) => {\r\n            if (response.data.message === \"username not unique\") {\r\n              setServerErrorData(\"username is taken\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            } else if (response.data.message === \"Registration Successful\") {\r\n              console.log(response.status);\r\n              alert(\"REGISTRATION COMPLETE\");\r\n            } else {\r\n              setServerErrorData(\"something went wrong\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            if (error.response) {\r\n              // Request made and server responded\r\n              //express typo can activate this\r\n              let textFieldParam = error.response.data.error.errors[0].param;\r\n              let affectedTextField = \" \";\r\n\r\n              if (textFieldParam === \"values.inputedPassword\") {\r\n                affectedTextField = \"password must be at least 8 characters\";\r\n              } else if (textFieldParam === \"values.inputedEmail\") {\r\n                affectedTextField = \"email address is not valid\";\r\n              } else {\r\n                affectedTextField =\r\n                  \"usernames use letters, numbers, underscores and periods\";\r\n              }\r\n              let dynamicError = `${affectedTextField}.  ${error.response.data.error.errors[0].msg} `;\r\n              setServerErrorData(dynamicError);\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            } else if (error.request) {\r\n              // The request was made but no response was received Or request not made\r\n              // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n              setServerErrorData(\r\n                \"error connecting to server, check your connection\"\r\n              );\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            } else {\r\n              // Something happened in setting up the request that triggered an Error\r\n              setServerErrorData(\"request setup failed , pls try again\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            }\r\n          });\r\n      } else {\r\n        setCantPassBadEmail(true);\r\n        setTimeout(() => {\r\n          setCantPassBadEmail(false);\r\n        }, 3000);\r\n      }\r\n    } else {\r\n      let passwordErrorHolder = errorsSignupValues.inputedPassword;\r\n      let emailErrorHolder = errorsSignupValues.inputedEmail;\r\n      let usernameErrorHolder = errorsSignupValues.inputedUsername;\r\n\r\n      if (!cleanSignupValues.inputedPassword) {\r\n        passwordErrorHolder = 4;\r\n      }\r\n      if (!cleanSignupValues.inputedEmail) {\r\n        emailErrorHolder = 4;\r\n      }\r\n      if (!cleanSignupValues.inputedUsername) {\r\n        usernameErrorHolder = 4;\r\n      }\r\n\r\n      setErrorsSignupValues({\r\n        ...errorsSignupValues,\r\n        inputedPassword: passwordErrorHolder,\r\n        inputedEmail: emailErrorHolder,\r\n        inputedUsername: usernameErrorHolder,\r\n      });\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n  /// UPDATE SIGN UP DETAILS\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CLOSE MODAL FORM ON SMALL ICON PRESS\r\n  const iconclicked = () => {\r\n    CloseModalForm(0);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// AUTO SCROLL WINDOWS AND CONTENT GRID\r\n  const contentScrollRef = useRef<any>(null);\r\n  const imagescrollRef = useRef<any>(null);\r\n  const autoScrollWindowNImage: any = () => {\r\n    imagescrollRef.current.scrollTo(0, 0);\r\n    contentScrollRef.current.scrollTo(0, 2);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW A F ZOOMED/LOCKED MODAL VIEW PC\r\n  const zoomlogmodal = () => {\r\n    setZoomedModal(!zoomedModal);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW A  ZOOMED/LOCKED  MODAL VIEW  MOBILE(CHANGE MOBILEZOOM WITH A CLICK)\r\n  const clickMobileZoom = () => {\r\n    setMobileZoom(!mobileZoom);\r\n    if (mobileZoom) {\r\n      setCallMobileZoomLimiter(true);\r\n    } else {\r\n      setCallMobileZoomLimiter(false);\r\n    }\r\n    if (contentScrollRef.current && contentScrollRef) {\r\n      autoScrollWindowNImage();\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CHANGE MOBILEZOOM WITH A SCROLL(SCROLL CHANGE LAYOUT)\r\n\r\n  const [callMobileZoomLimiter, setCallMobileZoomLimiter] =\r\n    useState<boolean>(false);\r\n  const slide = useCallback(\r\n    (e) => {\r\n      if (contentScrollRef.current.scrollTop <= 0) {\r\n        if (!callMobileZoomLimiter) {\r\n          setMobileZoom(true);\r\n          setCallMobileZoomLimiter(true);\r\n        }\r\n      } else if (contentScrollRef.current.scrollTop >= 2) {\r\n        if (callMobileZoomLimiter) {\r\n          autoScrollWindowNImage();\r\n          setMobileZoom(false);\r\n          setCallMobileZoomLimiter(false);\r\n        }\r\n      } else {\r\n      }\r\n    },\r\n    [mobileZoom, callMobileZoomLimiter, contentScrollRef]\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///ACTIVATE MOBILE VIEW TOP SCROLL(ZOOMABLE) ON INITIAL LOAD\r\n  const mobileImageOnLoad = () => {\r\n    if (contentScrollRef.current && contentScrollRef) {\r\n      autoScrollWindowNImage();\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW  LOGIN PASSWORD FOR A WHILE\r\n  const [loginShowPassword, setLoginShowPassword] = useState<boolean>(false);\r\n  const loginShowPasswordTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const ShowLoginPasswordForaWhile = useCallback(() => {\r\n    if (loginShowPasswordTimer.current) {\r\n      clearTimeout(loginShowPasswordTimer.current);\r\n    }\r\n    setLoginShowPassword(!loginShowPassword);\r\n    loginShowPasswordTimer.current = setTimeout(() => {\r\n      setLoginShowPassword(false);\r\n    }, 2000);\r\n  }, [loginShowPassword]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW  SIGNUP PASSWORD FOR A WHILE\r\n  const [signupShowPassword, setSignupShowPassword] = useState<boolean>(false);\r\n  const signupShowPasswordTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const ShowSignupPasswordForaWhile = useCallback(() => {\r\n    if (signupShowPasswordTimer.current) {\r\n      clearTimeout(signupShowPasswordTimer.current);\r\n    }\r\n    setSignupShowPassword(!signupShowPassword);\r\n    signupShowPasswordTimer.current = setTimeout(() => {\r\n      setSignupShowPassword(false);\r\n    }, 2000);\r\n  }, [signupShowPassword]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// LOGOUT\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\r\n  const ModalBackgroundRef = useRef<HTMLInputElement>(null);\r\n  const onBackgroundFocus = (e: any): void => {\r\n    if (ModalBackgroundRef.current === e.target) {\r\n      CloseModalForm(0);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// ESCAPE KEY CLOSE MODAL\r\n  const escapePress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Escape\" && showModalForm) {\r\n        CloseModalForm(0);\r\n      }\r\n    },\r\n    [showModalForm, CloseModalForm]\r\n  );\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escapePress);\r\n    return () => document.removeEventListener(\"keydown\", escapePress);\r\n  }, [escapePress]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// RANDOMISE IMAGE\r\n  const [showimage, setShowimage] = useState<string>(\" \");\r\n  useEffect(() => {\r\n    let imagecontrol: number[] = [1, 2, 3, 4, 5, 6];\r\n    var result = null;\r\n    var randomimage =\r\n      imagecontrol[Math.floor(Math.random() * imagecontrol.length)];\r\n    const img = new Image(); ///new image instance\r\n    if (randomimage === 1) {\r\n      result = image1;\r\n    } else if (randomimage === 2) {\r\n      result = image2;\r\n    } else if (randomimage === 3) {\r\n      result = image3;\r\n    } else if (randomimage === 4) {\r\n      result = image4;\r\n    } else if (randomimage === 5) {\r\n      result = image5;\r\n    } else {\r\n      result = image6;\r\n    }\r\n    img.src = result; //src forces a download\r\n    setShowimage(result);\r\n  }, [showimage]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET IMAGE WIDTH ,HEIGHT AND SET WIDE IMAGE\r\n  const ModalSlidingImageRef = useRef<HTMLImageElement>(null);\r\n  const [imageHeightoverflow, setImageHeightoverflow] =\r\n    useState<boolean>(false);\r\n  const [wideImage, setWideImage] = useState<boolean>(false);\r\n\r\n  const onimageload = useCallback(\r\n    (e: any) => {\r\n      if (ModalSlidingImageRef && ModalSlidingImageRef.current) {\r\n        const imageHeight = ModalSlidingImageRef.current.clientHeight;\r\n        const imageWidth = ModalSlidingImageRef.current.clientWidth;\r\n\r\n        if (imageHeight + (imageWidth / imageHeight) * 3 > screenHeight) {\r\n          setImageHeightoverflow(true);\r\n        }\r\n\r\n        if (imageWidth > imageHeight + (imageWidth / imageHeight) * 100) {\r\n          setWideImage(true);\r\n        }\r\n      }\r\n    },\r\n    [imageHeightoverflow, wideImage, screenHeight]\r\n  );\r\n\r\n  const logout = () => {\r\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/logout`, {\r\n      withCredentials: true,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.message === \"cookie deleted\") {\r\n          alert(\"logout  complete\");\r\n        } else if (response.data.message === \"cookie null\") {\r\n          alert(\"logged out  already\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"logout fail\");\r\n      });\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// DYNAMIC MODAL LAYOUT VARIABLES\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// DYNAMIC MODAL LAYOUT VARIABLES\r\n  const wideImageControlTrue: string = \"75vw\";\r\n  const wideImageControlfalse: string = \"70vw\";\r\n  const zoomImageControl: string = \"100vw\";\r\n  const GridMiniAwide: IGrid = 8;\r\n  const GridMiniBwide: IGrid = 4;\r\n  const GridMiniAlong: IGrid = 7;\r\n  const GridMiniBlong: IGrid = 5;\r\n  const GridZoomAwide: IGrid = 8;\r\n  const GridZoomBwide: IGrid = 4;\r\n  const GridZoomAlong: IGrid = 6;\r\n  const GridZoomBlong: IGrid = 6;\r\n\r\n  let GridHolderA: IGrid = 7;\r\n  let GridHolderB: IGrid = 5;\r\n\r\n  let GridxA: IGrid = 7;\r\n  let GridxB: IGrid = 5;\r\n\r\n  let GridyA: IGrid = 7;\r\n  let GridyB: IGrid = 5;\r\n\r\n  let wideImageControl: string = \"70vw\";\r\n  let imageReal: string = \"75vw\";\r\n\r\n  let borderGrid: string = \"11px\";\r\n  var WidthHolder: string = \"82%\";\r\n\r\n  var opacitySlidingModalImage = \"0\";\r\n  var zIndexModalImageSmall = 10;\r\n  var zIndexModalImageZoom = 0;\r\n  var opacityFixedModalImage = \"1\";\r\n\r\n  var slidingImageWidth = \"50%\";\r\n\r\n  if (zoomedModal) {\r\n    if (imageHeightoverflow) {\r\n      opacitySlidingModalImage = \"1\";\r\n      zIndexModalImageSmall = 0;\r\n      zIndexModalImageZoom = 10;\r\n      opacityFixedModalImage = \"0\";\r\n    }\r\n\r\n    borderGrid = \"0px\";\r\n\r\n    if (wideImage) {\r\n      slidingImageWidth = \"66%\";\r\n      WidthHolder = \"76%\";\r\n      wideImageControl = wideImageControlTrue;\r\n      GridxA = GridZoomAwide;\r\n      GridxB = GridZoomBwide;\r\n    } else {\r\n      slidingImageWidth = \"50%\";\r\n      WidthHolder = \"88%\";\r\n      wideImageControl = wideImageControlfalse;\r\n      GridxA = GridZoomAlong;\r\n      GridxB = GridZoomBlong;\r\n    }\r\n    imageReal = zoomImageControl;\r\n    GridHolderA = GridxA;\r\n    GridHolderB = GridxB;\r\n  } else {\r\n    WidthHolder = \"82%\";\r\n    borderGrid = \"11px\";\r\n\r\n    if (wideImage) {\r\n      wideImageControl = wideImageControlTrue;\r\n      GridyA = GridMiniAwide;\r\n      GridyB = GridMiniBwide;\r\n    } else {\r\n      wideImageControl = wideImageControlfalse;\r\n      GridyA = GridMiniAlong;\r\n      GridyB = GridMiniBlong;\r\n    }\r\n    imageReal = wideImageControl;\r\n    GridHolderA = GridyA;\r\n    GridHolderB = GridyB;\r\n  }\r\n  ///\r\n  ///\r\n  ///\r\n  /// DYNAMIC MODAL LAYOUT VARIABLES\r\n  /// DYNAMIC MODAL LAYOUT VARIABLES\r\n\r\n  ///\r\n  ///\r\n  ///FADE SLIDING IMAGE\r\n  var fadeSlidingimage = \"fadermodal-imageslider\";\r\n  if (opacitySlidingModalImage === \"0\") {\r\n    fadeSlidingimage = \"\";\r\n  } else {\r\n    fadeSlidingimage = \"fadermodal-imageslider-zoomload\";\r\n    setTimeout(function () {\r\n      fadeSlidingimage = \"fadermodal-imageslider\";\r\n    }, 1600);\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///SUPERSTARZ ICON SELECT\r\n  var SuperIcon = \"\";\r\n  darkmode\r\n    ? (SuperIcon = SuperstarzIconDark)\r\n    : (SuperIcon = SuperstarzIconLight);\r\n\r\n  let usernameErrorData = null;\r\n  let usernameErrorDisplay = 0;\r\n\r\n  let emailErrorData = null;\r\n  let emailErrorDisplay = 0;\r\n\r\n  let passwordErrorData = null;\r\n  let passwordErrorDisplay = 0;\r\n\r\n  switch (errorsSignupValues.inputedUsername) {\r\n    case 1:\r\n      usernameErrorData =\r\n        \"usernames can only use letters, numbers, underscores and periods \";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 2:\r\n      usernameErrorData = \"username is taken\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 3:\r\n      usernameErrorData = \"username is available\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n    case 4:\r\n      usernameErrorData = \"username  required\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      usernameErrorData = null;\r\n      usernameErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  switch (errorsSignupValues.inputedPassword) {\r\n    case 1:\r\n      passwordErrorData = \"password must be at Least 8 characters\";\r\n      passwordErrorDisplay = 1;\r\n      break;\r\n\r\n    case 2:\r\n      passwordErrorData = \"checking\";\r\n      passwordErrorDisplay = 1;\r\n\r\n      break;\r\n    case 4:\r\n      passwordErrorData = \" password  required \";\r\n      passwordErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      passwordErrorData = null;\r\n      passwordErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  switch (errorsSignupValues.inputedEmail) {\r\n    case 1:\r\n      emailErrorData = \"checking\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 2:\r\n      emailErrorData = \"email address is not valid\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 3:\r\n      emailErrorData = \"email is restricted to certain characters\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    case 4:\r\n      emailErrorData = \"email required\";\r\n      emailErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      emailErrorData = null;\r\n      emailErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///ALL VARIABLES ,ERROR VARIABLES,CONSTANT AND  STATES\r\n\r\n  return (\r\n    <>\r\n      <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\r\n      {showModalForm ? (\r\n        matchPc ? (\r\n          /*PC  PC  PC  PC  PC  PC  PC  PC  PPC  PC  PC  PC  PC  PC  PC  PC  PC PC  PC  PC  PC  PC  PC  PC  PC  PC PC  PC  PC  PC  PC  PC  PC  PC  PC C */ <DialogContent\r\n            style={{\r\n              paddingLeft: \"0px\",\r\n              height: \"100%\",\r\n              zIndex: 100,\r\n            }}\r\n          >\r\n            <DialogContent\r\n              className={`${fadeSlidingimage} modalImageCustomSlider FormDialog-containerx dontallowhighlighting`}\r\n              onClick={onBackgroundFocus}\r\n              style={{\r\n                overflow: \"auto\",\r\n                cursor: \"pointer\",\r\n                height: \"101%\",\r\n                padding: \"0px\",\r\n                width: slidingImageWidth,\r\n                opacity: opacitySlidingModalImage,\r\n                zIndex: zIndexModalImageZoom,\r\n              }}\r\n              ref={ModalBackgroundRef}\r\n            >\r\n              {\" \"}\r\n              <Scrollbars\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                }}\r\n              >\r\n                <animated.div style={modalanimationTwo}>\r\n                  <img\r\n                    ref={ModalSlidingImageRef}\r\n                    onClick={zoomlogmodal}\r\n                    onLoad={onimageload}\r\n                    src={showimage}\r\n                    className=\"modalImageStylex\"\r\n                    style={{\r\n                      opacity: opacitySlidingModalImage,\r\n                    }}\r\n                    alt=\"Logzoom\"\r\n                  />\r\n                </animated.div>\r\n              </Scrollbars>\r\n            </DialogContent>\r\n\r\n            <DialogContent\r\n              className=\"fadermodal FormDialog-container dontallowhighlighting\"\r\n              onClick={onBackgroundFocus}\r\n              style={{ overflow: \"hidden\", cursor: \"pointer\" }}\r\n              ref={ModalBackgroundRef}\r\n            >\r\n              <ServerError\r\n                device=\"pc\"\r\n                serverEmojiplain={serverEmojiplain}\r\n                setServerErrorData={setServerErrorData}\r\n                serverErrorDisplay={serverErrorDisplay}\r\n                serverErrorData={serverErrorData}\r\n                darkmode={darkmode}\r\n              />\r\n              <animated.div style={modalanimation}>\r\n                <Paper\r\n                  style={{\r\n                    backgroundImage: PaperStyle,\r\n                    borderRadius: borderGrid,\r\n                    cursor: \"default\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    className=\"containerStyle\"\r\n                    style={{\r\n                      width: imageReal,\r\n                      borderRadius: borderGrid,\r\n                    }}\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      xs={GridHolderA}\r\n                      style={{ zIndex: zIndexModalImageSmall }}\r\n                    >\r\n                      <img\r\n                        onClick={iconclicked}\r\n                        className={\r\n                          zoomedModal\r\n                            ? \"hide-logo\"\r\n                            : \"log-logo  make-small-icons-clickable-neutralB\"\r\n                        }\r\n                        src={SuperIcon}\r\n                        alt=\"SuperstarZ logosmallmode\"\r\n                      />\r\n\r\n                      <img\r\n                        onClick={zoomlogmodal}\r\n                        src={showimage}\r\n                        className=\"modalImageStyle\"\r\n                        style={{\r\n                          opacity: opacityFixedModalImage,\r\n                          borderTopLeftRadius: borderGrid,\r\n                          borderBottomLeftRadius: borderGrid,\r\n                        }}\r\n                        alt=\"Logsmall\"\r\n                      />\r\n                    </Grid>\r\n\r\n                    {formtype ? (\r\n                      <Grid item xs={GridHolderB}>\r\n                        <Grid xs={12} item className=\"formholder\">\r\n                          <Grid\r\n                            item\r\n                            xs={12}\r\n                            className=\"center-content-vertically\"\r\n                            style={{ marginTop: \"-5px\" }}\r\n                          >\r\n                            <img\r\n                              onClick={iconclicked}\r\n                              className={\r\n                                zoomedModal\r\n                                  ? \"zoom-login-logo  make-small-icons-clickable-neutral\"\r\n                                  : \"hide-logo \"\r\n                              }\r\n                              src={SuperIcon}\r\n                              alt=\"SuperstarZ logo\"\r\n                            />\r\n\r\n                            <button\r\n                              onClick={logout}\r\n                              style={{\r\n                                cursor: \"pointer\",\r\n                                opacity: 0.1,\r\n                                position: \"fixed\",\r\n                                top: \"0.5em\",\r\n                                borderRadius: \"50%\",\r\n                              }}\r\n                            >\r\n                              {\" \"}\r\n                              ....\r\n                            </button>\r\n                            <ModalFormLoginError\r\n                              mobileTextFieldFocus={mobileTextFieldFocus}\r\n                              device=\"pc\"\r\n                              type={true}\r\n                              ErrorDisplay={errorsLoginValues.inputedUsername}\r\n                              darkmode={darkmode}\r\n                              WidthHolder={WidthHolder}\r\n                            />\r\n\r\n                            <TextFieldLogin\r\n                              setmobileTextFieldFocus={setmobileTextFieldFocus}\r\n                              mobileTextFieldFocus={mobileTextFieldFocus}\r\n                              updateLoginvalues={updateLoginvalues}\r\n                              rawLoginValues={rawLoginValues}\r\n                              ShowLoginPasswordForaWhile={\r\n                                ShowLoginPasswordForaWhile\r\n                              }\r\n                              loginShowPassword={loginShowPassword}\r\n                              size=\"medium\"\r\n                              passwordType={false}\r\n                              withHolder={WidthHolder}\r\n                            />\r\n                            <TextFieldLogin\r\n                              setmobileTextFieldFocus={setmobileTextFieldFocus}\r\n                              mobileTextFieldFocus={mobileTextFieldFocus}\r\n                              updateLoginvalues={updateLoginvalues}\r\n                              rawLoginValues={rawLoginValues}\r\n                              ShowLoginPasswordForaWhile={\r\n                                ShowLoginPasswordForaWhile\r\n                              }\r\n                              loginShowPassword={loginShowPassword}\r\n                              size=\"medium\"\r\n                              passwordType={true}\r\n                              withHolder={WidthHolder}\r\n                            />\r\n                            <ModalFormLoginError\r\n                              mobileTextFieldFocus={mobileTextFieldFocus}\r\n                              device=\"pc\"\r\n                              type={false}\r\n                              ErrorDisplay={errorsLoginValues.inputedPassword}\r\n                              darkmode={darkmode}\r\n                              WidthHolder={WidthHolder}\r\n                            />\r\n\r\n                            <Grid\r\n                              container\r\n                              style={{ marginTop: \"70px\", zIndex: 300 }}\r\n                            >\r\n                              <Grid item xs={4}></Grid>\r\n                              <Grid\r\n                                item\r\n                                className=\"buttonpad buttonshake\"\r\n                                xs={4}\r\n                              >\r\n                                <Button\r\n                                  onClick={logmein}\r\n                                  style={loginstyle}\r\n                                  fullWidth={true}\r\n                                  variant=\"outlined\"\r\n                                  size=\"large\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Log In\r\n                                </Button>\r\n                              </Grid>{\" \"}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    ) : (\r\n                      <Grid xs={GridHolderB} item className=\"formholder\">\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          className=\"center-content-vertically\"\r\n                          style={{ padding: \"0px\" }}\r\n                        >\r\n                          <img\r\n                            onClick={iconclicked}\r\n                            className={\r\n                              zoomedModal\r\n                                ? \"zoom-signup-logo make-small-icons-clickable-neutral\"\r\n                                : \"hide-logo make-small-icons-clickable-neutral \"\r\n                            }\r\n                            src={SuperIcon}\r\n                            alt=\"SuperstarZ logo\"\r\n                          />\r\n                          <ModalFormSignupError\r\n                            device=\"pc\"\r\n                            ErrorType={0}\r\n                            textField=\"email\"\r\n                            errorFormChecking={errorFormChecking.inputedEmail}\r\n                            WidthHolder={WidthHolder}\r\n                            darkmode={darkmode}\r\n                            type={true}\r\n                            cantPassBadEmail={cantPassBadEmail}\r\n                            ErrorDisplay={emailErrorDisplay}\r\n                            ErrorData={emailErrorData}\r\n                          />\r\n\r\n                          <TextFieldSignup\r\n                            updateSignvalues={updateSignvalues}\r\n                            rawSignupValues={rawSignupValues}\r\n                            ShowSignupPasswordForaWhile={\r\n                              ShowSignupPasswordForaWhile\r\n                            }\r\n                            signupShowPassword={signupShowPassword}\r\n                            size=\"medium\"\r\n                            emailType={true}\r\n                            passwordType={false}\r\n                            withHolder={WidthHolder}\r\n                          />\r\n\r\n                          <ModalFormSignupError\r\n                            device=\"pc\"\r\n                            ErrorType={errorsSignupValues.inputedUsername}\r\n                            textField=\"username\"\r\n                            errorFormChecking={\r\n                              errorFormChecking.inputedUsername\r\n                            }\r\n                            WidthHolder={WidthHolder}\r\n                            darkmode={darkmode}\r\n                            type={true}\r\n                            cantPassBadEmail={cantPassBadEmail}\r\n                            ErrorDisplay={usernameErrorDisplay}\r\n                            ErrorData={usernameErrorData}\r\n                          />\r\n\r\n                          <TextFieldSignup\r\n                            updateSignvalues={updateSignvalues}\r\n                            rawSignupValues={rawSignupValues}\r\n                            ShowSignupPasswordForaWhile={\r\n                              ShowSignupPasswordForaWhile\r\n                            }\r\n                            signupShowPassword={signupShowPassword}\r\n                            size=\"medium\"\r\n                            emailType={false}\r\n                            passwordType={false}\r\n                            withHolder={WidthHolder}\r\n                          />\r\n\r\n                          <TextFieldSignup\r\n                            updateSignvalues={updateSignvalues}\r\n                            rawSignupValues={rawSignupValues}\r\n                            ShowSignupPasswordForaWhile={\r\n                              ShowSignupPasswordForaWhile\r\n                            }\r\n                            signupShowPassword={signupShowPassword}\r\n                            size=\"medium\"\r\n                            emailType={false}\r\n                            passwordType={true}\r\n                            withHolder={WidthHolder}\r\n                          />\r\n                          <ModalFormSignupError\r\n                            device=\"pc\"\r\n                            ErrorType={0}\r\n                            textField=\"password\"\r\n                            errorFormChecking={\r\n                              errorFormChecking.inputedPassword\r\n                            }\r\n                            darkmode={darkmode}\r\n                            WidthHolder={WidthHolder}\r\n                            type={false}\r\n                            cantPassBadEmail={cantPassBadEmail}\r\n                            ErrorDisplay={passwordErrorDisplay}\r\n                            ErrorData={passwordErrorData}\r\n                          />\r\n\r\n                          <Grid container className=\"modal-hold-signup\">\r\n                            <Grid item xs={4}></Grid>\r\n                            <Grid item className=\"buttonpad buttonshake\" xs={4}>\r\n                              <Button\r\n                                style={signupstyle}\r\n                                onClick={signmeup}\r\n                                fullWidth={true}\r\n                                variant=\"contained\"\r\n                                size=\"large\"\r\n                                color=\"secondary\"\r\n                              >\r\n                                Sign Up\r\n                              </Button>\r\n                            </Grid>{\" \"}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    )}\r\n                  </Grid>\r\n                </Paper>\r\n              </animated.div>\r\n            </DialogContent>\r\n          </DialogContent> /*PC  PC  PC PC  PC  PC  PC  PC  PC  PC  PC  PC PC  PC  PC  PC  PC  PC  PC  PC  PC PC  PC  PC  PC  PC  PC  PC  PC  PC  PC  PC  PC  PC  PC  PC */\r\n        ) : (\r\n          /*MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\r\n          <DialogContent\r\n            className=\"fadermodal FormDialog-container-mobile dontallowhighlighting\"\r\n            ref={imagescrollRef}\r\n            style={{\r\n              overflow: \"auto\",\r\n              cursor: \"pointer\",\r\n              padding: \"0px\",\r\n              zIndex: 100,\r\n              backgroundImage: PaperStyle,\r\n            }}\r\n          >\r\n            <ServerError\r\n              device=\"mobile\"\r\n              serverEmojiplain={serverEmojiplain}\r\n              setServerErrorData={setServerErrorData}\r\n              serverErrorDisplay={serverErrorDisplay}\r\n              serverErrorData={serverErrorData}\r\n              darkmode={darkmode}\r\n            />\r\n            <animated.div style={modalanimation}>\r\n              <Paper\r\n                style={{\r\n                  cursor: \"default\",\r\n                  backgroundColor: \"rgba(0,0,0,0.0)\",\r\n                }}\r\n              >\r\n                <Grid container>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    className=\"yyy\"\r\n                    style={{\r\n                      marginTop: \"0.5px\",\r\n                      height: \"auto\",\r\n                    }}\r\n                  >\r\n                    <animated.img\r\n                      onClick={clickMobileZoom}\r\n                      onLoad={mobileImageOnLoad}\r\n                      src={showimage}\r\n                      className=\"modalMobileImageStyle slow-Div-Change\"\r\n                      alt=\"SuperstarZ\"\r\n                      style={mobileLogmodalanimation}\r\n                    />\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    className={mobileZoom ? \"zoomMobile\" : \"smallMobile\"}\r\n                  >\r\n                    {\" \"}\r\n                    <Paper\r\n                      onScroll={slide}\r\n                      ref={contentScrollRef}\r\n                      style={{\r\n                        overflow: \"auto\",\r\n                        backgroundColor: \"rgba(0,0,0,0.0)\",\r\n                        cursor: \"default\",\r\n                        height: \"95vh\",\r\n                        borderRadius: \"0px\",\r\n                        marginTop: \"-1.9px\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <img\r\n                        onClick={iconclicked}\r\n                        className={\r\n                          mobileZoom\r\n                            ? `${MobileTabZoom}  make-small-icons-clickable-neutralB`\r\n                            : `${MobileTab}  make-small-icons-clickable-neutralB`\r\n                        }\r\n                        src={SuperIcon}\r\n                        alt=\"Express Yourself\"\r\n                      />\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        className=\"mobileTextfield-backplate FormDialog-container-mobile dontallowhighlighting\"\r\n                        style={{\r\n                          zIndex: textfieldFocusIndex,\r\n                          display: textfieldFocusDisplay,\r\n                        }}\r\n                      ></Grid>\r\n                      <Grid item xs={12} style={{ height: \"6vh\" }}></Grid>\r\n                      <Grid xs={12} item className={formHolder}>\r\n                        {formtype ? (\r\n                          <Grid item xs={12} className=\"\">\r\n                            <ModalFormLoginError\r\n                              type={true}\r\n                              device={tabletMobile}\r\n                              ErrorDisplay={errorsLoginValues.inputedUsername}\r\n                              darkmode={darkmode}\r\n                              WidthHolder={WidthHolder}\r\n                              mobileTextFieldFocus={mobileTextFieldFocus}\r\n                            />\r\n\r\n                            <TextFieldLogin\r\n                              setmobileTextFieldFocus={setmobileTextFieldFocus}\r\n                              mobileTextFieldFocus={mobileTextFieldFocus}\r\n                              updateLoginvalues={updateLoginvalues}\r\n                              rawLoginValues={rawLoginValues}\r\n                              ShowLoginPasswordForaWhile={\r\n                                ShowLoginPasswordForaWhile\r\n                              }\r\n                              loginShowPassword={loginShowPassword}\r\n                              size={fieldSize}\r\n                              passwordType={false}\r\n                              withHolder={WidthHolder}\r\n                            />\r\n                            <TextFieldLogin\r\n                              setmobileTextFieldFocus={setmobileTextFieldFocus}\r\n                              mobileTextFieldFocus={mobileTextFieldFocus}\r\n                              updateLoginvalues={updateLoginvalues}\r\n                              rawLoginValues={rawLoginValues}\r\n                              ShowLoginPasswordForaWhile={\r\n                                ShowLoginPasswordForaWhile\r\n                              }\r\n                              loginShowPassword={loginShowPassword}\r\n                              size={fieldSize}\r\n                              passwordType={true}\r\n                              withHolder={WidthHolder}\r\n                            />\r\n                            <ModalFormLoginError\r\n                              type={false}\r\n                              ErrorDisplay={errorsLoginValues.inputedPassword}\r\n                              device={tabletMobile}\r\n                              darkmode={darkmode}\r\n                              WidthHolder={WidthHolder}\r\n                              mobileTextFieldFocus={mobileTextFieldFocus}\r\n                            />\r\n                            <Grid container className=\"modal-hold-login\">\r\n                              <Grid item xs={4} sm={5}></Grid>\r\n                              <Grid\r\n                                item\r\n                                className=\"buttonpad buttonshake\"\r\n                                xs={4}\r\n                                sm={2}\r\n                              >\r\n                                <Button\r\n                                  onClick={logmein}\r\n                                  style={loginstyle}\r\n                                  fullWidth={true}\r\n                                  variant=\"outlined\"\r\n                                  size=\"large\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Log In\r\n                                </Button>\r\n                              </Grid>{\" \"}\r\n                            </Grid>\r\n                          </Grid>\r\n                        ) : (\r\n                          <Grid\r\n                            item\r\n                            xs={12}\r\n                            className=\"\"\r\n                            style={{ marginTop: \"-1.5px\" }}\r\n                          >\r\n                            <ModalFormSignupError\r\n                              device={tabletMobile}\r\n                              ErrorType={0}\r\n                              textField=\"email\"\r\n                              errorFormChecking={errorFormChecking.inputedEmail}\r\n                              WidthHolder={WidthHolder}\r\n                              darkmode={darkmode}\r\n                              type={true}\r\n                              cantPassBadEmail={cantPassBadEmail}\r\n                              ErrorDisplay={emailErrorDisplay}\r\n                              ErrorData={emailErrorData}\r\n                            />\r\n\r\n                            <TextFieldSignup\r\n                              updateSignvalues={updateSignvalues}\r\n                              rawSignupValues={rawSignupValues}\r\n                              ShowSignupPasswordForaWhile={\r\n                                ShowSignupPasswordForaWhile\r\n                              }\r\n                              signupShowPassword={signupShowPassword}\r\n                              size={fieldSize}\r\n                              emailType={true}\r\n                              passwordType={false}\r\n                              withHolder={WidthHolder}\r\n                            />\r\n                            <ModalFormSignupError\r\n                              device={tabletMobile}\r\n                              ErrorType={errorsSignupValues.inputedUsername}\r\n                              textField=\"username\"\r\n                              errorFormChecking={\r\n                                errorFormChecking.inputedUsername\r\n                              }\r\n                              WidthHolder={WidthHolder}\r\n                              darkmode={darkmode}\r\n                              type={true}\r\n                              cantPassBadEmail={cantPassBadEmail}\r\n                              ErrorDisplay={usernameErrorDisplay}\r\n                              ErrorData={usernameErrorData}\r\n                            />\r\n                            <TextFieldSignup\r\n                              updateSignvalues={updateSignvalues}\r\n                              rawSignupValues={rawSignupValues}\r\n                              ShowSignupPasswordForaWhile={\r\n                                ShowSignupPasswordForaWhile\r\n                              }\r\n                              signupShowPassword={signupShowPassword}\r\n                              size={fieldSize}\r\n                              emailType={false}\r\n                              passwordType={false}\r\n                              withHolder={WidthHolder}\r\n                            />\r\n                            <TextFieldSignup\r\n                              updateSignvalues={updateSignvalues}\r\n                              rawSignupValues={rawSignupValues}\r\n                              ShowSignupPasswordForaWhile={\r\n                                ShowSignupPasswordForaWhile\r\n                              }\r\n                              signupShowPassword={signupShowPassword}\r\n                              size={fieldSize}\r\n                              emailType={false}\r\n                              passwordType={true}\r\n                              withHolder={WidthHolder}\r\n                            />\r\n                            <ModalFormSignupError\r\n                              device={tabletMobile}\r\n                              ErrorType={0}\r\n                              textField=\"password\"\r\n                              errorFormChecking={\r\n                                errorFormChecking.inputedPassword\r\n                              }\r\n                              darkmode={darkmode}\r\n                              WidthHolder={WidthHolder}\r\n                              type={false}\r\n                              cantPassBadEmail={cantPassBadEmail}\r\n                              ErrorDisplay={passwordErrorDisplay}\r\n                              ErrorData={passwordErrorData}\r\n                            />\r\n                            <Grid container className=\"modal-hold-signup\">\r\n                              <Grid item xs={4} sm={5}></Grid>\r\n                              <Grid\r\n                                item\r\n                                className=\"buttonpad buttonshake\"\r\n                                xs={4}\r\n                                sm={2}\r\n                              >\r\n                                <Button\r\n                                  style={signupstyle}\r\n                                  onClick={signmeup}\r\n                                  fullWidth={true}\r\n                                  variant=\"contained\"\r\n                                  size=\"large\"\r\n                                  color=\"secondary\"\r\n                                >\r\n                                  Sign Up\r\n                                </Button>\r\n                              </Grid>{\" \"}\r\n                            </Grid>\r\n                          </Grid>\r\n                        )}\r\n                      </Grid>\r\n                      <Grid item xs={12} style={{ height: \"60vh\" }}></Grid>{\" \"}\r\n                    </Paper>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </animated.div>\r\n          </DialogContent>\r\n        ) /*MOBILE  MOBILE  MOBILE  MOBILE MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE MOBILE  MOBILE  MOBILE*/\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const ModalLog = React.memo(ModalLogx);\r\n"]},"metadata":{},"sourceType":"module"}