{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\appfolder\\\\Option.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport { Grid, Switch, Box } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar toggleDarkMode = \"\";\nexport default function Option({\n  darkmode,\n  setDarkmode,\n  push,\n  align,\n  optionplusfontsize\n}) {\n  _s();\n\n  useEffect(() => {\n    let themelocaldata = JSON.parse(localStorage.getItem(\"darkmode\"));\n\n    if (themelocaldata !== null) {\n      setDarkmode(themelocaldata);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    xs: 12,\n    className: \"theme-more-contain\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      component: Box,\n      display: {\n        xs: \"block\",\n        sm: \"block\"\n      },\n      sm: 10,\n      xs: 7\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 3,\n      className: \"dontallowselect\",\n      sm: 1,\n      style: align,\n      children: /*#__PURE__*/_jsxDEV(AddRoundedIcon, {\n        className: darkmode ? \"make-small-icons-clickable-dark  dontallowselect  \" : \"make-small-icons-clickable-light  dontallowselect  \",\n        fontSize: \"large\",\n        style: {\n          fontSize: optionplusfontsize,\n          marginLeft: push\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      component: Box,\n      display: {\n        xs: \"none\",\n        sm: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2,\n      sm: 1,\n      className: \"switchopacity\",\n      style: {\n        textAlign: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: darkmode,\n        onChange: () => {\n          darkmode ? toggleDarkMode = \"false\" : toggleDarkMode = \"true\";\n          setDarkmode(!darkmode);\n          localStorage.setItem(\"darkmode\", toggleDarkMode);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Option, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Option;\n\nvar _c;\n\n$RefreshReg$(_c, \"Option\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/appfolder/Option.tsx"],"names":["React","useEffect","AddRoundedIcon","Grid","Switch","Box","toggleDarkMode","Option","darkmode","setDarkmode","push","align","optionplusfontsize","themelocaldata","JSON","parse","localStorage","getItem","xs","sm","fontSize","marginLeft","textAlign","setItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,QAAkC,mBAAlC;;AAUA,IAAIC,cAAsB,GAAG,EAA7B;AAEA,eAAe,SAASC,MAAT,CAAgB;AAC7BC,EAAAA,QAD6B;AAE7BC,EAAAA,WAF6B;AAG7BC,EAAAA,IAH6B;AAI7BC,EAAAA,KAJ6B;AAK7BC,EAAAA;AAL6B,CAAhB,EAMU;AAAA;;AACvBX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAArB;;AACA,QAAIJ,cAAc,KAAK,IAAvB,EAA6B;AAC3BJ,MAAAA,WAAW,CAACI,cAAD,CAAX;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAOA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,EAAE,EAAE,EAApB;AAAwB,IAAA,SAAS,EAAC,oBAAlC;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,SAAS,EAAER,GAFb;AAGE,MAAA,OAAO,EAAE;AAAEa,QAAAA,EAAE,EAAE,OAAN;AAAeC,QAAAA,EAAE,EAAE;AAAnB,OAHX;AAIE,MAAA,EAAE,EAAE,EAJN;AAKE,MAAA,EAAE,EAAE;AALN;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,SAAS,EAAC,iBAA5B;AAA8C,MAAA,EAAE,EAAE,CAAlD;AAAqD,MAAA,KAAK,EAAER,KAA5D;AAAA,6BACE,QAAC,cAAD;AACE,QAAA,SAAS,EACPH,QAAQ,GACJ,oDADI,GAEJ,qDAJR;AAME,QAAA,QAAQ,EAAC,OANX;AAOE,QAAA,KAAK,EAAE;AAAEY,UAAAA,QAAQ,EAAER,kBAAZ;AAAgCS,UAAAA,UAAU,EAAEX;AAA5C;AAPT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF,eAqBE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,EAAEL,GAAtB;AAA2B,MAAA,OAAO,EAAE;AAAEa,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,EAAE,EAAE;AAAlB;AAApC;AAAA;AAAA;AAAA;AAAA,YArBF,eAuBE,QAAC,IAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,EAAE,EAAE,CAFN;AAGE,MAAA,EAAE,EAAE,CAHN;AAIE,MAAA,SAAS,EAAC,eAJZ;AAKE,MAAA,KAAK,EAAE;AAAEG,QAAAA,SAAS,EAAE;AAAb,OALT;AAAA,6BAOE,QAAC,MAAD;AACE,QAAA,OAAO,EAAEd,QADX;AAEE,QAAA,QAAQ,EAAE,MAAM;AACdA,UAAAA,QAAQ,GAAIF,cAAc,GAAG,OAArB,GAAiCA,cAAc,GAAG,MAA1D;AACAG,UAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAQ,UAAAA,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAiCjB,cAAjC;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD;;GAxDuBC,M;;KAAAA,M","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { Grid, Switch, Box } from \"@material-ui/core\";\r\nimport * as CSS from \"csstype\";\r\n\r\ninterface IOption {\r\n  darkmode: boolean;\r\n  setDarkmode: (darkmodex: boolean) => void;\r\n  push: string;\r\n  align: CSS.Properties;\r\n  optionplusfontsize: string;\r\n}\r\nvar toggleDarkMode: string = \"\";\r\n\r\nexport default function Option({\r\n  darkmode,\r\n  setDarkmode,\r\n  push,\r\n  align,\r\n  optionplusfontsize,\r\n}: IOption): JSX.Element {\r\n  useEffect(() => {\r\n    let themelocaldata = JSON.parse(localStorage.getItem(\"darkmode\")!);\r\n    if (themelocaldata !== null) {\r\n      setDarkmode(themelocaldata);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container xs={12} className=\"theme-more-contain\">\r\n      <Grid\r\n        item\r\n        component={Box}\r\n        display={{ xs: \"block\", sm: \"block\" }}\r\n        sm={10}\r\n        xs={7}\r\n      ></Grid>\r\n\r\n      <Grid item xs={3} className=\"dontallowselect\" sm={1} style={align}>\r\n        <AddRoundedIcon\r\n          className={\r\n            darkmode\r\n              ? \"make-small-icons-clickable-dark  dontallowselect  \"\r\n              : \"make-small-icons-clickable-light  dontallowselect  \"\r\n          }\r\n          fontSize=\"large\"\r\n          style={{ fontSize: optionplusfontsize, marginLeft: push }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item component={Box} display={{ xs: \"none\", sm: \"none\" }}></Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={2}\r\n        sm={1}\r\n        className=\"switchopacity\"\r\n        style={{ textAlign: \"right\" }}\r\n      >\r\n        <Switch\r\n          checked={darkmode}\r\n          onChange={() => {\r\n            darkmode ? (toggleDarkMode = \"false\") : (toggleDarkMode = \"true\");\r\n            setDarkmode(!darkmode);\r\n            localStorage.setItem(\"darkmode\", toggleDarkMode);\r\n          }}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}