{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\TaskbarCrop.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Masonry from \"@mui/lab/Masonry\";\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AspectRatioIcon from '@mui/icons-material/AspectRatio';\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport Cropper from \"react-easy-crop\";\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskbarCropx({\n  showModalUploadTask,\n  uploadClose,\n  setfinalimage,\n  finalImage,\n  setHidecropper,\n  hideCrop,\n  sethideCrop,\n  ratiox,\n  setratiox,\n  itemUploadRefThumb\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const canRef = useRef(null); ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const {\n    activatefilterImage,\n    activatecropImage,\n    selectedImage,\n    cropimage\n  } = useSelector(state => ({ ...state.GlobalNavuploadReducer\n  }));\n  const activatefilterImageReducer = activatefilterImage;\n  const activatecropImageReducer = activatecropImage;\n  const selectedImageReducer = selectedImage;\n  const cropimageReducer = cropimage;\n  const cropCanvasRef = useRef(null);\n  const cropCanvasRefx = useRef(null);\n  const navRef = useRef(null);\n  const IconRef = useRef(null);\n  const IconRef2 = useRef(null);\n  const [allowCropAllCanvas, setallowCropAllCanvas] = useState(true);\n  const [CropImageHolder, setCropImageHolder] = useState(null);\n  const [FinalCropImageHolder, setFinalCropImageHolder] = useState(null);\n  const [imageHeight, setimageHeight] = useState(0);\n  const [imageWidth, setimageWidth] = useState(0);\n  const [Box, setBox] = useState(false);\n  const [final, setFinal] = useState(false);\n  const [cropInitial, setcropInitial] = useState({\n    x: 0,\n    y: 0\n  });\n  const [cropInitialx, setcropInitialx] = useState({\n    x: 0,\n    y: 0\n  });\n  const [cropOffset, setcropOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [Drag, setDrag] = useState(false);\n  const [cropx, setcropx] = useState({\n    x: 0,\n    y: 0\n  });\n  const allowscrolltimer = useRef(null);\n  var extendxy = 3.3;\n  const [allowOverflow, setallowOverflow] = useState(false);\n  const [optionscropshow, setoptionscropshow] = useState(true);\n  const [optionscropshow2, setoptionscropshow2] = useState(true);\n  const [SaveCropData, setSaveCropData] = useState(false);\n  const [hide, sethide] = useState(true);\n  const [CropImage, setcropImage] = useState(null);\n  const [multiPost, setmultiPost] = useState(false);\n  const [showIcon] = useState(false);\n  const [prevImage, setprevimage] = useState([]);\n  const menuTimer5 = useRef(null);\n  const [NewCanH, setNewCanH] = useState(0);\n  const [NewCanW, setNewCanW] = useState(0);\n  const [crop, setCrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [crop2, setCrop2] = useState({\n    x: 0,\n    y: 0\n  });\n  const [crop3, setCrop3] = useState({\n    x: 0,\n    y: 0\n  });\n  const [zoom, setZoom] = useState(1);\n  const [count, setcount] = useState(0); ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype;\n  useEffect(() => {\n    setprevimage(selectedImageReducer);\n    setcropImage(selectedImageReducer[0]);\n    sethideCrop(false);\n    setRay([]);\n    setcount(0);\n    setfinalimage([]);\n    sethide(true);\n    setTimeout(() => {\n      sethide(false);\n    }, 1000);\n  }, [selectedImageReducer, showModalUploadTask]);\n  const [croppedImage, setCroppedImage] = useState(null);\n  const cropperRef = useRef(null);\n  const [ray, setRay] = useState([]);\n  const onCropComplete = useCallback((_, croppedAreaPixels) => {\n    const canvas = document.createElement('canvas');\n    const imageRef = document.createElement('img');\n    imageRef.src = CropImage;\n    const scaleX = imageRef.naturalWidth / imageRef.width;\n    const scaleY = imageRef.naturalHeight / imageRef.height;\n    canvas.width = croppedAreaPixels.width;\n    canvas.height = croppedAreaPixels.height;\n    const ctx = canvas.getContext('2d');\n\n    if (ctx) {\n      imageRef.onload = () => {\n        requestAnimationFrame(async () => {\n          try {\n            ctx.drawImage(imageRef, croppedAreaPixels.x * scaleX, croppedAreaPixels.y * scaleY, croppedAreaPixels.width * scaleX, croppedAreaPixels.height * scaleY, 0, 0, croppedAreaPixels.width, croppedAreaPixels.height);\n\n            if (count > 0 && SaveCropData) {\n              //alert(count)\n              const dataUrl = canvas.toDataURL('image/png');\n              const g = count - 1;\n\n              if (ray[g]) {//alert('kj')\n              } else {\n                const updatedRay = [...ray];\n                updatedRay[g] = dataUrl;\n                itemUploadRefThumb.current.push(dataUrl);\n\n                if (selectedImageReducer.length === count) {\n                  console.log(updatedRay);\n                  setfinalimage(updatedRay);\n                  setHidecropper(true);\n                  console.log(itemUploadRefThumb.current);\n                } else if (count === 1) {\n                  setRay(updatedRay);\n                  setTimeout(() => {\n                    setcount(2);\n                    setcropImage(selectedImageReducer[1]);\n                  }, 100);\n                } else {\n                  setRay(updatedRay);\n                  setTimeout(() => {\n                    setcount(3);\n                    setcropImage(selectedImageReducer[2]);\n                  }, 100);\n                }\n              }\n            }\n          } catch (error) {\n            //alert(error)\n            console.error('Error while cropping the image:', error);\n          }\n        });\n      };\n    }\n  }, [CropImage, count, SaveCropData, ray, itemUploadRefThumb]);\n  const [ratio, setratio] = useState(2);\n  const [ShowNumber, setShowNumber] = useState(false);\n  const add = useCallback(() => {\n    setratiox(ratiox + 1);\n    setShowNumber(true);\n\n    if (allowscrolltimer.current) {\n      clearTimeout(allowscrolltimer.current);\n    }\n\n    allowscrolltimer.current = setTimeout(() => {\n      setShowNumber(false);\n    }, 1000);\n    setratio(ratio + 0.5);\n\n    if (ratio >= 4) {\n      setratio(2);\n      setratiox(1);\n    }\n  }, [ratio, ratiox]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: \"dontallowhighlighting\",\n      container: true,\n      style: {\n        padding: \"0px\",\n        width: '100%',\n        height: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        className: \"zuperxyinfo\",\n        item: true,\n        xs: 12,\n        style: {\n          height: '0px',\n          fontFamily: ' Arial, Helvetica, sans- serif',\n          fontWeight: 'bold',\n          opacity: 0.96,\n          display: SaveCropData ? 'block' : 'none',\n          padding: \"0px\",\n          position: 'fixed',\n          top: '42vh',\n          zIndex: 200000000,\n          left: '47.5%'\n        },\n        children: /*#__PURE__*/_jsxDEV(CircleIcon, {\n          className: SaveCropData ? \"dontallowhighlighting  blinken zuperkingIcon\" : ' ',\n          style: {\n            fontSize: '5vw',\n            color: colorReducer,\n            position: 'absolute'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: \"zuperxyinfo\",\n        item: true,\n        xs: 12,\n        style: {\n          height: '0px',\n          display: ShowNumber ? 'block' : 'none',\n          fontFamily: ' Arial, Helvetica, sans- serif',\n          fontWeight: 'bold',\n          opacity: 0.65,\n          padding: \"0px\",\n          position: 'fixed',\n          top: '40vh',\n          fontSize: '15vh',\n          zIndex: 20000000,\n          left: '47.5%'\n        },\n        children: ratiox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        ref: navRef,\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\",\n          width: '94%',\n          height: multiPost ? \"80%\" : '100%',\n          position: 'fixed',\n          top: '-20000000000px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 17\n      }, this), croppedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: croppedImage,\n        alt: \"Cropped Image\",\n        style: {\n          position: 'fixed',\n          top: '20vh',\n          zIndex: 30000000,\n          width: '20%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\",\n          filter: hideCrop ? SaveCropData ? 'brightness(0.8) blur(8px)' : 'brightness(1) blur(0px)' : 'brightness(0.8) blur(8px)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TouchAppIcon, {\n          className: darkmodeReducer ? \" dontallowhighlighting zuperkingIcon \" : \" dontallowhighlighting zuperkingIcon  \",\n          style: {\n            fontSize: \"5vw\",\n            position: \"fixed\",\n            opacity: optionscropshow2 ? 0.73 : 0,\n            borderRadius: '70%',\n            color: colorReducer,\n            top: '2vh',\n            left: '2vw',\n            zIndex: 2000,\n            display: hideCrop ? 'block' : 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }, this), prevImage.length > 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Masonry, {\n            columns: 2,\n            spacing: 0,\n            style: {\n              padding: \"0px\",\n              overflow: 'hidden'\n            },\n            children: prevImage.map((picture, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                onClick: () => {\n                  ///setcount(index + 1);\n                  navRef.current.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"start\"\n                  });\n                  setcropImage(picture);\n                  sethideCrop(false);\n                },\n                style: {\n                  cursor: 'pointer'\n                },\n                src: picture,\n                alt: `Image ${index}`\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 33\n              }, this)\n            }, void 0, false))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 47\n          }, this)\n        }, void 0, false) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canRef,\n          style: {\n            padding: \"0px\",\n            display: \"none\",\n            position: \"fixed\",\n            top: \"-400%\",\n            zIndex: 0,\n            visibility: \"hidden\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: hideCrop ? 'none' : 'block',\n            visibility: SaveCropData ? 'hidden' : 'visible'\n          },\n          children: /*#__PURE__*/_jsxDEV(Cropper, {\n            ref: cropperRef,\n            image: CropImage,\n            crop: crop,\n            zoom: zoom,\n            aspect: ratio / 2.8,\n            onCropChange: setCrop,\n            onCropComplete: onCropComplete,\n            onZoomChange: setZoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }, this), selectedImageReducer.length > 1 ? /*#__PURE__*/_jsxDEV(CloseIcon, {\n        onClick: () => {\n          sethideCrop(true);\n        },\n        className: darkmodeReducer ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-lightab  dontallowhighlighting zuperkingIcon  \",\n        style: {\n          color: \"#ffffff\",\n          fontSize: \"3.8vw\",\n          position: \"absolute\",\n          opacity: optionscropshow2 ? 0.94 : 0,\n          borderRadius: '70%',\n          top: '3.8vh',\n          left: '2%',\n          right: \"\",\n          display: optionscropshow ? hideCrop ? 'none' : SaveCropData ? 'none' : hide ? 'none' : 'block' : 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 52\n      }, this) : null, /*#__PURE__*/_jsxDEV(AspectRatioIcon, {\n        onClick: () => {\n          add();\n        },\n        className: darkmodeReducer ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-lightab  dontallowhighlighting zuperkingIcon  \",\n        style: {\n          color: \"#ffffff\",\n          fontSize: \"3.8vw\",\n          position: \"absolute\",\n          opacity: optionscropshow2 ? 0.94 : 0,\n          borderRadius: '70%',\n          top: '3.8vh',\n          left: '48%',\n          right: \"\",\n          display: optionscropshow ? hideCrop ? 'none' : SaveCropData ? 'none' : hide ? 'none' : 'block' : 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DoneOutlineIcon, {\n        onClick: () => {\n          setcropImage([]);\n          setSaveCropData(true);\n          setTimeout(() => {\n            setcount(1);\n            setcropImage(selectedImageReducer[0]);\n          }, 100);\n        },\n        className: darkmodeReducer ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-lightab  dontallowhighlighting zuperkingIcon  \",\n        style: {\n          color: \"#ffffff\",\n          fontSize: \"3.8vw\",\n          position: \"absolute\",\n          opacity: optionscropshow2 ? 0.94 : 0,\n          borderRadius: '70%',\n          top: '3.8vh',\n          left: '94%',\n          right: \"\",\n          display: optionscropshow ? hideCrop ? 'none' : SaveCropData ? 'none' : hide ? 'none' : 'block' : 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(TaskbarCropx, \"uVnvcUxASobK1nBYTeUqDDCM/g8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = TaskbarCropx;\nexport const TaskbarCrop = /*#__PURE__*/React.memo(TaskbarCropx);\n_c2 = TaskbarCrop;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskbarCropx\");\n$RefreshReg$(_c2, \"TaskbarCrop\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/TaskbarCrop.tsx"],"names":["React","useRef","useEffect","useCallback","useState","Grid","useSelector","useDispatch","Masonry","DoneOutlineIcon","CloseIcon","AspectRatioIcon","CircleIcon","Cropper","TouchAppIcon","TaskbarCropx","showModalUploadTask","uploadClose","setfinalimage","finalImage","setHidecropper","hideCrop","sethideCrop","ratiox","setratiox","itemUploadRefThumb","dispatch","canRef","darkmode","state","GlobalReducer","darkmodeReducer","activatefilterImage","activatecropImage","selectedImage","cropimage","GlobalNavuploadReducer","activatefilterImageReducer","activatecropImageReducer","selectedImageReducer","cropimageReducer","cropCanvasRef","cropCanvasRefx","navRef","IconRef","IconRef2","allowCropAllCanvas","setallowCropAllCanvas","CropImageHolder","setCropImageHolder","FinalCropImageHolder","setFinalCropImageHolder","imageHeight","setimageHeight","imageWidth","setimageWidth","Box","setBox","final","setFinal","cropInitial","setcropInitial","x","y","cropInitialx","setcropInitialx","cropOffset","setcropOffset","Drag","setDrag","cropx","setcropx","allowscrolltimer","extendxy","allowOverflow","setallowOverflow","optionscropshow","setoptionscropshow","optionscropshow2","setoptionscropshow2","SaveCropData","setSaveCropData","hide","sethide","CropImage","setcropImage","multiPost","setmultiPost","showIcon","prevImage","setprevimage","menuTimer5","NewCanH","setNewCanH","NewCanW","setNewCanW","crop","setCrop","crop2","setCrop2","crop3","setCrop3","zoom","setZoom","count","setcount","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","setRay","setTimeout","croppedImage","setCroppedImage","cropperRef","ray","onCropComplete","_","croppedAreaPixels","canvas","document","createElement","imageRef","src","scaleX","naturalWidth","width","scaleY","naturalHeight","height","ctx","getContext","onload","requestAnimationFrame","drawImage","dataUrl","toDataURL","g","updatedRay","current","push","length","console","log","error","ratio","setratio","ShowNumber","setShowNumber","add","clearTimeout","padding","fontFamily","fontWeight","opacity","display","position","top","zIndex","left","fontSize","filter","borderRadius","overflow","map","picture","index","scrollIntoView","behavior","block","cursor","visibility","right","TaskbarCrop","memo"],"mappings":"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","sourcesContent":["import React, {\r\n    useRef,\r\n    useEffect,\r\n    useCallback,\r\n    useState,\r\n    useLayoutEffect,\r\n} from \"react\";\r\nimport ControlPointDuplicateIcon from \"@mui/icons-material/ControlPointDuplicate\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { UpdateUploadData } from \"../GlobalActions\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport AspectRatioIcon from '@mui/icons-material/AspectRatio';\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport CropIcon from '@mui/icons-material/Crop';\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nimport Cropper from \"react-easy-crop\";\r\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\r\nimport { Point, Area } from \"react-easy-crop/types\";\r\n\r\n\r\n\r\n\r\n\r\nfunction TaskbarCropx({\r\n    showModalUploadTask,\r\n    uploadClose,\r\n    setfinalimage,\r\n    finalImage,\r\n    setHidecropper,\r\n    hideCrop,\r\n    sethideCrop,\r\n    ratiox,\r\n    setratiox,\r\n    itemUploadRefThumb\r\n\r\n}: any): JSX.Element {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const canRef: any = useRef(null);\r\n\r\n    ///\r\n    ///\r\n    ///\r\n    /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n    interface RootStateGlobalReducer {\r\n        GlobalReducer: {\r\n            darkmode: boolean;\r\n            screenHeight: number;\r\n        };\r\n    }\r\n\r\n    ///\r\n    ///\r\n    ///\r\n    /// GET DARKMODE FROM REDUX STORE\r\n    const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n        ...state.GlobalReducer,\r\n    }));\r\n    const darkmodeReducer = darkmode;\r\n\r\n\r\n    const { activatefilterImage, activatecropImage, selectedImage, cropimage } = useSelector(\r\n        (state: RootStateOrAny) => ({\r\n            ...state.GlobalNavuploadReducer,\r\n        })\r\n    );\r\n    const activatefilterImageReducer = activatefilterImage;\r\n    const activatecropImageReducer = activatecropImage;\r\n    const selectedImageReducer = selectedImage;\r\n    const cropimageReducer = cropimage;\r\n\r\n\r\n\r\n    const cropCanvasRef: any = useRef(null);\r\n\r\n    const cropCanvasRefx: any = useRef(null);\r\n\r\n    const navRef: any = useRef(null);\r\n\r\n    const IconRef: any = useRef(null);\r\n\r\n    const IconRef2: any = useRef(null);\r\n\r\n    const [allowCropAllCanvas, setallowCropAllCanvas] = useState<boolean>(true);\r\n\r\n    const [CropImageHolder, setCropImageHolder] = useState<any>(null);\r\n\r\n    const [FinalCropImageHolder, setFinalCropImageHolder] = useState<any>(null);\r\n\r\n    const [imageHeight, setimageHeight] = useState(0);\r\n    const [imageWidth, setimageWidth] = useState(0);\r\n\r\n    const [Box, setBox] = useState<boolean>(false);\r\n\r\n    const [final, setFinal] = useState<boolean>(false);\r\n\r\n\r\n    const [cropInitial, setcropInitial] = useState<any>({ x: 0, y: 0 });\r\n\r\n    const [cropInitialx, setcropInitialx] = useState<any>({ x: 0, y: 0 });\r\n\r\n    const [cropOffset, setcropOffset] = useState<any>({ x: 0, y: 0 });\r\n\r\n    const [Drag, setDrag] = useState<boolean>(false);\r\n\r\n\r\n\r\n    const [cropx, setcropx] = useState<any>({ x: 0, y: 0 });\r\n\r\n    const allowscrolltimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n    var extendxy = 3.3;\r\n\r\n    const [allowOverflow, setallowOverflow] = useState<boolean>(false);\r\n\r\n    const [optionscropshow, setoptionscropshow] = useState<boolean>(true);\r\n\r\n    const [optionscropshow2, setoptionscropshow2] = useState<boolean>(true);\r\n\r\n    const [SaveCropData, setSaveCropData] = useState<boolean>(false);\r\n\r\n    const [hide, sethide] = useState<boolean>(true);\r\n\r\n    const [CropImage, setcropImage] = useState<any>(null);\r\n\r\n    const [multiPost, setmultiPost] = useState(false);\r\n\r\n    const [showIcon] = useState(false);\r\n\r\n    const [prevImage, setprevimage] = useState([]);\r\n\r\n    const menuTimer5 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n\r\n    const [NewCanH, setNewCanH] = useState(0);\r\n\r\n    const [NewCanW, setNewCanW] = useState(0);\r\n\r\n\r\n\r\n\r\n    const [crop, setCrop] = useState<Point>({ x: 0, y: 0 });\r\n    const [crop2, setCrop2] = useState<Point>({ x: 0, y: 0 });\r\n    const [crop3, setCrop3] = useState<Point>({ x: 0, y: 0 });\r\n\r\n    const [zoom, setZoom] = useState(1);\r\n\r\n    const [count, setcount] = useState(0);\r\n\r\n\r\n\r\n\r\n    ///\r\n    ///\r\n    /// GET COLOR FROM REDUX STORE\r\n    interface RootStateReducerColor {\r\n        GlobalReducerColor: {\r\n            color: string;\r\n            colordark: string;\r\n            colortype: number;\r\n        };\r\n    }\r\n    const { color, colordark, colortype } = useSelector(\r\n        (state: RootStateReducerColor) => ({\r\n            ...state.GlobalReducerColor,\r\n        })\r\n    );\r\n    const colorReducer = color;\r\n    const colorReducerdark = colordark;\r\n    const colortypeReducer = colortype;\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setprevimage(selectedImageReducer);\r\n        setcropImage(selectedImageReducer[0])\r\n        sethideCrop(false);\r\n        setRay([]);\r\n        setcount(0);\r\n        setfinalimage([])\r\n\r\n        sethide(true)\r\n        setTimeout(() => { sethide(false) }, 1000)\r\n\r\n    }, [selectedImageReducer, showModalUploadTask]);\r\n\r\n\r\n\r\n\r\n\r\n    const [croppedImage, setCroppedImage] = useState<string | null>(null);\r\n\r\n    const cropperRef = useRef<Cropper | any>(null);\r\n    const [ray, setRay] = useState([]);\r\n\r\n    const onCropComplete = useCallback((_, croppedAreaPixels) => {\r\n\r\n        const canvas = document.createElement('canvas');\r\n        const imageRef = document.createElement('img');\r\n        imageRef.src = CropImage;\r\n\r\n        const scaleX = imageRef.naturalWidth / imageRef.width;\r\n        const scaleY = imageRef.naturalHeight / imageRef.height;\r\n\r\n        canvas.width = croppedAreaPixels.width;\r\n        canvas.height = croppedAreaPixels.height;\r\n\r\n        const ctx = canvas.getContext('2d');\r\n\r\n\r\n        if (ctx) {\r\n\r\n            imageRef.onload = () => {\r\n                requestAnimationFrame(async () => {\r\n\r\n                    try {\r\n\r\n                        ctx.drawImage(\r\n                            imageRef,\r\n                            croppedAreaPixels.x * scaleX,\r\n                            croppedAreaPixels.y * scaleY,\r\n                            croppedAreaPixels.width * scaleX,\r\n                            croppedAreaPixels.height * scaleY,\r\n                            0,\r\n                            0,\r\n                            croppedAreaPixels.width,\r\n                            croppedAreaPixels.height\r\n                        );\r\n\r\n\r\n\r\n\r\n                        if (count > 0 && SaveCropData) {\r\n\r\n                            //alert(count)\r\n                            const dataUrl = canvas.toDataURL('image/png');\r\n                            const g = count - 1;\r\n\r\n                            if (ray[g]) {\r\n                                //alert('kj')\r\n                            } else {\r\n                                const updatedRay: any = [...ray];\r\n                                updatedRay[g] = dataUrl;\r\n\r\n                                itemUploadRefThumb.current.push(dataUrl);\r\n\r\n\r\n                                if (selectedImageReducer.length === count) {\r\n\r\n                                    console.log(updatedRay)\r\n                                    setfinalimage(updatedRay);\r\n                                    setHidecropper(true);\r\n                                    console.log(itemUploadRefThumb.current)\r\n                                } else if (count === 1) {\r\n                                    setRay(updatedRay);\r\n                                    setTimeout(() => {\r\n\r\n                                        setcount(2);\r\n                                        setcropImage(selectedImageReducer[1])\r\n                                    }, 100)\r\n                                } else {\r\n                                    setRay(updatedRay);\r\n                                    setTimeout(() => {\r\n\r\n                                        setcount(3);\r\n                                        setcropImage(selectedImageReducer[2])\r\n                                    }, 100)\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    } catch (error) {\r\n                        //alert(error)\r\n                        console.error('Error while cropping the image:', error);\r\n                    }\r\n\r\n\r\n                })\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n    }, [CropImage, count, SaveCropData, ray, itemUploadRefThumb]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [ratio, setratio] = useState(2);\r\n\r\n    const [ShowNumber, setShowNumber] = useState<boolean>(false);\r\n\r\n\r\n    const add = useCallback(() => {\r\n        setratiox(ratiox + 1);\r\n        setShowNumber(true)\r\n\r\n\r\n        if (allowscrolltimer.current) {\r\n            clearTimeout(allowscrolltimer.current);\r\n        }\r\n\r\n        allowscrolltimer.current = setTimeout(() => {\r\n            setShowNumber(false);\r\n        }, 1000)\r\n\r\n\r\n\r\n        setratio(ratio + 0.5);\r\n        if (ratio >= 4) {\r\n            setratio(2);\r\n            setratiox(1);\r\n        }\r\n    }, [ratio, ratiox])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n            <Grid className=\"dontallowhighlighting\"\r\n                container\r\n                style={{\r\n                    padding: \"0px\", width: '100%', height: \"100%\",\r\n\r\n                }}>\r\n\r\n\r\n\r\n                <Grid className=\"zuperxyinfo\"\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                        height: '0px',\r\n                        fontFamily: ' Arial, Helvetica, sans- serif', fontWeight: 'bold', opacity: 0.96, display: SaveCropData ? 'block' : 'none',\r\n                        padding: \"0px\", position: 'fixed', top: '42vh', zIndex: 200000000, left: '47.5%'\r\n                    }}>\r\n\r\n\r\n                    <CircleIcon\r\n                        className={SaveCropData ? \"dontallowhighlighting  blinken zuperkingIcon\" : ' '}\r\n                        style={{\r\n                            fontSize: '5vw',\r\n                            color: colorReducer,\r\n                            position: 'absolute'\r\n                        }}\r\n                    />\r\n                </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <Grid className=\"zuperxyinfo\"\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                        height: '0px',\r\n                        display: ShowNumber ? 'block' : 'none',\r\n                        fontFamily: ' Arial, Helvetica, sans- serif', fontWeight: 'bold', opacity: 0.65,\r\n                        padding: \"0px\", position: 'fixed', top: '40vh', fontSize: '15vh', zIndex: 20000000, left: '47.5%'\r\n                    }}>\r\n                    {ratiox}\r\n                </Grid>\r\n\r\n\r\n\r\n                <Grid ref={navRef}\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                        padding: \"0px\", width: '94%', height: multiPost ? \"80%\" : '100%', position: 'fixed', top: '-20000000000px',\r\n                    }}>\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n                {croppedImage && (\r\n                    <img src={croppedImage} alt=\"Cropped Image\" style={{ position: 'fixed', top: '20vh', zIndex: 30000000, width: '20%' }} />\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                        padding: \"0px\",\r\n                        filter: hideCrop ? SaveCropData ? 'brightness(0.8) blur(8px)' : 'brightness(1) blur(0px)' : 'brightness(0.8) blur(8px)'\r\n\r\n                    }}>\r\n\r\n                    <TouchAppIcon\r\n                        className={\r\n                            darkmodeReducer\r\n                                ? \" dontallowhighlighting zuperkingIcon \"\r\n                                : \" dontallowhighlighting zuperkingIcon  \"\r\n                        }\r\n\r\n\r\n                        style={{\r\n                            fontSize: \"5vw\",\r\n                            position: \"fixed\",\r\n                            opacity: optionscropshow2 ? 0.73 : 0,\r\n                            borderRadius: '70%',\r\n                            color: colorReducer,\r\n                            top: '2vh',\r\n                            left: '2vw',\r\n                            zIndex: 2000,\r\n                            display: hideCrop ? 'block' : 'none'\r\n                        }}\r\n                    />\r\n\r\n\r\n\r\n                    {prevImage.length > 1 ? <><Masonry\r\n                        columns={2}\r\n                        spacing={0}\r\n                        style={{\r\n                            padding: \"0px\",\r\n                            overflow: 'hidden',\r\n\r\n                        }}\r\n                    >\r\n\r\n                        {prevImage.map((picture: any, index: any) => (\r\n                            <>\r\n\r\n\r\n\r\n\r\n                                <img onClick={() => {\r\n\r\n                                    ///setcount(index + 1);\r\n                                    navRef.current.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"start\",\r\n                                    });\r\n                                    setcropImage(picture)\r\n                                    sethideCrop(false)\r\n                                }}\r\n\r\n                                    key={index} style={{ cursor: 'pointer', }} src={picture} alt={`Image ${index}`} />\r\n\r\n\r\n\r\n                            </>\r\n\r\n                        ))}\r\n\r\n                    </Masonry ></> : null}\r\n\r\n                </Grid>\r\n\r\n\r\n                <div className=\"\">\r\n\r\n\r\n\r\n\r\n                    <canvas\r\n                        ref={canRef}\r\n                        style={{\r\n                            padding: \"0px\",\r\n                            display: \"none\",\r\n                            position: \"fixed\",\r\n                            top: \"-400%\",\r\n                            zIndex: 0,\r\n                            visibility: \"hidden\",\r\n                        }}\r\n                    />\r\n\r\n\r\n                    <div style={{ display: hideCrop ? 'none' : 'block', visibility: SaveCropData ? 'hidden' : 'visible' }}>\r\n                        <Cropper\r\n                            ref={cropperRef}\r\n                            image={CropImage}\r\n                            crop={crop}\r\n                            zoom={zoom}\r\n                            aspect={ratio / 2.8}\r\n                            onCropChange={setCrop}\r\n                            onCropComplete={onCropComplete}\r\n                            onZoomChange={setZoom}\r\n\r\n                        />\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                {selectedImageReducer.length > 1 ? <CloseIcon\r\n                    onClick={() => {\r\n                        sethideCrop(true);\r\n                    }}\r\n\r\n                    className={\r\n                        darkmodeReducer\r\n                            ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \"\r\n                            : \"make-small-icons-clickable-lightab  dontallowhighlighting zuperkingIcon  \"\r\n                    }\r\n                    style={{\r\n\r\n                        color: \"#ffffff\",\r\n                        fontSize: \"3.8vw\",\r\n                        position: \"absolute\",\r\n                        opacity: optionscropshow2 ? 0.94 : 0,\r\n                        borderRadius: '70%',\r\n                        top: '3.8vh',\r\n                        left: '2%',\r\n                        right: \"\",\r\n                        display: optionscropshow ? hideCrop ? 'none' : SaveCropData ? 'none' : hide ? 'none' : 'block' : 'none'\r\n                    }}\r\n                />\r\n\r\n                    : null}\r\n\r\n\r\n                <AspectRatioIcon\r\n                    onClick={() => {\r\n                        add();\r\n                    }}\r\n\r\n                    className={\r\n                        darkmodeReducer\r\n                            ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \"\r\n                            : \"make-small-icons-clickable-lightab  dontallowhighlighting zuperkingIcon  \"\r\n                    }\r\n                    style={{\r\n                        color: \"#ffffff\",\r\n                        fontSize: \"3.8vw\",\r\n                        position: \"absolute\",\r\n                        opacity: optionscropshow2 ? 0.94 : 0,\r\n                        borderRadius: '70%',\r\n                        top: '3.8vh',\r\n                        left: '48%',\r\n                        right: \"\",\r\n                        display: optionscropshow ? hideCrop ? 'none' : SaveCropData ? 'none' : hide ? 'none' : 'block' : 'none'\r\n                    }}\r\n                />\r\n\r\n\r\n                <DoneOutlineIcon\r\n                    onClick={() => {\r\n                        setcropImage([]);\r\n                        setSaveCropData(true);\r\n                        setTimeout(() => {\r\n\r\n                            setcount(1);\r\n                            setcropImage(selectedImageReducer[0])\r\n                        }, 100)\r\n                    }}\r\n\r\n                    className={\r\n                        darkmodeReducer\r\n                            ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \"\r\n                            : \"make-small-icons-clickable-lightab  dontallowhighlighting zuperkingIcon  \"\r\n                    }\r\n                    style={{\r\n\r\n                        color: \"#ffffff\",\r\n                        fontSize: \"3.8vw\",\r\n                        position: \"absolute\",\r\n                        opacity: optionscropshow2 ? 0.94 : 0,\r\n                        borderRadius: '70%',\r\n                        top: '3.8vh',\r\n                        left: '94%',\r\n                        right: \"\",\r\n                        display: optionscropshow ? hideCrop ? 'none' : SaveCropData ? 'none' : hide ? 'none' : 'block' : 'none'\r\n                    }}\r\n                />\r\n\r\n            </Grid >\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport const TaskbarCrop = React.memo(TaskbarCropx);\r\n"]},"metadata":{},"sourceType":"module"}