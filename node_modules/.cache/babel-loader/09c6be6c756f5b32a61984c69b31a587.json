{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\OptionInnerModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport { Grid, Switch, Box } from \"@material-ui/core\";\nimport { useSpring } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar toggleDarkMode = false;\nexport default function OptionInnerModal({\n  closemodal,\n  showModal,\n  setShowModal,\n  darkmode,\n  setDarkmode,\n  marginData,\n  fontData,\n  switchsize\n}) {\n  _s();\n\n  /*SETS DARKMODE FORM LOCAL STORAGE IF NOT EMPTY */\n  useEffect(() => {\n    let themelocaldata = JSON.parse(localStorage.getItem(\"darkmode\"));\n\n    if (themelocaldata !== null) {\n      setDarkmode(themelocaldata);\n    }\n  }, [setDarkmode]);\n  /*USE SLIDE DOWN ANIMATION FROM REACT SPRING */\n\n  const animation = useSpring({\n    config: {\n      duration: 2500\n    },\n    opacity: showModal ? 1 : 0.9,\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n  /* USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK*/\n\n  const inputRef = useRef(null);\n\n  const onBackgroundFocus = e => {\n    if (inputRef.current === e.target) {\n      closemodal(0);\n    }\n  };\n  /*ESCAPE KEY CLOSE MODAL */\n\n\n  const escapePress = useCallback(e => {\n    if (e.key === \"Escape\" && showModal) {\n      closemodal(0);\n    }\n  }, [setShowModal, showModal]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escapePress);\n    return () => document.removeEventListener(\"keydown\", escapePress);\n  }, [escapePress]);\n  /*ESCAPE */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModal ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 12,\n      className: \"theme-more-container\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        component: Box,\n        display: {\n          xs: \"block\",\n          sm: \"block\"\n        },\n        sm: 10,\n        xs: 7\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        sm: 1,\n        className: \"switchopacity  zuperking\",\n        style: marginData,\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          size: switchsize,\n          checked: darkmode,\n          onChange: () => {\n            toggleDarkMode = !darkmode;\n            setDarkmode(!darkmode);\n            localStorage.setItem(\"darkmode\", toggleDarkMode.toString());\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        component: Box,\n        display: {\n          xs: \"none\",\n          sm: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        className: \"dontallowselect\",\n        sm: 1,\n        style: {\n          textAlign: \"right\"\n        },\n        children: /*#__PURE__*/_jsxDEV(AddRoundedIcon, {\n          className: darkmode ? \"make-small-icons-clickable-dark  dontallowselect  \" : \"make-small-icons-clickable-light  dontallowselect  \",\n          fontSize: \"large\",\n          style: fontData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(OptionInnerModal, \"fQ+2FGRCQwaWZSKQ741UoCVaBRU=\", false, function () {\n  return [useSpring];\n});\n\n_c = OptionInnerModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionInnerModal\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/OptionInnerModal.tsx"],"names":["React","useRef","useEffect","useCallback","AddRoundedIcon","Grid","Switch","Box","useSpring","toggleDarkMode","OptionInnerModal","closemodal","showModal","setShowModal","darkmode","setDarkmode","marginData","fontData","switchsize","themelocaldata","JSON","parse","localStorage","getItem","animation","config","duration","opacity","transform","inputRef","onBackgroundFocus","e","current","target","escapePress","key","document","addEventListener","removeEventListener","xs","sm","setItem","toString","textAlign"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { Grid, Switch, Box } from \"@material-ui/core\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport * as CSS from \"csstype\";\r\n\r\ninterface IOption {\r\n  closemodal: (backbutton: number) => void;\r\n  showModal: boolean;\r\n  setShowModal: (showModal: boolean) => void;\r\n  darkmode: boolean;\r\n  setDarkmode: (darkmodex: boolean) => void;\r\n  marginData: CSS.Properties;\r\n  fontData: CSS.Properties;\r\n  switchsize: \"medium\" | \"small\" | undefined;\r\n}\r\n\r\nvar toggleDarkMode: boolean = false;\r\n\r\nexport default function OptionInnerModal({\r\n  closemodal,\r\n  showModal,\r\n  setShowModal,\r\n  darkmode,\r\n  setDarkmode,\r\n  marginData,\r\n  fontData,\r\n  switchsize,\r\n}: IOption): JSX.Element {\r\n  /*SETS DARKMODE FORM LOCAL STORAGE IF NOT EMPTY */\r\n  useEffect(() => {\r\n    let themelocaldata = JSON.parse(localStorage.getItem(\"darkmode\")!);\r\n    if (themelocaldata !== null) {\r\n      setDarkmode(themelocaldata);\r\n    }\r\n  }, [setDarkmode]);\r\n\r\n  /*USE SLIDE DOWN ANIMATION FROM REACT SPRING */\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 2500,\r\n    },\r\n    opacity: showModal ? 1 : 0.9,\r\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`,\r\n  });\r\n\r\n  /* USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK*/\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const onBackgroundFocus = (e: any): void => {\r\n    if (inputRef.current === e.target) {\r\n      closemodal(0);\r\n    }\r\n  };\r\n\r\n  /*ESCAPE KEY CLOSE MODAL */\r\n  const escapePress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Escape\" && showModal) {\r\n        closemodal(0);\r\n      }\r\n    },\r\n    [setShowModal, showModal]\r\n  );\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escapePress);\r\n    return () => document.removeEventListener(\"keydown\", escapePress);\r\n  }, [escapePress]);\r\n  /*ESCAPE */\r\n\r\n  return (\r\n    <>\r\n      {showModal ? (\r\n        <Grid container xs={12} className=\"theme-more-container\">\r\n          <Grid\r\n            item\r\n            component={Box}\r\n            display={{ xs: \"block\", sm: \"block\" }}\r\n            sm={10}\r\n            xs={7}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            xs={2}\r\n            sm={1}\r\n            className=\"switchopacity  zuperking\"\r\n            style={marginData}\r\n          >\r\n            <Switch\r\n              size={switchsize}\r\n              checked={darkmode}\r\n              onChange={() => {\r\n                toggleDarkMode = !darkmode;\r\n                setDarkmode(!darkmode);\r\n                localStorage.setItem(\"darkmode\", toggleDarkMode.toString());\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            component={Box}\r\n            display={{ xs: \"none\", sm: \"none\" }}\r\n          ></Grid>\r\n          <Grid\r\n            item\r\n            xs={3}\r\n            className=\"dontallowselect\"\r\n            sm={1}\r\n            style={{ textAlign: \"right\" }}\r\n          >\r\n            <AddRoundedIcon\r\n              className={\r\n                darkmode\r\n                  ? \"make-small-icons-clickable-dark  dontallowselect  \"\r\n                  : \"make-small-icons-clickable-light  dontallowselect  \"\r\n              }\r\n              fontSize=\"large\"\r\n              style={fontData}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}