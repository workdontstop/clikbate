{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\ProfileOutter.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport { Paper, Grid, Box } from \"@material-ui/core\";\nimport { matchPc, matchTablet } from \"../DetectDevice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Menu } from \"./Menu\";\nimport { Billboard } from \"./Billboard\";\nimport \"./profile.css\";\nimport { Profile } from \"./Profile\";\nimport Axios from \"axios\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { OptionsSlider } from \"./OptionsSlider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ProfileOutter() {\n  _s();\n\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env;\n  const dispatch = useDispatch();\n  const [postData, setPostData] = useState([]);\n  const [postDatainner, setpostDatainner] = useState([[]]);\n  const getSliderWidthRef = useRef(null);\n  const [formtype] = useState(1);\n  const [showModalForm, setShowModalForm] = useState(false);\n  const [getSliderWidth, setgetSliderWidth] = useState(0);\n  const [aboutTemplateGo] = useState(true);\n  const [commentTemplateGo] = useState(false);\n  const [itemheight, setitemheight] = useState([]);\n  const [itemheighthold, setitemheighthold] = useState([]);\n  const [itemcroptype, setitemcroptype] = useState([]);\n  const [itemFinalPostHeight, setitemFinalPostHeight] = useState([]);\n  const [itemOriginalPostHeight, setitemOriginalPostHeight] = useState([]);\n  const [itemCLICKED, setitemCLICKED] = useState([]);\n  const [onLoadDataOnce, setonLoadDataOnce] = useState([]);\n  const [ActiveAutoPlay, setActiveAutoPlay] = useState([]);\n  const postDivRef = useRef([]);\n  const postItemsRef = useRef([]);\n  var heightplus = matchPc ? 0.33 : matchTablet ? 0.23 : 0.23;\n  var postbackheighthold = document.documentElement.clientHeight * heightplus;\n  const [postbackheight] = useState(postbackheighthold);\n  const scrollTypeTimer = useRef(null); ///\n  ///\n  ///\n  ///TYPES FOR ISLOGGEDIN\n\n  /////////////////////////////\n  ///\n  ///\n  ///LOGGED IN DATA FROM REDUX\n  const {\n    scroller\n  } = useSelector(state => ({ ...state.ScrollTypeReducer\n  }));\n  const scrollerReducer = scroller; ///\n  ///\n  ///CLOSE LOG MODAL\n\n  const [OpenModalFormOnce, setOpenModalFormOnce] = useState(false);\n  const CloseModalForm = useCallback(DeviceBackButtonClicked => {\n    ///onpopstate fires when back and forward buttons used\n    if (DeviceBackButtonClicked === 1) {\n      window.onpopstate = () => {\n        setShowModalForm(false);\n        setOpenModalFormOnce(false);\n      };\n    } else {\n      setShowModalForm(false);\n      setOpenModalFormOnce(false); ///Replace modal history state with previous history state\n\n      window.history.back();\n    }\n  }, []);\n  const OpenModalForm = useCallback(() => {\n    setShowModalForm(true); ///Replace current history state (since opening a modal Level 2 grid)...\n    /// if this was a level 1 grid (profile-info page use Pushstate to create new history state)\n\n    let modalName = \"Biography\";\n\n    if (!OpenModalFormOnce) {\n      window.history.pushState(null, \"\", modalName);\n      setOpenModalFormOnce(true);\n      CloseModalForm(1);\n    }\n  }, [OpenModalFormOnce, CloseModalForm]); ///\n  ///\n  ///\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\n\n  useEffect(() => {\n    if (getSliderWidthRef.current && getSliderWidthRef.current.clientWidth) {\n      setgetSliderWidth(getSliderWidthRef.current.clientWidth);\n    }\n  }, []); ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    screenHeight,\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const screenHeightReducer = screenHeight;\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  ///MUI PAPER STYLES FROM REDUX\n\n  const {\n    PaperStyleLight,\n    PaperStyleDark\n  } = useSelector(state => ({ ...state.PaperReducerLightnDark\n  }));\n  var PaperStyleReducer = \"\";\n\n  if (darkmodeReducer) {\n    PaperStyleReducer = PaperStyleDark;\n  } else {\n    PaperStyleReducer = PaperStyleLight;\n  }\n\n  function percentage(num, per) {\n    return num / 100 * per;\n  } ////////////////////////////////////////////////////////////////////\n  ///\n  ///\n  ///\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\n\n\n  const addPostItemsRef = itemsRef => {\n    if (itemsRef && !postItemsRef.current.includes(itemsRef)) {\n      postItemsRef.current.push(itemsRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  }; ///\n  ///\n  ///\n  ///CREATE div REFS FROM POSTS AND ADD THEM TO ARRAY\n\n\n  const addpostDivRef = divRef => {\n    if (divRef && !postDivRef.current.includes(divRef)) {\n      postDivRef.current.push(divRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  }; ///\n  ///\n  ///\n  ///DOT ENV DATA\n  ///\n  ///\n  ///MODAL ZOOMED STATE\n\n\n  useEffect(() => {\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/feeds_chronological`, {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.message === \"feeds fetched\") {\n        var postdataRep = response.data.payload;\n        postdataRep.forEach(obj => {\n          obj.itemheight = \"auto\";\n          obj.itemrealheighthold = \"0\";\n          obj.itemcroptype = \"0\";\n          obj.itemFinalPostHeight = \"0\";\n          obj.itemOriginalPostHeight = \"0\";\n          obj.itemCLICKED = false;\n          obj.onLoadDataOnce = false;\n          obj.ActiveAutoPlay = true;\n        });\n        const newArrxt = [[...postDatainner]];\n        postdataRep.map((obj, index) => {\n          const newArrxtq = [];\n\n          for (let i = 0; i < postdataRep[index].post_count; i++) {\n            ///////////////////////////////\n            if (i === 0) {\n              newArrxtq[i] = `${postdataRep[index].item1}`;\n            } else if (i === 1) {\n              newArrxtq[i] = `${postdataRep[index].item2}`;\n            } else if (i === 2) {\n              newArrxtq[i] = `${postdataRep[index].item3}`;\n            } else if (i === 3) {\n              newArrxtq[i] = `${postdataRep[index].item4}`;\n            } else if (i === 4) {\n              newArrxtq[i] = `${postdataRep[index].item5}`;\n            } else if (i === 5) {\n              newArrxtq[i] = `${postdataRep[index].item6}`;\n            } else if (i === 6) {\n              newArrxtq[i] = `${postdataRep[index].item7}`;\n            } else if (i === 7) {\n              newArrxtq[i] = `${postdataRep[index].item8}`;\n            } else if (i === 8) {\n              newArrxtq[i] = `${postdataRep[index].item9}`;\n            } else if (i === 9) {\n              newArrxtq[i] = `${postdataRep[index].item10}`;\n            } else if (i === 10) {\n              newArrxtq[i] = `${postdataRep[index].item11}`;\n            } else if (i === 11) {\n              newArrxtq[i] = `${postdataRep[index].item12}`;\n            } else if (i === 12) {\n              newArrxtq[i] = `${postdataRep[index].item13}`;\n            } else if (i === 13) {\n              newArrxtq[i] = `${postdataRep[index].item14}`;\n            } else if (i === 14) {\n              newArrxtq[i] = `${postdataRep[index].item15}`;\n            } else if (i === 15) {\n              newArrxtq[i] = `${postdataRep[index].item16}`;\n            } else {}\n\n            if (i + 1 === postdataRep[index].post_count) {\n              newArrxt[index] = newArrxtq;\n              setpostDatainner(newArrxt);\n            } /////\n            ///////////////////////////////\n\n          }\n        });\n        setPostData(postdataRep);\n      } else if (response.data.message === \"error in fetching feeds\") {\n        alert(\"Connection malfunction profile outter\");\n      }\n    }).catch(function (error) {\n      alert(\"Connection malfunction profile outter 2\");\n    });\n  }, [REACT_APP_SUPERSTARZ_URL]);\n  useEffect(() => {\n    if (postData.length > 0) {\n      const initialItemheight = postData.map(obj => obj.itemheight);\n      setitemheight(initialItemheight);\n      const initialItemrealheighthold = postData.map(obj => obj.itemrealheighthold);\n      setitemheighthold(initialItemrealheighthold);\n      const initialtemcroptype = postData.map(obj => obj.itemcroptype);\n      setitemcroptype(initialtemcroptype);\n      const initialitemFinalPostHeight = postData.map(obj => obj.itemFinalPostHeight);\n      setitemFinalPostHeight(initialitemFinalPostHeight);\n      const initialitemOriginalPostHeight = postData.map(obj => obj.itemOriginalPostHeight);\n      setitemOriginalPostHeight(initialitemOriginalPostHeight);\n      const initialitemCLICKED = postData.map(obj => obj.itemCLICKED);\n      setitemCLICKED(initialitemCLICKED);\n      const initialsetonLoadDataOnce = postData.map(obj => obj.onLoadDataOnce);\n      setonLoadDataOnce(initialsetonLoadDataOnce);\n      const initialsetActiveAutoPlay = postData.map(obj => obj.ActiveAutoPlay);\n      setActiveAutoPlay(initialsetActiveAutoPlay);\n    }\n  }, [postData]); ///\n  ///\n\n  const onPostsItemload = useCallback((e, index, itemnum) => {\n    if (onLoadDataOnce[index]) {} else {\n      if (itemnum === 0) {\n        if (postItemsRef.current[index]) {\n          var imageHeight = postItemsRef.current[index].clientHeight; ///////////////////////////////\n\n          const newArraa = [...itemheight];\n          newArraa[index] = `${imageHeight}px`;\n          setitemheight(newArraa); ///////////////////////////////\n          ///////////////////////////////\n\n          const newArrx = [...itemheighthold];\n          var newh = imageHeight / 1.042 - postbackheighthold;\n          newArrx[index] = `${newh}`;\n          setitemheighthold(newArrx); ///////////////////////////////\n\n          const newArrayFinalPostHeight = [...itemFinalPostHeight];\n          newArrayFinalPostHeight[index] = imageHeight;\n          setitemFinalPostHeight(newArrayFinalPostHeight); ///////////////////////////////\n\n          const newArrayitemOriginalPostHeight = [...itemOriginalPostHeight];\n          newArrayitemOriginalPostHeight[index] = imageHeight;\n          setitemOriginalPostHeight(newArrayitemOriginalPostHeight); ///////////////////////////////\n\n          var choppedHeight = percentage(screenHeightReducer, 100);\n          var choppedwidth = percentage(screenHeightReducer, matchPc ? 55 : matchTablet ? 52 : 40);\n\n          if (imageHeight < choppedwidth) {\n            /////WIDE IMAGE SET\n            const newArr = [...itemheight];\n            newArr[index] = `${choppedwidth}px`;\n            setitemheight(newArr); ///////////////////////////////\n\n            const newArrx = [...itemheighthold];\n            var newh = choppedwidth / 1.015 - postbackheighthold;\n            newArrx[index] = `${newh}`;\n            setitemheighthold(newArrx); ////////////////////////////\n            ///////////////////////////////\n\n            const newArrxq = [...itemcroptype];\n            newArrxq[index] = 1;\n            setitemcroptype(newArrxq); ////////////////////////////\n            ///////////////////////////////\n\n            const newArrayFinalPostHeight = [...itemFinalPostHeight];\n            newArrayFinalPostHeight[index] = choppedwidth;\n            setitemFinalPostHeight(newArrayFinalPostHeight);\n          } else if (imageHeight > choppedHeight) {\n            /////LONG IMAGE SET\n            const newArr = [...itemheight];\n            newArr[index] = `${choppedHeight}px`;\n            setitemheight(newArr); ///////////////////////////////\n\n            const newArrx = [...itemheighthold];\n            var newh = choppedHeight / 1 - postbackheighthold;\n            newArrx[index] = `${newh}`;\n            setitemheighthold(newArrx); ////////////////////////////////\n            ///////////////////////////////\n\n            const newArrxq = [...itemcroptype];\n            newArrxq[index] = 2;\n            setitemcroptype(newArrxq); ///////////////////////////////\n\n            const newArrayFinalPostHeight = [...itemFinalPostHeight];\n            newArrayFinalPostHeight[index] = choppedHeight;\n            setitemFinalPostHeight(newArrayFinalPostHeight); ///////////////////////////////\n          } else {\n            var imageWidth = postItemsRef.current[index].clientWidth;\n\n            if (imageWidth > imageHeight) {\n              ///////////////////////////////\n              const newArrx = [...itemheighthold];\n              var newh = imageHeight / 1.066 - postbackheighthold;\n              newArrx[index] = `${newh}`;\n              setitemheighthold(newArrx); ///////////////////////////////\n              ///////////////////////////////\n\n              const newArrxq = [...itemcroptype];\n              newArrxq[index] = 3;\n              setitemcroptype(newArrxq); ///////////////////////////////\n            } else {\n              ///////////////////////////////\n              const newArrxq = [...itemcroptype];\n              newArrxq[index] = 4;\n              setitemcroptype(newArrxq); ///////////////////////////////\n            }\n          } ///////////////////////////////\n\n\n          const newArrxy = [...onLoadDataOnce];\n          newArrxy[index] = true;\n          setonLoadDataOnce(newArrxy); ///////////////////////////////\n        }\n      }\n    }\n  }, [screenHeightReducer, itemheight, itemheighthold, itemFinalPostHeight]);\n\n  const scrollToPost = index => {\n    postDivRef.current[index].scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\"\n    });\n  };\n\n  const postitemSHOWFULLHEIGHT = (index, type) => {\n    if (itemcroptype[index] === 1 || itemcroptype[index] === 2) {\n      if (type === 0) {\n        const newitemHeight = [...itemheight];\n        newitemHeight[index] = `auto`;\n        setitemheight(newitemHeight);\n      } else {\n        const newitemHeight = [...itemheight];\n        newitemHeight[index] = `${itemFinalPostHeight[index]}px`;\n        setitemheight(newitemHeight);\n      }\n    }\n  };\n\n  const scrollLongPicTimer = useRef(null);\n  const scrollLongPicTimerx = useRef(null);\n\n  const AUTOSlideLongImages = index => {\n    if (itemcroptype[index] === 2) {\n      scrollLongPicTimerx.current = setTimeout(() => {\n        if (paperPostScrollRef.current) {\n          paperPostScrollRef.current.scrollTo({\n            top: paperPostScrollRef.current.scrollTop + itemOriginalPostHeight[index] / 3,\n            behavior: \"smooth\"\n          });\n        }\n      }, 500);\n      scrollLongPicTimer.current = setTimeout(() => {\n        postDivRef.current[index].scrollIntoView({\n          behavior: \"smooth\",\n          block: \"start\"\n        });\n      }, 1300);\n    }\n  }; ///\n  ///\n  ///\n  /// SLIDER DISPATCH\n\n\n  const onPostsItemClicked = index => {\n    if (itemCLICKED[index]) {\n      const newclickArray = [...itemCLICKED];\n      newclickArray[index] = false;\n      setitemCLICKED(newclickArray);\n      postitemSHOWFULLHEIGHT(index, 1);\n      scrollToPost(index);\n    } else {\n      AUTOSlideLongImages(index);\n\n      if (scrollTypeTimer.current) {\n        clearTimeout(scrollTypeTimer.current);\n      }\n\n      const newclickArray = [...itemCLICKED];\n      newclickArray[index] = true;\n      setitemCLICKED(newclickArray);\n      postitemSHOWFULLHEIGHT(index, 0);\n      scrollToPost(index);\n    }\n  };\n\n  const breakPoints = {\n    default: 2,\n    960: 2,\n    600: 1\n  }; ///\n  ///\n  ///TYPES FOR ISLOGGEDIN\n\n  ///\n  ///LOGGED IN DATA FROM REDUX\n  const {\n    loggedIn\n  } = useSelector(state => ({ ...state.IsLoggedReducer\n  }));\n  const loggedInReducer = loggedIn;\n  const paperPostScrollRef = useRef(null);\n  const [showModalUpload, setShowModalUpload] = useState(false); ///\n  ///\n  ///\n  /// CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\n\n  const closeUploadModal = useCallback(backbutton => {\n    //pop states fires when back and forward buttons used\n    if (backbutton === 1) {\n      window.onpopstate = () => {\n        window.history.pushState(null, \"\", window.location.href);\n        window.onpopstate = null;\n        setShowModalUpload(false);\n      };\n    } else {\n      window.history.pushState(null, \"\", \".\");\n      window.onpopstate = null;\n      setShowModalUpload(false);\n    }\n  }, []); ///\n  ///\n  ///\n  ///OPEN MODAL THEN CALL CLOSEMODAL FUNCTION WHICH WAITS FOR A POP EVENT(for closing modal)\n\n  const OpenUploadModal = useCallback(() => {\n    setShowModalUpload(!showModalUpload); //pushstate add enteries to your history\n\n    window.history.pushState(null, \"\", \"Options\");\n    closeUploadModal(1);\n  }, [showModalUpload, closeUploadModal]);\n  var widthProfilePic = matchPc ? \"72%\" : matchTablet ? \"85%\" : \"44vw\";\n  var topProfilePic = matchPc ? \"-20vh\" : matchTablet ? \"-12vh\" : \"-8vh\";\n  var leftProfilePic = matchPc ? \"1vw\" : matchTablet ? \"3.5vw\" : \"2.7vw\";\n  var optionsClass = \"\";\n  var fontOptions = \"\";\n\n  if (matchPc) {\n    optionsClass = \"profile-optionsImagePc\";\n    fontOptions = \"2.7vw\";\n  } else if (matchTablet) {\n    optionsClass = \"profile-optionsImageTablet\";\n    fontOptions = \"5rem\";\n  } else {\n    optionsClass = \"profile-optionsImageMobile\";\n    fontOptions = \"1.9rem\";\n  } ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype; ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n  const {\n    image\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const imageReducer = image;\n\n  const blank = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loggedInReducer ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        ref: paperPostScrollRef,\n        className: darkmodeReducer ? \"postscroll-dark\" : \"postscroll-light\",\n        style: {\n          backgroundImage: PaperStyleReducer,\n          borderRadius: \"0px\",\n          minHeight: \"100vh\",\n          overflowY: \"auto\",\n          overflowX: \"hidden\",\n          paddingBottom: \"9px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: \"dontallowhighlighting\",\n          children: [/*#__PURE__*/_jsxDEV(Menu, {\n            showModalUpload: showModalUpload,\n            OpenUploadModal: OpenUploadModal,\n            getSliderWidth: getSliderWidth,\n            paperPostScrollRef: paperPostScrollRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Billboard, {\n            OpenModalForm: OpenModalForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              padding: \"0px\",\n              height: \"0px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            ref: getSliderWidthRef,\n            xs: 2,\n            md: 1,\n            style: {\n              padding: \"0px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              padding: \"0px\",\n              height: \"0px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            component: Box,\n            display: {\n              xs: \"none\",\n              md: \"block\"\n            },\n            md: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 5,\n            md: 3,\n            style: {\n              padding: \"0px\"\n            },\n            children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              style: {\n                position: \"relative\",\n                width: widthProfilePic,\n                height: \"auto\",\n                marginLeft: leftProfilePic,\n                top: topProfilePic,\n                zIndex: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                className: `  ${optionsClass}   `,\n                style: {\n                  zIndex: 2,\n                  backgroundColor: colortypeReducer === 0 ? darkmodeReducer ? colorReducerdark : colorReducer : colorReducer,\n                  opacity: 0.7\n                },\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                  style: {\n                    fontSize: fontOptions,\n                    color: \"#ffffff\"\n                  },\n                  className: \"zuperkinginfo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                onClick: OpenModalForm,\n                className: darkmodeReducer ? `turprofileDark image-zoom-on-click` : ` turprofileLight image-zoom-on-click`,\n                style: {\n                  cursor: \"pointer\",\n                  position: \"absolute\",\n                  zIndex: 0,\n                  textAlign: \"left\",\n                  objectFit: \"contain\",\n                  width: \"100%\",\n                  borderRadius: \"50%\",\n                  margin: \"auto\",\n                  filter: \"blur(1.3px)\"\n                },\n                src: `./images/profilethumb/${imageReducer}`,\n                alt: \"Superstarz Billboard \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                onClick: OpenModalForm,\n                className: darkmodeReducer ? `turprofileDark image-gray-on-click` : ` turprofileLight image-gray-on-click`,\n                style: {\n                  cursor: \"pointer\",\n                  position: \"relative\",\n                  zIndex: 1,\n                  objectFit: \"contain\",\n                  width: \"100%\",\n                  borderRadius: \"50%\",\n                  margin: \"auto\"\n                },\n                src: `./images/profile/${imageReducer}`,\n                alt: \"Superstarz Billboard \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 7,\n            md: 5,\n            style: {\n              position: \"relative\",\n              height: \"19.5vh\",\n              paddingLeft: matchPc ? \"25px\" : matchTablet ? \"42px\" : \"24px\",\n              marginTop: matchTablet ? \"10px\" : \"-4px\",\n              zIndex: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(OptionsSlider, {\n              typeUpload: false,\n              showModalUpload: showModalUpload,\n              OpenUploadModal: OpenUploadModal,\n              sethaltedTop: blank,\n              typeTop: false,\n              getSliderWidth: getSliderWidth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Profile, {\n          getSliderWidthRef: getSliderWidthRef,\n          OpenModalForm: OpenModalForm,\n          getSliderWidth: getSliderWidth,\n          postData: postData,\n          addPostItemsRef: addPostItemsRef,\n          postDivRef: postDivRef,\n          onPostsItemload: onPostsItemload,\n          itemheight: itemheight,\n          itemheighthold: itemheighthold,\n          postbackheight: postbackheight,\n          formtype: formtype,\n          showModalForm: showModalForm,\n          CloseModalForm: CloseModalForm,\n          aboutTemplateGo: aboutTemplateGo,\n          commentTemplateGo: commentTemplateGo,\n          itemcroptype: itemcroptype,\n          itemFinalPostHeight: itemFinalPostHeight,\n          onPostsItemClicked: onPostsItemClicked,\n          itemCLICKED: itemCLICKED,\n          addpostDivRef: addpostDivRef,\n          postDatainner: postDatainner,\n          itemOriginalPostHeight: itemOriginalPostHeight,\n          ActiveAutoPlay: ActiveAutoPlay,\n          setActiveAutoPlay: setActiveAutoPlay,\n          AUTOSlideLongImages: AUTOSlideLongImages,\n          paperPostScrollRef: paperPostScrollRef,\n          onLoadDataOnce: onLoadDataOnce\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : null\n  }, void 0, false);\n}\n\n_s(ProfileOutter, \"9BklfkQj830OTrQ46QovCZ5Z/s0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileOutter;\nexport default ProfileOutter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileOutter\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/ProfileOutter.tsx"],"names":["React","useRef","useState","useEffect","useCallback","Paper","Grid","Box","matchPc","matchTablet","useSelector","useDispatch","Menu","Billboard","Profile","Axios","AddIcon","OptionsSlider","ProfileOutter","REACT_APP_SUPERSTARZ_URL","process","env","dispatch","postData","setPostData","postDatainner","setpostDatainner","getSliderWidthRef","formtype","showModalForm","setShowModalForm","getSliderWidth","setgetSliderWidth","aboutTemplateGo","commentTemplateGo","itemheight","setitemheight","itemheighthold","setitemheighthold","itemcroptype","setitemcroptype","itemFinalPostHeight","setitemFinalPostHeight","itemOriginalPostHeight","setitemOriginalPostHeight","itemCLICKED","setitemCLICKED","onLoadDataOnce","setonLoadDataOnce","ActiveAutoPlay","setActiveAutoPlay","postDivRef","postItemsRef","heightplus","postbackheighthold","document","documentElement","clientHeight","postbackheight","scrollTypeTimer","scroller","state","ScrollTypeReducer","scrollerReducer","OpenModalFormOnce","setOpenModalFormOnce","CloseModalForm","DeviceBackButtonClicked","window","onpopstate","history","back","OpenModalForm","modalName","pushState","current","clientWidth","screenHeight","darkmode","GlobalReducer","screenHeightReducer","darkmodeReducer","PaperStyleLight","PaperStyleDark","PaperReducerLightnDark","PaperStyleReducer","percentage","num","per","addPostItemsRef","itemsRef","includes","push","addpostDivRef","divRef","post","withCredentials","then","response","data","message","postdataRep","payload","forEach","obj","itemrealheighthold","newArrxt","map","index","newArrxtq","i","post_count","item1","item2","item3","item4","item5","item6","item7","item8","item9","item10","item11","item12","item13","item14","item15","item16","alert","catch","error","length","initialItemheight","initialItemrealheighthold","initialtemcroptype","initialitemFinalPostHeight","initialitemOriginalPostHeight","initialitemCLICKED","initialsetonLoadDataOnce","initialsetActiveAutoPlay","onPostsItemload","e","itemnum","imageHeight","newArraa","newArrx","newh","newArrayFinalPostHeight","newArrayitemOriginalPostHeight","choppedHeight","choppedwidth","newArr","newArrxq","imageWidth","newArrxy","scrollToPost","scrollIntoView","behavior","block","postitemSHOWFULLHEIGHT","type","newitemHeight","scrollLongPicTimer","scrollLongPicTimerx","AUTOSlideLongImages","setTimeout","paperPostScrollRef","scrollTo","top","scrollTop","onPostsItemClicked","newclickArray","clearTimeout","breakPoints","default","loggedIn","IsLoggedReducer","loggedInReducer","showModalUpload","setShowModalUpload","closeUploadModal","backbutton","location","href","OpenUploadModal","widthProfilePic","topProfilePic","leftProfilePic","optionsClass","fontOptions","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","image","UserdataReducer","imageReducer","blank","backgroundImage","borderRadius","minHeight","overflowY","overflowX","paddingBottom","padding","height","xs","md","position","width","marginLeft","zIndex","backgroundColor","opacity","fontSize","cursor","textAlign","objectFit","margin","filter","paddingLeft","marginTop"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport { Paper, Grid, Box } from \"@material-ui/core\";\r\nimport { matchMobile, matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { Menu } from \"./Menu\";\r\nimport { Billboard } from \"./Billboard\";\r\nimport \"./profile.css\";\r\nimport { Profile } from \"./Profile\";\r\nimport Axios from \"axios\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { OptionsSlider } from \"./OptionsSlider\";\r\n\r\nfunction ProfileOutter() {\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [postData, setPostData] = useState<Array<any>>([]);\r\n  const [postDatainner, setpostDatainner] = useState<Array<any>>([[]]);\r\n\r\n  const getSliderWidthRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [formtype] = useState<number>(1);\r\n  const [showModalForm, setShowModalForm] = useState<boolean>(false);\r\n\r\n  const [getSliderWidth, setgetSliderWidth] = useState(0);\r\n\r\n  const [aboutTemplateGo] = useState<boolean>(true);\r\n  const [commentTemplateGo] = useState<boolean>(false);\r\n\r\n  const [itemheight, setitemheight] = useState<Array<string>>([]);\r\n  const [itemheighthold, setitemheighthold] = useState<Array<string>>([]);\r\n  const [itemcroptype, setitemcroptype] = useState<Array<number>>([]);\r\n  const [itemFinalPostHeight, setitemFinalPostHeight] = useState<Array<number>>(\r\n    []\r\n  );\r\n  const [itemOriginalPostHeight, setitemOriginalPostHeight] = useState<\r\n    Array<number>\r\n  >([]);\r\n\r\n  const [itemCLICKED, setitemCLICKED] = useState<Array<boolean>>([]);\r\n  const [onLoadDataOnce, setonLoadDataOnce] = useState<Array<boolean>>([]);\r\n  const [ActiveAutoPlay, setActiveAutoPlay] = useState<Array<boolean>>([]);\r\n\r\n  const postDivRef = useRef<any>([]);\r\n\r\n  const postItemsRef = useRef<any>([]);\r\n\r\n  var heightplus = matchPc ? 0.33 : matchTablet ? 0.23 : 0.23;\r\n  var postbackheighthold = document.documentElement.clientHeight * heightplus;\r\n\r\n  const [postbackheight] = useState<number>(postbackheighthold);\r\n\r\n  const scrollTypeTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///TYPES FOR ISLOGGEDIN\r\n  interface RootStateScrollType {\r\n    ScrollTypeReducer: {\r\n      scroller: string;\r\n    };\r\n  }\r\n\r\n  /////////////////////////////\r\n  ///\r\n  ///\r\n  ///LOGGED IN DATA FROM REDUX\r\n  const { scroller } = useSelector((state: RootStateScrollType) => ({\r\n    ...state.ScrollTypeReducer,\r\n  }));\r\n  const scrollerReducer = scroller;\r\n\r\n  ///\r\n  ///\r\n  ///CLOSE LOG MODAL\r\n  const [OpenModalFormOnce, setOpenModalFormOnce] = useState<boolean>(false);\r\n  const CloseModalForm = useCallback((DeviceBackButtonClicked: number) => {\r\n    ///onpopstate fires when back and forward buttons used\r\n    if (DeviceBackButtonClicked === 1) {\r\n      window.onpopstate = () => {\r\n        setShowModalForm(false);\r\n        setOpenModalFormOnce(false);\r\n      };\r\n    } else {\r\n      setShowModalForm(false);\r\n      setOpenModalFormOnce(false);\r\n      ///Replace modal history state with previous history state\r\n      window.history.back();\r\n    }\r\n  }, []);\r\n\r\n  const OpenModalForm = useCallback(() => {\r\n    setShowModalForm(true);\r\n    ///Replace current history state (since opening a modal Level 2 grid)...\r\n    /// if this was a level 1 grid (profile-info page use Pushstate to create new history state)\r\n    let modalName = \"Biography\";\r\n\r\n    if (!OpenModalFormOnce) {\r\n      window.history.pushState(null, \"\", modalName);\r\n      setOpenModalFormOnce(true);\r\n      CloseModalForm(1);\r\n    }\r\n  }, [OpenModalFormOnce, CloseModalForm]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\r\n  useEffect(() => {\r\n    if (getSliderWidthRef.current && getSliderWidthRef.current.clientWidth) {\r\n      setgetSliderWidth(getSliderWidthRef.current.clientWidth);\r\n    }\r\n  }, []);\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const { screenHeight, darkmode } = useSelector(\r\n    (state: RootStateGlobalReducer) => ({\r\n      ...state.GlobalReducer,\r\n    })\r\n  );\r\n  const screenHeightReducer = screenHeight;\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///MUI PAPER STYLES FROM REDUX\r\n  const { PaperStyleLight, PaperStyleDark } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.PaperReducerLightnDark,\r\n    })\r\n  );\r\n  var PaperStyleReducer = \"\";\r\n\r\n  if (darkmodeReducer) {\r\n    PaperStyleReducer = PaperStyleDark;\r\n  } else {\r\n    PaperStyleReducer = PaperStyleLight;\r\n  }\r\n\r\n  function percentage(num: number, per: number) {\r\n    return (num / 100) * per;\r\n  }\r\n\r\n  ////////////////////////////////////////////////////////////////////\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\r\n  const addPostItemsRef = (itemsRef: any) => {\r\n    if (itemsRef && !postItemsRef.current.includes(itemsRef)) {\r\n      postItemsRef.current.push(itemsRef);\r\n    }\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE div REFS FROM POSTS AND ADD THEM TO ARRAY\r\n  const addpostDivRef = (divRef: any) => {\r\n    if (divRef && !postDivRef.current.includes(divRef)) {\r\n      postDivRef.current.push(divRef);\r\n    }\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///DOT ENV DATA\r\n\r\n  ///\r\n  ///\r\n  ///MODAL ZOOMED STATE\r\n  useEffect(() => {\r\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/feeds_chronological`, {\r\n      withCredentials: true,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.message === \"feeds fetched\") {\r\n          var postdataRep = response.data.payload;\r\n\r\n          postdataRep.forEach((obj: any) => {\r\n            obj.itemheight = \"auto\";\r\n            obj.itemrealheighthold = \"0\";\r\n            obj.itemcroptype = \"0\";\r\n            obj.itemFinalPostHeight = \"0\";\r\n            obj.itemOriginalPostHeight = \"0\";\r\n            obj.itemCLICKED = false;\r\n            obj.onLoadDataOnce = false;\r\n            obj.ActiveAutoPlay = true;\r\n          });\r\n\r\n          const newArrxt: any = [[...postDatainner]];\r\n          postdataRep.map((obj: any, index: any) => {\r\n            const newArrxtq: any = [];\r\n            for (let i = 0; i < postdataRep[index].post_count; i++) {\r\n              ///////////////////////////////\r\n\r\n              if (i === 0) {\r\n                newArrxtq[i] = `${postdataRep[index].item1}`;\r\n              } else if (i === 1) {\r\n                newArrxtq[i] = `${postdataRep[index].item2}`;\r\n              } else if (i === 2) {\r\n                newArrxtq[i] = `${postdataRep[index].item3}`;\r\n              } else if (i === 3) {\r\n                newArrxtq[i] = `${postdataRep[index].item4}`;\r\n              } else if (i === 4) {\r\n                newArrxtq[i] = `${postdataRep[index].item5}`;\r\n              } else if (i === 5) {\r\n                newArrxtq[i] = `${postdataRep[index].item6}`;\r\n              } else if (i === 6) {\r\n                newArrxtq[i] = `${postdataRep[index].item7}`;\r\n              } else if (i === 7) {\r\n                newArrxtq[i] = `${postdataRep[index].item8}`;\r\n              } else if (i === 8) {\r\n                newArrxtq[i] = `${postdataRep[index].item9}`;\r\n              } else if (i === 9) {\r\n                newArrxtq[i] = `${postdataRep[index].item10}`;\r\n              } else if (i === 10) {\r\n                newArrxtq[i] = `${postdataRep[index].item11}`;\r\n              } else if (i === 11) {\r\n                newArrxtq[i] = `${postdataRep[index].item12}`;\r\n              } else if (i === 12) {\r\n                newArrxtq[i] = `${postdataRep[index].item13}`;\r\n              } else if (i === 13) {\r\n                newArrxtq[i] = `${postdataRep[index].item14}`;\r\n              } else if (i === 14) {\r\n                newArrxtq[i] = `${postdataRep[index].item15}`;\r\n              } else if (i === 15) {\r\n                newArrxtq[i] = `${postdataRep[index].item16}`;\r\n              } else {\r\n              }\r\n\r\n              if (i + 1 === postdataRep[index].post_count) {\r\n                newArrxt[index] = newArrxtq;\r\n                setpostDatainner(newArrxt);\r\n              }\r\n              /////\r\n              ///////////////////////////////\r\n            }\r\n          });\r\n\r\n          setPostData(postdataRep);\r\n        } else if (response.data.message === \"error in fetching feeds\") {\r\n          alert(\"Connection malfunction profile outter\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"Connection malfunction profile outter 2\");\r\n      });\r\n  }, [REACT_APP_SUPERSTARZ_URL]);\r\n\r\n  useEffect(() => {\r\n    if (postData.length > 0) {\r\n      const initialItemheight = postData.map((obj) => obj.itemheight);\r\n      setitemheight(initialItemheight);\r\n\r\n      const initialItemrealheighthold = postData.map(\r\n        (obj) => obj.itemrealheighthold\r\n      );\r\n      setitemheighthold(initialItemrealheighthold);\r\n\r\n      const initialtemcroptype = postData.map((obj) => obj.itemcroptype);\r\n      setitemcroptype(initialtemcroptype);\r\n\r\n      const initialitemFinalPostHeight = postData.map(\r\n        (obj) => obj.itemFinalPostHeight\r\n      );\r\n      setitemFinalPostHeight(initialitemFinalPostHeight);\r\n\r\n      const initialitemOriginalPostHeight = postData.map(\r\n        (obj) => obj.itemOriginalPostHeight\r\n      );\r\n      setitemOriginalPostHeight(initialitemOriginalPostHeight);\r\n\r\n      const initialitemCLICKED = postData.map((obj) => obj.itemCLICKED);\r\n      setitemCLICKED(initialitemCLICKED);\r\n\r\n      const initialsetonLoadDataOnce = postData.map(\r\n        (obj) => obj.onLoadDataOnce\r\n      );\r\n      setonLoadDataOnce(initialsetonLoadDataOnce);\r\n\r\n      const initialsetActiveAutoPlay = postData.map(\r\n        (obj) => obj.ActiveAutoPlay\r\n      );\r\n      setActiveAutoPlay(initialsetActiveAutoPlay);\r\n    }\r\n  }, [postData]);\r\n\r\n  ///\r\n  ///\r\n  const onPostsItemload = useCallback(\r\n    (e: any, index: number, itemnum: number) => {\r\n      if (onLoadDataOnce[index]) {\r\n      } else {\r\n        if (itemnum === 0) {\r\n          if (postItemsRef.current[index]) {\r\n            var imageHeight = postItemsRef.current[index].clientHeight;\r\n\r\n            ///////////////////////////////\r\n            const newArraa = [...itemheight];\r\n            newArraa[index] = `${imageHeight}px`;\r\n            setitemheight(newArraa);\r\n            ///////////////////////////////\r\n\r\n            ///////////////////////////////\r\n            const newArrx = [...itemheighthold];\r\n            var newh = imageHeight / 1.042 - postbackheighthold;\r\n            newArrx[index] = `${newh}`;\r\n            setitemheighthold(newArrx);\r\n            ///////////////////////////////\r\n            const newArrayFinalPostHeight = [...itemFinalPostHeight];\r\n            newArrayFinalPostHeight[index] = imageHeight;\r\n            setitemFinalPostHeight(newArrayFinalPostHeight);\r\n\r\n            ///////////////////////////////\r\n            const newArrayitemOriginalPostHeight = [...itemOriginalPostHeight];\r\n            newArrayitemOriginalPostHeight[index] = imageHeight;\r\n            setitemOriginalPostHeight(newArrayitemOriginalPostHeight);\r\n            ///////////////////////////////\r\n\r\n            var choppedHeight = percentage(screenHeightReducer, 100);\r\n\r\n            var choppedwidth = percentage(\r\n              screenHeightReducer,\r\n              matchPc ? 55 : matchTablet ? 52 : 40\r\n            );\r\n\r\n            if (imageHeight < choppedwidth) {\r\n              /////WIDE IMAGE SET\r\n              const newArr = [...itemheight];\r\n              newArr[index] = `${choppedwidth}px`;\r\n              setitemheight(newArr);\r\n              ///////////////////////////////\r\n              const newArrx = [...itemheighthold];\r\n              var newh = choppedwidth / 1.015 - postbackheighthold;\r\n              newArrx[index] = `${newh}`;\r\n              setitemheighthold(newArrx);\r\n              ////////////////////////////\r\n              ///////////////////////////////\r\n              const newArrxq = [...itemcroptype];\r\n              newArrxq[index] = 1;\r\n              setitemcroptype(newArrxq);\r\n              ////////////////////////////\r\n              ///////////////////////////////\r\n              const newArrayFinalPostHeight = [...itemFinalPostHeight];\r\n              newArrayFinalPostHeight[index] = choppedwidth;\r\n              setitemFinalPostHeight(newArrayFinalPostHeight);\r\n            } else if (imageHeight > choppedHeight) {\r\n              /////LONG IMAGE SET\r\n              const newArr = [...itemheight];\r\n              newArr[index] = `${choppedHeight}px`;\r\n              setitemheight(newArr);\r\n              ///////////////////////////////\r\n              const newArrx = [...itemheighthold];\r\n              var newh = choppedHeight / 1 - postbackheighthold;\r\n              newArrx[index] = `${newh}`;\r\n              setitemheighthold(newArrx);\r\n              ////////////////////////////////\r\n              ///////////////////////////////\r\n              const newArrxq = [...itemcroptype];\r\n              newArrxq[index] = 2;\r\n              setitemcroptype(newArrxq);\r\n              ///////////////////////////////\r\n              const newArrayFinalPostHeight = [...itemFinalPostHeight];\r\n              newArrayFinalPostHeight[index] = choppedHeight;\r\n              setitemFinalPostHeight(newArrayFinalPostHeight);\r\n              ///////////////////////////////\r\n            } else {\r\n              var imageWidth = postItemsRef.current[index].clientWidth;\r\n              if (imageWidth > imageHeight) {\r\n                ///////////////////////////////\r\n                const newArrx = [...itemheighthold];\r\n                var newh = imageHeight / 1.066 - postbackheighthold;\r\n                newArrx[index] = `${newh}`;\r\n                setitemheighthold(newArrx);\r\n                ///////////////////////////////\r\n                ///////////////////////////////\r\n                const newArrxq = [...itemcroptype];\r\n                newArrxq[index] = 3;\r\n                setitemcroptype(newArrxq);\r\n                ///////////////////////////////\r\n              } else {\r\n                ///////////////////////////////\r\n                const newArrxq = [...itemcroptype];\r\n                newArrxq[index] = 4;\r\n                setitemcroptype(newArrxq);\r\n                ///////////////////////////////\r\n              }\r\n            }\r\n            ///////////////////////////////\r\n            const newArrxy = [...onLoadDataOnce];\r\n            newArrxy[index] = true;\r\n            setonLoadDataOnce(newArrxy);\r\n            ///////////////////////////////\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [screenHeightReducer, itemheight, itemheighthold, itemFinalPostHeight]\r\n  );\r\n\r\n  const scrollToPost = (index: any) => {\r\n    postDivRef.current[index].scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\",\r\n    });\r\n  };\r\n\r\n  const postitemSHOWFULLHEIGHT = (index: any, type: number) => {\r\n    if (itemcroptype[index] === 1 || itemcroptype[index] === 2) {\r\n      if (type === 0) {\r\n        const newitemHeight = [...itemheight];\r\n        newitemHeight[index] = `auto`;\r\n        setitemheight(newitemHeight);\r\n      } else {\r\n        const newitemHeight = [...itemheight];\r\n        newitemHeight[index] = `${itemFinalPostHeight[index]}px`;\r\n        setitemheight(newitemHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  const scrollLongPicTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const scrollLongPicTimerx = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const AUTOSlideLongImages = (index: number) => {\r\n    if (itemcroptype[index] === 2) {\r\n      scrollLongPicTimerx.current = setTimeout(() => {\r\n        if (paperPostScrollRef.current) {\r\n          paperPostScrollRef.current.scrollTo({\r\n            top:\r\n              paperPostScrollRef.current.scrollTop +\r\n              itemOriginalPostHeight[index] / 3,\r\n            behavior: \"smooth\",\r\n          });\r\n        }\r\n      }, 500);\r\n      scrollLongPicTimer.current = setTimeout(() => {\r\n        postDivRef.current[index].scrollIntoView({\r\n          behavior: \"smooth\",\r\n          block: \"start\",\r\n        });\r\n      }, 1300);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SLIDER DISPATCH\r\n\r\n  const onPostsItemClicked = (index: number) => {\r\n    if (itemCLICKED[index]) {\r\n      const newclickArray = [...itemCLICKED];\r\n      newclickArray[index] = false;\r\n      setitemCLICKED(newclickArray);\r\n      postitemSHOWFULLHEIGHT(index, 1);\r\n      scrollToPost(index);\r\n    } else {\r\n      AUTOSlideLongImages(index);\r\n      if (scrollTypeTimer.current) {\r\n        clearTimeout(scrollTypeTimer.current);\r\n      }\r\n\r\n      const newclickArray = [...itemCLICKED];\r\n      newclickArray[index] = true;\r\n      setitemCLICKED(newclickArray);\r\n      postitemSHOWFULLHEIGHT(index, 0);\r\n      scrollToPost(index);\r\n    }\r\n  };\r\n\r\n  const breakPoints = {\r\n    default: 2,\r\n    960: 2,\r\n    600: 1,\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///TYPES FOR ISLOGGEDIN\r\n  interface RootStateIsLogged {\r\n    IsLoggedReducer: {\r\n      loggedIn: boolean;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///LOGGED IN DATA FROM REDUX\r\n  const { loggedIn } = useSelector((state: RootStateIsLogged) => ({\r\n    ...state.IsLoggedReducer,\r\n  }));\r\n  const loggedInReducer = loggedIn;\r\n\r\n  const paperPostScrollRef = useRef<any>(null);\r\n\r\n  const [showModalUpload, setShowModalUpload] = useState<boolean>(false);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\r\n  const closeUploadModal = useCallback((backbutton: number) => {\r\n    //pop states fires when back and forward buttons used\r\n    if (backbutton === 1) {\r\n      window.onpopstate = () => {\r\n        window.history.pushState(null, \"\", window.location.href);\r\n        window.onpopstate = null;\r\n        setShowModalUpload(false);\r\n      };\r\n    } else {\r\n      window.history.pushState(null, \"\", \".\");\r\n      window.onpopstate = null;\r\n      setShowModalUpload(false);\r\n    }\r\n  }, []);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///OPEN MODAL THEN CALL CLOSEMODAL FUNCTION WHICH WAITS FOR A POP EVENT(for closing modal)\r\n  const OpenUploadModal = useCallback(() => {\r\n    setShowModalUpload(!showModalUpload);\r\n    //pushstate add enteries to your history\r\n    window.history.pushState(null, \"\", \"Options\");\r\n    closeUploadModal(1);\r\n  }, [showModalUpload, closeUploadModal]);\r\n\r\n  var widthProfilePic = matchPc ? \"72%\" : matchTablet ? \"85%\" : \"44vw\";\r\n  var topProfilePic = matchPc ? \"-20vh\" : matchTablet ? \"-12vh\" : \"-8vh\";\r\n  var leftProfilePic = matchPc ? \"1vw\" : matchTablet ? \"3.5vw\" : \"2.7vw\";\r\n\r\n  var optionsClass = \"\";\r\n  var fontOptions = \"\";\r\n\r\n  if (matchPc) {\r\n    optionsClass = \"profile-optionsImagePc\";\r\n    fontOptions = \"2.7vw\";\r\n  } else if (matchTablet) {\r\n    optionsClass = \"profile-optionsImageTablet\";\r\n    fontOptions = \"5rem\";\r\n  } else {\r\n    optionsClass = \"profile-optionsImageMobile\";\r\n    fontOptions = \"1.9rem\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      image: string;\r\n    };\r\n  }\r\n  const { image } = useSelector((state: RootStateReducerImage) => ({\r\n    ...state.UserdataReducer,\r\n  }));\r\n  const imageReducer = image;\r\n\r\n  const blank = () => {};\r\n\r\n  return (\r\n    <>\r\n      {loggedInReducer ? (\r\n        <>\r\n          <Paper\r\n            ref={paperPostScrollRef}\r\n            className={darkmodeReducer ? \"postscroll-dark\" : \"postscroll-light\"}\r\n            style={{\r\n              backgroundImage: PaperStyleReducer,\r\n              borderRadius: \"0px\",\r\n              minHeight: \"100vh\",\r\n              overflowY: \"auto\",\r\n              overflowX: \"hidden\",\r\n              paddingBottom: \"9px\",\r\n            }}\r\n          >\r\n            <Grid container className=\"dontallowhighlighting\">\r\n              <Menu\r\n                showModalUpload={showModalUpload}\r\n                OpenUploadModal={OpenUploadModal}\r\n                getSliderWidth={getSliderWidth}\r\n                paperPostScrollRef={paperPostScrollRef}\r\n              />\r\n              <Billboard OpenModalForm={OpenModalForm} />\r\n\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{ padding: \"0px\", height: \"0px\" }}\r\n              ></Grid>\r\n              <Grid\r\n                item\r\n                ref={getSliderWidthRef}\r\n                xs={2}\r\n                md={1}\r\n                style={{ padding: \"0px\" }}\r\n              ></Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{ padding: \"0px\", height: \"0px\" }}\r\n              ></Grid>\r\n              <Grid\r\n                item\r\n                component={Box}\r\n                display={{ xs: \"none\", md: \"block\" }}\r\n                md={2}\r\n              ></Grid>\r\n\r\n              <Grid item xs={5} md={3} style={{ padding: \"0px\" }}>\r\n                {\" \"}\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{\r\n                    position: \"relative\",\r\n                    width: widthProfilePic,\r\n                    height: \"auto\",\r\n                    marginLeft: leftProfilePic,\r\n                    top: topProfilePic,\r\n                    zIndex: 3,\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    className={`  ${optionsClass}   `}\r\n                    style={{\r\n                      zIndex: 2,\r\n                      backgroundColor:\r\n                        colortypeReducer === 0\r\n                          ? darkmodeReducer\r\n                            ? colorReducerdark\r\n                            : colorReducer\r\n                          : colorReducer,\r\n\r\n                      opacity: 0.7,\r\n                    }}\r\n                  >\r\n                    <AddIcon\r\n                      style={{\r\n                        fontSize: fontOptions,\r\n                        color: \"#ffffff\",\r\n                      }}\r\n                      className=\"zuperkinginfo\"\r\n                    />\r\n                  </Grid>\r\n                  <img\r\n                    onClick={OpenModalForm}\r\n                    className={\r\n                      darkmodeReducer\r\n                        ? `turprofileDark image-zoom-on-click`\r\n                        : ` turprofileLight image-zoom-on-click`\r\n                    }\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      position: \"absolute\",\r\n                      zIndex: 0,\r\n                      textAlign: \"left\",\r\n                      objectFit: \"contain\",\r\n                      width: \"100%\",\r\n                      borderRadius: \"50%\",\r\n                      margin: \"auto\",\r\n                      filter: \"blur(1.3px)\",\r\n                    }}\r\n                    src={`./images/profilethumb/${imageReducer}`}\r\n                    alt=\"Superstarz Billboard \"\r\n                  />{\" \"}\r\n                  <img\r\n                    onClick={OpenModalForm}\r\n                    className={\r\n                      darkmodeReducer\r\n                        ? `turprofileDark image-gray-on-click`\r\n                        : ` turprofileLight image-gray-on-click`\r\n                    }\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      position: \"relative\",\r\n                      zIndex: 1,\r\n                      objectFit: \"contain\",\r\n                      width: \"100%\",\r\n                      borderRadius: \"50%\",\r\n                      margin: \"auto\",\r\n                    }}\r\n                    src={`./images/profile/${imageReducer}`}\r\n                    alt=\"Superstarz Billboard \"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                xs={7}\r\n                md={5}\r\n                style={{\r\n                  position: \"relative\",\r\n                  height: \"19.5vh\",\r\n                  paddingLeft: matchPc ? \"25px\" : matchTablet ? \"42px\" : \"24px\",\r\n                  marginTop: matchTablet ? \"10px\" : \"-4px\",\r\n                  zIndex: 1,\r\n                }}\r\n              >\r\n                <OptionsSlider\r\n                  typeUpload={false}\r\n                  showModalUpload={showModalUpload}\r\n                  OpenUploadModal={OpenUploadModal}\r\n                  sethaltedTop={blank}\r\n                  typeTop={false}\r\n                  getSliderWidth={getSliderWidth}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Profile\r\n              getSliderWidthRef={getSliderWidthRef}\r\n              OpenModalForm={OpenModalForm}\r\n              getSliderWidth={getSliderWidth}\r\n              postData={postData}\r\n              addPostItemsRef={addPostItemsRef}\r\n              postDivRef={postDivRef}\r\n              onPostsItemload={onPostsItemload}\r\n              itemheight={itemheight}\r\n              itemheighthold={itemheighthold}\r\n              postbackheight={postbackheight}\r\n              formtype={formtype}\r\n              showModalForm={showModalForm}\r\n              CloseModalForm={CloseModalForm}\r\n              aboutTemplateGo={aboutTemplateGo}\r\n              commentTemplateGo={commentTemplateGo}\r\n              itemcroptype={itemcroptype}\r\n              itemFinalPostHeight={itemFinalPostHeight}\r\n              onPostsItemClicked={onPostsItemClicked}\r\n              itemCLICKED={itemCLICKED}\r\n              addpostDivRef={addpostDivRef}\r\n              postDatainner={postDatainner}\r\n              itemOriginalPostHeight={itemOriginalPostHeight}\r\n              ActiveAutoPlay={ActiveAutoPlay}\r\n              setActiveAutoPlay={setActiveAutoPlay}\r\n              AUTOSlideLongImages={AUTOSlideLongImages}\r\n              paperPostScrollRef={paperPostScrollRef}\r\n              onLoadDataOnce={onLoadDataOnce}\r\n            />\r\n          </Paper>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileOutter;\r\n"]},"metadata":{},"sourceType":"module"}