{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\ImageTobeFiltered.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ImageTobeFilteredx({\n  filterImage,\n  index,\n  itemUploadRef\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  const filterbaseimageRef = useRef(null);\n\n  const reloadSrc = () => {\n    alert(\"pokj\");\n  };\n\n  const aa = () => {\n    alert(\"pokj\");\n  };\n\n  useEffect(() => {}, [filterbaseimageRef, filterImage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      onError: reloadSrc,\n      ref: filterbaseimageRef,\n      style: {\n        width: \"20%\",\n        height: \"auto\",\n        position: \"relative\",\n        margin: \"auto\",\n        marginRight: index === 0 ? \"20px\" : \"0px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ImageTobeFilteredx, \"tSwX2SUWd4gFpzLMU9+LPFS8ViQ=\");\n\n_c = ImageTobeFilteredx;\nexport const ImageTobeFiltered = /*#__PURE__*/React.memo(ImageTobeFilteredx);\n_c2 = ImageTobeFiltered;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImageTobeFilteredx\");\n$RefreshReg$(_c2, \"ImageTobeFiltered\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/ImageTobeFiltered.tsx"],"names":["React","useRef","useEffect","ImageTobeFilteredx","filterImage","index","itemUploadRef","filterbaseimageRef","reloadSrc","alert","aa","width","height","position","margin","marginRight","ImageTobeFiltered","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,MADF,EAIEC,SAJF,QAMO,OANP;;;;AAyBA,SAASC,kBAAT,CAA4B;AAC1BC,EAAAA,WAD0B;AAE1BC,EAAAA,KAF0B;AAG1BC,EAAAA;AAH0B,CAA5B,EAIqB;AAAA;;AACnB;AACA;AACA;AACA,QAAMC,kBAAuB,GAAGN,MAAM,CAAC,IAAD,CAAtC;;AAEA,QAAMO,SAAS,GAAG,MAAM;AACtBC,IAAAA,KAAK,CAAC,MAAD,CAAL;AACD,GAFD;;AAIA,QAAMC,EAAE,GAAG,MAAM;AACfD,IAAAA,KAAK,CAAC,MAAD,CAAL;AACD,GAFD;;AAIAP,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACK,kBAAD,EAAqBH,WAArB,CAAX,CAAT;AAEA,sBACE;AAAA,2BACE;AACE,MAAA,OAAO,EAAEI,SADX;AAEE,MAAA,GAAG,EAAED,kBAFP;AAGE,MAAA,KAAK,EAAE;AACLI,QAAAA,KAAK,EAAE,KADF;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,QAAQ,EAAE,UAHL;AAILC,QAAAA,MAAM,EAAE,MAJH;AAKLC,QAAAA,WAAW,EAAEV,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuB;AAL/B;AAHT;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAeD;;GAnCQF,kB;;KAAAA,kB;AAqCT,OAAO,MAAMa,iBAAiB,gBAAGhB,KAAK,CAACiB,IAAN,CAAWd,kBAAX,CAA1B;MAAMa,iB","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { PreviewCanvas } from \"./PreviewCanvas\";\r\n\r\nfunction ImageTobeFilteredx({\r\n  filterImage,\r\n  index,\r\n  itemUploadRef,\r\n}: any): JSX.Element {\r\n  ///\r\n  ///\r\n  ///\r\n  const filterbaseimageRef: any = useRef(null);\r\n\r\n  const reloadSrc = () => {\r\n    alert(\"pokj\");\r\n  };\r\n\r\n  const aa = () => {\r\n    alert(\"pokj\");\r\n  };\r\n\r\n  useEffect(() => {}, [filterbaseimageRef, filterImage]);\r\n\r\n  return (\r\n    <>\r\n      <img\r\n        onError={reloadSrc}\r\n        ref={filterbaseimageRef}\r\n        style={{\r\n          width: \"20%\",\r\n          height: \"auto\",\r\n          position: \"relative\",\r\n          margin: \"auto\",\r\n          marginRight: index === 0 ? \"20px\" : \"0px\",\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport const ImageTobeFiltered = React.memo(ImageTobeFilteredx);\r\n"]},"metadata":{},"sourceType":"module"}