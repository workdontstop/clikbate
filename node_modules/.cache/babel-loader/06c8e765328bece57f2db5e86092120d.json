{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\UploadProfilePic.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useCallback, useState, useLayoutEffect } from \"react\";\nimport { Grid, DialogContent } from \"@material-ui/core\";\nimport { matchTablet, matchMobile } from \"../DetectDevice\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useSelector } from \"react-redux\";\nimport Axios from \"axios\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport date from \"date-and-time\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UploadProfilePicx({\n  showModalUploadProfile,\n  cropimageProfile,\n  profileimageSource,\n  typex\n}) {\n  _s();\n\n  const cropCanvasRefx = useRef(null);\n  const [CropImageHolder, setCropImageHolder] = useState(null);\n  const hdcanvasvalue = 1;\n  const getpreviewFixedWidthRef = useRef(null);\n  const getCropHeightRef = useRef(null);\n  const getCropWidthMobileRef = useRef(null);\n  const getCropWidthMobileReflong = useRef(null);\n  const getCropWidthMobileRefHD = useRef(null);\n  const getCropHeightRefsingle = useRef(null);\n  const getFixedCropWidthRef = useRef(null);\n  const [myCropWidth, setmyCropWidth] = useState(0);\n  const [myCropHeight, setmyCropHeight] = useState(0);\n  const [matchTabletMobile, setmatchTabletMobile] = useState(false);\n  const [getpreviewFixedWidth, setgetpreviewFixedWidth] = useState(0);\n  const [screenH, setscreenH] = useState(0);\n  const [waitONLOAD, setwaitONLOAD] = useState(true);\n  const [getCropHeightRealImageRatio, setgetCropHeightRealImageRatio] = useState(0);\n  const [getCropWidthMobile, setgetCropWidthMobile] = useState(0);\n  const [getCropWidthMobileHD, setgetCropWidthMobileHD] = useState(0);\n  const [widelongboxmobileimage, setwidelongboxmobileimage] = useState(false);\n  const [widelongboxmobileimagex, setwidelongboxmobileimagex] = useState(false);\n  const [OriginalImageWidth, setOriginalImageWidth] = useState(0);\n  const [OriginalImageHeight, setOriginalImageHeight] = useState(0);\n  const [cropwidth, setcropwidth] = useState(0);\n  const [cropheight, setcropheight] = useState(0);\n  const [WideImageCheck, setWideImageCheck] = useState(false);\n  const [SourceWidthForCropX, setSourceWidthForCropX] = useState(0);\n  const [SourceWidthForCropY, setSourceWidthForCropY] = useState(0);\n  const [BoxCropActivated, setBoxCropActivated] = useState(true);\n  const [zoom, setzoom] = useState(1);\n  const [crop, setcrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [optionscropshow, setoptionscropshow] = useState(true); //\n  //\n  //\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\n\n  const animation = useSpring({\n    config: {\n      duration: 600\n    },\n    opacity: showModalUploadProfile ? 1 : 0,\n    transform: showModalUploadProfile ? `translateY(0%)` : `translateY(-100%)`,\n    padding: \"0px\"\n  }); ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env;\n  const cropscrollRef = useRef(null);\n  const cropTOPLEVELScrollRef = useRef(null); ///\n  ///\n  ///\n  ///GET DIMENSIONS AND  SCREEN HEIGHT\n\n  useLayoutEffect(() => {\n    if (matchTablet || matchMobile) {\n      setmatchTabletMobile(true);\n    }\n\n    if (getpreviewFixedWidthRef.current && getpreviewFixedWidthRef.current.clientWidth) {\n      setgetpreviewFixedWidth(getpreviewFixedWidthRef.current.clientWidth);\n    }\n\n    if (getCropHeightRefsingle.current && getCropHeightRefsingle.current.clientHeight) {\n      setscreenH(getCropHeightRefsingle.current.clientHeight);\n    }\n\n    if (profileimageSource.length === 1) {\n      setwaitONLOAD(false);\n\n      if (getCropHeightRefsingle.current && getCropHeightRefsingle.current.clientHeight || getCropHeightRef.current) {\n        if (matchTabletMobile) {\n          setmyCropHeight(getCropWidthMobileRef.current.clientWidth * hdcanvasvalue);\n          setmyCropWidth(getCropWidthMobileRef.current.clientWidth * hdcanvasvalue);\n        } else {\n          if (typex === \"Profile\") {\n            setmyCropWidth(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue);\n            setmyCropHeight(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue);\n          } else {\n            setmyCropWidth(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue + getCropHeightRefsingle.current.clientHeight * 0.3);\n            setmyCropHeight(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue - getCropHeightRefsingle.current.clientHeight * 0.2);\n          }\n        }\n\n        setgetCropHeightRealImageRatio(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue);\n      }\n    } else {\n      if (getCropHeightRef.current && getCropHeightRef.current.clientHeight) {\n        if (matchTabletMobile) {\n          setmyCropHeight(getCropWidthMobileRef.current.clientWidth * hdcanvasvalue);\n          setmyCropWidth(getCropWidthMobileRef.current.clientWidth * hdcanvasvalue);\n        } else {\n          setmyCropHeight(getCropHeightRef.current.clientHeight * hdcanvasvalue);\n          setmyCropWidth(getCropHeightRef.current.clientHeight * hdcanvasvalue);\n        }\n\n        setgetCropHeightRealImageRatio(getCropHeightRef.current.clientHeight);\n      }\n    }\n\n    if (getCropWidthMobileRef.current && getCropWidthMobileRef.current.clientWidth) {\n      setgetCropWidthMobile(getCropWidthMobileRef.current.clientWidth);\n    }\n\n    if (getCropWidthMobileRefHD.current && getCropWidthMobileRefHD.current.clientWidth) {\n      setgetCropWidthMobileHD(getCropWidthMobileRefHD.current.clientWidth);\n    }\n  }, [profileimageSource, typex]);\n  const draw = useCallback((ctx, dimensions, type, axis, allowZoomedAxis) => {\n    var allowZoomedaxis, aa;\n\n    if (typex === \"Profile\") {\n      aa = -(dimensions * zoom) / 4;\n    } else {\n      aa = axis;\n    }\n\n    if (zoom === 1) {\n      allowZoomedaxis = 0;\n    } else {\n      allowZoomedaxis = allowZoomedAxis;\n    }\n\n    if (type === 1) {\n      ctx.drawImage(CropImageHolder, aa, allowZoomedaxis, dimensions * zoom, myCropHeight * zoom);\n    } else if (type === 2) {\n      ctx.drawImage(CropImageHolder, allowZoomedaxis, axis, myCropWidth * zoom, dimensions * zoom);\n    } else {\n      ctx.drawImage(CropImageHolder, 0, 0, OriginalImageWidth, OriginalImageHeight);\n    }\n  }, [OriginalImageWidth, OriginalImageHeight, CropImageHolder, myCropHeight, myCropWidth, zoom]);\n  useLayoutEffect(() => {\n    const Newcropimage = new Image();\n    Newcropimage.src = cropimageProfile;\n\n    Newcropimage.onload = function () {\n      if (CropImageHolder === Newcropimage) {} else {\n        setCropImageHolder(Newcropimage);\n      }\n\n      var data1 = 0;\n      var data2 = 0;\n      var RatioNewcropimageNaturalHeight = Newcropimage.naturalHeight / myCropHeight;\n      var NewcropimageWidth = Newcropimage.naturalWidth / RatioNewcropimageNaturalHeight;\n      var RatioNewcropimageNaturalWidth = Newcropimage.naturalWidth / getCropWidthMobileHD;\n      var NewcropimageHeight = Newcropimage.naturalHeight / RatioNewcropimageNaturalWidth;\n      var RatioNewcropimageNaturalWidthxx = Newcropimage.naturalWidth / getCropWidthMobile;\n      var NewcropimageHeightxx = Newcropimage.naturalHeight / RatioNewcropimageNaturalWidthxx; ////// CANVAS  CROPPER DIMENSIONS  PC MOBILE(canvaswidth)\n\n      if (matchTabletMobile && NewcropimageHeightxx < screenH) {\n        setwidelongboxmobileimage(true);\n        setwidelongboxmobileimagex(true);\n\n        if (OriginalImageHeight === NewcropimageHeight) {} else {\n          setOriginalImageHeight(NewcropimageHeight);\n          data2 = NewcropimageHeight;\n        } //\n\n\n        if (OriginalImageWidth === getCropWidthMobileHD) {} else {\n          setOriginalImageWidth(getCropWidthMobileHD);\n          data1 = getCropWidthMobileHD;\n        }\n      } else {\n        setwidelongboxmobileimage(false);\n        setwidelongboxmobileimagex(false);\n\n        if (OriginalImageWidth === NewcropimageWidth) {} else {\n          setOriginalImageWidth(NewcropimageWidth);\n          data1 = NewcropimageWidth;\n        } ///\n\n\n        if (OriginalImageHeight === myCropHeight) {} else {\n          setOriginalImageHeight(myCropHeight);\n          data2 = myCropHeight;\n        }\n      } ////// CANVAS  CROPPER DIMENSIONS  PC MOBILE(canvaswidth)\n\n\n      if (Newcropimage.naturalWidth > Newcropimage.naturalHeight) {\n        setWideImageCheck(true);\n      } else {\n        setWideImageCheck(false);\n      }\n\n      if (cropwidth === data1) {} else {\n        setcropwidth(data1);\n      }\n\n      if (cropheight === data2) {} else {\n        setcropheight(data2);\n      }\n    };\n  }, [cropimageProfile, showModalUploadProfile]); ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    id\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const idReducer = id;\n  const postbillboardData = useCallback(a => {\n    // Creating object of current date and time\n    // by using Date()\n    const now = new Date(); // Formatting the date and time\n    // by using date.format() method\n\n    const datevalue = date.format(now, \"YYYY_MM_DD_HH_mm_ss\");\n    let formData = new FormData();\n    const datev = new Date();\n    formData.append(\"id\", `${idReducer}`);\n    formData.append(\"finalxxy\", a, `blob${id}${datevalue}`);\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/billboard_upload`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(response => {\n      if (response.data.message === \"billboard image uploaded\") {\n        alert(\"done\");\n      }\n    }).catch(function (error) {\n      alert(\"caption erroerrr\");\n    });\n  }, [idReducer]);\n  const postProfiledata = useCallback(a => {\n    // Creating object of current date and time\n    // by using Date()\n    const now = new Date(); // Formatting the date and time\n    // by using date.format() method\n\n    const datevalue = date.format(now, \"YYYY_MM_DD_HH_mm_ss\");\n    let formData = new FormData();\n    const datev = new Date();\n    formData.append(\"id\", `${idReducer}`);\n    formData.append(\"finalxx\", a, `blob${id}${datevalue}`);\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/profile_upload`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(response => {\n      if (response.data.message === \"profile image uploaded\") {\n        alert(\"done\");\n      }\n    }).catch(function (error) {\n      alert(\"caption erroerrr\");\n    });\n  }, [idReducer]);\n\n  const drawcropper = upl => {\n    if (CropImageHolder && cropCanvasRefx.current) {\n      const ctx = cropCanvasRefx.current.getContext(\"2d\");\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / myCropHeight;\n      var NewBoxRatioWidth_WIDEIMAGE = OriginalImageWidth / RatiofromOriginalandfixedHeight;\n\n      if (SourceWidthForCropX === NewBoxRatioWidth_WIDEIMAGE) {} else {\n        setSourceWidthForCropX(NewBoxRatioWidth_WIDEIMAGE);\n      }\n\n      var RatiofromOriginalandfixedHeightx = OriginalImageWidth / myCropWidth;\n      var NewBoxRatioWidth_LONGIMAGE = OriginalImageHeight / RatiofromOriginalandfixedHeightx;\n\n      if (SourceWidthForCropY === NewBoxRatioWidth_LONGIMAGE) {} else {\n        setSourceWidthForCropY(NewBoxRatioWidth_LONGIMAGE);\n      }\n\n      var ratioh = OriginalImageWidth * 3 / OriginalImageWidth;\n      var ratiow = OriginalImageHeight * 3 / OriginalImageHeight;\n\n      if (BoxCropActivated) {\n        cropCanvasRefx.current.width = myCropWidth;\n        cropCanvasRefx.current.height = myCropHeight;\n      } else {\n        cropCanvasRefx.current.width = OriginalImageWidth;\n        cropCanvasRefx.current.height = OriginalImageHeight;\n      }\n\n      var centerpreview = cropCanvasRefx.current.width / 1.5 - NewBoxRatioWidth_LONGIMAGE / 1.5;\n      var xtraZoom = myCropHeight / NewBoxRatioWidth_WIDEIMAGE;\n      var centerCropCanvas = cropCanvasRefx.current.width / 2 - NewBoxRatioWidth_WIDEIMAGE / 2; //////////////////////////CSS CALCULATION MOBILE PC\n\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / getCropHeightRealImageRatio;\n      var newcropCSSWidth = OriginalImageWidth / RatiofromOriginalandfixedHeight; ///\n\n      var RatiofromOriginalandfixedWidth = OriginalImageWidth / getCropWidthMobile;\n      var newcropCSSHeight = OriginalImageHeight / RatiofromOriginalandfixedWidth; //////////////////////////CSS CALCULATION MOBILE PC\n\n      if (BoxCropActivated) {\n        var xx = myCropWidth * zoom;\n        var RatiofromOriginalandfixedHeightx = OriginalImageWidth / xx;\n        var NewBoxRatioWidth_LONGIMAGEx = OriginalImageHeight / RatiofromOriginalandfixedHeightx;\n        var xxx = NewBoxRatioWidth_LONGIMAGE * zoom;\n        var RatiofromOriginalandfixedWidthx = OriginalImageHeight / xxx;\n        var NewBoxRatioWidth_WIDEIMAGEx = OriginalImageWidth / RatiofromOriginalandfixedWidthx;\n        var xx2 = NewBoxRatioWidth_WIDEIMAGE * zoom;\n        var RatiofromOriginalandfixedHeightx2 = OriginalImageWidth / xx2;\n        var NewBoxRatioWidth_LONGIMAGEx2 = OriginalImageHeight / RatiofromOriginalandfixedHeightx2;\n        var xxx2 = myCropHeight * zoom;\n        var RatiofromOriginalandfixedWidthx2 = OriginalImageHeight / xxx2;\n        var NewBoxRatioWidth_WIDEIMAGEx2 = OriginalImageWidth / RatiofromOriginalandfixedWidthx2;\n\n        if (OriginalImageWidth > OriginalImageHeight) {\n          if (OriginalImageHeight === OriginalImageWidth) {\n            requestAnimationFrame(async () => {\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, 0, crop.x);\n\n              try {\n                if (upl === 1) {\n                  var data = cropCanvasRefx.current.toDataURL();\n                  const res = await fetch(data);\n                  const datax = await res.blob();\n                  if (typex === \"Profile\") postProfiledata(datax);\n                }\n              } catch {\n                console.log(\"upload profile pic\");\n              }\n            });\n          } else {\n            requestAnimationFrame(async () => {\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, crop.x, crop.y);\n\n              try {\n                if (upl === 1) {\n                  var data = cropCanvasRefx.current.toDataURL();\n                  const res = await fetch(data);\n                  const datax = await res.blob();\n                  postProfiledata(datax);\n                }\n              } catch {\n                console.log(\"upload profile pic\");\n              }\n            });\n          }\n        } else {\n          if (OriginalImageHeight === OriginalImageWidth) {\n            requestAnimationFrame(async () => {\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, 0, crop.x);\n\n              try {\n                if (upl === 1) {\n                  var data = cropCanvasRefx.current.toDataURL();\n                  const res = await fetch(data);\n                  const datax = await res.blob();\n                  postProfiledata(datax);\n                }\n              } catch {\n                console.log(\"upload profile pic\");\n              }\n            });\n          } else {\n            requestAnimationFrame(async () => {\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, crop.y, crop.x);\n\n              try {\n                if (upl === 1) {\n                  var data = cropCanvasRefx.current.toDataURL();\n                  const res = await fetch(data);\n                  const datax = await res.blob();\n                  postProfiledata(datax);\n                }\n              } catch {\n                console.log(\"upload profile pic\");\n              }\n            });\n          }\n        }\n\n        cropCanvasRefx.current.style.width = `${myCropWidth / hdcanvasvalue}px`;\n        cropCanvasRefx.current.style.height = `${myCropHeight / hdcanvasvalue}px`;\n      } else {\n        requestAnimationFrame(async () => {\n          draw(ctx, 0, 3, 0, crop.x);\n\n          try {\n            if (upl === 1) {\n              var data = cropCanvasRefx.current.toDataURL();\n              const res = await fetch(data);\n              const datax = await res.blob();\n              postProfiledata(datax);\n            }\n          } catch {\n            console.log(\"upload profile pic\");\n          }\n        });\n\n        if (matchTabletMobile && widelongboxmobileimage) {\n          cropCanvasRefx.current.style.width = `${getCropWidthMobile}px`;\n          cropCanvasRefx.current.style.height = `${newcropCSSHeight}px`;\n        } else {\n          cropCanvasRefx.current.style.width = `${newcropCSSWidth}px`;\n          cropCanvasRefx.current.style.height = `${getCropHeightRealImageRatio}px`;\n        }\n      }\n    }\n  };\n\n  useLayoutEffect(() => {\n    drawcropper(0);\n  }, [CropImageHolder, BoxCropActivated, OriginalImageWidth, OriginalImageHeight, widelongboxmobileimage, crop, zoom]);\n\n  const done = () => {\n    drawcropper(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showModalUploadProfile ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: darkmodeReducer ? \"dialog-container\" : \"dialog-container\",\n      style: {\n        padding: \"0px\",\n        height: \"100vh\",\n        position: \"fixed\",\n        zIndex: 100,\n        cursor: \"default\",\n        overflow: \"hidden\"\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        ref: cropscrollRef,\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(DialogContent, {\n          ref: cropTOPLEVELScrollRef,\n          className: matchMobile || matchTablet ? darkmodeReducer ? \" dontallowhighlighting modal-containerDarkmob\" : \" dontallowhighlighting  modal-containerLightmob \" : darkmodeReducer ? \" dontallowhighlighting modal-containerDark  postscroll-dark \" : \" dontallowhighlighting  modal-containerLight  postscroll-light \",\n          style: {\n            padding: \"0px\",\n            height: \"100vh\",\n            overflow: \"hidden\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            style: {\n              padding: \"0px\",\n              bottom: typex === \"Profile\" ? \"13.6vh\" : \"33vh\",\n              margin: \"auto\",\n              width: `100%`,\n              height: \"0px\",\n              position: \"absolute\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              alignContent: \"center\",\n              zIndex: 5,\n              alignSelf: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              style: {\n                padding: \"0px\",\n                height: \"0px\",\n                margin: \"auto\",\n                display: \"grid\",\n                alignItems: \"center\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              style: {\n                padding: \"0px\",\n                height: \"0px\",\n                margin: \"auto\",\n                display: \"grid\",\n                alignItems: \"center\"\n              },\n              children: optionscropshow ? /*#__PURE__*/_jsxDEV(CheckIcon, {\n                onClick: done,\n                className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \",\n                style: {\n                  margin: \"auto\",\n                  fontSize: matchTabletMobile ? \"4.8vh\" : \"2.9vw\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 21\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              style: {\n                padding: \"0px\",\n                height: \"0px\",\n                margin: \"auto\",\n                display: \"grid\",\n                alignItems: \"center\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            style: {\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: cropCanvasRefx,\n              style: {\n                padding: \"0px\",\n                margin: \"auto\",\n                zIndex: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        height: \"100%\",\n        position: \"fixed\",\n        top: \"-800vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getpreviewFixedWidthRef,\n          xs: 5,\n          style: {\n            padding: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getFixedCropWidthRef,\n          xs: 4,\n          style: {\n            padding: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropHeightRef,\n          xs: 12,\n          style: {\n            height: \"92%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropWidthMobileRef,\n          xs: 12,\n          style: {\n            padding: \"0px\",\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropWidthMobileReflong,\n          xs: 12,\n          style: {\n            padding: \"0px\",\n            width: \"150%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropWidthMobileRefHD,\n          style: {\n            padding: \"0px\",\n            width: \"150%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropHeightRefsingle,\n          xs: 12,\n          style: {\n            height: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UploadProfilePicx, \"Ai34XQl/YvICKCMZAxAhJ5BQCMc=\", false, function () {\n  return [useSpring, useSelector, useSelector];\n});\n\n_c = UploadProfilePicx;\nexport const UploadProfilePic = /*#__PURE__*/React.memo(UploadProfilePicx);\n_c2 = UploadProfilePic;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadProfilePicx\");\n$RefreshReg$(_c2, \"UploadProfilePic\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/UploadProfilePic.tsx"],"names":["React","useRef","useCallback","useState","useLayoutEffect","Grid","DialogContent","matchTablet","matchMobile","useSpring","animated","useSelector","Axios","CheckIcon","date","UploadProfilePicx","showModalUploadProfile","cropimageProfile","profileimageSource","typex","cropCanvasRefx","CropImageHolder","setCropImageHolder","hdcanvasvalue","getpreviewFixedWidthRef","getCropHeightRef","getCropWidthMobileRef","getCropWidthMobileReflong","getCropWidthMobileRefHD","getCropHeightRefsingle","getFixedCropWidthRef","myCropWidth","setmyCropWidth","myCropHeight","setmyCropHeight","matchTabletMobile","setmatchTabletMobile","getpreviewFixedWidth","setgetpreviewFixedWidth","screenH","setscreenH","waitONLOAD","setwaitONLOAD","getCropHeightRealImageRatio","setgetCropHeightRealImageRatio","getCropWidthMobile","setgetCropWidthMobile","getCropWidthMobileHD","setgetCropWidthMobileHD","widelongboxmobileimage","setwidelongboxmobileimage","widelongboxmobileimagex","setwidelongboxmobileimagex","OriginalImageWidth","setOriginalImageWidth","OriginalImageHeight","setOriginalImageHeight","cropwidth","setcropwidth","cropheight","setcropheight","WideImageCheck","setWideImageCheck","SourceWidthForCropX","setSourceWidthForCropX","SourceWidthForCropY","setSourceWidthForCropY","BoxCropActivated","setBoxCropActivated","zoom","setzoom","crop","setcrop","x","y","optionscropshow","setoptionscropshow","animation","config","duration","opacity","transform","padding","darkmode","state","GlobalReducer","darkmodeReducer","REACT_APP_SUPERSTARZ_URL","process","env","cropscrollRef","cropTOPLEVELScrollRef","current","clientWidth","clientHeight","length","draw","ctx","dimensions","type","axis","allowZoomedAxis","allowZoomedaxis","aa","drawImage","Newcropimage","Image","src","onload","data1","data2","RatioNewcropimageNaturalHeight","naturalHeight","NewcropimageWidth","naturalWidth","RatioNewcropimageNaturalWidth","NewcropimageHeight","RatioNewcropimageNaturalWidthxx","NewcropimageHeightxx","id","UserdataReducer","idReducer","postbillboardData","a","now","Date","datevalue","format","formData","FormData","datev","append","post","headers","then","response","data","message","alert","catch","error","postProfiledata","drawcropper","upl","getContext","RatiofromOriginalandfixedHeight","NewBoxRatioWidth_WIDEIMAGE","RatiofromOriginalandfixedHeightx","NewBoxRatioWidth_LONGIMAGE","ratioh","ratiow","width","height","centerpreview","xtraZoom","centerCropCanvas","newcropCSSWidth","RatiofromOriginalandfixedWidth","newcropCSSHeight","xx","NewBoxRatioWidth_LONGIMAGEx","xxx","RatiofromOriginalandfixedWidthx","NewBoxRatioWidth_WIDEIMAGEx","xx2","RatiofromOriginalandfixedHeightx2","NewBoxRatioWidth_LONGIMAGEx2","xxx2","RatiofromOriginalandfixedWidthx2","NewBoxRatioWidth_WIDEIMAGEx2","requestAnimationFrame","toDataURL","res","fetch","datax","blob","console","log","style","done","position","zIndex","cursor","overflow","bottom","margin","display","justifyContent","alignItems","alignContent","alignSelf","fontSize","top","UploadProfilePic","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useRef,\r\n  useEffect,\r\n  useCallback,\r\n  useState,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport ControlPointDuplicateIcon from \"@mui/icons-material/ControlPointDuplicate\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport Axios from \"axios\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport date from \"date-and-time\";\r\n\r\nfunction UploadProfilePicx({\r\n  showModalUploadProfile,\r\n  cropimageProfile,\r\n  profileimageSource,\r\n  typex,\r\n}: any): JSX.Element {\r\n  const cropCanvasRefx: any = useRef(null);\r\n\r\n  const [CropImageHolder, setCropImageHolder] = useState<any>(null);\r\n\r\n  const hdcanvasvalue = 1;\r\n\r\n  const getpreviewFixedWidthRef = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropHeightRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropWidthMobileRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropWidthMobileReflong: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropWidthMobileRefHD: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropHeightRefsingle: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getFixedCropWidthRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const [myCropWidth, setmyCropWidth] = useState(0);\r\n\r\n  const [myCropHeight, setmyCropHeight] = useState(0);\r\n\r\n  const [matchTabletMobile, setmatchTabletMobile] = useState<boolean>(false);\r\n\r\n  const [getpreviewFixedWidth, setgetpreviewFixedWidth] = useState(0);\r\n\r\n  const [screenH, setscreenH] = useState(0);\r\n\r\n  const [waitONLOAD, setwaitONLOAD] = useState<boolean>(true);\r\n\r\n  const [getCropHeightRealImageRatio, setgetCropHeightRealImageRatio] =\r\n    useState(0);\r\n\r\n  const [getCropWidthMobile, setgetCropWidthMobile] = useState(0);\r\n\r\n  const [getCropWidthMobileHD, setgetCropWidthMobileHD] = useState(0);\r\n\r\n  const [widelongboxmobileimage, setwidelongboxmobileimage] =\r\n    useState<boolean>(false);\r\n\r\n  const [widelongboxmobileimagex, setwidelongboxmobileimagex] =\r\n    useState<boolean>(false);\r\n\r\n  const [OriginalImageWidth, setOriginalImageWidth] = useState<number>(0);\r\n  const [OriginalImageHeight, setOriginalImageHeight] = useState<number>(0);\r\n\r\n  const [cropwidth, setcropwidth] = useState(0);\r\n\r\n  const [cropheight, setcropheight] = useState(0);\r\n\r\n  const [WideImageCheck, setWideImageCheck] = useState<boolean>(false);\r\n\r\n  const [SourceWidthForCropX, setSourceWidthForCropX] = useState(0);\r\n\r\n  const [SourceWidthForCropY, setSourceWidthForCropY] = useState(0);\r\n\r\n  const [BoxCropActivated, setBoxCropActivated] = useState<boolean>(true);\r\n\r\n  const [zoom, setzoom] = useState<any>(1);\r\n\r\n  const [crop, setcrop] = useState<any>({ x: 0, y: 0 });\r\n  const [optionscropshow, setoptionscropshow] = useState<boolean>(true);\r\n\r\n  //\r\n  //\r\n  //\r\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 600,\r\n    },\r\n    opacity: showModalUploadProfile ? 1 : 0,\r\n    transform: showModalUploadProfile ? `translateY(0%)` : `translateY(-100%)`,\r\n    padding: \"0px\",\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n  const cropscrollRef = useRef<any>(null);\r\n  const cropTOPLEVELScrollRef: any = useRef(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///GET DIMENSIONS AND  SCREEN HEIGHT\r\n  useLayoutEffect(() => {\r\n    if (matchTablet || matchMobile) {\r\n      setmatchTabletMobile(true);\r\n    }\r\n    if (\r\n      getpreviewFixedWidthRef.current &&\r\n      getpreviewFixedWidthRef.current.clientWidth\r\n    ) {\r\n      setgetpreviewFixedWidth(getpreviewFixedWidthRef.current.clientWidth);\r\n    }\r\n\r\n    if (\r\n      getCropHeightRefsingle.current &&\r\n      getCropHeightRefsingle.current.clientHeight\r\n    ) {\r\n      setscreenH(getCropHeightRefsingle.current.clientHeight);\r\n    }\r\n\r\n    if (profileimageSource.length === 1) {\r\n      setwaitONLOAD(false);\r\n      if (\r\n        (getCropHeightRefsingle.current &&\r\n          getCropHeightRefsingle.current.clientHeight) ||\r\n        getCropHeightRef.current\r\n      ) {\r\n        if (matchTabletMobile) {\r\n          setmyCropHeight(\r\n            getCropWidthMobileRef.current.clientWidth * hdcanvasvalue\r\n          );\r\n          setmyCropWidth(\r\n            getCropWidthMobileRef.current.clientWidth * hdcanvasvalue\r\n          );\r\n        } else {\r\n          if (typex === \"Profile\") {\r\n            setmyCropWidth(\r\n              getCropHeightRefsingle.current.clientHeight * hdcanvasvalue\r\n            );\r\n\r\n            setmyCropHeight(\r\n              getCropHeightRefsingle.current.clientHeight * hdcanvasvalue\r\n            );\r\n          } else {\r\n            setmyCropWidth(\r\n              getCropHeightRefsingle.current.clientHeight * hdcanvasvalue +\r\n                getCropHeightRefsingle.current.clientHeight * 0.3\r\n            );\r\n\r\n            setmyCropHeight(\r\n              getCropHeightRefsingle.current.clientHeight * hdcanvasvalue -\r\n                getCropHeightRefsingle.current.clientHeight * 0.2\r\n            );\r\n          }\r\n        }\r\n\r\n        setgetCropHeightRealImageRatio(\r\n          getCropHeightRefsingle.current.clientHeight * hdcanvasvalue\r\n        );\r\n      }\r\n    } else {\r\n      if (getCropHeightRef.current && getCropHeightRef.current.clientHeight) {\r\n        if (matchTabletMobile) {\r\n          setmyCropHeight(\r\n            getCropWidthMobileRef.current.clientWidth * hdcanvasvalue\r\n          );\r\n          setmyCropWidth(\r\n            getCropWidthMobileRef.current.clientWidth * hdcanvasvalue\r\n          );\r\n        } else {\r\n          setmyCropHeight(\r\n            getCropHeightRef.current.clientHeight * hdcanvasvalue\r\n          );\r\n          setmyCropWidth(getCropHeightRef.current.clientHeight * hdcanvasvalue);\r\n        }\r\n\r\n        setgetCropHeightRealImageRatio(getCropHeightRef.current.clientHeight);\r\n      }\r\n    }\r\n\r\n    if (\r\n      getCropWidthMobileRef.current &&\r\n      getCropWidthMobileRef.current.clientWidth\r\n    ) {\r\n      setgetCropWidthMobile(getCropWidthMobileRef.current.clientWidth);\r\n    }\r\n\r\n    if (\r\n      getCropWidthMobileRefHD.current &&\r\n      getCropWidthMobileRefHD.current.clientWidth\r\n    ) {\r\n      setgetCropWidthMobileHD(getCropWidthMobileRefHD.current.clientWidth);\r\n    }\r\n  }, [profileimageSource, typex]);\r\n\r\n  const draw = useCallback(\r\n    (\r\n      ctx: any,\r\n      dimensions: any,\r\n      type: number,\r\n      axis: number,\r\n      allowZoomedAxis: number\r\n    ) => {\r\n      var allowZoomedaxis, aa;\r\n\r\n      if (typex === \"Profile\") {\r\n        aa = -(dimensions * zoom) / 4;\r\n      } else {\r\n        aa = axis;\r\n      }\r\n\r\n      if (zoom === 1) {\r\n        allowZoomedaxis = 0;\r\n      } else {\r\n        allowZoomedaxis = allowZoomedAxis;\r\n      }\r\n      if (type === 1) {\r\n        ctx.drawImage(\r\n          CropImageHolder,\r\n          aa,\r\n          allowZoomedaxis,\r\n          dimensions * zoom,\r\n          myCropHeight * zoom\r\n        );\r\n      } else if (type === 2) {\r\n        ctx.drawImage(\r\n          CropImageHolder,\r\n          allowZoomedaxis,\r\n          axis,\r\n          myCropWidth * zoom,\r\n          dimensions * zoom\r\n        );\r\n      } else {\r\n        ctx.drawImage(\r\n          CropImageHolder,\r\n          0,\r\n          0,\r\n          OriginalImageWidth,\r\n          OriginalImageHeight\r\n        );\r\n      }\r\n    },\r\n    [\r\n      OriginalImageWidth,\r\n      OriginalImageHeight,\r\n      CropImageHolder,\r\n      myCropHeight,\r\n      myCropWidth,\r\n      zoom,\r\n    ]\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    const Newcropimage: any = new Image();\r\n\r\n    Newcropimage.src = cropimageProfile;\r\n    Newcropimage.onload = function () {\r\n      if (CropImageHolder === Newcropimage) {\r\n      } else {\r\n        setCropImageHolder(Newcropimage);\r\n      }\r\n\r\n      var data1: number = 0;\r\n      var data2: number = 0;\r\n\r\n      var RatioNewcropimageNaturalHeight =\r\n        Newcropimage.naturalHeight / myCropHeight;\r\n      var NewcropimageWidth =\r\n        Newcropimage.naturalWidth / RatioNewcropimageNaturalHeight;\r\n\r\n      var RatioNewcropimageNaturalWidth =\r\n        Newcropimage.naturalWidth / getCropWidthMobileHD;\r\n      var NewcropimageHeight =\r\n        Newcropimage.naturalHeight / RatioNewcropimageNaturalWidth;\r\n\r\n      var RatioNewcropimageNaturalWidthxx =\r\n        Newcropimage.naturalWidth / getCropWidthMobile;\r\n      var NewcropimageHeightxx =\r\n        Newcropimage.naturalHeight / RatioNewcropimageNaturalWidthxx;\r\n\r\n      ////// CANVAS  CROPPER DIMENSIONS  PC MOBILE(canvaswidth)\r\n\r\n      if (matchTabletMobile && NewcropimageHeightxx < screenH) {\r\n        setwidelongboxmobileimage(true);\r\n        setwidelongboxmobileimagex(true);\r\n\r\n        if (OriginalImageHeight === NewcropimageHeight) {\r\n        } else {\r\n          setOriginalImageHeight(NewcropimageHeight);\r\n          data2 = NewcropimageHeight;\r\n        }\r\n        //\r\n        if (OriginalImageWidth === getCropWidthMobileHD) {\r\n        } else {\r\n          setOriginalImageWidth(getCropWidthMobileHD);\r\n          data1 = getCropWidthMobileHD;\r\n        }\r\n      } else {\r\n        setwidelongboxmobileimage(false);\r\n        setwidelongboxmobileimagex(false);\r\n        if (OriginalImageWidth === NewcropimageWidth) {\r\n        } else {\r\n          setOriginalImageWidth(NewcropimageWidth);\r\n          data1 = NewcropimageWidth;\r\n        }\r\n        ///\r\n        if (OriginalImageHeight === myCropHeight) {\r\n        } else {\r\n          setOriginalImageHeight(myCropHeight);\r\n          data2 = myCropHeight;\r\n        }\r\n      }\r\n      ////// CANVAS  CROPPER DIMENSIONS  PC MOBILE(canvaswidth)\r\n\r\n      if (Newcropimage.naturalWidth > Newcropimage.naturalHeight) {\r\n        setWideImageCheck(true);\r\n      } else {\r\n        setWideImageCheck(false);\r\n      }\r\n\r\n      if (cropwidth === data1) {\r\n      } else {\r\n        setcropwidth(data1);\r\n      }\r\n\r\n      if (cropheight === data2) {\r\n      } else {\r\n        setcropheight(data2);\r\n      }\r\n    };\r\n  }, [cropimageProfile, showModalUploadProfile]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootUserdataReducer {\r\n    UserdataReducer: {\r\n      id: number;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const { id } = useSelector((state: RootUserdataReducer) => ({\r\n    ...state.UserdataReducer,\r\n  }));\r\n\r\n  const idReducer = id;\r\n\r\n  const postbillboardData = useCallback(\r\n    (a: any) => {\r\n      // Creating object of current date and time\r\n      // by using Date()\r\n      const now = new Date();\r\n\r\n      // Formatting the date and time\r\n      // by using date.format() method\r\n      const datevalue = date.format(now, \"YYYY_MM_DD_HH_mm_ss\");\r\n      let formData = new FormData();\r\n      const datev = new Date();\r\n\r\n      formData.append(\"id\", `${idReducer}`);\r\n\r\n      formData.append(\"finalxxy\", a, `blob${id}${datevalue}`);\r\n\r\n      Axios.post(\r\n        `http://${REACT_APP_SUPERSTARZ_URL}/billboard_upload`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      )\r\n        .then((response) => {\r\n          if (response.data.message === \"billboard image uploaded\") {\r\n            alert(\"done\");\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          alert(\"caption erroerrr\");\r\n        });\r\n    },\r\n    [idReducer]\r\n  );\r\n\r\n  const postProfiledata = useCallback(\r\n    (a: any) => {\r\n      // Creating object of current date and time\r\n      // by using Date()\r\n      const now = new Date();\r\n\r\n      // Formatting the date and time\r\n      // by using date.format() method\r\n      const datevalue = date.format(now, \"YYYY_MM_DD_HH_mm_ss\");\r\n      let formData = new FormData();\r\n      const datev = new Date();\r\n\r\n      formData.append(\"id\", `${idReducer}`);\r\n\r\n      formData.append(\"finalxx\", a, `blob${id}${datevalue}`);\r\n\r\n      Axios.post(\r\n        `http://${REACT_APP_SUPERSTARZ_URL}/profile_upload`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      )\r\n        .then((response) => {\r\n          if (response.data.message === \"profile image uploaded\") {\r\n            alert(\"done\");\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          alert(\"caption erroerrr\");\r\n        });\r\n    },\r\n    [idReducer]\r\n  );\r\n\r\n  const drawcropper = (upl: number) => {\r\n    if (CropImageHolder && cropCanvasRefx.current) {\r\n      const ctx = cropCanvasRefx.current.getContext(\"2d\");\r\n\r\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / myCropHeight;\r\n      var NewBoxRatioWidth_WIDEIMAGE =\r\n        OriginalImageWidth / RatiofromOriginalandfixedHeight;\r\n\r\n      if (SourceWidthForCropX === NewBoxRatioWidth_WIDEIMAGE) {\r\n      } else {\r\n        setSourceWidthForCropX(NewBoxRatioWidth_WIDEIMAGE);\r\n      }\r\n\r\n      var RatiofromOriginalandfixedHeightx = OriginalImageWidth / myCropWidth;\r\n      var NewBoxRatioWidth_LONGIMAGE =\r\n        OriginalImageHeight / RatiofromOriginalandfixedHeightx;\r\n\r\n      if (SourceWidthForCropY === NewBoxRatioWidth_LONGIMAGE) {\r\n      } else {\r\n        setSourceWidthForCropY(NewBoxRatioWidth_LONGIMAGE);\r\n      }\r\n\r\n      var ratioh = (OriginalImageWidth * 3) / OriginalImageWidth;\r\n      var ratiow = (OriginalImageHeight * 3) / OriginalImageHeight;\r\n\r\n      if (BoxCropActivated) {\r\n        cropCanvasRefx.current.width = myCropWidth;\r\n        cropCanvasRefx.current.height = myCropHeight;\r\n      } else {\r\n        cropCanvasRefx.current.width = OriginalImageWidth;\r\n        cropCanvasRefx.current.height = OriginalImageHeight;\r\n      }\r\n\r\n      var centerpreview =\r\n        cropCanvasRefx.current.width / 1.5 - NewBoxRatioWidth_LONGIMAGE / 1.5;\r\n\r\n      var xtraZoom = myCropHeight / NewBoxRatioWidth_WIDEIMAGE;\r\n\r\n      var centerCropCanvas =\r\n        cropCanvasRefx.current.width / 2 - NewBoxRatioWidth_WIDEIMAGE / 2;\r\n\r\n      //////////////////////////CSS CALCULATION MOBILE PC\r\n      var RatiofromOriginalandfixedHeight =\r\n        OriginalImageHeight / getCropHeightRealImageRatio;\r\n      var newcropCSSWidth =\r\n        OriginalImageWidth / RatiofromOriginalandfixedHeight;\r\n      ///\r\n      var RatiofromOriginalandfixedWidth =\r\n        OriginalImageWidth / getCropWidthMobile;\r\n      var newcropCSSHeight =\r\n        OriginalImageHeight / RatiofromOriginalandfixedWidth;\r\n      //////////////////////////CSS CALCULATION MOBILE PC\r\n\r\n      if (BoxCropActivated) {\r\n        var xx = myCropWidth * zoom;\r\n        var RatiofromOriginalandfixedHeightx = OriginalImageWidth / xx;\r\n        var NewBoxRatioWidth_LONGIMAGEx =\r\n          OriginalImageHeight / RatiofromOriginalandfixedHeightx;\r\n\r\n        var xxx = NewBoxRatioWidth_LONGIMAGE * zoom;\r\n        var RatiofromOriginalandfixedWidthx = OriginalImageHeight / xxx;\r\n        var NewBoxRatioWidth_WIDEIMAGEx =\r\n          OriginalImageWidth / RatiofromOriginalandfixedWidthx;\r\n\r\n        var xx2 = NewBoxRatioWidth_WIDEIMAGE * zoom;\r\n        var RatiofromOriginalandfixedHeightx2 = OriginalImageWidth / xx2;\r\n        var NewBoxRatioWidth_LONGIMAGEx2 =\r\n          OriginalImageHeight / RatiofromOriginalandfixedHeightx2;\r\n\r\n        var xxx2 = myCropHeight * zoom;\r\n        var RatiofromOriginalandfixedWidthx2 = OriginalImageHeight / xxx2;\r\n        var NewBoxRatioWidth_WIDEIMAGEx2 =\r\n          OriginalImageWidth / RatiofromOriginalandfixedWidthx2;\r\n\r\n        if (OriginalImageWidth > OriginalImageHeight) {\r\n          if (OriginalImageHeight === OriginalImageWidth) {\r\n            requestAnimationFrame(async () => {\r\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, 0, crop.x);\r\n              try {\r\n                if (upl === 1) {\r\n                  var data = cropCanvasRefx.current.toDataURL();\r\n                  const res = await fetch(data);\r\n                  const datax = await res.blob();\r\n\r\n                  if (typex ===\"Profile\") postProfiledata(datax);\r\n                }\r\n              } catch {\r\n                console.log(\"upload profile pic\");\r\n              }\r\n            });\r\n          } else {\r\n            requestAnimationFrame(async () => {\r\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, crop.x, crop.y);\r\n              try {\r\n                if (upl === 1) {\r\n                  var data = cropCanvasRefx.current.toDataURL();\r\n                  const res = await fetch(data);\r\n                  const datax = await res.blob();\r\n                  postProfiledata(datax);\r\n                }\r\n              } catch {\r\n                console.log(\"upload profile pic\");\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          if (OriginalImageHeight === OriginalImageWidth) {\r\n            requestAnimationFrame(async () => {\r\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, 0, crop.x);\r\n\r\n              try {\r\n                if (upl === 1) {\r\n                  var data = cropCanvasRefx.current.toDataURL();\r\n                  const res = await fetch(data);\r\n                  const datax = await res.blob();\r\n                  postProfiledata(datax);\r\n                }\r\n              } catch {\r\n                console.log(\"upload profile pic\");\r\n              }\r\n            });\r\n          } else {\r\n            requestAnimationFrame(async () => {\r\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, crop.y, crop.x);\r\n\r\n              try {\r\n                if (upl === 1) {\r\n                  var data = cropCanvasRefx.current.toDataURL();\r\n                  const res = await fetch(data);\r\n                  const datax = await res.blob();\r\n                  postProfiledata(datax);\r\n                }\r\n              } catch {\r\n                console.log(\"upload profile pic\");\r\n              }\r\n            });\r\n          }\r\n        }\r\n\r\n        cropCanvasRefx.current.style.width = `${myCropWidth / hdcanvasvalue}px`;\r\n        cropCanvasRefx.current.style.height = `${\r\n          myCropHeight / hdcanvasvalue\r\n        }px`;\r\n      } else {\r\n        requestAnimationFrame(async () => {\r\n          draw(ctx, 0, 3, 0, crop.x);\r\n\r\n          try {\r\n            if (upl === 1) {\r\n              var data = cropCanvasRefx.current.toDataURL();\r\n              const res = await fetch(data);\r\n              const datax = await res.blob();\r\n              postProfiledata(datax);\r\n            }\r\n          } catch {\r\n            console.log(\"upload profile pic\");\r\n          }\r\n        });\r\n\r\n        if (matchTabletMobile && widelongboxmobileimage) {\r\n          cropCanvasRefx.current.style.width = `${getCropWidthMobile}px`;\r\n          cropCanvasRefx.current.style.height = `${newcropCSSHeight}px`;\r\n        } else {\r\n          cropCanvasRefx.current.style.width = `${newcropCSSWidth}px`;\r\n          cropCanvasRefx.current.style.height = `${getCropHeightRealImageRatio}px`;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    drawcropper(0);\r\n  }, [\r\n    CropImageHolder,\r\n    BoxCropActivated,\r\n    OriginalImageWidth,\r\n    OriginalImageHeight,\r\n    widelongboxmobileimage,\r\n    crop,\r\n    zoom,\r\n  ]);\r\n\r\n  const done = () => {\r\n    drawcropper(1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModalUploadProfile ? (\r\n        <DialogContent\r\n          className={darkmodeReducer ? \"dialog-container\" : \"dialog-container\"}\r\n          style={{\r\n            padding: \"0px\",\r\n            height: \"100vh\",\r\n            position: \"fixed\",\r\n            zIndex: 100,\r\n            cursor: \"default\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          <animated.div ref={cropscrollRef} style={animation}>\r\n            <DialogContent\r\n              ref={cropTOPLEVELScrollRef}\r\n              className={\r\n                matchMobile || matchTablet\r\n                  ? darkmodeReducer\r\n                    ? \" dontallowhighlighting modal-containerDarkmob\"\r\n                    : \" dontallowhighlighting  modal-containerLightmob \"\r\n                  : darkmodeReducer\r\n                  ? \" dontallowhighlighting modal-containerDark  postscroll-dark \"\r\n                  : \" dontallowhighlighting  modal-containerLight  postscroll-light \"\r\n              }\r\n              style={{\r\n                padding: \"0px\",\r\n                height: \"100vh\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              <Grid\r\n                container\r\n                style={{\r\n                  padding: \"0px\",\r\n                  bottom: typex === \"Profile\" ? \"13.6vh\" : \"33vh\",\r\n                  margin: \"auto\",\r\n                  width: `100%`,\r\n                  height: \"0px\",\r\n                  position: \"absolute\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  alignContent: \"center\",\r\n                  zIndex: 5,\r\n                  alignSelf: \"center\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={4}\r\n                  style={{\r\n                    padding: \"0px\",\r\n                    height: \"0px\",\r\n                    margin: \"auto\",\r\n                    display: \"grid\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                ></Grid>\r\n\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{\r\n                    padding: \"0px\",\r\n                    height: \"0px\",\r\n                    margin: \"auto\",\r\n                    display: \"grid\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  {optionscropshow ? (\r\n                    <CheckIcon\r\n                      onClick={done}\r\n                      className={\r\n                        darkmodeReducer\r\n                          ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \"\r\n                          : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \"\r\n                      }\r\n                      style={{\r\n                        margin: \"auto\",\r\n\r\n                        fontSize: matchTabletMobile ? \"4.8vh\" : \"2.9vw\",\r\n                      }}\r\n                    />\r\n                  ) : null}\r\n                </Grid>\r\n\r\n                <Grid\r\n                  item\r\n                  xs={4}\r\n                  style={{\r\n                    padding: \"0px\",\r\n                    height: \"0px\",\r\n                    margin: \"auto\",\r\n                    display: \"grid\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                ></Grid>\r\n              </Grid>\r\n              <Grid container style={{ width: \"100%\" }}>\r\n                <canvas\r\n                  ref={cropCanvasRefx}\r\n                  style={{\r\n                    padding: \"0px\",\r\n                    margin: \"auto\",\r\n\r\n                    zIndex: 2,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </DialogContent>\r\n          </animated.div>\r\n        </DialogContent>\r\n      ) : null}\r\n\r\n      <Grid\r\n        container\r\n        style={{ height: \"100%\", position: \"fixed\", top: \"-800vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            padding: \"0px\",\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            ref={getpreviewFixedWidthRef}\r\n            xs={5}\r\n            style={{\r\n              padding: \"0px\",\r\n            }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getFixedCropWidthRef}\r\n            xs={4}\r\n            style={{\r\n              padding: \"0px\",\r\n            }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropHeightRef}\r\n            xs={12}\r\n            style={{ height: \"92%\" }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropWidthMobileRef}\r\n            xs={12}\r\n            style={{ padding: \"0px\", width: \"100%\" }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropWidthMobileReflong}\r\n            xs={12}\r\n            style={{ padding: \"0px\", width: \"150%\" }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropWidthMobileRefHD}\r\n            style={{ padding: \"0px\", width: \"150%\" }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropHeightRefsingle}\r\n            xs={12}\r\n            style={{ height: \"100%\" }}\r\n          ></Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const UploadProfilePic = React.memo(UploadProfilePicx);\r\n"]},"metadata":{},"sourceType":"module"}