{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\Taskbar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback, useState, useLayoutEffect } from \"react\";\nimport { Grid, DialogContent } from \"@material-ui/core\";\nimport { matchPc } from \"../DetectDevice\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Masonry from \"@mui/lab/Masonry\";\nimport { UpdateUploadData } from \"../GlobalActions\";\nimport DoneIcon from '@mui/icons-material/Done';\nimport CropIcon from '@mui/icons-material/Crop';\nimport Slider from \"@material-ui/core/Slider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Taskbarx({\n  showModalUploadTask,\n  uploadClose\n}) {\n  _s();\n\n  const dispatch = useDispatch(); ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const animation = useSpring({\n    config: {\n      duration: 600\n    },\n    opacity: showModalUploadTask ? 1 : 0,\n    transform: showModalUploadTask ? `translateX(0%)` : `translateX(-100%)`,\n    padding: \"0px\"\n  });\n  const cropCanvasRef = useRef(null);\n  const navRef = useRef(null);\n  const IconRef = useRef(null);\n  const IconRef2 = useRef(null);\n  const [allowCropAllCanvas, setallowCropAllCanvas] = useState(true);\n  const [CropImageHolder, setCropImageHolder] = useState(null);\n  const [imageHeight, setimageHeight] = useState(0);\n  const [imageWidth, setimageWidth] = useState(0);\n  const [Box, setBox] = useState(false);\n  const [cropInitial, setcropInitial] = useState({\n    x: 0,\n    y: 0\n  });\n  const [cropInitialx, setcropInitialx] = useState({\n    x: 0,\n    y: 0\n  });\n  const [cropOffset, setcropOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [Drag, setDrag] = useState(false);\n  const [crop, setcrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const allowscrolltimer = useRef(null);\n  var extendxy = 3.3;\n  const [allowOverflow, setallowOverflow] = useState(false);\n  const [optionscropshow, setoptionscropshow] = useState(true);\n  const [optionscropshow2, setoptionscropshow2] = useState(true);\n  const [zoom, setzoom] = useState(2);\n  const [multiPost, setmultiPost] = useState(false);\n  const [prevImage, setprevimage] = useState([]);\n  const menuTimer5 = useRef(null);\n\n  const updatezoom = (e, data) => {\n    setoptionscropshow2(false);\n    setzoom(data);\n    handleTouchDrag(null, 1000);\n  };\n\n  const {\n    activatefilterImage,\n    activatecropImage,\n    selectedImage,\n    cropimage\n  } = useSelector(state => ({ ...state.GlobalNavuploadReducer\n  }));\n  const activatefilterImageReducer = activatefilterImage;\n  const activatecropImageReducer = activatecropImage;\n  const selectedImageReducer = selectedImage;\n  const cropimageReducer = cropimage;\n  useEffect(() => {\n    const ctx = cropCanvasRef.current.getContext(\"2d\");\n    ctx.clearRect(0, 0, cropCanvasRef.current.width, cropCanvasRef.current.height);\n    setzoom(2);\n    setBox(false);\n    setcrop({ ...crop,\n      x: 0,\n      y: 0\n    });\n  }, [CropImageHolder, showModalUploadTask]);\n  useEffect(() => {\n    setBox(false);\n  }, []);\n  useEffect(() => {\n    setprevimage(selectedImageReducer);\n  }, [selectedImageReducer]);\n  useEffect(() => {\n    if (prevImage.length > 1) {\n      setmultiPost(true);\n    }\n  }, [prevImage]);\n  const resizeCanvas = useCallback(() => {\n    var imgAspectRatio = cropCanvasRef.current.width / cropCanvasRef.current.height;\n    var screenW = navRef.current.clientWidth;\n    var screenH = navRef.current.clientHeight;\n    let canvasW = screenW;\n    let canvasH = screenH;\n\n    if (imgAspectRatio >= 2.2 || imgAspectRatio <= 0.464) {\n      if (menuTimer5.current) {\n        clearTimeout(menuTimer5.current);\n      }\n\n      menuTimer5.current = setTimeout(function () {\n        setBox(true);\n      }, 3000);\n    }\n\n    if (imgAspectRatio <= 1.63) {\n      canvasH = screenH;\n      canvasW = canvasH * imgAspectRatio;\n    } else {\n      canvasW = screenW;\n      canvasH = canvasW / imgAspectRatio;\n    }\n\n    cropCanvasRef.current.style.height = `${canvasH}px`;\n    cropCanvasRef.current.style.width = `${canvasW}px`;\n    IconRef.current.style.top = `${canvasH / 1.19}px`;\n    IconRef2.current.style.top = `${canvasH / 1.19}px`;\n  }, [cropCanvasRef]);\n\n  function GiveImageSpecificDimensions(Newcropimage) {\n    const imgAspectRatio = Newcropimage.naturalWidth / Newcropimage.naturalHeight;\n    var canvasW;\n    var canvasH;\n\n    if (imgAspectRatio <= 1.55) {\n      var screenH = 1920;\n      canvasH = screenH;\n      canvasH = screenH;\n      canvasW = canvasH * imgAspectRatio;\n    } else {\n      var screenW = 2048;\n      canvasW = screenW;\n      canvasW = screenW;\n      canvasH = canvasW / imgAspectRatio;\n    }\n\n    setimageHeight(canvasH);\n    setimageWidth(canvasW);\n  }\n\n  useLayoutEffect(() => {\n    const Newcropimage = new Image();\n    Newcropimage.src = cropimageReducer;\n\n    Newcropimage.onload = function () {\n      if (CropImageHolder === Newcropimage) {} else {\n        //////////////\n        setCropImageHolder(Newcropimage);\n        GiveImageSpecificDimensions(Newcropimage);\n      }\n    };\n  }, [cropimageReducer]);\n  useLayoutEffect(() => {\n    if (CropImageHolder && cropCanvasRef.current) {\n      const ctx = cropCanvasRef.current.getContext(\"2d\");\n      const imgAspectRatio = imageWidth / imageHeight; ////////////////////////\n\n      var a = 1.2;\n      var b = 0.8;\n\n      if (zoom <= 1) {\n        a = 1.2;\n        b = 0.8;\n      } else if (zoom <= 2) {\n        a = 1;\n        b = 1;\n      } else if (zoom <= 3) {\n        a = 1.2;\n        b = 1.2;\n      } else if (zoom <= 4) {\n        a = 1.4;\n        b = 1.4;\n      } else {}\n\n      if (Box) {\n        if (imgAspectRatio === 1) {\n          if (zoom > 2) {\n            cropCanvasRef.current.width = imageWidth / a;\n            cropCanvasRef.current.height = imageWidth / a;\n          } else {\n            cropCanvasRef.current.width = imageWidth;\n            cropCanvasRef.current.height = imageWidth;\n          }\n        } else if (imgAspectRatio <= 1.2) {\n          if (zoom > 2) {\n            cropCanvasRef.current.width = imageWidth / a;\n            cropCanvasRef.current.height = imageWidth / a;\n          } else {\n            cropCanvasRef.current.width = imageWidth / a;\n            cropCanvasRef.current.height = imageWidth * a;\n          }\n        } else {\n          if (zoom > 2) {\n            cropCanvasRef.current.width = imageHeight / b;\n            cropCanvasRef.current.height = imageHeight / b;\n          } else {\n            cropCanvasRef.current.width = imageHeight / b;\n            cropCanvasRef.current.height = imageHeight;\n          }\n        }\n      } else {\n        cropCanvasRef.current.width = imageWidth;\n        cropCanvasRef.current.height = imageHeight;\n      } ////////////////////////////////\n\n\n      resizeCanvas();\n      const w = imageWidth;\n      const h = imageHeight;\n      requestAnimationFrame(() => {\n        if (Box) {\n          ctx.drawImage(CropImageHolder, crop.x, crop.y, w, h);\n        } else {\n          ctx.drawImage(CropImageHolder, 0, 0, w, h);\n        }\n      });\n    }\n  }, [CropImageHolder, imageWidth, imageHeight, Box, crop, zoom, cropCanvasRef]);\n\n  const handleTouchStart = (e, type) => {\n    if (Box) {\n      setoptionscropshow(false);\n\n      if (type === 0) {\n        setcropInitial({ ...cropInitial,\n          x: e.clientX * extendxy - cropOffset.x,\n          y: e.clientY * extendxy - cropOffset.y\n        });\n      } else {\n        setcropInitial({ ...cropInitial,\n          x: e.touches[0].clientX * extendxy - cropOffset.x,\n          y: e.touches[0].clientY * extendxy - cropOffset.y\n        });\n      }\n\n      if (e.target) {\n        setDrag(true);\n      }\n    } else {\n      setBox(true);\n    }\n  };\n\n  const handleTouchEnd = () => {\n    if (allowscrolltimer.current) {\n      clearTimeout(allowscrolltimer.current);\n    }\n\n    allowscrolltimer.current = setTimeout(function () {}, 1200);\n    setoptionscropshow(true);\n    setcropInitial({ ...cropInitial,\n      x: crop.x,\n      y: crop.y\n    });\n    setDrag(false);\n  };\n\n  const handleTouchDrag = (e, type) => {\n    if (Drag || type === 1000) {\n      var xx = cropInitial.x;\n      var yy = cropInitial.y;\n\n      if (e) {\n        if (type === 0) {\n          xx = e.clientX * extendxy - cropInitial.x;\n          yy = e.clientY * extendxy - cropInitial.y;\n        } else {\n          xx = e.touches[0].clientX * extendxy - cropInitial.x;\n          yy = e.touches[0].clientY * extendxy - cropInitial.y;\n        }\n      } ///////////////////////////////////////////////\n\n\n      var fz = imageWidth - cropCanvasRef.current.width;\n      fz *= -1;\n\n      if (xx > 0) {\n        xx = 0;\n      } else if (xx < fz) {\n        xx = fz;\n      } //////////////////////////////\n\n\n      var ff = imageHeight - cropCanvasRef.current.height;\n      ff *= -1;\n\n      if (yy > 0) {\n        yy = 0;\n      } else if (yy < ff) {\n        yy = ff;\n      } //////////////////////////////////\n\n\n      setcrop({ ...crop,\n        x: xx,\n        y: yy\n      });\n      setcropOffset({ ...cropOffset,\n        x: xx,\n        y: yy\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(animated.div, {\n      className: matchPc ? darkmodeReducer ? \"postscroll-dark modal-containerDark\" : \"postscroll-light modal-containerLight\" : darkmodeReducer ? \"postscroll-darkm modal-containerDark\" : \"postscroll-lightm  modal-containerLight\",\n      style: { ...animation,\n        width: '94%',\n        height: \"100vh\",\n        position: \"fixed\",\n        top: '-0vh',\n        zIndex: 100,\n        cursor: \"default\",\n        overflow: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n        style: {\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          style: {\n            padding: \"0px\",\n            width: '100%',\n            height: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            ref: navRef,\n            item: true,\n            xs: 12,\n            style: {\n              padding: \"0px\",\n              width: '94%',\n              height: multiPost ? \"80%\" : '100%',\n              position: 'fixed',\n              top: '-20000000000px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this), optionscropshow ? /*#__PURE__*/_jsxDEV(Slider, {\n            value: zoom,\n            onChange: updatezoom,\n            onChangeCommitted: () => {\n              setoptionscropshow2(true);\n            },\n            defaultValue: 1,\n            max: 4,\n            min: 0,\n            step: 0.0000000000000000000000000000000000000000000001,\n            style: {\n              opacity: optionscropshow2 ? 0.7 : 0.45,\n              display: Box ? 'block' : 'none',\n              width: '8%',\n              left: '47%',\n              top: '5vh',\n              position: 'fixed'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 32\n          }, this) : null, allowCropAllCanvas ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n            onMouseOver: () => {///mouseover(0);\n            },\n            onMouseUp: e => {\n              handleTouchEnd();\n            },\n            onTouchEnd: e => {\n              handleTouchEnd();\n            },\n            onMouseDown: e => {\n              handleTouchStart(e, 0);\n            },\n            onTouchStart: e => {\n              handleTouchStart(e, 1);\n            },\n            onMouseMove: e => {\n              handleTouchDrag(e, 0);\n            },\n            onTouchMove: e => {\n              handleTouchDrag(e, 1);\n            },\n            ref: cropCanvasRef,\n            style: {\n              padding: \"0px\",\n              margin: \"auto\",\n              cursor: \"pointer\",\n              overflow: 'hidden'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(DoneIcon, {\n            ref: IconRef,\n            className: darkmodeReducer ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-lightab  dontallowhighlighting zuperkingIcon  \",\n            style: {\n              color: \"#ffffff\",\n              fontSize: \"3.1vw\",\n              position: \"absolute\",\n              opacity: optionscropshow2 ? 0.94 : 0,\n              left: '43%',\n              right: \"\",\n              display: optionscropshow ? 'block' : 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CropIcon, {\n            onClick: () => {\n              if (Box) {\n                setBox(false);\n              } else {\n                setBox(true);\n              }\n            },\n            ref: IconRef2,\n            className: darkmodeReducer ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-lightab  dontallowhighlighting zuperkingIcon  \",\n            style: {\n              color: \"#ffffff\",\n              fontSize: \"2.9vw\",\n              position: \"absolute\",\n              bottom: '5vh',\n              opacity: optionscropshow2 ? 0.94 : 0,\n              right: '43%',\n              display: optionscropshow ? 'block' : 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              padding: \"0px\"\n            },\n            children: prevImage.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Masonry, {\n                columns: 2,\n                spacing: 0,\n                style: {\n                  padding: \"0px\",\n                  overflow: 'hidden'\n                },\n                children: prevImage.map((picture, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n                  onClick: () => {\n                    dispatch(UpdateUploadData(prevImage, picture));\n                    navRef.current.scrollIntoView({\n                      behavior: \"smooth\",\n                      block: \"start\"\n                    });\n                  },\n                  style: {\n                    width: '50%',\n                    cursor: 'pointer'\n                  },\n                  src: picture,\n                  alt: `Image ${index}`\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 41\n              }, this)\n            }, void 0, false) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Taskbarx, \"fpWb6jc/yZOJGak74YkzivkdWiY=\", false, function () {\n  return [useDispatch, useSelector, useSpring, useSelector];\n});\n\n_c = Taskbarx;\nexport const Taskbar = /*#__PURE__*/React.memo(Taskbarx);\n_c2 = Taskbar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Taskbarx\");\n$RefreshReg$(_c2, \"Taskbar\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/Taskbar.tsx"],"names":["React","useRef","useEffect","useCallback","useState","useLayoutEffect","Grid","DialogContent","matchPc","useSpring","animated","useSelector","useDispatch","Masonry","UpdateUploadData","DoneIcon","CropIcon","Slider","Taskbarx","showModalUploadTask","uploadClose","dispatch","darkmode","state","GlobalReducer","darkmodeReducer","animation","config","duration","opacity","transform","padding","cropCanvasRef","navRef","IconRef","IconRef2","allowCropAllCanvas","setallowCropAllCanvas","CropImageHolder","setCropImageHolder","imageHeight","setimageHeight","imageWidth","setimageWidth","Box","setBox","cropInitial","setcropInitial","x","y","cropInitialx","setcropInitialx","cropOffset","setcropOffset","Drag","setDrag","crop","setcrop","allowscrolltimer","extendxy","allowOverflow","setallowOverflow","optionscropshow","setoptionscropshow","optionscropshow2","setoptionscropshow2","zoom","setzoom","multiPost","setmultiPost","prevImage","setprevimage","menuTimer5","updatezoom","e","data","handleTouchDrag","activatefilterImage","activatecropImage","selectedImage","cropimage","GlobalNavuploadReducer","activatefilterImageReducer","activatecropImageReducer","selectedImageReducer","cropimageReducer","ctx","current","getContext","clearRect","width","height","length","resizeCanvas","imgAspectRatio","screenW","clientWidth","screenH","clientHeight","canvasW","canvasH","clearTimeout","setTimeout","style","top","GiveImageSpecificDimensions","Newcropimage","naturalWidth","naturalHeight","Image","src","onload","a","b","w","h","requestAnimationFrame","drawImage","handleTouchStart","type","clientX","clientY","touches","target","handleTouchEnd","xx","yy","fz","ff","position","zIndex","cursor","overflow","display","left","margin","color","fontSize","right","bottom","map","picture","index","scrollIntoView","behavior","block","Taskbar","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,MADF,EAEEC,SAFF,EAGEC,WAHF,EAIEC,QAJF,EAKEC,eALF,QAMO,OANP;AAQA,SAASC,IAAT,EAAuBC,aAAvB,QAA4C,mBAA5C;AACA,SAASC,OAAT,QAAkD,iBAAlD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AAEA,SAAyBC,WAAzB,EAAsCC,WAAtC,QAAyD,aAAzD;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAUA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;;AAGA,SAASC,QAAT,CAAkB;AAChBC,EAAAA,mBADgB;AAEhBC,EAAAA;AAFgB,CAAlB,EAIqB;AAAA;;AACnB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B,CADmB,CAMnB;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAeX,WAAW,CAAEY,KAAD,KAAoC,EACnE,GAAGA,KAAK,CAACC;AAD0D,GAApC,CAAD,CAAhC;AAGA,QAAMC,eAAe,GAAGH,QAAxB;AAGA,QAAMI,SAAS,GAAGjB,SAAS,CAAC;AAC1BkB,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADkB;AAI1BC,IAAAA,OAAO,EAAEV,mBAAmB,GAAG,CAAH,GAAO,CAJT;AAK1BW,IAAAA,SAAS,EAAEX,mBAAmB,GAAI,gBAAJ,GAAuB,mBAL3B;AAM1BY,IAAAA,OAAO,EAAE;AANiB,GAAD,CAA3B;AAaA,QAAMC,aAAkB,GAAG/B,MAAM,CAAC,IAAD,CAAjC;AAEA,QAAMgC,MAAW,GAAGhC,MAAM,CAAC,IAAD,CAA1B;AAEA,QAAMiC,OAAY,GAAGjC,MAAM,CAAC,IAAD,CAA3B;AAEA,QAAMkC,QAAa,GAAGlC,MAAM,CAAC,IAAD,CAA5B;AAEA,QAAM,CAACmC,kBAAD,EAAqBC,qBAArB,IAA8CjC,QAAQ,CAAU,IAAV,CAA5D;AAEA,QAAM,CAACkC,eAAD,EAAkBC,kBAAlB,IAAwCnC,QAAQ,CAAM,IAAN,CAAtD;AAEA,QAAM,CAACoC,WAAD,EAAcC,cAAd,IAAgCrC,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACsC,UAAD,EAAaC,aAAb,IAA8BvC,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAM,CAACwC,GAAD,EAAMC,MAAN,IAAgBzC,QAAQ,CAAU,KAAV,CAA9B;AAGA,QAAM,CAAC0C,WAAD,EAAcC,cAAd,IAAgC3C,QAAQ,CAAM;AAAE4C,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAN,CAA9C;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC/C,QAAQ,CAAM;AAAE4C,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAN,CAAhD;AAEA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BjD,QAAQ,CAAM;AAAE4C,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAN,CAA5C;AAEA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBnD,QAAQ,CAAU,KAAV,CAAhC;AAEA,QAAM,CAACoD,IAAD,EAAOC,OAAP,IAAkBrD,QAAQ,CAAM;AAAE4C,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAN,CAAhC;AAEA,QAAMS,gBAAgB,GAAGzD,MAAM,CAAuC,IAAvC,CAA/B;AAEA,MAAI0D,QAAQ,GAAG,GAAf;AAEA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCzD,QAAQ,CAAU,KAAV,CAAlD;AAEA,QAAM,CAAC0D,eAAD,EAAkBC,kBAAlB,IAAwC3D,QAAQ,CAAU,IAAV,CAAtD;AAEA,QAAM,CAAC4D,gBAAD,EAAmBC,mBAAnB,IAA0C7D,QAAQ,CAAU,IAAV,CAAxD;AAEA,QAAM,CAAC8D,IAAD,EAAOC,OAAP,IAAkB/D,QAAQ,CAAM,CAAN,CAAhC;AAEA,QAAM,CAACgE,SAAD,EAAYC,YAAZ,IAA4BjE,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM,CAACkE,SAAD,EAAYC,YAAZ,IAA4BnE,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMoE,UAAU,GAAGvE,MAAM,CAAuC,IAAvC,CAAzB;;AAKA,QAAMwE,UAAU,GAAG,CAACC,CAAD,EAASC,IAAT,KAAuB;AACxCV,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAE,IAAAA,OAAO,CAACQ,IAAD,CAAP;AACAC,IAAAA,eAAe,CAAC,IAAD,EAAO,IAAP,CAAf;AACD,GAJD;;AAWA,QAAM;AAAEC,IAAAA,mBAAF;AAAuBC,IAAAA,iBAAvB;AAA0CC,IAAAA,aAA1C;AAAyDC,IAAAA;AAAzD,MAAuErE,WAAW,CACrFY,KAAD,KAA4B,EAC1B,GAAGA,KAAK,CAAC0D;AADiB,GAA5B,CADsF,CAAxF;AAKA,QAAMC,0BAA0B,GAAGL,mBAAnC;AACA,QAAMM,wBAAwB,GAAGL,iBAAjC;AACA,QAAMM,oBAAoB,GAAGL,aAA7B;AACA,QAAMM,gBAAgB,GAAGL,SAAzB;AAGA9E,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoF,GAAG,GAAGtD,aAAa,CAACuD,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAZ;AACAF,IAAAA,GAAG,CAACG,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBzD,aAAa,CAACuD,OAAd,CAAsBG,KAA1C,EAAiD1D,aAAa,CAACuD,OAAd,CAAsBI,MAAvE;AACAxB,IAAAA,OAAO,CAAC,CAAD,CAAP;AACAtB,IAAAA,MAAM,CAAC,KAAD,CAAN;AACAY,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAENR,MAAAA,CAAC,EAAE,CAFG;AAGNC,MAAAA,CAAC,EAAE;AAHG,KAAD,CAAP;AAOD,GAZQ,EAYN,CAACX,eAAD,EAAkBnB,mBAAlB,CAZM,CAAT;AAcAjB,EAAAA,SAAS,CAAC,MAAM;AAEd2C,IAAAA,MAAM,CAAC,KAAD,CAAN;AACD,GAHQ,EAGN,EAHM,CAAT;AAOA3C,EAAAA,SAAS,CAAC,MAAM;AACdqE,IAAAA,YAAY,CAACa,oBAAD,CAAZ;AAED,GAHQ,EAGN,CAACA,oBAAD,CAHM,CAAT;AAMAlF,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAIoE,SAAS,CAACsB,MAAV,GAAmB,CAAvB,EAA0B;AACxBvB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AAEF,GANQ,EAMN,CAACC,SAAD,CANM,CAAT;AAeA,QAAMuB,YAAY,GAAG1F,WAAW,CAAC,MAAM;AACrC,QAAI2F,cAAc,GAAG9D,aAAa,CAACuD,OAAd,CAAsBG,KAAtB,GAA8B1D,aAAa,CAACuD,OAAd,CAAsBI,MAAzE;AAEA,QAAII,OAAO,GAAG9D,MAAM,CAACsD,OAAP,CAAeS,WAA7B;AACA,QAAIC,OAAO,GAAGhE,MAAM,CAACsD,OAAP,CAAeW,YAA7B;AACA,QAAIC,OAAO,GAAGJ,OAAd;AACA,QAAIK,OAAO,GAAGH,OAAd;;AAEA,QAAIH,cAAc,IAAI,GAAlB,IAAyBA,cAAc,IAAI,KAA/C,EAAsD;AAIpD,UAAItB,UAAU,CAACe,OAAf,EAAwB;AACtBc,QAAAA,YAAY,CAAC7B,UAAU,CAACe,OAAZ,CAAZ;AACD;;AACDf,MAAAA,UAAU,CAACe,OAAX,GAAqBe,UAAU,CAAC,YAAY;AAC1CzD,QAAAA,MAAM,CAAC,IAAD,CAAN;AACD,OAF8B,EAE5B,IAF4B,CAA/B;AAOD;;AAED,QAAIiD,cAAc,IAAI,IAAtB,EAA4B;AAC1BM,MAAAA,OAAO,GAAGH,OAAV;AACAE,MAAAA,OAAO,GAAGC,OAAO,GAAGN,cAApB;AACD,KAHD,MAGO;AACLK,MAAAA,OAAO,GAAGJ,OAAV;AACAK,MAAAA,OAAO,GAAGD,OAAO,GAAGL,cAApB;AACD;;AACD9D,IAAAA,aAAa,CAACuD,OAAd,CAAsBgB,KAAtB,CAA4BZ,MAA5B,GAAsC,GAAES,OAAQ,IAAhD;AACApE,IAAAA,aAAa,CAACuD,OAAd,CAAsBgB,KAAtB,CAA4Bb,KAA5B,GAAqC,GAAES,OAAQ,IAA/C;AAEAjE,IAAAA,OAAO,CAACqD,OAAR,CAAgBgB,KAAhB,CAAsBC,GAAtB,GAA6B,GAAEJ,OAAO,GAAG,IAAK,IAA9C;AACAjE,IAAAA,QAAQ,CAACoD,OAAT,CAAiBgB,KAAjB,CAAuBC,GAAvB,GAA8B,GAAEJ,OAAO,GAAG,IAAK,IAA/C;AACD,GApC+B,EAoC7B,CAACpE,aAAD,CApC6B,CAAhC;;AA0CA,WAASyE,2BAAT,CAAqCC,YAArC,EAAwD;AACtD,UAAMZ,cAAc,GAAGY,YAAY,CAACC,YAAb,GAA4BD,YAAY,CAACE,aAAhE;AAEA,QAAIT,OAAJ;AACA,QAAIC,OAAJ;;AACA,QAAIN,cAAc,IAAI,IAAtB,EAA4B;AAC1B,UAAIG,OAAO,GAAG,IAAd;AACAG,MAAAA,OAAO,GAAGH,OAAV;AACAG,MAAAA,OAAO,GAAGH,OAAV;AACAE,MAAAA,OAAO,GAAGC,OAAO,GAAGN,cAApB;AACD,KALD,MAKO;AACL,UAAIC,OAAO,GAAG,IAAd;AACAI,MAAAA,OAAO,GAAGJ,OAAV;AACAI,MAAAA,OAAO,GAAGJ,OAAV;AACAK,MAAAA,OAAO,GAAGD,OAAO,GAAGL,cAApB;AACD;;AACDrD,IAAAA,cAAc,CAAC2D,OAAD,CAAd;AACAzD,IAAAA,aAAa,CAACwD,OAAD,CAAb;AACD;;AAGD9F,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAMqG,YAAiB,GAAG,IAAIG,KAAJ,EAA1B;AACAH,IAAAA,YAAY,CAACI,GAAb,GAAmBzB,gBAAnB;;AACAqB,IAAAA,YAAY,CAACK,MAAb,GAAsB,YAAY;AAChC,UAAIzE,eAAe,KAAKoE,YAAxB,EAAsC,CACrC,CADD,MACO;AAEL;AACAnE,QAAAA,kBAAkB,CAACmE,YAAD,CAAlB;AACAD,QAAAA,2BAA2B,CAACC,YAAD,CAA3B;AACD;AACF,KARD;AASD,GAZc,EAYZ,CAACrB,gBAAD,CAZY,CAAf;AAkBAhF,EAAAA,eAAe,CAAC,MAAM;AACpB,QAAIiC,eAAe,IAAIN,aAAa,CAACuD,OAArC,EAA8C;AAC5C,YAAMD,GAAG,GAAGtD,aAAa,CAACuD,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAZ;AAGA,YAAMM,cAAc,GAAGpD,UAAU,GAAGF,WAApC,CAJ4C,CAQ5C;;AACA,UAAIwE,CAAC,GAAG,GAAR;AAAa,UAAIC,CAAC,GAAG,GAAR;;AAGb,UAAI/C,IAAI,IAAI,CAAZ,EAAe;AACb8C,QAAAA,CAAC,GAAG,GAAJ;AAASC,QAAAA,CAAC,GAAG,GAAJ;AACV,OAFD,MAGK,IAAI/C,IAAI,IAAI,CAAZ,EAAe;AAClB8C,QAAAA,CAAC,GAAG,CAAJ;AAAOC,QAAAA,CAAC,GAAG,CAAJ;AACR,OAFI,MAEE,IAAI/C,IAAI,IAAI,CAAZ,EAAe;AACpB8C,QAAAA,CAAC,GAAG,GAAJ;AAASC,QAAAA,CAAC,GAAG,GAAJ;AACV,OAFM,MAEA,IAAI/C,IAAI,IAAI,CAAZ,EAAe;AACpB8C,QAAAA,CAAC,GAAG,GAAJ;AAASC,QAAAA,CAAC,GAAG,GAAJ;AACV,OAFM,MAEA,CAAG;;AAIV,UAAIrE,GAAJ,EAAS;AACP,YAAIkD,cAAc,KAAK,CAAvB,EAA0B;AACxB,cAAI5B,IAAI,GAAG,CAAX,EAAc;AACZlC,YAAAA,aAAa,CAACuD,OAAd,CAAsBG,KAAtB,GAA8BhD,UAAU,GAAGsE,CAA3C;AACAhF,YAAAA,aAAa,CAACuD,OAAd,CAAsBI,MAAtB,GAA+BjD,UAAU,GAAGsE,CAA5C;AACD,WAHD,MAGO;AACLhF,YAAAA,aAAa,CAACuD,OAAd,CAAsBG,KAAtB,GAA8BhD,UAA9B;AACAV,YAAAA,aAAa,CAACuD,OAAd,CAAsBI,MAAtB,GAA+BjD,UAA/B;AACD;AACF,SARD,MASK,IAAIoD,cAAc,IAAI,GAAtB,EAA2B;AAC9B,cAAI5B,IAAI,GAAG,CAAX,EAAc;AACZlC,YAAAA,aAAa,CAACuD,OAAd,CAAsBG,KAAtB,GAA8BhD,UAAU,GAAGsE,CAA3C;AACAhF,YAAAA,aAAa,CAACuD,OAAd,CAAsBI,MAAtB,GAA+BjD,UAAU,GAAGsE,CAA5C;AACD,WAHD,MAGO;AACLhF,YAAAA,aAAa,CAACuD,OAAd,CAAsBG,KAAtB,GAA8BhD,UAAU,GAAGsE,CAA3C;AACAhF,YAAAA,aAAa,CAACuD,OAAd,CAAsBI,MAAtB,GAA+BjD,UAAU,GAAGsE,CAA5C;AACD;AAEF,SATI,MASE;AACL,cAAI9C,IAAI,GAAG,CAAX,EAAc;AACZlC,YAAAA,aAAa,CAACuD,OAAd,CAAsBG,KAAtB,GAA8BlD,WAAW,GAAGyE,CAA5C;AACAjF,YAAAA,aAAa,CAACuD,OAAd,CAAsBI,MAAtB,GAA+BnD,WAAW,GAAGyE,CAA7C;AACD,WAHD,MAGO;AACLjF,YAAAA,aAAa,CAACuD,OAAd,CAAsBG,KAAtB,GAA8BlD,WAAW,GAAGyE,CAA5C;AACAjF,YAAAA,aAAa,CAACuD,OAAd,CAAsBI,MAAtB,GAA+BnD,WAA/B;AACD;AAEF;AACF,OA7BD,MA6BO;AACLR,QAAAA,aAAa,CAACuD,OAAd,CAAsBG,KAAtB,GAA8BhD,UAA9B;AACAV,QAAAA,aAAa,CAACuD,OAAd,CAAsBI,MAAtB,GAA+BnD,WAA/B;AAGD,OA3D2C,CA4D5C;;;AACAqD,MAAAA,YAAY;AACZ,YAAMqB,CAAC,GAAGxE,UAAV;AACA,YAAMyE,CAAC,GAAG3E,WAAV;AAGA4E,MAAAA,qBAAqB,CAAC,MAAM;AAC1B,YAAIxE,GAAJ,EAAS;AACP0C,UAAAA,GAAG,CAAC+B,SAAJ,CAAc/E,eAAd,EAA+BkB,IAAI,CAACR,CAApC,EAAuCQ,IAAI,CAACP,CAA5C,EAA+CiE,CAA/C,EAAkDC,CAAlD;AACD,SAFD,MAEO;AACL7B,UAAAA,GAAG,CAAC+B,SAAJ,CAAc/E,eAAd,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC4E,CAArC,EAAwCC,CAAxC;AACD;AACF,OANoB,CAArB;AAQD;AACF,GA5Ec,EA4EZ,CAAC7E,eAAD,EAAkBI,UAAlB,EAA8BF,WAA9B,EAA2CI,GAA3C,EAAgDY,IAAhD,EAAsDU,IAAtD,EAA4DlC,aAA5D,CA5EY,CAAf;;AAsFA,QAAMsF,gBAAgB,GAAG,CAAC5C,CAAD,EAAS6C,IAAT,KAAuB;AAC9C,QAAI3E,GAAJ,EAAS;AACPmB,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;;AACA,UAAIwD,IAAI,KAAK,CAAb,EAAgB;AACdxE,QAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEbE,UAAAA,CAAC,EAAE0B,CAAC,CAAC8C,OAAF,GAAY7D,QAAZ,GAAuBP,UAAU,CAACJ,CAFxB;AAGbC,UAAAA,CAAC,EAAEyB,CAAC,CAAC+C,OAAF,GAAY9D,QAAZ,GAAuBP,UAAU,CAACH;AAHxB,SAAD,CAAd;AAKD,OAND,MAMO;AACLF,QAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEbE,UAAAA,CAAC,EAAE0B,CAAC,CAACgD,OAAF,CAAU,CAAV,EAAaF,OAAb,GAAuB7D,QAAvB,GAAkCP,UAAU,CAACJ,CAFnC;AAGbC,UAAAA,CAAC,EAAEyB,CAAC,CAACgD,OAAF,CAAU,CAAV,EAAaD,OAAb,GAAuB9D,QAAvB,GAAkCP,UAAU,CAACH;AAHnC,SAAD,CAAd;AAKD;;AACD,UAAIyB,CAAC,CAACiD,MAAN,EAAc;AACZpE,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,KAlBD,MAkBO;AACLV,MAAAA,MAAM,CAAC,IAAD,CAAN;AACD;AACF,GAtBD;;AA2BA,QAAM+E,cAAc,GAAG,MAAM;AAC3B,QAAIlE,gBAAgB,CAAC6B,OAArB,EAA8B;AAC5Bc,MAAAA,YAAY,CAAC3C,gBAAgB,CAAC6B,OAAlB,CAAZ;AACD;;AACD7B,IAAAA,gBAAgB,CAAC6B,OAAjB,GAA2Be,UAAU,CAAC,YAAY,CAEjD,CAFoC,EAElC,IAFkC,CAArC;AAGAvC,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAhB,IAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEbE,MAAAA,CAAC,EAAEQ,IAAI,CAACR,CAFK;AAGbC,MAAAA,CAAC,EAAEO,IAAI,CAACP;AAHK,KAAD,CAAd;AAKAM,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAdD;;AAmBA,QAAMqB,eAAe,GAAG,CAACF,CAAD,EAAS6C,IAAT,KAAuB;AAC7C,QAAIjE,IAAI,IAAIiE,IAAI,KAAK,IAArB,EAA2B;AACzB,UAAIM,EAAE,GAAG/E,WAAW,CAACE,CAArB;AACA,UAAI8E,EAAE,GAAGhF,WAAW,CAACG,CAArB;;AAEA,UAAIyB,CAAJ,EAAO;AACL,YAAI6C,IAAI,KAAK,CAAb,EAAgB;AACdM,UAAAA,EAAE,GAAGnD,CAAC,CAAC8C,OAAF,GAAY7D,QAAZ,GAAuBb,WAAW,CAACE,CAAxC;AACA8E,UAAAA,EAAE,GAAGpD,CAAC,CAAC+C,OAAF,GAAY9D,QAAZ,GAAuBb,WAAW,CAACG,CAAxC;AACD,SAHD,MAGO;AACL4E,UAAAA,EAAE,GAAGnD,CAAC,CAACgD,OAAF,CAAU,CAAV,EAAaF,OAAb,GAAuB7D,QAAvB,GAAkCb,WAAW,CAACE,CAAnD;AACA8E,UAAAA,EAAE,GAAGpD,CAAC,CAACgD,OAAF,CAAU,CAAV,EAAaD,OAAb,GAAuB9D,QAAvB,GAAkCb,WAAW,CAACG,CAAnD;AAED;AACF,OAbwB,CAezB;;;AACA,UAAI8E,EAAE,GAAGrF,UAAU,GAAGV,aAAa,CAACuD,OAAd,CAAsBG,KAA5C;AACAqC,MAAAA,EAAE,IAAI,CAAC,CAAP;;AACA,UAAIF,EAAE,GAAG,CAAT,EAAY;AACVA,QAAAA,EAAE,GAAG,CAAL;AACD,OAFD,MAEO,IAAIA,EAAE,GAAGE,EAAT,EAAa;AAClBF,QAAAA,EAAE,GAAGE,EAAL;AACD,OAtBwB,CAuBzB;;;AACA,UAAIC,EAAE,GAAGxF,WAAW,GAAGR,aAAa,CAACuD,OAAd,CAAsBI,MAA7C;AACAqC,MAAAA,EAAE,IAAI,CAAC,CAAP;;AACA,UAAIF,EAAE,GAAG,CAAT,EAAY;AACVA,QAAAA,EAAE,GAAG,CAAL;AACD,OAFD,MAEO,IAAIA,EAAE,GAAGE,EAAT,EAAa;AAClBF,QAAAA,EAAE,GAAGE,EAAL;AACD,OA9BwB,CA+BzB;;;AACAvE,MAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAENR,QAAAA,CAAC,EAAE6E,EAFG;AAGN5E,QAAAA,CAAC,EAAE6E;AAHG,OAAD,CAAP;AAKAzE,MAAAA,aAAa,CAAC,EACZ,GAAGD,UADS;AAEZJ,QAAAA,CAAC,EAAE6E,EAFS;AAGZ5E,QAAAA,CAAC,EAAE6E;AAHS,OAAD,CAAb;AAKD;AACF,GA5CD;;AAmDA,sBACE;AAAA,2BACE,QAAC,QAAD,CAAU,GAAV;AAAc,MAAA,SAAS,EACrBtH,OAAO,GACHiB,eAAe,GACb,qCADa,GAEb,uCAHC,GAIHA,eAAe,GACb,sCADa,GAEb,yCAPR;AAWE,MAAA,KAAK,EAAE,EACL,GAAGC,SADE;AACSgE,QAAAA,KAAK,EAAE,KADhB;AAELC,QAAAA,MAAM,EAAE,OAFH;AAGLsC,QAAAA,QAAQ,EAAE,OAHL;AAILzB,QAAAA,GAAG,EAAE,MAJA;AAKL0B,QAAAA,MAAM,EAAE,GALH;AAMLC,QAAAA,MAAM,EAAE,SANH;AAOLC,QAAAA,QAAQ,EAAE;AAPL,OAXT;AAAA,8BAoBE,QAAC,aAAD;AACE,QAAA,KAAK,EAAE;AACLrG,UAAAA,OAAO,EAAE;AADJ,SADT;AAAA,+BAOE,QAAC,IAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,KAAK,EAAE;AACLA,YAAAA,OAAO,EAAE,KADJ;AACW2D,YAAAA,KAAK,EAAE,MADlB;AAC0BC,YAAAA,MAAM,EAAE;AADlC,WAFT;AAAA,kCAOE,QAAC,IAAD;AAAM,YAAA,GAAG,EAAE1D,MAAX;AACE,YAAA,IAAI,MADN;AAEE,YAAA,EAAE,EAAE,EAFN;AAGE,YAAA,KAAK,EAAE;AACLF,cAAAA,OAAO,EAAE,KADJ;AACW2D,cAAAA,KAAK,EAAE,KADlB;AACyBC,cAAAA,MAAM,EAAEvB,SAAS,GAAG,KAAH,GAAW,MADrD;AAC6D6D,cAAAA,QAAQ,EAAE,OADvE;AACgFzB,cAAAA,GAAG,EAAE;AADrF;AAHT;AAAA;AAAA;AAAA;AAAA,kBAPF,EAkBG1C,eAAe,gBAAG,QAAC,MAAD;AACjB,YAAA,KAAK,EAAEI,IADU;AAEjB,YAAA,QAAQ,EAAEO,UAFO;AAGjB,YAAA,iBAAiB,EAAE,MAAM;AAAER,cAAAA,mBAAmB,CAAC,IAAD,CAAnB;AAA4B,aAHtC;AAIjB,YAAA,YAAY,EAAE,CAJG;AAKjB,YAAA,GAAG,EAAE,CALY;AAMjB,YAAA,GAAG,EAAE,CANY;AAOjB,YAAA,IAAI,EAAE,gDAPW;AAQjB,YAAA,KAAK,EAAE;AAAEpC,cAAAA,OAAO,EAAEmC,gBAAgB,GAAG,GAAH,GAAS,IAApC;AAA0CqE,cAAAA,OAAO,EAAEzF,GAAG,GAAG,OAAH,GAAa,MAAnE;AAA2E8C,cAAAA,KAAK,EAAE,IAAlF;AAAwF4C,cAAAA,IAAI,EAAE,KAA9F;AAAqG9B,cAAAA,GAAG,EAAE,KAA1G;AAAiHyB,cAAAA,QAAQ,EAAE;AAA3H;AARU;AAAA;AAAA;AAAA;AAAA,kBAAH,GAUZ,IA5BN,EAgCG7F,kBAAkB,gBAEjB;AACE,YAAA,WAAW,EAAE,MAAM,CACjB;AACD,aAHH;AAIE,YAAA,SAAS,EAAGsC,CAAD,IAAY;AACrBkD,cAAAA,cAAc;AACf,aANH;AAOE,YAAA,UAAU,EAAGlD,CAAD,IAAY;AACtBkD,cAAAA,cAAc;AACf,aATH;AAUE,YAAA,WAAW,EAAGlD,CAAD,IAAY;AACvB4C,cAAAA,gBAAgB,CAAC5C,CAAD,EAAI,CAAJ,CAAhB;AACD,aAZH;AAaE,YAAA,YAAY,EAAGA,CAAD,IAAY;AACxB4C,cAAAA,gBAAgB,CAAC5C,CAAD,EAAI,CAAJ,CAAhB;AACD,aAfH;AAgBE,YAAA,WAAW,EAAGA,CAAD,IAAY;AACvBE,cAAAA,eAAe,CAACF,CAAD,EAAI,CAAJ,CAAf;AACD,aAlBH;AAmBE,YAAA,WAAW,EAAGA,CAAD,IAAY;AACvBE,cAAAA,eAAe,CAACF,CAAD,EAAI,CAAJ,CAAf;AACD,aArBH;AAsBE,YAAA,GAAG,EAAE1C,aAtBP;AAuBE,YAAA,KAAK,EAAE;AACLD,cAAAA,OAAO,EAAE,KADJ;AAELwG,cAAAA,MAAM,EAAE,MAFH;AAGLJ,cAAAA,MAAM,EAAE,SAHH;AAILC,cAAAA,QAAQ,EAAE;AAJL;AAvBT;AAAA;AAAA;AAAA;AAAA,kBAFiB,GA+Bf,IA/DN,eAoEE,QAAC,QAAD;AACE,YAAA,GAAG,EAAElG,OADP;AAEE,YAAA,SAAS,EACPT,eAAe,GACX,wEADW,GAEX,2EALR;AAOE,YAAA,KAAK,EAAE;AACL+G,cAAAA,KAAK,EAAE,SADF;AAELC,cAAAA,QAAQ,EAAE,OAFL;AAGLR,cAAAA,QAAQ,EAAE,UAHL;AAILpG,cAAAA,OAAO,EAAEmC,gBAAgB,GAAG,IAAH,GAAU,CAJ9B;AAKLsE,cAAAA,IAAI,EAAE,KALD;AAMLI,cAAAA,KAAK,EAAE,EANF;AAOLL,cAAAA,OAAO,EAAEvE,eAAe,GAAG,OAAH,GAAa;AAPhC;AAPT;AAAA;AAAA;AAAA;AAAA,kBApEF,eAwFE,QAAC,QAAD;AACE,YAAA,OAAO,EAAE,MAAM;AACb,kBAAIlB,GAAJ,EAAS;AACPC,gBAAAA,MAAM,CAAC,KAAD,CAAN;AACD,eAFD,MAEO;AACLA,gBAAAA,MAAM,CAAC,IAAD,CAAN;AACD;AACF,aAPH;AASE,YAAA,GAAG,EAAEV,QATP;AAUE,YAAA,SAAS,EACPV,eAAe,GACX,wEADW,GAEX,2EAbR;AAeE,YAAA,KAAK,EAAE;AACL+G,cAAAA,KAAK,EAAE,SADF;AAELC,cAAAA,QAAQ,EAAE,OAFL;AAGLR,cAAAA,QAAQ,EAAE,UAHL;AAILU,cAAAA,MAAM,EAAE,KAJH;AAKL9G,cAAAA,OAAO,EAAEmC,gBAAgB,GAAG,IAAH,GAAU,CAL9B;AAML0E,cAAAA,KAAK,EAAE,KANF;AAOLL,cAAAA,OAAO,EAAEvE,eAAe,GAAG,OAAH,GAAa;AAPhC;AAfT;AAAA;AAAA;AAAA;AAAA,kBAxFF,eAmHE,QAAC,IAAD;AACE,YAAA,IAAI,MADN;AAEE,YAAA,EAAE,EAAE,EAFN;AAGE,YAAA,KAAK,EAAE;AACL/B,cAAAA,OAAO,EAAE;AADJ,aAHT;AAAA,sBASGuC,SAAS,CAACsB,MAAV,GAAmB,CAAnB,gBAAuB;AAAA,qCAAE,QAAC,OAAD;AACxB,gBAAA,OAAO,EAAE,CADe;AAExB,gBAAA,OAAO,EAAE,CAFe;AAGxB,gBAAA,KAAK,EAAE;AACL7D,kBAAAA,OAAO,EAAE,KADJ;AAELqG,kBAAAA,QAAQ,EAAE;AAFL,iBAHiB;AAAA,0BASvB9D,SAAS,CAACsE,GAAV,CAAc,CAACC,OAAD,EAAeC,KAAf,kBAEb;AAAK,kBAAA,OAAO,EAAE,MAAM;AAClBzH,oBAAAA,QAAQ,CAACP,gBAAgB,CAACwD,SAAD,EAAYuE,OAAZ,CAAjB,CAAR;AACA5G,oBAAAA,MAAM,CAACsD,OAAP,CAAewD,cAAf,CAA8B;AAC5BC,sBAAAA,QAAQ,EAAE,QADkB;AAE5BC,sBAAAA,KAAK,EAAE;AAFqB,qBAA9B;AAID,mBAND;AAMe,kBAAA,KAAK,EAAE;AAAEvD,oBAAAA,KAAK,EAAE,KAAT;AAAgByC,oBAAAA,MAAM,EAAE;AAAxB,mBANtB;AAM2D,kBAAA,GAAG,EAAEU,OANhE;AAMyE,kBAAA,GAAG,EAAG,SAAQC,KAAM;AAN7F,mBAMQA,KANR;AAAA;AAAA;AAAA;AAAA,wBAFD;AATuB;AAAA;AAAA;AAAA;AAAA;AAAF,6BAAvB,GAqBgB;AA9BnB;AAAA;AAAA;AAAA;AAAA,kBAnHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2LD;;GAhmBQ5H,Q;UAKUN,W,EAoBID,W,EAMHF,S,EAyE2DE,W;;;KAxGtEO,Q;AAkmBT,OAAO,MAAMgI,OAAO,gBAAGlJ,KAAK,CAACmJ,IAAN,CAAWjI,QAAX,CAAhB;MAAMgI,O","sourcesContent":["import React, {\r\n  useRef,\r\n  useEffect,\r\n  useCallback,\r\n  useState,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport ControlPointDuplicateIcon from \"@mui/icons-material/ControlPointDuplicate\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport Axios from \"axios\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport date from \"date-and-time\";\r\nimport { UserInfoUpdatePROFILE } from \"../log/actions/UserdataAction\";\r\nimport { UserInfoUpdateBILLBOARD } from \"../log/actions/UserdataAction\";\r\nimport { usePalette } from \"react-palette\";\r\nimport { UpdateColorAction } from \"../GlobalActions\";\r\nimport EditTwoToneIcon from \"@mui/icons-material/EditTwoTone\";\r\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\r\nimport { UpdateUploadData } from \"../GlobalActions\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport CropIcon from '@mui/icons-material/Crop';\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\n\r\nfunction Taskbarx({\r\n  showModalUploadTask,\r\n  uploadClose,\r\n\r\n}: any): JSX.Element {\r\n  const dispatch = useDispatch();\r\n\r\n\r\n\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 600,\r\n    },\r\n    opacity: showModalUploadTask ? 1 : 0,\r\n    transform: showModalUploadTask ? `translateX(0%)` : `translateX(-100%)`,\r\n    padding: \"0px\",\r\n\r\n  });\r\n\r\n\r\n\r\n\r\n  const cropCanvasRef: any = useRef(null);\r\n\r\n  const navRef: any = useRef(null);\r\n\r\n  const IconRef: any = useRef(null);\r\n\r\n  const IconRef2: any = useRef(null);\r\n\r\n  const [allowCropAllCanvas, setallowCropAllCanvas] = useState<boolean>(true);\r\n\r\n  const [CropImageHolder, setCropImageHolder] = useState<any>(null);\r\n\r\n  const [imageHeight, setimageHeight] = useState(0);\r\n  const [imageWidth, setimageWidth] = useState(0);\r\n\r\n  const [Box, setBox] = useState<boolean>(false);\r\n\r\n\r\n  const [cropInitial, setcropInitial] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [cropInitialx, setcropInitialx] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [cropOffset, setcropOffset] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [Drag, setDrag] = useState<boolean>(false);\r\n\r\n  const [crop, setcrop] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const allowscrolltimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  var extendxy = 3.3;\r\n\r\n  const [allowOverflow, setallowOverflow] = useState<boolean>(false);\r\n\r\n  const [optionscropshow, setoptionscropshow] = useState<boolean>(true);\r\n\r\n  const [optionscropshow2, setoptionscropshow2] = useState<boolean>(true);\r\n\r\n  const [zoom, setzoom] = useState<any>(2);\r\n\r\n  const [multiPost, setmultiPost] = useState(false);\r\n\r\n  const [prevImage, setprevimage] = useState([]);\r\n\r\n  const menuTimer5 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n\r\n\r\n\r\n  const updatezoom = (e: any, data: any) => {\r\n    setoptionscropshow2(false);\r\n    setzoom(data);\r\n    handleTouchDrag(null, 1000);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const { activatefilterImage, activatecropImage, selectedImage, cropimage } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.GlobalNavuploadReducer,\r\n    })\r\n  );\r\n  const activatefilterImageReducer = activatefilterImage;\r\n  const activatecropImageReducer = activatecropImage;\r\n  const selectedImageReducer = selectedImage;\r\n  const cropimageReducer = cropimage;\r\n\r\n\r\n  useEffect(() => {\r\n    const ctx = cropCanvasRef.current.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, cropCanvasRef.current.width, cropCanvasRef.current.height);\r\n    setzoom(2);\r\n    setBox(false);\r\n    setcrop({\r\n      ...crop,\r\n      x: 0,\r\n      y: 0,\r\n    });\r\n\r\n\r\n  }, [CropImageHolder, showModalUploadTask]);\r\n\r\n  useEffect(() => {\r\n\r\n    setBox(false);\r\n  }, []);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setprevimage(selectedImageReducer);\r\n\r\n  }, [selectedImageReducer]);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (prevImage.length > 1) {\r\n      setmultiPost(true)\r\n    }\r\n\r\n  }, [prevImage]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const resizeCanvas = useCallback(() => {\r\n    var imgAspectRatio = cropCanvasRef.current.width / cropCanvasRef.current.height;\r\n\r\n    var screenW = navRef.current.clientWidth;\r\n    var screenH = navRef.current.clientHeight;\r\n    let canvasW = screenW\r\n    let canvasH = screenH\r\n\r\n    if (imgAspectRatio >= 2.2 || imgAspectRatio <= 0.464) {\r\n\r\n\r\n\r\n      if (menuTimer5.current) {\r\n        clearTimeout(menuTimer5.current);\r\n      }\r\n      menuTimer5.current = setTimeout(function () {\r\n        setBox(true);\r\n      }, 3000);\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    if (imgAspectRatio <= 1.63) {\r\n      canvasH = screenH;\r\n      canvasW = canvasH * imgAspectRatio;\r\n    } else {\r\n      canvasW = screenW;\r\n      canvasH = canvasW / imgAspectRatio;\r\n    }\r\n    cropCanvasRef.current.style.height = `${canvasH}px`;\r\n    cropCanvasRef.current.style.width = `${canvasW}px`;\r\n\r\n    IconRef.current.style.top = `${canvasH / 1.19}px`;\r\n    IconRef2.current.style.top = `${canvasH / 1.19}px`;\r\n  }, [cropCanvasRef])\r\n\r\n\r\n\r\n\r\n\r\n  function GiveImageSpecificDimensions(Newcropimage: any) {\r\n    const imgAspectRatio = Newcropimage.naturalWidth / Newcropimage.naturalHeight;\r\n\r\n    var canvasW;\r\n    var canvasH;\r\n    if (imgAspectRatio <= 1.55) {\r\n      var screenH = 1920;\r\n      canvasH = screenH\r\n      canvasH = screenH;\r\n      canvasW = canvasH * imgAspectRatio;\r\n    } else {\r\n      var screenW = 2048;\r\n      canvasW = screenW\r\n      canvasW = screenW;\r\n      canvasH = canvasW / imgAspectRatio;\r\n    }\r\n    setimageHeight(canvasH);\r\n    setimageWidth(canvasW);\r\n  }\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    const Newcropimage: any = new Image();\r\n    Newcropimage.src = cropimageReducer;\r\n    Newcropimage.onload = function () {\r\n      if (CropImageHolder === Newcropimage) {\r\n      } else {\r\n\r\n        //////////////\r\n        setCropImageHolder(Newcropimage);\r\n        GiveImageSpecificDimensions(Newcropimage);\r\n      }\r\n    }\r\n  }, [cropimageReducer]);\r\n\r\n\r\n\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    if (CropImageHolder && cropCanvasRef.current) {\r\n      const ctx = cropCanvasRef.current.getContext(\"2d\");\r\n\r\n\r\n      const imgAspectRatio = imageWidth / imageHeight;\r\n\r\n\r\n\r\n      ////////////////////////\r\n      var a = 1.2; var b = 0.8;\r\n\r\n\r\n      if (zoom <= 1) {\r\n        a = 1.2; b = 0.8;\r\n      }\r\n      else if (zoom <= 2) {\r\n        a = 1; b = 1;\r\n      } else if (zoom <= 3) {\r\n        a = 1.2; b = 1.2;\r\n      } else if (zoom <= 4) {\r\n        a = 1.4; b = 1.4;\r\n      } else { }\r\n\r\n\r\n\r\n      if (Box) {\r\n        if (imgAspectRatio === 1) {\r\n          if (zoom > 2) {\r\n            cropCanvasRef.current.width = imageWidth / a;\r\n            cropCanvasRef.current.height = imageWidth / a;\r\n          } else {\r\n            cropCanvasRef.current.width = imageWidth;\r\n            cropCanvasRef.current.height = imageWidth;\r\n          }\r\n        }\r\n        else if (imgAspectRatio <= 1.2) {\r\n          if (zoom > 2) {\r\n            cropCanvasRef.current.width = imageWidth / a;\r\n            cropCanvasRef.current.height = imageWidth / a;\r\n          } else {\r\n            cropCanvasRef.current.width = imageWidth / a;\r\n            cropCanvasRef.current.height = imageWidth * a;\r\n          }\r\n\r\n        } else {\r\n          if (zoom > 2) {\r\n            cropCanvasRef.current.width = imageHeight / b;\r\n            cropCanvasRef.current.height = imageHeight / b;\r\n          } else {\r\n            cropCanvasRef.current.width = imageHeight / b;\r\n            cropCanvasRef.current.height = imageHeight;\r\n          }\r\n\r\n        }\r\n      } else {\r\n        cropCanvasRef.current.width = imageWidth;\r\n        cropCanvasRef.current.height = imageHeight;\r\n\r\n\r\n      }\r\n      ////////////////////////////////\r\n      resizeCanvas();\r\n      const w = imageWidth;\r\n      const h = imageHeight;\r\n\r\n\r\n      requestAnimationFrame(() => {\r\n        if (Box) {\r\n          ctx.drawImage(CropImageHolder, crop.x, crop.y, w, h);\r\n        } else {\r\n          ctx.drawImage(CropImageHolder, 0, 0, w, h);\r\n        }\r\n      });\r\n\r\n    }\r\n  }, [CropImageHolder, imageWidth, imageHeight, Box, crop, zoom, cropCanvasRef])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleTouchStart = (e: any, type: any) => {\r\n    if (Box) {\r\n      setoptionscropshow(false);\r\n      if (type === 0) {\r\n        setcropInitial({\r\n          ...cropInitial,\r\n          x: e.clientX * extendxy - cropOffset.x,\r\n          y: e.clientY * extendxy - cropOffset.y,\r\n        });\r\n      } else {\r\n        setcropInitial({\r\n          ...cropInitial,\r\n          x: e.touches[0].clientX * extendxy - cropOffset.x,\r\n          y: e.touches[0].clientY * extendxy - cropOffset.y,\r\n        });\r\n      }\r\n      if (e.target) {\r\n        setDrag(true);\r\n      }\r\n    } else {\r\n      setBox(true);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleTouchEnd = () => {\r\n    if (allowscrolltimer.current) {\r\n      clearTimeout(allowscrolltimer.current);\r\n    }\r\n    allowscrolltimer.current = setTimeout(function () {\r\n\r\n    }, 1200);\r\n    setoptionscropshow(true);\r\n    setcropInitial({\r\n      ...cropInitial,\r\n      x: crop.x,\r\n      y: crop.y,\r\n    });\r\n    setDrag(false);\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleTouchDrag = (e: any, type: any) => {\r\n    if (Drag || type === 1000) {\r\n      var xx = cropInitial.x;\r\n      var yy = cropInitial.y;\r\n\r\n      if (e) {\r\n        if (type === 0) {\r\n          xx = e.clientX * extendxy - cropInitial.x;\r\n          yy = e.clientY * extendxy - cropInitial.y;\r\n        } else {\r\n          xx = e.touches[0].clientX * extendxy - cropInitial.x;\r\n          yy = e.touches[0].clientY * extendxy - cropInitial.y;\r\n\r\n        }\r\n      }\r\n\r\n      ///////////////////////////////////////////////\r\n      var fz = imageWidth - cropCanvasRef.current.width;\r\n      fz *= -1;\r\n      if (xx > 0) {\r\n        xx = 0;\r\n      } else if (xx < fz) {\r\n        xx = fz\r\n      }\r\n      //////////////////////////////\r\n      var ff = imageHeight - cropCanvasRef.current.height;\r\n      ff *= -1;\r\n      if (yy > 0) {\r\n        yy = 0;\r\n      } else if (yy < ff) {\r\n        yy = ff\r\n      }\r\n      //////////////////////////////////\r\n      setcrop({\r\n        ...crop,\r\n        x: xx,\r\n        y: yy,\r\n      });\r\n      setcropOffset({\r\n        ...cropOffset,\r\n        x: xx,\r\n        y: yy,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <animated.div className={\r\n        matchPc\r\n          ? darkmodeReducer\r\n            ? \"postscroll-dark modal-containerDark\"\r\n            : \"postscroll-light modal-containerLight\"\r\n          : darkmodeReducer\r\n            ? \"postscroll-darkm modal-containerDark\"\r\n            : \"postscroll-lightm  modal-containerLight\"\r\n      }\r\n\r\n\r\n        style={{\r\n          ...animation, width: '94%',\r\n          height: \"100vh\",\r\n          position: \"fixed\",\r\n          top: '-0vh',\r\n          zIndex: 100,\r\n          cursor: \"default\",\r\n          overflow: \"auto\",\r\n        }}>\r\n        <DialogContent\r\n          style={{\r\n            padding: \"0px\",\r\n          }}>\r\n\r\n\r\n\r\n          <Grid\r\n            container\r\n            style={{\r\n              padding: \"0px\", width: '100%', height: \"100%\",\r\n            }}>\r\n\r\n\r\n            <Grid ref={navRef}\r\n              item\r\n              xs={12}\r\n              style={{\r\n                padding: \"0px\", width: '94%', height: multiPost ? \"80%\" : '100%', position: 'fixed', top: '-20000000000px'\r\n              }}>\r\n\r\n            </Grid>\r\n\r\n\r\n\r\n            {optionscropshow ? <Slider\r\n              value={zoom}\r\n              onChange={updatezoom}\r\n              onChangeCommitted={() => { setoptionscropshow2(true); }}\r\n              defaultValue={1}\r\n              max={4}\r\n              min={0}\r\n              step={0.0000000000000000000000000000000000000000000001}\r\n              style={{ opacity: optionscropshow2 ? 0.7 : 0.45, display: Box ? 'block' : 'none', width: '8%', left: '47%', top: '5vh', position: 'fixed', }}\r\n            />\r\n              : null}\r\n\r\n\r\n\r\n            {allowCropAllCanvas ? (\r\n\r\n              <canvas\r\n                onMouseOver={() => {\r\n                  ///mouseover(0);\r\n                }}\r\n                onMouseUp={(e: any) => {\r\n                  handleTouchEnd();\r\n                }}\r\n                onTouchEnd={(e: any) => {\r\n                  handleTouchEnd();\r\n                }}\r\n                onMouseDown={(e: any) => {\r\n                  handleTouchStart(e, 0);\r\n                }}\r\n                onTouchStart={(e: any) => {\r\n                  handleTouchStart(e, 1);\r\n                }}\r\n                onMouseMove={(e: any) => {\r\n                  handleTouchDrag(e, 0);\r\n                }}\r\n                onTouchMove={(e: any) => {\r\n                  handleTouchDrag(e, 1);\r\n                }}\r\n                ref={cropCanvasRef}\r\n                style={{\r\n                  padding: \"0px\",\r\n                  margin: \"auto\",\r\n                  cursor: \"pointer\",\r\n                  overflow: 'hidden'\r\n                }} />\r\n            ) : null}\r\n\r\n\r\n\r\n\r\n            <DoneIcon\r\n              ref={IconRef}\r\n              className={\r\n                darkmodeReducer\r\n                  ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \"\r\n                  : \"make-small-icons-clickable-lightab  dontallowhighlighting zuperkingIcon  \"\r\n              }\r\n              style={{\r\n                color: \"#ffffff\",\r\n                fontSize: \"3.1vw\",\r\n                position: \"absolute\",\r\n                opacity: optionscropshow2 ? 0.94 : 0,\r\n                left: '43%',\r\n                right: \"\",\r\n                display: optionscropshow ? 'block' : 'none'\r\n              }}\r\n            />\r\n\r\n\r\n\r\n            <CropIcon\r\n              onClick={() => {\r\n                if (Box) {\r\n                  setBox(false);\r\n                } else {\r\n                  setBox(true);\r\n                }\r\n              }}\r\n\r\n              ref={IconRef2}\r\n              className={\r\n                darkmodeReducer\r\n                  ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \"\r\n                  : \"make-small-icons-clickable-lightab  dontallowhighlighting zuperkingIcon  \"\r\n              }\r\n              style={{\r\n                color: \"#ffffff\",\r\n                fontSize: \"2.9vw\",\r\n                position: \"absolute\",\r\n                bottom: '5vh',\r\n                opacity: optionscropshow2 ? 0.94 : 0,\r\n                right: '43%',\r\n                display: optionscropshow ? 'block' : 'none'\r\n              }}\r\n            />\r\n\r\n\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{\r\n                padding: \"0px\",\r\n              }}>\r\n\r\n\r\n\r\n              {prevImage.length > 0 ? <><Masonry\r\n                columns={2}\r\n                spacing={0}\r\n                style={{\r\n                  padding: \"0px\",\r\n                  overflow: 'hidden'\r\n                }}\r\n              >\r\n\r\n                {prevImage.map((picture: any, index: any) => (\r\n\r\n                  <img onClick={() => {\r\n                    dispatch(UpdateUploadData(prevImage, picture));\r\n                    navRef.current.scrollIntoView({\r\n                      behavior: \"smooth\",\r\n                      block: \"start\",\r\n                    });\r\n                  }} key={index} style={{ width: '50%', cursor: 'pointer' }} src={picture} alt={`Image ${index}`} />\r\n\r\n                ))}\r\n\r\n              </Masonry ></> : null}\r\n\r\n            </Grid>\r\n\r\n\r\n\r\n          </Grid>\r\n\r\n        </DialogContent> </animated.div>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Taskbar = React.memo(Taskbarx);\r\n"]},"metadata":{},"sourceType":"module"}