{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\UploadMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { matchPc } from \"../DetectDevice\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { animated } from \"react-spring\";\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\nimport PhotoIcon from \"@mui/icons-material/Photo\";\nimport GifIcon from \"@mui/icons-material/Gif\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UploadMenux({\n  optionsShow,\n  optinstopshowingReducer,\n  typeTop,\n  closeoptionsslide,\n  animationop,\n  optionsCollectImageRef,\n  handleTouchStartOptions,\n  handleTouchMoveOptions,\n  modalanimation,\n  nextSlidePc,\n  optionsImages,\n  ActiveSlide,\n  optionsNameData,\n  clickOptions,\n  optionsClickType,\n  getSliderWidthNew\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      onTouchStart: handleTouchStartOptions,\n      onTouchMove: handleTouchMoveOptions,\n      style: {\n        zIndex: 1,\n        padding: \"0px\",\n        top: matchPc ? \"-2vh\" : \"0vh\",\n        position: \"relative\",\n        margin: \"0 auto\",\n        overflow: \"hidden\",\n        left: \"0px\",\n        height: matchPc ? \"24.4vh\" : \"20.5vh\",\n        paddingBottom: \"1px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        ref: optionsCollectImageRef,\n        style: modalanimation,\n        children: optionsImages.map((im, i) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                clickOptions(i, optionsClickType, \"\");\n              },\n              style: {\n                cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\n                width: `${getSliderWidthNew}px`,\n                height: `${getSliderWidthNew}px`,\n                backgroundColor: darkmodeReducer ? \"rgba(010,010,010, 0.68)\" : \"rgba(220,220,220, 0.7)\",\n                borderRadius: \"50%\",\n                marginTop: \"2.15vh\",\n                textAlign: \"center\",\n                alignItems: \"center\",\n                display: \"grid\",\n                justifyContent: \"center\",\n                boxShadow: darkmodeReducer ? ActiveSlide === i ? colortypeReducer === 0 ? `0 0 5.5px ${colorReducerdark}` : `0 0 5.5px ${colorReducer}` : \"0 0 5.5px#aaaaaa\" : ActiveSlide === i ? `0 0 5.5px ${colorReducer}` : \"0 0 5.45px#222222\"\n              },\n              children: [i === 0 ? /*#__PURE__*/_jsxDEV(MusicNoteIcon, {\n                style: {\n                  fontSize: matchPc ? \"2vw\" : \"5vh\",\n                  color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                },\n                className: \"zuperkinginfo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this) : null, i === 1 ? /*#__PURE__*/_jsxDEV(PhotoIcon, {\n                style: {\n                  fontSize: matchPc ? \"2vw\" : \"5vh\",\n                  color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                },\n                className: \"zuperkinginfo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this) : null, i === 2 ? /*#__PURE__*/_jsxDEV(GifIcon, {\n                style: {\n                  fontSize: matchPc ? \"2.5vw\" : \"5vh\",\n                  color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                },\n                className: \"zuperkinginfo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this) : null, i === 3 ? /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n                style: {\n                  fontSize: matchPc ? \"2.3vw\" : \"5vh\",\n                  color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                },\n                className: \"zuperkinginfo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 21\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              margin: \"auto\",\n              textAlign: \"center\",\n              position: \"relative\",\n              bottom: \"-0.5em\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              style: {\n                fontSize: matchPc ? \"1.1vw\" : \"2vh\",\n                fontWeight: \"bolder\",\n                fontFamily: \"Arial, Helvetica, sans-serif\",\n                visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\n                color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\"\n              },\n              children: [\" \", optionsNameData[i]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      style: {\n        visibility: \"hidden\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UploadMenux, \"l9V5GnzgsaHuUpw3fMVpEkusZC4=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = UploadMenux;\nexport const UploadMenu = /*#__PURE__*/React.memo(UploadMenux);\n_c2 = UploadMenu;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadMenux\");\n$RefreshReg$(_c2, \"UploadMenu\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/UploadMenu.tsx"],"names":["React","matchPc","Grid","useSelector","animated","MusicNoteIcon","PhotoIcon","GifIcon","ChevronRightIcon","UploadMenux","optionsShow","optinstopshowingReducer","typeTop","closeoptionsslide","animationop","optionsCollectImageRef","handleTouchStartOptions","handleTouchMoveOptions","modalanimation","nextSlidePc","optionsImages","ActiveSlide","optionsNameData","clickOptions","optionsClickType","getSliderWidthNew","darkmode","state","GlobalReducer","darkmodeReducer","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","zIndex","padding","top","position","margin","overflow","left","height","paddingBottom","map","im","i","cursor","width","backgroundColor","borderRadius","marginTop","textAlign","alignItems","display","justifyContent","boxShadow","fontSize","bottom","fontWeight","fontFamily","visibility","UploadMenu","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\n\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\n\r\nfunction UploadMenux({\r\n  optionsShow,\r\n  optinstopshowingReducer,\r\n  typeTop,\r\n  closeoptionsslide,\r\n  animationop,\r\n  optionsCollectImageRef,\r\n  handleTouchStartOptions,\r\n  handleTouchMoveOptions,\r\n  modalanimation,\r\n  nextSlidePc,\r\n  optionsImages,\r\n  ActiveSlide,\r\n  optionsNameData,\r\n  clickOptions,\r\n  optionsClickType,\r\n  getSliderWidthNew,\r\n}: any): JSX.Element {\r\n  ///\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        onTouchStart={handleTouchStartOptions}\r\n        onTouchMove={handleTouchMoveOptions}\r\n        style={{\r\n          zIndex: 1,\r\n          padding: \"0px\",\r\n          top: matchPc ? \"-2vh\" : \"0vh\",\r\n          position: \"relative\",\r\n          margin: \"0 auto\",\r\n          overflow: \"hidden\",\r\n          left: \"0px\",\r\n          height: matchPc ? \"24.4vh\" : \"20.5vh\",\r\n          paddingBottom: \"1px\",\r\n        }}\r\n      >\r\n        <animated.div ref={optionsCollectImageRef} style={modalanimation}>\r\n          {optionsImages.map((im: any, i: any) => (\r\n            <Grid key={i} item xs={12}>\r\n              <label htmlFor=\"file\">\r\n                <div\r\n                  onClick={() => {\r\n                    clickOptions(i, optionsClickType, \"\");\r\n                  }}\r\n                  style={{\r\n                    cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\r\n                    width: `${getSliderWidthNew}px`,\r\n                    height: `${getSliderWidthNew}px`,\r\n                    backgroundColor: darkmodeReducer\r\n                      ? \"rgba(010,010,010, 0.68)\"\r\n                      : \"rgba(220,220,220, 0.7)\",\r\n                    borderRadius: \"50%\",\r\n                    marginTop: \"2.15vh\",\r\n                    textAlign: \"center\",\r\n                    alignItems: \"center\",\r\n                    display: \"grid\",\r\n\r\n                    justifyContent: \"center\",\r\n                    boxShadow: darkmodeReducer\r\n                      ? ActiveSlide === i\r\n                        ? colortypeReducer === 0\r\n                          ? `0 0 5.5px ${colorReducerdark}`\r\n                          : `0 0 5.5px ${colorReducer}`\r\n                        : \"0 0 5.5px#aaaaaa\"\r\n                      : ActiveSlide === i\r\n                      ? `0 0 5.5px ${colorReducer}`\r\n                      : \"0 0 5.45px#222222\",\r\n                  }}\r\n                >\r\n                  {i === 0 ? (\r\n                    <MusicNoteIcon\r\n                      style={{\r\n                        fontSize: matchPc ? \"2vw\" : \"5vh\",\r\n                        color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                      }}\r\n                      className=\"zuperkinginfo\"\r\n                    />\r\n                  ) : null}\r\n                  {i === 1 ? (\r\n                    <PhotoIcon\r\n                      style={{\r\n                        fontSize: matchPc ? \"2vw\" : \"5vh\",\r\n                        color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                      }}\r\n                      className=\"zuperkinginfo\"\r\n                    />\r\n                  ) : null}\r\n                  {i === 2 ? (\r\n                    <GifIcon\r\n                      style={{\r\n                        fontSize: matchPc ? \"2.5vw\" : \"5vh\",\r\n                        color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                      }}\r\n                      className=\"zuperkinginfo\"\r\n                    />\r\n                  ) : null}\r\n                  {i === 3 ? (\r\n                    <ChevronRightIcon\r\n                      style={{\r\n                        fontSize: matchPc ? \"2.3vw\" : \"5vh\",\r\n                        color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                      }}\r\n                      className=\"zuperkinginfo\"\r\n                    />\r\n                  ) : null}\r\n                </div>\r\n              </label>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  margin: \"auto\",\r\n                  textAlign: \"center\",\r\n                  position: \"relative\",\r\n                  bottom: \"-0.5em\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{\r\n                    fontSize: matchPc ? \"1.1vw\" : \"2vh\",\r\n                    fontWeight: \"bolder\",\r\n                    fontFamily: \"Arial, Helvetica, sans-serif\",\r\n                    visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\r\n                    color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {optionsNameData[i]}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n        </animated.div>\r\n      </Grid>\r\n      <input type=\"file\" id=\"file\" style={{ visibility: \"hidden\" }} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport const UploadMenu = React.memo(UploadMenux);\r\n"]},"metadata":{},"sourceType":"module"}