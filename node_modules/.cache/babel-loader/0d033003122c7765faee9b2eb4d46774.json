{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\ModalLog.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSpring } from \"react-spring\";\nimport \"./ModalLog.css\";\nimport Axios from \"axios\";\nimport { PcModalLog } from \"./PcModalLog\";\nimport { MobileModalLog } from \"./MobileModalLog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nAxios.defaults.withCredentials = true;\n\nfunction ModalLogx({\n  matchPc,\n  matchTablet,\n  screenHeight,\n  formtype,\n  CloseModalForm,\n  showModalForm,\n  PaperStyle,\n  signupstyle,\n  loginstyle,\n  darkmode\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n  const modalanimation = useSpring({\n    config: {\n      duration: 400\n    },\n    opacity: showModalForm ? 1 : 0.9,\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`\n  });\n  const modalanimationTwo = useSpring({\n    config: {\n      duration: 350\n    },\n    opacity: showModalForm ? 1 : 0.9,\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`\n  });\n  const DialogeData = {\n    darkmode: darkmode,\n    PaperStyle: PaperStyle,\n    loginstyle: loginstyle,\n    signupstyle: signupstyle,\n    showModalForm: showModalForm,\n    modalanimation: modalanimation,\n    modalanimationTwo: modalanimationTwo\n  };\n  const DialogeDataMobile = {\n    mobileZoom: mobileZoom,\n    setMobileZoom: setMobileZoom,\n    wideImage: wideImage,\n    onBackgroundFocus: onBackgroundFocus,\n    ModalBackgroundRef: ModalBackgroundRef,\n    imageHeightoverflow: imageHeightoverflow,\n    zoomlogmodal: zoomlogmodal,\n    showimage: showimage,\n    serverEmojiplain: serverEmojiplain,\n    serverErrorData: serverErrorData,\n    setServerErrorData: setServerErrorData,\n    serverErrorDisplay: serverErrorDisplay,\n    darkmode: darkmode,\n    PaperStyle: PaperStyle,\n    iconclicked: iconclicked,\n    onimageload: onimageload,\n    formtype: formtype,\n    logout: logout,\n    errorsLoginInputedUsername: errorsLoginValues.inputedUsername,\n    errorsLoginInputedPassword: errorsLoginValues.inputedPassword,\n    updateLoginvalues: updateLoginvalues,\n    rawLogininputedUsername: rawLoginValues.inputedUsername,\n    rawLogininputedPassword: rawLoginValues.inputedPassword,\n    loginShowPassword: loginShowPassword,\n    ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\n    logmein: logmein,\n    loginstyle: loginstyle,\n    errorFormCheckinginputedEmail: errorFormChecking.inputedEmail,\n    cantPassBadEmail: cantPassBadEmail,\n    emailErrorDisplay: emailErrorDisplay,\n    emailErrorData: emailErrorData,\n    updateSignvalues: updateSignvalues,\n    rawSignupValuesinputedEmail: rawSignupValues.inputedEmail,\n    errorsSignupValuesinputedUsername: errorsSignupValues.inputedUsername,\n    errorFormCheckinginputedUsername: errorFormChecking.inputedUsername,\n    usernameErrorDisplay: usernameErrorDisplay,\n    usernameErrorData: usernameErrorData,\n    rawSignupValuesinputedUsername: rawSignupValues.inputedUsername,\n    signupShowPassword: signupShowPassword,\n    rawSignupValuesinputedPassword: rawSignupValues.inputedPassword,\n    ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\n    errorFormCheckinginputedPassword: errorFormChecking.inputedPassword,\n    passwordErrorDisplay: passwordErrorDisplay,\n    passwordErrorData: passwordErrorData,\n    signupstyle: signupstyle,\n    signmeup: signmeup,\n    showModalForm: showModalForm,\n    modalanimation: modalanimation\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModalForm ? matchPc ? /*#__PURE__*/_jsxDEV(PcModalLog, { ...DialogeData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }, this) : matchTablet ? /*#__PURE__*/_jsxDEV(MobileModalLog, { ...DialogeDataMobile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(MobileModalLog, { ...DialogeDataMobile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(ModalLogx, \"aaczFpUC1a7m1VKPkV3ZD2Fp6U4=\", false, function () {\n  return [useSpring, useSpring];\n});\n\n_c = ModalLogx;\nexport const ModalLog = /*#__PURE__*/React.memo(ModalLogx);\n_c2 = ModalLog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalLogx\");\n$RefreshReg$(_c2, \"ModalLog\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/ModalLog.tsx"],"names":["React","useSpring","Axios","PcModalLog","MobileModalLog","defaults","withCredentials","ModalLogx","matchPc","matchTablet","screenHeight","formtype","CloseModalForm","showModalForm","PaperStyle","signupstyle","loginstyle","darkmode","modalanimation","config","duration","opacity","transform","modalanimationTwo","DialogeData","DialogeDataMobile","mobileZoom","setMobileZoom","wideImage","onBackgroundFocus","ModalBackgroundRef","imageHeightoverflow","zoomlogmodal","showimage","serverEmojiplain","serverErrorData","setServerErrorData","serverErrorDisplay","iconclicked","onimageload","logout","errorsLoginInputedUsername","errorsLoginValues","inputedUsername","errorsLoginInputedPassword","inputedPassword","updateLoginvalues","rawLogininputedUsername","rawLoginValues","rawLogininputedPassword","loginShowPassword","ShowLoginPasswordForaWhile","logmein","errorFormCheckinginputedEmail","errorFormChecking","inputedEmail","cantPassBadEmail","emailErrorDisplay","emailErrorData","updateSignvalues","rawSignupValuesinputedEmail","rawSignupValues","errorsSignupValuesinputedUsername","errorsSignupValues","errorFormCheckinginputedUsername","usernameErrorDisplay","usernameErrorData","rawSignupValuesinputedUsername","signupShowPassword","rawSignupValuesinputedPassword","ShowSignupPasswordForaWhile","errorFormCheckinginputedPassword","passwordErrorDisplay","passwordErrorData","signmeup","ModalLog","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\n\r\nimport image1 from \"./images/modalpic1.jpg\";\r\nimport image2 from \"./images/modalpic2.jpg\";\r\nimport image3 from \"./images/modalpic3.png\";\r\nimport image4 from \"./images/modalpic4.jpg\";\r\nimport image5 from \"./images/modalpic5.jpg\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport image6 from \"./images/modalpic6.jpg\";\r\nimport { DialogContent } from \"@material-ui/core\";\r\n\r\nimport { ImodalLog, IGrid } from \"./appFolder-Interfaces\";\r\nimport \"./ModalLog.css\";\r\nimport Axios from \"axios\";\r\nimport { PcModalLog } from \"./PcModalLog\";\r\nimport { MobileModalLog } from \"./MobileModalLog\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nAxios.defaults.withCredentials = true;\r\n\r\nfunction ModalLogx({\r\n  matchPc,\r\n  matchTablet,\r\n  screenHeight,\r\n  formtype,\r\n  CloseModalForm,\r\n  showModalForm,\r\n  PaperStyle,\r\n  signupstyle,\r\n  loginstyle,\r\n  darkmode,\r\n}: ImodalLog): JSX.Element {\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      duration: 400,\r\n    },\r\n    opacity: showModalForm ? 1 : 0.9,\r\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`,\r\n  });\r\n\r\n  const modalanimationTwo = useSpring({\r\n    config: {\r\n      duration: 350,\r\n    },\r\n    opacity: showModalForm ? 1 : 0.9,\r\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`,\r\n  });\r\n\r\n  const DialogeData = {\r\n    darkmode: darkmode,\r\n    PaperStyle: PaperStyle,\r\n    loginstyle: loginstyle,\r\n    signupstyle: signupstyle,\r\n    showModalForm: showModalForm,\r\n    modalanimation: modalanimation,\r\n    modalanimationTwo: modalanimationTwo,\r\n  };\r\n\r\n  const DialogeDataMobile = {\r\n    mobileZoom: mobileZoom,\r\n    setMobileZoom: setMobileZoom,\r\n    wideImage: wideImage,\r\n    onBackgroundFocus: onBackgroundFocus,\r\n    ModalBackgroundRef: ModalBackgroundRef,\r\n    imageHeightoverflow: imageHeightoverflow,\r\n    zoomlogmodal: zoomlogmodal,\r\n    showimage: showimage,\r\n    serverEmojiplain: serverEmojiplain,\r\n    serverErrorData: serverErrorData,\r\n    setServerErrorData: setServerErrorData,\r\n    serverErrorDisplay: serverErrorDisplay,\r\n    darkmode: darkmode,\r\n    PaperStyle: PaperStyle,\r\n\r\n    iconclicked: iconclicked,\r\n\r\n    onimageload: onimageload,\r\n    formtype: formtype,\r\n\r\n    logout: logout,\r\n    errorsLoginInputedUsername: errorsLoginValues.inputedUsername,\r\n    errorsLoginInputedPassword: errorsLoginValues.inputedPassword,\r\n\r\n    updateLoginvalues: updateLoginvalues,\r\n    rawLogininputedUsername: rawLoginValues.inputedUsername,\r\n    rawLogininputedPassword: rawLoginValues.inputedPassword,\r\n    loginShowPassword: loginShowPassword,\r\n    ShowLoginPasswordForaWhile: ShowLoginPasswordForaWhile,\r\n    logmein: logmein,\r\n    loginstyle: loginstyle,\r\n    errorFormCheckinginputedEmail: errorFormChecking.inputedEmail,\r\n    cantPassBadEmail: cantPassBadEmail,\r\n    emailErrorDisplay: emailErrorDisplay,\r\n    emailErrorData: emailErrorData,\r\n    updateSignvalues: updateSignvalues,\r\n    rawSignupValuesinputedEmail: rawSignupValues.inputedEmail,\r\n    errorsSignupValuesinputedUsername: errorsSignupValues.inputedUsername,\r\n    errorFormCheckinginputedUsername: errorFormChecking.inputedUsername,\r\n    usernameErrorDisplay: usernameErrorDisplay,\r\n    usernameErrorData: usernameErrorData,\r\n    rawSignupValuesinputedUsername: rawSignupValues.inputedUsername,\r\n    signupShowPassword: signupShowPassword,\r\n    rawSignupValuesinputedPassword: rawSignupValues.inputedPassword,\r\n    ShowSignupPasswordForaWhile: ShowSignupPasswordForaWhile,\r\n    errorFormCheckinginputedPassword: errorFormChecking.inputedPassword,\r\n    passwordErrorDisplay: passwordErrorDisplay,\r\n    passwordErrorData: passwordErrorData,\r\n    signupstyle: signupstyle,\r\n    signmeup: signmeup,\r\n    showModalForm: showModalForm,\r\n    modalanimation: modalanimation,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModalForm ? (\r\n        matchPc ? (\r\n          <PcModalLog {...DialogeData} />\r\n        ) : matchTablet ? (\r\n          <MobileModalLog {...DialogeDataMobile} />\r\n        ) : (\r\n          <MobileModalLog {...DialogeDataMobile} />\r\n        )\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const ModalLog = React.memo(ModalLogx);\r\n"]},"metadata":{},"sourceType":"module"}