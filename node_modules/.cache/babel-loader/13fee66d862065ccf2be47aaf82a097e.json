{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\TaskbarSuperphotoImageView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskbarSuperphotoImageViewx({\n  AddMainImageRef,\n  index,\n  MainImageFiltersRef\n}) {\n  _s();\n\n  const [fade, setfade] = useState(false);\n  const animationmenu = useSpring({\n    config: {\n      duration: 2\n    },\n    opacity: fade ? 0 : 1\n  });\n  useEffect(() => {}, [MainImageFiltersRef.current]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(animated.image, {\n      style: animationmenu,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: AddMainImageRef,\n        style: {\n          cursor: 'pointer'\n        },\n        src: MainImageFiltersRef.current[index] ? MainImageFiltersRef.current[index].src : null,\n        alt: `Image ${index}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(TaskbarSuperphotoImageViewx, \"uUXnq7I5EugY0JYMFtjGZ409svE=\", false, function () {\n  return [useSpring];\n});\n\n_c = TaskbarSuperphotoImageViewx;\nexport const TaskbarSuperphotoImageView = /*#__PURE__*/React.memo(TaskbarSuperphotoImageViewx);\n_c2 = TaskbarSuperphotoImageView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskbarSuperphotoImageViewx\");\n$RefreshReg$(_c2, \"TaskbarSuperphotoImageView\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/TaskbarSuperphotoImageView.tsx"],"names":["React","useEffect","useState","useSpring","animated","TaskbarSuperphotoImageViewx","AddMainImageRef","index","MainImageFiltersRef","fade","setfade","animationmenu","config","duration","opacity","current","cursor","src","TaskbarSuperphotoImageView","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAEIC,SAFJ,EAIIC,QAJJ,QAMO,OANP;AAUA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;;;;AA2BA,SAASC,2BAAT,CAAqC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA;AAA1B,CAArC,EAAwG;AAAA;;AAGpG,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AAGA,QAAMS,aAAa,GAAGR,SAAS,CAAC;AAC5BS,IAAAA,MAAM,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN,KADoB;AAI5BC,IAAAA,OAAO,EAAEL,IAAI,GAAG,CAAH,GAAO;AAJQ,GAAD,CAA/B;AASAR,EAAAA,SAAS,CAAC,MAAM,CAKf,CALQ,EAKN,CAACO,mBAAmB,CAACO,OAArB,CALM,CAAT;AAOA,sBACI;AAAA,2BACI,QAAC,QAAD,CAAU,KAAV;AAA4B,MAAA,KAAK,EAAEJ,aAAnC;AAAA,6BACI;AAAK,QAAA,GAAG,EAAEL,eAAV;AAA2B,QAAA,KAAK,EAAE;AAAEU,UAAAA,MAAM,EAAE;AAAV,SAAlC;AAAyD,QAAA,GAAG,EACxDR,mBAAmB,CAACO,OAApB,CAA4BR,KAA5B,IACMC,mBAAmB,CAACO,OAApB,CAA4BR,KAA5B,EAAmCU,GADzC,GAEM,IAHV;AAKI,QAAA,GAAG,EAAG,SAAQV,KAAM;AALxB;AAAA;AAAA;AAAA;AAAA;AADJ,OAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAcH;;GApCQF,2B;UAMiBF,S;;;KANjBE,2B;AAsCT,OAAO,MAAMa,0BAA0B,gBAAGlB,KAAK,CAACmB,IAAN,CAAWd,2BAAX,CAAnC;MAAMa,0B","sourcesContent":["import React, {\r\n    useRef,\r\n    useEffect,\r\n    useCallback,\r\n    useState,\r\n    useLayoutEffect,\r\n} from \"react\";\r\nimport ControlPointDuplicateIcon from \"@mui/icons-material/ControlPointDuplicate\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport Axios from \"axios\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport date from \"date-and-time\";\r\nimport { UserInfoUpdatePROFILE } from \"../log/actions/UserdataAction\";\r\nimport { UserInfoUpdateBILLBOARD } from \"../log/actions/UserdataAction\";\r\nimport { usePalette } from \"react-palette\";\r\nimport { UpdateColorAction } from \"../GlobalActions\";\r\nimport EditTwoToneIcon from \"@mui/icons-material/EditTwoTone\";\r\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\r\nimport { UpdateUploadData } from \"../GlobalActions\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\nimport CropIcon from '@mui/icons-material/Crop';\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { TaskbarCrop } from \"./TaskbarCrop\";\r\nimport set from \"date-fns/set/index.js\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TaskbarSuperphotoImageViewx({ AddMainImageRef, index, MainImageFiltersRef }: any): JSX.Element {\r\n\r\n\r\n    const [fade, setfade] = useState(false);\r\n\r\n\r\n    const animationmenu = useSpring({\r\n        config: {\r\n            duration: 2,\r\n        },\r\n        opacity: fade ? 0 : 1,\r\n\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n\r\n    }, [MainImageFiltersRef.current])\r\n\r\n    return (\r\n        <>\r\n            <animated.image key={index} style={animationmenu}>\r\n                <img ref={AddMainImageRef} style={{ cursor: 'pointer' }} src={\r\n                    MainImageFiltersRef.current[index]\r\n                        ? MainImageFiltersRef.current[index].src\r\n                        : null\r\n                }\r\n                    alt={`Image ${index}`} />\r\n            </animated.image>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport const TaskbarSuperphotoImageView = React.memo(TaskbarSuperphotoImageViewx);\r\n"]},"metadata":{},"sourceType":"module"}