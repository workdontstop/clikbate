{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\Slider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Slide from \"./Slide\";\nimport Arrow from \"./Arrow\";\nimport Dots from \"./Dots\";\nimport { useSpring, useTransition, animated } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Slider = ({\n  slides\n}) => {\n  _s();\n\n  const getWidth = () => window.innerWidth;\n\n  var newGetWidth = getWidth() * slides.length;\n  const [slideState, setSlideState] = useState({\n    activeSlide: 0,\n    translate: 0,\n    transition: 0.45\n  });\n  const {\n    translate,\n    transition,\n    activeSlide\n  } = slideState;\n\n  const nextSlide = () => {\n    if (activeSlide === slides.length - 1) {\n      return setSlideState({ ...slideState,\n        translate: 0,\n        activeSlide: 0\n      });\n    }\n\n    setSlideState({ ...slideState,\n      activeSlide: activeSlide + 1,\n      translate: (activeSlide + 1) * getWidth()\n    });\n  };\n\n  const prevSlide = () => {\n    if (activeSlide === 0) {\n      return setSlideState({ ...slideState,\n        translate: (slides.length - 1) * getWidth(),\n        activeSlide: slides.length - 1\n      });\n    }\n\n    setSlideState({ ...slideState,\n      activeSlide: activeSlide - 1,\n      translate: (activeSlide - 1) * getWidth()\n    });\n  }; ///\n  ///\n  ///\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n\n\n  const modalanimatkkion = useSpring({\n    config: {\n      duration: 300\n    },\n    transform: `translateX(-${translate}px)`,\n    height: \"auto\",\n    opacity: 1,\n    display: \"flex\",\n    width: `${newGetWidth}px`\n  });\n  const modalanimation = useTransition(items, {\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    delay: 200,\n    config: config.molasses ///onRest: () => setItems([]),\n\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100vw\",\n      height: \"auto\",\n      margin: \"0 auto\",\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(animated.div, {\n      style: modalanimation,\n      children: slides.map((slide, i) => /*#__PURE__*/_jsxDEV(Slide, {\n        content: slide\n      }, slide, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Arrow, {\n      direction: \"left\",\n      clickSlide: prevSlide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Arrow, {\n      direction: \"right\",\n      clickSlide: nextSlide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dots, {\n      slides: slides,\n      activeSlide: activeSlide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"cbbwMgfpqPqE+oQ2hz4Mfd9uxuI=\", false, function () {\n  return [useSpring, useTransition];\n});\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/Slider.tsx"],"names":["React","useState","Slide","Arrow","Dots","useSpring","useTransition","animated","Slider","slides","getWidth","window","innerWidth","newGetWidth","length","slideState","setSlideState","activeSlide","translate","transition","nextSlide","prevSlide","modalanimatkkion","config","duration","transform","height","opacity","display","width","modalanimation","items","from","enter","leave","delay","molasses","position","margin","overflow","map","slide","i"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport Slide from \"./Slide\";\r\nimport Arrow from \"./Arrow\";\r\nimport Dots from \"./Dots\";\r\nimport { useSpring, useTransition, animated } from \"react-spring\";\r\n\r\nconst Slider = ({ slides }: any) => {\r\n  const getWidth = () => window.innerWidth;\r\n  var newGetWidth = getWidth() * slides.length;\r\n\r\n  const [slideState, setSlideState] = useState({\r\n    activeSlide: 0,\r\n    translate: 0,\r\n    transition: 0.45,\r\n  });\r\n\r\n  const { translate, transition, activeSlide } = slideState;\r\n\r\n  const nextSlide = () => {\r\n    if (activeSlide === slides.length - 1) {\r\n      return setSlideState({\r\n        ...slideState,\r\n        translate: 0,\r\n        activeSlide: 0,\r\n      });\r\n    }\r\n\r\n    setSlideState({\r\n      ...slideState,\r\n      activeSlide: activeSlide + 1,\r\n      translate: (activeSlide + 1) * getWidth(),\r\n    });\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    if (activeSlide === 0) {\r\n      return setSlideState({\r\n        ...slideState,\r\n        translate: (slides.length - 1) * getWidth(),\r\n        activeSlide: slides.length - 1,\r\n      });\r\n    }\r\n\r\n    setSlideState({\r\n      ...slideState,\r\n      activeSlide: activeSlide - 1,\r\n      translate: (activeSlide - 1) * getWidth(),\r\n    });\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const modalanimatkkion = useSpring({\r\n    config: {\r\n      duration: 300,\r\n    },\r\n    transform: `translateX(-${translate}px)`,\r\n    height: \"auto\",\r\n    opacity: 1,\r\n    display: \"flex\",\r\n    width: `${newGetWidth}px`,\r\n  });\r\n\r\n  const modalanimation = useTransition(items, {\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n    delay: 200,\r\n    config: config.molasses,\r\n    ///onRest: () => setItems([]),\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        width: \"100vw\",\r\n        height: \"auto\",\r\n        margin: \"0 auto\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      <animated.div style={modalanimation}>\r\n        {slides.map((slide: any, i: any) => (\r\n          <Slide key={slide} content={slide} />\r\n        ))}\r\n      </animated.div>\r\n\r\n      <Arrow direction=\"left\" clickSlide={prevSlide} />\r\n\r\n      <Arrow direction=\"right\" clickSlide={nextSlide} />\r\n\r\n      <Dots slides={slides} activeSlide={activeSlide} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n"]},"metadata":{},"sourceType":"module"}