{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\Clikbate\\\\src\\\\upload\\\\VideoEditor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useCallback } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { matchMobile } from \"../DetectDevice\";\nimport AdjustIcon from '@material-ui/icons/Adjust';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VideoEditorx({\n  VideoUrl,\n  VideoUrl2,\n  ShowVideo2,\n  ShowVideo,\n  setShowVideo2,\n  setShowVideo,\n  setinteractContentvideo2,\n  setinteractContentvideo,\n  setinteractContenttype,\n  setinteractContenttype2,\n  callDelInteract,\n  setadjustinteract1,\n  setadjustinteract2\n}) {\n  _s();\n\n  ///\n  const videoPlayerRef = useRef(null);\n  const videoPlayerRefx = useRef(null);\n  const Timer2 = useRef(null);\n  const Timer1 = useRef(null);\n  const Timer3 = useRef(null);\n  const wait = 2000; ///\n  ///DARKMODE FROM REDUX\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const [currentTimestamp, setCurrentTimestamp] = useState(0);\n\n  const updateCurrentTimestamp = () => {\n    sethideend(false);\n\n    if (videoPlayerRef.current) {\n      var x = videoPlayerRef.current.currentTime;\n      setCurrentTimestamp(x);\n      setprocessing(true);\n      startRecording(VideoUrl, x - 1, 17);\n    }\n  }; // New state for recorded video URL\n\n\n  const [recordedVideoUrl, setRecordedVideoUrl] = useState(null);\n  const [RecordedBlob, setRecordedBlob] = useState(null);\n  const [rec, setRec] = useState(false);\n  const [processing, setprocessing] = useState(false);\n  const recorderRef = useRef(null);\n  const [hideend, sethideend] = useState(false);\n  const [Preview, setPreview] = useState(false);\n\n  const stopRecording = () => {\n    if (recorderRef.current && recorderRef.current.state === \"recording\") {\n      recorderRef.current.stop();\n\n      if (videoPlayerRef.current) {\n        videoPlayerRef.current.pause();\n      }\n\n      if (Timer2.current) {\n        clearTimeout(Timer2.current);\n      }\n\n      if (Timer1.current) {\n        clearTimeout(Timer1.current);\n      }\n\n      if (Timer3.current) {\n        clearTimeout(Timer3.current);\n      }\n\n      sethideend(true);\n      Timer3.current = setTimeout(() => {\n        setprocessing(false);\n      }, wait);\n    }\n  };\n\n  const startRecording = (sourceVideoUrl, startTime, duration) => {\n    const video = videoPlayerRef.current;\n\n    if (video) {\n      video.src = sourceVideoUrl;\n      video.currentTime = startTime;\n\n      video.onloadedmetadata = () => {\n        video.currentTime = startTime;\n      };\n\n      video.onseeked = () => {\n        video.play();\n        const stream = video.captureStream(); // Specify MIME type and quality parameters\n\n        const options = {\n          mimeType: 'video/webm; codecs=vp9',\n          // or 'video/mp4' based on browser support\n          videoBitsPerSecond: 500000 // Adjust bitrate as needed\n\n        };\n\n        if (MediaRecorder.isTypeSupported(options.mimeType)) {\n          recorderRef.current = new MediaRecorder(stream, options);\n        } else {\n          recorderRef.current = new MediaRecorder(stream); // Fallback to default settings\n        }\n\n        const chunks = [];\n\n        recorderRef.current.ondataavailable = e => chunks.push(e.data);\n\n        recorderRef.current.onstop = () => {\n          const blob = new Blob(chunks, {\n            type: options.mimeType\n          });\n          setRecordedBlob(blob);\n          const url = URL.createObjectURL(blob);\n          setRecordedVideoUrl(url);\n          video.pause();\n\n          if (Timer1.current) {\n            clearTimeout(Timer1.current);\n          }\n\n          if (Timer2.current) {\n            clearTimeout(Timer2.current);\n          }\n\n          Timer1.current = setTimeout(() => {\n            setRec(true);\n            setprocessing(false);\n          }, wait);\n        };\n\n        recorderRef.current.start();\n\n        if (Timer2.current) {\n          clearTimeout(Timer2.current);\n        }\n\n        if (Timer1.current) {\n          clearTimeout(Timer1.current);\n        }\n\n        Timer2.current = setTimeout(() => {\n          recorderRef.current && recorderRef.current.stop();\n        }, duration * 1000);\n      };\n\n      video.load();\n    }\n  }; // Call this function when you want to start recording\n  // For example: startRecording(VideoUrl, 0, 10) for a 10-second clip from the start\n\n\n  const close = save => {\n    const video = videoPlayerRef.current;\n\n    if (video) {\n      video.pause();\n    }\n\n    if (save) {} else {\n      if (ShowVideo2) {\n        callDelInteract(false);\n      } else {\n        callDelInteract(true);\n      }\n    }\n\n    setShowVideo(false);\n    setPreview(false);\n    setRec(false);\n    setShowVideo2(false);\n  };\n\n  const Save = useCallback(() => {\n    if (ShowVideo2) {\n      setinteractContentvideo2(RecordedBlob);\n      setinteractContenttype2(1);\n      setadjustinteract2(true);\n      close(true);\n    } else {\n      setinteractContentvideo(RecordedBlob);\n      setinteractContenttype(1);\n      setadjustinteract1(true);\n      close(true);\n    }\n  }, [RecordedBlob, ShowVideo2]);\n  const {\n    PaperStyleLight,\n    PaperStyleDark\n  } = useSelector(state => ({ ...state.PaperReducerLightnDark\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      style: {\n        display: ShowVideo ? 'block' : 'none',\n        position: 'fixed',\n        top: '0vh',\n        height: '100vh',\n        backgroundImage: darkmodeReducer ? PaperStyleDark : PaperStyleLight,\n        width: '100%',\n        margin: 'auto',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoPlayerRef,\n        src: VideoUrl,\n        controls: true,\n        style: {\n          width: '50%',\n          margin: 'auto',\n          textAlign: 'center',\n          display: Preview ? 'none' : 'block'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), recordedVideoUrl && rec ? /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoPlayerRefx,\n        src: recordedVideoUrl,\n        controls: true,\n        style: {\n          width: '50%',\n          margin: 'auto',\n          textAlign: 'center',\n          display: Preview ? 'block' : 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 36\n      }, this) : null, Preview ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          bottom: '-7vh',\n          position: 'relative',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          fontSize: '24px',\n          fontFamily: 'Helvetica, Arial, sans-serif',\n          color: darkmodeReducer ? \"#ffffff\" : '#000000'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          onClick: () => {\n            ////setRec(false);\n            /////setRecordedVideoUrl(null);\n            if (videoPlayerRefx.current) {\n              videoPlayerRefx.current.pause();\n            }\n\n            setPreview(false);\n          },\n          style: {\n            border: darkmodeReducer ? '2px solid white' : '2px solid black',\n            cursor: 'pointer',\n            height: '15vh',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: \"EDIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          onClick: () => {\n            if (videoPlayerRefx.current) {\n              videoPlayerRefx.current.pause();\n            }\n\n            Save();\n          },\n          xs: 3,\n          style: {\n            cursor: 'pointer',\n            height: '15vh',\n            border: darkmodeReducer ? '2px solid white' : '2px solid black',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '24px'\n          },\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          bottom: '-7vh',\n          position: 'relative',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          fontSize: '24px',\n          fontFamily: 'Helvetica, Arial, sans-serif',\n          color: darkmodeReducer ? \"#ffffff\" : '#000000'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          onClick: () => {\n            if (processing) {} else {\n              updateCurrentTimestamp();\n            }\n          },\n          style: {\n            cursor: processing ? 'default' : 'pointer',\n            opacity: processing ? 0.25 : 1,\n            height: '15vh',\n            border: darkmodeReducer ? '2px solid white' : '2px solid black',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: \"START\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), processing ? /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"blinking\",\n          item: true,\n          xs: 2,\n          style: {\n            height: '15vh',\n            border: '0px solid white',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '24px',\n            visibility: 'visible'\n          },\n          children: /*#__PURE__*/_jsxDEV(AdjustIcon, {\n            className: darkmodeReducer ? \"dontallowhighlighting zuperkingIcon \" : \"dontallowhighlighting zuperkingIcon  \",\n            style: {\n              margin: \"auto\",\n              fontSize: matchMobile ? `3vh` : `2.5vw`,\n              color: 'red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          onClick: () => {\n            if (videoPlayerRef.current) {\n              videoPlayerRef.current.pause();\n            }\n\n            setPreview(true);\n          },\n          style: {\n            cursor: 'pointer',\n            height: '15vh',\n            border: darkmodeReducer ? '2px solid white' : '2px solid black',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '24px',\n            visibility: recordedVideoUrl && rec ? 'visible' : 'hidden'\n          },\n          children: \"PREVIEW\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          onClick: () => {\n            if (hideend) {} else {\n              stopRecording();\n            }\n          },\n          xs: 2,\n          style: {\n            cursor: processing ? hideend ? 'default' : 'pointer' : 'default',\n            opacity: processing ? hideend ? 0.25 : 1 : 0.25,\n            height: '15vh',\n            border: darkmodeReducer ? '2px solid white' : '2px solid black',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '24px'\n          },\n          children: \"END\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        margin: \"auto\",\n        textAlign: \"right\",\n        left: '5px',\n        height: \"20px\",\n        position: 'fixed',\n        top: '3vh',\n        right: '3vw',\n        display: ShowVideo ? 'block' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        onClick: () => {\n          if (videoPlayerRefx.current) {\n            videoPlayerRefx.current.pause();\n          }\n\n          close(false);\n        },\n        className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \",\n        style: {\n          margin: \"auto\",\n          color: \"#ffffff\",\n          fontSize: matchMobile ? `3vh` : `2.5vw`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VideoEditorx, \"Hx3QuDAvPFjrQnOSKr3mWrfbvcg=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = VideoEditorx;\nexport const VideoEditor = /*#__PURE__*/React.memo(VideoEditorx);\n_c2 = VideoEditor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VideoEditorx\");\n$RefreshReg$(_c2, \"VideoEditor\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/Clikbate/src/upload/VideoEditor.tsx"],"names":["React","useRef","useState","useCallback","Grid","useSelector","CloseIcon","matchMobile","AdjustIcon","VideoEditorx","VideoUrl","VideoUrl2","ShowVideo2","ShowVideo","setShowVideo2","setShowVideo","setinteractContentvideo2","setinteractContentvideo","setinteractContenttype","setinteractContenttype2","callDelInteract","setadjustinteract1","setadjustinteract2","videoPlayerRef","videoPlayerRefx","Timer2","Timer1","Timer3","wait","darkmode","state","GlobalReducer","darkmodeReducer","currentTimestamp","setCurrentTimestamp","updateCurrentTimestamp","sethideend","current","x","currentTime","setprocessing","startRecording","recordedVideoUrl","setRecordedVideoUrl","RecordedBlob","setRecordedBlob","rec","setRec","processing","recorderRef","hideend","Preview","setPreview","stopRecording","stop","pause","clearTimeout","setTimeout","sourceVideoUrl","startTime","duration","video","src","onloadedmetadata","onseeked","play","stream","captureStream","options","mimeType","videoBitsPerSecond","MediaRecorder","isTypeSupported","chunks","ondataavailable","e","push","data","onstop","blob","Blob","type","url","URL","createObjectURL","start","load","close","save","Save","PaperStyleLight","PaperStyleDark","PaperReducerLightnDark","display","position","top","height","backgroundImage","width","margin","textAlign","bottom","alignItems","justifyContent","fontSize","fontFamily","color","border","cursor","borderRadius","opacity","visibility","left","right","VideoEditor","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useCallback,\r\n} from \"react\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { AnySoaRecord } from \"dns\";\r\nimport { PreviewCanvas } from \"./PreviewCanvas\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport AdjustIcon from '@material-ui/icons/Adjust';\r\n\r\ninterface HTMLVideoElementWithCapture extends HTMLVideoElement {\r\n  captureStream(): MediaStream;\r\n}\r\n\r\n\r\n\r\nfunction VideoEditorx({ VideoUrl, VideoUrl2, ShowVideo2, ShowVideo, setShowVideo2, setShowVideo,\r\n  setinteractContentvideo2,\r\n  setinteractContentvideo,\r\n  setinteractContenttype,\r\n  setinteractContenttype2, callDelInteract, setadjustinteract1, setadjustinteract2 }: any): JSX.Element {\r\n\r\n  ///\r\n\r\n  const videoPlayerRef = useRef<HTMLVideoElementWithCapture>(null);\r\n\r\n  const videoPlayerRefx = useRef<HTMLVideoElementWithCapture>(null);\r\n\r\n\r\n  const Timer2 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const Timer1 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const Timer3 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const wait = 2000;\r\n\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  const [currentTimestamp, setCurrentTimestamp] = useState(0);\r\n\r\n  const updateCurrentTimestamp = () => {\r\n    sethideend(false);\r\n    if (videoPlayerRef.current) {\r\n\r\n      var x = videoPlayerRef.current.currentTime;\r\n      setCurrentTimestamp(x);\r\n\r\n      setprocessing(true);\r\n\r\n      startRecording(VideoUrl, x - 1, 17);\r\n    }\r\n  };\r\n\r\n  // New state for recorded video URL\r\n  const [recordedVideoUrl, setRecordedVideoUrl] = useState(null);\r\n  const [RecordedBlob, setRecordedBlob] = useState(null);\r\n\r\n\r\n  const [rec, setRec] = useState(false);\r\n\r\n  const [processing, setprocessing] = useState(false);\r\n\r\n  const recorderRef: any = useRef(null);\r\n\r\n  const [hideend, sethideend] = useState(false);\r\n\r\n  const [Preview, setPreview] = useState(false);\r\n\r\n\r\n  const stopRecording = () => {\r\n    if (recorderRef.current && recorderRef.current.state === \"recording\") {\r\n      recorderRef.current.stop();\r\n      if (videoPlayerRef.current) {\r\n        videoPlayerRef.current.pause();\r\n      }\r\n\r\n      if (Timer2.current) {\r\n        clearTimeout(Timer2.current);\r\n      }\r\n\r\n      if (Timer1.current) {\r\n        clearTimeout(Timer1.current);\r\n      }\r\n      if (Timer3.current) {\r\n        clearTimeout(Timer3.current);\r\n      }\r\n      sethideend(true);\r\n      Timer3.current = setTimeout(() => {\r\n        setprocessing(false);\r\n      }, wait);\r\n    }\r\n  };\r\n\r\n\r\n  const startRecording = (sourceVideoUrl: any, startTime: any, duration: any) => {\r\n\r\n    const video = videoPlayerRef.current;\r\n\r\n    if (video) {\r\n      video.src = sourceVideoUrl;\r\n      video.currentTime = startTime;\r\n\r\n      video.onloadedmetadata = () => {\r\n        video.currentTime = startTime;\r\n      };\r\n\r\n      video.onseeked = () => {\r\n        video.play();\r\n        const stream = video.captureStream();\r\n\r\n        // Specify MIME type and quality parameters\r\n        const options = {\r\n          mimeType: 'video/webm; codecs=vp9', // or 'video/mp4' based on browser support\r\n          videoBitsPerSecond: 500000 // Adjust bitrate as needed\r\n        };\r\n\r\n        if (MediaRecorder.isTypeSupported(options.mimeType)) {\r\n          recorderRef.current = new MediaRecorder(stream, options);\r\n        } else {\r\n          recorderRef.current = new MediaRecorder(stream); // Fallback to default settings\r\n        }\r\n\r\n        const chunks: any = [];\r\n        recorderRef.current.ondataavailable = (e: any) => chunks.push(e.data);\r\n        recorderRef.current.onstop = () => {\r\n          const blob: any = new Blob(chunks, { type: options.mimeType });\r\n          setRecordedBlob(blob);\r\n          const url: any = URL.createObjectURL(blob);\r\n          setRecordedVideoUrl(url);\r\n          video.pause();\r\n\r\n          if (Timer1.current) {\r\n            clearTimeout(Timer1.current);\r\n          }\r\n          if (Timer2.current) {\r\n            clearTimeout(Timer2.current);\r\n          }\r\n\r\n          Timer1.current = setTimeout(() => {\r\n            setRec(true);\r\n            setprocessing(false);\r\n          }, wait);\r\n        };\r\n\r\n        recorderRef.current.start();\r\n        if (Timer2.current) {\r\n          clearTimeout(Timer2.current);\r\n        }\r\n\r\n        if (Timer1.current) {\r\n          clearTimeout(Timer1.current);\r\n        }\r\n        Timer2.current = setTimeout(() => {\r\n          recorderRef.current && recorderRef.current.stop();\r\n        }, duration * 1000);\r\n      };\r\n\r\n      video.load();\r\n    }\r\n  };  // Call this function when you want to start recording\r\n  // For example: startRecording(VideoUrl, 0, 10) for a 10-second clip from the start\r\n\r\n\r\n  const close = (save: boolean) => {\r\n\r\n    const video = videoPlayerRef.current;\r\n    if (video) { video.pause(); }\r\n\r\n\r\n    if (save) { } else {\r\n      if (ShowVideo2) { callDelInteract(false); } else { callDelInteract(true); }\r\n    }\r\n\r\n    setShowVideo(false);\r\n    setPreview(false);\r\n    setRec(false);\r\n    setShowVideo2(false);\r\n\r\n  }\r\n\r\n  const Save = useCallback(() => {\r\n    if (ShowVideo2) {\r\n\r\n      setinteractContentvideo2(RecordedBlob);\r\n      setinteractContenttype2(1);\r\n      setadjustinteract2(true);\r\n      close(true);\r\n\r\n    } else {\r\n\r\n      setinteractContentvideo(RecordedBlob);\r\n      setinteractContenttype(1);\r\n      setadjustinteract1(true);\r\n      close(true);\r\n\r\n    }\r\n  }, [RecordedBlob, ShowVideo2])\r\n\r\n\r\n\r\n\r\n  const { PaperStyleLight, PaperStyleDark } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.PaperReducerLightnDark,\r\n    })\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <Grid xs={12} style={{\r\n        display: ShowVideo ? 'block' : 'none', position: 'fixed', top: '0vh', height: '100vh',\r\n        backgroundImage: darkmodeReducer ? PaperStyleDark : PaperStyleLight,\r\n        width: '100%', margin: 'auto', textAlign: 'center'\r\n      }} >\r\n        <video ref={videoPlayerRef} src={VideoUrl} controls style={{\r\n          width: '50%', margin: 'auto', textAlign: 'center', display: Preview ? 'none' : 'block'\r\n\r\n        }}></video>\r\n\r\n        {recordedVideoUrl && rec ? <video ref={videoPlayerRefx} src={recordedVideoUrl} controls style={{\r\n          width: '50%', margin: 'auto', textAlign: 'center', display: Preview ? 'block' : 'none'\r\n\r\n        }}></video> : null}\r\n\r\n\r\n\r\n\r\n        {Preview ? <Grid item xs={12} style={{\r\n          bottom: '-7vh', position: 'relative', display: 'flex', alignItems: 'center',\r\n          justifyContent: 'center', fontSize: '24px', fontFamily: 'Helvetica, Arial, sans-serif', color: darkmodeReducer ? \"#ffffff\" : '#000000',\r\n        }}>\r\n          <Grid item xs={1}\r\n            onClick={() => {\r\n              ////setRec(false);\r\n              /////setRecordedVideoUrl(null);\r\n              if (videoPlayerRefx.current) {\r\n                videoPlayerRefx.current.pause();\r\n              }\r\n              setPreview(false);\r\n            }}\r\n            style={{\r\n              border: darkmodeReducer ? '2px solid white' : '2px solid black',\r\n              cursor: 'pointer',\r\n              height: '15vh', borderRadius: '8px', display: 'flex', alignItems: 'center', justifyContent: 'center',\r\n\r\n            }}>\r\n            EDIT\r\n          </Grid>\r\n\r\n\r\n          <Grid item onClick={() => {\r\n            if (videoPlayerRefx.current) {\r\n              videoPlayerRefx.current.pause();\r\n            }\r\n            Save();\r\n          }} xs={3} style={{\r\n            cursor: 'pointer',\r\n            height: '15vh', border: darkmodeReducer ? '2px solid white' : '2px solid black', borderRadius: '8px',\r\n            display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '24px',\r\n          }}>\r\n            SAVE\r\n          </Grid>\r\n        </Grid> : <Grid item xs={12} style={{\r\n          bottom: '-7vh', position: 'relative', display: 'flex', alignItems: 'center',\r\n          justifyContent: 'center', fontSize: '24px', fontFamily: 'Helvetica, Arial, sans-serif',\r\n          color: darkmodeReducer ? \"#ffffff\" : '#000000',\r\n        }}>\r\n          <Grid item xs={2}\r\n\r\n            onClick={() => {\r\n              if (processing) { } else {\r\n                updateCurrentTimestamp();\r\n              }\r\n\r\n            }}\r\n            style={{\r\n              cursor: processing ? 'default' : 'pointer',\r\n              opacity: processing ? 0.25 : 1,\r\n              height: '15vh', border: darkmodeReducer ? '2px solid white' : '2px solid black',\r\n\r\n              borderRadius: '8px', display: 'flex', alignItems: 'center', justifyContent: 'center',\r\n\r\n            }}>\r\n            START\r\n          </Grid>\r\n\r\n\r\n          {processing ? <Grid className=\"blinking\" item xs={2} style={{\r\n            height: '15vh', border: '0px solid white', borderRadius: '8px',\r\n            display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '24px', visibility: 'visible'\r\n          }}>\r\n\r\n            <AdjustIcon\r\n              className={\r\n                darkmodeReducer\r\n                  ? \"dontallowhighlighting zuperkingIcon \"\r\n                  : \"dontallowhighlighting zuperkingIcon  \"\r\n              }\r\n              style={{\r\n                margin: \"auto\",\r\n                fontSize: matchMobile\r\n                  ? `3vh`\r\n                  : `2.5vw`,\r\n                color: 'red'\r\n\r\n              }}\r\n            />\r\n          </Grid> :\r\n            <Grid item xs={2}\r\n              onClick={() => {\r\n                if (videoPlayerRef.current) {\r\n                  videoPlayerRef.current.pause();\r\n                }\r\n                setPreview(true);\r\n              }} style={{\r\n                cursor: 'pointer',\r\n                height: '15vh', border: darkmodeReducer ? '2px solid white' : '2px solid black', borderRadius: '8px',\r\n                display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '24px',\r\n                visibility: recordedVideoUrl && rec ? 'visible' : 'hidden'\r\n              }}>\r\n              PREVIEW\r\n            </Grid>}\r\n          <Grid item onClick={() => {\r\n            if (hideend) { } else { stopRecording(); }\r\n          }} xs={2} style={{\r\n            cursor: processing ? hideend ? 'default' : 'pointer' : 'default',\r\n            opacity: processing ? hideend ? 0.25 : 1 : 0.25,\r\n            height: '15vh', border: darkmodeReducer ? '2px solid white' : '2px solid black', borderRadius: '8px',\r\n            display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '24px',\r\n          }}>\r\n            END\r\n          </Grid>\r\n        </Grid>}\r\n      </Grid >\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          margin: \"auto\",\r\n          textAlign: \"right\",\r\n          left: '5px',\r\n          height: \"20px\",\r\n          position: 'fixed',\r\n          top: '3vh',\r\n          right: '3vw',\r\n          display: ShowVideo ? 'block' : 'none',\r\n        }}\r\n      >\r\n        <CloseIcon\r\n          onClick={() => {\r\n            if (videoPlayerRefx.current) {\r\n              videoPlayerRefx.current.pause();\r\n            }\r\n            close(false);\r\n          }}\r\n          className={\r\n            darkmodeReducer\r\n              ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \"\r\n              : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \"\r\n          }\r\n          style={{\r\n            margin: \"auto\",\r\n            color: \"#ffffff\",\r\n            fontSize: matchMobile\r\n              ? `3vh`\r\n              : `2.5vw`,\r\n\r\n          }}\r\n        />\r\n      </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport const VideoEditor = React.memo(VideoEditorx)"]},"metadata":{},"sourceType":"module"}