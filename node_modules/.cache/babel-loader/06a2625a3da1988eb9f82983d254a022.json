{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\PreviewCanvasHolder.tsx\";\nimport React from \"react\";\nimport { matchPc } from \"../DetectDevice\";\nimport Masonry from \"@mui/lab/Masonry\";\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PreviewCanvasHolderx({\n  setwaitONLOAD,\n  cropCanvasRef,\n  image,\n  getpreviewFixedWidth,\n  CropImageHolder,\n  cropheight,\n  cropwidth,\n  BoxCropActivated,\n  hdcanvasvalue,\n  SourceWidthForCropX,\n  SourceWidthForCropY,\n  WideImageCheck,\n  crop,\n  getCropHeight,\n  canvasToimage,\n  refWithimageData,\n  addUploadItemsRef,\n  itemUploadRef,\n  itemUploadRefThumb,\n  itemUploadRefSD,\n  setsuperCropLoadFade,\n  length,\n  filterImage,\n  setfilterImage,\n  setallowFilters,\n  allowCropAllCanvas,\n  cutOffLoader,\n  setcutOffLoader,\n  addUploadItemsRefThumb,\n  addUploadItemsRefSD,\n  zoom\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: selectedImage.length > 0 ? /*#__PURE__*/_jsxDEV(Masonry, {\n        columns: matchPc ? selectedImage.length > 2 ? 3 : 2 : selectedImage.length > 1 ? 2 : 1,\n        spacing: 0,\n        style: {\n          overflowX: \"hidden\",\n          zIndex: 2,\n          position: activatecropImageReducer ? \"fixed\" : \"relative\",\n          top: activatecropImageReducer ? \"-800vh\" : \"0px\",\n          padding: \"0px\"\n        },\n        children: [selectedImage.map((photo, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"0px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(PreviewCanvasCropAll, {\n              zoom: zoom,\n              setwaitONLOAD: setwaitONLOAD,\n              allowCropAllCanvas: allowCropAllCanvas,\n              WideImageCheck: WideImageCheck,\n              SourceWidthForCropX: SourceWidthForCropX,\n              SourceWidthForCropY: SourceWidthForCropY,\n              hdcanvasvalue: hdcanvasvalue,\n              BoxCropActivated: BoxCropActivated,\n              cropheight: cropheight,\n              cropwidth: cropwidth,\n              CropImageHolder: CropImageHolder,\n              cropCanvasRef: cropCanvasRef,\n              crop: cropToo,\n              image: photo,\n              index: index,\n              getpreviewFixedWidth: getpreviewFixedWidth,\n              myCropHeight: myCropHeight,\n              canvasToimage: canvasToimage,\n              refWithimageData: refWithimageData,\n              addUploadItemsRef: addUploadItemsRef,\n              itemUploadRef: itemUploadRef,\n              itemUploadRefSD: itemUploadRefSD,\n              itemUploadRefThumb: itemUploadRefThumb,\n              setsuperCropLoadFade: setsuperCropLoadFade,\n              length: selectedImage.length,\n              filterImage: filterImage,\n              setfilterImage: setfilterImage,\n              setallowFilters: setallowFilters,\n              cutOffLoader: cutOffLoader,\n              setcutOffLoader: setcutOffLoader,\n              addUploadItemsRefThumb: addUploadItemsRefThumb,\n              addUploadItemsRefSD: addUploadItemsRefSD,\n              type: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this);\n        }), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: selectedImage.length > 0 ? /*#__PURE__*/_jsxDEV(Masonry, {\n        columns: matchPc ? selectedImage.length > 2 ? 3 : 2 : selectedImage.length > 1 ? 2 : 1,\n        spacing: 0,\n        style: {\n          overflowX: \"hidden\",\n          zIndex: 2,\n          position: activatecropImageReducer ? \"fixed\" : \"relative\",\n          top: activatecropImageReducer ? \"-800vh\" : \"0px\",\n          padding: \"0px\"\n        },\n        children: [selectedImage.map((photo, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"0px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(PreviewCanvasCropAll, {\n              zoom: zoom,\n              setwaitONLOAD: setwaitONLOAD,\n              allowCropAllCanvas: allowCropAllCanvas,\n              WideImageCheck: WideImageCheck,\n              SourceWidthForCropX: SourceWidthForCropX,\n              SourceWidthForCropY: SourceWidthForCropY,\n              hdcanvasvalue: hdcanvasvalue,\n              BoxCropActivated: BoxCropActivated,\n              cropheight: cropheight,\n              cropwidth: cropwidth,\n              CropImageHolder: CropImageHolder,\n              cropCanvasRef: cropCanvasRef,\n              crop: cropToo,\n              image: photo,\n              index: index,\n              getpreviewFixedWidth: getpreviewFixedWidth,\n              myCropHeight: myCropHeight,\n              canvasToimage: canvasToimage,\n              refWithimageData: refWithimageData,\n              addUploadItemsRef: addUploadItemsRef,\n              itemUploadRef: itemUploadRef,\n              itemUploadRefSD: itemUploadRefSD,\n              itemUploadRefThumb: itemUploadRefThumb,\n              setsuperCropLoadFade: setsuperCropLoadFade,\n              length: selectedImage.length,\n              filterImage: filterImage,\n              setfilterImage: setfilterImage,\n              setallowFilters: setallowFilters,\n              cutOffLoader: cutOffLoader,\n              setcutOffLoader: setcutOffLoader,\n              addUploadItemsRefThumb: addUploadItemsRefThumb,\n              addUploadItemsRefSD: addUploadItemsRefSD,\n              type: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this);\n        }), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false)]\n  }, void 0, true);\n}\n\n_c = PreviewCanvasHolderx;\nexport const PreviewCanvasHolder = /*#__PURE__*/React.memo(PreviewCanvasHolderx);\n_c2 = PreviewCanvasHolder;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PreviewCanvasHolderx\");\n$RefreshReg$(_c2, \"PreviewCanvasHolder\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/PreviewCanvasHolder.tsx"],"names":["React","matchPc","Masonry","PreviewCanvasCropAll","PreviewCanvasHolderx","setwaitONLOAD","cropCanvasRef","image","getpreviewFixedWidth","CropImageHolder","cropheight","cropwidth","BoxCropActivated","hdcanvasvalue","SourceWidthForCropX","SourceWidthForCropY","WideImageCheck","crop","getCropHeight","canvasToimage","refWithimageData","addUploadItemsRef","itemUploadRef","itemUploadRefThumb","itemUploadRefSD","setsuperCropLoadFade","length","filterImage","setfilterImage","setallowFilters","allowCropAllCanvas","cutOffLoader","setcutOffLoader","addUploadItemsRefThumb","addUploadItemsRefSD","zoom","selectedImage","overflowX","zIndex","position","activatecropImageReducer","top","padding","map","photo","index","cropToo","myCropHeight","PreviewCanvasHolder","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useCallback,\r\n} from \"react\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { AnySoaRecord } from \"dns\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\n\r\nfunction PreviewCanvasHolderx({\r\n  setwaitONLOAD,\r\n  cropCanvasRef,\r\n  image,\r\n  getpreviewFixedWidth,\r\n  CropImageHolder,\r\n  cropheight,\r\n  cropwidth,\r\n  BoxCropActivated,\r\n  hdcanvasvalue,\r\n  SourceWidthForCropX,\r\n  SourceWidthForCropY,\r\n  WideImageCheck,\r\n  crop,\r\n  getCropHeight,\r\n  canvasToimage,\r\n  refWithimageData,\r\n  addUploadItemsRef,\r\n  itemUploadRef,\r\n  itemUploadRefThumb,\r\n  itemUploadRefSD,\r\n  setsuperCropLoadFade,\r\n  length,\r\n  filterImage,\r\n  setfilterImage,\r\n  setallowFilters,\r\n  allowCropAllCanvas,\r\n  cutOffLoader,\r\n  setcutOffLoader,\r\n  addUploadItemsRefThumb,\r\n  addUploadItemsRefSD,\r\n  zoom,\r\n}: any): JSX.Element {\r\n  return (\r\n    <>\r\n      {/* HD IMAGE  CREATED  itemUploadRef */}\r\n      <>\r\n        {selectedImage.length > 0 ? (\r\n          <Masonry\r\n            columns={\r\n              matchPc\r\n                ? selectedImage.length > 2\r\n                  ? 3\r\n                  : 2\r\n                : selectedImage.length > 1\r\n                ? 2\r\n                : 1\r\n            }\r\n            spacing={0}\r\n            style={{\r\n              overflowX: \"hidden\",\r\n              zIndex: 2,\r\n              position: activatecropImageReducer ? \"fixed\" : \"relative\",\r\n              top: activatecropImageReducer ? \"-800vh\" : \"0px\",\r\n              padding: \"0px\",\r\n            }}\r\n          >\r\n            {selectedImage.map((photo: any, index: any) => {\r\n              return (\r\n                <div key={index} style={{ padding: \"0px\" }}>\r\n                  <PreviewCanvasCropAll\r\n                    zoom={zoom}\r\n                    setwaitONLOAD={setwaitONLOAD}\r\n                    allowCropAllCanvas={allowCropAllCanvas}\r\n                    WideImageCheck={WideImageCheck}\r\n                    SourceWidthForCropX={SourceWidthForCropX}\r\n                    SourceWidthForCropY={SourceWidthForCropY}\r\n                    hdcanvasvalue={hdcanvasvalue}\r\n                    BoxCropActivated={BoxCropActivated}\r\n                    cropheight={cropheight}\r\n                    cropwidth={cropwidth}\r\n                    CropImageHolder={CropImageHolder}\r\n                    cropCanvasRef={cropCanvasRef}\r\n                    crop={cropToo}\r\n                    image={photo}\r\n                    index={index}\r\n                    getpreviewFixedWidth={getpreviewFixedWidth}\r\n                    myCropHeight={myCropHeight}\r\n                    canvasToimage={canvasToimage}\r\n                    refWithimageData={refWithimageData}\r\n                    addUploadItemsRef={addUploadItemsRef}\r\n                    itemUploadRef={itemUploadRef}\r\n                    itemUploadRefSD={itemUploadRefSD}\r\n                    itemUploadRefThumb={itemUploadRefThumb}\r\n                    setsuperCropLoadFade={setsuperCropLoadFade}\r\n                    length={selectedImage.length}\r\n                    filterImage={filterImage}\r\n                    setfilterImage={setfilterImage}\r\n                    setallowFilters={setallowFilters}\r\n                    cutOffLoader={cutOffLoader}\r\n                    setcutOffLoader={setcutOffLoader}\r\n                    addUploadItemsRefThumb={addUploadItemsRefThumb}\r\n                    addUploadItemsRefSD={addUploadItemsRefSD}\r\n                    type={1}\r\n                  />\r\n                </div>\r\n              );\r\n            })}{\" \"}\r\n          </Masonry>\r\n        ) : null}\r\n      </>\r\n      {/* HD IMAGE  CREATED  itemUploadRef */}\r\n      {/* SD IMAGE  CREATED  itemUploadRefSD */}\r\n      <>\r\n        {selectedImage.length > 0 ? (\r\n          <Masonry\r\n            columns={\r\n              matchPc\r\n                ? selectedImage.length > 2\r\n                  ? 3\r\n                  : 2\r\n                : selectedImage.length > 1\r\n                ? 2\r\n                : 1\r\n            }\r\n            spacing={0}\r\n            style={{\r\n              overflowX: \"hidden\",\r\n              zIndex: 2,\r\n              position: activatecropImageReducer ? \"fixed\" : \"relative\",\r\n              top: activatecropImageReducer ? \"-800vh\" : \"0px\",\r\n              padding: \"0px\",\r\n            }}\r\n          >\r\n            {selectedImage.map((photo: any, index: any) => {\r\n              return (\r\n                <div key={index} style={{ padding: \"0px\" }}>\r\n                  <PreviewCanvasCropAll\r\n                    zoom={zoom}\r\n                    setwaitONLOAD={setwaitONLOAD}\r\n                    allowCropAllCanvas={allowCropAllCanvas}\r\n                    WideImageCheck={WideImageCheck}\r\n                    SourceWidthForCropX={SourceWidthForCropX}\r\n                    SourceWidthForCropY={SourceWidthForCropY}\r\n                    hdcanvasvalue={hdcanvasvalue}\r\n                    BoxCropActivated={BoxCropActivated}\r\n                    cropheight={cropheight}\r\n                    cropwidth={cropwidth}\r\n                    CropImageHolder={CropImageHolder}\r\n                    cropCanvasRef={cropCanvasRef}\r\n                    crop={cropToo}\r\n                    image={photo}\r\n                    index={index}\r\n                    getpreviewFixedWidth={getpreviewFixedWidth}\r\n                    myCropHeight={myCropHeight}\r\n                    canvasToimage={canvasToimage}\r\n                    refWithimageData={refWithimageData}\r\n                    addUploadItemsRef={addUploadItemsRef}\r\n                    itemUploadRef={itemUploadRef}\r\n                    itemUploadRefSD={itemUploadRefSD}\r\n                    itemUploadRefThumb={itemUploadRefThumb}\r\n                    setsuperCropLoadFade={setsuperCropLoadFade}\r\n                    length={selectedImage.length}\r\n                    filterImage={filterImage}\r\n                    setfilterImage={setfilterImage}\r\n                    setallowFilters={setallowFilters}\r\n                    cutOffLoader={cutOffLoader}\r\n                    setcutOffLoader={setcutOffLoader}\r\n                    addUploadItemsRefThumb={addUploadItemsRefThumb}\r\n                    addUploadItemsRefSD={addUploadItemsRefSD}\r\n                    type={2}\r\n                  />\r\n                </div>\r\n              );\r\n            })}{\" \"}\r\n          </Masonry>\r\n        ) : null}\r\n      </>\r\n      {/* SD IMAGE  CREATED  itemUploadRefSD */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const PreviewCanvasHolder = React.memo(PreviewCanvasHolderx);\r\n"]},"metadata":{},"sourceType":"module"}