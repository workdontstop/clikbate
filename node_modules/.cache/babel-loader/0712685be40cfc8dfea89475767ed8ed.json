{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\SliderNumber.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SliderNumberx({\n  activeSlide,\n  total,\n  pey,\n  itemCLICKED,\n  stopSlider,\n  ActiveAutoPlay,\n  startSlider,\n  postDatainnerInteraction1,\n  postDatainnerInteraction2\n}) {\n  _s();\n\n  const startplay = () => {\n    if (ActiveAutoPlay[pey]) {\n      startSlider(0);\n    } else {\n      stopSlider(0);\n    }\n  };\n\n  const [HasInteractivity, setHasInteractivity] = useState(false);\n\n  const containsURL = str => {\n    // Regular expression pattern to match URLs (simplified, not covering all cases)\n    const urlPattern = /(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*/i; // Test if the string contains a URL using the regular expression\n\n    return urlPattern.test(str);\n  };\n\n  useEffect(() => {\n    //console.log(postDatainnerInteraction1[0])\n    postDatainnerInteraction1.map((str, index) => {\n      if (containsURL(str)) {\n        setHasInteractivity(true);\n      }\n    });\n    postDatainnerInteraction2.map((str, index) => {\n      if (containsURL(str)) {\n        setHasInteractivity(true);\n      }\n    });\n  }, [postDatainnerInteraction1, postDatainnerInteraction2]); ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [itemCLICKED[pey] ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: startplay,\n        style: {\n          position: \"absolute\",\n          zIndex: 30,\n          left: 30,\n          cursor: \"pointer\",\n          top: \"5vh\",\n          fontFamily: \"Arial, Helvetica, sans-serif\",\n          fontWeight: \"bolder\",\n          opacity: \"0.9\",\n          height: \"0px\",\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: HasInteractivity ? darkmodeReducer ? \"tur heartbeat\" : \"turdark heartbeat\" : darkmodeReducer ? \"tur\" : \"turdark\",\n          style: {\n            padding: \"7px\",\n            paddingLeft: HasInteractivity ? \"0.9vw\" : '10px',\n            paddingRight: HasInteractivity ? \"0.9vw\" : '10px',\n            backgroundColor: darkmodeReducer ? \"rgba(51,51,51,0.76)\" : \"rgba(255,255,255,0.7) \",\n            borderRadius: \"50%\",\n            fontSize: \"0.92vw\",\n            display: total === 1 ? HasInteractivity ? 'block' : 'none' : 'block',\n            color: darkmodeReducer ? \"#ffffff\" : \"#000000\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              opacity: HasInteractivity && total === 1 ? 0 : 1\n            },\n            children: total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true), itemCLICKED[pey] ? total === 1 ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          cursor: \"pointer\",\n          position: \"absolute\",\n          zIndex: 30,\n          right: 21,\n          height: \"0px\",\n          top: \"5vh\",\n          fontFamily: \"Arial, Helvetica, sans-serif\",\n          fontWeight: \"bolder\",\n          opacity: \"0.9\",\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: darkmodeReducer ? \"turdark\" : \"turlight\",\n          style: {\n            padding: \"7px\",\n            paddingLeft: \"10px\",\n            paddingRight: \"10px\",\n            backgroundColor: darkmodeReducer ? \"rgba(51,51,51,0.76)\" : \"rgba(255,255,255,0.7) \",\n            borderRadius: \"50%\",\n            fontSize: \"0.92vw\",\n            color: darkmodeReducer ? \"#eeeeee\" : \"#111111 \"\n          },\n          children: activeSlide + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }, this), \" \"]\n    }, void 0, true) : null]\n  }, void 0, true);\n}\n\n_s(SliderNumberx, \"QGk3YMy5dOnFLXkrR0/bCyJ1C5E=\", false, function () {\n  return [useSelector];\n});\n\n_c = SliderNumberx;\nexport const SliderNumber = /*#__PURE__*/React.memo(SliderNumberx);\n_c2 = SliderNumber;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SliderNumberx\");\n$RefreshReg$(_c2, \"SliderNumber\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/SliderNumber.tsx"],"names":["React","useEffect","useState","useSelector","SliderNumberx","activeSlide","total","pey","itemCLICKED","stopSlider","ActiveAutoPlay","startSlider","postDatainnerInteraction1","postDatainnerInteraction2","startplay","HasInteractivity","setHasInteractivity","containsURL","str","urlPattern","test","map","index","darkmode","state","GlobalReducer","darkmodeReducer","position","zIndex","left","cursor","top","fontFamily","fontWeight","opacity","height","padding","paddingLeft","paddingRight","backgroundColor","borderRadius","fontSize","display","color","right","SliderNumber","memo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { RootStateOrAny, useSelector } from \"react-redux\";\r\nimport FilterNoneOutlinedIcon from \"@mui/icons-material/FilterNoneOutlined\";\r\nimport LayersOutlinedIcon from \"@mui/icons-material/LayersOutlined\";\r\nimport ZoomOutIcon from \"@mui/icons-material/ZoomOut\";\r\n\r\nfunction SliderNumberx({\r\n  activeSlide,\r\n  total,\r\n  pey,\r\n  itemCLICKED,\r\n  stopSlider,\r\n  ActiveAutoPlay,\r\n  startSlider,\r\n  postDatainnerInteraction1,\r\n  postDatainnerInteraction2,\r\n}: any): JSX.Element {\r\n  const startplay = () => {\r\n    if (ActiveAutoPlay[pey]) {\r\n      startSlider(0);\r\n    } else {\r\n      stopSlider(0);\r\n    }\r\n  };\r\n\r\n\r\n  const [HasInteractivity, setHasInteractivity] = useState(false);\r\n\r\n\r\n  const containsURL = (str: any) => {\r\n    // Regular expression pattern to match URLs (simplified, not covering all cases)\r\n    const urlPattern = /(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*/i;\r\n\r\n    // Test if the string contains a URL using the regular expression\r\n    return urlPattern.test(str);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    //console.log(postDatainnerInteraction1[0])\r\n\r\n    postDatainnerInteraction1.map((str: any, index: any) => {\r\n      if (containsURL(str)) {\r\n        setHasInteractivity(true)\r\n      }\r\n    })\r\n\r\n    postDatainnerInteraction2.map((str: any, index: any) => {\r\n      if (containsURL(str)) {\r\n        setHasInteractivity(true)\r\n      }\r\n    })\r\n\r\n\r\n\r\n  }, [postDatainnerInteraction1, postDatainnerInteraction2])\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  return (\r\n    <>\r\n      {itemCLICKED[pey] ? null : (\r\n        <>\r\n          {\" \"}\r\n          <div\r\n            onClick={startplay}\r\n            style={{\r\n              position: \"absolute\",\r\n              zIndex: 30,\r\n              left: 30,\r\n              cursor: \"pointer\",\r\n              top: \"5vh\",\r\n              fontFamily: \"Arial, Helvetica, sans-serif\",\r\n              fontWeight: \"bolder\",\r\n              opacity: \"0.9\",\r\n              height: \"0px\",\r\n              padding: \"0px\",\r\n            }}\r\n          >\r\n            <span\r\n              className={HasInteractivity ? darkmodeReducer ? \"tur heartbeat\" : \"turdark heartbeat\" : darkmodeReducer ? \"tur\" : \"turdark\"}\r\n              style={{\r\n                padding: \"7px\",\r\n                paddingLeft: HasInteractivity ? \"0.9vw\" : '10px',\r\n                paddingRight: HasInteractivity ? \"0.9vw\" : '10px',\r\n                backgroundColor: darkmodeReducer\r\n                  ? \"rgba(51,51,51,0.76)\"\r\n                  : \"rgba(255,255,255,0.7) \",\r\n                borderRadius: \"50%\",\r\n                fontSize: \"0.92vw\",\r\n                display: total === 1 ? HasInteractivity ? 'block' : 'none' : 'block',\r\n                color: darkmodeReducer ? \"#ffffff\" : \"#000000\",\r\n              }\r\n              }\r\n            >\r\n              <span style={{ opacity: HasInteractivity && total === 1 ? 0 : 1 }}>{total}</span>\r\n            </span>\r\n          </div>{\" \"}\r\n        </>\r\n      )\r\n      }\r\n\r\n      {\r\n        itemCLICKED[pey] ? (\r\n          total === 1 ? null : (\r\n            <>\r\n              {\" \"}\r\n              <div\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  position: \"absolute\",\r\n                  zIndex: 30,\r\n                  right: 21,\r\n                  height: \"0px\",\r\n                  top: \"5vh\",\r\n                  fontFamily: \"Arial, Helvetica, sans-serif\",\r\n                  fontWeight: \"bolder\",\r\n                  opacity: \"0.9\",\r\n                  padding: \"0px\",\r\n                }}\r\n              >\r\n                <span\r\n                  className={darkmodeReducer ? \"turdark\" : \"turlight\"}\r\n                  style={{\r\n                    padding: \"7px\",\r\n                    paddingLeft: \"10px\",\r\n                    paddingRight: \"10px\",\r\n                    backgroundColor: darkmodeReducer\r\n                      ? \"rgba(51,51,51,0.76)\"\r\n                      : \"rgba(255,255,255,0.7) \",\r\n\r\n                    borderRadius: \"50%\",\r\n                    fontSize: \"0.92vw\",\r\n                    color: darkmodeReducer ? \"#eeeeee\" : \"#111111 \",\r\n                  }}\r\n                >\r\n                  {activeSlide + 1}\r\n                </span>\r\n              </div>{\" \"}\r\n            </>\r\n          )\r\n        ) : null\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport const SliderNumber = React.memo(SliderNumberx);\r\n"]},"metadata":{},"sourceType":"module"}