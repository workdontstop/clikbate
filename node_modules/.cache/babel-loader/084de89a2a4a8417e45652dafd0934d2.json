{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\log-folder\\\\TextFieldSignup.tsx\";\nimport React from \"react\";\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TextFieldSignupx({\n  updateSignvalues,\n  rawSignupValues,\n  signupShowPassword,\n  ShowSignupPasswordForaWhile,\n  size,\n  passwordType,\n  emailType,\n  withHolder\n}) {\n  switch (size) {\n    case \"small\":\n      var width = \"100%\";\n      var transform = \"scale(0.93)\";\n      var paddingBottomE = \"45px\";\n      var paddingBottomP = \"65px\";\n      var paddingBottomU = \"65px\";\n      var zIndex = 1;\n      var font1 = \"\";\n      var font2 = \"\";\n      break;\n\n    default:\n      var width = withHolder;\n      var transform = \"scale(1)\";\n      var paddingBottomE = \"34px\";\n      var paddingBottomP = \"30px\";\n      var paddingBottomU = \"50px\";\n      var zIndex = 1;\n      var font1 = \"2.7vh\";\n      var font2 = \"1.9vh\";\n  }\n\n  console.log(\"zerformance sign\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: emailType ? /*#__PURE__*/_jsxDEV(TextField, {\n      size: size,\n      inputProps: {\n        style: {\n          fontSize: font1\n        }\n      },\n      InputLabelProps: {\n        style: {\n          fontSize: font2\n        }\n      },\n      style: {\n        transform: transform,\n        width: width,\n        paddingBottom: paddingBottomE\n      },\n      label: \"Email\",\n      type: \"email\",\n      onChange: updateSignvalues,\n      name: \"inputedEmail\",\n      value: rawSignupValues.inputedEmail,\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : passwordType ? /*#__PURE__*/_jsxDEV(TextField, {\n      size: size,\n      inputProps: {\n        style: {\n          fontSize: font1\n        }\n      },\n      InputLabelProps: {\n        style: {\n          fontSize: font2\n        }\n      },\n      style: {\n        transform: transform,\n        width: width,\n        paddingBottom: paddingBottomP,\n        zIndex: zIndex\n      },\n      label: \"Password\",\n      type: signupShowPassword ? \"text\" : \"password\",\n      onChange: updateSignvalues,\n      name: \"inputedPassword\",\n      value: rawSignupValues.inputedPassword,\n      variant: \"standard\",\n      InputProps: {\n        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"end\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onMouseDown: ShowSignupPasswordForaWhile,\n            \"aria-label\": \"toggle password visibility\",\n            children: signupShowPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n      size: size,\n      inputProps: {\n        style: {\n          fontSize: font1\n        }\n      },\n      InputLabelProps: {\n        style: {\n          fontSize: font2\n        }\n      },\n      style: {\n        transform: transform,\n        width: width,\n        paddingBottom: paddingBottomU\n      },\n      label: \"Username\",\n      type: \"text\",\n      onChange: updateSignvalues,\n      name: \"inputedUsername\",\n      value: rawSignupValues.inputedUsername,\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = TextFieldSignupx;\nexport const TextFieldSignup = /*#__PURE__*/React.memo(TextFieldSignupx);\n_c2 = TextFieldSignup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextFieldSignupx\");\n$RefreshReg$(_c2, \"TextFieldSignup\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/log-folder/TextFieldSignup.tsx"],"names":["React","IconButton","InputAdornment","TextField","VisibilityOffIcon","VisibilityIcon","TextFieldSignupx","updateSignvalues","rawSignupValues","signupShowPassword","ShowSignupPasswordForaWhile","size","passwordType","emailType","withHolder","width","transform","paddingBottomE","paddingBottomP","paddingBottomU","zIndex","font1","font2","console","log","style","fontSize","paddingBottom","inputedEmail","inputedPassword","endAdornment","inputedUsername","TextFieldSignup","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport { ItextfIeldSignup } from \"./appFolder-Interfaces\";\r\n\r\nfunction TextFieldSignupx({\r\n  updateSignvalues,\r\n  rawSignupValues,\r\n  signupShowPassword,\r\n  ShowSignupPasswordForaWhile,\r\n  size,\r\n  passwordType,\r\n  emailType,\r\n  withHolder,\r\n}: ItextfIeldSignup): JSX.Element {\r\n  switch (size) {\r\n    case \"small\":\r\n      var width = \"100%\";\r\n      var transform = \"scale(0.93)\";\r\n      var paddingBottomE = \"45px\";\r\n      var paddingBottomP = \"65px\";\r\n      var paddingBottomU = \"65px\";\r\n      var zIndex = 1;\r\n      var font1 = \"\";\r\n      var font2 = \"\";\r\n      break;\r\n    default:\r\n      var width = withHolder;\r\n      var transform = \"scale(1)\";\r\n      var paddingBottomE = \"34px\";\r\n      var paddingBottomP = \"30px\";\r\n      var paddingBottomU = \"50px\";\r\n      var zIndex = 1;\r\n      var font1 = \"2.7vh\";\r\n      var font2 = \"1.9vh\";\r\n  }\r\n\r\n  console.log(\"zerformance sign\");\r\n  return (\r\n    <>\r\n      {emailType ? (\r\n        <TextField\r\n          size={size}\r\n          inputProps={{ style: { fontSize: font1 } }}\r\n          InputLabelProps={{ style: { fontSize: font2 } }}\r\n          style={{\r\n            transform: transform,\r\n            width: width,\r\n            paddingBottom: paddingBottomE,\r\n          }}\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          onChange={updateSignvalues}\r\n          name=\"inputedEmail\"\r\n          value={rawSignupValues.inputedEmail}\r\n          variant=\"standard\"\r\n        />\r\n      ) : passwordType ? (\r\n        <TextField\r\n          size={size}\r\n          inputProps={{ style: { fontSize: font1 } }}\r\n          InputLabelProps={{ style: { fontSize: font2 } }}\r\n          style={{\r\n            transform: transform,\r\n            width: width,\r\n            paddingBottom: paddingBottomP,\r\n            zIndex: zIndex,\r\n          }}\r\n          label=\"Password\"\r\n          type={signupShowPassword ? \"text\" : \"password\"}\r\n          onChange={updateSignvalues}\r\n          name=\"inputedPassword\"\r\n          value={rawSignupValues.inputedPassword}\r\n          variant=\"standard\"\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onMouseDown={ShowSignupPasswordForaWhile}\r\n                  aria-label=\"toggle password visibility\"\r\n                >\r\n                  {signupShowPassword ? (\r\n                    <VisibilityIcon />\r\n                  ) : (\r\n                    <VisibilityOffIcon />\r\n                  )}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      ) : (\r\n        <TextField\r\n          size={size}\r\n          inputProps={{ style: { fontSize: font1 } }}\r\n          InputLabelProps={{ style: { fontSize: font2 } }}\r\n          style={{\r\n            transform: transform,\r\n            width: width,\r\n            paddingBottom: paddingBottomU,\r\n          }}\r\n          label=\"Username\"\r\n          type=\"text\"\r\n          onChange={updateSignvalues}\r\n          name=\"inputedUsername\"\r\n          value={rawSignupValues.inputedUsername}\r\n          variant=\"standard\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const TextFieldSignup = React.memo(TextFieldSignupx);\r\n"]},"metadata":{},"sourceType":"module"}