{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\Option.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport OptionInnerModal from \"./OptionInnerModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Option({\n  darkmode,\n  setDarkmode,\n  marginData,\n  fontData,\n  switchsize,\n  superFont\n}) {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n\n  const closemodal = backbutton => {\n    //pop states fires when back and forward buttons used\n    if (backbutton == 1) {\n      window.onpopstate = () => {\n        window.history.pushState(null, \"\", window.location.href);\n        window.onpopstate = null;\n        setShowModal(false);\n      };\n    } else {\n      window.history.pushState(null, \"\", \".\");\n      window.onpopstate = null;\n      setShowModal(false);\n    }\n  };\n\n  const Openmodal = () => {\n    setShowModal(!showModal); //pushstate add enteries to your history\n\n    window.history.pushState(null, \"\", \"CameraBoy\");\n    closemodal(1);\n  };\n  /* USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK*/\n\n\n  const inputRef = useRef(null);\n\n  const onBackgroundFocus = e => {\n    if (inputRef.current === e.target) {\n      closemodal(0);\n    }\n  };\n  /* \r\n  USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\r\n   */\n\n\n  const inputRefx = useRef(null);\n\n  const onBackgroundFocusx = e => {\n    if (inputRef.current === e.target) {\n      alert(\"1\");\n    }\n  };\n  /* \r\n  USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\r\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    xs: 12,\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      onClick: onBackgroundFocusx,\n      ref: inputRefx,\n      className: \"dontallowselect\",\n      style: {\n        cursor: \"pointer\",\n        height: \"100vh\",\n        width: \"100%\",\n        zIndex: 1,\n        top: \"0em\",\n        padding: \"0px\",\n        position: \"absolute\",\n        backgroundColor: \"#00ccff\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), \"''\", showModal ? null : /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: \"options-container  \",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        className: \"\",\n        style: {\n          marginLeft: \"-1px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: superFont,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: \"left\"\n            },\n            className: darkmode ? \"texticondark\" : \"texticonlight\",\n            children: \"SuperstarZ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        className: \"\",\n        style: {\n          textAlign: \"right\"\n        },\n        children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {\n          onClick: Openmodal,\n          className: darkmode ? \"make-small-icons-clickable-dark  dontallowselect  \" : \"make-small-icons-clickable-light  dontallowselect  \",\n          fontSize: \"large\",\n          style: fontData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(OptionInnerModal, {\n      showModal: showModal,\n      closemodal: closemodal,\n      setShowModal: setShowModal,\n      switchsize: switchsize,\n      darkmode: darkmode,\n      setDarkmode: setDarkmode,\n      marginData: marginData,\n      fontData: fontData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Option, \"HiZMzmL8ktPDFlt4y5ZICFmBbk0=\");\n\n_c = Option;\n\nvar _c;\n\n$RefreshReg$(_c, \"Option\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/Option.tsx"],"names":["React","useState","useRef","MoreVertIcon","Grid","Typography","OptionInnerModal","Option","darkmode","setDarkmode","marginData","fontData","switchsize","superFont","showModal","setShowModal","closemodal","backbutton","window","onpopstate","history","pushState","location","href","Openmodal","inputRef","onBackgroundFocus","e","current","target","inputRefx","onBackgroundFocusx","alert","cursor","height","width","zIndex","top","padding","position","backgroundColor","marginLeft","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { Grid, Switch, Box, Typography } from \"@material-ui/core\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nimport * as CSS from \"csstype\";\r\nimport OptionInnerModal from \"./OptionInnerModal\";\r\n\r\ninterface IOption {\r\n  darkmode: boolean;\r\n  setDarkmode: (darkmodex: boolean) => void;\r\n  marginData: CSS.Properties;\r\n  fontData: CSS.Properties;\r\n  superFont: string;\r\n  switchsize: \"medium\" | \"small\" | undefined;\r\n}\r\n\r\nexport default function Option({\r\n  darkmode,\r\n  setDarkmode,\r\n  marginData,\r\n  fontData,\r\n  switchsize,\r\n  superFont,\r\n}: IOption): JSX.Element {\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n\r\n  const closemodal = (backbutton: number) => {\r\n    //pop states fires when back and forward buttons used\r\n    if (backbutton == 1) {\r\n      window.onpopstate = () => {\r\n        window.history.pushState(null, \"\", window.location.href);\r\n        window.onpopstate = null;\r\n        setShowModal(false);\r\n      };\r\n    } else {\r\n      window.history.pushState(null, \"\", \".\");\r\n      window.onpopstate = null;\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  const Openmodal = () => {\r\n    setShowModal(!showModal);\r\n    //pushstate add enteries to your history\r\n    window.history.pushState(null, \"\", \"CameraBoy\");\r\n    closemodal(1);\r\n  };\r\n\r\n  /* USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK*/\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const onBackgroundFocus = (e: any): void => {\r\n    if (inputRef.current === e.target) {\r\n      closemodal(0);\r\n    }\r\n  };\r\n\r\n  /* \r\n  USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\r\n   */\r\n  const inputRefx = useRef<HTMLInputElement>(null);\r\n\r\n  const onBackgroundFocusx = (e: any): void => {\r\n    if (inputRef.current === e.target) {\r\n      alert(\"1\");\r\n    }\r\n  };\r\n  /* \r\n  USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\r\n   */\r\n  return (\r\n    <Grid container xs={12} className=\"\">\r\n      <Grid\r\n        onClick={onBackgroundFocusx}\r\n        ref={inputRefx}\r\n        className=\"dontallowselect\"\r\n        style={{\r\n          cursor: \"pointer\",\r\n          height: \"100vh\",\r\n          width: \"100%\",\r\n          zIndex: 1,\r\n          top: \"0em\",\r\n          padding: \"0px\",\r\n          position: \"absolute\",\r\n\r\n          backgroundColor: \"#00ccff\",\r\n        }}\r\n      ></Grid>\r\n      ''\r\n      {showModal ? null : (\r\n        <Grid item xs={12} className=\"options-container  \">\r\n          <Grid item xs={6} className=\"\" style={{ marginLeft: \"-1px\" }}>\r\n            <Typography className={superFont}>\r\n              <p\r\n                style={{ textAlign: \"left\" }}\r\n                className={darkmode ? \"texticondark\" : \"texticonlight\"}\r\n              >\r\n                SuperstarZ\r\n              </p>\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className=\"\" style={{ textAlign: \"right\" }}>\r\n            <MoreVertIcon\r\n              onClick={Openmodal}\r\n              className={\r\n                darkmode\r\n                  ? \"make-small-icons-clickable-dark  dontallowselect  \"\r\n                  : \"make-small-icons-clickable-light  dontallowselect  \"\r\n              }\r\n              fontSize=\"large\"\r\n              style={fontData}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      <OptionInnerModal\r\n        showModal={showModal}\r\n        closemodal={closemodal}\r\n        setShowModal={setShowModal}\r\n        switchsize={switchsize}\r\n        darkmode={darkmode}\r\n        setDarkmode={setDarkmode}\r\n        marginData={marginData}\r\n        fontData={fontData}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}