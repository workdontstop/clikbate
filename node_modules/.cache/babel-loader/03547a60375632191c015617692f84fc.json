{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\clikbate\\\\src\\\\upload\\\\VideoEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { matchMobile } from \"../DetectDevice\";\nimport AdjustIcon from '@material-ui/icons/Adjust';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VideoEditorx({\n  VideoUrl,\n  VideoUrl2,\n  ShowVideo2,\n  ShowVideo,\n  setShowVideo2,\n  setShowVideo,\n  setinteractContentvideo2,\n  setinteractContentvideo,\n  setinteractContenttype,\n  setinteractContenttype2,\n  callDelInteract,\n  setadjustinteract1,\n  setadjustinteract2,\n  setvidBackUpURL,\n  vidBackUpURL,\n  vidBackUpURL2,\n  setvidBackUpURL2\n}) {\n  _s();\n  ///\n\n  const videoPlayerRef = useRef(null);\n  const videoPlayerRefx = useRef(null);\n  const canvasRef = useRef(null);\n  const Timer2 = useRef(null);\n  const Timer1 = useRef(null);\n  const Timer3 = useRef(null);\n  const wait = 2000;\n\n  ///\n  ///DARKMODE FROM REDUX\n\n  const {\n    darkmode\n  } = useSelector(state => ({\n    ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const [currentTimestamp, setCurrentTimestamp] = useState(0);\n  const updateCurrentTimestamp = () => {\n    sethideend(false);\n    if (videoPlayerRef.current) {\n      var x = videoPlayerRef.current.currentTime;\n      setCurrentTimestamp(x);\n      setprocessing(true);\n      startRecording(VideoUrl, x - 1, 17);\n    }\n  };\n\n  // New state for recorded video URL\n  const [recordedVideoUrl, setRecordedVideoUrl] = useState(null);\n  const [RecordedBlob, setRecordedBlob] = useState(null);\n  const [rec, setRec] = useState(false);\n  const [processing, setprocessing] = useState(false);\n  const recorderRef = useRef(null);\n  const [hideend, sethideend] = useState(false);\n  const [Preview, setPreview] = useState(false);\n  const stopRecording = () => {\n    if (recorderRef.current && recorderRef.current.state === \"recording\") {\n      recorderRef.current.stop();\n      if (videoPlayerRef.current) {\n        videoPlayerRef.current.pause();\n      }\n      if (Timer2.current) {\n        clearTimeout(Timer2.current);\n      }\n      if (Timer1.current) {\n        clearTimeout(Timer1.current);\n      }\n      if (Timer3.current) {\n        clearTimeout(Timer3.current);\n      }\n      sethideend(true);\n      Timer3.current = setTimeout(() => {\n        setprocessing(false);\n      }, wait);\n    }\n  };\n  const startRecording = (sourceVideoUrl, startTime, duration) => {\n    const video = videoPlayerRef.current;\n    if (video) {\n      video.src = sourceVideoUrl;\n      video.currentTime = startTime;\n      video.onloadedmetadata = () => {\n        video.currentTime = startTime;\n      };\n      video.onseeked = () => {\n        video.play();\n        const stream = video.captureStream();\n\n        // Specify MIME type and quality parameters\n        const options = {\n          mimeType: 'video/webm; codecs=vp9',\n          // or 'video/mp4' based on browser support\n          videoBitsPerSecond: 500000 // Adjust bitrate as needed\n        };\n        if (MediaRecorder.isTypeSupported(options.mimeType)) {\n          recorderRef.current = new MediaRecorder(stream, options);\n        } else {\n          recorderRef.current = new MediaRecorder(stream); // Fallback to default settings\n        }\n        const chunks = [];\n        recorderRef.current.ondataavailable = e => chunks.push(e.data);\n        recorderRef.current.onstop = () => {\n          const blob = new Blob(chunks, {\n            type: options.mimeType\n          });\n          setRecordedBlob(blob);\n          const url = URL.createObjectURL(blob);\n          setRecordedVideoUrl(url);\n          video.pause();\n          if (Timer1.current) {\n            clearTimeout(Timer1.current);\n          }\n          if (Timer2.current) {\n            clearTimeout(Timer2.current);\n          }\n          Timer1.current = setTimeout(() => {\n            setRec(true);\n            setprocessing(false);\n          }, wait);\n        };\n        recorderRef.current.start();\n        if (Timer2.current) {\n          clearTimeout(Timer2.current);\n        }\n        if (Timer1.current) {\n          clearTimeout(Timer1.current);\n        }\n        Timer2.current = setTimeout(() => {\n          recorderRef.current && recorderRef.current.stop();\n        }, duration * 1000);\n      };\n      video.load();\n    }\n  }; // Call this function when you want to start recording\n  // For example: startRecording(VideoUrl, 0, 10) for a 10-second clip from the start\n\n  const close = save => {\n    const video = videoPlayerRef.current;\n    if (video) {\n      video.pause();\n    }\n    if (save) {} else {\n      if (ShowVideo2) {\n        callDelInteract(false);\n      } else {\n        callDelInteract(true);\n      }\n    }\n    setShowVideo(false);\n    setPreview(false);\n    setRec(false);\n    setShowVideo2(false);\n  };\n  async function fetchVideoAsBlob(videoUrl) {\n    try {\n      // Fetch the video data from the URL\n      const response = await fetch(videoUrl);\n\n      // Convert the response data into a Blob object\n      const videoBlob = await response.blob();\n      return videoBlob;\n    } catch (error) {\n      console.error('Error fetching video:', error);\n      return null;\n    }\n  }\n  const Save = useCallback(() => {\n    fetchVideoAsBlob(VideoUrl).then(blob => {\n      if (blob) {\n        alert(`Video converted to Blob: ${blob}`);\n        // Now you can use the Blob object as needed, such as uploading it or displaying it.\n      } else {\n        console.log('Failed to fetch video or convert to Blob.');\n      }\n    });\n  }, [RecordedBlob, ShowVideo2, VideoUrl]);\n  const {\n    PaperStyleLight,\n    PaperStyleDark\n  } = useSelector(state => ({\n    ...state.PaperReducerLightnDark\n  }));\n  const videoRef = useRef(null);\n  useEffect(() => {\n    if (recordedVideoUrl && ShowVideo) {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      const captureImage = () => {\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\n        canvas.toBlob(blob => {\n          // Convert canvas to Blob\n          const blobx = blob; // Create an object URL for the Blob\n          if (ShowVideo2) {\n            setvidBackUpURL2(blobx); // Set the state\n          } else {\n            setvidBackUpURL(blobx); // Set the state\n          }\n        }, 'image/png');\n      };\n      video.addEventListener('loadeddata', () => {\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n      });\n      video.addEventListener('seeked', captureImage);\n      video.src = recordedVideoUrl;\n      video.load();\n      video.currentTime = currentTimestamp + 2; // Change this to seek to a different time\n\n      return () => {\n        video.removeEventListener('seeked', captureImage);\n      };\n    }\n  }, [recordedVideoUrl, currentTimestamp, ShowVideo2, ShowVideo]);\n\n  ////**     < VideoFFmpeg VideoUrl={RecordedBlob} />*////\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: 'fixed',\n          top: '-400000000vh',\n          zIndex: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), vidBackUpURL && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: vidBackUpURL,\n        style: {\n          width: '30%',\n          height: 'auto',\n          position: 'fixed',\n          top: '0vh',\n          zIndex: 0,\n          display: 'none'\n        },\n        alt: \"Captured frame\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 26\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      style: {\n        display: ShowVideo ? 'block' : 'none',\n        position: 'fixed',\n        top: '0vh',\n        height: '100vh',\n        backgroundImage: darkmodeReducer ? PaperStyleDark : PaperStyleLight,\n        width: '100%',\n        margin: 'auto',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoPlayerRef,\n        src: VideoUrl,\n        controls: true,\n        style: {\n          width: '50%',\n          margin: 'auto',\n          textAlign: 'center',\n          display: Preview ? 'none' : 'block'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), recordedVideoUrl && rec ? /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoPlayerRefx,\n        src: recordedVideoUrl,\n        controls: true,\n        style: {\n          width: '50%',\n          margin: 'auto',\n          textAlign: 'center',\n          display: Preview ? 'block' : 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 36\n      }, this) : null, Preview ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          bottom: '-7vh',\n          position: 'relative',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          fontSize: '24px',\n          fontFamily: 'Helvetica, Arial, sans-serif',\n          color: darkmodeReducer ? \"#ffffff\" : '#000000'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          onClick: () => {\n            ////setRec(false);\n            /////setRecordedVideoUrl(null);\n            if (videoPlayerRefx.current) {\n              videoPlayerRefx.current.pause();\n            }\n            setPreview(false);\n          },\n          style: {\n            border: darkmodeReducer ? '2px solid white' : '2px solid black',\n            cursor: 'pointer',\n            height: '15vh',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: \"EDIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          onClick: () => {\n            if (videoPlayerRefx.current) {\n              videoPlayerRefx.current.pause();\n            }\n            Save();\n          },\n          xs: 3,\n          style: {\n            cursor: 'pointer',\n            height: '15vh',\n            border: darkmodeReducer ? '2px solid white' : '2px solid black',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '24px'\n          },\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          bottom: '-7vh',\n          position: 'relative',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          fontSize: '24px',\n          fontFamily: 'Helvetica, Arial, sans-serif',\n          color: darkmodeReducer ? \"#ffffff\" : '#000000'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          onClick: () => {\n            if (processing) {} else {\n              updateCurrentTimestamp();\n            }\n          },\n          style: {\n            cursor: processing ? 'default' : 'pointer',\n            opacity: processing ? 0.25 : 1,\n            height: '15vh',\n            border: darkmodeReducer ? '2px solid white' : '2px solid black',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: \"START\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), processing ? /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"blinking\",\n          item: true,\n          xs: 2,\n          style: {\n            height: '15vh',\n            border: '0px solid white',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '24px',\n            visibility: 'visible'\n          },\n          children: /*#__PURE__*/_jsxDEV(AdjustIcon, {\n            className: darkmodeReducer ? \"dontallowhighlighting zuperkingIcon \" : \"dontallowhighlighting zuperkingIcon  \",\n            style: {\n              margin: \"auto\",\n              fontSize: matchMobile ? `3vh` : `2.5vw`,\n              color: 'red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          onClick: () => {\n            if (videoPlayerRef.current) {\n              videoPlayerRef.current.pause();\n            }\n            setPreview(true);\n          },\n          style: {\n            cursor: 'pointer',\n            height: '15vh',\n            border: darkmodeReducer ? '2px solid white' : '2px solid black',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '24px',\n            visibility: recordedVideoUrl && rec ? 'visible' : 'hidden'\n          },\n          children: \"PREVIEW\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          onClick: () => {\n            if (hideend) {} else {\n              stopRecording();\n            }\n          },\n          xs: 2,\n          style: {\n            cursor: processing ? hideend ? 'default' : 'pointer' : 'default',\n            opacity: processing ? hideend ? 0.25 : 1 : 0.25,\n            height: '15vh',\n            border: darkmodeReducer ? '2px solid white' : '2px solid black',\n            borderRadius: '8px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '24px'\n          },\n          children: \"END\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        margin: \"auto\",\n        textAlign: \"right\",\n        left: '5px',\n        height: \"20px\",\n        position: 'fixed',\n        top: '3vh',\n        right: '3vw',\n        display: ShowVideo ? 'block' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        onClick: () => {\n          if (videoPlayerRefx.current) {\n            videoPlayerRefx.current.pause();\n          }\n          close(false);\n        },\n        className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \",\n        style: {\n          margin: \"auto\",\n          color: \"#ffffff\",\n          fontSize: matchMobile ? `3vh` : `2.5vw`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(VideoEditorx, \"caEi7lypBDZ014wUjO1UKZvEQMs=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = VideoEditorx;\nexport const VideoEditor = /*#__PURE__*/React.memo(VideoEditorx);\n_c2 = VideoEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"VideoEditorx\");\n$RefreshReg$(_c2, \"VideoEditor\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","Grid","useSelector","CloseIcon","matchMobile","AdjustIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoEditorx","VideoUrl","VideoUrl2","ShowVideo2","ShowVideo","setShowVideo2","setShowVideo","setinteractContentvideo2","setinteractContentvideo","setinteractContenttype","setinteractContenttype2","callDelInteract","setadjustinteract1","setadjustinteract2","setvidBackUpURL","vidBackUpURL","vidBackUpURL2","setvidBackUpURL2","_s","videoPlayerRef","videoPlayerRefx","canvasRef","Timer2","Timer1","Timer3","wait","darkmode","state","GlobalReducer","darkmodeReducer","currentTimestamp","setCurrentTimestamp","updateCurrentTimestamp","sethideend","current","x","currentTime","setprocessing","startRecording","recordedVideoUrl","setRecordedVideoUrl","RecordedBlob","setRecordedBlob","rec","setRec","processing","recorderRef","hideend","Preview","setPreview","stopRecording","stop","pause","clearTimeout","setTimeout","sourceVideoUrl","startTime","duration","video","src","onloadedmetadata","onseeked","play","stream","captureStream","options","mimeType","videoBitsPerSecond","MediaRecorder","isTypeSupported","chunks","ondataavailable","e","push","data","onstop","blob","Blob","type","url","URL","createObjectURL","start","load","close","save","fetchVideoAsBlob","videoUrl","response","fetch","videoBlob","error","console","Save","then","alert","log","PaperStyleLight","PaperStyleDark","PaperReducerLightnDark","videoRef","canvas","context","getContext","captureImage","drawImage","width","height","toBlob","blobx","addEventListener","videoWidth","videoHeight","removeEventListener","children","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","position","top","zIndex","alt","xs","backgroundImage","margin","textAlign","controls","item","bottom","alignItems","justifyContent","fontSize","fontFamily","color","onClick","border","cursor","borderRadius","opacity","className","visibility","left","right","_c","VideoEditor","memo","_c2","$RefreshReg$"],"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/clikbate/src/upload/VideoEditor.tsx"],"sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useCallback,\r\n} from \"react\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { AnySoaRecord } from \"dns\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport AdjustIcon from '@material-ui/icons/Adjust';\r\nimport { FFmpeg } from '@ffmpeg/ffmpeg';\r\nimport { fetchFile, toBlobURL } from '@ffmpeg/util';\r\n\r\ninterface HTMLVideoElementWithCapture extends HTMLVideoElement {\r\n  captureStream(): MediaStream;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction VideoEditorx({ VideoUrl, VideoUrl2, ShowVideo2, ShowVideo, setShowVideo2, setShowVideo,\r\n  setinteractContentvideo2,\r\n  setinteractContentvideo,\r\n  setinteractContenttype,\r\n  setinteractContenttype2, callDelInteract, setadjustinteract1, setadjustinteract2,\r\n  setvidBackUpURL,\r\n  vidBackUpURL,\r\n  vidBackUpURL2,\r\n  setvidBackUpURL2, }: any): JSX.Element {\r\n\r\n  ///\r\n\r\n  const videoPlayerRef = useRef<HTMLVideoElementWithCapture>(null);\r\n\r\n  const videoPlayerRefx = useRef<HTMLVideoElementWithCapture>(null);\r\n\r\n  const canvasRef: any = useRef(null);\r\n\r\n\r\n\r\n  const Timer2 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const Timer1 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const Timer3 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const wait = 2000;\r\n\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  const [currentTimestamp, setCurrentTimestamp] = useState(0);\r\n\r\n  const updateCurrentTimestamp = () => {\r\n    sethideend(false);\r\n    if (videoPlayerRef.current) {\r\n\r\n      var x = videoPlayerRef.current.currentTime;\r\n      setCurrentTimestamp(x);\r\n\r\n      setprocessing(true);\r\n\r\n      startRecording(VideoUrl, x - 1, 17);\r\n    }\r\n  };\r\n\r\n  // New state for recorded video URL\r\n  const [recordedVideoUrl, setRecordedVideoUrl] = useState(null);\r\n  const [RecordedBlob, setRecordedBlob] = useState(null);\r\n\r\n\r\n  const [rec, setRec] = useState(false);\r\n\r\n  const [processing, setprocessing] = useState(false);\r\n\r\n  const recorderRef: any = useRef(null);\r\n\r\n  const [hideend, sethideend] = useState(false);\r\n\r\n  const [Preview, setPreview] = useState(false);\r\n\r\n\r\n  const stopRecording = () => {\r\n    if (recorderRef.current && recorderRef.current.state === \"recording\") {\r\n      recorderRef.current.stop();\r\n      if (videoPlayerRef.current) {\r\n        videoPlayerRef.current.pause();\r\n      }\r\n\r\n      if (Timer2.current) {\r\n        clearTimeout(Timer2.current);\r\n      }\r\n\r\n      if (Timer1.current) {\r\n        clearTimeout(Timer1.current);\r\n      }\r\n      if (Timer3.current) {\r\n        clearTimeout(Timer3.current);\r\n      }\r\n      sethideend(true);\r\n      Timer3.current = setTimeout(() => {\r\n        setprocessing(false);\r\n      }, wait);\r\n    }\r\n  };\r\n\r\n\r\n  const startRecording = (sourceVideoUrl: any, startTime: any, duration: any) => {\r\n\r\n    const video = videoPlayerRef.current;\r\n\r\n    if (video) {\r\n      video.src = sourceVideoUrl;\r\n      video.currentTime = startTime;\r\n\r\n      video.onloadedmetadata = () => {\r\n        video.currentTime = startTime;\r\n      };\r\n\r\n      video.onseeked = () => {\r\n        video.play();\r\n        const stream = video.captureStream();\r\n\r\n        // Specify MIME type and quality parameters\r\n        const options = {\r\n          mimeType: 'video/webm; codecs=vp9', // or 'video/mp4' based on browser support\r\n          videoBitsPerSecond: 500000 // Adjust bitrate as needed\r\n        };\r\n\r\n        if (MediaRecorder.isTypeSupported(options.mimeType)) {\r\n          recorderRef.current = new MediaRecorder(stream, options);\r\n        } else {\r\n          recorderRef.current = new MediaRecorder(stream); // Fallback to default settings\r\n        }\r\n\r\n        const chunks: any = [];\r\n        recorderRef.current.ondataavailable = (e: any) => chunks.push(e.data);\r\n        recorderRef.current.onstop = () => {\r\n          const blob: any = new Blob(chunks, { type: options.mimeType });\r\n          setRecordedBlob(blob);\r\n          const url: any = URL.createObjectURL(blob);\r\n          setRecordedVideoUrl(url);\r\n          video.pause();\r\n\r\n          if (Timer1.current) {\r\n            clearTimeout(Timer1.current);\r\n          }\r\n          if (Timer2.current) {\r\n            clearTimeout(Timer2.current);\r\n          }\r\n\r\n          Timer1.current = setTimeout(() => {\r\n            setRec(true);\r\n            setprocessing(false);\r\n          }, wait);\r\n        };\r\n\r\n        recorderRef.current.start();\r\n        if (Timer2.current) {\r\n          clearTimeout(Timer2.current);\r\n        }\r\n\r\n        if (Timer1.current) {\r\n          clearTimeout(Timer1.current);\r\n        }\r\n        Timer2.current = setTimeout(() => {\r\n          recorderRef.current && recorderRef.current.stop();\r\n        }, duration * 1000);\r\n      };\r\n\r\n      video.load();\r\n    }\r\n  };  // Call this function when you want to start recording\r\n  // For example: startRecording(VideoUrl, 0, 10) for a 10-second clip from the start\r\n\r\n\r\n  const close = (save: boolean) => {\r\n\r\n    const video = videoPlayerRef.current;\r\n    if (video) { video.pause(); }\r\n\r\n\r\n    if (save) { } else {\r\n      if (ShowVideo2) { callDelInteract(false); } else { callDelInteract(true); }\r\n    }\r\n\r\n    setShowVideo(false);\r\n    setPreview(false);\r\n    setRec(false);\r\n    setShowVideo2(false);\r\n\r\n  }\r\n\r\n\r\n  async function fetchVideoAsBlob(videoUrl: any) {\r\n    try {\r\n      // Fetch the video data from the URL\r\n      const response = await fetch(videoUrl);\r\n\r\n      // Convert the response data into a Blob object\r\n      const videoBlob = await response.blob();\r\n\r\n      return videoBlob;\r\n    } catch (error) {\r\n      console.error('Error fetching video:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  const Save = useCallback(() => {\r\n\r\n\r\n    fetchVideoAsBlob(VideoUrl)\r\n      .then(blob => {\r\n        if (blob) {\r\n          alert(`Video converted to Blob: ${blob}`);\r\n          // Now you can use the Blob object as needed, such as uploading it or displaying it.\r\n        } else {\r\n          console.log('Failed to fetch video or convert to Blob.');\r\n        }\r\n      });\r\n\r\n\r\n\r\n  }, [RecordedBlob, ShowVideo2, VideoUrl])\r\n\r\n\r\n\r\n\r\n  const { PaperStyleLight, PaperStyleDark } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.PaperReducerLightnDark,\r\n    })\r\n  );\r\n\r\n\r\n\r\n  const videoRef = useRef(null);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (recordedVideoUrl && ShowVideo) {\r\n      const video: any = videoRef.current;\r\n      const canvas = canvasRef.current;\r\n      const context = canvas.getContext('2d');\r\n\r\n      const captureImage = () => {\r\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        canvas.toBlob((blob: any) => { // Convert canvas to Blob\r\n          const blobx = blob; // Create an object URL for the Blob\r\n          if (ShowVideo2) {\r\n            setvidBackUpURL2(blobx); // Set the state\r\n          } else {\r\n            setvidBackUpURL(blobx); // Set the state\r\n          }\r\n        }, 'image/png');\r\n\r\n\r\n\r\n\r\n\r\n      };\r\n\r\n      video.addEventListener('loadeddata', () => {\r\n        canvas.width = video.videoWidth;\r\n        canvas.height = video.videoHeight;\r\n      });\r\n\r\n      video.addEventListener('seeked', captureImage);\r\n\r\n      video.src = recordedVideoUrl;\r\n      video.load();\r\n      video.currentTime = currentTimestamp + 2; // Change this to seek to a different time\r\n\r\n      return () => {\r\n        video.removeEventListener('seeked', captureImage);\r\n      };\r\n    }\r\n  }, [recordedVideoUrl, currentTimestamp, ShowVideo2, ShowVideo]);\r\n\r\n\r\n\r\n\r\n  ////**     < VideoFFmpeg VideoUrl={RecordedBlob} />*////\r\n  return (\r\n    <>\r\n\r\n      <div>\r\n        <video ref={videoRef} style={{ display: 'none' }} />\r\n        <canvas ref={canvasRef} style={{ position: 'fixed', top: '-400000000vh', zIndex: 0, }} />\r\n        {vidBackUpURL && <img src={vidBackUpURL} style={{ width: '30%', height: 'auto', position: 'fixed', top: '0vh', zIndex: 0, display: 'none' }} alt=\"Captured frame\" />} {/* Display the captured image */}\r\n      </div>\r\n      <Grid xs={12} style={{\r\n        display: ShowVideo ? 'block' : 'none', position: 'fixed', top: '0vh', height: '100vh',\r\n        backgroundImage: darkmodeReducer ? PaperStyleDark : PaperStyleLight,\r\n        width: '100%', margin: 'auto', textAlign: 'center'\r\n      }} >\r\n\r\n\r\n\r\n        <video ref={videoPlayerRef} src={VideoUrl} controls style={{\r\n          width: '50%', margin: 'auto', textAlign: 'center', display: Preview ? 'none' : 'block'\r\n\r\n        }}></video>\r\n\r\n        {recordedVideoUrl && rec ? <video ref={videoPlayerRefx} src={recordedVideoUrl} controls style={{\r\n          width: '50%', margin: 'auto', textAlign: 'center', display: Preview ? 'block' : 'none'\r\n\r\n        }}></video> : null}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        {Preview ? <Grid item xs={12} style={{\r\n          bottom: '-7vh', position: 'relative', display: 'flex', alignItems: 'center',\r\n          justifyContent: 'center', fontSize: '24px', fontFamily: 'Helvetica, Arial, sans-serif', color: darkmodeReducer ? \"#ffffff\" : '#000000',\r\n        }}>\r\n          <Grid item xs={1}\r\n            onClick={() => {\r\n              ////setRec(false);\r\n              /////setRecordedVideoUrl(null);\r\n              if (videoPlayerRefx.current) {\r\n                videoPlayerRefx.current.pause();\r\n              }\r\n              setPreview(false);\r\n            }}\r\n            style={{\r\n              border: darkmodeReducer ? '2px solid white' : '2px solid black',\r\n              cursor: 'pointer',\r\n              height: '15vh', borderRadius: '8px', display: 'flex', alignItems: 'center', justifyContent: 'center',\r\n\r\n            }}>\r\n            EDIT\r\n          </Grid>\r\n\r\n\r\n          <Grid item onClick={() => {\r\n            if (videoPlayerRefx.current) {\r\n              videoPlayerRefx.current.pause();\r\n            }\r\n            Save();\r\n          }} xs={3} style={{\r\n            cursor: 'pointer',\r\n            height: '15vh', border: darkmodeReducer ? '2px solid white' : '2px solid black', borderRadius: '8px',\r\n            display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '24px',\r\n          }}>\r\n            SAVE\r\n          </Grid>\r\n        </Grid> : <Grid item xs={12} style={{\r\n          bottom: '-7vh', position: 'relative', display: 'flex', alignItems: 'center',\r\n          justifyContent: 'center', fontSize: '24px', fontFamily: 'Helvetica, Arial, sans-serif',\r\n          color: darkmodeReducer ? \"#ffffff\" : '#000000',\r\n        }}>\r\n          <Grid item xs={2}\r\n\r\n            onClick={() => {\r\n              if (processing) { } else {\r\n                updateCurrentTimestamp();\r\n              }\r\n\r\n            }}\r\n            style={{\r\n              cursor: processing ? 'default' : 'pointer',\r\n              opacity: processing ? 0.25 : 1,\r\n              height: '15vh', border: darkmodeReducer ? '2px solid white' : '2px solid black',\r\n\r\n              borderRadius: '8px', display: 'flex', alignItems: 'center', justifyContent: 'center',\r\n\r\n            }}>\r\n            START\r\n          </Grid>\r\n\r\n\r\n          {processing ? <Grid className=\"blinking\" item xs={2} style={{\r\n            height: '15vh', border: '0px solid white', borderRadius: '8px',\r\n            display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '24px', visibility: 'visible'\r\n          }}>\r\n\r\n            <AdjustIcon\r\n              className={\r\n                darkmodeReducer\r\n                  ? \"dontallowhighlighting zuperkingIcon \"\r\n                  : \"dontallowhighlighting zuperkingIcon  \"\r\n              }\r\n              style={{\r\n                margin: \"auto\",\r\n                fontSize: matchMobile\r\n                  ? `3vh`\r\n                  : `2.5vw`,\r\n                color: 'red'\r\n\r\n              }}\r\n            />\r\n          </Grid> :\r\n            <Grid item xs={2}\r\n              onClick={() => {\r\n                if (videoPlayerRef.current) {\r\n                  videoPlayerRef.current.pause();\r\n                }\r\n                setPreview(true);\r\n              }} style={{\r\n                cursor: 'pointer',\r\n                height: '15vh', border: darkmodeReducer ? '2px solid white' : '2px solid black', borderRadius: '8px',\r\n                display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '24px',\r\n                visibility: recordedVideoUrl && rec ? 'visible' : 'hidden'\r\n              }}>\r\n              PREVIEW\r\n            </Grid>}\r\n          <Grid item onClick={() => {\r\n            if (hideend) { } else { stopRecording(); }\r\n          }} xs={2} style={{\r\n            cursor: processing ? hideend ? 'default' : 'pointer' : 'default',\r\n            opacity: processing ? hideend ? 0.25 : 1 : 0.25,\r\n            height: '15vh', border: darkmodeReducer ? '2px solid white' : '2px solid black', borderRadius: '8px',\r\n            display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '24px',\r\n          }}>\r\n            END\r\n          </Grid>\r\n        </Grid>}\r\n      </Grid >\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          margin: \"auto\",\r\n          textAlign: \"right\",\r\n          left: '5px',\r\n          height: \"20px\",\r\n          position: 'fixed',\r\n          top: '3vh',\r\n          right: '3vw',\r\n          display: ShowVideo ? 'block' : 'none',\r\n        }}\r\n      >\r\n        <CloseIcon\r\n          onClick={() => {\r\n            if (videoPlayerRefx.current) {\r\n              videoPlayerRefx.current.pause();\r\n            }\r\n            close(false);\r\n          }}\r\n          className={\r\n            darkmodeReducer\r\n              ? \"make-small-icons-clickable-lightCrop dontallowhighlighting zuperkingIcon \"\r\n              : \"make-small-icons-clickable-darkCrop dontallowhighlighting zuperkingIcon  \"\r\n          }\r\n          style={{\r\n            margin: \"auto\",\r\n            color: \"#ffffff\",\r\n            fontSize: matchMobile\r\n              ? `3vh`\r\n              : `2.5vw`,\r\n\r\n          }}\r\n        />\r\n      </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport const VideoEditor = React.memo(VideoEditorx)"],"mappings":"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"},"metadata":{},"sourceType":"module"}