{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\OptionsSlider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { matchPc } from \"../DetectDevice\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction OptionsSliderx({\n  getSliderWidth\n}) {\n  _s();\n\n  var getSliderWidthNew = matchPc ? getSliderWidth / 1.53 : getSliderWidth / 0.8;\n  var optionsClickType = matchPc ? 1 : 0;\n  const optionsCollectImageRef = useRef(null);\n  const optionsImages = [\"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\", \"5.jpg\"];\n  const [translate, setTranslate] = useState(0);\n  const [stalestate, setstalestate] = useState(1);\n  const [ActiveSlide, setActiveSlide] = useState(0);\n  const [touchPosition, setTouchPosition] = useState(null);\n  const handleTouchMoveTimer = useRef(null);\n  var optionsNameData = [\"filter feeds\", \"albums\", \"playlist\", \"showroom\", \"posts  today\", \"settings\"]; ///\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n\n  const modalanimation = useSpring({\n    config: {\n      duration: 100\n    },\n    transform: `translateX(-${translate}px)`,\n    transition: \"0.45s\",\n    height: \"auto\",\n    display: \"flex\",\n    width: `auto`,\n    margin: \"auto\"\n  }); ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\n\n  const clickOptions = (i, type) => {\n    if (type === 1) {\n      setTranslate(stalestate + i);\n      setActiveSlide(i);\n    } else {\n      setTranslate(getSliderWidthNew * i + 1.5 * i);\n      setActiveSlide(i);\n    }\n  }; ///\n  ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n\n  const {\n    color\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color; ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n  const handleTouchStartOptions = e => {\n    ////onMouseDown onMouseMove\n    ////touchDown = e.clientX\n    const touchDown = e.touches[0].clientX;\n    setTouchPosition(touchDown);\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE\n\n\n  const nextSlide = () => {\n    var i = ActiveSlide + 1; ///set((state) => (state + 1) % slides.length)\n\n    if (ActiveSlide < optionsImages.length - 1) {\n      setTranslate(getSliderWidthNew * i + 1.5 * i);\n      setActiveSlide(ActiveSlide => ActiveSlide + 1);\n    }\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE\n\n\n  const prevSlide = () => {\n    ///set((state) => (state + 1) % slides.length)\n    var i = ActiveSlide - 1;\n\n    if (ActiveSlide > 0) {\n      setTranslate(getSliderWidthNew * i + 1.5 * i);\n      setActiveSlide(ActiveSlide => ActiveSlide - 1);\n    }\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH MOVE EVENT\n\n\n  const handleTouchMoveOptions = e => {\n    if (handleTouchMoveTimer.current) {\n      clearTimeout(handleTouchMoveTimer.current);\n    }\n\n    handleTouchMoveTimer.current = setTimeout(function () {\n      const touchDown = touchPosition;\n\n      if (touchDown === null) {\n        return;\n      } ////currentTouch = e.clientX\n\n\n      const currentTouch = e.touches[0].clientX;\n      const diff = touchDown - currentTouch;\n\n      if (diff > 40) {\n        nextSlide();\n      } else if (diff < -40) {\n        prevSlide();\n      } else {}\n\n      setTouchPosition(null);\n      return false;\n    }, 200);\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      onTouchStart: handleTouchStartOptions,\n      onTouchMove: handleTouchMoveOptions,\n      style: {\n        position: \"relative\",\n        margin: \"0 auto\",\n        overflow: \"hidden\",\n        left: \"0px\",\n        paddingBottom: \"19px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        ref: optionsCollectImageRef,\n        style: modalanimation,\n        children: optionsImages.map((im, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => {\n                clickOptions(i, optionsClickType);\n              },\n              className: \"turprofileLight\",\n              style: {\n                width: `${getSliderWidthNew}px`,\n                height: `${getSliderWidthNew}px`,\n                borderRadius: \"50%\",\n                padding: \"2.5px\",\n                objectFit: \"cover\",\n                marginLeft: \"2px\",\n                marginTop: \"14px\",\n                boxShadow: `0 0 3px ${colorReducer}`,\n                marginBottom: \"2.2px\"\n              },\n              src: `./images/options/${im}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              style: {\n                margin: \"auto\",\n                textAlign: \"center\",\n                position: \"relative\",\n                bottom: \"0.2em\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                style: {\n                  fontSize: matchPc ? \"1vw\" : \"1.74vh\",\n                  fontWeight: \"bolder\",\n                  fontFamily: \"Arial, Helvetica, sans-serif\",\n                  display: ActiveSlide === i ? \"block\" : \"none\"\n                },\n                children: [\" \", optionsNameData[i]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true);\n}\n\n_s(OptionsSliderx, \"rfyGoWEPn1VGvxTJBFUkbN+D464=\", false, function () {\n  return [useSpring, useSelector];\n});\n\n_c = OptionsSliderx;\nexport const OptionsSlider = /*#__PURE__*/React.memo(OptionsSliderx);\n_c2 = OptionsSlider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OptionsSliderx\");\n$RefreshReg$(_c2, \"OptionsSlider\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/OptionsSlider.tsx"],"names":["React","useRef","useState","Grid","matchPc","useSpring","animated","useSelector","OptionsSliderx","getSliderWidth","getSliderWidthNew","optionsClickType","optionsCollectImageRef","optionsImages","translate","setTranslate","stalestate","setstalestate","ActiveSlide","setActiveSlide","touchPosition","setTouchPosition","handleTouchMoveTimer","optionsNameData","modalanimation","config","duration","transform","transition","height","display","width","margin","clickOptions","i","type","color","state","GlobalReducerColor","colorReducer","handleTouchStartOptions","e","touchDown","touches","clientX","nextSlide","length","prevSlide","handleTouchMoveOptions","current","clearTimeout","setTimeout","currentTouch","diff","position","overflow","left","paddingBottom","map","im","borderRadius","padding","objectFit","marginLeft","marginTop","boxShadow","marginBottom","textAlign","bottom","fontSize","fontWeight","fontFamily","OptionsSlider","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction OptionsSliderx({ getSliderWidth }: any) {\r\n  var getSliderWidthNew = matchPc\r\n    ? getSliderWidth / 1.53\r\n    : getSliderWidth / 0.8;\r\n\r\n  var optionsClickType: number = matchPc ? 1 : 0;\r\n\r\n  const optionsCollectImageRef = useRef<HTMLDivElement>(null);\r\n  const optionsImages = [\"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\", \"5.jpg\"];\r\n  const [translate, setTranslate] = useState(0);\r\n  const [stalestate, setstalestate] = useState(1);\r\n\r\n  const [ActiveSlide, setActiveSlide] = useState(0);\r\n\r\n  const [touchPosition, setTouchPosition] = useState(null);\r\n  const handleTouchMoveTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  var optionsNameData = [\r\n    \"filter feeds\",\r\n    \"albums\",\r\n    \"playlist\",\r\n    \"showroom\",\r\n    \"posts  today\",\r\n    \"settings\",\r\n  ];\r\n\r\n  ///\r\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      duration: 100,\r\n    },\r\n    transform: `translateX(-${translate}px)`,\r\n    transition: \"0.45s\",\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    width: `auto`,\r\n    margin: \"auto\",\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\r\n  const clickOptions = (i: number, type: number) => {\r\n    if (type === 1) {\r\n      setTranslate(stalestate + i);\r\n      setActiveSlide(i);\r\n    } else {\r\n      setTranslate(getSliderWidthNew * i + 1.5 * i);\r\n      setActiveSlide(i);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n    };\r\n  }\r\n  const { color } = useSelector((state: RootStateReducerColor) => ({\r\n    ...state.GlobalReducerColor,\r\n  }));\r\n  const colorReducer = color;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const handleTouchStartOptions = (e: any) => {\r\n    ////onMouseDown onMouseMove\r\n    ////touchDown = e.clientX\r\n    const touchDown = e.touches[0].clientX;\r\n    setTouchPosition(touchDown);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const nextSlide = () => {\r\n    var i = ActiveSlide + 1;\r\n    ///set((state) => (state + 1) % slides.length)\r\n    if (ActiveSlide < optionsImages.length - 1) {\r\n      setTranslate(getSliderWidthNew * i + 1.5 * i);\r\n      setActiveSlide((ActiveSlide) => ActiveSlide + 1);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const prevSlide = () => {\r\n    ///set((state) => (state + 1) % slides.length)\r\n    var i = ActiveSlide - 1;\r\n    if (ActiveSlide > 0) {\r\n      setTranslate(getSliderWidthNew * i + 1.5 * i);\r\n      setActiveSlide((ActiveSlide) => ActiveSlide - 1);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH MOVE EVENT\r\n  const handleTouchMoveOptions = (e: any) => {\r\n    if (handleTouchMoveTimer.current) {\r\n      clearTimeout(handleTouchMoveTimer.current);\r\n    }\r\n    handleTouchMoveTimer.current = setTimeout(function () {\r\n      const touchDown = touchPosition;\r\n\r\n      if (touchDown === null) {\r\n        return;\r\n      }\r\n      ////currentTouch = e.clientX\r\n      const currentTouch = e.touches[0].clientX;\r\n      const diff = touchDown - currentTouch;\r\n\r\n      if (diff > 40) {\r\n        nextSlide();\r\n      } else if (diff < -40) {\r\n        prevSlide();\r\n      } else {\r\n      }\r\n\r\n      setTouchPosition(null);\r\n      return false;\r\n    }, 200);\r\n\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        onTouchStart={handleTouchStartOptions}\r\n        onTouchMove={handleTouchMoveOptions}\r\n        style={{\r\n          position: \"relative\",\r\n          margin: \"0 auto\",\r\n          overflow: \"hidden\",\r\n          left: \"0px\",\r\n          paddingBottom: \"19px\",\r\n        }}\r\n      >\r\n        <animated.div ref={optionsCollectImageRef} style={modalanimation}>\r\n          {optionsImages.map((im: any, i: any) => (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <img\r\n                  onClick={() => {\r\n                    clickOptions(i, optionsClickType);\r\n                  }}\r\n                  className=\"turprofileLight\"\r\n                  style={{\r\n                    width: `${getSliderWidthNew}px`,\r\n                    height: `${getSliderWidthNew}px`,\r\n                    borderRadius: \"50%\",\r\n                    padding: \"2.5px\",\r\n                    objectFit: \"cover\",\r\n                    marginLeft: \"2px\",\r\n                    marginTop: \"14px\",\r\n                    boxShadow: `0 0 3px ${colorReducer}`,\r\n                    marginBottom: \"2.2px\",\r\n                  }}\r\n                  src={`./images/options/${im}`}\r\n                />\r\n\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{\r\n                    margin: \"auto\",\r\n                    textAlign: \"center\",\r\n                    position: \"relative\",\r\n                    bottom: \"0.2em\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                      fontSize: matchPc ? \"1vw\" : \"1.74vh\",\r\n                      fontWeight: \"bolder\",\r\n                      fontFamily: \"Arial, Helvetica, sans-serif\",\r\n                      display: ActiveSlide === i ? \"block\" : \"none\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {optionsNameData[i]}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          ))}\r\n        </animated.div>\r\n      </Grid>{\" \"}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const OptionsSlider = React.memo(OptionsSliderx);\r\n"]},"metadata":{},"sourceType":"module"}