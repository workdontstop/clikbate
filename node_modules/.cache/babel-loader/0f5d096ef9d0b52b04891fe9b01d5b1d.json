{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\MobileModalLog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { IconButton, InputAdornment, Grid, DialogContent, Paper, TextField, Button } from \"@material-ui/core\";\nimport { useSpring, animated } from \"react-spring\";\nimport ModalFormSignupError from \"./ModalFormSignupError\";\nimport ModalFormLoginError from \"./ModalFormLoginError\";\nimport ServerError from \"./ServerError\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MobileModalLogx(DialogeDataMobile) {\n  _s();\n\n  ///\n  ///\n  ///\n  /// DYNAMIC MODAL LAYOUT VARIABLES\n  ///WITHHOLDER JUST A PLACEHOLDER FOR PC MODAL LOG\n  var WidthHolder = \"100%\";\n  var mobilemodalrad = \"4px\";\n  DialogeDataMobile.mobileZoom ? mobilemodalrad = \"0px\" : mobilemodalrad = \"4px\"; ///\n  ///\n  ///\n  /// DYNAMIC MODAL LAYOUT VARIABLES\n  ///\n  ///\n  ///\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n\n  const mobileLogmodalanimation = useSpring({\n    config: {\n      duration: 115\n    },\n    opacity: DialogeDataMobile.mobileZoom ? 1 : 0.98,\n    position: DialogeDataMobile.mobileZoom ? `static` : `fixed`,\n    top: \"27vh\",\n    zindex: 100,\n    transform: DialogeDataMobile.mobileZoom ? `translateY(0%)` : `translateY(-10%)`\n  }); ///\n  ///\n  ///SUPERSTARZ ICON SELECT\n\n  var SuperIcon = \"\";\n  DialogeDataMobile.darkmode ? SuperIcon = SuperstarzIconDark : SuperIcon = SuperstarzIconLight; ///\n  ///\n  ///LOGGING UPDATE VALUES DETAILS\n\n  const initialLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialCleanLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialErrorLogValue = {\n    inputedUsername: 0,\n    inputedPassword: 0\n  };\n  const [rawLoginValues, setRawLoginValues] = useState(initialLogValue);\n  const [cleanLoginValues, setCleanLoginValues] = useState(initialCleanLogValue);\n  const [errorsLoginValues, setErrorsLoginValues] = useState(initialErrorLogValue); ///\n  ///\n  ///\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\n\n  const updateLoginvalues = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setErrorsLoginValues({ ...errorsLoginValues,\n      [name]: 0\n    });\n    setRawLoginValues({ ...rawLoginValues,\n      [name]: value\n    });\n    setCleanLoginValues({ ...cleanLoginValues,\n      [name]: value\n    });\n  }; ///\n  ///\n  ///\n  /// SENDING LOG IN  DATA TO SERVER SIDE\n\n\n  const logmein = () => {\n    if (cleanLoginValues.inputedUsername && cleanLoginValues.inputedPassword) {\n      Axios.post(\"http://${REACT_APP_SUPERSTARZ_URL}/loging\", {\n        values: cleanLoginValues\n      }, {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.message === \"Wrong Password\") {\n          setServerErrorData(\"Wrong username and  password combination\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(false);\n        } else {\n          if (response.data.message === \"Wrong username\") {\n            setServerErrorData(\"Username does not exist\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(false);\n          } else if (response.data.payload) {\n            history.push({\n              pathname: \"/supercheck\",\n              state: {\n                userdata: response.data.payload\n              }\n            });\n          } else {\n            setServerErrorData(\"User info could not be retrieved\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(false);\n          }\n        }\n      }).catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          //express typo can activate this\n          // Request made and server responded\n          //express typo can activate this\n          //let textFieldParam = error.response.data.error.errors[0].param;\n          let affectedTextField = \"Wrong password and username combination\";\n          let dynamicError = `${affectedTextField}  `;\n          setServerErrorData(dynamicError);\n          setServerErrorDisplay(1);\n          setserverEmojiplain(false);\n        } else if (error.request) {\n          // The request was made but no response was received Or request not made\n          // Axios.post(\"http://localhost:3003/reg\" can activate this error\n          setServerErrorData(\"Error connecting to server, Check your connection\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(true);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          setServerErrorData(\"Request setup failed , Pls try again\");\n          setServerErrorDisplay(1);\n          setserverEmojiplain(true);\n        }\n      });\n    } else {\n      let passwordErrorHolder = errorsLoginValues.inputedPassword;\n      let usernameErrorHolder = errorsLoginValues.inputedUsername;\n\n      if (!cleanLoginValues.inputedPassword) {\n        passwordErrorHolder = 1;\n      }\n\n      if (!cleanLoginValues.inputedUsername) {\n        usernameErrorHolder = 1;\n      }\n\n      setErrorsLoginValues({ ...errorsLoginValues,\n        inputedPassword: passwordErrorHolder,\n        inputedUsername: usernameErrorHolder\n      });\n    }\n  }; ///\n  ///\n  ///UPDATE SIGN UP DETAILS\n  ///\n  ///\n  ///\n  /// SANITISE SIGN UP FORM INPUT CLIENT SIDE\n\n\n  const updateSignvalues = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"inputedUsername\") {\n      let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\n      let cleanValue = value.replace(usernameCleaner, \"\");\n      let usernameLimiter = /^.{26}$/;\n      let finalUsername = cleanValue.replace(usernameLimiter, \"\");\n      let checkUsernameClean = usernameCleaner.test(value);\n      let checkUsernameLimited = usernameLimiter.test(cleanValue);\n\n      if (checkUsernameClean) {\n        if (UsernameCheckingTimer.current) {\n          clearTimeout(UsernameCheckingTimer.current);\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n        }\n\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n      } else {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      let userNameLength = finalUsername.length;\n\n      if (checkUsernameClean) {} else {\n        if (checkUsernameLimited || userNameLength > 26) {} else {\n          setRawSignupValues({ ...rawSignupValues,\n            [name]: finalUsername\n          });\n          setCleanSignupValues({ ...cleanSignupValues,\n            [name]: finalUsername\n          }); /// AXIOS REQUEST FOR CHECK USERNAME\n\n          if (UsernameCheckingTimer.current) {\n            clearTimeout(UsernameCheckingTimer.current);\n            setErrorFormChecking({ ...errorFormChecking,\n              [name]: false\n            });\n            setErrorsSignupValues({ ...errorsSignupValues,\n              [name]: 0\n            });\n          }\n\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: true\n          });\n          setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 2\n          });\n          UsernameCheckingTimer.current = setTimeout(() => {\n            if (value.length === 0) {\n              setErrorsSignupValues({ ...errorsSignupValues,\n                [name]: 0\n              });\n              setErrorFormChecking({ ...errorFormChecking,\n                [name]: false\n              });\n            } else {\n              Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/usernamecheck`, {\n                value: finalUsername\n              }).then(response => {\n                if (response.data.message === \"username is not unique\") {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 2\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else if (response.data.message === \"username is available\") {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 3\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                }\n              }).catch(function (error) {\n                if (error.response) {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else if (error.request) {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                } else {\n                  setErrorsSignupValues({ ...errorsSignupValues,\n                    [name]: 0\n                  });\n                  setErrorFormChecking({ ...errorFormChecking,\n                    [name]: false\n                  });\n                }\n              });\n            }\n          }, 3000); /// AXIOS REQUEST FOR CHECK USERNAME\n        }\n      } ///\n\n    } else if (name === \"inputedEmail\") {\n      const emailValidation = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      const emailCleaner = /[^*$%#+@a-z0-9áéíóúñü \\.'_]/gim;\n      let finalEmail = value.replace(emailCleaner, \"\");\n      let checkEmailClean = emailCleaner.test(value);\n      let checkEmailValidated = emailValidation.test(String(value).toLowerCase());\n\n      if (EmailCheckingTimer.current) {\n        clearTimeout(EmailCheckingTimer.current);\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: false\n        });\n      }\n\n      if (!checkEmailValidated) {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: true\n        });\n        EmailCheckingTimer.current = setTimeout(() => {\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n          setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 2\n          });\n          checkEmailClean && setErrorsSignupValues({ ...errorsSignupValues,\n            [name]: 3\n          });\n        }, 2000);\n      } else {\n        if (EmailCheckingTimer.current) {\n          clearTimeout(EmailCheckingTimer.current);\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n        }\n\n        checkEmailClean ? setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 3\n        }) : setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: finalEmail\n      });\n      setCleanSignupValues({ ...cleanSignupValues,\n        [name]: finalEmail\n      }); ////////\n    } else {\n      if (PasswordCheckingTimer.current) {\n        clearTimeout(PasswordCheckingTimer.current);\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: false\n        });\n      }\n\n      setErrorsSignupValues({ ...errorsSignupValues,\n        [name]: 2\n      });\n      setErrorFormChecking({ ...errorFormChecking,\n        [name]: true\n      });\n      PasswordCheckingTimer.current = setTimeout(() => {\n        setErrorFormChecking({ ...errorFormChecking,\n          [name]: false\n        });\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n      }, 2000);\n      var passwordLength = value.length;\n\n      if (passwordLength >= 8 || passwordLength === 0) {\n        if (PasswordCheckingTimer.current) {\n          clearTimeout(PasswordCheckingTimer.current);\n          setErrorFormChecking({ ...errorFormChecking,\n            [name]: false\n          });\n        }\n\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: value\n      });\n      setCleanSignupValues({ ...cleanSignupValues,\n        [name]: value\n      });\n    }\n  }; ///\n  ///\n  ///\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\n\n\n  const signmeup = () => {\n    if (cleanSignupValues.inputedEmail && cleanSignupValues.inputedUsername && cleanSignupValues.inputedPassword && errorsSignupValues.inputedPassword === 0) {\n      if (errorsSignupValues.inputedEmail === 0) {\n        Axios.post(\"http://${REACT_APP_SUPERSTARZ_URL}/registration\", {\n          values: cleanSignupValues\n        }).then(response => {\n          if (response.data.message === \"username not unique\") {\n            setServerErrorData(\"Username is taken\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          } else if (response.data.message === \"Registration Successful\") {\n            console.log(response.status);\n            alert(\"REGISTRATION COMPLETE\");\n          } else {\n            setServerErrorData(\"Something went wrong\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          }\n        }).catch(function (error) {\n          if (error.response) {\n            // Request made and server responded\n            //express typo can activate this\n            let textFieldParam = error.response.data.error.errors[0].param;\n            let affectedTextField = \" \";\n\n            if (textFieldParam === \"values.inputedPassword\") {\n              affectedTextField = \"Password must be at Least 8 characters\";\n            } else if (textFieldParam === \"values.inputedEmail\") {\n              affectedTextField = \"Email address is not valid\";\n            } else {\n              affectedTextField = \"Usernames use letters, numbers, underscores and periods\";\n            }\n\n            let dynamicError = `${affectedTextField}.  ${error.response.data.error.errors[0].msg} `;\n            setServerErrorData(dynamicError);\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          } else if (error.request) {\n            // The request was made but no response was received Or request not made\n            // Axios.post(\"http://localhost:3003/reg\" can activate this error\n            setServerErrorData(\"Error connecting to server, Check your connection\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          } else {\n            // Something happened in setting up the request that triggered an Error\n            setServerErrorData(\"Request setup failed , Pls try again\");\n            setServerErrorDisplay(1);\n            setserverEmojiplain(true);\n          }\n        });\n      } else {\n        setCantPassBadEmail(true);\n        setTimeout(() => {\n          setCantPassBadEmail(false);\n        }, 3000);\n      }\n    } else {\n      let passwordErrorHolder = errorsSignupValues.inputedPassword;\n      let emailErrorHolder = errorsSignupValues.inputedEmail;\n      let usernameErrorHolder = errorsSignupValues.inputedUsername;\n\n      if (!cleanSignupValues.inputedPassword) {\n        passwordErrorHolder = 4;\n      }\n\n      if (!cleanSignupValues.inputedEmail) {\n        emailErrorHolder = 4;\n      }\n\n      if (!cleanSignupValues.inputedUsername) {\n        usernameErrorHolder = 4;\n      }\n\n      setErrorsSignupValues({ ...errorsSignupValues,\n        inputedPassword: passwordErrorHolder,\n        inputedEmail: emailErrorHolder,\n        inputedUsername: usernameErrorHolder\n      });\n    }\n  }; ///\n  ///\n  ///\\///\n  ///\n  /// UPDATE SIGN UP DETAILS\n  ///\n  ///\n  ///\n  /// LOGOUT\n\n\n  const logout = () => {\n    Axios.post(\"http://${REACT_APP_SUPERSTARZ_URL}/logout\", {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.message === \"cookie deleted\") {\n        alert(\"logout  complete\");\n      } else if (response.data.message === \"cookie null\") {\n        alert(\"logged out  already\");\n      }\n    }).catch(function (error) {\n      alert(\"logout fail\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(DialogContent, {\n    className: \"fadermodal FormDialog-container-mobile dontallowhighlighting\",\n    style: {\n      overflow: \"auto\",\n      cursor: \"pointer\",\n      padding: \"0px\",\n      zIndex: 100\n    },\n    children: [/*#__PURE__*/_jsxDEV(ServerError, {\n      device: \"mobile\",\n      serverEmojiplain: DialogeDataMobile.serverEmojiplain,\n      setServerErrorData: DialogeDataMobile.setServerErrorData,\n      serverErrorDisplay: DialogeDataMobile.serverErrorDisplay,\n      serverErrorData: DialogeDataMobile.serverErrorData,\n      darkmode: DialogeDataMobile.darkmode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n      style: DialogeDataMobile.modalanimation,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: DialogeDataMobile.PaperStyle,\n        style: {\n          cursor: \"default\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              marginTop: \"-2.5px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => DialogeDataMobile.setMobileZoom(!DialogeDataMobile.mobileZoom),\n              onLoad: DialogeDataMobile.onimageload,\n              src: DialogeDataMobile.showimage,\n              className: \"modalMobileImageStyle\",\n              alt: \"Logsmall\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            className: DialogeDataMobile.mobileZoom ? \"zoomMobile\" : \"smallMobile\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(animated.div, {\n              style: mobileLogmodalanimation,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                style: {\n                  backgroundImage: DialogeDataMobile.PaperStyle,\n                  cursor: \"default\",\n                  height: \"99vh\",\n                  borderRadius: \"0px\",\n                  marginTop: \"-1.9px\",\n                  borderTopRightRadius: mobilemodalrad,\n                  borderTopLeftRadius: mobilemodalrad\n                },\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  xs: 12,\n                  item: true,\n                  className: \"formholder\",\n                  children: DialogeDataMobile.formtype ? /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    className: \"\",\n                    style: {\n                      marginTop: \"-1.5px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n                      type: true,\n                      device: \"mobile\",\n                      ErrorDisplay: DialogeDataMobile.errorsLoginInputedUsername,\n                      darkmode: DialogeDataMobile.darkmode,\n                      WidthHolder: WidthHolder\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 564,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      style: {\n                        transform: \"scale(0.93)\",\n                        width: \"99%\",\n                        paddingBottom: \"60px\"\n                      },\n                      label: \"Username\",\n                      margin: \"normal\",\n                      type: \"text\",\n                      onChange: DialogeDataMobile.updateLoginvalues,\n                      name: \"inputedUsername\",\n                      value: DialogeDataMobile.rawLogininputedUsername,\n                      variant: \"standard\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 574,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      size: \"small\",\n                      style: {\n                        transform: \"scale(0.93)\",\n                        width: \"99%\",\n                        paddingBottom: \"40px\",\n                        zIndex: 1\n                      },\n                      label: \"Password\",\n                      onChange: DialogeDataMobile.updateLoginvalues,\n                      type: DialogeDataMobile.loginShowPassword ? \"text\" : \"password\",\n                      name: \"inputedPassword\",\n                      value: DialogeDataMobile.rawLogininputedPassword,\n                      variant: \"standard\",\n                      InputProps: {\n                        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                          position: \"end\",\n                          children: /*#__PURE__*/_jsxDEV(IconButton, {\n                            onClick: DialogeDataMobile.ShowLoginPasswordForaWhile,\n                            onMouseDown: DialogeDataMobile.ShowLoginPasswordForaWhile,\n                            \"aria-label\": \"toggle password visibility\",\n                            children: DialogeDataMobile.loginShowPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 620,\n                              columnNumber: 37\n                            }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 622,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 610,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 609,\n                          columnNumber: 31\n                        }, this)\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 589,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n                      type: false,\n                      ErrorDisplay: DialogeDataMobile.errorsLoginInputedPassword,\n                      device: \"mobile\",\n                      darkmode: DialogeDataMobile.darkmode,\n                      WidthHolder: WidthHolder\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 629,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      style: {\n                        marginTop: \"40px\",\n                        zIndex: 2\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 4\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 643,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        className: \"buttonpad buttonshake\",\n                        xs: 4,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: DialogeDataMobile.logmein,\n                          style: DialogeDataMobile.loginstyle,\n                          fullWidth: true,\n                          variant: \"outlined\",\n                          size: \"large\",\n                          color: \"primary\",\n                          children: \"Log In\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 645,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 644,\n                        columnNumber: 27\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 639,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    className: \"\",\n                    style: {\n                      marginTop: \"-1.5px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n                      device: \"mobile\",\n                      ErrorType: 0,\n                      textField: \"email\",\n                      errorFormChecking: DialogeDataMobile.errorFormCheckinginputedEmail,\n                      WidthHolder: WidthHolder,\n                      darkmode: DialogeDataMobile.darkmode,\n                      type: true,\n                      cantPassBadEmail: DialogeDataMobile.cantPassBadEmail,\n                      ErrorDisplay: DialogeDataMobile.emailErrorDisplay,\n                      ErrorData: DialogeDataMobile.emailErrorData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 665,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      size: \"small\",\n                      style: {\n                        transform: \"scale(0.93)\",\n                        width: \"99%\",\n                        paddingBottom: \"40px\"\n                      },\n                      label: \"Email\",\n                      type: \"email\",\n                      onChange: DialogeDataMobile.updateSignvalues,\n                      name: \"inputedEmail\",\n                      value: DialogeDataMobile.rawSignupValuesinputedEmail,\n                      variant: \"standard\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 680,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n                      device: \"mobile\",\n                      ErrorType: DialogeDataMobile.errorsSignupValuesinputedUsername,\n                      textField: \"username\",\n                      errorFormChecking: DialogeDataMobile.errorFormCheckinginputedUsername,\n                      WidthHolder: WidthHolder,\n                      darkmode: DialogeDataMobile.darkmode,\n                      type: true,\n                      cantPassBadEmail: DialogeDataMobile.cantPassBadEmail,\n                      ErrorDisplay: DialogeDataMobile.usernameErrorDisplay,\n                      ErrorData: DialogeDataMobile.usernameErrorData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 695,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      size: \"small\",\n                      style: {\n                        transform: \"scale(0.93)\",\n                        width: \"99%\",\n                        paddingBottom: \"65px\"\n                      },\n                      label: \"Username\",\n                      type: \"text\",\n                      onChange: DialogeDataMobile.updateSignvalues,\n                      name: \"inputedUsername\",\n                      value: DialogeDataMobile.rawSignupValuesinputedUsername,\n                      variant: \"standard\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 711,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      size: \"small\",\n                      style: {\n                        transform: \"scale(0.93)\",\n                        width: \"99%\",\n                        paddingBottom: \"32px\"\n                      },\n                      label: \"Password\",\n                      type: DialogeDataMobile.signupShowPassword ? \"text\" : \"password\",\n                      onChange: DialogeDataMobile.updateSignvalues,\n                      name: \"inputedPassword\",\n                      value: DialogeDataMobile.rawSignupValuesinputedPassword,\n                      variant: \"standard\",\n                      InputProps: {\n                        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                          position: \"end\",\n                          children: /*#__PURE__*/_jsxDEV(IconButton, {\n                            onClick: DialogeDataMobile.ShowSignupPasswordForaWhile,\n                            onMouseDown: DialogeDataMobile.ShowSignupPasswordForaWhile,\n                            \"aria-label\": \"toggle password visibility\",\n                            children: DialogeDataMobile.signupShowPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 760,\n                              columnNumber: 37\n                            }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 762,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 750,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 749,\n                          columnNumber: 31\n                        }, this)\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 728,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n                      device: \"mobile\",\n                      ErrorType: 0,\n                      textField: \"password\",\n                      errorFormChecking: DialogeDataMobile.errorFormCheckinginputedPassword,\n                      darkmode: DialogeDataMobile.darkmode,\n                      WidthHolder: WidthHolder,\n                      type: false,\n                      cantPassBadEmail: DialogeDataMobile.cantPassBadEmail,\n                      ErrorDisplay: DialogeDataMobile.passwordErrorDisplay,\n                      ErrorData: DialogeDataMobile.passwordErrorData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 769,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      style: {\n                        marginTop: \"40px\",\n                        zIndex: 2\n                      },\n                      className: \"modal-hold-signup\",\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 4\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 789,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        className: \"buttonpad buttonshake\",\n                        xs: 4,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          style: DialogeDataMobile.signupstyle,\n                          onClick: DialogeDataMobile.signmeup,\n                          fullWidth: true,\n                          variant: \"contained\",\n                          size: \"large\",\n                          color: \"secondary\",\n                          children: \"Sign Up\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 791,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 790,\n                        columnNumber: 27\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 784,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 659,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 500,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MobileModalLogx, \"Lv0sbmMrYcDxHtX79EbYvFazm7Y=\", false, function () {\n  return [useSpring];\n});\n\n_c = MobileModalLogx;\nexport const MobileModalLog = /*#__PURE__*/React.memo(MobileModalLogx);\n_c2 = MobileModalLog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MobileModalLogx\");\n$RefreshReg$(_c2, \"MobileModalLog\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/MobileModalLog.tsx"],"names":["React","useState","IconButton","InputAdornment","Grid","DialogContent","Paper","TextField","Button","useSpring","animated","ModalFormSignupError","ModalFormLoginError","ServerError","VisibilityOffIcon","VisibilityIcon","SuperstarzIconLight","SuperstarzIconDark","MobileModalLogx","DialogeDataMobile","WidthHolder","mobilemodalrad","mobileZoom","mobileLogmodalanimation","config","duration","opacity","position","top","zindex","transform","SuperIcon","darkmode","initialLogValue","inputedUsername","inputedPassword","initialCleanLogValue","initialErrorLogValue","rawLoginValues","setRawLoginValues","cleanLoginValues","setCleanLoginValues","errorsLoginValues","setErrorsLoginValues","updateLoginvalues","e","name","value","target","logmein","Axios","post","values","withCredentials","then","response","data","message","setServerErrorData","setServerErrorDisplay","setserverEmojiplain","payload","history","push","pathname","state","userdata","catch","error","affectedTextField","dynamicError","request","passwordErrorHolder","usernameErrorHolder","updateSignvalues","usernameCleaner","cleanValue","replace","usernameLimiter","finalUsername","checkUsernameClean","test","checkUsernameLimited","UsernameCheckingTimer","current","clearTimeout","setErrorFormChecking","errorFormChecking","setErrorsSignupValues","errorsSignupValues","userNameLength","length","setRawSignupValues","rawSignupValues","setCleanSignupValues","cleanSignupValues","setTimeout","REACT_APP_SUPERSTARZ_URL","emailValidation","emailCleaner","finalEmail","checkEmailClean","checkEmailValidated","String","toLowerCase","EmailCheckingTimer","PasswordCheckingTimer","passwordLength","signmeup","inputedEmail","console","log","status","alert","textFieldParam","errors","param","msg","setCantPassBadEmail","emailErrorHolder","logout","overflow","cursor","padding","zIndex","serverEmojiplain","serverErrorDisplay","serverErrorData","modalanimation","PaperStyle","marginTop","setMobileZoom","onimageload","showimage","backgroundImage","height","borderRadius","borderTopRightRadius","borderTopLeftRadius","formtype","errorsLoginInputedUsername","width","paddingBottom","rawLogininputedUsername","loginShowPassword","rawLogininputedPassword","endAdornment","ShowLoginPasswordForaWhile","errorsLoginInputedPassword","loginstyle","errorFormCheckinginputedEmail","cantPassBadEmail","emailErrorDisplay","emailErrorData","rawSignupValuesinputedEmail","errorsSignupValuesinputedUsername","errorFormCheckinginputedUsername","usernameErrorDisplay","usernameErrorData","rawSignupValuesinputedUsername","signupShowPassword","rawSignupValuesinputedPassword","ShowSignupPasswordForaWhile","errorFormCheckinginputedPassword","passwordErrorDisplay","passwordErrorData","signupstyle","MobileModalLog","memo"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  IconButton,\r\n  InputAdornment,\r\n  Grid,\r\n  DialogContent,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { IDialogeDataMobile, IGrid } from \"./appFolder-Interfaces\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nimport ModalFormSignupError from \"./ModalFormSignupError\";\r\nimport ModalFormLoginError from \"./ModalFormLoginError\";\r\nimport ServerError from \"./ServerError\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\r\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\r\n\r\nfunction MobileModalLogx(DialogeDataMobile: IDialogeDataMobile) {\r\n  ///\r\n  ///\r\n  ///\r\n  /// DYNAMIC MODAL LAYOUT VARIABLES\r\n  ///WITHHOLDER JUST A PLACEHOLDER FOR PC MODAL LOG\r\n  var WidthHolder: string = \"100%\";\r\n  var mobilemodalrad = \"4px\";\r\n  DialogeDataMobile.mobileZoom\r\n    ? (mobilemodalrad = \"0px\")\r\n    : (mobilemodalrad = \"4px\");\r\n  ///\r\n  ///\r\n  ///\r\n  /// DYNAMIC MODAL LAYOUT VARIABLES\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const mobileLogmodalanimation: any = useSpring({\r\n    config: {\r\n      duration: 115,\r\n    },\r\n    opacity: DialogeDataMobile.mobileZoom ? 1 : 0.98,\r\n    position: DialogeDataMobile.mobileZoom ? `static` : `fixed`,\r\n    top: \"27vh\",\r\n    zindex: 100,\r\n    transform: DialogeDataMobile.mobileZoom\r\n      ? `translateY(0%)`\r\n      : `translateY(-10%)`,\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///SUPERSTARZ ICON SELECT\r\n  var SuperIcon = \"\";\r\n  DialogeDataMobile.darkmode\r\n    ? (SuperIcon = SuperstarzIconDark)\r\n    : (SuperIcon = SuperstarzIconLight);\r\n\r\n  ///\r\n  ///\r\n  ///LOGGING UPDATE VALUES DETAILS\r\n  const initialLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialCleanLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const initialErrorLogValue = {\r\n    inputedUsername: 0,\r\n    inputedPassword: 0,\r\n  };\r\n\r\n  const [rawLoginValues, setRawLoginValues] = useState(initialLogValue);\r\n  const [cleanLoginValues, setCleanLoginValues] =\r\n    useState(initialCleanLogValue);\r\n  const [errorsLoginValues, setErrorsLoginValues] =\r\n    useState(initialErrorLogValue);\r\n  ///\r\n  ///\r\n  ///\r\n  /// SANITISE LOG IN FORM INPUT CLIENT SIDE\r\n  const updateLoginvalues = (e: any) => {\r\n    const { name, value } = e.target;\r\n\r\n    setErrorsLoginValues({ ...errorsLoginValues, [name]: 0 });\r\n    setRawLoginValues({ ...rawLoginValues, [name]: value });\r\n    setCleanLoginValues({ ...cleanLoginValues, [name]: value });\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SENDING LOG IN  DATA TO SERVER SIDE\r\n  const logmein = () => {\r\n    if (cleanLoginValues.inputedUsername && cleanLoginValues.inputedPassword) {\r\n      Axios.post(\r\n        \"http://${REACT_APP_SUPERSTARZ_URL}/loging\",\r\n        {\r\n          values: cleanLoginValues,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n        .then((response) => {\r\n          if (response.data.message === \"Wrong Password\") {\r\n            setServerErrorData(\"Wrong username and  password combination\");\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(false);\r\n          } else {\r\n            if (response.data.message === \"Wrong username\") {\r\n              setServerErrorData(\"Username does not exist\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(false);\r\n            } else if (response.data.payload) {\r\n              history.push({\r\n                pathname: \"/supercheck\",\r\n                state: { userdata: response.data.payload },\r\n              });\r\n            } else {\r\n              setServerErrorData(\"User info could not be retrieved\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(false);\r\n            }\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          if (error.response) {\r\n            // Request made and server responded\r\n            //express typo can activate this\r\n            // Request made and server responded\r\n            //express typo can activate this\r\n            //let textFieldParam = error.response.data.error.errors[0].param;\r\n            let affectedTextField = \"Wrong password and username combination\";\r\n\r\n            let dynamicError = `${affectedTextField}  `;\r\n            setServerErrorData(dynamicError);\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(false);\r\n          } else if (error.request) {\r\n            // The request was made but no response was received Or request not made\r\n            // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n            setServerErrorData(\r\n              \"Error connecting to server, Check your connection\"\r\n            );\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(true);\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            setServerErrorData(\"Request setup failed , Pls try again\");\r\n            setServerErrorDisplay(1);\r\n            setserverEmojiplain(true);\r\n          }\r\n        });\r\n    } else {\r\n      let passwordErrorHolder = errorsLoginValues.inputedPassword;\r\n\r\n      let usernameErrorHolder = errorsLoginValues.inputedUsername;\r\n\r\n      if (!cleanLoginValues.inputedPassword) {\r\n        passwordErrorHolder = 1;\r\n      }\r\n\r\n      if (!cleanLoginValues.inputedUsername) {\r\n        usernameErrorHolder = 1;\r\n      }\r\n\r\n      setErrorsLoginValues({\r\n        ...errorsLoginValues,\r\n        inputedPassword: passwordErrorHolder,\r\n        inputedUsername: usernameErrorHolder,\r\n      });\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///UPDATE SIGN UP DETAILS\r\n  ///\r\n  ///\r\n  ///\r\n  /// SANITISE SIGN UP FORM INPUT CLIENT SIDE\r\n  const updateSignvalues = (e: any) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"inputedUsername\") {\r\n      let usernameCleaner = /[^a-z0-9áéíóúñü\\._]/gim;\r\n      let cleanValue = value.replace(usernameCleaner, \"\");\r\n\r\n      let usernameLimiter = /^.{26}$/;\r\n      let finalUsername = cleanValue.replace(usernameLimiter, \"\");\r\n\r\n      let checkUsernameClean = usernameCleaner.test(value);\r\n      let checkUsernameLimited = usernameLimiter.test(cleanValue);\r\n\r\n      if (checkUsernameClean) {\r\n        if (UsernameCheckingTimer.current) {\r\n          clearTimeout(UsernameCheckingTimer.current);\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n        }\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n      } else {\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n      }\r\n\r\n      let userNameLength = finalUsername.length;\r\n\r\n      if (checkUsernameClean) {\r\n      } else {\r\n        if (checkUsernameLimited || userNameLength > 26) {\r\n        } else {\r\n          setRawSignupValues({\r\n            ...rawSignupValues,\r\n            [name]: finalUsername,\r\n          });\r\n          setCleanSignupValues({\r\n            ...cleanSignupValues,\r\n            [name]: finalUsername,\r\n          });\r\n          /// AXIOS REQUEST FOR CHECK USERNAME\r\n          if (UsernameCheckingTimer.current) {\r\n            clearTimeout(UsernameCheckingTimer.current);\r\n            setErrorFormChecking({\r\n              ...errorFormChecking,\r\n              [name]: false,\r\n            });\r\n            setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n          }\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n          UsernameCheckingTimer.current = setTimeout(() => {\r\n            if (value.length === 0) {\r\n              setErrorsSignupValues({\r\n                ...errorsSignupValues,\r\n                [name]: 0,\r\n              });\r\n              setErrorFormChecking({\r\n                ...errorFormChecking,\r\n                [name]: false,\r\n              });\r\n            } else {\r\n              Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/usernamecheck`, {\r\n                value: finalUsername,\r\n              })\r\n                .then((response) => {\r\n                  if (response.data.message === \"username is not unique\") {\r\n                    setErrorsSignupValues({\r\n                      ...errorsSignupValues,\r\n                      [name]: 2,\r\n                    });\r\n                    setErrorFormChecking({\r\n                      ...errorFormChecking,\r\n                      [name]: false,\r\n                    });\r\n                  } else if (\r\n                    response.data.message === \"username is available\"\r\n                  ) {\r\n                    setErrorsSignupValues({\r\n                      ...errorsSignupValues,\r\n                      [name]: 3,\r\n                    });\r\n                    setErrorFormChecking({\r\n                      ...errorFormChecking,\r\n                      [name]: false,\r\n                    });\r\n                  } else {\r\n                    setErrorsSignupValues({\r\n                      ...errorsSignupValues,\r\n                      [name]: 0,\r\n                    });\r\n                    setErrorFormChecking({\r\n                      ...errorFormChecking,\r\n                      [name]: false,\r\n                    });\r\n                  }\r\n                })\r\n                .catch(function (error) {\r\n                  if (error.response) {\r\n                    setErrorsSignupValues({\r\n                      ...errorsSignupValues,\r\n                      [name]: 0,\r\n                    });\r\n                    setErrorFormChecking({\r\n                      ...errorFormChecking,\r\n                      [name]: false,\r\n                    });\r\n                  } else if (error.request) {\r\n                    setErrorsSignupValues({\r\n                      ...errorsSignupValues,\r\n                      [name]: 0,\r\n                    });\r\n                    setErrorFormChecking({\r\n                      ...errorFormChecking,\r\n                      [name]: false,\r\n                    });\r\n                  } else {\r\n                    setErrorsSignupValues({\r\n                      ...errorsSignupValues,\r\n                      [name]: 0,\r\n                    });\r\n                    setErrorFormChecking({\r\n                      ...errorFormChecking,\r\n                      [name]: false,\r\n                    });\r\n                  }\r\n                });\r\n            }\r\n          }, 3000);\r\n          /// AXIOS REQUEST FOR CHECK USERNAME\r\n        }\r\n      }\r\n      ///\r\n    } else if (name === \"inputedEmail\") {\r\n      const emailValidation =\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      const emailCleaner = /[^*$%#+@a-z0-9áéíóúñü \\.'_]/gim;\r\n      let finalEmail = value.replace(emailCleaner, \"\");\r\n\r\n      let checkEmailClean = emailCleaner.test(value);\r\n      let checkEmailValidated = emailValidation.test(\r\n        String(value).toLowerCase()\r\n      );\r\n      if (EmailCheckingTimer.current) {\r\n        clearTimeout(EmailCheckingTimer.current);\r\n        setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n      }\r\n      if (!checkEmailValidated) {\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n        setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n        EmailCheckingTimer.current = setTimeout(() => {\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n          setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n          checkEmailClean &&\r\n            setErrorsSignupValues({ ...errorsSignupValues, [name]: 3 });\r\n        }, 2000);\r\n      } else {\r\n        if (EmailCheckingTimer.current) {\r\n          clearTimeout(EmailCheckingTimer.current);\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n        }\r\n        checkEmailClean\r\n          ? setErrorsSignupValues({ ...errorsSignupValues, [name]: 3 })\r\n          : setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n      }\r\n\r\n      setRawSignupValues({ ...rawSignupValues, [name]: finalEmail });\r\n      setCleanSignupValues({ ...cleanSignupValues, [name]: finalEmail });\r\n      ////////\r\n    } else {\r\n      if (PasswordCheckingTimer.current) {\r\n        clearTimeout(PasswordCheckingTimer.current);\r\n        setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n      }\r\n      setErrorsSignupValues({ ...errorsSignupValues, [name]: 2 });\r\n\r\n      setErrorFormChecking({ ...errorFormChecking, [name]: true });\r\n      PasswordCheckingTimer.current = setTimeout(() => {\r\n        setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n      }, 2000);\r\n\r\n      var passwordLength = value.length;\r\n\r\n      if (passwordLength >= 8 || passwordLength === 0) {\r\n        if (PasswordCheckingTimer.current) {\r\n          clearTimeout(PasswordCheckingTimer.current);\r\n          setErrorFormChecking({ ...errorFormChecking, [name]: false });\r\n        }\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n      }\r\n      setRawSignupValues({ ...rawSignupValues, [name]: value });\r\n      setCleanSignupValues({ ...cleanSignupValues, [name]: value });\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SENDING SIGN UP  DATA TO SERVER SIDE\r\n  const signmeup = () => {\r\n    if (\r\n      cleanSignupValues.inputedEmail &&\r\n      cleanSignupValues.inputedUsername &&\r\n      cleanSignupValues.inputedPassword &&\r\n      errorsSignupValues.inputedPassword === 0\r\n    ) {\r\n      if (errorsSignupValues.inputedEmail === 0) {\r\n        Axios.post(\"http://${REACT_APP_SUPERSTARZ_URL}/registration\", {\r\n          values: cleanSignupValues,\r\n        })\r\n          .then((response) => {\r\n            if (response.data.message === \"username not unique\") {\r\n              setServerErrorData(\"Username is taken\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            } else if (response.data.message === \"Registration Successful\") {\r\n              console.log(response.status);\r\n              alert(\"REGISTRATION COMPLETE\");\r\n            } else {\r\n              setServerErrorData(\"Something went wrong\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            if (error.response) {\r\n              // Request made and server responded\r\n              //express typo can activate this\r\n              let textFieldParam = error.response.data.error.errors[0].param;\r\n              let affectedTextField = \" \";\r\n\r\n              if (textFieldParam === \"values.inputedPassword\") {\r\n                affectedTextField = \"Password must be at Least 8 characters\";\r\n              } else if (textFieldParam === \"values.inputedEmail\") {\r\n                affectedTextField = \"Email address is not valid\";\r\n              } else {\r\n                affectedTextField =\r\n                  \"Usernames use letters, numbers, underscores and periods\";\r\n              }\r\n              let dynamicError = `${affectedTextField}.  ${error.response.data.error.errors[0].msg} `;\r\n              setServerErrorData(dynamicError);\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            } else if (error.request) {\r\n              // The request was made but no response was received Or request not made\r\n              // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n              setServerErrorData(\r\n                \"Error connecting to server, Check your connection\"\r\n              );\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            } else {\r\n              // Something happened in setting up the request that triggered an Error\r\n              setServerErrorData(\"Request setup failed , Pls try again\");\r\n              setServerErrorDisplay(1);\r\n              setserverEmojiplain(true);\r\n            }\r\n          });\r\n      } else {\r\n        setCantPassBadEmail(true);\r\n        setTimeout(() => {\r\n          setCantPassBadEmail(false);\r\n        }, 3000);\r\n      }\r\n    } else {\r\n      let passwordErrorHolder = errorsSignupValues.inputedPassword;\r\n      let emailErrorHolder = errorsSignupValues.inputedEmail;\r\n      let usernameErrorHolder = errorsSignupValues.inputedUsername;\r\n\r\n      if (!cleanSignupValues.inputedPassword) {\r\n        passwordErrorHolder = 4;\r\n      }\r\n      if (!cleanSignupValues.inputedEmail) {\r\n        emailErrorHolder = 4;\r\n      }\r\n      if (!cleanSignupValues.inputedUsername) {\r\n        usernameErrorHolder = 4;\r\n      }\r\n\r\n      setErrorsSignupValues({\r\n        ...errorsSignupValues,\r\n        inputedPassword: passwordErrorHolder,\r\n        inputedEmail: emailErrorHolder,\r\n        inputedUsername: usernameErrorHolder,\r\n      });\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\\///\r\n  ///\r\n  /// UPDATE SIGN UP DETAILS\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// LOGOUT\r\n  const logout = () => {\r\n    Axios.post(\"http://${REACT_APP_SUPERSTARZ_URL}/logout\", {\r\n      withCredentials: true,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.message === \"cookie deleted\") {\r\n          alert(\"logout  complete\");\r\n        } else if (response.data.message === \"cookie null\") {\r\n          alert(\"logged out  already\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"logout fail\");\r\n      });\r\n  };\r\n  return (\r\n    <DialogContent\r\n      className=\"fadermodal FormDialog-container-mobile dontallowhighlighting\"\r\n      style={{\r\n        overflow: \"auto\",\r\n        cursor: \"pointer\",\r\n        padding: \"0px\",\r\n        zIndex: 100,\r\n      }}\r\n    >\r\n      <ServerError\r\n        device=\"mobile\"\r\n        serverEmojiplain={DialogeDataMobile.serverEmojiplain}\r\n        setServerErrorData={DialogeDataMobile.setServerErrorData}\r\n        serverErrorDisplay={DialogeDataMobile.serverErrorDisplay}\r\n        serverErrorData={DialogeDataMobile.serverErrorData}\r\n        darkmode={DialogeDataMobile.darkmode}\r\n      />\r\n      <animated.div style={DialogeDataMobile.modalanimation}>\r\n        <Paper\r\n          className={DialogeDataMobile.PaperStyle}\r\n          style={{\r\n            cursor: \"default\",\r\n          }}\r\n        >\r\n          <Grid container>\r\n            <Grid item xs={12} style={{ marginTop: \"-2.5px\" }}>\r\n              <img\r\n                onClick={() =>\r\n                  DialogeDataMobile.setMobileZoom(!DialogeDataMobile.mobileZoom)\r\n                }\r\n                onLoad={DialogeDataMobile.onimageload}\r\n                src={DialogeDataMobile.showimage}\r\n                className=\"modalMobileImageStyle\"\r\n                alt=\"Logsmall\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              className={\r\n                DialogeDataMobile.mobileZoom ? \"zoomMobile\" : \"smallMobile\"\r\n              }\r\n            >\r\n              {\" \"}\r\n              <animated.div style={mobileLogmodalanimation}>\r\n                <Paper\r\n                  style={{\r\n                    backgroundImage: DialogeDataMobile.PaperStyle,\r\n                    cursor: \"default\",\r\n                    height: \"99vh\",\r\n                    borderRadius: \"0px\",\r\n                    marginTop: \"-1.9px\",\r\n                    borderTopRightRadius: mobilemodalrad,\r\n                    borderTopLeftRadius: mobilemodalrad,\r\n                  }}\r\n                >\r\n                  <Grid xs={12} item className=\"formholder\">\r\n                    {DialogeDataMobile.formtype ? (\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        className=\"\"\r\n                        style={{ marginTop: \"-1.5px\" }}\r\n                      >\r\n                        <ModalFormLoginError\r\n                          type={true}\r\n                          device=\"mobile\"\r\n                          ErrorDisplay={\r\n                            DialogeDataMobile.errorsLoginInputedUsername\r\n                          }\r\n                          darkmode={DialogeDataMobile.darkmode}\r\n                          WidthHolder={WidthHolder}\r\n                        />\r\n\r\n                        <TextField\r\n                          style={{\r\n                            transform: \"scale(0.93)\",\r\n                            width: \"99%\",\r\n                            paddingBottom: \"60px\",\r\n                          }}\r\n                          label=\"Username\"\r\n                          margin=\"normal\"\r\n                          type=\"text\"\r\n                          onChange={DialogeDataMobile.updateLoginvalues}\r\n                          name=\"inputedUsername\"\r\n                          value={DialogeDataMobile.rawLogininputedUsername}\r\n                          variant=\"standard\"\r\n                        />\r\n\r\n                        <TextField\r\n                          size=\"small\"\r\n                          style={{\r\n                            transform: \"scale(0.93)\",\r\n                            width: \"99%\",\r\n                            paddingBottom: \"40px\",\r\n                            zIndex: 1,\r\n                          }}\r\n                          label=\"Password\"\r\n                          onChange={DialogeDataMobile.updateLoginvalues}\r\n                          type={\r\n                            DialogeDataMobile.loginShowPassword\r\n                              ? \"text\"\r\n                              : \"password\"\r\n                          }\r\n                          name=\"inputedPassword\"\r\n                          value={DialogeDataMobile.rawLogininputedPassword}\r\n                          variant=\"standard\"\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                  onClick={\r\n                                    DialogeDataMobile.ShowLoginPasswordForaWhile\r\n                                  }\r\n                                  onMouseDown={\r\n                                    DialogeDataMobile.ShowLoginPasswordForaWhile\r\n                                  }\r\n                                  aria-label=\"toggle password visibility\"\r\n                                >\r\n                                  {DialogeDataMobile.loginShowPassword ? (\r\n                                    <VisibilityIcon />\r\n                                  ) : (\r\n                                    <VisibilityOffIcon />\r\n                                  )}\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                        <ModalFormLoginError\r\n                          type={false}\r\n                          ErrorDisplay={\r\n                            DialogeDataMobile.errorsLoginInputedPassword\r\n                          }\r\n                          device=\"mobile\"\r\n                          darkmode={DialogeDataMobile.darkmode}\r\n                          WidthHolder={WidthHolder}\r\n                        />\r\n\r\n                        <Grid\r\n                          container\r\n                          style={{ marginTop: \"40px\", zIndex: 2 }}\r\n                        >\r\n                          <Grid item xs={4}></Grid>\r\n                          <Grid item className=\"buttonpad buttonshake\" xs={4}>\r\n                            <Button\r\n                              onClick={DialogeDataMobile.logmein}\r\n                              style={DialogeDataMobile.loginstyle}\r\n                              fullWidth={true}\r\n                              variant=\"outlined\"\r\n                              size=\"large\"\r\n                              color=\"primary\"\r\n                            >\r\n                              Log In\r\n                            </Button>\r\n                          </Grid>{\" \"}\r\n                        </Grid>\r\n                      </Grid>\r\n                    ) : (\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        className=\"\"\r\n                        style={{ marginTop: \"-1.5px\" }}\r\n                      >\r\n                        <ModalFormSignupError\r\n                          device=\"mobile\"\r\n                          ErrorType={0}\r\n                          textField=\"email\"\r\n                          errorFormChecking={\r\n                            DialogeDataMobile.errorFormCheckinginputedEmail\r\n                          }\r\n                          WidthHolder={WidthHolder}\r\n                          darkmode={DialogeDataMobile.darkmode}\r\n                          type={true}\r\n                          cantPassBadEmail={DialogeDataMobile.cantPassBadEmail}\r\n                          ErrorDisplay={DialogeDataMobile.emailErrorDisplay}\r\n                          ErrorData={DialogeDataMobile.emailErrorData}\r\n                        />\r\n\r\n                        <TextField\r\n                          size=\"small\"\r\n                          style={{\r\n                            transform: \"scale(0.93)\",\r\n                            width: \"99%\",\r\n                            paddingBottom: \"40px\",\r\n                          }}\r\n                          label=\"Email\"\r\n                          type=\"email\"\r\n                          onChange={DialogeDataMobile.updateSignvalues}\r\n                          name=\"inputedEmail\"\r\n                          value={DialogeDataMobile.rawSignupValuesinputedEmail}\r\n                          variant=\"standard\"\r\n                        />\r\n\r\n                        <ModalFormSignupError\r\n                          device=\"mobile\"\r\n                          ErrorType={\r\n                            DialogeDataMobile.errorsSignupValuesinputedUsername\r\n                          }\r\n                          textField=\"username\"\r\n                          errorFormChecking={\r\n                            DialogeDataMobile.errorFormCheckinginputedUsername\r\n                          }\r\n                          WidthHolder={WidthHolder}\r\n                          darkmode={DialogeDataMobile.darkmode}\r\n                          type={true}\r\n                          cantPassBadEmail={DialogeDataMobile.cantPassBadEmail}\r\n                          ErrorDisplay={DialogeDataMobile.usernameErrorDisplay}\r\n                          ErrorData={DialogeDataMobile.usernameErrorData}\r\n                        />\r\n                        <TextField\r\n                          size=\"small\"\r\n                          style={{\r\n                            transform: \"scale(0.93)\",\r\n                            width: \"99%\",\r\n                            paddingBottom: \"65px\",\r\n                          }}\r\n                          label=\"Username\"\r\n                          type=\"text\"\r\n                          onChange={DialogeDataMobile.updateSignvalues}\r\n                          name=\"inputedUsername\"\r\n                          value={\r\n                            DialogeDataMobile.rawSignupValuesinputedUsername\r\n                          }\r\n                          variant=\"standard\"\r\n                        />\r\n\r\n                        <TextField\r\n                          size=\"small\"\r\n                          style={{\r\n                            transform: \"scale(0.93)\",\r\n                            width: \"99%\",\r\n                            paddingBottom: \"32px\",\r\n                          }}\r\n                          label=\"Password\"\r\n                          type={\r\n                            DialogeDataMobile.signupShowPassword\r\n                              ? \"text\"\r\n                              : \"password\"\r\n                          }\r\n                          onChange={DialogeDataMobile.updateSignvalues}\r\n                          name=\"inputedPassword\"\r\n                          value={\r\n                            DialogeDataMobile.rawSignupValuesinputedPassword\r\n                          }\r\n                          variant=\"standard\"\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                  onClick={\r\n                                    DialogeDataMobile.ShowSignupPasswordForaWhile\r\n                                  }\r\n                                  onMouseDown={\r\n                                    DialogeDataMobile.ShowSignupPasswordForaWhile\r\n                                  }\r\n                                  aria-label=\"toggle password visibility\"\r\n                                >\r\n                                  {DialogeDataMobile.signupShowPassword ? (\r\n                                    <VisibilityIcon />\r\n                                  ) : (\r\n                                    <VisibilityOffIcon />\r\n                                  )}\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                        <ModalFormSignupError\r\n                          device=\"mobile\"\r\n                          ErrorType={0}\r\n                          textField=\"password\"\r\n                          errorFormChecking={\r\n                            DialogeDataMobile.errorFormCheckinginputedPassword\r\n                          }\r\n                          darkmode={DialogeDataMobile.darkmode}\r\n                          WidthHolder={WidthHolder}\r\n                          type={false}\r\n                          cantPassBadEmail={DialogeDataMobile.cantPassBadEmail}\r\n                          ErrorDisplay={DialogeDataMobile.passwordErrorDisplay}\r\n                          ErrorData={DialogeDataMobile.passwordErrorData}\r\n                        />\r\n\r\n                        <Grid\r\n                          container\r\n                          style={{ marginTop: \"40px\", zIndex: 2 }}\r\n                          className=\"modal-hold-signup\"\r\n                        >\r\n                          <Grid item xs={4}></Grid>\r\n                          <Grid item className=\"buttonpad buttonshake\" xs={4}>\r\n                            <Button\r\n                              style={DialogeDataMobile.signupstyle}\r\n                              onClick={DialogeDataMobile.signmeup}\r\n                              fullWidth={true}\r\n                              variant=\"contained\"\r\n                              size=\"large\"\r\n                              color=\"secondary\"\r\n                            >\r\n                              Sign Up\r\n                            </Button>\r\n                          </Grid>{\" \"}\r\n                        </Grid>\r\n                      </Grid>\r\n                    )}\r\n                  </Grid>\r\n                </Paper>\r\n              </animated.div>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </animated.div>\r\n    </DialogContent>\r\n  );\r\n}\r\n\r\nexport const MobileModalLog = React.memo(MobileModalLogx);\r\n"]},"metadata":{},"sourceType":"module"}