{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\ShowReactions.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n///Axios.defaults.withCredentials = true;\nfunction ShowReactionsx({\n  i,\n  zoomedModal,\n  wideImage,\n  post,\n  AddRef,\n  length,\n  callObserver\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n  ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n  const {\n    image,\n    imageThumb,\n    id\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const imageReducer = image;\n  const imageReducerThumb = imageThumb;\n  const idReducer = id;\n  useEffect(() => {\n    if (i + 1 === length) {/////callObserver();\n    }\n  }, [i]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: () => {},\n      className: darkmodeReducer ? `turprofileDark image-gray-on-click ` : ` turprofileLight image-gray-on-click`,\n      style: {\n        zIndex: 2,\n        borderRadius: \"0%\",\n        cursor: \"pointer\",\n        position: \"relative\",\n        padding: \"0px\",\n        objectFit: \"contain\",\n        width: \"100%\",\n        display: \"block\",\n        height: \"auto\",\n        margin: \"auto\"\n      },\n      src: `${post.profile_image}`,\n      alt: \"Superstarz Billboard \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: darkmodeReducer ? \"turdark\" : \"turlight\",\n      style: {\n        alignContent: \"center\",\n        textAlign: \"center\",\n        position: \"relative\",\n        zIndex: 5,\n        left: \"-100%\",\n        padding: \"7px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\",\n        backgroundColor: darkmodeReducer ? \"rgba(51,51,51,0.66)\" : \"rgba(255,255,255,0.6) \",\n        borderRadius: \"50%\",\n        fontSize: \"0.92vw\",\n        color: darkmodeReducer ? \"#eeeeee\" : \"#111111 \"\n      },\n      children: post.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true)\n  /*MOBILE  MOBILE  MOBILE  MOBILE  SIGNUP MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\n  ;\n}\n\n_s(ShowReactionsx, \"XEF5Oc/XXLKJ6v5pj3/3WPhHTpk=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ShowReactionsx;\nexport const ShowReactions = /*#__PURE__*/React.memo(ShowReactionsx);\n_c2 = ShowReactions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShowReactionsx\");\n$RefreshReg$(_c2, \"ShowReactions\");","map":{"version":3,"sources":["C:/Users/oghen/Documents/ClikBate/super/src/profile/ShowReactions.tsx"],"names":["React","useEffect","useSelector","ShowReactionsx","i","zoomedModal","wideImage","post","AddRef","length","callObserver","darkmode","state","GlobalReducer","darkmodeReducer","image","imageThumb","id","UserdataReducer","imageReducer","imageReducerThumb","idReducer","zIndex","borderRadius","cursor","position","padding","objectFit","width","display","height","margin","profile_image","alignContent","textAlign","left","paddingLeft","paddingRight","backgroundColor","fontSize","color","username","ShowReactions","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAA+CC,SAA/C,QAAgE,OAAhE;AAWA,SAAyBC,WAAzB,QAAyD,aAAzD;;;;AAsBA;AAEA,SAASC,cAAT,CAAwB;AACtBC,EAAAA,CADsB;AAEtBC,EAAAA,WAFsB;AAGtBC,EAAAA,SAHsB;AAItBC,EAAAA,IAJsB;AAKtBC,EAAAA,MALsB;AAMtBC,EAAAA,MANsB;AAOtBC,EAAAA;AAPsB,CAAxB,EAQQ;AAAA;;AACN;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeT,WAAW,CAAEU,KAAD,KAAoC,EACnE,GAAGA,KAAK,CAACC;AAD0D,GAApC,CAAD,CAAhC;AAGA,QAAMC,eAAe,GAAGH,QAAxB,CAnBM,CAqBN;AACA;AACA;AACA;;AAQA,QAAM;AAAEI,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA;AAArB,MAA4Bf,WAAW,CAC1CU,KAAD,KAAmC,EACjC,GAAGA,KAAK,CAACM;AADwB,GAAnC,CAD2C,CAA7C;AAKA,QAAMC,YAAY,GAAGJ,KAArB;AACA,QAAMK,iBAAiB,GAAGJ,UAA1B;AACA,QAAMK,SAAS,GAAGJ,EAAlB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,CAAC,GAAG,CAAJ,KAAUK,MAAd,EAAsB,CACpB;AACD;AACF,GAJQ,EAIN,CAACL,CAAD,CAJM,CAAT;AAMA,sBACE;AAAA,4BACE;AACE,MAAA,OAAO,EAAE,MAAM,CAAE,CADnB;AAEE,MAAA,SAAS,EACPU,eAAe,GACV,qCADU,GAEV,sCALT;AAOE,MAAA,KAAK,EAAE;AACLQ,QAAAA,MAAM,EAAE,CADH;AAELC,QAAAA,YAAY,EAAE,IAFT;AAGLC,QAAAA,MAAM,EAAE,SAHH;AAILC,QAAAA,QAAQ,EAAE,UAJL;AAKLC,QAAAA,OAAO,EAAE,KALJ;AAMLC,QAAAA,SAAS,EAAE,SANN;AAOLC,QAAAA,KAAK,EAAE,MAPF;AAQLC,QAAAA,OAAO,EAAE,OARJ;AASLC,QAAAA,MAAM,EAAE,MATH;AAULC,QAAAA,MAAM,EAAE;AAVH,OAPT;AAmBE,MAAA,GAAG,EAAG,GAAExB,IAAI,CAACyB,aAAc,EAnB7B;AAoBE,MAAA,GAAG,EAAC;AApBN;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE;AACE,MAAA,SAAS,EAAElB,eAAe,GAAG,SAAH,GAAe,UAD3C;AAEE,MAAA,KAAK,EAAE;AACLmB,QAAAA,YAAY,EAAE,QADT;AAELC,QAAAA,SAAS,EAAE,QAFN;AAGLT,QAAAA,QAAQ,EAAE,UAHL;AAILH,QAAAA,MAAM,EAAE,CAJH;AAKLa,QAAAA,IAAI,EAAE,OALD;AAMLT,QAAAA,OAAO,EAAE,KANJ;AAOLU,QAAAA,WAAW,EAAE,MAPR;AAQLC,QAAAA,YAAY,EAAE,MART;AASLC,QAAAA,eAAe,EAAExB,eAAe,GAC5B,qBAD4B,GAE5B,wBAXC;AAYLS,QAAAA,YAAY,EAAE,KAZT;AAaLgB,QAAAA,QAAQ,EAAE,QAbL;AAcLC,QAAAA,KAAK,EAAE1B,eAAe,GAAG,SAAH,GAAe;AAdhC,OAFT;AAAA,gBAmBGP,IAAI,CAACkC;AAnBR;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AA6CA;AA9CF;AAgDD;;GAvGQtC,c;UAwBcD,W,EAgBaA,W;;;KAxC3BC,c;AAyGT,OAAO,MAAMuC,aAAa,gBAAG1C,KAAK,CAAC2C,IAAN,CAAWxC,cAAX,CAAtB;MAAMuC,a","sourcesContent":["import React, { useRef, useState, useCallback, useEffect } from \"react\";\r\nimport { Ispinnerinterface, IFormHolder } from \"../log/log-Interfaces\";\r\nimport Axios from \"axios\";\r\nimport SuperstarzIconLight from \"./../images/ssmall.png\";\r\nimport SuperstarzIconDark from \"./../images/sdsmall.png\";\r\nimport { TextFieldLogin } from \"../log/TextFieldLogin\";\r\nimport { TextFieldSignup } from \"../log/TextFieldSignup\";\r\nimport { ModalFormSignupError } from \"../log/ModalFormSignupError\";\r\nimport { ModalFormLoginError } from \"../log/ModalFormLoginError\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { IsLoggedAction } from \"../log/actions/IsLoggedAction\";\r\nimport { UserdataAction } from \"../log/actions/UserdataAction\";\r\nimport { ActivateLoaderAction, HideLoaderAction } from \"../GlobalActions\";\r\n//////import { useHistory } from \"react-router-dom\";\r\nimport { PasswordCheck } from \"../log/PasswordCheck\";\r\nimport { UpdateColorAction } from \"../GlobalActions\";\r\nimport { UserInfoUpdateAction } from \"../log/actions/UserdataAction\";\r\nimport KeyboardDoubleArrowRightIcon from \"@mui/icons-material/KeyboardDoubleArrowRight\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport ReplyAllIcon from \"@mui/icons-material/ReplyAll\";\r\nimport QuickreplyIcon from \"@mui/icons-material/Quickreply\";\r\nimport { ICommentTemplate, IGrid } from \"../log/log-Interfaces\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport CommentIcon from \"@mui/icons-material/Comment\";\r\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\r\nimport TextareaAutosize from \"@mui/base/TextareaAutosize\";\r\nimport { DialogContent } from \"@material-ui/core\";\r\nimport { animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\n\r\n///Axios.defaults.withCredentials = true;\r\n\r\nfunction ShowReactionsx({\r\n  i,\r\n  zoomedModal,\r\n  wideImage,\r\n  post,\r\n  AddRef,\r\n  length,\r\n  callObserver,\r\n}: any) {\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      image: string;\r\n      imageThumb: string;\r\n      id: number;\r\n    };\r\n  }\r\n  const { image, imageThumb, id } = useSelector(\r\n    (state: RootStateReducerImage) => ({\r\n      ...state.UserdataReducer,\r\n    })\r\n  );\r\n  const imageReducer = image;\r\n  const imageReducerThumb = imageThumb;\r\n  const idReducer = id;\r\n\r\n  useEffect(() => {\r\n    if (i + 1 === length) {\r\n      /////callObserver();\r\n    }\r\n  }, [i]);\r\n\r\n  return (\r\n    <>\r\n      <img\r\n        onClick={() => {}}\r\n        className={\r\n          darkmodeReducer\r\n            ? `turprofileDark image-gray-on-click `\r\n            : ` turprofileLight image-gray-on-click`\r\n        }\r\n        style={{\r\n          zIndex: 2,\r\n          borderRadius: \"0%\",\r\n          cursor: \"pointer\",\r\n          position: \"relative\",\r\n          padding: \"0px\",\r\n          objectFit: \"contain\",\r\n          width: \"100%\",\r\n          display: \"block\",\r\n          height: \"auto\",\r\n          margin: \"auto\",\r\n        }}\r\n        src={`${post.profile_image}`}\r\n        alt=\"Superstarz Billboard \"\r\n      />\r\n      <span\r\n        className={darkmodeReducer ? \"turdark\" : \"turlight\"}\r\n        style={{\r\n          alignContent: \"center\",\r\n          textAlign: \"center\",\r\n          position: \"relative\",\r\n          zIndex: 5,\r\n          left: \"-100%\",\r\n          padding: \"7px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"10px\",\r\n          backgroundColor: darkmodeReducer\r\n            ? \"rgba(51,51,51,0.66)\"\r\n            : \"rgba(255,255,255,0.6) \",\r\n          borderRadius: \"50%\",\r\n          fontSize: \"0.92vw\",\r\n          color: darkmodeReducer ? \"#eeeeee\" : \"#111111 \",\r\n        }}\r\n      >\r\n        {post.username}\r\n      </span>\r\n    </>\r\n    /*MOBILE  MOBILE  MOBILE  MOBILE  SIGNUP MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILEMOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE  MOBILE*/\r\n  );\r\n}\r\n\r\nexport const ShowReactions = React.memo(ShowReactionsx);\r\n"]},"metadata":{},"sourceType":"module"}