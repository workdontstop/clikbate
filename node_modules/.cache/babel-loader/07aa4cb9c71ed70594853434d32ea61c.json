{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\Clikbate\\\\src\\\\profile\\\\Profile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport { Post } from \"./Post\";\nimport { MiniPost } from \"./MiniPost\";\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ActualMenu } from \"./ActualMenu\";\nimport { Grid } from \"@material-ui/core\";\nimport Masonry from \"@mui/lab/Masonry\";\nimport { SnapToggleAction } from \".././GlobalActions\";\nimport { UpdateLoader } from \".././GlobalActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profilex({\n  OpenModalForm,\n  getSliderWidthRef,\n  getSliderWidth,\n  postData,\n  formtype,\n  showModalForm,\n  CloseModalForm,\n  aboutTemplateGo,\n  commentTemplateGo,\n  postDatainner,\n  postDatainnerThumb,\n  showProfiileData,\n  paperPostScrollRef,\n  setx,\n  x,\n  setDiscussionImage,\n  setCommentPostid,\n  miniLayoutPost,\n  setStopBodyScroll,\n  setSliderIndexMini,\n  zoomClickedIndex,\n  setzoomClickedIndex,\n  miniProfile,\n  setminiProfile,\n  sliderIndexMini,\n  setconnectTemplateGo,\n  settypeEmo,\n  ScrollTo,\n  setshowThisComponenet,\n  showThisComponenet,\n  setscrollLocation,\n  setShowLoader2,\n  ShowLoader2,\n  StopMini,\n  setStopMini,\n  postDatainnerInteraction1,\n  postDatainnerInteraction2,\n  clikplay,\n  callPagination,\n  setShowBigPlay,\n  setsuperSettings,\n  showModalFormMenu,\n  setshowModalFormMenu,\n  ShowBigPlay\n}) {\n  _s();\n  const [countAutoplay, setcountAutoplay] = useState(0);\n  const dispatch = useDispatch();\n  const postDivRef = useRef([]);\n  const postItemsRef = useRef([]);\n  const canvasRefIn = useRef(null);\n\n  ///\n\n  const [second, setsecond] = useState(0);\n  const [secondgo, setsecondgo] = useState(false);\n  const [itemheight, setitemheight] = useState([]);\n  const [itemheighthold, setitemheighthold] = useState([]);\n  const [itemcroptype, setitemcroptype] = useState([]);\n  const [itemFinalPostHeight, setitemFinalPostHeight] = useState([]);\n  const [itemInteractGo, setitemInteractGo] = useState([]);\n  const [activeAudio, setactiveAudio] = useState(0);\n  const lastItemElement = useRef();\n  const [showMoreIndicator, setshowMoreIndicator] = useState(false);\n  const [lastIndicatorPush, setlastIndicatorPush] = useState(false);\n  const [lastIndicatorPushH, setlastIndicatorPushH] = useState(37);\n  useEffect(() => {\n    if (clikplay) {\n      clearAllTimers();\n    }\n  }, [clikplay]);\n  useEffect(() => {\n    setshowThisComponenet(true);\n  }, []);\n  useEffect(() => {\n    if (showProfiileData) {\n      if (postData.length < 20) {} else {\n        setTimeout(() => {\n          // Initialize the observer in the effect\n          const observer = new IntersectionObserver(entries => {\n            const ent = entries[0];\n            if (ent.isIntersecting) {\n              if (sTimer.current) {\n                clearTimeout(sTimer.current);\n              }\n              if (sTimer2.current) {\n                clearTimeout(sTimer2.current);\n              }\n              if (sTimer3.current) {\n                clearTimeout(sTimer3.current);\n              }\n              sTimer.current = setTimeout(() => {\n                setshowMoreIndicator(true);\n                sTimer2.current = setTimeout(() => {\n                  dispatch(UpdateLoader(true));\n                  setshowThisComponenet(true);\n                  setminiProfile(false);\n                  callPagination();\n                }, 1400);\n              }, 200);\n            } else {\n              if (sTimer.current) {\n                clearTimeout(sTimer.current);\n              }\n              if (sTimer2.current) {\n                clearTimeout(sTimer2.current);\n              }\n              setshowMoreIndicator(false);\n              ///setmoreFeeds(false);\n            }\n          });\n          if (lastItemElement.current) {\n            observer.observe(lastItemElement.current);\n          }\n\n          // Cleanup function to disconnect the observer\n          return () => {\n            observer.disconnect();\n          };\n        }, 4500);\n      }\n    }\n  }, [lastItemElement, postData, showProfiileData]); // Re-run the effect when dependencies change\n\n  const [ActiveCanvas, setActiveCanvas] = useState(0);\n  const [ActiveCanvasx, setActiveCanvasx] = useState(0);\n  const [itemOriginalPostHeight, setitemOriginalPostHeight] = useState([]);\n  const [itemCLICKED, setitemCLICKED] = useState([]);\n  const [onLoadDataOnce, setonLoadDataOnce] = useState([]);\n  const [ActiveAutoPlay, setActiveAutoPlay] = useState([]);\n  var heightplus = matchPc ? 0.38 : matchTablet ? 0.3 : 0.265;\n  var postbackheighthold = document.documentElement.clientHeight * heightplus;\n  const [postbackheight] = useState(postbackheighthold);\n  const sTimer = useRef(null);\n  const sTimer2 = useRef(null);\n  const sTimer3 = useRef(null);\n  const scrollTypeTimer = useRef(null);\n\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    screenHeight,\n    darkmode,\n    activateLoader,\n    pagenum\n  } = useSelector(state => ({\n    ...state.GlobalReducer\n  }));\n  const screenHeightReducer = screenHeight;\n  const darkmodeReducer = darkmode;\n  const activateLoaderReducer = activateLoader;\n  const pagenumReducer = pagenum;\n\n  ///\n  ///\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\n  const addPostItemsRef = itemsRef => {\n    if (itemsRef && !postItemsRef.current.includes(itemsRef)) {\n      postItemsRef.current.push(itemsRef);\n    }\n    ////console.log(postItemsRef.current[1]);\n  };\n  const addpostDivRefRoll = divRef => {\n    if (divRef && !postDivRefRoll.current.includes(divRef)) {\n      postDivRefRoll.current.push(divRef);\n    }\n\n    ////console.log(postItemsRef.current[1]);\n  };\n\n  ///\n  ///\n  ///\n  ///CREATE div REFS FROM POSTS AND ADD THEM TO ARRAY\n  const addpostDivRef = divRef => {\n    if (divRef && !postDivRef.current.includes(divRef)) {\n      postDivRef.current.push(divRef);\n    }\n\n    ////console.log(postItemsRef.current[1]);\n  };\n  const addpostDivRefx = divRef => {\n    if (divRef && !postDivRefx.current.includes(divRef)) {\n      postDivRefx.current.push(divRef);\n    }\n\n    ////console.log(postItemsRef.current[1]);\n  };\n  useEffect(() => {\n    if (postData.length > 0 && showProfiileData) {\n      const initialItemheight = postData.map(obj => obj.itemheight);\n      setitemheight(initialItemheight);\n      const initialItemrealheighthold = postData.map(obj => obj.itemrealheighthold);\n      setitemheighthold(initialItemrealheighthold);\n      const initialtemcroptype = postData.map(obj => obj.itemcroptype);\n      setitemcroptype(initialtemcroptype);\n      const initialitemFinalPostHeight = postData.map(obj => obj.itemFinalPostHeight);\n      setitemFinalPostHeight(initialitemFinalPostHeight);\n      const itemInteractGo1xx = postData.map(obj => obj.itemInteractGo);\n      setitemInteractGo(itemInteractGo1xx);\n      const initialitemOriginalPostHeight = postData.map(obj => obj.itemOriginalPostHeight);\n      setitemOriginalPostHeight(initialitemOriginalPostHeight);\n      const initialitemCLICKED = postData.map(obj => obj.itemCLICKED);\n      setitemCLICKED(initialitemCLICKED);\n      const initialsetonLoadDataOnce = postData.map(obj => obj.onLoadDataOnce);\n      setonLoadDataOnce(initialsetonLoadDataOnce);\n      const initialsetActiveAutoPlay = postData.map(obj => obj.ActiveAutoPlay);\n      setActiveAutoPlay(initialsetActiveAutoPlay);\n    }\n  }, [postData, showProfiileData]);\n  const newArraa = [...itemheight];\n  const newArrxy = [...onLoadDataOnce];\n  const newArrayFinalPostHeight = [...itemFinalPostHeight];\n  const newArrxq = [...itemcroptype];\n  const newArrayitemOriginalPostHeight = [...itemOriginalPostHeight];\n  const newArrx = [...itemheighthold];\n  const newArr = [...itemheight];\n  function percentage(num, per) {\n    return num / 100 * per;\n  }\n  const navvScroll = () => {\n    /// alert(ScrollTo);\n    if (ScrollTo === 0) {} else {\n      ///alert(ScrollTo);\n      setTimeout(() => {\n        paperPostScrollRef.current.scrollTop = ScrollTo;\n      }, 30);\n    }\n  };\n  const onPostsItemload = useCallback((e, index, itemnum) => {\n    ///\n    if (ScrollTo === index) {\n      navvScroll();\n    }\n    if (itemnum === 0) {\n      if (postItemsRef.current[index]) {\n        var imageHeight = postItemsRef.current[index].clientHeight;\n\n        ///////////////////////////////\n\n        newArraa[index] = `${imageHeight}px`;\n        setitemheight(newArraa);\n        ///////////////////////////////\n\n        ///////////////////////////////\n\n        var newh = imageHeight / 1.042 - postbackheighthold;\n        newArrx[index] = `${newh}`;\n        setitemheighthold(newArrx);\n        ///////////////////////////////\n\n        newArrayFinalPostHeight[index] = imageHeight;\n        setitemFinalPostHeight(newArrayFinalPostHeight);\n\n        ///////////////////////////////\n\n        newArrayitemOriginalPostHeight[index] = imageHeight;\n        setitemOriginalPostHeight(newArrayitemOriginalPostHeight);\n        ///////////////////////////////\n\n        var choppedHeight = percentage(screenHeightReducer, 101);\n        var choppedwidth = percentage(screenHeightReducer, matchPc ? 55 : matchTablet ? 52 : 35);\n        if (imageHeight < choppedwidth) {\n          /////WIDE IMAGE SET\n\n          newArr[index] = `${choppedwidth}px`;\n          setitemheight(newArr);\n          ///////////////////////////////\n\n          var newh = choppedwidth / 1.015 - postbackheighthold;\n          newArrx[index] = `${newh}`;\n          setitemheighthold(newArrx);\n          ////////////////////////////\n          ///////////////////////////////\n\n          newArrxq[index] = 1;\n          setitemcroptype(newArrxq);\n\n          ////////////////////////////\n          ///////////////////////////////\n\n          newArrayFinalPostHeight[index] = choppedwidth;\n          setitemFinalPostHeight(newArrayFinalPostHeight);\n        } else if (imageHeight > choppedHeight) {\n          /////LONG IMAGE SET\n\n          newArr[index] = `${choppedHeight}px`;\n          setitemheight(newArr);\n          ///////////////////////////////\n\n          var newh = choppedHeight / 1 - postbackheighthold;\n          newArrx[index] = `${newh}`;\n          setitemheighthold(newArrx);\n          ////////////////////////////////\n          ///////////////////////////////\n\n          newArrxq[index] = 2;\n          setitemcroptype(newArrxq);\n          ///////////////////////////////\n\n          newArrayFinalPostHeight[index] = choppedHeight;\n          setitemFinalPostHeight(newArrayFinalPostHeight);\n          ///////////////////////////////\n        } else {\n          var imageWidth = postItemsRef.current[index].clientWidth;\n          if (imageWidth > imageHeight) {\n            ///////////////////////////////\n\n            var newh = imageHeight / 1.066 - postbackheighthold;\n            newArrx[index] = `${newh}`;\n            setitemheighthold(newArrx);\n            ///////////////////////////////\n            ///////////////////////////////\n\n            newArrxq[index] = 3;\n            setitemcroptype(newArrxq);\n\n            ///////////////////////////////\n          } else {\n            ///////////////////////////////\n\n            newArrxq[index] = 4;\n            setitemcroptype(newArrxq);\n            ///////////////////////////////\n          }\n        }\n        ///////////////////////////////\n\n        newArrxy[index] = true;\n        setonLoadDataOnce(newArrxy);\n        ///////////////////////////////\n\n        if (StopMini || pagenumReducer === 0) {} else {\n          if (postData[0].lim > 0 && index === 0) {\n            setTimeout(function () {\n              postDivRef.current[0].scrollIntoView({\n                behavior: \"smooth\",\n                block: \"start\"\n              });\n              postDivRefx.current[0].scrollIntoView({\n                behavior: \"smooth\",\n                block: \"start\"\n              });\n\n              ///////////\n            }, 1100);\n          }\n        }\n        if (postData.length - 1 === index) {\n          /**  if (activateLoaderReducer) {\r\n                          dispatch(UpdateLoader(false));\r\n                        } */\n\n          ////\n          navvScroll();\n          ///\n          ///\n\n          dispatch(UpdateLoader(true));\n          setTimeout(function () {\n            if (StopMini) {\n              setStopMini(false);\n            } else {\n              setminiProfile(true);\n            }\n            ///////////\n          }, 2000);\n          setTimeout(function () {\n            setlastIndicatorPushH(22 + 37);\n            setlastIndicatorPush(true);\n            setshowThisComponenet(false);\n            dispatch(UpdateLoader(false));\n            if (StopMini) {} else {\n              setTimeout(() => {\n                scrollToRef();\n              }, 3600);\n            }\n            ///////////\n          }, 4000);\n        }\n      }\n    }\n  }, [StopMini, screenHeightReducer, itemheight, itemheighthold, itemFinalPostHeight, showProfiileData, activateLoaderReducer, postItemsRef, postData, pagenumReducer]);\n  const scrollToPost = index => {\n    postDivRef.current[index].scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\"\n    });\n  };\n  const scrollToPostx = index => {\n    postDivRefx.current[index].scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\"\n    });\n  };\n  const postitemSHOWFULLHEIGHT = (index, type) => {\n    if (itemcroptype[index] === 1 || itemcroptype[index] === 2) {\n      if (type === 0) {\n        const newitemHeight = [...itemheight];\n        newitemHeight[index] = `auto`;\n        setitemheight(newitemHeight);\n      } else {\n        const newitemHeight = [...itemheight];\n        newitemHeight[index] = `${itemFinalPostHeight[index]}px`;\n        setitemheight(newitemHeight);\n      }\n    }\n  };\n  const scrollLongPicTimer = useRef(null);\n  const scrollLongPicTimerx = useRef(null);\n  const snapTimer = useRef(null);\n  const freesnap = () => {\n    dispatch(SnapToggleAction(false));\n    if (snapTimer.current) {\n      clearTimeout(snapTimer.current);\n    }\n    snapTimer.current = setTimeout(function () {\n      dispatch(SnapToggleAction(true));\n    }, matchMobile ? 6000 : 11000);\n  };\n  const AUTOSlideLongImages = index => {\n    ////freesnap();\n    if (itemcroptype[index] === 2) {\n      scrollLongPicTimerx.current = setTimeout(() => {\n        if (paperPostScrollRef.current) {\n          paperPostScrollRef.current.scrollTo({\n            top: paperPostScrollRef.current.scrollTop + itemOriginalPostHeight[index] / 3,\n            behavior: \"auto\"\n          });\n        }\n      }, 500);\n      scrollLongPicTimer.current = setTimeout(() => {\n        postDivRef.current[index].scrollIntoView({\n          behavior: \"smooth\",\n          block: \"start\"\n        });\n      }, 1300);\n    }\n  };\n  const onPostsItemClicked = useCallback(index => {\n    setindexRoll(index);\n    clearAllTimers();\n    setActiveCanvas(index);\n    if (itemCLICKED[index]) {\n      dispatch(SnapToggleAction(true));\n      if (snapTimer.current) {\n        clearTimeout(snapTimer.current);\n      }\n      snapTimer.current = setTimeout(function () {}, 3000);\n      const newclickArray = [...itemCLICKED];\n      newclickArray[index] = false;\n      setitemCLICKED(newclickArray);\n      postitemSHOWFULLHEIGHT(index, 1);\n      setTimeout(() => {\n        scrollToPost(index);\n      }, 2000);\n    } else {\n      dispatch(SnapToggleAction(false));\n      AUTOSlideLongImages(index);\n      if (scrollTypeTimer.current) {\n        clearTimeout(scrollTypeTimer.current);\n      }\n      const newclickArray = [...itemCLICKED];\n      newclickArray[index] = true;\n      setitemCLICKED(newclickArray);\n      postitemSHOWFULLHEIGHT(index, 0);\n      setTimeout(() => {\n        scrollToPost(index);\n      }, 2000);\n    }\n  }, [itemCLICKED]);\n\n  ///\n  ///\n  ///TYPES FOR ISLOGGEDIN\n\n  ///\n  ///LOGGED IN DATA FROM REDUX\n  const {\n    loggedIn\n  } = useSelector(state => ({\n    ...state.IsLoggedReducer\n  }));\n  const loggedInReducer = loggedIn;\n\n  ///\n  ///\n  ///MUI PAPER STYLES FROM REDUX\n  const {\n    PaperStyleLight,\n    PaperStyleDark\n  } = useSelector(state => ({\n    ...state.PaperReducerLightnDark\n  }));\n  var PaperStyleReducer = \"\";\n  if (darkmodeReducer) {\n    PaperStyleReducer = PaperStyleDark;\n  } else {\n    PaperStyleReducer = PaperStyleLight;\n  }\n\n  ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({\n    ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype;\n  var widthProfilePic = matchPc ? \"72%\" : matchTablet ? \"84%\" : \"44vw\";\n  var topProfilePic = matchPc ? \"-20vh\" : matchTablet ? \"-12vh\" : \"-8vh\";\n  var leftProfilePic = matchPc ? \"1vw\" : matchTablet ? \"3.5vw\" : \"2.7vw\";\n  var optionsClass = \"\";\n  var fontOptions = \"\";\n  if (matchPc) {\n    optionsClass = \"profile-optionsImagePc\";\n    fontOptions = \"2.7vw\";\n  } else if (matchTablet) {\n    optionsClass = \"profile-optionsImageTablet\";\n    fontOptions = \"5rem\";\n  } else {\n    optionsClass = \"profile-optionsImageMobile\";\n    fontOptions = \"1.9rem\";\n  }\n\n  ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n  const {\n    image\n  } = useSelector(state => ({\n    ...state.UserdataReducer\n  }));\n  const imageReducer = image;\n  const blank = () => {};\n  const [showModalUpload, setShowModalUpload] = useState(false);\n\n  ///\n  ///\n  ///\n  /// CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\n  const closeUploadModal = useCallback(backbutton => {\n    //pop states fires when back and forward buttons used\n    if (backbutton === 1) {\n      window.onpopstate = () => {\n        window.history.pushState(null, \"\", window.location.href);\n        window.onpopstate = null;\n        setShowModalUpload(false);\n      };\n    } else {\n      window.history.pushState(null, \"\", \".\");\n      window.onpopstate = null;\n      setShowModalUpload(false);\n    }\n  }, []);\n\n  ///\n  ///\n  ///\n  ///OPEN MODAL THEN CALL CLOSEMODAL FUNCTION WHICH WAITS FOR A POP EVENT(for closing modal)\n  const OpenUploadModal = useCallback(() => {\n    setShowModalUpload(!showModalUpload);\n    //pushstate add enteries to your history\n    window.history.pushState(null, \"\", \"Options\");\n    closeUploadModal(1);\n  }, [showModalUpload, closeUploadModal]);\n  useEffect(() => {\n    /// miniProfile ? setx(false) : setx(true);\n  }, [miniProfile]);\n  useEffect(() => {\n    setTimeout(function () {\n      dispatch(UpdateLoader(false));\n      if (showThisComponenet) setshowThisComponenet(false);\n    }, 7500);\n    setTimeout(function () {\n      if (ShowLoader2) {\n        setShowLoader2(false);\n      }\n    }, 1500);\n  }, [postData]);\n  const TopRef = useRef();\n  const [indexRoll, setindexRoll] = useState(0);\n  const postDivRefRoll = useRef([]);\n  const tyTimer = useRef([]);\n  const [AllowRoll, setAllowRoll] = useState(false);\n  const clearAllTimers = () => {\n    tyTimer.current.forEach(timer => {\n      if (timer !== null) {\n        clearTimeout(timer);\n      }\n    });\n    tyTimer.current = [];\n    setShowBigPlay(false);\n  };\n  const postDivRefx = useRef([]);\n  const scrollToRef = useCallback(() => {\n    setShowBigPlay(true);\n    var Limit = postData.length;\n    var Time = 0;\n    for (let i = 0; i <= Limit; i++) {\n      // <= 20 to include the reset to the first post\n      if (i > indexRoll) {\n        Time = Time + 7000;\n        setShowBigPlay(true);\n        tyTimer.current[i] = setTimeout(() => {\n          if (i === Limit) {\n            // Reset to the first post after reaching the last post\n            postDivRefx.current[Limit < 3 ? Limit - 1 : Limit - 3].scrollIntoView({\n              behavior: \"smooth\",\n              block: \"start\"\n            });\n            //\n            postDivRefRoll.current[Limit < 3 ? Limit - 1 : Limit - 3].scrollIntoView({\n              behavior: \"smooth\",\n              block: \"start\"\n            });\n            setShowBigPlay(false);\n          } else {\n            postDivRefx.current[i].scrollIntoView({\n              behavior: \"smooth\",\n              block: \"start\"\n            });\n            //\n            postDivRefRoll.current[i].scrollIntoView({\n              behavior: \"smooth\",\n              block: \"start\"\n            });\n          }\n        }, Time - 7000);\n      }\n    }\n  }, [AllowRoll, indexRoll, postData]);\n\n  /////////////////////////////////////////////////////////////\n\n  const [Added, setAdded] = useState(100);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"dontallowhighlighting\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          position: \"fixed\",\n          width: \"100%\",\n          padding: \"0px\",\n          height: \"0px\",\n          zIndex: 20000,\n          top: \"0px\",\n          cursor: \"pointer\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 9\n      }, this), showModalFormMenu ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          height: \"0px\",\n          zIndex: 500000000000,\n          position: 'fixed',\n          top: '0vh',\n          backgroundColor: '#00ccff'\n        },\n        children: /*#__PURE__*/_jsxDEV(ActualMenu, {\n          scrollToRef: scrollToRef,\n          setsuperSettings: setsuperSettings,\n          postData: postData,\n          showModalFormMenu: showModalFormMenu,\n          setshowModalFormMenu: setshowModalFormMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 30\n      }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n        ref: TopRef,\n        className: \"parent-containerEffect  effect\",\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\",\n          paddingLeft: miniProfile ? matchPc ? \"6vw\" : \"0vw\" : \"0vw\",\n          paddingRight: miniProfile ? matchPc ? \"6vw\" : \"0vw\" : \"0vw\",\n          height: \"auto\",\n          marginTop: matchMobile ? '3vh' : '5.5vh',\n          marginLeft: miniProfile && matchPc ? '5.5vw' : '0px'\n        },\n        children: postData.length > 0 ? /*#__PURE__*/_jsxDEV(Masonry, {\n          columns: matchPc ? 2 : miniProfile ? 2 : 1,\n          spacing: miniProfile && matchMobile ? 0 : miniProfile ? 16 : 0,\n          style: {\n            padding: \"0px\"\n          },\n          children: postData.map((post, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"relative\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: miniProfile ? \"block\" : \"none\",\n                marginTop: \"-5px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(MiniPost, {\n                setactiveAudio: setactiveAudio,\n                activeAudio: activeAudio,\n                ShowBigPlay: ShowBigPlay,\n                setAdded: setAdded,\n                Added: Added,\n                postDatainnerInteraction2: postDatainnerInteraction2,\n                postDatainnerInteraction1: postDatainnerInteraction1,\n                paperPostScrollRef: paperPostScrollRef,\n                setSliderIndexMini: setSliderIndexMini,\n                sliderIndexMini: sliderIndexMini,\n                zoomClickedIndex: zoomClickedIndex,\n                setzoomClickedIndex: setzoomClickedIndex,\n                miniProfile: miniProfile,\n                setminiProfile: setminiProfile,\n                setStopBodyScroll: setStopBodyScroll,\n                setx: setx,\n                ActiveCanvasx: ActiveCanvasx,\n                setActiveCanvasx: setActiveCanvasx,\n                miniLayoutPost: miniLayoutPost,\n                setCommentPostid: setCommentPostid,\n                postData: postData,\n                setDiscussionImage: setDiscussionImage,\n                OpenModalForm: OpenModalForm,\n                second: second,\n                setsecond: setsecond,\n                secondgo: secondgo,\n                setsecondgo: setsecondgo,\n                setcountAutoplay: setcountAutoplay,\n                countAutoplay: countAutoplay,\n                onLoadDataOnce: onLoadDataOnce,\n                pey: i,\n                addPostItemsRef: addPostItemsRef,\n                postDivRefx: postDivRefx,\n                onPostsItemload: onPostsItemload,\n                post: post,\n                itemheight: itemheight,\n                itemheighthold: itemheighthold,\n                postbackheight: postbackheight,\n                itemcroptype: itemcroptype,\n                length: postData.length,\n                itemFinalPostHeight: itemFinalPostHeight,\n                onPostsItemClicked: onPostsItemClicked,\n                itemCLICKED: itemCLICKED,\n                addpostDivRefx: addpostDivRefx,\n                postDatainner: postDatainner,\n                postDatainnerThumb: postDatainnerThumb,\n                itemOriginalPostHeight: itemOriginalPostHeight,\n                ActiveAutoPlay: ActiveAutoPlay,\n                setActiveAutoPlay: setActiveAutoPlay,\n                AUTOSlideLongImages: AUTOSlideLongImages,\n                scrollToPostx: scrollToPostx\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1028,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                style: {\n                  marginTop: \"20px\",\n                  height: matchMobile ? \"9vh\" : ' 0vh'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1081,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: miniProfile ? \"none\" : \"block\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Post, {\n                setactiveAudio: setactiveAudio,\n                activeAudio: activeAudio,\n                ShowBigPlay: ShowBigPlay,\n                setAdded: setAdded,\n                Added: Added,\n                addpostDivRefRoll: addpostDivRefRoll,\n                canvasRefIn: canvasRefIn,\n                ActiveCanvas: ActiveCanvas,\n                postItemsRef: postItemsRef,\n                postDatainnerInteraction2: postDatainnerInteraction2,\n                postDatainnerInteraction1: postDatainnerInteraction1,\n                setscrollLocation: setscrollLocation,\n                paperPostScrollRef: paperPostScrollRef,\n                settypeEmo: settypeEmo,\n                setconnectTemplateGo: setconnectTemplateGo,\n                sliderIndexMini: sliderIndexMini,\n                setsliderIndexMini: setSliderIndexMini,\n                zoomClickedIndex: zoomClickedIndex,\n                setzoomClickedIndex: setzoomClickedIndex,\n                miniProfile: miniProfile,\n                setminiProfile: setminiProfile,\n                setStopBodyScroll: setStopBodyScroll,\n                setx: setx,\n                miniLayoutPost: miniLayoutPost,\n                setCommentPostid: setCommentPostid,\n                postData: postData,\n                setDiscussionImage: setDiscussionImage,\n                OpenModalForm: OpenModalForm,\n                second: second,\n                setsecond: setsecond,\n                secondgo: secondgo,\n                setsecondgo: setsecondgo,\n                setcountAutoplay: setcountAutoplay,\n                countAutoplay: countAutoplay,\n                onLoadDataOnce: onLoadDataOnce,\n                pey: i,\n                addPostItemsRef: addPostItemsRef,\n                postDivRef: postDivRef,\n                onPostsItemload: onPostsItemload,\n                post: post,\n                itemheight: itemheight,\n                itemheighthold: itemheighthold,\n                postbackheight: postbackheight,\n                itemcroptype: itemcroptype,\n                length: postData.length,\n                itemFinalPostHeight: itemFinalPostHeight,\n                onPostsItemClicked: onPostsItemClicked,\n                itemCLICKED: itemCLICKED,\n                addpostDivRef: addpostDivRef,\n                postDatainner: postDatainner,\n                postDatainnerThumb: postDatainnerThumb,\n                itemOriginalPostHeight: itemOriginalPostHeight,\n                ActiveAutoPlay: ActiveAutoPlay,\n                setActiveAutoPlay: setActiveAutoPlay,\n                AUTOSlideLongImages: AUTOSlideLongImages,\n                scrollToPost: scrollToPost\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1092,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                style: {\n                  marginTop: \"0px\",\n                  height: \"0.5vh\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1149,\n                columnNumber: 24\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1091,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: \"animateColorAndPadding\",\n          xs: 8,\n          ref: lastItemElement,\n          style: {\n            visibility: showMoreIndicator ? 'visible' : 'hidden',\n            marginTop: lastIndicatorPush ? `${lastIndicatorPushH}vh` : \"37vh\",\n            height: \"7px\",\n            backgroundColor: 'blue'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 952,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Profilex, \"Q7jYqpxP0CZpbVj0V4JW3VzYgRo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Profilex;\nexport const Profile = /*#__PURE__*/React.memo(Profilex);\n_c2 = Profile;\nvar _c, _c2;\n$RefreshReg$(_c, \"Profilex\");\n$RefreshReg$(_c2, \"Profile\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","Post","MiniPost","matchPc","matchTablet","matchMobile","useSelector","useDispatch","ActualMenu","Grid","Masonry","SnapToggleAction","UpdateLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","Profilex","OpenModalForm","getSliderWidthRef","getSliderWidth","postData","formtype","showModalForm","CloseModalForm","aboutTemplateGo","commentTemplateGo","postDatainner","postDatainnerThumb","showProfiileData","paperPostScrollRef","setx","x","setDiscussionImage","setCommentPostid","miniLayoutPost","setStopBodyScroll","setSliderIndexMini","zoomClickedIndex","setzoomClickedIndex","miniProfile","setminiProfile","sliderIndexMini","setconnectTemplateGo","settypeEmo","ScrollTo","setshowThisComponenet","showThisComponenet","setscrollLocation","setShowLoader2","ShowLoader2","StopMini","setStopMini","postDatainnerInteraction1","postDatainnerInteraction2","clikplay","callPagination","setShowBigPlay","setsuperSettings","showModalFormMenu","setshowModalFormMenu","ShowBigPlay","_s","countAutoplay","setcountAutoplay","dispatch","postDivRef","postItemsRef","canvasRefIn","second","setsecond","secondgo","setsecondgo","itemheight","setitemheight","itemheighthold","setitemheighthold","itemcroptype","setitemcroptype","itemFinalPostHeight","setitemFinalPostHeight","itemInteractGo","setitemInteractGo","activeAudio","setactiveAudio","lastItemElement","showMoreIndicator","setshowMoreIndicator","lastIndicatorPush","setlastIndicatorPush","lastIndicatorPushH","setlastIndicatorPushH","clearAllTimers","length","setTimeout","observer","IntersectionObserver","entries","ent","isIntersecting","sTimer","current","clearTimeout","sTimer2","sTimer3","observe","disconnect","ActiveCanvas","setActiveCanvas","ActiveCanvasx","setActiveCanvasx","itemOriginalPostHeight","setitemOriginalPostHeight","itemCLICKED","setitemCLICKED","onLoadDataOnce","setonLoadDataOnce","ActiveAutoPlay","setActiveAutoPlay","heightplus","postbackheighthold","document","documentElement","clientHeight","postbackheight","scrollTypeTimer","screenHeight","darkmode","activateLoader","pagenum","state","GlobalReducer","screenHeightReducer","darkmodeReducer","activateLoaderReducer","pagenumReducer","addPostItemsRef","itemsRef","includes","push","addpostDivRefRoll","divRef","postDivRefRoll","addpostDivRef","addpostDivRefx","postDivRefx","initialItemheight","map","obj","initialItemrealheighthold","itemrealheighthold","initialtemcroptype","initialitemFinalPostHeight","itemInteractGo1xx","initialitemOriginalPostHeight","initialitemCLICKED","initialsetonLoadDataOnce","initialsetActiveAutoPlay","newArraa","newArrxy","newArrayFinalPostHeight","newArrxq","newArrayitemOriginalPostHeight","newArrx","newArr","percentage","num","per","navvScroll","scrollTop","onPostsItemload","e","index","itemnum","imageHeight","newh","choppedHeight","choppedwidth","imageWidth","clientWidth","lim","scrollIntoView","behavior","block","scrollToRef","scrollToPost","scrollToPostx","postitemSHOWFULLHEIGHT","type","newitemHeight","scrollLongPicTimer","scrollLongPicTimerx","snapTimer","freesnap","AUTOSlideLongImages","scrollTo","top","onPostsItemClicked","setindexRoll","newclickArray","loggedIn","IsLoggedReducer","loggedInReducer","PaperStyleLight","PaperStyleDark","PaperReducerLightnDark","PaperStyleReducer","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","widthProfilePic","topProfilePic","leftProfilePic","optionsClass","fontOptions","image","UserdataReducer","imageReducer","blank","showModalUpload","setShowModalUpload","closeUploadModal","backbutton","window","onpopstate","history","pushState","location","href","OpenUploadModal","TopRef","indexRoll","tyTimer","AllowRoll","setAllowRoll","forEach","timer","Limit","Time","i","Added","setAdded","children","container","className","item","xs","style","position","width","padding","height","zIndex","cursor","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","ref","paddingLeft","paddingRight","marginTop","marginLeft","columns","spacing","post","display","pey","setsliderIndexMini","visibility","_c","Profile","memo","_c2","$RefreshReg$"],"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/Clikbate/src/profile/Profile.tsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport { Menu } from \"./Menu\";\r\nimport { Billboard } from \"./Billboard\";\r\nimport { Post } from \"./Post\";\r\nimport { MiniPost } from \"./MiniPost\";\r\nimport { OptionsSlider } from \"./OptionsSlider\";\r\nimport $ from \"jquery\";\r\n\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { ActualMenu } from \"./ActualMenu\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  createTheme,\r\n  MuiThemeProvider,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport ImagePhotoSizeSelectSmall from \"material-ui/svg-icons/image/photo-size-select-small\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { Upload } from \"../upload/Upload\";\r\nimport { SnapToggleAction } from \".././GlobalActions\";\r\nimport { UpdateLoader } from \".././GlobalActions\";\r\n\r\nfunction Profilex({\r\n  OpenModalForm,\r\n  getSliderWidthRef,\r\n  getSliderWidth,\r\n  postData,\r\n  formtype,\r\n  showModalForm,\r\n  CloseModalForm,\r\n  aboutTemplateGo,\r\n  commentTemplateGo,\r\n  postDatainner,\r\n  postDatainnerThumb,\r\n  showProfiileData,\r\n  paperPostScrollRef,\r\n  setx,\r\n  x,\r\n  setDiscussionImage,\r\n  setCommentPostid,\r\n  miniLayoutPost,\r\n  setStopBodyScroll,\r\n  setSliderIndexMini,\r\n  zoomClickedIndex,\r\n  setzoomClickedIndex,\r\n  miniProfile,\r\n  setminiProfile,\r\n  sliderIndexMini,\r\n  setconnectTemplateGo,\r\n  settypeEmo,\r\n  ScrollTo,\r\n  setshowThisComponenet,\r\n  showThisComponenet,\r\n  setscrollLocation,\r\n  setShowLoader2,\r\n  ShowLoader2,\r\n  StopMini,\r\n  setStopMini,\r\n  postDatainnerInteraction1,\r\n  postDatainnerInteraction2,\r\n  clikplay,\r\n  callPagination,\r\n  setShowBigPlay,\r\n  setsuperSettings,\r\n  showModalFormMenu,\r\n  setshowModalFormMenu,\r\n  ShowBigPlay\r\n}: any) {\r\n  const [countAutoplay, setcountAutoplay] = useState<number>(0);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const postDivRef = useRef<any[]>([]);\r\n\r\n  const postItemsRef = useRef<any>([]);\r\n\r\n\r\n\r\n\r\n  const canvasRefIn: any = useRef(null);\r\n\r\n  ///\r\n\r\n  const [second, setsecond] = useState<any>(0);\r\n  const [secondgo, setsecondgo] = useState<boolean>(false);\r\n\r\n  const [itemheight, setitemheight] = useState<Array<string>>([]);\r\n  const [itemheighthold, setitemheighthold] = useState<Array<string>>([]);\r\n  const [itemcroptype, setitemcroptype] = useState<Array<number>>([]);\r\n  const [itemFinalPostHeight, setitemFinalPostHeight] = useState<Array<number>>(\r\n    []\r\n  );\r\n\r\n  const [itemInteractGo, setitemInteractGo] = useState<Array<boolean>>(\r\n    []\r\n  );\r\n\r\n\r\n  const [activeAudio, setactiveAudio] = useState(0);\r\n\r\n  const lastItemElement = useRef<any>();\r\n\r\n\r\n\r\n\r\n\r\n  const [showMoreIndicator, setshowMoreIndicator] = useState(false);\r\n\r\n  const [lastIndicatorPush, setlastIndicatorPush] = useState(false);\r\n\r\n  const [lastIndicatorPushH, setlastIndicatorPushH] = useState(37);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (clikplay) {\r\n      clearAllTimers();\r\n    }\r\n\r\n\r\n  }, [clikplay])\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    setshowThisComponenet(true);\r\n\r\n  }, [])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (showProfiileData) {\r\n      if (postData.length < 20) { } else {\r\n        setTimeout(() => {\r\n\r\n          // Initialize the observer in the effect\r\n          const observer = new IntersectionObserver((entries: any) => {\r\n            const ent = entries[0];\r\n            if (ent.isIntersecting) {\r\n\r\n              if (sTimer.current) {\r\n                clearTimeout(sTimer.current);\r\n              }\r\n\r\n              if (sTimer2.current) {\r\n                clearTimeout(sTimer2.current);\r\n              }\r\n\r\n              if (sTimer3.current) {\r\n                clearTimeout(sTimer3.current);\r\n              }\r\n\r\n              sTimer.current = setTimeout(() => {\r\n                setshowMoreIndicator(true)\r\n\r\n                sTimer2.current = setTimeout(() => {\r\n\r\n                  dispatch(UpdateLoader(true));\r\n                  setshowThisComponenet(true);\r\n                  setminiProfile(false);\r\n                  callPagination();\r\n\r\n\r\n\r\n\r\n\r\n\r\n                }, 1400)\r\n\r\n\r\n              }, 200)\r\n\r\n\r\n            } else {\r\n              if (sTimer.current) {\r\n                clearTimeout(sTimer.current);\r\n              }\r\n\r\n              if (sTimer2.current) {\r\n                clearTimeout(sTimer2.current);\r\n              }\r\n\r\n\r\n              setshowMoreIndicator(false)\r\n              ///setmoreFeeds(false);\r\n            }\r\n          });\r\n\r\n          if (lastItemElement.current) {\r\n            observer.observe(lastItemElement.current);\r\n          }\r\n\r\n          // Cleanup function to disconnect the observer\r\n          return () => {\r\n            observer.disconnect();\r\n          };\r\n        }, 4500)\r\n      }\r\n    }\r\n\r\n\r\n  }, [lastItemElement, postData, showProfiileData]); // Re-run the effect when dependencies change\r\n\r\n\r\n\r\n  const [ActiveCanvas, setActiveCanvas] = useState(0);\r\n\r\n  const [ActiveCanvasx, setActiveCanvasx] = useState(0);\r\n\r\n  const [itemOriginalPostHeight, setitemOriginalPostHeight] = useState<\r\n    Array<number>\r\n  >([]);\r\n\r\n  const [itemCLICKED, setitemCLICKED] = useState<Array<boolean>>([]);\r\n  const [onLoadDataOnce, setonLoadDataOnce] = useState<Array<boolean>>([]);\r\n\r\n  const [ActiveAutoPlay, setActiveAutoPlay] = useState<Array<boolean>>([]);\r\n\r\n  var heightplus = matchPc ? 0.38 : matchTablet ? 0.3 : 0.265;\r\n  var postbackheighthold = document.documentElement.clientHeight * heightplus;\r\n\r\n  const [postbackheight] = useState<number>(postbackheighthold);\r\n\r\n  const sTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const sTimer2 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const sTimer3 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n\r\n  const scrollTypeTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n\r\n\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n      activateLoader: boolean;\r\n      pagenum: number\r\n\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const { screenHeight, darkmode, activateLoader, pagenum } = useSelector(\r\n    (state: RootStateGlobalReducer) => ({\r\n      ...state.GlobalReducer,\r\n    })\r\n  );\r\n  const screenHeightReducer = screenHeight;\r\n  const darkmodeReducer = darkmode;\r\n  const activateLoaderReducer = activateLoader;\r\n  const pagenumReducer = pagenum;\r\n\r\n\r\n  ///\r\n  ///\r\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\r\n  const addPostItemsRef = (itemsRef: any) => {\r\n    if (itemsRef && !postItemsRef.current.includes(itemsRef)) {\r\n      postItemsRef.current.push(itemsRef);\r\n    }\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n\r\n  const addpostDivRefRoll = (divRef: any) => {\r\n    if (divRef && !postDivRefRoll.current.includes(divRef)) {\r\n      postDivRefRoll.current.push(divRef);\r\n    }\r\n\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE div REFS FROM POSTS AND ADD THEM TO ARRAY\r\n  const addpostDivRef = (divRef: any) => {\r\n    if (divRef && !postDivRef.current.includes(divRef)) {\r\n      postDivRef.current.push(divRef);\r\n    }\r\n\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  const addpostDivRefx = (divRef: any) => {\r\n    if (divRef && !postDivRefx.current.includes(divRef)) {\r\n      postDivRefx.current.push(divRef);\r\n    }\r\n\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (postData.length > 0 && showProfiileData) {\r\n      const initialItemheight = postData.map((obj: any) => obj.itemheight);\r\n      setitemheight(initialItemheight);\r\n\r\n      const initialItemrealheighthold = postData.map(\r\n        (obj: any) => obj.itemrealheighthold\r\n      );\r\n      setitemheighthold(initialItemrealheighthold);\r\n\r\n      const initialtemcroptype = postData.map((obj: any) => obj.itemcroptype);\r\n      setitemcroptype(initialtemcroptype);\r\n\r\n      const initialitemFinalPostHeight = postData.map(\r\n        (obj: any) => obj.itemFinalPostHeight\r\n      );\r\n      setitemFinalPostHeight(initialitemFinalPostHeight);\r\n\r\n\r\n      const itemInteractGo1xx = postData.map(\r\n        (obj: any) => obj.itemInteractGo\r\n      );\r\n      setitemInteractGo(itemInteractGo1xx);\r\n\r\n\r\n\r\n      const initialitemOriginalPostHeight = postData.map(\r\n        (obj: any) => obj.itemOriginalPostHeight\r\n      );\r\n      setitemOriginalPostHeight(initialitemOriginalPostHeight);\r\n\r\n      const initialitemCLICKED = postData.map((obj: any) => obj.itemCLICKED);\r\n      setitemCLICKED(initialitemCLICKED);\r\n\r\n      const initialsetonLoadDataOnce = postData.map(\r\n        (obj: any) => obj.onLoadDataOnce\r\n      );\r\n      setonLoadDataOnce(initialsetonLoadDataOnce);\r\n\r\n      const initialsetActiveAutoPlay = postData.map(\r\n        (obj: any) => obj.ActiveAutoPlay\r\n      );\r\n      setActiveAutoPlay(initialsetActiveAutoPlay);\r\n    }\r\n  }, [postData, showProfiileData]);\r\n\r\n  const newArraa = [...itemheight];\r\n\r\n  const newArrxy = [...onLoadDataOnce];\r\n  const newArrayFinalPostHeight = [...itemFinalPostHeight];\r\n  const newArrxq = [...itemcroptype];\r\n\r\n  const newArrayitemOriginalPostHeight = [...itemOriginalPostHeight];\r\n\r\n  const newArrx = [...itemheighthold];\r\n\r\n  const newArr = [...itemheight];\r\n\r\n  function percentage(num: number, per: number) {\r\n    return (num / 100) * per;\r\n  }\r\n\r\n  const navvScroll = () => {\r\n    /// alert(ScrollTo);\r\n    if (ScrollTo === 0) {\r\n    } else {\r\n      ///alert(ScrollTo);\r\n      setTimeout(() => {\r\n        paperPostScrollRef.current.scrollTop = ScrollTo;\r\n      }, 30);\r\n    }\r\n\r\n  };\r\n\r\n  const onPostsItemload = useCallback(\r\n    (e: any, index: number, itemnum: number) => {\r\n      ///\r\n      if (ScrollTo === index) {\r\n        navvScroll();\r\n      }\r\n      if (itemnum === 0) {\r\n        if (postItemsRef.current[index]) {\r\n          var imageHeight = postItemsRef.current[index].clientHeight;\r\n\r\n          ///////////////////////////////\r\n\r\n          newArraa[index] = `${imageHeight}px`;\r\n          setitemheight(newArraa);\r\n          ///////////////////////////////\r\n\r\n          ///////////////////////////////\r\n\r\n          var newh = imageHeight / 1.042 - postbackheighthold;\r\n          newArrx[index] = `${newh}`;\r\n          setitemheighthold(newArrx);\r\n          ///////////////////////////////\r\n\r\n          newArrayFinalPostHeight[index] = imageHeight;\r\n          setitemFinalPostHeight(newArrayFinalPostHeight);\r\n\r\n          ///////////////////////////////\r\n\r\n          newArrayitemOriginalPostHeight[index] = imageHeight;\r\n          setitemOriginalPostHeight(newArrayitemOriginalPostHeight);\r\n          ///////////////////////////////\r\n\r\n          var choppedHeight = percentage(screenHeightReducer, 101);\r\n\r\n          var choppedwidth = percentage(\r\n            screenHeightReducer,\r\n            matchPc ? 55 : matchTablet ? 52 : 35\r\n          );\r\n\r\n          if (imageHeight < choppedwidth) {\r\n            /////WIDE IMAGE SET\r\n\r\n            newArr[index] = `${choppedwidth}px`;\r\n            setitemheight(newArr);\r\n            ///////////////////////////////\r\n\r\n            var newh = choppedwidth / 1.015 - postbackheighthold;\r\n            newArrx[index] = `${newh}`;\r\n            setitemheighthold(newArrx);\r\n            ////////////////////////////\r\n            ///////////////////////////////\r\n\r\n            newArrxq[index] = 1;\r\n            setitemcroptype(newArrxq);\r\n\r\n\r\n            ////////////////////////////\r\n            ///////////////////////////////\r\n\r\n            newArrayFinalPostHeight[index] = choppedwidth;\r\n            setitemFinalPostHeight(newArrayFinalPostHeight);\r\n          } else if (imageHeight > choppedHeight) {\r\n            /////LONG IMAGE SET\r\n\r\n            newArr[index] = `${choppedHeight}px`;\r\n            setitemheight(newArr);\r\n            ///////////////////////////////\r\n\r\n            var newh = choppedHeight / 1 - postbackheighthold;\r\n            newArrx[index] = `${newh}`;\r\n            setitemheighthold(newArrx);\r\n            ////////////////////////////////\r\n            ///////////////////////////////\r\n\r\n            newArrxq[index] = 2;\r\n            setitemcroptype(newArrxq);\r\n            ///////////////////////////////\r\n\r\n            newArrayFinalPostHeight[index] = choppedHeight;\r\n            setitemFinalPostHeight(newArrayFinalPostHeight);\r\n            ///////////////////////////////\r\n          } else {\r\n            var imageWidth = postItemsRef.current[index].clientWidth;\r\n            if (imageWidth > imageHeight) {\r\n              ///////////////////////////////\r\n\r\n              var newh = imageHeight / 1.066 - postbackheighthold;\r\n              newArrx[index] = `${newh}`;\r\n              setitemheighthold(newArrx);\r\n              ///////////////////////////////\r\n              ///////////////////////////////\r\n\r\n              newArrxq[index] = 3;\r\n              setitemcroptype(newArrxq);\r\n\r\n\r\n              ///////////////////////////////\r\n            } else {\r\n              ///////////////////////////////\r\n\r\n              newArrxq[index] = 4;\r\n              setitemcroptype(newArrxq);\r\n              ///////////////////////////////\r\n            }\r\n          }\r\n          ///////////////////////////////\r\n\r\n          newArrxy[index] = true;\r\n          setonLoadDataOnce(newArrxy);\r\n          ///////////////////////////////\r\n\r\n\r\n\r\n          if (StopMini || pagenumReducer === 0) { } else {\r\n            if (postData[0].lim > 0 && index === 0) {\r\n              setTimeout(function () {\r\n\r\n\r\n                postDivRef.current[0].scrollIntoView({\r\n                  behavior: \"smooth\",\r\n                  block: \"start\",\r\n                });\r\n                postDivRefx.current[0].scrollIntoView({\r\n                  behavior: \"smooth\",\r\n                  block: \"start\",\r\n                });\r\n\r\n\r\n\r\n                ///////////\r\n              }, 1100);\r\n            }\r\n          }\r\n\r\n\r\n          if (postData.length - 1 === index) {\r\n\r\n\r\n\r\n\r\n\r\n            /**  if (activateLoaderReducer) {\r\n                            dispatch(UpdateLoader(false));\r\n                          } */\r\n\r\n            ////\r\n            navvScroll();\r\n            ///\r\n            ///\r\n\r\n            dispatch(UpdateLoader(true));\r\n            setTimeout(function () {\r\n\r\n              if (StopMini) {\r\n                setStopMini(false)\r\n              } else {\r\n                setminiProfile(true);\r\n              }\r\n              ///////////\r\n            }, 2000);\r\n\r\n\r\n            setTimeout(function () {\r\n\r\n              setlastIndicatorPushH(22 + 37);\r\n              setlastIndicatorPush(true);\r\n\r\n\r\n              setshowThisComponenet(false);\r\n              dispatch(UpdateLoader(false));\r\n\r\n              if (StopMini) {\r\n\r\n              } else {\r\n\r\n                setTimeout(() => {\r\n                  scrollToRef();\r\n\r\n                }, 3600)\r\n\r\n              }\r\n              ///////////\r\n            }, 4000);\r\n\r\n\r\n\r\n\r\n\r\n          }\r\n        }\r\n\r\n      }\r\n    },\r\n    [StopMini,\r\n      screenHeightReducer,\r\n      itemheight,\r\n      itemheighthold,\r\n      itemFinalPostHeight,\r\n      showProfiileData,\r\n      activateLoaderReducer,\r\n      postItemsRef,\r\n      postData,\r\n      pagenumReducer\r\n    ]\r\n  );\r\n\r\n  const scrollToPost = (index: any) => {\r\n    postDivRef.current[index].scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\",\r\n    });\r\n  };\r\n\r\n  const scrollToPostx = (index: any) => {\r\n    postDivRefx.current[index].scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\",\r\n    });\r\n  };\r\n\r\n  const postitemSHOWFULLHEIGHT = (index: any, type: number) => {\r\n    if (itemcroptype[index] === 1 || itemcroptype[index] === 2) {\r\n      if (type === 0) {\r\n        const newitemHeight = [...itemheight];\r\n        newitemHeight[index] = `auto`;\r\n        setitemheight(newitemHeight);\r\n      } else {\r\n        const newitemHeight = [...itemheight];\r\n        newitemHeight[index] = `${itemFinalPostHeight[index]}px`;\r\n        setitemheight(newitemHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  const scrollLongPicTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const scrollLongPicTimerx = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const snapTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const freesnap = () => {\r\n    dispatch(SnapToggleAction(false));\r\n    if (snapTimer.current) {\r\n      clearTimeout(snapTimer.current);\r\n    }\r\n    snapTimer.current = setTimeout(\r\n      function () {\r\n        dispatch(SnapToggleAction(true));\r\n      },\r\n      matchMobile ? 6000 : 11000\r\n    );\r\n  };\r\n\r\n  const AUTOSlideLongImages = (index: number) => {\r\n    ////freesnap();\r\n    if (itemcroptype[index] === 2) {\r\n      scrollLongPicTimerx.current = setTimeout(() => {\r\n        if (paperPostScrollRef.current) {\r\n          paperPostScrollRef.current.scrollTo({\r\n            top:\r\n              paperPostScrollRef.current.scrollTop +\r\n              itemOriginalPostHeight[index] / 3,\r\n            behavior: \"auto\",\r\n          });\r\n        }\r\n      }, 500);\r\n      scrollLongPicTimer.current = setTimeout(() => {\r\n        postDivRef.current[index].scrollIntoView({\r\n          behavior: \"smooth\",\r\n          block: \"start\",\r\n        });\r\n      }, 1300);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const onPostsItemClicked = useCallback((index: number) => {\r\n\r\n    setindexRoll(index);\r\n\r\n    clearAllTimers();\r\n\r\n    setActiveCanvas(index);\r\n\r\n    if (itemCLICKED[index]) {\r\n\r\n\r\n\r\n      dispatch(SnapToggleAction(true));\r\n\r\n\r\n      if (snapTimer.current) {\r\n        clearTimeout(snapTimer.current);\r\n      }\r\n      snapTimer.current = setTimeout(function () { }, 3000);\r\n\r\n\r\n\r\n      const newclickArray = [...itemCLICKED];\r\n      newclickArray[index] = false;\r\n      setitemCLICKED(newclickArray);\r\n      postitemSHOWFULLHEIGHT(index, 1);\r\n      setTimeout(() => { scrollToPost(index); }, 2000)\r\n    } else {\r\n\r\n\r\n\r\n      dispatch(SnapToggleAction(false));\r\n\r\n\r\n\r\n      AUTOSlideLongImages(index);\r\n      if (scrollTypeTimer.current) {\r\n        clearTimeout(scrollTypeTimer.current);\r\n      }\r\n\r\n      const newclickArray = [...itemCLICKED];\r\n      newclickArray[index] = true;\r\n      setitemCLICKED(newclickArray);\r\n      postitemSHOWFULLHEIGHT(index, 0);\r\n      setTimeout(() => { scrollToPost(index); }, 2000)\r\n\r\n    }\r\n\r\n\r\n  }, [itemCLICKED]\r\n  );\r\n\r\n\r\n\r\n  ///\r\n  ///\r\n  ///TYPES FOR ISLOGGEDIN\r\n  interface RootStateIsLogged {\r\n    IsLoggedReducer: {\r\n      loggedIn: boolean;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///LOGGED IN DATA FROM REDUX\r\n  const { loggedIn } = useSelector((state: RootStateIsLogged) => ({\r\n    ...state.IsLoggedReducer,\r\n  }));\r\n  const loggedInReducer = loggedIn;\r\n\r\n  ///\r\n  ///\r\n  ///MUI PAPER STYLES FROM REDUX\r\n  const { PaperStyleLight, PaperStyleDark } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.PaperReducerLightnDark,\r\n    })\r\n  );\r\n  var PaperStyleReducer = \"\";\r\n\r\n  if (darkmodeReducer) {\r\n    PaperStyleReducer = PaperStyleDark;\r\n  } else {\r\n    PaperStyleReducer = PaperStyleLight;\r\n  }\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  var widthProfilePic = matchPc ? \"72%\" : matchTablet ? \"84%\" : \"44vw\";\r\n  var topProfilePic = matchPc ? \"-20vh\" : matchTablet ? \"-12vh\" : \"-8vh\";\r\n  var leftProfilePic = matchPc ? \"1vw\" : matchTablet ? \"3.5vw\" : \"2.7vw\";\r\n\r\n  var optionsClass = \"\";\r\n  var fontOptions = \"\";\r\n\r\n  if (matchPc) {\r\n    optionsClass = \"profile-optionsImagePc\";\r\n    fontOptions = \"2.7vw\";\r\n  } else if (matchTablet) {\r\n    optionsClass = \"profile-optionsImageTablet\";\r\n    fontOptions = \"5rem\";\r\n  } else {\r\n    optionsClass = \"profile-optionsImageMobile\";\r\n    fontOptions = \"1.9rem\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      image: string;\r\n    };\r\n  }\r\n  const { image } = useSelector((state: RootStateReducerImage) => ({\r\n    ...state.UserdataReducer,\r\n  }));\r\n  const imageReducer = image;\r\n\r\n  const blank = () => { };\r\n\r\n  const [showModalUpload, setShowModalUpload] = useState<boolean>(false);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\r\n  const closeUploadModal = useCallback((backbutton: number) => {\r\n    //pop states fires when back and forward buttons used\r\n    if (backbutton === 1) {\r\n      window.onpopstate = () => {\r\n        window.history.pushState(null, \"\", window.location.href);\r\n        window.onpopstate = null;\r\n        setShowModalUpload(false);\r\n      };\r\n    } else {\r\n      window.history.pushState(null, \"\", \".\");\r\n      window.onpopstate = null;\r\n      setShowModalUpload(false);\r\n    }\r\n  }, []);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///OPEN MODAL THEN CALL CLOSEMODAL FUNCTION WHICH WAITS FOR A POP EVENT(for closing modal)\r\n  const OpenUploadModal = useCallback(() => {\r\n    setShowModalUpload(!showModalUpload);\r\n    //pushstate add enteries to your history\r\n    window.history.pushState(null, \"\", \"Options\");\r\n    closeUploadModal(1);\r\n  }, [showModalUpload, closeUploadModal]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    /// miniProfile ? setx(false) : setx(true);\r\n  }, [miniProfile]);\r\n\r\n  useEffect(() => {\r\n\r\n\r\n    setTimeout(function () {\r\n      dispatch(UpdateLoader(false));\r\n      if (showThisComponenet) setshowThisComponenet(false);\r\n    }, 7500);\r\n\r\n    setTimeout(function () {\r\n      if (ShowLoader2) {\r\n        setShowLoader2(false);\r\n      }\r\n    }, 1500);\r\n\r\n\r\n\r\n  }, [postData]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const TopRef = useRef<any>();\r\n\r\n\r\n\r\n  const [indexRoll, setindexRoll] = useState(0);\r\n\r\n  const postDivRefRoll = useRef<any[]>([]);\r\n\r\n\r\n\r\n  const tyTimer = useRef<ReturnType<typeof setTimeout>[]>([]);\r\n\r\n  const [AllowRoll, setAllowRoll] = useState(false);\r\n\r\n  const clearAllTimers = () => {\r\n    tyTimer.current.forEach(timer => {\r\n      if (timer !== null) {\r\n        clearTimeout(timer);\r\n      }\r\n    });\r\n    tyTimer.current = [];\r\n    setShowBigPlay(false);\r\n  }\r\n\r\n\r\n  const postDivRefx = useRef<any>([]);\r\n\r\n\r\n\r\n  const scrollToRef = useCallback(() => {\r\n    setShowBigPlay(true);\r\n    var Limit: number = postData.length;\r\n\r\n    var Time = 0;\r\n\r\n    for (let i = 0; i <= Limit; i++) {  // <= 20 to include the reset to the first post\r\n      if (i > indexRoll) {\r\n        Time = Time + 7000;\r\n        setShowBigPlay(true);\r\n\r\n        tyTimer.current[i] = setTimeout(() => {\r\n\r\n          if (i === Limit) {\r\n            // Reset to the first post after reaching the last post\r\n            postDivRefx.current[Limit < 3 ? Limit - 1 : Limit - 3].scrollIntoView({\r\n              behavior: \"smooth\",\r\n              block: \"start\",\r\n            });\r\n            //\r\n            postDivRefRoll.current[Limit < 3 ? Limit - 1 : Limit - 3].scrollIntoView({\r\n              behavior: \"smooth\",\r\n              block: \"start\",\r\n            });\r\n            setShowBigPlay(false);\r\n          } else {\r\n\r\n\r\n            postDivRefx.current[i].scrollIntoView({\r\n              behavior: \"smooth\",\r\n              block: \"start\",\r\n            });\r\n            //\r\n            postDivRefRoll.current[i].scrollIntoView({\r\n              behavior: \"smooth\",\r\n              block: \"start\",\r\n            });\r\n          }\r\n\r\n\r\n        }, Time - 7000);\r\n      }\r\n    }\r\n\r\n  }, [AllowRoll, indexRoll, postData]);\r\n\r\n\r\n  /////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n  const [Added, setAdded] = useState(100);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Grid container className=\"dontallowhighlighting\">\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            position: \"fixed\",\r\n            width: \"100%\",\r\n            padding: \"0px\",\r\n            height: \"0px\",\r\n            zIndex: 20000,\r\n            top: \"0px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        ></Grid>\r\n\r\n\r\n        {showModalFormMenu ? <Grid\r\n          item\r\n          style={{\r\n            height: \"0px\",\r\n            zIndex: 500000000000,\r\n            position: 'fixed',\r\n            top: '0vh',\r\n            backgroundColor: '#00ccff'\r\n          }}\r\n        >\r\n          <ActualMenu\r\n            scrollToRef={scrollToRef}\r\n            setsuperSettings={setsuperSettings}\r\n            postData={postData}\r\n            showModalFormMenu={showModalFormMenu}\r\n            setshowModalFormMenu={setshowModalFormMenu} />\r\n\r\n        </Grid> : null}\r\n\r\n\r\n\r\n\r\n        <Grid\r\n          ref={TopRef}\r\n          className=\"parent-containerEffect  effect\"\r\n          item\r\n          xs={12}\r\n          style={{\r\n            padding: \"0px\",\r\n            paddingLeft: miniProfile ? (matchPc ? \"6vw\" : \"0vw\") : \"0vw\",\r\n            paddingRight: miniProfile ? (matchPc ? \"6vw\" : \"0vw\") : \"0vw\",\r\n            height: \"auto\",\r\n            marginTop: matchMobile ? '3vh' : '5.5vh',\r\n            marginLeft: miniProfile && matchPc ? '5.5vw' : '0px',\r\n          }}\r\n        >\r\n          {postData.length > 0 ? (\r\n            <Masonry\r\n              columns={matchPc ? 2 : miniProfile ? 2 : 1}\r\n              spacing={miniProfile && matchMobile ? 0 : miniProfile ? 16 : 0}\r\n              style={{\r\n                padding: \"0px\",\r\n\r\n              }}\r\n            >\r\n              {postData.map((post: any, i: any) => (\r\n                <div\r\n                  key={i}\r\n                  style={{\r\n                    position: \"relative\",\r\n\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      display: miniProfile ? \"block\" : \"none\",\r\n                      marginTop: \"-5px\",\r\n\r\n                    }}\r\n                  >\r\n                    <MiniPost\r\n                      setactiveAudio={setactiveAudio}\r\n                      activeAudio={activeAudio}\r\n                      ShowBigPlay={ShowBigPlay}\r\n                      setAdded={setAdded}\r\n                      Added={Added}\r\n                      postDatainnerInteraction2={postDatainnerInteraction2}\r\n                      postDatainnerInteraction1={postDatainnerInteraction1}\r\n                      paperPostScrollRef={paperPostScrollRef}\r\n                      setSliderIndexMini={setSliderIndexMini}\r\n                      sliderIndexMini={sliderIndexMini}\r\n                      zoomClickedIndex={zoomClickedIndex}\r\n                      setzoomClickedIndex={setzoomClickedIndex}\r\n                      miniProfile={miniProfile}\r\n                      setminiProfile={setminiProfile}\r\n                      setStopBodyScroll={setStopBodyScroll}\r\n                      setx={setx}\r\n                      ActiveCanvasx={ActiveCanvasx}\r\n                      setActiveCanvasx={setActiveCanvasx}\r\n                      miniLayoutPost={miniLayoutPost}\r\n                      setCommentPostid={setCommentPostid}\r\n                      postData={postData}\r\n                      setDiscussionImage={setDiscussionImage}\r\n                      OpenModalForm={OpenModalForm}\r\n                      second={second}\r\n                      setsecond={setsecond}\r\n                      secondgo={secondgo}\r\n                      setsecondgo={setsecondgo}\r\n                      setcountAutoplay={setcountAutoplay}\r\n                      countAutoplay={countAutoplay}\r\n                      onLoadDataOnce={onLoadDataOnce}\r\n                      pey={i}\r\n                      addPostItemsRef={addPostItemsRef}\r\n                      postDivRefx={postDivRefx}\r\n                      onPostsItemload={onPostsItemload}\r\n                      post={post}\r\n                      itemheight={itemheight}\r\n                      itemheighthold={itemheighthold}\r\n                      postbackheight={postbackheight}\r\n                      itemcroptype={itemcroptype}\r\n                      length={postData.length}\r\n                      itemFinalPostHeight={itemFinalPostHeight}\r\n                      onPostsItemClicked={onPostsItemClicked}\r\n                      itemCLICKED={itemCLICKED}\r\n                      addpostDivRefx={addpostDivRefx}\r\n                      postDatainner={postDatainner}\r\n                      postDatainnerThumb={postDatainnerThumb}\r\n                      itemOriginalPostHeight={itemOriginalPostHeight}\r\n                      ActiveAutoPlay={ActiveAutoPlay}\r\n                      setActiveAutoPlay={setActiveAutoPlay}\r\n                      AUTOSlideLongImages={AUTOSlideLongImages}\r\n                      scrollToPostx={scrollToPostx}\r\n                    />\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      style={{\r\n                        marginTop: \"20px\",\r\n                        height: matchMobile ? \"9vh\" : ' 0vh',\r\n                      }}\r\n                    ></Grid>\r\n                  </div>\r\n\r\n                  <div key={i} style={{ display: miniProfile ? \"none\" : \"block\", }}>\r\n                    <Post\r\n                      setactiveAudio={setactiveAudio}\r\n                      activeAudio={activeAudio}\r\n                      ShowBigPlay={ShowBigPlay}\r\n                      setAdded={setAdded}\r\n                      Added={Added}\r\n                      addpostDivRefRoll={addpostDivRefRoll}\r\n                      canvasRefIn={canvasRefIn}\r\n                      ActiveCanvas={ActiveCanvas}\r\n                      postItemsRef={postItemsRef}\r\n                      postDatainnerInteraction2={postDatainnerInteraction2}\r\n                      postDatainnerInteraction1={postDatainnerInteraction1}\r\n                      setscrollLocation={setscrollLocation}\r\n                      paperPostScrollRef={paperPostScrollRef}\r\n                      settypeEmo={settypeEmo}\r\n                      setconnectTemplateGo={setconnectTemplateGo}\r\n                      sliderIndexMini={sliderIndexMini}\r\n                      setsliderIndexMini={setSliderIndexMini}\r\n                      zoomClickedIndex={zoomClickedIndex}\r\n                      setzoomClickedIndex={setzoomClickedIndex}\r\n                      miniProfile={miniProfile}\r\n                      setminiProfile={setminiProfile}\r\n                      setStopBodyScroll={setStopBodyScroll}\r\n                      setx={setx}\r\n                      miniLayoutPost={miniLayoutPost}\r\n                      setCommentPostid={setCommentPostid}\r\n                      postData={postData}\r\n                      setDiscussionImage={setDiscussionImage}\r\n                      OpenModalForm={OpenModalForm}\r\n                      second={second}\r\n                      setsecond={setsecond}\r\n                      secondgo={secondgo}\r\n                      setsecondgo={setsecondgo}\r\n                      setcountAutoplay={setcountAutoplay}\r\n                      countAutoplay={countAutoplay}\r\n                      onLoadDataOnce={onLoadDataOnce}\r\n                      pey={i}\r\n                      addPostItemsRef={addPostItemsRef}\r\n                      postDivRef={postDivRef}\r\n                      onPostsItemload={onPostsItemload}\r\n                      post={post}\r\n                      itemheight={itemheight}\r\n                      itemheighthold={itemheighthold}\r\n                      postbackheight={postbackheight}\r\n                      itemcroptype={itemcroptype}\r\n                      length={postData.length}\r\n                      itemFinalPostHeight={itemFinalPostHeight}\r\n                      onPostsItemClicked={onPostsItemClicked}\r\n                      itemCLICKED={itemCLICKED}\r\n                      addpostDivRef={addpostDivRef}\r\n                      postDatainner={postDatainner}\r\n                      postDatainnerThumb={postDatainnerThumb}\r\n                      itemOriginalPostHeight={itemOriginalPostHeight}\r\n                      ActiveAutoPlay={ActiveAutoPlay}\r\n                      setActiveAutoPlay={setActiveAutoPlay}\r\n                      AUTOSlideLongImages={AUTOSlideLongImages}\r\n                      scrollToPost={scrollToPost}\r\n                    /> <Grid\r\n                      item\r\n                      xs={12}\r\n                      style={{\r\n                        marginTop: \"0px\",\r\n                        height: \"0.5vh\",\r\n                      }}\r\n                    ></Grid>\r\n                  </div>\r\n\r\n                </div>\r\n              ))}\r\n            </Masonry>\r\n          ) : null}\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n        <Grid\r\n          container\r\n          xs={12}\r\n\r\n        >\r\n\r\n          <Grid\r\n            item\r\n            xs={2}>\r\n          </Grid>\r\n\r\n\r\n          <Grid\r\n            item\r\n            className=\"animateColorAndPadding\"\r\n            xs={8}\r\n            ref={lastItemElement}\r\n            style={{\r\n              visibility: showMoreIndicator ? 'visible' : 'hidden',\r\n              marginTop: lastIndicatorPush ? `${lastIndicatorPushH}vh` : \"37vh\",\r\n              height: \"7px\",\r\n              backgroundColor: 'blue'\r\n            }}\r\n          ></Grid>\r\n\r\n\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </Grid >\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Profile = React.memo(Profilex);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}