{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\Upload.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { DialogContent } from \"@material-ui/core\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Uploadx({\n  showModalUpload,\n  closeUploadModal\n}) {\n  _s();\n\n  //\n  //\n  //\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\n  const animation = useSpring({\n    config: {\n      duration: 700\n    },\n    opacity: showModalUpload ? 1 : 0.0,\n    transform: showModalUpload ? `translateY(0%)` : `translateY(-100%)`\n  }); ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModalUpload ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: darkmodeReducer ? \"dialog-container dontallowhighlighting modal-containerDark \" : \"dialog-container dontallowhighlighting  modal-containerLight \",\n      style: {\n        padding: \"0px\",\n        height: \"100vh\",\n        position: \"fixed\",\n        zIndex: 100\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(DialogContent, {\n          className: darkmodeReducer ? \"dialog-container dontallowhighlighting modal-containerDark \" : \"dialog-container dontallowhighlighting  modal-containerLight \",\n          style: {\n            padding: \"0px\",\n            height: \"100vh\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(Uploadx, \"4ckSgtxw+1bADXVmyKX4OiIUYC8=\", false, function () {\n  return [useSpring, useSelector];\n});\n\n_c = Uploadx;\nexport const Upload = /*#__PURE__*/React.memo(Uploadx);\n_c2 = Upload;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Uploadx\");\n$RefreshReg$(_c2, \"Upload\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/Upload.tsx"],"names":["React","DialogContent","useSpring","animated","useSelector","Uploadx","showModalUpload","closeUploadModal","animation","config","duration","opacity","transform","darkmode","state","GlobalReducer","darkmodeReducer","padding","height","position","zIndex","Upload","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAsD,OAAtD;AAEA,SAAuBC,aAAvB,QAA4C,mBAA5C;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AAEA,SAASC,WAAT,QAAyC,aAAzC;;;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAjB,EAA0E;AAAA;;AACxE;AACA;AACA;AACA;AACA,QAAMC,SAAS,GAAGN,SAAS,CAAC;AAC1BO,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADkB;AAI1BC,IAAAA,OAAO,EAAEL,eAAe,GAAG,CAAH,GAAO,GAJL;AAK1BM,IAAAA,SAAS,EAAEN,eAAe,GAAI,gBAAJ,GAAuB;AALvB,GAAD,CAA3B,CALwE,CAaxE;AACA;AACA;AACA;;AAMA,QAAM;AAAEO,IAAAA;AAAF,MAAeT,WAAW,CAAEU,KAAD,KAAoC,EACnE,GAAGA,KAAK,CAACC;AAD0D,GAApC,CAAD,CAAhC;AAIA,QAAMC,eAAe,GAAGH,QAAxB;AAEA,sBACE;AAAA,cACGP,eAAe,gBACd,QAAC,aAAD;AACE,MAAA,SAAS,EACPU,eAAe,GACX,6DADW,GAEX,+DAJR;AAME,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,MAAM,EAAE,OAFH;AAGLC,QAAAA,QAAQ,EAAE,OAHL;AAILC,QAAAA,MAAM,EAAE;AAJH,OANT;AAAA,6BAaE,QAAC,QAAD,CAAU,GAAV;AAAc,QAAA,KAAK,EAAEZ,SAArB;AAAA,+BACE,QAAC,aAAD;AACE,UAAA,SAAS,EACPQ,eAAe,GACX,6DADW,GAEX,+DAJR;AAME,UAAA,KAAK,EAAE;AACLC,YAAAA,OAAO,EAAE,KADJ;AAELC,YAAAA,MAAM,EAAE;AAFH;AANT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,YADc,GA4BZ;AA7BN,mBADF;AAiCD;;GA7DQb,O;UAKWH,S,EAiBGE,W;;;KAtBdC,O;AA+DT,OAAO,MAAMgB,MAAM,gBAAGrB,KAAK,CAACsB,IAAN,CAAWjB,OAAX,CAAf;MAAMgB,M","sourcesContent":["import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport ControlPointDuplicateIcon from \"@mui/icons-material/ControlPointDuplicate\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction Uploadx({ showModalUpload, closeUploadModal }: any): JSX.Element {\r\n  //\r\n  //\r\n  //\r\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 700,\r\n    },\r\n    opacity: showModalUpload ? 1 : 0.0,\r\n    transform: showModalUpload ? `translateY(0%)` : `translateY(-100%)`,\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  return (\r\n    <>\r\n      {showModalUpload ? (\r\n        <DialogContent\r\n          className={\r\n            darkmodeReducer\r\n              ? \"dialog-container dontallowhighlighting modal-containerDark \"\r\n              : \"dialog-container dontallowhighlighting  modal-containerLight \"\r\n          }\r\n          style={{\r\n            padding: \"0px\",\r\n            height: \"100vh\",\r\n            position: \"fixed\",\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <animated.div style={animation}>\r\n            <DialogContent\r\n              className={\r\n                darkmodeReducer\r\n                  ? \"dialog-container dontallowhighlighting modal-containerDark \"\r\n                  : \"dialog-container dontallowhighlighting  modal-containerLight \"\r\n              }\r\n              style={{\r\n                padding: \"0px\",\r\n                height: \"100vh\",\r\n              }}\r\n            ></DialogContent>\r\n          </animated.div>\r\n        </DialogContent>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Upload = React.memo(Uploadx);\r\n"]},"metadata":{},"sourceType":"module"}