{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\CommentTemplate.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport { useSpring } from \"react-spring\";\nimport { matchTablet } from \"./DetectDevice\";\nimport \"./log/logCss.css\";\nimport { useSelector } from \"react-redux\";\nimport image1 from \"./log/images/modalpic1.png\";\nimport image2 from \"./log/images/modalpic2.png\";\nimport image3 from \"./log/images/modalpic3.png\";\nimport image4 from \"./log/images/modalpic4.png\";\nimport image5 from \"./log/images/modalpic5.png\";\nimport image6 from \"./log/images/modalpic6.png\";\nimport { ModalLogLayout } from \"./log/ModalLogLayout\";\nimport { ModalAboutLayout } from \"./profile/ModalAboutLayout\";\nimport { ModalCommentLayout } from \"./profile/ModalCommentLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CommentTemplatex({\n  formtype,\n  CloseModalForm,\n  showModalForm,\n  aboutTemp,\n  commentTemp,\n  updateColor,\n  profilex,\n  checkIfColorChanged,\n  setcheckIfColorChanged,\n  DiscussionImage\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  /// SHOW/HIDES REPEAT PASSWORD UI STATE FOR SIGN UP\n  const [checkSignupPasswordACTIVATE, setcheckSignupPasswordACTIVATE] = useState(false); ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    screenHeight\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const screenHeightReducer = screenHeight; ///\n  ///\n  ///\n  ///MODAL ZOOMED STATE PC LOCALSTORAGE\n\n  const [zoomedModal, setZoomedModal] = useState(false);\n  const [mobileZoom, setMobileZoom] = useState(false);\n  useEffect(() => {\n    if (aboutTemp) {} else {\n      let localPcZoomData = JSON.parse(localStorage.getItem(\"PcZoom\"));\n\n      if (localPcZoomData !== null) {\n        setZoomedModal(localPcZoomData);\n      }\n    }\n  }, [zoomedModal, aboutTemp]); ///\n  ///\n  ///\n  ///HIDE LOGO Modal\n\n  const [showlogo, setShowlogo] = useState(true);\n  const iconTimer = useRef(null);\n  const iconTimerxx = useRef(null);\n\n  const hideLogo = () => {\n    setShowlogo(false);\n\n    if (iconTimer.current) {\n      clearTimeout(iconTimer.current);\n    }\n\n    if (iconTimerxx.current) {\n      clearTimeout(iconTimerxx.current);\n    }\n\n    iconTimer.current = setTimeout(function () {\n      setShowlogo(true);\n    }, 2000);\n    iconTimerxx.current = setTimeout(function () {\n      setShowlogo(false);\n    }, 4000);\n  }; ///\n  ///\n  ///\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n\n\n  const modalanimation = useSpring({\n    config: {\n      duration: 500\n    },\n    opacity: showModalForm ? 1 : 0.9,\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`\n  });\n  const modalanimationTwo = useSpring({\n    config: {\n      duration: 450\n    },\n    opacity: showModalForm ? 1 : 0.9,\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`\n  }); ///\n  ///\n  ///\n  ///ANIMATE MOBILE IMAGE ON ZOOM STATE CHANGE\n\n  const mobileLogmodalanimation = useSpring({\n    config: {\n      duration: 20\n    },\n    transition: \"height 1s\",\n    opacity: mobileZoom ? 1 : 0.98,\n    height: mobileZoom ? \"100%\" : matchTablet ? \"23vh\" : \"15vh\"\n  }); ///\n  ///\n  ///\n  /// AUTO SCROLL WINDOWS AND CONTENT GRID\n\n  const contentScrollRef = useRef(null);\n  const imagescrollRef = useRef(null);\n  const autoScrollWindowNImage = useCallback(limiter => {\n    if (limiter === 1) {\n      imagescrollRef.current.scrollTo(0, 0);\n\n      if (formtype) {\n        contentScrollRef.current.scrollTo(0, 45);\n      } else {\n        contentScrollRef.current.scrollTo(0, 20);\n      }\n    } else {\n      setTimeout(function () {\n        if (imagescrollRef.current && contentScrollRef.current) {\n          imagescrollRef.current.scrollTo(0, 0);\n          contentScrollRef.current.scrollTo(0, 30);\n        }\n      }, 970);\n    }\n  }, [formtype]); ///\n  ///\n  ///\n  /// SHOW A  ZOOMED/LOCKED MODAL VIEW PC\n\n  const zoomlogmodal = () => {\n    if (checkSignupPasswordACTIVATE) {\n      setcheckSignupPasswordACTIVATE(false);\n    } else {\n      let toggleZoomedModal = !zoomedModal;\n      setZoomedModal(!zoomedModal);\n      hideLogo(); //LOCALSTORAGE ZOOMED STATES  FOR PC\n\n      localStorage.setItem(\"PcZoom\", toggleZoomedModal.toString());\n    }\n  }; ///\n  ///\n  ///\n  /// SHOW A  ZOOMED/LOCKED  MODAL VIEW  MOBILE(CHANGE MOBILEZOOM WITH A CLICK)\n\n\n  const clickMobileZoom = () => {\n    if (checkSignupPasswordACTIVATE) {\n      setcheckSignupPasswordACTIVATE(false);\n    } else {\n      if (mobileZoom) {\n        setCallMobileZoomLimiter(false);\n        setMobileZoom(false);\n        hideLogo();\n      } else {\n        setCallMobileZoomLimiter(true);\n        setMobileZoom(true);\n        hideLogo();\n      } //setMobileZoom(!mobileZoom);\n\n\n      if (contentScrollRef.current && contentScrollRef) {\n        autoScrollWindowNImage(0);\n      }\n    }\n  }; ///\n  ///\n  ///\n  ///CHANGE MOBILEZOOM WITH A SCROLL(SCROLL CHANGE LAYOUT)\n\n\n  const [callMobileZoomLimiter, setCallMobileZoomLimiter] = useState(false);\n  const slideTimer = useRef(null);\n  const slide = useCallback(e => {\n    if (contentScrollRef.current.scrollTop <= 0) {\n      if (!callMobileZoomLimiter) {\n        if (slideTimer.current) {\n          clearTimeout(slideTimer.current);\n        } //slidertimmer makes zoom  wait for some seconds before running\n\n\n        slideTimer.current = setTimeout(function () {\n          setMobileZoom(true);\n          hideLogo();\n          setCallMobileZoomLimiter(true);\n        }, 720);\n      }\n    } else if (contentScrollRef.current.scrollTop >= 2) {\n      if (slideTimer.current) {\n        clearTimeout(slideTimer.current);\n      }\n\n      if (callMobileZoomLimiter) {\n        autoScrollWindowNImage(0);\n        setMobileZoom(false);\n        hideLogo();\n        setCallMobileZoomLimiter(false);\n      }\n    } else {}\n  }, [callMobileZoomLimiter, contentScrollRef, autoScrollWindowNImage]); ///\n  ///\n  ///\n  ///ACTIVATE MOBILE VIEW TOP SCROLL(ZOOMABLE) ON INITIAL LOAD\n\n  const mobileImageOnLoad = () => {\n    hideLogo();\n\n    if (contentScrollRef.current && contentScrollRef) {\n      autoScrollWindowNImage(1);\n    }\n  }; ///\n  ///\n  ///\n  /// USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\n\n\n  const ModalBackgroundRef = useRef(null);\n\n  const onBackgroundFocus = e => {\n    if (ModalBackgroundRef.current === e.target) {\n      if (aboutTemp) {\n        CloseModalForm(0, 1);\n      } else {\n        CloseModalForm(0, 2);\n      }\n\n      updateColor();\n    }\n  }; ///\n  ///\n  ///\n  /// ESCAPE KEY CLOSE MODAL\n\n\n  const escapePress = useCallback(e => {\n    if (e.key === \"Escape\" && showModalForm) {\n      if (aboutTemp) {\n        CloseModalForm(0, 1);\n      } else {\n        CloseModalForm(0, 2);\n      }\n\n      updateColor();\n    }\n  }, [showModalForm, CloseModalForm, updateColor]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escapePress);\n    return () => document.removeEventListener(\"keydown\", escapePress);\n  }, [escapePress]); ///\n  ///\n  ///\n  /// RANDOMISE IMAGE\n\n  const [showimage, setShowimage] = useState(\" \");\n  useEffect(() => {\n    let imagecontrol = [1, 2, 3, 4, 5, 6];\n    var result = null;\n    var randomimage = imagecontrol[Math.floor(Math.random() * imagecontrol.length)];\n    const img = new Image(); ///new image instance\n\n    if (randomimage === 1) {\n      result = image1;\n    } else if (randomimage === 2) {\n      result = image2;\n    } else if (randomimage === 3) {\n      result = image3;\n    } else if (randomimage === 4) {\n      result = image4;\n    } else if (randomimage === 5) {\n      result = image5;\n    } else {\n      result = image6;\n    }\n\n    img.src = result; //src forces a download\n\n    setShowimage(result);\n  }, [showimage]); ///\n  ///\n  ///\n  /// GET IMAGE WIDTH ,HEIGHT AND SET WIDE IMAGE PC ONLY\n\n  const ModalSlidingImageRef = useRef(null);\n  const ModalImageRef = useRef(null);\n  const [imageHeightoverflow, setImageHeightoverflow] = useState(false);\n  const [MiniLayoutOverFlow, setMiniLayoutOverFlow] = useState(false);\n  const [wideImage, setWideImage] = useState(false);\n\n  const onloadfunc = () => {\n    hideLogo();\n\n    if (ModalSlidingImageRef && ModalSlidingImageRef.current) {\n      const imageHeight = ModalSlidingImageRef.current.clientHeight;\n      const imageWidth = ModalSlidingImageRef.current.clientWidth;\n\n      if (imageHeight + imageWidth / imageHeight * 3 > screenHeightReducer) {\n        setImageHeightoverflow(true);\n      } else {\n        setImageHeightoverflow(false);\n      }\n\n      if (imageWidth > imageHeight + imageWidth / imageHeight * 100) {\n        setWideImage(true);\n      } else {\n        setWideImage(false);\n      }\n    }\n  };\n\n  const onimageload = useCallback(e => {\n    onloadfunc();\n  }, [screenHeightReducer, DiscussionImage, ModalSlidingImageRef]);\n  useEffect(() => {\n    onloadfunc();\n  }, [screenHeightReducer, DiscussionImage, ModalSlidingImageRef]);\n\n  const onloadfuncx = () => {\n    hideLogo();\n\n    if (ModalImageRef && ModalImageRef.current) {\n      const imageHeight = ModalImageRef.current.clientHeight;\n\n      if (imageHeight - 10 > screenHeightReducer) {\n        setMiniLayoutOverFlow(true);\n      } else {\n        setMiniLayoutOverFlow(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    onloadfuncx();\n  }, [screenHeightReducer, DiscussionImage, ModalImageRef]);\n  const onimageloadx = useCallback(e => {\n    onloadfuncx();\n  }, [screenHeightReducer, DiscussionImage, ModalImageRef]); ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n  const {\n    image\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const imageReducer = image; /// DYNAMIC MODAL LAYOUT VARIABLES\n  ///\n  ///\n  ///\n\n  const wideImageControlTrue = \"75vw\";\n  const wideImageControlfalse = \"70vw\";\n  const zoomImageControl = \"100vw\";\n  const GridMiniAwide = 8;\n  const GridMiniBwide = 4;\n  const GridMiniAlong = 7;\n  const GridMiniBlong = 5;\n  const GridZoomAwide = 8;\n  const GridZoomBwide = 4;\n  const GridZoomAlong = 6;\n  const GridZoomBlong = 6;\n  let GridHolderA = 7;\n  let GridHolderB = 5;\n  let GridxA = 7;\n  let GridxB = 5;\n  let GridyA = 7;\n  let GridyB = 5;\n  let wideImageControl = \"70vw\";\n  let imageReal = \"75vw\";\n  let borderGrid = \"11px\";\n  var WidthHolder = \"82%\";\n  var opacitySlidingModalImage = \"0\";\n  var zIndexModalImageSmall = 10;\n  var zIndexModalImageZoom = 0;\n  var opacityFixedModalImage = \"1\";\n  var slidingImageWidth = \"50%\";\n\n  if (zoomedModal) {\n    if (imageHeightoverflow) {\n      opacitySlidingModalImage = \"1\";\n      zIndexModalImageSmall = 0;\n      zIndexModalImageZoom = 10;\n      opacityFixedModalImage = \"0\";\n    }\n\n    borderGrid = \"0px\";\n\n    if (wideImage) {\n      slidingImageWidth = \"66%\";\n      WidthHolder = \"76%\";\n      wideImageControl = wideImageControlTrue;\n      GridxA = GridZoomAwide;\n      GridxB = GridZoomBwide;\n    } else {\n      slidingImageWidth = \"50%\";\n      WidthHolder = \"88%\";\n      wideImageControl = wideImageControlfalse;\n      GridxA = GridZoomAlong;\n      GridxB = GridZoomBlong;\n    }\n\n    imageReal = zoomImageControl;\n    GridHolderA = GridxA;\n    GridHolderB = GridxB;\n  } else {\n    WidthHolder = \"82%\";\n    borderGrid = \"11px\";\n\n    if (wideImage) {\n      wideImageControl = wideImageControlTrue;\n      GridyA = GridMiniAwide;\n      GridyB = GridMiniBwide;\n    } else {\n      wideImageControl = wideImageControlfalse;\n      GridyA = GridMiniAlong;\n      GridyB = GridMiniBlong;\n    }\n\n    imageReal = wideImageControl;\n    GridHolderA = GridyA;\n    GridHolderB = GridyB;\n  } ///\n  ///\n  ///\n  /// DYNAMIC MODAL LAYOUT VARIABLES\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"apple-mobile-web-app-capable\",\n      content: \"yes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this), aboutTemp ? showModalForm ? /*#__PURE__*/_jsxDEV(ModalAboutLayout, {\n      setcheckIfColorChanged: setcheckIfColorChanged,\n      showModalForm: showModalForm,\n      profilex: profilex,\n      slidingImageWidth: slidingImageWidth,\n      opacitySlidingModalImage: opacitySlidingModalImage,\n      zIndexModalImageZoom: zIndexModalImageZoom,\n      ModalBackgroundRef: ModalBackgroundRef,\n      onBackgroundFocus: onBackgroundFocus,\n      modalanimation: modalanimation,\n      modalanimationTwo: modalanimationTwo,\n      ModalSlidingImageRef: ModalSlidingImageRef,\n      zoomlogmodal: zoomlogmodal,\n      onimageload: onimageload,\n      borderGrid: borderGrid,\n      imageReal: imageReal,\n      GridHolderA: GridHolderA,\n      zIndexModalImageSmall: zIndexModalImageSmall,\n      zoomedModal: zoomedModal,\n      setZoomedModal: setZoomedModal,\n      opacityFixedModalImage: opacityFixedModalImage,\n      formtype: formtype,\n      GridHolderB: GridHolderB,\n      WidthHolder: WidthHolder,\n      checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE,\n      setcheckSignupPasswordACTIVATE: setcheckSignupPasswordACTIVATE,\n      imagescrollRef: imagescrollRef,\n      clickMobileZoom: clickMobileZoom,\n      mobileImageOnLoad: mobileImageOnLoad,\n      mobileLogmodalanimation: mobileLogmodalanimation,\n      mobileZoom: mobileZoom,\n      setMobileZoom: setMobileZoom,\n      slide: slide,\n      contentScrollRef: contentScrollRef,\n      showimage: imageReducer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 11\n    }, this) : null : commentTemp ? /*#__PURE__*/_jsxDEV(ModalCommentLayout, {\n      wideImage: wideImage,\n      MiniLayoutOverFlow: MiniLayoutOverFlow,\n      ModalImageRef: ModalImageRef,\n      onimageloadx: onimageloadx,\n      DiscussionImage: DiscussionImage,\n      setcheckIfColorChanged: setcheckIfColorChanged,\n      showModalForm: showModalForm,\n      profilex: profilex,\n      slidingImageWidth: slidingImageWidth,\n      opacitySlidingModalImage: opacitySlidingModalImage,\n      zIndexModalImageZoom: zIndexModalImageZoom,\n      ModalBackgroundRef: ModalBackgroundRef,\n      onBackgroundFocus: onBackgroundFocus,\n      modalanimation: modalanimation,\n      modalanimationTwo: modalanimationTwo,\n      ModalSlidingImageRef: ModalSlidingImageRef,\n      zoomlogmodal: zoomlogmodal,\n      onimageload: onimageload,\n      borderGrid: borderGrid,\n      imageReal: imageReal,\n      GridHolderA: GridHolderA,\n      zIndexModalImageSmall: zIndexModalImageSmall,\n      zoomedModal: zoomedModal,\n      setZoomedModal: setZoomedModal,\n      opacityFixedModalImage: opacityFixedModalImage,\n      formtype: formtype,\n      GridHolderB: GridHolderB,\n      WidthHolder: WidthHolder,\n      checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE,\n      setcheckSignupPasswordACTIVATE: setcheckSignupPasswordACTIVATE,\n      imagescrollRef: imagescrollRef,\n      clickMobileZoom: clickMobileZoom,\n      mobileImageOnLoad: mobileImageOnLoad,\n      mobileLogmodalanimation: mobileLogmodalanimation,\n      mobileZoom: mobileZoom,\n      setMobileZoom: setMobileZoom,\n      slide: slide,\n      contentScrollRef: contentScrollRef,\n      showimage: DiscussionImage[0],\n      imageHeightoverflow: imageHeightoverflow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 9\n    }, this) : showModalForm ? /*#__PURE__*/_jsxDEV(ModalLogLayout, {\n      slidingImageWidth: slidingImageWidth,\n      opacitySlidingModalImage: opacitySlidingModalImage,\n      zIndexModalImageZoom: zIndexModalImageZoom,\n      ModalBackgroundRef: ModalBackgroundRef,\n      onBackgroundFocus: onBackgroundFocus,\n      modalanimation: modalanimation,\n      modalanimationTwo: modalanimationTwo,\n      ModalSlidingImageRef: ModalSlidingImageRef,\n      zoomlogmodal: zoomlogmodal,\n      onimageload: onimageload,\n      borderGrid: borderGrid,\n      imageReal: imageReal,\n      GridHolderA: GridHolderA,\n      zIndexModalImageSmall: zIndexModalImageSmall,\n      zoomedModal: zoomedModal,\n      showlogo: showlogo,\n      opacityFixedModalImage: opacityFixedModalImage,\n      formtype: formtype,\n      GridHolderB: GridHolderB,\n      WidthHolder: WidthHolder,\n      checkSignupPasswordACTIVATE: checkSignupPasswordACTIVATE,\n      setcheckSignupPasswordACTIVATE: setcheckSignupPasswordACTIVATE,\n      imagescrollRef: imagescrollRef,\n      clickMobileZoom: clickMobileZoom,\n      mobileImageOnLoad: mobileImageOnLoad,\n      mobileLogmodalanimation: mobileLogmodalanimation,\n      mobileZoom: mobileZoom,\n      slide: slide,\n      contentScrollRef: contentScrollRef,\n      showimage: showimage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(CommentTemplatex, \"gwTf2EsnJum1z2TVVtKYtV21eGE=\", false, function () {\n  return [useSelector, useSpring, useSpring, useSpring, useSelector];\n});\n\n_c = CommentTemplatex;\nexport const CommentTemplate = /*#__PURE__*/React.memo(CommentTemplatex);\n_c2 = CommentTemplate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CommentTemplatex\");\n$RefreshReg$(_c2, \"CommentTemplate\");","map":{"version":3,"sources":["C:/Users/oghen/Documents/ClikBate/super/src/CommentTemplate.tsx"],"names":["React","useRef","useEffect","useState","useCallback","useSpring","matchTablet","useSelector","image1","image2","image3","image4","image5","image6","ModalLogLayout","ModalAboutLayout","ModalCommentLayout","CommentTemplatex","formtype","CloseModalForm","showModalForm","aboutTemp","commentTemp","updateColor","profilex","checkIfColorChanged","setcheckIfColorChanged","DiscussionImage","checkSignupPasswordACTIVATE","setcheckSignupPasswordACTIVATE","screenHeight","state","GlobalReducer","screenHeightReducer","zoomedModal","setZoomedModal","mobileZoom","setMobileZoom","localPcZoomData","JSON","parse","localStorage","getItem","showlogo","setShowlogo","iconTimer","iconTimerxx","hideLogo","current","clearTimeout","setTimeout","modalanimation","config","duration","opacity","transform","modalanimationTwo","mobileLogmodalanimation","transition","height","contentScrollRef","imagescrollRef","autoScrollWindowNImage","limiter","scrollTo","zoomlogmodal","toggleZoomedModal","setItem","toString","clickMobileZoom","setCallMobileZoomLimiter","callMobileZoomLimiter","slideTimer","slide","e","scrollTop","mobileImageOnLoad","ModalBackgroundRef","onBackgroundFocus","target","escapePress","key","document","addEventListener","removeEventListener","showimage","setShowimage","imagecontrol","result","randomimage","Math","floor","random","length","img","Image","src","ModalSlidingImageRef","ModalImageRef","imageHeightoverflow","setImageHeightoverflow","MiniLayoutOverFlow","setMiniLayoutOverFlow","wideImage","setWideImage","onloadfunc","imageHeight","clientHeight","imageWidth","clientWidth","onimageload","onloadfuncx","onimageloadx","image","UserdataReducer","imageReducer","wideImageControlTrue","wideImageControlfalse","zoomImageControl","GridMiniAwide","GridMiniBwide","GridMiniAlong","GridMiniBlong","GridZoomAwide","GridZoomBwide","GridZoomAlong","GridZoomBlong","GridHolderA","GridHolderB","GridxA","GridxB","GridyA","GridyB","wideImageControl","imageReal","borderGrid","WidthHolder","opacitySlidingModalImage","zIndexModalImageSmall","zIndexModalImageZoom","opacityFixedModalImage","slidingImageWidth","CommentTemplate","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,EAA6CC,WAA7C,QAAgE,OAAhE;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,OAAO,kBAAP;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,kBAAT,QAAmC,8BAAnC;;;;AAEA,SAASC,gBAAT,CAA0B;AACxBC,EAAAA,QADwB;AAExBC,EAAAA,cAFwB;AAGxBC,EAAAA,aAHwB;AAIxBC,EAAAA,SAJwB;AAKxBC,EAAAA,WALwB;AAMxBC,EAAAA,WANwB;AAOxBC,EAAAA,QAPwB;AAQxBC,EAAAA,mBARwB;AASxBC,EAAAA,sBATwB;AAUxBC,EAAAA;AAVwB,CAA1B,EAWqB;AAAA;;AACnB;AACA;AACA;AACA;AACA,QAAM,CAACC,2BAAD,EAA8BC,8BAA9B,IACJ1B,QAAQ,CAAU,KAAV,CADV,CALmB,CAQnB;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA,QAAM;AAAE2B,IAAAA;AAAF,MAAmBvB,WAAW,CAAEwB,KAAD,KAAoC,EACvE,GAAGA,KAAK,CAACC;AAD8D,GAApC,CAAD,CAApC;AAGA,QAAMC,mBAAmB,GAAGH,YAA5B,CA1BmB,CA4BnB;AACA;AACA;AACA;;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgChC,QAAQ,CAAU,KAAV,CAA9C;AACA,QAAM,CAACiC,UAAD,EAAaC,aAAb,IAA8BlC,QAAQ,CAAU,KAAV,CAA5C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,SAAJ,EAAe,CACd,CADD,MACO;AACL,UAAIiB,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAtB;;AACA,UAAIJ,eAAe,KAAK,IAAxB,EAA8B;AAC5BH,QAAAA,cAAc,CAACG,eAAD,CAAd;AACD;AACF;AACF,GARQ,EAQN,CAACJ,WAAD,EAAcb,SAAd,CARM,CAAT,CAlCmB,CA4CnB;AACA;AACA;AACA;;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BzC,QAAQ,CAAU,IAAV,CAAxC;AACA,QAAM0C,SAAS,GAAG5C,MAAM,CAAuC,IAAvC,CAAxB;AACA,QAAM6C,WAAW,GAAG7C,MAAM,CAAuC,IAAvC,CAA1B;;AACA,QAAM8C,QAAQ,GAAG,MAAM;AACrBH,IAAAA,WAAW,CAAC,KAAD,CAAX;;AACA,QAAIC,SAAS,CAACG,OAAd,EAAuB;AACrBC,MAAAA,YAAY,CAACJ,SAAS,CAACG,OAAX,CAAZ;AACD;;AACD,QAAIF,WAAW,CAACE,OAAhB,EAAyB;AACvBC,MAAAA,YAAY,CAACH,WAAW,CAACE,OAAb,CAAZ;AACD;;AACDH,IAAAA,SAAS,CAACG,OAAV,GAAoBE,UAAU,CAAC,YAAY;AACzCN,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAF6B,EAE3B,IAF2B,CAA9B;AAGAE,IAAAA,WAAW,CAACE,OAAZ,GAAsBE,UAAU,CAAC,YAAY;AAC3CN,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAF+B,EAE7B,IAF6B,CAAhC;AAGD,GAdD,CAnDmB,CAmEnB;AACA;AACA;AACA;;;AACA,QAAMO,cAAc,GAAG9C,SAAS,CAAC;AAC/B+C,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADuB;AAI/BC,IAAAA,OAAO,EAAElC,aAAa,GAAG,CAAH,GAAO,GAJE;AAK/BmC,IAAAA,SAAS,EAAEnC,aAAa,GAAI,gBAAJ,GAAuB;AALhB,GAAD,CAAhC;AAQA,QAAMoC,iBAAiB,GAAGnD,SAAS,CAAC;AAClC+C,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD0B;AAIlCC,IAAAA,OAAO,EAAElC,aAAa,GAAG,CAAH,GAAO,GAJK;AAKlCmC,IAAAA,SAAS,EAAEnC,aAAa,GAAI,gBAAJ,GAAuB;AALb,GAAD,CAAnC,CA/EmB,CAuFnB;AACA;AACA;AACA;;AACA,QAAMqC,uBAA4B,GAAGpD,SAAS,CAAC;AAC7C+C,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADqC;AAI7CK,IAAAA,UAAU,EAAE,WAJiC;AAK7CJ,IAAAA,OAAO,EAAElB,UAAU,GAAG,CAAH,GAAO,IALmB;AAM7CuB,IAAAA,MAAM,EAAEvB,UAAU,GAAG,MAAH,GAAY9B,WAAW,GAAG,MAAH,GAAY;AANR,GAAD,CAA9C,CA3FmB,CAoGnB;AACA;AACA;AACA;;AACA,QAAMsD,gBAAgB,GAAG3D,MAAM,CAAM,IAAN,CAA/B;AACA,QAAM4D,cAAc,GAAG5D,MAAM,CAAM,IAAN,CAA7B;AAEA,QAAM6D,sBAA2B,GAAG1D,WAAW,CAC5C2D,OAAD,IAAqB;AACnB,QAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjBF,MAAAA,cAAc,CAACb,OAAf,CAAuBgB,QAAvB,CAAgC,CAAhC,EAAmC,CAAnC;;AACA,UAAI9C,QAAJ,EAAc;AACZ0C,QAAAA,gBAAgB,CAACZ,OAAjB,CAAyBgB,QAAzB,CAAkC,CAAlC,EAAqC,EAArC;AACD,OAFD,MAEO;AACLJ,QAAAA,gBAAgB,CAACZ,OAAjB,CAAyBgB,QAAzB,CAAkC,CAAlC,EAAqC,EAArC;AACD;AACF,KAPD,MAOO;AACLd,MAAAA,UAAU,CAAC,YAAY;AACrB,YAAIW,cAAc,CAACb,OAAf,IAA0BY,gBAAgB,CAACZ,OAA/C,EAAwD;AACtDa,UAAAA,cAAc,CAACb,OAAf,CAAuBgB,QAAvB,CAAgC,CAAhC,EAAmC,CAAnC;AACAJ,UAAAA,gBAAgB,CAACZ,OAAjB,CAAyBgB,QAAzB,CAAkC,CAAlC,EAAqC,EAArC;AACD;AACF,OALS,EAKP,GALO,CAAV;AAMD;AACF,GAjB4C,EAkB7C,CAAC9C,QAAD,CAlB6C,CAA/C,CA3GmB,CA+HnB;AACA;AACA;AACA;;AACA,QAAM+C,YAAY,GAAG,MAAM;AACzB,QAAIrC,2BAAJ,EAAiC;AAC/BC,MAAAA,8BAA8B,CAAC,KAAD,CAA9B;AACD,KAFD,MAEO;AACL,UAAIqC,iBAAiB,GAAG,CAAChC,WAAzB;AACAC,MAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACAa,MAAAA,QAAQ,GAHH,CAIL;;AACAN,MAAAA,YAAY,CAAC0B,OAAb,CAAqB,QAArB,EAA+BD,iBAAiB,CAACE,QAAlB,EAA/B;AACD;AACF,GAVD,CAnImB,CA+InB;AACA;AACA;AACA;;;AACA,QAAMC,eAAe,GAAG,MAAM;AAC5B,QAAIzC,2BAAJ,EAAiC;AAC/BC,MAAAA,8BAA8B,CAAC,KAAD,CAA9B;AACD,KAFD,MAEO;AACL,UAAIO,UAAJ,EAAgB;AACdkC,QAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAjC,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAU,QAAAA,QAAQ;AACT,OAJD,MAIO;AACLuB,QAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACAjC,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAU,QAAAA,QAAQ;AACT,OATI,CAUL;;;AACA,UAAIa,gBAAgB,CAACZ,OAAjB,IAA4BY,gBAAhC,EAAkD;AAChDE,QAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACD;AACF;AACF,GAlBD,CAnJmB,CAuKnB;AACA;AACA;AACA;;;AACA,QAAM,CAACS,qBAAD,EAAwBD,wBAAxB,IACJnE,QAAQ,CAAU,KAAV,CADV;AAEA,QAAMqE,UAAU,GAAGvE,MAAM,CAAuC,IAAvC,CAAzB;AACA,QAAMwE,KAAK,GAAGrE,WAAW,CACtBsE,CAAD,IAAO;AACL,QAAId,gBAAgB,CAACZ,OAAjB,CAAyB2B,SAAzB,IAAsC,CAA1C,EAA6C;AAC3C,UAAI,CAACJ,qBAAL,EAA4B;AAC1B,YAAIC,UAAU,CAACxB,OAAf,EAAwB;AACtBC,UAAAA,YAAY,CAACuB,UAAU,CAACxB,OAAZ,CAAZ;AACD,SAHyB,CAI1B;;;AACAwB,QAAAA,UAAU,CAACxB,OAAX,GAAqBE,UAAU,CAAC,YAAY;AAC1Cb,UAAAA,aAAa,CAAC,IAAD,CAAb;AACAU,UAAAA,QAAQ;AACRuB,UAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD,SAJ8B,EAI5B,GAJ4B,CAA/B;AAKD;AACF,KAZD,MAYO,IAAIV,gBAAgB,CAACZ,OAAjB,CAAyB2B,SAAzB,IAAsC,CAA1C,EAA6C;AAClD,UAAIH,UAAU,CAACxB,OAAf,EAAwB;AACtBC,QAAAA,YAAY,CAACuB,UAAU,CAACxB,OAAZ,CAAZ;AACD;;AACD,UAAIuB,qBAAJ,EAA2B;AACzBT,QAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAzB,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAU,QAAAA,QAAQ;AACRuB,QAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACD;AACF,KAVM,MAUA,CACN;AACF,GA1BsB,EA2BvB,CAACC,qBAAD,EAAwBX,gBAAxB,EAA0CE,sBAA1C,CA3BuB,CAAzB,CA9KmB,CA4MnB;AACA;AACA;AACA;;AACA,QAAMc,iBAAiB,GAAG,MAAM;AAC9B7B,IAAAA,QAAQ;;AACR,QAAIa,gBAAgB,CAACZ,OAAjB,IAA4BY,gBAAhC,EAAkD;AAChDE,MAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACD;AACF,GALD,CAhNmB,CAuNnB;AACA;AACA;AACA;;;AACA,QAAMe,kBAAkB,GAAG5E,MAAM,CAAmB,IAAnB,CAAjC;;AACA,QAAM6E,iBAAiB,GAAIJ,CAAD,IAAkB;AAC1C,QAAIG,kBAAkB,CAAC7B,OAAnB,KAA+B0B,CAAC,CAACK,MAArC,EAA6C;AAC3C,UAAI1D,SAAJ,EAAe;AACbF,QAAAA,cAAc,CAAC,CAAD,EAAI,CAAJ,CAAd;AACD,OAFD,MAEO;AACLA,QAAAA,cAAc,CAAC,CAAD,EAAI,CAAJ,CAAd;AACD;;AAEDI,MAAAA,WAAW;AACZ;AACF,GAVD,CA5NmB,CAwOnB;AACA;AACA;AACA;;;AACA,QAAMyD,WAAW,GAAG5E,WAAW,CAC5BsE,CAAD,IAAO;AACL,QAAIA,CAAC,CAACO,GAAF,KAAU,QAAV,IAAsB7D,aAA1B,EAAyC;AACvC,UAAIC,SAAJ,EAAe;AACbF,QAAAA,cAAc,CAAC,CAAD,EAAI,CAAJ,CAAd;AACD,OAFD,MAEO;AACLA,QAAAA,cAAc,CAAC,CAAD,EAAI,CAAJ,CAAd;AACD;;AACDI,MAAAA,WAAW;AACZ;AACF,GAV4B,EAW7B,CAACH,aAAD,EAAgBD,cAAhB,EAAgCI,WAAhC,CAX6B,CAA/B;AAaArB,EAAAA,SAAS,CAAC,MAAM;AACdgF,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCH,WAArC;AACA,WAAO,MAAME,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCJ,WAAxC,CAAb;AACD,GAHQ,EAGN,CAACA,WAAD,CAHM,CAAT,CAzPmB,CA8PnB;AACA;AACA;AACA;;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BnF,QAAQ,CAAS,GAAT,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqF,YAAsB,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAA7B;AACA,QAAIC,MAAM,GAAG,IAAb;AACA,QAAIC,WAAW,GACbF,YAAY,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,YAAY,CAACM,MAAxC,CAAD,CADd;AAEA,UAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ,CALc,CAKW;;AACzB,QAAIN,WAAW,KAAK,CAApB,EAAuB;AACrBD,MAAAA,MAAM,GAAGhF,MAAT;AACD,KAFD,MAEO,IAAIiF,WAAW,KAAK,CAApB,EAAuB;AAC5BD,MAAAA,MAAM,GAAG/E,MAAT;AACD,KAFM,MAEA,IAAIgF,WAAW,KAAK,CAApB,EAAuB;AAC5BD,MAAAA,MAAM,GAAG9E,MAAT;AACD,KAFM,MAEA,IAAI+E,WAAW,KAAK,CAApB,EAAuB;AAC5BD,MAAAA,MAAM,GAAG7E,MAAT;AACD,KAFM,MAEA,IAAI8E,WAAW,KAAK,CAApB,EAAuB;AAC5BD,MAAAA,MAAM,GAAG5E,MAAT;AACD,KAFM,MAEA;AACL4E,MAAAA,MAAM,GAAG3E,MAAT;AACD;;AACDiF,IAAAA,GAAG,CAACE,GAAJ,GAAUR,MAAV,CAnBc,CAmBI;;AAClBF,IAAAA,YAAY,CAACE,MAAD,CAAZ;AACD,GArBQ,EAqBN,CAACH,SAAD,CArBM,CAAT,CAnQmB,CA0RnB;AACA;AACA;AACA;;AACA,QAAMY,oBAAoB,GAAGhG,MAAM,CAAmB,IAAnB,CAAnC;AACA,QAAMiG,aAAa,GAAGjG,MAAM,CAAmB,IAAnB,CAA5B;AAEA,QAAM,CAACkG,mBAAD,EAAsBC,sBAAtB,IACJjG,QAAQ,CAAU,KAAV,CADV;AAEA,QAAM,CAACkG,kBAAD,EAAqBC,qBAArB,IAA8CnG,QAAQ,CAAU,KAAV,CAA5D;AAEA,QAAM,CAACoG,SAAD,EAAYC,YAAZ,IAA4BrG,QAAQ,CAAU,KAAV,CAA1C;;AAEA,QAAMsG,UAAU,GAAG,MAAM;AACvB1D,IAAAA,QAAQ;;AACR,QAAIkD,oBAAoB,IAAIA,oBAAoB,CAACjD,OAAjD,EAA0D;AACxD,YAAM0D,WAAW,GAAGT,oBAAoB,CAACjD,OAArB,CAA6B2D,YAAjD;AACA,YAAMC,UAAU,GAAGX,oBAAoB,CAACjD,OAArB,CAA6B6D,WAAhD;;AAEA,UAAIH,WAAW,GAAIE,UAAU,GAAGF,WAAd,GAA6B,CAA3C,GAA+CzE,mBAAnD,EAAwE;AACtEmE,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD,OAFD,MAEO;AACLA,QAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACD;;AAED,UAAIQ,UAAU,GAAGF,WAAW,GAAIE,UAAU,GAAGF,WAAd,GAA6B,GAA5D,EAAiE;AAC/DF,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAFD,MAEO;AACLA,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF;AACF,GAlBD;;AAoBA,QAAMM,WAAW,GAAG1G,WAAW,CAC5BsE,CAAD,IAAY;AACV+B,IAAAA,UAAU;AACX,GAH4B,EAI7B,CAACxE,mBAAD,EAAsBN,eAAtB,EAAuCsE,oBAAvC,CAJ6B,CAA/B;AAOA/F,EAAAA,SAAS,CAAC,MAAM;AACduG,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACxE,mBAAD,EAAsBN,eAAtB,EAAuCsE,oBAAvC,CAFM,CAAT;;AAIA,QAAMc,WAAW,GAAG,MAAM;AACxBhE,IAAAA,QAAQ;;AACR,QAAImD,aAAa,IAAIA,aAAa,CAAClD,OAAnC,EAA4C;AAC1C,YAAM0D,WAAW,GAAGR,aAAa,CAAClD,OAAd,CAAsB2D,YAA1C;;AAEA,UAAID,WAAW,GAAG,EAAd,GAAmBzE,mBAAvB,EAA4C;AAC1CqE,QAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,OAFD,MAEO;AACLA,QAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD;AACF;AACF,GAXD;;AAaApG,EAAAA,SAAS,CAAC,MAAM;AACd6G,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAAC9E,mBAAD,EAAsBN,eAAtB,EAAuCuE,aAAvC,CAFM,CAAT;AAIA,QAAMc,YAAY,GAAG5G,WAAW,CAC7BsE,CAAD,IAAY;AACVqC,IAAAA,WAAW;AACZ,GAH6B,EAI9B,CAAC9E,mBAAD,EAAsBN,eAAtB,EAAuCuE,aAAvC,CAJ8B,CAAhC,CAvVmB,CA8VnB;AACA;AACA;AACA;;AAMA,QAAM;AAAEe,IAAAA;AAAF,MAAY1G,WAAW,CAAEwB,KAAD,KAAmC,EAC/D,GAAGA,KAAK,CAACmF;AADsD,GAAnC,CAAD,CAA7B;AAGA,QAAMC,YAAY,GAAGF,KAArB,CA1WmB,CA4WnB;AACA;AACA;AACA;;AACA,QAAMG,oBAA4B,GAAG,MAArC;AACA,QAAMC,qBAA6B,GAAG,MAAtC;AACA,QAAMC,gBAAwB,GAAG,OAAjC;AACA,QAAMC,aAAoB,GAAG,CAA7B;AACA,QAAMC,aAAoB,GAAG,CAA7B;AACA,QAAMC,aAAoB,GAAG,CAA7B;AACA,QAAMC,aAAoB,GAAG,CAA7B;AACA,QAAMC,aAAoB,GAAG,CAA7B;AACA,QAAMC,aAAoB,GAAG,CAA7B;AACA,QAAMC,aAAoB,GAAG,CAA7B;AACA,QAAMC,aAAoB,GAAG,CAA7B;AAEA,MAAIC,WAAkB,GAAG,CAAzB;AACA,MAAIC,WAAkB,GAAG,CAAzB;AAEA,MAAIC,MAAa,GAAG,CAApB;AACA,MAAIC,MAAa,GAAG,CAApB;AAEA,MAAIC,MAAa,GAAG,CAApB;AACA,MAAIC,MAAa,GAAG,CAApB;AAEA,MAAIC,gBAAwB,GAAG,MAA/B;AACA,MAAIC,SAAiB,GAAG,MAAxB;AAEA,MAAIC,UAAkB,GAAG,MAAzB;AACA,MAAIC,WAAmB,GAAG,KAA1B;AAEA,MAAIC,wBAAwB,GAAG,GAA/B;AACA,MAAIC,qBAAqB,GAAG,EAA5B;AACA,MAAIC,oBAAoB,GAAG,CAA3B;AACA,MAAIC,sBAAsB,GAAG,GAA7B;AAEA,MAAIC,iBAAiB,GAAG,KAAxB;;AAEA,MAAI3G,WAAJ,EAAiB;AACf,QAAIiE,mBAAJ,EAAyB;AACvBsC,MAAAA,wBAAwB,GAAG,GAA3B;AACAC,MAAAA,qBAAqB,GAAG,CAAxB;AACAC,MAAAA,oBAAoB,GAAG,EAAvB;AACAC,MAAAA,sBAAsB,GAAG,GAAzB;AACD;;AAEDL,IAAAA,UAAU,GAAG,KAAb;;AAEA,QAAIhC,SAAJ,EAAe;AACbsC,MAAAA,iBAAiB,GAAG,KAApB;AACAL,MAAAA,WAAW,GAAG,KAAd;AACAH,MAAAA,gBAAgB,GAAGjB,oBAAnB;AACAa,MAAAA,MAAM,GAAGN,aAAT;AACAO,MAAAA,MAAM,GAAGN,aAAT;AACD,KAND,MAMO;AACLiB,MAAAA,iBAAiB,GAAG,KAApB;AACAL,MAAAA,WAAW,GAAG,KAAd;AACAH,MAAAA,gBAAgB,GAAGhB,qBAAnB;AACAY,MAAAA,MAAM,GAAGJ,aAAT;AACAK,MAAAA,MAAM,GAAGJ,aAAT;AACD;;AACDQ,IAAAA,SAAS,GAAGhB,gBAAZ;AACAS,IAAAA,WAAW,GAAGE,MAAd;AACAD,IAAAA,WAAW,GAAGE,MAAd;AACD,GA1BD,MA0BO;AACLM,IAAAA,WAAW,GAAG,KAAd;AACAD,IAAAA,UAAU,GAAG,MAAb;;AAEA,QAAIhC,SAAJ,EAAe;AACb8B,MAAAA,gBAAgB,GAAGjB,oBAAnB;AACAe,MAAAA,MAAM,GAAGZ,aAAT;AACAa,MAAAA,MAAM,GAAGZ,aAAT;AACD,KAJD,MAIO;AACLa,MAAAA,gBAAgB,GAAGhB,qBAAnB;AACAc,MAAAA,MAAM,GAAGV,aAAT;AACAW,MAAAA,MAAM,GAAGV,aAAT;AACD;;AACDY,IAAAA,SAAS,GAAGD,gBAAZ;AACAN,IAAAA,WAAW,GAAGI,MAAd;AACAH,IAAAA,WAAW,GAAGI,MAAd;AACD,GA5bkB,CA6bnB;AACA;AACA;AACA;;;AAEA,sBACE;AAAA,4BACE;AAAM,MAAA,IAAI,EAAC,8BAAX;AAA0C,MAAA,OAAO,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAGG/G,SAAS,GACRD,aAAa,gBACX,QAAC,gBAAD;AACE,MAAA,sBAAsB,EAAEM,sBAD1B;AAEE,MAAA,aAAa,EAAEN,aAFjB;AAGE,MAAA,QAAQ,EAAEI,QAHZ;AAIE,MAAA,iBAAiB,EAAEqH,iBAJrB;AAKE,MAAA,wBAAwB,EAAEJ,wBAL5B;AAME,MAAA,oBAAoB,EAAEE,oBANxB;AAOE,MAAA,kBAAkB,EAAE9D,kBAPtB;AAQE,MAAA,iBAAiB,EAAEC,iBARrB;AASE,MAAA,cAAc,EAAE3B,cATlB;AAUE,MAAA,iBAAiB,EAAEK,iBAVrB;AAWE,MAAA,oBAAoB,EAAEyC,oBAXxB;AAYE,MAAA,YAAY,EAAEhC,YAZhB;AAaE,MAAA,WAAW,EAAE6C,WAbf;AAcE,MAAA,UAAU,EAAEyB,UAdd;AAeE,MAAA,SAAS,EAAED,SAfb;AAgBE,MAAA,WAAW,EAAEP,WAhBf;AAiBE,MAAA,qBAAqB,EAAEW,qBAjBzB;AAkBE,MAAA,WAAW,EAAExG,WAlBf;AAmBE,MAAA,cAAc,EAAEC,cAnBlB;AAoBE,MAAA,sBAAsB,EAAEyG,sBApB1B;AAqBE,MAAA,QAAQ,EAAE1H,QArBZ;AAsBE,MAAA,WAAW,EAAE8G,WAtBf;AAuBE,MAAA,WAAW,EAAEQ,WAvBf;AAwBE,MAAA,2BAA2B,EAAE5G,2BAxB/B;AAyBE,MAAA,8BAA8B,EAAEC,8BAzBlC;AA0BE,MAAA,cAAc,EAAEgC,cA1BlB;AA2BE,MAAA,eAAe,EAAEQ,eA3BnB;AA4BE,MAAA,iBAAiB,EAAEO,iBA5BrB;AA6BE,MAAA,uBAAuB,EAAEnB,uBA7B3B;AA8BE,MAAA,UAAU,EAAErB,UA9Bd;AA+BE,MAAA,aAAa,EAAEC,aA/BjB;AAgCE,MAAA,KAAK,EAAEoC,KAhCT;AAiCE,MAAA,gBAAgB,EAAEb,gBAjCpB;AAkCE,MAAA,SAAS,EAAEuD;AAlCb;AAAA;AAAA;AAAA;AAAA,YADW,GAqCT,IAtCI,GAuCN7F,WAAW,gBACb,QAAC,kBAAD;AACE,MAAA,SAAS,EAAEiF,SADb;AAEE,MAAA,kBAAkB,EAAEF,kBAFtB;AAGE,MAAA,aAAa,EAAEH,aAHjB;AAIE,MAAA,YAAY,EAAEc,YAJhB;AAKE,MAAA,eAAe,EAAErF,eALnB;AAME,MAAA,sBAAsB,EAAED,sBAN1B;AAOE,MAAA,aAAa,EAAEN,aAPjB;AAQE,MAAA,QAAQ,EAAEI,QARZ;AASE,MAAA,iBAAiB,EAAEqH,iBATrB;AAUE,MAAA,wBAAwB,EAAEJ,wBAV5B;AAWE,MAAA,oBAAoB,EAAEE,oBAXxB;AAYE,MAAA,kBAAkB,EAAE9D,kBAZtB;AAaE,MAAA,iBAAiB,EAAEC,iBAbrB;AAcE,MAAA,cAAc,EAAE3B,cAdlB;AAeE,MAAA,iBAAiB,EAAEK,iBAfrB;AAgBE,MAAA,oBAAoB,EAAEyC,oBAhBxB;AAiBE,MAAA,YAAY,EAAEhC,YAjBhB;AAkBE,MAAA,WAAW,EAAE6C,WAlBf;AAmBE,MAAA,UAAU,EAAEyB,UAnBd;AAoBE,MAAA,SAAS,EAAED,SApBb;AAqBE,MAAA,WAAW,EAAEP,WArBf;AAsBE,MAAA,qBAAqB,EAAEW,qBAtBzB;AAuBE,MAAA,WAAW,EAAExG,WAvBf;AAwBE,MAAA,cAAc,EAAEC,cAxBlB;AAyBE,MAAA,sBAAsB,EAAEyG,sBAzB1B;AA0BE,MAAA,QAAQ,EAAE1H,QA1BZ;AA2BE,MAAA,WAAW,EAAE8G,WA3Bf;AA4BE,MAAA,WAAW,EAAEQ,WA5Bf;AA6BE,MAAA,2BAA2B,EAAE5G,2BA7B/B;AA8BE,MAAA,8BAA8B,EAAEC,8BA9BlC;AA+BE,MAAA,cAAc,EAAEgC,cA/BlB;AAgCE,MAAA,eAAe,EAAEQ,eAhCnB;AAiCE,MAAA,iBAAiB,EAAEO,iBAjCrB;AAkCE,MAAA,uBAAuB,EAAEnB,uBAlC3B;AAmCE,MAAA,UAAU,EAAErB,UAnCd;AAoCE,MAAA,aAAa,EAAEC,aApCjB;AAqCE,MAAA,KAAK,EAAEoC,KArCT;AAsCE,MAAA,gBAAgB,EAAEb,gBAtCpB;AAuCE,MAAA,SAAS,EAAEjC,eAAe,CAAC,CAAD,CAvC5B;AAwCE,MAAA,mBAAmB,EAAEwE;AAxCvB;AAAA;AAAA;AAAA;AAAA,YADa,GA2CX/E,aAAa,gBACf,QAAC,cAAD;AACE,MAAA,iBAAiB,EAAEyH,iBADrB;AAEE,MAAA,wBAAwB,EAAEJ,wBAF5B;AAGE,MAAA,oBAAoB,EAAEE,oBAHxB;AAIE,MAAA,kBAAkB,EAAE9D,kBAJtB;AAKE,MAAA,iBAAiB,EAAEC,iBALrB;AAME,MAAA,cAAc,EAAE3B,cANlB;AAOE,MAAA,iBAAiB,EAAEK,iBAPrB;AAQE,MAAA,oBAAoB,EAAEyC,oBARxB;AASE,MAAA,YAAY,EAAEhC,YAThB;AAUE,MAAA,WAAW,EAAE6C,WAVf;AAWE,MAAA,UAAU,EAAEyB,UAXd;AAYE,MAAA,SAAS,EAAED,SAZb;AAaE,MAAA,WAAW,EAAEP,WAbf;AAcE,MAAA,qBAAqB,EAAEW,qBAdzB;AAeE,MAAA,WAAW,EAAExG,WAff;AAgBE,MAAA,QAAQ,EAAES,QAhBZ;AAiBE,MAAA,sBAAsB,EAAEiG,sBAjB1B;AAkBE,MAAA,QAAQ,EAAE1H,QAlBZ;AAmBE,MAAA,WAAW,EAAE8G,WAnBf;AAoBE,MAAA,WAAW,EAAEQ,WApBf;AAqBE,MAAA,2BAA2B,EAAE5G,2BArB/B;AAsBE,MAAA,8BAA8B,EAAEC,8BAtBlC;AAuBE,MAAA,cAAc,EAAEgC,cAvBlB;AAwBE,MAAA,eAAe,EAAEQ,eAxBnB;AAyBE,MAAA,iBAAiB,EAAEO,iBAzBrB;AA0BE,MAAA,uBAAuB,EAAEnB,uBA1B3B;AA2BE,MAAA,UAAU,EAAErB,UA3Bd;AA4BE,MAAA,KAAK,EAAEqC,KA5BT;AA6BE,MAAA,gBAAgB,EAAEb,gBA7BpB;AA8BE,MAAA,SAAS,EAAEyB;AA9Bb;AAAA;AAAA;AAAA;AAAA,YADe,GAiCb,IAtHN;AAAA,kBADF;AA0HD;;GAvkBQpE,gB;UAkCkBV,W,EAgDFF,S,EAQGA,S,EAYWA,S,EA4QnBE,W;;;KAlXXU,gB;AAykBT,OAAO,MAAM6H,eAAe,gBAAG9I,KAAK,CAAC+I,IAAN,CAAW9H,gBAAX,CAAxB;MAAM6H,e","sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport { useSpring } from \"react-spring\";\r\n\r\nimport { matchTablet } from \"./DetectDevice\";\r\n\r\nimport \"./log/logCss.css\";\r\nimport { ICommentTemplate, IGrid } from \"./log/log-Interfaces\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport image1 from \"./log/images/modalpic1.png\";\r\nimport image2 from \"./log/images/modalpic2.png\";\r\nimport image3 from \"./log/images/modalpic3.png\";\r\nimport image4 from \"./log/images/modalpic4.png\";\r\nimport image5 from \"./log/images/modalpic5.png\";\r\nimport image6 from \"./log/images/modalpic6.png\";\r\nimport { ModalLogLayout } from \"./log/ModalLogLayout\";\r\nimport { ModalAboutLayout } from \"./profile/ModalAboutLayout\";\r\nimport { ModalCommentLayout } from \"./profile/ModalCommentLayout\";\r\n\r\nfunction CommentTemplatex({\r\n  formtype,\r\n  CloseModalForm,\r\n  showModalForm,\r\n  aboutTemp,\r\n  commentTemp,\r\n  updateColor,\r\n  profilex,\r\n  checkIfColorChanged,\r\n  setcheckIfColorChanged,\r\n  DiscussionImage,\r\n}: any): JSX.Element {\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW/HIDES REPEAT PASSWORD UI STATE FOR SIGN UP\r\n  const [checkSignupPasswordACTIVATE, setcheckSignupPasswordACTIVATE] =\r\n    useState<boolean>(false);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const { screenHeight } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const screenHeightReducer = screenHeight;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///MODAL ZOOMED STATE PC LOCALSTORAGE\r\n  const [zoomedModal, setZoomedModal] = useState<boolean>(false);\r\n  const [mobileZoom, setMobileZoom] = useState<boolean>(false);\r\n  useEffect(() => {\r\n    if (aboutTemp) {\r\n    } else {\r\n      let localPcZoomData = JSON.parse(localStorage.getItem(\"PcZoom\")!);\r\n      if (localPcZoomData !== null) {\r\n        setZoomedModal(localPcZoomData);\r\n      }\r\n    }\r\n  }, [zoomedModal, aboutTemp]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///HIDE LOGO Modal\r\n  const [showlogo, setShowlogo] = useState<boolean>(true);\r\n  const iconTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const iconTimerxx = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const hideLogo = () => {\r\n    setShowlogo(false);\r\n    if (iconTimer.current) {\r\n      clearTimeout(iconTimer.current);\r\n    }\r\n    if (iconTimerxx.current) {\r\n      clearTimeout(iconTimerxx.current);\r\n    }\r\n    iconTimer.current = setTimeout(function () {\r\n      setShowlogo(true);\r\n    }, 2000);\r\n    iconTimerxx.current = setTimeout(function () {\r\n      setShowlogo(false);\r\n    }, 4000);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      duration: 500,\r\n    },\r\n    opacity: showModalForm ? 1 : 0.9,\r\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`,\r\n  });\r\n\r\n  const modalanimationTwo = useSpring({\r\n    config: {\r\n      duration: 450,\r\n    },\r\n    opacity: showModalForm ? 1 : 0.9,\r\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`,\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///ANIMATE MOBILE IMAGE ON ZOOM STATE CHANGE\r\n  const mobileLogmodalanimation: any = useSpring({\r\n    config: {\r\n      duration: 20,\r\n    },\r\n    transition: \"height 1s\",\r\n    opacity: mobileZoom ? 1 : 0.98,\r\n    height: mobileZoom ? \"100%\" : matchTablet ? \"23vh\" : \"15vh\",\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// AUTO SCROLL WINDOWS AND CONTENT GRID\r\n  const contentScrollRef = useRef<any>(null);\r\n  const imagescrollRef = useRef<any>(null);\r\n\r\n  const autoScrollWindowNImage: any = useCallback(\r\n    (limiter: number) => {\r\n      if (limiter === 1) {\r\n        imagescrollRef.current.scrollTo(0, 0);\r\n        if (formtype) {\r\n          contentScrollRef.current.scrollTo(0, 45);\r\n        } else {\r\n          contentScrollRef.current.scrollTo(0, 20);\r\n        }\r\n      } else {\r\n        setTimeout(function () {\r\n          if (imagescrollRef.current && contentScrollRef.current) {\r\n            imagescrollRef.current.scrollTo(0, 0);\r\n            contentScrollRef.current.scrollTo(0, 30);\r\n          }\r\n        }, 970);\r\n      }\r\n    },\r\n    [formtype]\r\n  );\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW A  ZOOMED/LOCKED MODAL VIEW PC\r\n  const zoomlogmodal = () => {\r\n    if (checkSignupPasswordACTIVATE) {\r\n      setcheckSignupPasswordACTIVATE(false);\r\n    } else {\r\n      let toggleZoomedModal = !zoomedModal;\r\n      setZoomedModal(!zoomedModal);\r\n      hideLogo();\r\n      //LOCALSTORAGE ZOOMED STATES  FOR PC\r\n      localStorage.setItem(\"PcZoom\", toggleZoomedModal.toString());\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SHOW A  ZOOMED/LOCKED  MODAL VIEW  MOBILE(CHANGE MOBILEZOOM WITH A CLICK)\r\n  const clickMobileZoom = () => {\r\n    if (checkSignupPasswordACTIVATE) {\r\n      setcheckSignupPasswordACTIVATE(false);\r\n    } else {\r\n      if (mobileZoom) {\r\n        setCallMobileZoomLimiter(false);\r\n        setMobileZoom(false);\r\n        hideLogo();\r\n      } else {\r\n        setCallMobileZoomLimiter(true);\r\n        setMobileZoom(true);\r\n        hideLogo();\r\n      }\r\n      //setMobileZoom(!mobileZoom);\r\n      if (contentScrollRef.current && contentScrollRef) {\r\n        autoScrollWindowNImage(0);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CHANGE MOBILEZOOM WITH A SCROLL(SCROLL CHANGE LAYOUT)\r\n  const [callMobileZoomLimiter, setCallMobileZoomLimiter] =\r\n    useState<boolean>(false);\r\n  const slideTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const slide = useCallback(\r\n    (e) => {\r\n      if (contentScrollRef.current.scrollTop <= 0) {\r\n        if (!callMobileZoomLimiter) {\r\n          if (slideTimer.current) {\r\n            clearTimeout(slideTimer.current);\r\n          }\r\n          //slidertimmer makes zoom  wait for some seconds before running\r\n          slideTimer.current = setTimeout(function () {\r\n            setMobileZoom(true);\r\n            hideLogo();\r\n            setCallMobileZoomLimiter(true);\r\n          }, 720);\r\n        }\r\n      } else if (contentScrollRef.current.scrollTop >= 2) {\r\n        if (slideTimer.current) {\r\n          clearTimeout(slideTimer.current);\r\n        }\r\n        if (callMobileZoomLimiter) {\r\n          autoScrollWindowNImage(0);\r\n          setMobileZoom(false);\r\n          hideLogo();\r\n          setCallMobileZoomLimiter(false);\r\n        }\r\n      } else {\r\n      }\r\n    },\r\n    [callMobileZoomLimiter, contentScrollRef, autoScrollWindowNImage]\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///ACTIVATE MOBILE VIEW TOP SCROLL(ZOOMABLE) ON INITIAL LOAD\r\n  const mobileImageOnLoad = () => {\r\n    hideLogo();\r\n    if (contentScrollRef.current && contentScrollRef) {\r\n      autoScrollWindowNImage(1);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\r\n  const ModalBackgroundRef = useRef<HTMLInputElement>(null);\r\n  const onBackgroundFocus = (e: any): void => {\r\n    if (ModalBackgroundRef.current === e.target) {\r\n      if (aboutTemp) {\r\n        CloseModalForm(0, 1);\r\n      } else {\r\n        CloseModalForm(0, 2);\r\n      }\r\n\r\n      updateColor();\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// ESCAPE KEY CLOSE MODAL\r\n  const escapePress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Escape\" && showModalForm) {\r\n        if (aboutTemp) {\r\n          CloseModalForm(0, 1);\r\n        } else {\r\n          CloseModalForm(0, 2);\r\n        }\r\n        updateColor();\r\n      }\r\n    },\r\n    [showModalForm, CloseModalForm, updateColor]\r\n  );\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escapePress);\r\n    return () => document.removeEventListener(\"keydown\", escapePress);\r\n  }, [escapePress]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// RANDOMISE IMAGE\r\n  const [showimage, setShowimage] = useState<string>(\" \");\r\n  useEffect(() => {\r\n    let imagecontrol: number[] = [1, 2, 3, 4, 5, 6];\r\n    var result = null;\r\n    var randomimage =\r\n      imagecontrol[Math.floor(Math.random() * imagecontrol.length)];\r\n    const img = new Image(); ///new image instance\r\n    if (randomimage === 1) {\r\n      result = image1;\r\n    } else if (randomimage === 2) {\r\n      result = image2;\r\n    } else if (randomimage === 3) {\r\n      result = image3;\r\n    } else if (randomimage === 4) {\r\n      result = image4;\r\n    } else if (randomimage === 5) {\r\n      result = image5;\r\n    } else {\r\n      result = image6;\r\n    }\r\n    img.src = result; //src forces a download\r\n    setShowimage(result);\r\n  }, [showimage]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET IMAGE WIDTH ,HEIGHT AND SET WIDE IMAGE PC ONLY\r\n  const ModalSlidingImageRef = useRef<HTMLImageElement>(null);\r\n  const ModalImageRef = useRef<HTMLImageElement>(null);\r\n\r\n  const [imageHeightoverflow, setImageHeightoverflow] =\r\n    useState<boolean>(false);\r\n  const [MiniLayoutOverFlow, setMiniLayoutOverFlow] = useState<boolean>(false);\r\n\r\n  const [wideImage, setWideImage] = useState<boolean>(false);\r\n\r\n  const onloadfunc = () => {\r\n    hideLogo();\r\n    if (ModalSlidingImageRef && ModalSlidingImageRef.current) {\r\n      const imageHeight = ModalSlidingImageRef.current.clientHeight;\r\n      const imageWidth = ModalSlidingImageRef.current.clientWidth;\r\n\r\n      if (imageHeight + (imageWidth / imageHeight) * 3 > screenHeightReducer) {\r\n        setImageHeightoverflow(true);\r\n      } else {\r\n        setImageHeightoverflow(false);\r\n      }\r\n\r\n      if (imageWidth > imageHeight + (imageWidth / imageHeight) * 100) {\r\n        setWideImage(true);\r\n      } else {\r\n        setWideImage(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onimageload = useCallback(\r\n    (e: any) => {\r\n      onloadfunc();\r\n    },\r\n    [screenHeightReducer, DiscussionImage, ModalSlidingImageRef]\r\n  );\r\n\r\n  useEffect(() => {\r\n    onloadfunc();\r\n  }, [screenHeightReducer, DiscussionImage, ModalSlidingImageRef]);\r\n\r\n  const onloadfuncx = () => {\r\n    hideLogo();\r\n    if (ModalImageRef && ModalImageRef.current) {\r\n      const imageHeight = ModalImageRef.current.clientHeight;\r\n\r\n      if (imageHeight - 10 > screenHeightReducer) {\r\n        setMiniLayoutOverFlow(true);\r\n      } else {\r\n        setMiniLayoutOverFlow(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onloadfuncx();\r\n  }, [screenHeightReducer, DiscussionImage, ModalImageRef]);\r\n\r\n  const onimageloadx = useCallback(\r\n    (e: any) => {\r\n      onloadfuncx();\r\n    },\r\n    [screenHeightReducer, DiscussionImage, ModalImageRef]\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      image: string;\r\n    };\r\n  }\r\n  const { image } = useSelector((state: RootStateReducerImage) => ({\r\n    ...state.UserdataReducer,\r\n  }));\r\n  const imageReducer = image;\r\n\r\n  /// DYNAMIC MODAL LAYOUT VARIABLES\r\n  ///\r\n  ///\r\n  ///\r\n  const wideImageControlTrue: string = \"75vw\";\r\n  const wideImageControlfalse: string = \"70vw\";\r\n  const zoomImageControl: string = \"100vw\";\r\n  const GridMiniAwide: IGrid = 8;\r\n  const GridMiniBwide: IGrid = 4;\r\n  const GridMiniAlong: IGrid = 7;\r\n  const GridMiniBlong: IGrid = 5;\r\n  const GridZoomAwide: IGrid = 8;\r\n  const GridZoomBwide: IGrid = 4;\r\n  const GridZoomAlong: IGrid = 6;\r\n  const GridZoomBlong: IGrid = 6;\r\n\r\n  let GridHolderA: IGrid = 7;\r\n  let GridHolderB: IGrid = 5;\r\n\r\n  let GridxA: IGrid = 7;\r\n  let GridxB: IGrid = 5;\r\n\r\n  let GridyA: IGrid = 7;\r\n  let GridyB: IGrid = 5;\r\n\r\n  let wideImageControl: string = \"70vw\";\r\n  let imageReal: string = \"75vw\";\r\n\r\n  let borderGrid: string = \"11px\";\r\n  var WidthHolder: string = \"82%\";\r\n\r\n  var opacitySlidingModalImage = \"0\";\r\n  var zIndexModalImageSmall = 10;\r\n  var zIndexModalImageZoom = 0;\r\n  var opacityFixedModalImage = \"1\";\r\n\r\n  var slidingImageWidth = \"50%\";\r\n\r\n  if (zoomedModal) {\r\n    if (imageHeightoverflow) {\r\n      opacitySlidingModalImage = \"1\";\r\n      zIndexModalImageSmall = 0;\r\n      zIndexModalImageZoom = 10;\r\n      opacityFixedModalImage = \"0\";\r\n    }\r\n\r\n    borderGrid = \"0px\";\r\n\r\n    if (wideImage) {\r\n      slidingImageWidth = \"66%\";\r\n      WidthHolder = \"76%\";\r\n      wideImageControl = wideImageControlTrue;\r\n      GridxA = GridZoomAwide;\r\n      GridxB = GridZoomBwide;\r\n    } else {\r\n      slidingImageWidth = \"50%\";\r\n      WidthHolder = \"88%\";\r\n      wideImageControl = wideImageControlfalse;\r\n      GridxA = GridZoomAlong;\r\n      GridxB = GridZoomBlong;\r\n    }\r\n    imageReal = zoomImageControl;\r\n    GridHolderA = GridxA;\r\n    GridHolderB = GridxB;\r\n  } else {\r\n    WidthHolder = \"82%\";\r\n    borderGrid = \"11px\";\r\n\r\n    if (wideImage) {\r\n      wideImageControl = wideImageControlTrue;\r\n      GridyA = GridMiniAwide;\r\n      GridyB = GridMiniBwide;\r\n    } else {\r\n      wideImageControl = wideImageControlfalse;\r\n      GridyA = GridMiniAlong;\r\n      GridyB = GridMiniBlong;\r\n    }\r\n    imageReal = wideImageControl;\r\n    GridHolderA = GridyA;\r\n    GridHolderB = GridyB;\r\n  }\r\n  ///\r\n  ///\r\n  ///\r\n  /// DYNAMIC MODAL LAYOUT VARIABLES\r\n\r\n  return (\r\n    <>\r\n      <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\r\n\r\n      {aboutTemp ? (\r\n        showModalForm ? (\r\n          <ModalAboutLayout\r\n            setcheckIfColorChanged={setcheckIfColorChanged}\r\n            showModalForm={showModalForm}\r\n            profilex={profilex}\r\n            slidingImageWidth={slidingImageWidth}\r\n            opacitySlidingModalImage={opacitySlidingModalImage}\r\n            zIndexModalImageZoom={zIndexModalImageZoom}\r\n            ModalBackgroundRef={ModalBackgroundRef}\r\n            onBackgroundFocus={onBackgroundFocus}\r\n            modalanimation={modalanimation}\r\n            modalanimationTwo={modalanimationTwo}\r\n            ModalSlidingImageRef={ModalSlidingImageRef}\r\n            zoomlogmodal={zoomlogmodal}\r\n            onimageload={onimageload}\r\n            borderGrid={borderGrid}\r\n            imageReal={imageReal}\r\n            GridHolderA={GridHolderA}\r\n            zIndexModalImageSmall={zIndexModalImageSmall}\r\n            zoomedModal={zoomedModal}\r\n            setZoomedModal={setZoomedModal}\r\n            opacityFixedModalImage={opacityFixedModalImage}\r\n            formtype={formtype}\r\n            GridHolderB={GridHolderB}\r\n            WidthHolder={WidthHolder}\r\n            checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n            setcheckSignupPasswordACTIVATE={setcheckSignupPasswordACTIVATE}\r\n            imagescrollRef={imagescrollRef}\r\n            clickMobileZoom={clickMobileZoom}\r\n            mobileImageOnLoad={mobileImageOnLoad}\r\n            mobileLogmodalanimation={mobileLogmodalanimation}\r\n            mobileZoom={mobileZoom}\r\n            setMobileZoom={setMobileZoom}\r\n            slide={slide}\r\n            contentScrollRef={contentScrollRef}\r\n            showimage={imageReducer}\r\n          />\r\n        ) : null\r\n      ) : commentTemp ? (\r\n        <ModalCommentLayout\r\n          wideImage={wideImage}\r\n          MiniLayoutOverFlow={MiniLayoutOverFlow}\r\n          ModalImageRef={ModalImageRef}\r\n          onimageloadx={onimageloadx}\r\n          DiscussionImage={DiscussionImage}\r\n          setcheckIfColorChanged={setcheckIfColorChanged}\r\n          showModalForm={showModalForm}\r\n          profilex={profilex}\r\n          slidingImageWidth={slidingImageWidth}\r\n          opacitySlidingModalImage={opacitySlidingModalImage}\r\n          zIndexModalImageZoom={zIndexModalImageZoom}\r\n          ModalBackgroundRef={ModalBackgroundRef}\r\n          onBackgroundFocus={onBackgroundFocus}\r\n          modalanimation={modalanimation}\r\n          modalanimationTwo={modalanimationTwo}\r\n          ModalSlidingImageRef={ModalSlidingImageRef}\r\n          zoomlogmodal={zoomlogmodal}\r\n          onimageload={onimageload}\r\n          borderGrid={borderGrid}\r\n          imageReal={imageReal}\r\n          GridHolderA={GridHolderA}\r\n          zIndexModalImageSmall={zIndexModalImageSmall}\r\n          zoomedModal={zoomedModal}\r\n          setZoomedModal={setZoomedModal}\r\n          opacityFixedModalImage={opacityFixedModalImage}\r\n          formtype={formtype}\r\n          GridHolderB={GridHolderB}\r\n          WidthHolder={WidthHolder}\r\n          checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n          setcheckSignupPasswordACTIVATE={setcheckSignupPasswordACTIVATE}\r\n          imagescrollRef={imagescrollRef}\r\n          clickMobileZoom={clickMobileZoom}\r\n          mobileImageOnLoad={mobileImageOnLoad}\r\n          mobileLogmodalanimation={mobileLogmodalanimation}\r\n          mobileZoom={mobileZoom}\r\n          setMobileZoom={setMobileZoom}\r\n          slide={slide}\r\n          contentScrollRef={contentScrollRef}\r\n          showimage={DiscussionImage[0]}\r\n          imageHeightoverflow={imageHeightoverflow}\r\n        />\r\n      ) : showModalForm ? (\r\n        <ModalLogLayout\r\n          slidingImageWidth={slidingImageWidth}\r\n          opacitySlidingModalImage={opacitySlidingModalImage}\r\n          zIndexModalImageZoom={zIndexModalImageZoom}\r\n          ModalBackgroundRef={ModalBackgroundRef}\r\n          onBackgroundFocus={onBackgroundFocus}\r\n          modalanimation={modalanimation}\r\n          modalanimationTwo={modalanimationTwo}\r\n          ModalSlidingImageRef={ModalSlidingImageRef}\r\n          zoomlogmodal={zoomlogmodal}\r\n          onimageload={onimageload}\r\n          borderGrid={borderGrid}\r\n          imageReal={imageReal}\r\n          GridHolderA={GridHolderA}\r\n          zIndexModalImageSmall={zIndexModalImageSmall}\r\n          zoomedModal={zoomedModal}\r\n          showlogo={showlogo}\r\n          opacityFixedModalImage={opacityFixedModalImage}\r\n          formtype={formtype}\r\n          GridHolderB={GridHolderB}\r\n          WidthHolder={WidthHolder}\r\n          checkSignupPasswordACTIVATE={checkSignupPasswordACTIVATE}\r\n          setcheckSignupPasswordACTIVATE={setcheckSignupPasswordACTIVATE}\r\n          imagescrollRef={imagescrollRef}\r\n          clickMobileZoom={clickMobileZoom}\r\n          mobileImageOnLoad={mobileImageOnLoad}\r\n          mobileLogmodalanimation={mobileLogmodalanimation}\r\n          mobileZoom={mobileZoom}\r\n          slide={slide}\r\n          contentScrollRef={contentScrollRef}\r\n          showimage={showimage}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const CommentTemplate = React.memo(CommentTemplatex);\r\n"]},"metadata":{},"sourceType":"module"}