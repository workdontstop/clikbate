{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\Slider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback, useEffect, useLayoutEffect } from \"react\";\nimport { Arrow } from \"./Arrow\";\nimport { Dots } from \"./Dots\";\nimport { SliderNumber } from \"./SliderNumber\";\nimport { Grid } from \"@material-ui/core\";\nimport { animated, useTransition } from \"react-spring\";\nimport { useSelector } from \"react-redux\";\nimport ZoomOutIcon from \"@mui/icons-material/ZoomOut\";\nimport { Loader } from \"./Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Sliderx({\n  slides,\n  slidesThumb,\n  pey,\n  addPostItemsRef,\n  itemheight,\n  onPostsItemClicked,\n  onPostsItemload,\n  post,\n  itemFinalPostHeight,\n  itemOriginalPostHeight,\n  itemcroptype,\n  itemCLICKED,\n  setActiveAutoPlay,\n  AUTOSlideLongImages,\n  clickslider,\n  stopSlider,\n  SliderAutoPlay,\n  showSliderLoader,\n  setshowSliderLoader,\n  autoPlayTimer,\n  sliderIndex,\n  setSliderIndex,\n  sliderIndexSlow,\n  setSliderIndexSlow,\n  length,\n  startSlider,\n  ActiveAutoPlay,\n  type,\n  setminiProfile,\n  miniProfile,\n  setzoomClickedIndex,\n  setsliderIndexMini,\n  postDatainnerInteraction1,\n  postDatainnerInteraction2,\n  postItemsRef,\n  ActiveCanvas\n}) {\n  _s();\n\n  const [sliderDuration] = useState(1500);\n  const aRef = useRef(null);\n  var allow4dev = \"\";\n  const {\n    REACT_APP_APPX_STATE\n  } = process.env;\n\n  if (REACT_APP_APPX_STATE === \"dev\") {\n    allow4dev = \"http://localhost:1000\";\n  } else {\n    allow4dev = \"\";\n  } /// const getWidth = () => window.innerWidth;\n  ///var newGetWidth = getWidth() * slides.length;\n\n\n  const waitChangeIndexTimer = useRef(null);\n  const handleTouchMoveTimer = useRef(null);\n  const callAutoPlayAgainTimer = useRef(null);\n  const SlideimageRef = useRef(null);\n  const SlideimageRefthumb = useRef(null);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [touchPosition, setTouchPosition] = useState(null);\n  const [ZoomOutBigger, setZoomOutBigger] = useState(false);\n  const [miniH, setminiH] = useState(50); ///\n  ///\n  ///\n  ///\n\n  const {\n    ActiveId\n  } = useSelector(state => ({ ...state.ActiveAutoPlayReducer\n  }));\n  const ActiveIdReducer = ActiveId; ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype;\n  var colorx = colortypeReducer === 0 ? darkmodeReducer ? colorReducerdark : colorReducer : colorReducer;\n  useEffect(() => {\n    if (ActiveAutoPlay[pey]) {\n      setTimeout(function () {\n        stopSlider(0);\n      }, 1500);\n    }\n  }, [ActiveAutoPlay[pey]]);\n  var autoSlideDisplay = \"none\";\n  var sliderLoader = \"\";\n\n  if (showSliderLoader) {\n    autoSlideDisplay = \"none\";\n    sliderLoader = \"\";\n  } else {\n    autoSlideDisplay = \"block\";\n    sliderLoader = \"superloaderAutoSlider\";\n  } ///\n  ///\n  ///\n  /// SPRING TRANSITION WITH INDEX\n\n\n  const transitions = useTransition(sliderIndex, {\n    key: sliderIndex,\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    config: {\n      duration: sliderDuration - 50\n    }\n  }); ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\n\n  const sliderFirstImageOnLoad = item => {\n    if (item === 0) {\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\n        setImageHeight(SlideimageRef.current.clientHeight);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\n\n\n  const sliderFirstImageOnLoadthumb = item => {\n    if (item === 0 && imageHeight === 0) {\n      if (SlideimageRefthumb.current && SlideimageRefthumb.current.clientHeight) {\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\n      }\n    }\n  };\n\n  const [showIntImage, setshowIntImage] = useState(false);\n  const [HasInteractivity, setHasInteractivity] = useState(false);\n\n  const containsURL = str => {\n    // Regular expression pattern to match URLs (simplified, not covering all cases)\n    const urlPattern = /(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*/i; // Test if the string contains a URL using the regular expression\n\n    return urlPattern.test(str);\n  };\n\n  useEffect(() => {\n    //console.log(postDatainnerInteraction1[0])\n    postDatainnerInteraction1.map((str, index) => {\n      if (containsURL(str)) {\n        setHasInteractivity(true);\n      }\n    });\n    postDatainnerInteraction2.map((str, index) => {\n      if (containsURL(str)) {\n        setHasInteractivity(true);\n      }\n    });\n  }, [postDatainnerInteraction1, postDatainnerInteraction2]);\n  const [data, setdata] = useState(null);\n  const [canvasInteractWidth, setcanvasInteractWidth] = useState(0);\n  const [imageWidthcss, setimageWidthcss] = useState(0);\n  const [imageHeightcss, setimageHeightcss] = useState(0);\n  const canvasRefIn = useRef(null);\n  const callInteract = useCallback(() => {\n    var context = canvasRefIn.current.getContext(\"2d\");\n    context.clearRect(0, 0, canvasRefIn.current.width, canvasRefIn.current.height);\n    const previewFileReadimage = new Image();\n    previewFileReadimage.src = slides[sliderIndex];\n\n    previewFileReadimage.onload = function () {\n      /// alert(sliderIndex)\n      if (data === previewFileReadimage) {} else {\n        setdata(previewFileReadimage);\n      }\n\n      var ratio = previewFileReadimage.naturalHeight / previewFileReadimage.naturalWidth;\n      var width = window.innerHeight / ratio;\n      setcanvasInteractWidth(width);\n      setimageWidthcss(postItemsRef.current[pey].clientWidth);\n      setimageHeightcss(postItemsRef.current[pey].clientHeight); ///use this\n    };\n  }, [slides, canvasRefIn, sliderIndex, postItemsRef]);\n  useLayoutEffect(() => {\n    if (data) {\n      drawInteraction();\n    }\n  }, [data]);\n  useLayoutEffect(() => {\n    if (itemCLICKED[pey]) {\n      if (HasInteractivity) {\n        if (showIntImage) {} else {\n          ////load interact image\n          setshowIntImage(true);\n        }\n\n        callInteract();\n      } ////check for interaction and display canvas image flip\n\n    }\n  }, [itemCLICKED[pey], HasInteractivity, showIntImage]);\n  const drawInteraction = useCallback(() => {\n    if (canvasRefIn.current) {\n      var context = canvasRefIn.current.getContext(\"2d\");\n      canvasRefIn.current.height = window.innerHeight;\n      canvasRefIn.current.width = canvasInteractWidth;\n      requestAnimationFrame(() => {\n        context.drawImage(data, 0, 0, canvasInteractWidth, window.innerHeight);\n        canvasRefIn.current.style.width = `${imageWidthcss}px`;\n        canvasRefIn.current.style.height = `${imageHeightcss}px`;\n      });\n    }\n  }, [data, imageWidthcss, imageHeightcss]); ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n  const handleTouchStart = e => {\n    if (itemCLICKED[pey]) {\n      ////onMouseDown onMouseMove\n      ////touchDown = e.clientX\n      const touchDown = e.touches[0].clientX;\n      setTouchPosition(touchDown);\n    }\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH MOVE EVENT\n\n\n  const handleTouchMove = e => {\n    if (itemCLICKED[pey]) {\n      if (handleTouchMoveTimer.current) {\n        clearTimeout(handleTouchMoveTimer.current);\n      }\n\n      handleTouchMoveTimer.current = setTimeout(function () {\n        const touchDown = touchPosition;\n\n        if (touchDown === null) {\n          return;\n        } ////currentTouch = e.clientX\n\n\n        const currentTouch = e.touches[0].clientX;\n        const diff = touchDown - currentTouch;\n\n        if (diff > 40) {\n          nextSlide();\n        } else if (diff < -40) {\n          prevSlide();\n        } else {}\n\n        setTouchPosition(null);\n        return false;\n      }, 200);\n      return false;\n    }\n  }; ///\n  ///\n  ///\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\n\n\n  const waitChangeIndex = (data, state) => {\n    if (waitChangeIndexTimer.current) {\n      clearTimeout(waitChangeIndexTimer.current);\n    }\n\n    waitChangeIndexTimer.current = setTimeout(function () {\n      setSliderIndexSlow(state => data);\n    }, 500);\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE\n\n\n  const nextSlide = () => {\n    AUTOSlideLongImages(pey);\n\n    if (ActiveAutoPlay[pey]) {} else {\n      setshowSliderLoader(true);\n\n      if (autoPlayTimer.current) {\n        clearTimeout(autoPlayTimer.current);\n      }\n    } ///set((state) => (state + 1) % slides.length);\n\n\n    if (sliderIndex === slides.length - 1) {\n      setSliderIndex(sliderIndex => 0);\n      waitChangeIndex(0, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex + 1);\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\n    }\n\n    if (ActiveAutoPlay[pey]) {} else {\n      if (callAutoPlayAgainTimer.current) {\n        clearTimeout(callAutoPlayAgainTimer.current);\n      }\n\n      callAutoPlayAgainTimer.current = setTimeout(function () {\n        SliderAutoPlay(1);\n      }, sliderDuration);\n    }\n  }; ///\n  ///\n  ///\n  /// PREV SLIDE\n\n\n  const prevSlide = () => {\n    AUTOSlideLongImages(pey);\n\n    if (ActiveAutoPlay[pey]) {} else {\n      setshowSliderLoader(true);\n\n      if (autoPlayTimer.current) {\n        clearTimeout(autoPlayTimer.current);\n      }\n    }\n\n    if (sliderIndex === 0) {\n      setSliderIndex(sliderIndex => slides.length - 1);\n      waitChangeIndex(slides.length - 1, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex - 1);\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\n    }\n\n    if (ActiveAutoPlay[pey]) {} else {\n      if (callAutoPlayAgainTimer.current) {\n        clearTimeout(callAutoPlayAgainTimer.current);\n      }\n\n      callAutoPlayAgainTimer.current = setTimeout(function () {\n        SliderAutoPlay(1);\n      }, sliderDuration);\n    }\n  }; ///\n  ///\n  ///\n  /// CHANGE SLIDER CONTENT USING  DOTS\n\n\n  const GotoDots = clickedDot => {\n    setSliderIndex(sliderIndex => clickedDot);\n    waitChangeIndex(clickedDot, sliderIndex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      xs: 12,\n      style: {\n        position: \"relative\",\n        height: itemCLICKED[pey] ? `${itemOriginalPostHeight[pey]}px` : type === 1 ? `${itemOriginalPostHeight[pey]}px` : `${itemFinalPostHeight[pey]}px`,\n        padding: \"0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Loader, {\n        post: post,\n        autoSlideDisplay: autoSlideDisplay,\n        sliderLoader: sliderLoader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseOver: () => {\n          setZoomOutBigger(true);\n        },\n        onMouseOut: () => {\n          setZoomOutBigger(false);\n        },\n        style: {\n          position: \"absolute\",\n          zIndex: 30,\n          left: slides.length > 1 ? 165 : 25,\n          cursor: \"pointer\",\n          top: slides.length > 1 ? \"2.4vh\" : \"2.4vh\",\n          fontFamily: \"Arial, Helvetica, sans-serif\",\n          fontWeight: \"bolder\",\n          opacity: \"0.7\",\n          height: \"0px\",\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            setsliderIndexMini(sliderIndex);\n            setzoomClickedIndex(pey + 1);\n            type === 1 ? setminiProfile(false) : setminiProfile(true);\n          },\n          className: darkmodeReducer ? \"turlight\" : \"turdark\",\n          style: {\n            padding: \"1px\",\n            color: \"#ffffff\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ZoomOutIcon, {\n            className: darkmodeReducer ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-lightab  dontallowhighlighting zuperkingIcon  \",\n            style: {\n              fontSize: \"2.2vw\",\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), \" \", slides.length > 0 ? /*#__PURE__*/_jsxDEV(SliderNumber, {\n        HasInteractivity: HasInteractivity,\n        postDatainnerInteraction1: postDatainnerInteraction1,\n        postDatainnerInteraction2: postDatainnerInteraction2,\n        startSlider: startSlider,\n        ActiveAutoPlay: ActiveAutoPlay,\n        stopSlider: stopSlider,\n        activeSlide: sliderIndexSlow,\n        total: slides.length,\n        itemCLICKED: itemCLICKED,\n        pey: pey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Arrow, {\n        itemCLICKED: itemCLICKED,\n        pey: pey,\n        total: slides.length,\n        direction: \"left\",\n        clickSlideprev: prevSlide,\n        clickSlidenext: nextSlide,\n        itemOriginalPostHeight: itemOriginalPostHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this), transitions((style, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(animated.img, {\n          onLoad: e => {\n            onPostsItemload(e, pey, i);\n          },\n          onMouseDown: clickslider,\n          ref: addPostItemsRef,\n          className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n          src: slidesThumb[i],\n          alt: \"a superstarz post \",\n          style: { ...style,\n            cursor: \"pointer\",\n            width: \"100%\",\n            height: type === 1 ? `auto` : itemheight[pey],\n            position: \"absolute\",\n            padding: \"0px\",\n            objectFit: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"cover\" : \"cover\",\n            objectPosition: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"50% top\" : \"50% 50\",\n            zIndex: 0,\n            float: \"left\",\n            filter: \"blur(0px)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(animated.img, {\n          onLoad: e => {\n            onPostsItemload(e, pey, i);\n          },\n          onMouseDown: clickslider,\n          className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n          src: slides[i],\n          alt: \"a superstarz post \",\n          style: { ...style,\n            cursor: \"pointer\",\n            width: \"100%\",\n            height: type === 1 ? `auto` : itemheight[pey],\n            position: \"absolute\",\n            padding: \"0px\",\n            objectFit: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"cover\" : \"cover\",\n            objectPosition: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"50% top\" : \"50% 50\",\n            zIndex: 1,\n            float: \"left\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 13\n        }, this), i === 0 && HasInteractivity && ActiveCanvas === post.id ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: afref,\n          style: {\n            padding: \"0px\",\n            position: 'relative',\n            zIndex: 11,\n            top: '0vh',\n            backgroundColor: 'red',\n            margin: 'auto',\n            display: itemCLICKED[pey] ? 'block' : 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 72\n        }, this) : null]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 11\n      }, this)), \" \", /*#__PURE__*/_jsxDEV(Dots, {\n        total: slides.length,\n        itemCLICKED: itemCLICKED,\n        pey: pey,\n        GotoDots: GotoDots,\n        slides: slides,\n        activeSlide: sliderIndexSlow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }, this), showIntImage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          //src={addedImagex ? addedImagex : null}\n          style: {\n            width: \"30%\",\n            height: \"auto\",\n            cursor: \"pointer\",\n            position: \"fixed\",\n            top: \"20000vh\",\n            backgroundColor: \"#00ccff\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this)\n      }, void 0, false) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Sliderx, \"wxCtorZDDS0FJB6746ydHhZJPlk=\", false, function () {\n  return [useSelector, useSelector, useSelector, useTransition];\n});\n\n_c = Sliderx;\nexport const Slider = /*#__PURE__*/React.memo(Sliderx);\n_c2 = Slider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Sliderx\");\n$RefreshReg$(_c2, \"Slider\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/Slider.tsx"],"names":["React","useState","useRef","useCallback","useEffect","useLayoutEffect","Arrow","Dots","SliderNumber","Grid","animated","useTransition","useSelector","ZoomOutIcon","Loader","Sliderx","slides","slidesThumb","pey","addPostItemsRef","itemheight","onPostsItemClicked","onPostsItemload","post","itemFinalPostHeight","itemOriginalPostHeight","itemcroptype","itemCLICKED","setActiveAutoPlay","AUTOSlideLongImages","clickslider","stopSlider","SliderAutoPlay","showSliderLoader","setshowSliderLoader","autoPlayTimer","sliderIndex","setSliderIndex","sliderIndexSlow","setSliderIndexSlow","length","startSlider","ActiveAutoPlay","type","setminiProfile","miniProfile","setzoomClickedIndex","setsliderIndexMini","postDatainnerInteraction1","postDatainnerInteraction2","postItemsRef","ActiveCanvas","sliderDuration","aRef","allow4dev","REACT_APP_APPX_STATE","process","env","waitChangeIndexTimer","handleTouchMoveTimer","callAutoPlayAgainTimer","SlideimageRef","SlideimageRefthumb","imageHeight","setImageHeight","touchPosition","setTouchPosition","ZoomOutBigger","setZoomOutBigger","miniH","setminiH","ActiveId","state","ActiveAutoPlayReducer","ActiveIdReducer","darkmode","GlobalReducer","darkmodeReducer","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","colorx","setTimeout","autoSlideDisplay","sliderLoader","transitions","key","from","opacity","enter","leave","config","duration","sliderFirstImageOnLoad","item","current","clientHeight","sliderFirstImageOnLoadthumb","showIntImage","setshowIntImage","HasInteractivity","setHasInteractivity","containsURL","str","urlPattern","test","map","index","data","setdata","canvasInteractWidth","setcanvasInteractWidth","imageWidthcss","setimageWidthcss","imageHeightcss","setimageHeightcss","canvasRefIn","callInteract","context","getContext","clearRect","width","height","previewFileReadimage","Image","src","onload","ratio","naturalHeight","naturalWidth","window","innerHeight","clientWidth","drawInteraction","requestAnimationFrame","drawImage","style","handleTouchStart","e","touchDown","touches","clientX","handleTouchMove","clearTimeout","currentTouch","diff","nextSlide","prevSlide","waitChangeIndex","GotoDots","clickedDot","position","padding","zIndex","left","cursor","top","fontFamily","fontWeight","fontSize","display","i","objectFit","objectPosition","float","filter","id","afref","backgroundColor","margin","Slider","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useEffect, useLayoutEffect } from \"react\";\r\nimport { Arrow } from \"./Arrow\";\r\nimport { Dots } from \"./Dots\";\r\nimport { SliderNumber } from \"./SliderNumber\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { animated, useTransition } from \"react-spring\";\r\nimport { RootStateOrAny, useSelector } from \"react-redux\";\r\nimport { matchMobile, matchPc, matchTablet } from \"../DetectDevice\";\r\nimport ZoomOutIcon from \"@mui/icons-material/ZoomOut\";\r\nimport { Loader } from \"./Loader\";\r\n\r\nfunction Sliderx({\r\n  slides,\r\n  slidesThumb,\r\n  pey,\r\n  addPostItemsRef,\r\n  itemheight,\r\n  onPostsItemClicked,\r\n  onPostsItemload,\r\n  post,\r\n  itemFinalPostHeight,\r\n  itemOriginalPostHeight,\r\n  itemcroptype,\r\n  itemCLICKED,\r\n  setActiveAutoPlay,\r\n  AUTOSlideLongImages,\r\n  clickslider,\r\n  stopSlider,\r\n  SliderAutoPlay,\r\n  showSliderLoader,\r\n  setshowSliderLoader,\r\n  autoPlayTimer,\r\n  sliderIndex,\r\n  setSliderIndex,\r\n  sliderIndexSlow,\r\n  setSliderIndexSlow,\r\n  length,\r\n  startSlider,\r\n  ActiveAutoPlay,\r\n  type,\r\n  setminiProfile,\r\n  miniProfile,\r\n  setzoomClickedIndex,\r\n  setsliderIndexMini,\r\n  postDatainnerInteraction1,\r\n  postDatainnerInteraction2,\r\n  postItemsRef,\r\n  ActiveCanvas\r\n}: any): JSX.Element {\r\n  const [sliderDuration] = useState(1500);\r\n\r\n  const aRef: any = useRef(null);\r\n\r\n  var allow4dev = \"\";\r\n  const { REACT_APP_APPX_STATE } = process.env;\r\n\r\n  if (REACT_APP_APPX_STATE === \"dev\") {\r\n    allow4dev = \"http://localhost:1000\";\r\n  } else {\r\n    allow4dev = \"\";\r\n  }\r\n\r\n  /// const getWidth = () => window.innerWidth;\r\n  ///var newGetWidth = getWidth() * slides.length;\r\n\r\n  const waitChangeIndexTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const handleTouchMoveTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const callAutoPlayAgainTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const SlideimageRef = useRef<HTMLImageElement>(null);\r\n\r\n  const SlideimageRefthumb = useRef<HTMLImageElement>(null);\r\n\r\n  const [imageHeight, setImageHeight] = useState(0);\r\n  const [touchPosition, setTouchPosition] = useState(null);\r\n\r\n  const [ZoomOutBigger, setZoomOutBigger] = useState<boolean>(false);\r\n\r\n  const [miniH, setminiH] = useState<number>(50);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n  interface RootStateActiveAutoPlayReducer {\r\n    ActiveAutoPlayReducer: {\r\n      ActiveId: number;\r\n    };\r\n  }\r\n  const { ActiveId } = useSelector((state: RootStateActiveAutoPlayReducer) => ({\r\n    ...state.ActiveAutoPlayReducer,\r\n  }));\r\n\r\n  const ActiveIdReducer = ActiveId;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  var colorx =\r\n    colortypeReducer === 0\r\n      ? darkmodeReducer\r\n        ? colorReducerdark\r\n        : colorReducer\r\n      : colorReducer;\r\n\r\n  useEffect(() => {\r\n    if (ActiveAutoPlay[pey]) {\r\n      setTimeout(function () {\r\n        stopSlider(0);\r\n      }, 1500);\r\n\r\n    }\r\n  }, [ActiveAutoPlay[pey]]);\r\n\r\n  var autoSlideDisplay = \"none\";\r\n  var sliderLoader = \"\";\r\n\r\n  if (showSliderLoader) {\r\n    autoSlideDisplay = \"none\";\r\n    sliderLoader = \"\";\r\n  } else {\r\n    autoSlideDisplay = \"block\";\r\n    sliderLoader = \"superloaderAutoSlider\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SPRING TRANSITION WITH INDEX\r\n  const transitions = useTransition(sliderIndex, {\r\n    key: sliderIndex,\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n    config: { duration: sliderDuration - 50 },\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\r\n  const sliderFirstImageOnLoad = (item: number) => {\r\n    if (item === 0) {\r\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\r\n        setImageHeight(SlideimageRef.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\r\n  const sliderFirstImageOnLoadthumb = (item: number) => {\r\n    if (item === 0 && imageHeight === 0) {\r\n      if (\r\n        SlideimageRefthumb.current &&\r\n        SlideimageRefthumb.current.clientHeight\r\n      ) {\r\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const [showIntImage, setshowIntImage] = useState(false)\r\n\r\n  const [HasInteractivity, setHasInteractivity] = useState(false);\r\n\r\n  const containsURL = (str: any) => {\r\n    // Regular expression pattern to match URLs (simplified, not covering all cases)\r\n    const urlPattern = /(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*/i;\r\n\r\n    // Test if the string contains a URL using the regular expression\r\n    return urlPattern.test(str);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //console.log(postDatainnerInteraction1[0])\r\n\r\n    postDatainnerInteraction1.map((str: any, index: any) => {\r\n      if (containsURL(str)) {\r\n        setHasInteractivity(true)\r\n      }\r\n    })\r\n\r\n    postDatainnerInteraction2.map((str: any, index: any) => {\r\n      if (containsURL(str)) {\r\n        setHasInteractivity(true)\r\n      }\r\n    })\r\n\r\n\r\n\r\n  }, [postDatainnerInteraction1, postDatainnerInteraction2])\r\n\r\n  const [data, setdata] = useState(null);\r\n  const [canvasInteractWidth, setcanvasInteractWidth] = useState(0);\r\n  const [imageWidthcss, setimageWidthcss] = useState(0);\r\n  const [imageHeightcss, setimageHeightcss] = useState(0);\r\n\r\n  const canvasRefIn: any = useRef(null);\r\n\r\n  const callInteract = useCallback(() => {\r\n\r\n    var context = canvasRefIn.current.getContext(\"2d\");\r\n    context.clearRect(0, 0, canvasRefIn.current.width, canvasRefIn.current.height);\r\n    const previewFileReadimage: any = new Image();\r\n\r\n\r\n    previewFileReadimage.src = slides[sliderIndex];\r\n\r\n    previewFileReadimage.onload = function () {\r\n      /// alert(sliderIndex)\r\n      if (data === previewFileReadimage) {\r\n      } else {\r\n        setdata(previewFileReadimage)\r\n      }\r\n      var ratio =\r\n        previewFileReadimage.naturalHeight / previewFileReadimage.naturalWidth;\r\n      var width = window.innerHeight / ratio;\r\n      setcanvasInteractWidth(width);\r\n      setimageWidthcss(postItemsRef.current[pey].clientWidth)\r\n      setimageHeightcss(postItemsRef.current[pey].clientHeight)\r\n      ///use this\r\n    };\r\n\r\n\r\n  }, [slides, canvasRefIn, sliderIndex, postItemsRef]);\r\n\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    if (data) {\r\n      drawInteraction();\r\n    }\r\n  }, [data]);\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    if (itemCLICKED[pey]) {\r\n\r\n\r\n      if (HasInteractivity) {\r\n        if (showIntImage) { } else {\r\n          ////load interact image\r\n          setshowIntImage(true);\r\n        }\r\n        callInteract();\r\n      }\r\n      ////check for interaction and display canvas image flip\r\n    }\r\n  }, [itemCLICKED[pey], HasInteractivity, showIntImage]);\r\n\r\n\r\n  const drawInteraction = useCallback(() => {\r\n\r\n    if (canvasRefIn.current) {\r\n      var context = canvasRefIn.current.getContext(\"2d\");\r\n\r\n\r\n\r\n      canvasRefIn.current.height = window.innerHeight;\r\n      canvasRefIn.current.width = canvasInteractWidth;\r\n\r\n\r\n      requestAnimationFrame(() => {\r\n        context.drawImage(data, 0, 0, canvasInteractWidth, window.innerHeight);\r\n\r\n\r\n\r\n\r\n        canvasRefIn.current.style.width = `${imageWidthcss}px`;\r\n        canvasRefIn.current.style.height = `${imageHeightcss}px`;\r\n      });\r\n\r\n    }\r\n\r\n  }, [data, imageWidthcss, imageHeightcss]);\r\n\r\n\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const handleTouchStart = (e: any) => {\r\n    if (itemCLICKED[pey]) {\r\n      ////onMouseDown onMouseMove\r\n      ////touchDown = e.clientX\r\n      const touchDown = e.touches[0].clientX;\r\n      setTouchPosition(touchDown);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH MOVE EVENT\r\n  const handleTouchMove = (e: any) => {\r\n    if (itemCLICKED[pey]) {\r\n      if (handleTouchMoveTimer.current) {\r\n        clearTimeout(handleTouchMoveTimer.current);\r\n      }\r\n      handleTouchMoveTimer.current = setTimeout(function () {\r\n        const touchDown = touchPosition;\r\n\r\n        if (touchDown === null) {\r\n          return;\r\n        }\r\n        ////currentTouch = e.clientX\r\n        const currentTouch = e.touches[0].clientX;\r\n        const diff = touchDown - currentTouch;\r\n\r\n        if (diff > 40) {\r\n          nextSlide();\r\n        } else if (diff < -40) {\r\n          prevSlide();\r\n        } else {\r\n        }\r\n\r\n        setTouchPosition(null);\r\n        return false;\r\n      }, 200);\r\n\r\n      return false;\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\r\n  const waitChangeIndex = (data: number, state: any) => {\r\n    if (waitChangeIndexTimer.current) {\r\n      clearTimeout(waitChangeIndexTimer.current);\r\n    }\r\n    waitChangeIndexTimer.current = setTimeout(function () {\r\n      setSliderIndexSlow((state: any) => data);\r\n    }, 500);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const nextSlide = () => {\r\n    AUTOSlideLongImages(pey);\r\n\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      setshowSliderLoader(true);\r\n      if (autoPlayTimer.current) {\r\n        clearTimeout(autoPlayTimer.current);\r\n      }\r\n    }\r\n\r\n    ///set((state) => (state + 1) % slides.length);\r\n    if (sliderIndex === slides.length - 1) {\r\n      setSliderIndex((sliderIndex: any) => 0);\r\n      waitChangeIndex(0, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex: any) => sliderIndex + 1);\r\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\r\n    }\r\n\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      if (callAutoPlayAgainTimer.current) {\r\n        clearTimeout(callAutoPlayAgainTimer.current);\r\n      }\r\n      callAutoPlayAgainTimer.current = setTimeout(function () {\r\n        SliderAutoPlay(1);\r\n      }, sliderDuration);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PREV SLIDE\r\n  const prevSlide = () => {\r\n    AUTOSlideLongImages(pey);\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      setshowSliderLoader(true);\r\n      if (autoPlayTimer.current) {\r\n        clearTimeout(autoPlayTimer.current);\r\n      }\r\n    }\r\n\r\n    if (sliderIndex === 0) {\r\n      setSliderIndex((sliderIndex: any) => slides.length - 1);\r\n      waitChangeIndex(slides.length - 1, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex: any) => sliderIndex - 1);\r\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\r\n    }\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      if (callAutoPlayAgainTimer.current) {\r\n        clearTimeout(callAutoPlayAgainTimer.current);\r\n      }\r\n      callAutoPlayAgainTimer.current = setTimeout(function () {\r\n        SliderAutoPlay(1);\r\n      }, sliderDuration);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// CHANGE SLIDER CONTENT USING  DOTS\r\n  const GotoDots = (clickedDot: number) => {\r\n    setSliderIndex((sliderIndex: any) => clickedDot);\r\n    waitChangeIndex(clickedDot, sliderIndex);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        item\r\n        onTouchStart={handleTouchStart}\r\n        onTouchMove={handleTouchMove}\r\n        xs={12}\r\n        style={{\r\n          position: \"relative\",\r\n          height: itemCLICKED[pey]\r\n            ? `${itemOriginalPostHeight[pey]}px`\r\n            : type === 1\r\n              ? `${itemOriginalPostHeight[pey]}px`\r\n              : `${itemFinalPostHeight[pey]}px`,\r\n          padding: \"0px\",\r\n        }}\r\n      >\r\n        <Loader\r\n          post={post}\r\n          autoSlideDisplay={autoSlideDisplay}\r\n          sliderLoader={sliderLoader}\r\n        />\r\n        <div\r\n          onMouseOver={() => {\r\n            setZoomOutBigger(true);\r\n          }}\r\n          onMouseOut={() => {\r\n            setZoomOutBigger(false);\r\n          }}\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 30,\r\n            left: slides.length > 1 ? 165 : 25,\r\n            cursor: \"pointer\",\r\n            top: slides.length > 1 ? \"2.4vh\" : \"2.4vh\",\r\n            fontFamily: \"Arial, Helvetica, sans-serif\",\r\n            fontWeight: \"bolder\",\r\n            opacity: \"0.7\",\r\n            height: \"0px\",\r\n            padding: \"0px\",\r\n          }}\r\n        >\r\n          <span\r\n            onClick={() => {\r\n              setsliderIndexMini(sliderIndex);\r\n              setzoomClickedIndex(pey + 1);\r\n              type === 1 ? setminiProfile(false) : setminiProfile(true);\r\n            }}\r\n            className={darkmodeReducer ? \"turlight\" : \"turdark\"}\r\n            style={{\r\n              padding: \"1px\",\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            <ZoomOutIcon\r\n              className={\r\n                darkmodeReducer\r\n                  ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \"\r\n                  : \"make-small-icons-clickable-lightab  dontallowhighlighting zuperkingIcon  \"\r\n              }\r\n              style={{\r\n                fontSize: \"2.2vw\",\r\n                display: \"none\",\r\n              }}\r\n            />\r\n          </span>\r\n        </div>{\" \"}\r\n        {slides.length > 0 ? (\r\n          <SliderNumber\r\n            HasInteractivity={HasInteractivity}\r\n            postDatainnerInteraction1={postDatainnerInteraction1}\r\n            postDatainnerInteraction2={postDatainnerInteraction2}\r\n            startSlider={startSlider}\r\n            ActiveAutoPlay={ActiveAutoPlay}\r\n            stopSlider={stopSlider}\r\n            activeSlide={sliderIndexSlow}\r\n            total={slides.length}\r\n            itemCLICKED={itemCLICKED}\r\n            pey={pey}\r\n\r\n          />\r\n        ) : null}\r\n        <Arrow\r\n          itemCLICKED={itemCLICKED}\r\n          pey={pey}\r\n          total={slides.length}\r\n          direction=\"left\"\r\n          clickSlideprev={prevSlide}\r\n          clickSlidenext={nextSlide}\r\n          itemOriginalPostHeight={itemOriginalPostHeight}\r\n        />\r\n        {transitions((style, i) => (\r\n          <div key={i}>\r\n            <animated.img\r\n              onLoad={(e: any) => {\r\n                onPostsItemload(e, pey, i);\r\n              }}\r\n              onMouseDown={clickslider}\r\n              ref={addPostItemsRef}\r\n              className={\r\n                darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n              }\r\n              src={slidesThumb[i]}\r\n              alt=\"a superstarz post \"\r\n              style={{\r\n                ...style,\r\n                cursor: \"pointer\",\r\n                width: \"100%\",\r\n                height: type === 1 ? `auto` : itemheight[pey],\r\n                position: \"absolute\",\r\n                padding: \"0px\",\r\n                objectFit:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"cover\"\r\n                    : \"cover\",\r\n                objectPosition:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"50% top\"\r\n                    : \"50% 50\",\r\n                zIndex: 0,\r\n                float: \"left\",\r\n                filter: \"blur(0px)\",\r\n              }}\r\n            />\r\n            <animated.img\r\n              onLoad={(e: any) => {\r\n                onPostsItemload(e, pey, i);\r\n              }}\r\n              onMouseDown={clickslider}\r\n              className={\r\n                darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n              }\r\n              src={slides[i]}\r\n              alt=\"a superstarz post \"\r\n              style={{\r\n                ...style,\r\n                cursor: \"pointer\",\r\n                width: \"100%\",\r\n                height: type === 1 ? `auto` : itemheight[pey],\r\n                position: \"absolute\",\r\n                padding: \"0px\",\r\n                objectFit:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"cover\"\r\n                    : \"cover\",\r\n                objectPosition:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"50% top\"\r\n                    : \"50% 50\",\r\n                zIndex: 1,\r\n                float: \"left\",\r\n              }}\r\n            />\r\n\r\n            {i === 0 && HasInteractivity && ActiveCanvas === post.id ? <canvas\r\n              ref={afref}\r\n              style={{\r\n                padding: \"0px\",\r\n                position: 'relative',\r\n                zIndex: 11,\r\n                top: '0vh',\r\n                backgroundColor: 'red',\r\n                margin: 'auto',\r\n                display: itemCLICKED[pey] ? 'block' : 'none'\r\n\r\n              }}\r\n            /> : null}\r\n\r\n\r\n          </div>\r\n        ))}{\" \"}\r\n        <Dots\r\n          total={slides.length}\r\n          itemCLICKED={itemCLICKED}\r\n          pey={pey}\r\n          GotoDots={GotoDots}\r\n          slides={slides}\r\n          activeSlide={sliderIndexSlow}\r\n        />\r\n\r\n\r\n\r\n        {showIntImage ? <>\r\n          <img\r\n            //src={addedImagex ? addedImagex : null}\r\n            style={{\r\n              width: \"30%\",\r\n              height: \"auto\",\r\n              cursor: \"pointer\",\r\n              position: \"fixed\",\r\n              top: \"20000vh\",\r\n              backgroundColor: \"#00ccff\",\r\n            }}\r\n          />\r\n\r\n        </> : null}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Slider = React.memo(Sliderx);\r\n"]},"metadata":{},"sourceType":"module"}