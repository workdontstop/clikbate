{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\Clikbate\\\\src\\\\upload\\\\VideoEditor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VideoEditorx({\n  VideoUrl,\n  VideoUrl2,\n  ShowVideo2,\n  ShowVideo,\n  setShowVideo2,\n  setShowVideo\n}) {\n  _s();\n\n  ///\n  const videoPlayerRef = useRef(null); ///\n  ///DARKMODE FROM REDUX\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; // New state for recorded video URL\n\n  const [recordedVideoUrl, setRecordedVideoUrl] = useState(null);\n  const [rec, setRec] = useState(false); // Function to start recording\n\n  const startRecording = (sourceVideoUrl, startTime, duration) => {\n    const video = videoPlayerRef.current;\n\n    if (video) {\n      video.src = sourceVideoUrl;\n      video.currentTime = startTime;\n\n      video.onloadedmetadata = () => {\n        video.currentTime = startTime;\n      };\n\n      video.onseeked = () => {\n        video.play();\n        const stream = video.captureStream();\n        const recorder = new MediaRecorder(stream);\n        const chunks = [];\n\n        recorder.ondataavailable = e => chunks.push(e.data);\n\n        recorder.onstop = () => {\n          const blob = new Blob(chunks, {\n            type: 'video/mp4'\n          });\n          const url = URL.createObjectURL(blob);\n          setRecordedVideoUrl(url);\n          video.pause();\n          setTimeout(() => {\n            setRec(true);\n          }, 3000);\n        };\n\n        recorder.start();\n        setTimeout(() => {\n          recorder.stop();\n        }, duration * 1000);\n      };\n\n      video.load();\n    }\n  }; // Call this function when you want to start recording\n  // For example: startRecording(VideoUrl, 0, 10) for a 10-second clip from the start\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      style: {\n        display: ShowVideo || ShowVideo2 ? 'block' : 'none',\n        position: 'fixed',\n        top: '0vh',\n        height: '100vh',\n        backgroundColor: '#555555',\n        width: '100%',\n        margin: 'auto',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          startRecording(VideoUrl, 400, 17);\n        },\n        style: {\n          padding: '2vh',\n          position: 'fixed',\n          top: '3vh',\n          zIndex: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), ShowVideo && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: VideoUrl,\n        controls: true,\n        style: {\n          width: '40%',\n          margin: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 23\n      }, this), ShowVideo2 && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: VideoUrl2,\n        controls: true,\n        style: {\n          width: '40%',\n          margin: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoPlayerRef,\n        src: VideoUrl,\n        controls: true,\n        style: {\n          width: '40%',\n          margin: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), recordedVideoUrl && rec ? /*#__PURE__*/_jsxDEV(\"video\", {\n        src: recordedVideoUrl,\n        controls: true,\n        style: {\n          width: '40%',\n          margin: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 36\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(VideoEditorx, \"dQfVpWJmR0wEehZFt3HWYz1ZSkE=\", false, function () {\n  return [useSelector];\n});\n\n_c = VideoEditorx;\nexport const VideoEditor = /*#__PURE__*/React.memo(VideoEditorx);\n_c2 = VideoEditor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VideoEditorx\");\n$RefreshReg$(_c2, \"VideoEditor\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/Clikbate/src/upload/VideoEditor.tsx"],"names":["React","useRef","useState","Grid","useSelector","VideoEditorx","VideoUrl","VideoUrl2","ShowVideo2","ShowVideo","setShowVideo2","setShowVideo","videoPlayerRef","darkmode","state","GlobalReducer","darkmodeReducer","recordedVideoUrl","setRecordedVideoUrl","rec","setRec","startRecording","sourceVideoUrl","startTime","duration","video","current","src","currentTime","onloadedmetadata","onseeked","play","stream","captureStream","recorder","MediaRecorder","chunks","ondataavailable","e","push","data","onstop","blob","Blob","type","url","URL","createObjectURL","pause","setTimeout","start","stop","load","display","position","top","height","backgroundColor","width","margin","textAlign","padding","zIndex","VideoEditor","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useCallback,\r\n} from \"react\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { AnySoaRecord } from \"dns\";\r\nimport { PreviewCanvas } from \"./PreviewCanvas\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\n\r\ninterface HTMLVideoElementWithCapture extends HTMLVideoElement {\r\n  captureStream(): MediaStream;\r\n}\r\n\r\n\r\n\r\nfunction VideoEditorx({ VideoUrl, VideoUrl2, ShowVideo2, ShowVideo, setShowVideo2, setShowVideo }: any): JSX.Element {\r\n\r\n  ///\r\n\r\n  const videoPlayerRef = useRef<HTMLVideoElementWithCapture>(null);\r\n\r\n\r\n\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n\r\n\r\n  // New state for recorded video URL\r\n  const [recordedVideoUrl, setRecordedVideoUrl] = useState(null);\r\n\r\n  const [rec, setRec] = useState(false);\r\n\r\n  // Function to start recording\r\n  const startRecording = (sourceVideoUrl: any, startTime: any, duration: any) => {\r\n\r\n\r\n    const video = videoPlayerRef.current;\r\n\r\n    if (video) {\r\n      video.src = sourceVideoUrl;\r\n      video.currentTime = startTime;\r\n\r\n\r\n      video.onloadedmetadata = () => {\r\n        video.currentTime = startTime;\r\n      };\r\n\r\n\r\n\r\n      video.onseeked = () => {\r\n        video.play();\r\n        const stream = video.captureStream();\r\n        const recorder = new MediaRecorder(stream);\r\n        const chunks: any = [];\r\n\r\n        recorder.ondataavailable = (e) => chunks.push(e.data);\r\n        recorder.onstop = () => {\r\n          const blob = new Blob(chunks, { type: 'video/mp4' });\r\n          const url: any = URL.createObjectURL(blob);\r\n          setRecordedVideoUrl(url);\r\n\r\n          video.pause();\r\n\r\n          setTimeout(() => {\r\n            setRec(true);\r\n          }, 3000)\r\n        };\r\n\r\n        recorder.start();\r\n        setTimeout(() => {\r\n\r\n          recorder.stop();\r\n\r\n        }\r\n          , duration * 1000);\r\n      };\r\n\r\n      video.load();\r\n    }\r\n  };\r\n\r\n  // Call this function when you want to start recording\r\n  // For example: startRecording(VideoUrl, 0, 10) for a 10-second clip from the start\r\n\r\n  return (\r\n    <>\r\n\r\n      <Grid xs={12} style={{ display: ShowVideo || ShowVideo2 ? 'block' : 'none', position: 'fixed', top: '0vh', height: '100vh', backgroundColor: '#555555', width: '100%', margin: 'auto', textAlign: 'center' }} >\r\n        {/* ... other components */}\r\n\r\n        <button onClick={() => {\r\n          startRecording(VideoUrl, 400, 17);\r\n        }} style={{ padding: '2vh', position: 'fixed', top: '3vh', zIndex: 20 }}></button>\r\n        {ShowVideo && <video src={VideoUrl} controls style={{ width: '40%', margin: 'auto' }}></video>}\r\n        {ShowVideo2 && <video src={VideoUrl2} controls style={{ width: '40%', margin: 'auto' }}></video>}\r\n\r\n        <video ref={videoPlayerRef} src={VideoUrl} controls style={{ width: '40%', margin: 'auto' }}></video>\r\n\r\n\r\n\r\n        {/* Preview for recorded video */}\r\n        {recordedVideoUrl && rec ? <video src={recordedVideoUrl} controls style={{ width: '40%', margin: 'auto' }}></video> : null}\r\n      </Grid >\r\n    </>\r\n  );\r\n}\r\n\r\nexport const VideoEditor = React.memo(VideoEditorx)"]},"metadata":{},"sourceType":"module"}