{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\Clikbate\\\\src\\\\profile\\\\SliderBillboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { ArrowBillboard } from \"./ArrowBillboard\";\nimport { matchPc } from \"../DetectDevice\";\nimport { Grid } from \"@material-ui/core\";\nimport { animated, useTransition } from \"react-spring\";\nimport { useSelector } from \"react-redux\";\nimport { DotsBillboard } from \"./DotsBillboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SliderBillboardx({\n  slidesthumb,\n  slides,\n  billboardDynamicHeight,\n  ClickBillboardClose,\n  ShowBillboard,\n  billboardserverswitch\n}) {\n  _s();\n  const {\n    REACT_APP_SUPERSTARZ_URL,\n    REACT_APP_CLOUNDFRONT,\n    REACT_APP_APPX_STATE\n  } = process.env;\n  var allow4dev = \"\";\n  const [sliderIndex, setSliderIndex] = useState(0);\n  const [allowAutoPlay, setAllowAutoPlay] = useState(true);\n  const [sliderDuration, setsliderDuration] = useState(2000);\n  const [autoSlideDuration] = useState(3000);\n\n  /// const getWidth = () => window.innerWidth;\n  ///var newGetWidth = getWidth() * slides.length;\n\n  const handleTouchMoveTimer = useRef(null);\n  const cancelAutoBillboardTimer = useRef(null);\n  const changeBillboardAutoSlideDurationTimer = useRef(null);\n  const autoPlayTimer = useRef(null);\n  const SlideimageRef = useRef(null);\n  const SlideimageRefthumb = useRef(null);\n  const SlideRef = useRef(null);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [touchPosition, setTouchPosition] = useState(null);\n\n  ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({\n    ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n\n  ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n  const {\n    billboard2,\n    MemberProfileData\n  } = useSelector(state => ({\n    ...state.UserdataReducer\n  }));\n  const billboard2Reducer = billboard2;\n  const MemberProfileDataReducer = MemberProfileData;\n\n  ///\n  ///\n  ///\n  /// SPRING TRANSITION WITH INDEX\n  const transitions = useTransition(sliderIndex, {\n    key: sliderIndex,\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    config: {\n      duration: sliderDuration - 50\n    }\n  });\n\n  ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\n  const sliderFirstImageOnLoad = item => {\n    if (item === 0) {\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\n        setImageHeight(SlideimageRef.current.clientHeight);\n      }\n    }\n  };\n\n  ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE THUMBS IF IMAGE DOES NOT LOAD\n  const sliderFirstImageOnLoadthumb = item => {\n    if (item === 0 && imageHeight === 0) {\n      if (SlideimageRefthumb.current && SlideimageRefthumb.current.clientHeight) {\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\n      }\n    }\n  };\n\n  ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n  const handleTouchStart = e => {\n    ////onMouseDown onMouseMove\n    ////touchDown = e.clientX\n    const touchDown = e.touches[0].clientX;\n    setTouchPosition(touchDown);\n  };\n\n  ///\n  ///\n  ///\n  /// HANDLE TOUCH MOVE EVENT\n  const handleTouchMove = e => {\n    if (handleTouchMoveTimer.current) {\n      clearTimeout(handleTouchMoveTimer.current);\n    }\n    handleTouchMoveTimer.current = setTimeout(function () {\n      const touchDown = touchPosition;\n      if (touchDown === null) {\n        return;\n      }\n      ////currentTouch = e.clientX\n      const currentTouch = e.touches[0].clientX;\n      const diff = touchDown - currentTouch;\n      if (diff > 40) {\n        nextSlide();\n      } else if (diff < -40) {\n        prevSlide();\n      } else {}\n      setTouchPosition(null);\n      return false;\n    }, 200);\n    return false;\n  };\n\n  ///\n  ///\n  ///\n  /// NEXT SLIDE\n  const nextSlide = () => {\n    if (autoPlayTimer.current) {\n      clearTimeout(autoPlayTimer.current);\n    }\n\n    ///set((state) => (state + 1) % slides.length);\n    if (sliderIndex === slides.length - 1) {\n      setSliderIndex(sliderIndex => 0);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex + 1);\n    }\n  };\n\n  ///\n  ///\n  ///\n  /// PREV SLIDE\n  const prevSlide = () => {\n    if (autoPlayTimer.current) {\n      clearTimeout(autoPlayTimer.current);\n    }\n    if (sliderIndex === 0) {\n      setSliderIndex(sliderIndex => slides.length - 1);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex - 1);\n    }\n  };\n\n  ///\n  ///\n  ///\n  /// AUTO PLAY SLIDER DEPENDENT FUNCTION\n  const startSlider = () => {\n    setAllowAutoPlay(false);\n    autoPlayTimer.current = setInterval(function () {\n      setSliderIndex(state => (state + 1) % slides.length);\n    }, autoSlideDuration);\n  };\n\n  ///\n  ///\n  ///\n  /// AUTO PLAY SLIDER START\n  const SliderAutoPlay = () => {\n    if (allowAutoPlay) {\n      startSlider();\n    } else {\n      setAllowAutoPlay(true);\n      if (autoPlayTimer.current) {\n        clearInterval(autoPlayTimer.current);\n      }\n    }\n  };\n\n  ///\n  ///\n  ///\n  /// UPDATE AUTO  PLAY  DURATION  AFTER INITIAL QUICK SLIDE\n\n  const callNewAutoBillboard = useCallback(() => {\n    if (autoPlayTimer.current) {\n      clearInterval(autoPlayTimer.current);\n    }\n    autoPlayTimer.current = setInterval(function () {\n      if (ShowBillboard) {\n        if (autoPlayTimer.current) {\n          clearInterval(autoPlayTimer.current);\n        }\n      } else {\n        setSliderIndex(state => (state + 1) % slides.length);\n      }\n    }, 12000);\n    if (cancelAutoBillboardTimer.current) {\n      clearTimeout(cancelAutoBillboardTimer.current);\n    }\n    cancelAutoBillboardTimer.current = setTimeout(function () {\n      if (autoPlayTimer.current) {\n        clearInterval(autoPlayTimer.current);\n      }\n    }, 240000);\n  }, [ShowBillboard, autoPlayTimer]);\n\n  ///\n  ///\n  ///START AUTOPLAY ON PAGE LOAD\n  useEffect(() => {\n    var f;\n    if (MemberProfileDataReducer === 0) {\n      f = 9000;\n    } else {\n      f = 9000;\n    }\n    if (slides[1]) {\n      if (autoPlayTimer.current) {\n        clearInterval(autoPlayTimer.current);\n      }\n      SliderAutoPlay();\n      changeBillboardAutoSlideDurationTimer.current = setTimeout(function () {\n        setsliderDuration(2000);\n        callNewAutoBillboard();\n      }, f);\n    }\n  }, [slides, MemberProfileDataReducer]);\n  useEffect(() => {\n    if (slides[1]) {\n      setSliderIndex(state => 1 % slides.length);\n    }\n  }, [billboard2Reducer]);\n\n  ///\n  ///\n  /// WATCH FOR CHANGE IN [ShowBillboard] AND USE THAT CONTROL SLIDER DURATION(ON VIEW) AND CLEAR AUTOPLAY TIMER\n  useEffect(() => {\n    if (ShowBillboard) {\n      setsliderDuration(2000);\n      if (autoPlayTimer.current) {\n        clearInterval(autoPlayTimer.current);\n      }\n    } else {}\n  }, [ShowBillboard]);\n  useEffect(() => {\n    if (SlideRef.current) {\n      SlideRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }, [SlideRef]);\n\n  ///\n  ///\n  ///  CHANGE [showBillboard == close]  EXTEND SLIDER DURATION(ON VIEW) AND  START AUTOPLAY\n  const ClickBillboardCloseStart = () => {\n    ClickBillboardClose();\n    setsliderDuration(2000);\n    if (allowAutoPlay) {} else {\n      callNewAutoBillboard();\n    }\n  };\n\n  ///\n  ///\n  ///\n  /// CHANGE SLIDER CONTENT USING  DOTS\n  const GotoDots = clickedDot => {\n    setSliderIndex(sliderIndex => clickedDot);\n  };\n\n  ///\n  ///\n  ///\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    ref: SlideRef,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    xs: 12,\n    style: {\n      position: \"relative\",\n      height: `${imageHeight}px`,\n      opacity: imageHeight === 0 ? 0 : 1\n    },\n    children: [slides[1] === null || slides[1] === \"\" ? null : /*#__PURE__*/_jsxDEV(ArrowBillboard, {\n      ShowBillboard: ShowBillboard,\n      direction: \"left\",\n      clickSlideprev: prevSlide,\n      clickSlidenext: nextSlide,\n      imageHeight: imageHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }, this), transitions((style, i) => /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      item: true,\n      children: [/*#__PURE__*/_jsxDEV(animated.img, {\n        ref: SlideimageRef,\n        onClick: ClickBillboardCloseStart,\n        onLoad: () => {\n          sliderFirstImageOnLoad(i);\n        },\n        style: {\n          ...style,\n          cursor: \"pointer\",\n          width: \"100%\",\n          objectFit: \"cover\",\n          position: \"absolute\",\n          height: billboardDynamicHeight,\n          borderRadius: \"0px\",\n          borderBottomLeftRadius: ShowBillboard ? \"0px\" : matchPc ? \"7px\" : \"0px\",\n          borderBottomRightRadius: ShowBillboard ? \"0px\" : matchPc ? \"7px\" : \"0px\",\n          left: \"0\",\n          zIndex: 1,\n          filter: \"blur(0px)\"\n        },\n        src: `https://d34w0b65idayzb.cloudfront.net/${slidesthumb[i]}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(animated.img, {\n        ref: SlideimageRef,\n        onClick: ClickBillboardCloseStart,\n        onLoad: () => {\n          sliderFirstImageOnLoad(i);\n        },\n        style: {\n          ...style,\n          cursor: \"pointer\",\n          width: \"100%\",\n          objectFit: \"cover\",\n          position: \"absolute\",\n          height: billboardDynamicHeight,\n          borderRadius: \"0px\",\n          borderBottomLeftRadius: ShowBillboard ? \"0px\" : matchPc ? \"20px\" : \"0px\",\n          borderBottomRightRadius: ShowBillboard ? \"0px\" : matchPc ? \"20px\" : \"0px\",\n          left: \"0\",\n          zIndex: 2\n        },\n        src: `REACT_APP_CLOUNDFRONT/${slides[i]}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }, this)), \" \", slides[1] === null || slides[1] === \"\" ? null : /*#__PURE__*/_jsxDEV(DotsBillboard, {\n      ShowBillboard: ShowBillboard,\n      GotoDots: GotoDots,\n      slides: slides,\n      activeSlide: sliderIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 5\n  }, this);\n}\n_s(SliderBillboardx, \"p60l/Ag+qpn1G0bJoVhAQamHtyc=\", false, function () {\n  return [useSelector, useSelector, useTransition];\n});\n_c = SliderBillboardx;\nexport const SliderBillboard = /*#__PURE__*/React.memo(SliderBillboardx);\n_c2 = SliderBillboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"SliderBillboardx\");\n$RefreshReg$(_c2, \"SliderBillboard\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","ArrowBillboard","matchPc","Grid","animated","useTransition","useSelector","DotsBillboard","jsxDEV","_jsxDEV","SliderBillboardx","slidesthumb","slides","billboardDynamicHeight","ClickBillboardClose","ShowBillboard","billboardserverswitch","_s","REACT_APP_SUPERSTARZ_URL","REACT_APP_CLOUNDFRONT","REACT_APP_APPX_STATE","process","env","allow4dev","sliderIndex","setSliderIndex","allowAutoPlay","setAllowAutoPlay","sliderDuration","setsliderDuration","autoSlideDuration","handleTouchMoveTimer","cancelAutoBillboardTimer","changeBillboardAutoSlideDurationTimer","autoPlayTimer","SlideimageRef","SlideimageRefthumb","SlideRef","imageHeight","setImageHeight","touchPosition","setTouchPosition","darkmode","state","GlobalReducer","darkmodeReducer","billboard2","MemberProfileData","UserdataReducer","billboard2Reducer","MemberProfileDataReducer","transitions","key","from","opacity","enter","leave","config","duration","sliderFirstImageOnLoad","item","current","clientHeight","sliderFirstImageOnLoadthumb","handleTouchStart","e","touchDown","touches","clientX","handleTouchMove","clearTimeout","setTimeout","currentTouch","diff","nextSlide","prevSlide","length","startSlider","setInterval","SliderAutoPlay","clearInterval","callNewAutoBillboard","f","scrollIntoView","behavior","block","ClickBillboardCloseStart","GotoDots","clickedDot","ref","onTouchStart","onTouchMove","xs","style","position","height","children","direction","clickSlideprev","clickSlidenext","fileName","_jsxFileName","lineNumber","columnNumber","i","img","onClick","onLoad","cursor","width","objectFit","borderRadius","borderBottomLeftRadius","borderBottomRightRadius","left","zIndex","filter","src","activeSlide","_c","SliderBillboard","memo","_c2","$RefreshReg$"],"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/Clikbate/src/profile/SliderBillboard.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport { ArrowBillboard } from \"./ArrowBillboard\";\r\nimport { matchPc } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { animated, useTransition } from \"react-spring\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { DotsBillboard } from \"./DotsBillboard\";\r\n\r\nfunction SliderBillboardx({\r\n  slidesthumb,\r\n  slides,\r\n  billboardDynamicHeight,\r\n  ClickBillboardClose,\r\n  ShowBillboard,\r\n  billboardserverswitch,\r\n}: any): JSX.Element {\r\n\r\n\r\n  const { REACT_APP_SUPERSTARZ_URL, REACT_APP_CLOUNDFRONT, REACT_APP_APPX_STATE } = process.env;\r\n\r\n\r\n  var allow4dev = \"\";\r\n\r\n  const [sliderIndex, setSliderIndex] = useState(0);\r\n\r\n  const [allowAutoPlay, setAllowAutoPlay] = useState(true);\r\n\r\n  const [sliderDuration, setsliderDuration] = useState(2000);\r\n  const [autoSlideDuration] = useState(3000);\r\n\r\n  /// const getWidth = () => window.innerWidth;\r\n  ///var newGetWidth = getWidth() * slides.length;\r\n\r\n  const handleTouchMoveTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const cancelAutoBillboardTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const changeBillboardAutoSlideDurationTimer = useRef<ReturnType<\r\n    typeof setTimeout\r\n  > | null>(null);\r\n\r\n  const autoPlayTimer = useRef<ReturnType<typeof setInterval> | null>(null);\r\n\r\n  const SlideimageRef = useRef<HTMLImageElement>(null);\r\n  const SlideimageRefthumb = useRef<HTMLImageElement>(null);\r\n  const SlideRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [imageHeight, setImageHeight] = useState(0);\r\n  const [touchPosition, setTouchPosition] = useState(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      billboard2: string;\r\n      MemberProfileData: any;\r\n    };\r\n  }\r\n  const { billboard2, MemberProfileData } = useSelector(\r\n    (state: RootStateReducerImage) => ({\r\n      ...state.UserdataReducer,\r\n    })\r\n  );\r\n\r\n  const billboard2Reducer = billboard2;\r\n\r\n  const MemberProfileDataReducer = MemberProfileData;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SPRING TRANSITION WITH INDEX\r\n  const transitions = useTransition(sliderIndex, {\r\n    key: sliderIndex,\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n    config: { duration: sliderDuration - 50 },\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\r\n  const sliderFirstImageOnLoad = (item: number) => {\r\n    if (item === 0) {\r\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\r\n        setImageHeight(SlideimageRef.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE THUMBS IF IMAGE DOES NOT LOAD\r\n  const sliderFirstImageOnLoadthumb = (item: number) => {\r\n    if (item === 0 && imageHeight === 0) {\r\n      if (\r\n        SlideimageRefthumb.current &&\r\n        SlideimageRefthumb.current.clientHeight\r\n      ) {\r\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const handleTouchStart = (e: any) => {\r\n    ////onMouseDown onMouseMove\r\n    ////touchDown = e.clientX\r\n    const touchDown = e.touches[0].clientX;\r\n    setTouchPosition(touchDown);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH MOVE EVENT\r\n  const handleTouchMove = (e: any) => {\r\n    if (handleTouchMoveTimer.current) {\r\n      clearTimeout(handleTouchMoveTimer.current);\r\n    }\r\n    handleTouchMoveTimer.current = setTimeout(function () {\r\n      const touchDown = touchPosition;\r\n\r\n      if (touchDown === null) {\r\n        return;\r\n      }\r\n      ////currentTouch = e.clientX\r\n      const currentTouch = e.touches[0].clientX;\r\n      const diff = touchDown - currentTouch;\r\n\r\n      if (diff > 40) {\r\n        nextSlide();\r\n      } else if (diff < -40) {\r\n        prevSlide();\r\n      } else {\r\n      }\r\n\r\n      setTouchPosition(null);\r\n      return false;\r\n    }, 200);\r\n\r\n    return false;\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const nextSlide = () => {\r\n    if (autoPlayTimer.current) {\r\n      clearTimeout(autoPlayTimer.current);\r\n    }\r\n\r\n    ///set((state) => (state + 1) % slides.length);\r\n    if (sliderIndex === slides.length - 1) {\r\n      setSliderIndex((sliderIndex) => 0);\r\n    } else {\r\n      setSliderIndex((sliderIndex) => sliderIndex + 1);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PREV SLIDE\r\n  const prevSlide = () => {\r\n    if (autoPlayTimer.current) {\r\n      clearTimeout(autoPlayTimer.current);\r\n    }\r\n\r\n    if (sliderIndex === 0) {\r\n      setSliderIndex((sliderIndex) => slides.length - 1);\r\n    } else {\r\n      setSliderIndex((sliderIndex) => sliderIndex - 1);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// AUTO PLAY SLIDER DEPENDENT FUNCTION\r\n  const startSlider = () => {\r\n    setAllowAutoPlay(false);\r\n\r\n    autoPlayTimer.current = setInterval(function () {\r\n      setSliderIndex((state) => (state + 1) % slides.length);\r\n    }, autoSlideDuration);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// AUTO PLAY SLIDER START\r\n  const SliderAutoPlay = () => {\r\n    if (allowAutoPlay) {\r\n      startSlider();\r\n    } else {\r\n      setAllowAutoPlay(true);\r\n\r\n      if (autoPlayTimer.current) {\r\n        clearInterval(autoPlayTimer.current);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// UPDATE AUTO  PLAY  DURATION  AFTER INITIAL QUICK SLIDE\r\n\r\n  const callNewAutoBillboard = useCallback(() => {\r\n    if (autoPlayTimer.current) {\r\n      clearInterval(autoPlayTimer.current);\r\n    }\r\n    autoPlayTimer.current = setInterval(function () {\r\n      if (ShowBillboard) {\r\n        if (autoPlayTimer.current) {\r\n          clearInterval(autoPlayTimer.current);\r\n        }\r\n      } else {\r\n        setSliderIndex((state) => (state + 1) % slides.length);\r\n      }\r\n    }, 12000);\r\n\r\n    if (cancelAutoBillboardTimer.current) {\r\n      clearTimeout(cancelAutoBillboardTimer.current);\r\n    }\r\n    cancelAutoBillboardTimer.current = setTimeout(function () {\r\n      if (autoPlayTimer.current) {\r\n        clearInterval(autoPlayTimer.current);\r\n      }\r\n    }, 240000);\r\n  }, [ShowBillboard, autoPlayTimer]);\r\n\r\n  ///\r\n  ///\r\n  ///START AUTOPLAY ON PAGE LOAD\r\n  useEffect(() => {\r\n    var f;\r\n    if (MemberProfileDataReducer === 0) {\r\n      f = 9000;\r\n    } else {\r\n      f = 9000;\r\n    }\r\n    if (slides[1]) {\r\n      if (autoPlayTimer.current) {\r\n        clearInterval(autoPlayTimer.current);\r\n      }\r\n\r\n      SliderAutoPlay();\r\n      changeBillboardAutoSlideDurationTimer.current = setTimeout(function () {\r\n        setsliderDuration(2000);\r\n        callNewAutoBillboard();\r\n      }, f);\r\n    }\r\n  }, [slides, MemberProfileDataReducer]);\r\n\r\n  useEffect(() => {\r\n    if (slides[1]) {\r\n      setSliderIndex((state) => 1 % slides.length);\r\n    }\r\n  }, [billboard2Reducer]);\r\n\r\n  ///\r\n  ///\r\n  /// WATCH FOR CHANGE IN [ShowBillboard] AND USE THAT CONTROL SLIDER DURATION(ON VIEW) AND CLEAR AUTOPLAY TIMER\r\n  useEffect(() => {\r\n    if (ShowBillboard) {\r\n      setsliderDuration(2000);\r\n      if (autoPlayTimer.current) {\r\n        clearInterval(autoPlayTimer.current);\r\n      }\r\n    } else {\r\n    }\r\n  }, [ShowBillboard]);\r\n\r\n  useEffect(() => {\r\n    if (SlideRef.current) {\r\n      SlideRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n      });\r\n    }\r\n  }, [SlideRef]);\r\n\r\n  ///\r\n  ///\r\n  ///  CHANGE [showBillboard == close]  EXTEND SLIDER DURATION(ON VIEW) AND  START AUTOPLAY\r\n  const ClickBillboardCloseStart = () => {\r\n    ClickBillboardClose();\r\n    setsliderDuration(2000);\r\n    if (allowAutoPlay) {\r\n    } else {\r\n      callNewAutoBillboard();\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// CHANGE SLIDER CONTENT USING  DOTS\r\n  const GotoDots = (clickedDot: number) => {\r\n    setSliderIndex((sliderIndex) => clickedDot);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  return (\r\n    <Grid\r\n      item\r\n      ref={SlideRef}\r\n      onTouchStart={handleTouchStart}\r\n      onTouchMove={handleTouchMove}\r\n      xs={12}\r\n      style={{\r\n        position: \"relative\",\r\n        height: `${imageHeight}px`,\r\n        opacity: imageHeight === 0 ? 0 : 1,\r\n      }}\r\n    >\r\n      {slides[1] === null || slides[1] === \"\" ? null : (\r\n        <ArrowBillboard\r\n          ShowBillboard={ShowBillboard}\r\n          direction=\"left\"\r\n          clickSlideprev={prevSlide}\r\n          clickSlidenext={nextSlide}\r\n          imageHeight={imageHeight}\r\n        />\r\n      )}\r\n      {transitions((style, i) => (\r\n        <Grid key={i} xs={12} item>\r\n          <animated.img\r\n            ref={SlideimageRef}\r\n            onClick={ClickBillboardCloseStart}\r\n            onLoad={() => {\r\n              sliderFirstImageOnLoad(i);\r\n            }}\r\n            style={{\r\n              ...style,\r\n              cursor: \"pointer\",\r\n              width: \"100%\",\r\n              objectFit: \"cover\",\r\n              position: \"absolute\",\r\n              height: billboardDynamicHeight,\r\n              borderRadius: \"0px\",\r\n              borderBottomLeftRadius: ShowBillboard\r\n                ? \"0px\"\r\n                : matchPc\r\n                  ? \"7px\"\r\n                  : \"0px\",\r\n              borderBottomRightRadius: ShowBillboard\r\n                ? \"0px\"\r\n                : matchPc\r\n                  ? \"7px\"\r\n                  : \"0px\",\r\n              left: \"0\",\r\n              zIndex: 1,\r\n              filter: \"blur(0px)\",\r\n            }}\r\n            src={`https://d34w0b65idayzb.cloudfront.net/${slidesthumb[i]}`}\r\n          />\r\n          <animated.img\r\n            ref={SlideimageRef}\r\n            onClick={ClickBillboardCloseStart}\r\n            onLoad={() => {\r\n              sliderFirstImageOnLoad(i);\r\n            }}\r\n            style={{\r\n              ...style,\r\n              cursor: \"pointer\",\r\n              width: \"100%\",\r\n              objectFit: \"cover\",\r\n              position: \"absolute\",\r\n              height: billboardDynamicHeight,\r\n              borderRadius: \"0px\",\r\n              borderBottomLeftRadius: ShowBillboard\r\n                ? \"0px\"\r\n                : matchPc\r\n                  ? \"20px\"\r\n                  : \"0px\",\r\n              borderBottomRightRadius: ShowBillboard\r\n                ? \"0px\"\r\n                : matchPc\r\n                  ? \"20px\"\r\n                  : \"0px\",\r\n              left: \"0\",\r\n              zIndex: 2,\r\n            }}\r\n            src={`REACT_APP_CLOUNDFRONT/${slides[i]}`}\r\n          />\r\n        </Grid>\r\n      ))}{\" \"}\r\n      {slides[1] === null || slides[1] === \"\" ? null : (\r\n        <DotsBillboard\r\n          ShowBillboard={ShowBillboard}\r\n          GotoDots={GotoDots}\r\n          slides={slides}\r\n          activeSlide={sliderIndex}\r\n        />\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport const SliderBillboard = React.memo(SliderBillboardx);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}