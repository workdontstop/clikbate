{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\SupercheckOptions.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport CakeIcon from \"@material-ui/icons/Cake\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\nimport { useSpring, animated } from \"react-spring\";\nimport Axios from \"axios\";\nimport { matchPc, matchTablet } from \"./DetectDevice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid, DialogContent } from \"@material-ui/core\";\nimport { rememberMeAction } from \"./GlobalActions\";\nimport { SuperCheckFeedBack } from \"./SuperCheckFeedBack\";\nimport \"./log/logCss.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SupercheckOptionsx({\n  showModal,\n  closemodal,\n  setShowModal\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [Feedbackshow, setFeedbackshow] = useState(false); ///\n  ///\n  ///\n  /// GET KEEP ME LOGGED IN STATE FROM REDUX STORE\n\n  const {\n    rememberMe\n  } = useSelector(state => ({ ...state.GlobalReducerKeepMeLoggedIn\n  }));\n  const rememberMeReducer = rememberMe;\n  var opacityremember = \"\";\n  var rememberMeType = \"\";\n  var FeedBackData = \"\";\n\n  if (rememberMeReducer) {\n    opacityremember = \"1\";\n    rememberMeType = \"session\";\n    FeedBackData = \"user will stay logged in on browser close\";\n  } else {\n    opacityremember = \"0.5\";\n    rememberMeType = \"forever\";\n    FeedBackData = \"user will be forgotten on browser close\";\n  } ///\n  ///\n  ///\n  /// GET KEEP ME LOGGED IN  STATE FROM REDUX STORE\n\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  var marginData;\n  var fontData;\n  const fontDataPc = {\n    fontSize: \"2.4vw\"\n  };\n  const fontDataTablet = {\n    fontSize: \"3.9vh\"\n  };\n  const fontDataMobile = {\n    fontSize: \"4.1vh\"\n  };\n  const marginDataPc = {\n    marginLeft: \"-35px\",\n    opacity: opacityremember\n  };\n  const marginDataMobile = {\n    marginLeft: \"-15.5px\",\n    marginTop: \"5px\",\n    opacity: opacityremember\n  };\n  var paddingttop = \"\"; ///\n  ///\n  ///\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\n\n  if (matchPc) {\n    marginData = marginDataPc;\n    fontData = fontDataPc;\n    paddingttop = \"2.1rem\"; ///\n  } else if (matchTablet) {\n    marginData = marginDataPc;\n    fontData = fontDataTablet;\n    paddingttop = \"5.5rem\"; ///\n  } else {\n    marginData = marginDataMobile;\n    fontData = fontDataMobile;\n    paddingttop = \"2.1rem\";\n  } //\n  //\n  //\n  //USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\n\n\n  const inputRef = useRef(null);\n\n  const onBackgroundFocus = e => {\n    if (inputRef.current === e.target) {\n      closemodal(0);\n    }\n  }; //\n  //\n  //\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\n\n\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0.0,\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env;\n  const rememberTimer = useRef(null);\n\n  const rememberUser = () => {\n    dispatch(rememberMeAction());\n    setShowModal(false);\n    setFeedbackshow(true);\n\n    if (rememberTimer.current) {\n      clearTimeout(rememberTimer.current);\n    }\n\n    rememberTimer.current = setTimeout(() => {\n      setFeedbackshow(false);\n    }, 3000);\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/keepmeloggedin`, {\n      values: rememberMeType\n    }, {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.message === \"session_Cookie_Activated\") {} else if (response.data.message === \"forever_Cookie_Activated\") {}\n    }).catch(function (error) {\n      alert(\"Connection failure \");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    style: {},\n    children: showModal ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: \"dialog-container dontallowhighlighting \",\n      onClick: onBackgroundFocus,\n      ref: inputRef,\n      style: {\n        padding: \"0px\",\n        height: \"100vh\",\n        position: \"fixed\"\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          style: {\n            paddingTop: paddingttop\n          },\n          className: darkmodeReducer ? \"Background-header-dark theme-more-container\" : \"Background-header-light theme-more-container\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 8,\n            md: 10,\n            xs: 7\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            sm: 2,\n            md: 1,\n            className: \"zuperking\",\n            style: marginData,\n            children: /*#__PURE__*/_jsxDEV(RestoreIcon, {\n              onClick: rememberUser,\n              titleAccess: rememberMeReducer ? \"Forget User On Browser Close\" : \"Keep Me Logged In\",\n              className: darkmodeReducer ? \"make-small-icons-clickable-dark dontallowhighlighting  \" : \"make-small-icons-clickable-light  dontallowhighlighting  \",\n              style: fontData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            className: \"dontallowhighlighting add-rounded-icon-right\",\n            sm: 2,\n            md: 1,\n            children: /*#__PURE__*/_jsxDEV(CakeIcon, {\n              titleAccess: \"Birthday\",\n              className: darkmodeReducer ? \"make-small-icons-clickable-dark  dontallowhighlighting  \" : \"make-small-icons-clickable-light  dontallowhighlighting  \",\n              style: fontData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SuperCheckFeedBack, {\n      Feedbackshow: Feedbackshow,\n      rememberTimer: rememberTimer,\n      setFeedbackshow: setFeedbackshow,\n      FeedBackData: FeedBackData,\n      rememberMeType: rememberMeType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SupercheckOptionsx, \"7ZMt+N0uhUTV0L8/ZCZmyLvQMqU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSpring];\n});\n\n_c = SupercheckOptionsx;\nexport const SupercheckOptions = /*#__PURE__*/React.memo(SupercheckOptionsx);\n_c2 = SupercheckOptions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SupercheckOptionsx\");\n$RefreshReg$(_c2, \"SupercheckOptions\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/SupercheckOptions.tsx"],"names":["React","useState","useRef","CakeIcon","RestoreIcon","useSpring","animated","Axios","matchPc","matchTablet","useSelector","useDispatch","Grid","DialogContent","rememberMeAction","SuperCheckFeedBack","SupercheckOptionsx","showModal","closemodal","setShowModal","dispatch","Feedbackshow","setFeedbackshow","rememberMe","state","GlobalReducerKeepMeLoggedIn","rememberMeReducer","opacityremember","rememberMeType","FeedBackData","darkmode","GlobalReducer","darkmodeReducer","marginData","fontData","fontDataPc","fontSize","fontDataTablet","fontDataMobile","marginDataPc","marginLeft","opacity","marginDataMobile","marginTop","paddingttop","inputRef","onBackgroundFocus","e","current","target","animation","config","duration","transform","REACT_APP_SUPERSTARZ_URL","process","env","rememberTimer","rememberUser","clearTimeout","setTimeout","post","values","withCredentials","then","response","data","message","catch","error","alert","padding","height","position","paddingTop","SupercheckOptions","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\n\r\nimport CakeIcon from \"@material-ui/icons/Cake\";\r\nimport RestoreIcon from \"@material-ui/icons/Restore\";\r\nimport { OptionInnerModal } from \"./log/OptionInnerModal\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Axios from \"axios\";\r\nimport { matchPc, matchTablet } from \"./DetectDevice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { rememberMeAction } from \"./GlobalActions\";\r\nimport { SuperCheckFeedBack } from \"./SuperCheckFeedBack\";\r\n\r\nimport \"./log/logCss.css\";\r\nimport * as CSS from \"csstype\";\r\n\r\nfunction SupercheckOptionsx({\r\n  showModal,\r\n  closemodal,\r\n  setShowModal,\r\n}: any): JSX.Element {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Feedbackshow, setFeedbackshow] = useState<boolean>(false);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET KEEP ME LOGGED IN STATE FROM REDUX STORE\r\n  interface RootStateReducerKeepMeLoggedIn {\r\n    GlobalReducerKeepMeLoggedIn: {\r\n      rememberMe: boolean;\r\n    };\r\n  }\r\n  const { rememberMe } = useSelector(\r\n    (state: RootStateReducerKeepMeLoggedIn) => ({\r\n      ...state.GlobalReducerKeepMeLoggedIn,\r\n    })\r\n  );\r\n\r\n  const rememberMeReducer = rememberMe;\r\n  var opacityremember = \"\";\r\n  var rememberMeType = \"\";\r\n  var FeedBackData = \"\";\r\n\r\n  if (rememberMeReducer) {\r\n    opacityremember = \"1\";\r\n    rememberMeType = \"session\";\r\n    FeedBackData = \"user will stay logged in on browser close\";\r\n  } else {\r\n    opacityremember = \"0.5\";\r\n    rememberMeType = \"forever\";\r\n    FeedBackData = \"user will be forgotten on browser close\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET KEEP ME LOGGED IN  STATE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  var marginData: CSS.Properties;\r\n  var fontData: CSS.Properties;\r\n\r\n  const fontDataPc: CSS.Properties = { fontSize: \"2.4vw\" };\r\n  const fontDataTablet: CSS.Properties = { fontSize: \"3.9vh\" };\r\n  const fontDataMobile: CSS.Properties = { fontSize: \"4.1vh\" };\r\n\r\n  const marginDataPc: CSS.Properties = {\r\n    marginLeft: \"-35px\",\r\n    opacity: opacityremember,\r\n  };\r\n\r\n  const marginDataMobile: CSS.Properties = {\r\n    marginLeft: \"-15.5px\",\r\n    marginTop: \"5px\",\r\n    opacity: opacityremember,\r\n  };\r\n\r\n  var paddingttop = \"\";\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\r\n  if (matchPc) {\r\n    marginData = marginDataPc;\r\n    fontData = fontDataPc;\r\n    paddingttop = \"2.1rem\";\r\n    ///\r\n  } else if (matchTablet) {\r\n    marginData = marginDataPc;\r\n    fontData = fontDataTablet;\r\n    paddingttop = \"5.5rem\";\r\n    ///\r\n  } else {\r\n    marginData = marginDataMobile;\r\n    fontData = fontDataMobile;\r\n    paddingttop = \"2.1rem\";\r\n  }\r\n\r\n  //\r\n  //\r\n  //\r\n  //USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const onBackgroundFocus = (e: any): void => {\r\n    if (inputRef.current === e.target) {\r\n      closemodal(0);\r\n    }\r\n  };\r\n\r\n  //\r\n  //\r\n  //\r\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 250,\r\n    },\r\n    opacity: showModal ? 1 : 0.0,\r\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`,\r\n  });\r\n\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n\r\n  const rememberTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const rememberUser = () => {\r\n    dispatch(rememberMeAction());\r\n    setShowModal(false);\r\n    setFeedbackshow(true);\r\n    if (rememberTimer.current) {\r\n      clearTimeout(rememberTimer.current);\r\n    }\r\n    rememberTimer.current = setTimeout(() => {\r\n      setFeedbackshow(false);\r\n    }, 3000);\r\n    Axios.post(\r\n      `http://${REACT_APP_SUPERSTARZ_URL}/keepmeloggedin`,\r\n      {\r\n        values: rememberMeType,\r\n      },\r\n      {\r\n        withCredentials: true,\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.data.message === \"session_Cookie_Activated\") {\r\n        } else if (response.data.message === \"forever_Cookie_Activated\") {\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"Connection failure \");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container style={{}}>\r\n      {showModal ? (\r\n        <DialogContent\r\n          className=\"dialog-container dontallowhighlighting \"\r\n          onClick={onBackgroundFocus}\r\n          ref={inputRef}\r\n          style={{\r\n            padding: \"0px\",\r\n            height: \"100vh\",\r\n            position: \"fixed\",\r\n          }}\r\n        >\r\n          <animated.div style={animation}>\r\n            <Grid\r\n              container\r\n              style={{ paddingTop: paddingttop }}\r\n              className={\r\n                darkmodeReducer\r\n                  ? \"Background-header-dark theme-more-container\"\r\n                  : \"Background-header-light theme-more-container\"\r\n              }\r\n            >\r\n              <Grid item sm={8} md={10} xs={7}></Grid>\r\n              <Grid\r\n                item\r\n                xs={2}\r\n                sm={2}\r\n                md={1}\r\n                className=\"zuperking\"\r\n                style={marginData}\r\n              >\r\n                <RestoreIcon\r\n                  onClick={rememberUser}\r\n                  titleAccess={\r\n                    rememberMeReducer\r\n                      ? \"Forget User On Browser Close\"\r\n                      : \"Keep Me Logged In\"\r\n                  }\r\n                  className={\r\n                    darkmodeReducer\r\n                      ? \"make-small-icons-clickable-dark dontallowhighlighting  \"\r\n                      : \"make-small-icons-clickable-light  dontallowhighlighting  \"\r\n                  }\r\n                  style={fontData}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                xs={3}\r\n                className=\"dontallowhighlighting add-rounded-icon-right\"\r\n                sm={2}\r\n                md={1}\r\n              >\r\n                <CakeIcon\r\n                  titleAccess=\"Birthday\"\r\n                  className={\r\n                    darkmodeReducer\r\n                      ? \"make-small-icons-clickable-dark  dontallowhighlighting  \"\r\n                      : \"make-small-icons-clickable-light  dontallowhighlighting  \"\r\n                  }\r\n                  style={fontData}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </animated.div>\r\n        </DialogContent>\r\n      ) : (\r\n        <SuperCheckFeedBack\r\n          Feedbackshow={Feedbackshow}\r\n          rememberTimer={rememberTimer}\r\n          setFeedbackshow={setFeedbackshow}\r\n          FeedBackData={FeedBackData}\r\n          rememberMeType={rememberMeType}\r\n        />\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport const SupercheckOptions = React.memo(SupercheckOptionsx);\r\n"]},"metadata":{},"sourceType":"module"}