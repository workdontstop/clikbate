{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\super\\\\src\\\\upload\\\\UploadProfilePic.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useCallback, useState, useLayoutEffect } from \"react\";\nimport { Grid, DialogContent } from \"@material-ui/core\";\nimport { matchTablet, matchMobile } from \"../DetectDevice\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Axios from \"axios\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport date from \"date-and-time\";\nimport { UserInfoUpdatePROFILE } from \"../log/actions/UserdataAction\";\nimport { UserInfoUpdateBILLBOARD } from \"../log/actions/UserdataAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UploadProfilePicx({\n  showModalUploadProfile,\n  cropimageProfile,\n  profileimageSource,\n  typex,\n  uploadClose\n}) {\n  _s();\n\n  const cropCanvasRefx = useRef(null);\n  var quality = 1;\n\n  if (typex === \"Profile\") {\n    quality = 1.1;\n  } else {\n    quality = 1.5;\n  }\n\n  const dispatch = useDispatch();\n  const [CropImageHolder, setCropImageHolder] = useState(null);\n  const hdcanvasvalue = 1;\n  const getpreviewFixedWidthRef = useRef(null);\n  const getCropHeightRef = useRef(null);\n  const getCropWidthMobileRef = useRef(null);\n  const getCropWidthMobileReflong = useRef(null);\n  const getCropWidthMobileRefHD = useRef(null);\n  const getCropHeightRefsingle = useRef(null);\n  const getFixedCropWidthRef = useRef(null);\n  const [myCropWidth, setmyCropWidth] = useState(0);\n  const [myCropHeight, setmyCropHeight] = useState(0);\n  const [matchTabletMobile, setmatchTabletMobile] = useState(false);\n  const [getpreviewFixedWidth, setgetpreviewFixedWidth] = useState(0);\n  const [screenH, setscreenH] = useState(0);\n  const [waitONLOAD, setwaitONLOAD] = useState(true);\n  const [getCropHeightRealImageRatio, setgetCropHeightRealImageRatio] = useState(0);\n  const [getCropWidthMobile, setgetCropWidthMobile] = useState(0);\n  const [getCropWidthMobileHD, setgetCropWidthMobileHD] = useState(0);\n  const [widelongboxmobileimage, setwidelongboxmobileimage] = useState(false);\n  const [widelongboxmobileimagex, setwidelongboxmobileimagex] = useState(false);\n  const [OriginalImageWidth, setOriginalImageWidth] = useState(0);\n  const [OriginalImageHeight, setOriginalImageHeight] = useState(0);\n  const [cropwidth, setcropwidth] = useState(0);\n  const [cropheight, setcropheight] = useState(0);\n  const [WideImageCheck, setWideImageCheck] = useState(false);\n  const [SourceWidthForCropX, setSourceWidthForCropX] = useState(0);\n  const [SourceWidthForCropY, setSourceWidthForCropY] = useState(0);\n  const [BoxCropActivated, setBoxCropActivated] = useState(true);\n  const [zoom, setzoom] = useState(1);\n  const [crop, setcrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [optionscropshow, setoptionscropshow] = useState(true);\n  const [superLoadFadex, setsuperLoadFadex] = useState(false);\n  const s3finaldatax = []; //\n  //\n  //\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\n\n  const animation = useSpring({\n    config: {\n      duration: 600\n    },\n    opacity: showModalUploadProfile ? 1 : 0,\n    transform: showModalUploadProfile ? `translateY(0%)` : `translateY(-100%)`,\n    padding: \"0px\"\n  }); ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env;\n  const cropscrollRef = useRef(null);\n  const cropTOPLEVELScrollRef = useRef(null); ///\n  ///\n  ///\n  ///GET DIMENSIONS AND  SCREEN HEIGHT\n\n  useLayoutEffect(() => {\n    if (matchTablet || matchMobile) {\n      setmatchTabletMobile(true);\n    }\n\n    if (getpreviewFixedWidthRef.current && getpreviewFixedWidthRef.current.clientWidth) {\n      setgetpreviewFixedWidth(getpreviewFixedWidthRef.current.clientWidth);\n    }\n\n    if (getCropHeightRefsingle.current && getCropHeightRefsingle.current.clientHeight) {\n      setscreenH(getCropHeightRefsingle.current.clientHeight);\n    }\n\n    if (profileimageSource.length === 1) {\n      setwaitONLOAD(false);\n\n      if (getCropHeightRefsingle.current && getCropHeightRefsingle.current.clientHeight || getCropHeightRef.current) {\n        if (matchTabletMobile) {\n          setmyCropHeight(getCropWidthMobileRef.current.clientWidth * hdcanvasvalue);\n          setmyCropWidth(getCropWidthMobileRef.current.clientWidth * hdcanvasvalue);\n        } else {\n          if (typex === \"Profile\") {\n            setmyCropWidth(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue);\n            setmyCropHeight(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue);\n          } else {\n            if (WideImageCheck) {\n              setmyCropWidth(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue + getCropHeightRefsingle.current.clientHeight * 0);\n              setmyCropHeight(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue - getCropHeightRefsingle.current.clientHeight * 0.22);\n            } else {\n              setmyCropWidth(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue + getCropHeightRefsingle.current.clientHeight * 0.2);\n              setmyCropHeight(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue - getCropHeightRefsingle.current.clientHeight * 0.32);\n            }\n          }\n        }\n\n        setgetCropHeightRealImageRatio(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue);\n      }\n    } else {\n      if (getCropHeightRef.current && getCropHeightRef.current.clientHeight) {\n        if (matchTabletMobile) {\n          setmyCropHeight(getCropWidthMobileRef.current.clientWidth * hdcanvasvalue);\n          setmyCropWidth(getCropWidthMobileRef.current.clientWidth * hdcanvasvalue);\n        } else {\n          setmyCropHeight(getCropHeightRef.current.clientHeight * hdcanvasvalue);\n          setmyCropWidth(getCropHeightRef.current.clientHeight * hdcanvasvalue);\n        }\n\n        setgetCropHeightRealImageRatio(getCropHeightRef.current.clientHeight);\n      }\n    }\n\n    if (getCropWidthMobileRef.current && getCropWidthMobileRef.current.clientWidth) {\n      setgetCropWidthMobile(getCropWidthMobileRef.current.clientWidth);\n    }\n\n    if (getCropWidthMobileRefHD.current && getCropWidthMobileRefHD.current.clientWidth) {\n      setgetCropWidthMobileHD(getCropWidthMobileRefHD.current.clientWidth);\n    }\n  }, [profileimageSource, typex, WideImageCheck]);\n  const draw = useCallback((ctx, dimensions, type, axis, allowZoomedAxis) => {\n    var allowZoomedaxis, aa;\n\n    if (typex === \"Profile\") {\n      aa = -(dimensions * zoom) / 4;\n    } else {\n      aa = axis;\n    }\n\n    if (zoom === 1) {\n      allowZoomedaxis = 0;\n    } else {\n      allowZoomedaxis = allowZoomedAxis;\n    }\n\n    if (type === 1) {\n      ctx.drawImage(CropImageHolder, aa, allowZoomedaxis, dimensions * zoom, myCropHeight * quality * zoom);\n    } else if (type === 2) {\n      ctx.drawImage(CropImageHolder, allowZoomedaxis, axis, myCropWidth * quality * zoom, dimensions * zoom);\n    } else {\n      ctx.drawImage(CropImageHolder, 0, 0, OriginalImageWidth, OriginalImageHeight);\n    }\n  }, [OriginalImageWidth, OriginalImageHeight, CropImageHolder, myCropHeight, myCropWidth, zoom, typex]);\n  useLayoutEffect(() => {\n    const Newcropimage = new Image();\n    Newcropimage.src = cropimageProfile;\n\n    Newcropimage.onload = function () {\n      if (CropImageHolder === Newcropimage) {} else {\n        setCropImageHolder(Newcropimage);\n      }\n\n      var data1 = 0;\n      var data2 = 0;\n      var RatioNewcropimageNaturalHeight = Newcropimage.naturalHeight / myCropHeight;\n      var NewcropimageWidth = Newcropimage.naturalWidth / RatioNewcropimageNaturalHeight;\n      var RatioNewcropimageNaturalWidth = Newcropimage.naturalWidth / getCropWidthMobileHD;\n      var NewcropimageHeight = Newcropimage.naturalHeight / RatioNewcropimageNaturalWidth;\n      var RatioNewcropimageNaturalWidthxx = Newcropimage.naturalWidth / getCropWidthMobile;\n      var NewcropimageHeightxx = Newcropimage.naturalHeight / RatioNewcropimageNaturalWidthxx; ////// CANVAS  CROPPER DIMENSIONS  PC MOBILE(canvaswidth)\n\n      if (matchTabletMobile && NewcropimageHeightxx < screenH) {\n        setwidelongboxmobileimage(true);\n        setwidelongboxmobileimagex(true);\n\n        if (OriginalImageHeight === NewcropimageHeight) {} else {\n          setOriginalImageHeight(NewcropimageHeight);\n          data2 = NewcropimageHeight;\n        } //\n\n\n        if (OriginalImageWidth === getCropWidthMobileHD) {} else {\n          setOriginalImageWidth(getCropWidthMobileHD);\n          data1 = getCropWidthMobileHD;\n        }\n      } else {\n        setwidelongboxmobileimage(false);\n        setwidelongboxmobileimagex(false);\n\n        if (OriginalImageWidth === NewcropimageWidth) {} else {\n          setOriginalImageWidth(NewcropimageWidth);\n          data1 = NewcropimageWidth;\n        } ///\n\n\n        if (OriginalImageHeight === myCropHeight) {} else {\n          setOriginalImageHeight(myCropHeight);\n          data2 = myCropHeight;\n        }\n      } ////// CANVAS  CROPPER DIMENSIONS  PC MOBILE(canvaswidth)\n\n\n      if (Newcropimage.naturalWidth > Newcropimage.naturalHeight) {\n        setWideImageCheck(true);\n      } else {\n        setWideImageCheck(false);\n      }\n\n      if (cropwidth === data1) {} else {\n        setcropwidth(data1);\n      }\n\n      if (cropheight === data2) {} else {\n        setcropheight(data2);\n      }\n    };\n  }, [cropimageProfile, showModalUploadProfile]); ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    id,\n    username\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const idReducer = id;\n  const usernameReducer = username;\n\n  function blobToBase64(blob) {\n    return new Promise((resolve, _) => {\n      const reader = new FileReader();\n\n      reader.onloadend = () => resolve(reader.result);\n\n      reader.readAsDataURL(blob);\n    });\n  }\n\n  const postbillboardData = useCallback((a, b) => {\n    setsuperLoadFadex(true); // Creating object of current date and time\n    // by using Date()\n\n    const now = new Date(); // Formatting the date and time\n    // by using date.format() method\n\n    const datevalue = date.format(now, \"YYYY_MM_DD_HH_mm_ss\");\n    let formData = new FormData();\n    const datev = new Date();\n    formData.append(\"id\", `${idReducer}`);\n    formData.append(\"finalxxy\", a, `User${usernameReducer}${datevalue}`);\n    Axios.post(`${REACT_APP_SUPERSTARZ_URL}/billboard_upload`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(response => {\n      if (response.data.message === \"billboard image uploaded\") {\n        setsuperLoadFadex(false);\n        const data = {\n          billboard1: b\n        };\n        dispatch(UserInfoUpdateBILLBOARD(data));\n        uploadClose(3);\n      }\n    }).catch(function (error) {\n      alert(\"caption erroerrr\");\n    });\n  }, [idReducer, blobToBase64]);\n\n  const GetSecureURL = (a, b) => {\n    Axios.post(`${REACT_APP_SUPERSTARZ_URL}/profile_upload`).then(response => {\n      setsuperLoadFadex(false);\n      var urlx = response.data.url;\n      setsuperLoadFadex(true);\n      PutImageInS3WithURL(urlx.urla, a, b, false);\n    }).catch(function (error) {\n      setsuperLoadFadex(false);\n      alert(\"caption erroerrr\");\n    });\n  };\n\n  const PutImageInS3WithURL = (urlx, a, b, allow) => {\n    Axios.put(urlx, a).then(response => {\n      setsuperLoadFadex(false);\n      console.log(response);\n\n      if (response.status === 200) {\n        const imagelink = urlx.split('?')[0];\n        setsuperLoadFadex(true);\n        s3finaldatax[index] = canvasRefsticker.current.toDataURL();\n        setduplicateItemupload(s3finaldatax);\n\n        if (allow) {\n          var datak = {\n            imagedata: imagelink,\n            id: idReducer\n          };\n          UpdateDatabaseStatus200(datak, b);\n        } else {\n          PutImageInS3WithURL(urlx.urlb, a, b, true);\n        }\n      }\n    }).catch(function (error) {\n      setsuperLoadFadex(false);\n      alert(\"caption erroerrr\");\n    });\n  };\n\n  const UpdateDatabaseStatus200 = (datak, b) => {\n    Axios.put(`${REACT_APP_SUPERSTARZ_URL}/profile_upload_data`, {\n      values: datak\n    }).then(response => {\n      setsuperLoadFadex(false);\n\n      if (response.data.message === \"profile image data updated\") {\n        const data = {\n          image: b\n        };\n        dispatch(UserInfoUpdatePROFILE(data));\n        uploadClose(4);\n      }\n    }).catch(function (error) {\n      setsuperLoadFadex(false);\n      alert(\" error\");\n    });\n  };\n\n  const postProfiledata = useCallback((a, b) => {\n    setsuperLoadFadex(true);\n    GetSecureURL(a, b);\n  }, [idReducer]);\n\n  const drawcropper = upl => {\n    if (CropImageHolder && cropCanvasRefx.current) {\n      const ctx = cropCanvasRefx.current.getContext(\"2d\");\n      var nn = myCropHeight * quality;\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / nn;\n      var NewBoxRatioWidth_WIDEIMAGE = OriginalImageWidth / RatiofromOriginalandfixedHeight;\n\n      if (SourceWidthForCropX === NewBoxRatioWidth_WIDEIMAGE) {} else {\n        setSourceWidthForCropX(NewBoxRatioWidth_WIDEIMAGE);\n      }\n\n      var bb = myCropWidth * quality;\n      var RatiofromOriginalandfixedHeightx = OriginalImageWidth / bb;\n      var NewBoxRatioWidth_LONGIMAGE = OriginalImageHeight / RatiofromOriginalandfixedHeightx;\n\n      if (SourceWidthForCropY === NewBoxRatioWidth_LONGIMAGE) {} else {\n        setSourceWidthForCropY(NewBoxRatioWidth_LONGIMAGE);\n      }\n\n      var ratioh = OriginalImageWidth * 3 / OriginalImageWidth;\n      var ratiow = OriginalImageHeight * 3 / OriginalImageHeight;\n\n      if (BoxCropActivated) {\n        cropCanvasRefx.current.width = myCropWidth * quality;\n        cropCanvasRefx.current.height = myCropHeight * quality;\n      } else {\n        cropCanvasRefx.current.width = OriginalImageWidth;\n        cropCanvasRefx.current.height = OriginalImageHeight;\n      }\n\n      var centerpreview = cropCanvasRefx.current.width / 1.5 - NewBoxRatioWidth_LONGIMAGE / 1.5;\n      var xtraZoom = myCropHeight / NewBoxRatioWidth_WIDEIMAGE;\n      var centerCropCanvas = cropCanvasRefx.current.width / 2 - NewBoxRatioWidth_WIDEIMAGE / 2; //////////////////////////CSS CALCULATION MOBILE PC\n\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / getCropHeightRealImageRatio;\n      var newcropCSSWidth = OriginalImageWidth / RatiofromOriginalandfixedHeight; ///\n\n      var RatiofromOriginalandfixedWidth = OriginalImageWidth / getCropWidthMobile;\n      var newcropCSSHeight = OriginalImageHeight / RatiofromOriginalandfixedWidth; //////////////////////////CSS CALCULATION MOBILE PC\n\n      if (BoxCropActivated) {\n        var xx = myCropWidth * zoom;\n        var RatiofromOriginalandfixedHeightx = OriginalImageWidth / xx;\n        var NewBoxRatioWidth_LONGIMAGEx = OriginalImageHeight / RatiofromOriginalandfixedHeightx;\n        var xxx = NewBoxRatioWidth_LONGIMAGE * zoom;\n        var RatiofromOriginalandfixedWidthx = OriginalImageHeight / xxx;\n        var NewBoxRatioWidth_WIDEIMAGEx = OriginalImageWidth / RatiofromOriginalandfixedWidthx;\n        var xx2 = NewBoxRatioWidth_WIDEIMAGE * zoom;\n        var RatiofromOriginalandfixedHeightx2 = OriginalImageWidth / xx2;\n        var NewBoxRatioWidth_LONGIMAGEx2 = OriginalImageHeight / RatiofromOriginalandfixedHeightx2;\n        var xxx2 = myCropHeight * zoom;\n        var RatiofromOriginalandfixedWidthx2 = OriginalImageHeight / xxx2;\n        var NewBoxRatioWidth_WIDEIMAGEx2 = OriginalImageWidth / RatiofromOriginalandfixedWidthx2;\n\n        if (OriginalImageWidth > OriginalImageHeight) {\n          if (OriginalImageHeight === OriginalImageWidth) {\n            requestAnimationFrame(async () => {\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, 0, crop.x);\n\n              try {\n                if (upl === 1) {\n                  var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\n                  const res = await fetch(data);\n                  const datax = await res.blob();\n\n                  if (typex === \"Profile\") {\n                    var base64String = await blobToBase64(datax);\n                    postProfiledata(datax, base64String);\n                  } else {\n                    var base64String = await blobToBase64(datax);\n                    postbillboardData(datax, base64String);\n                  }\n                }\n              } catch {\n                console.log(\"upload profile pic\");\n              }\n            });\n          } else {\n            requestAnimationFrame(async () => {\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, crop.x, crop.y);\n\n              try {\n                if (upl === 1) {\n                  var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\n                  const res = await fetch(data);\n                  const datax = await res.blob();\n\n                  if (typex === \"Profile\") {\n                    var base64String = await blobToBase64(datax);\n                    postProfiledata(datax, base64String);\n                  } else {\n                    var base64String = await blobToBase64(datax);\n                    postbillboardData(datax, base64String);\n                  }\n                }\n              } catch {\n                console.log(\"upload profile pic\");\n              }\n            });\n          }\n        } else {\n          if (OriginalImageHeight === OriginalImageWidth) {\n            requestAnimationFrame(async () => {\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, 0, crop.x);\n\n              try {\n                if (upl === 1) {\n                  var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\n                  const res = await fetch(data);\n                  const datax = await res.blob();\n\n                  if (typex === \"Profile\") {\n                    var base64String = await blobToBase64(datax);\n                    postProfiledata(datax, base64String);\n                  } else {\n                    var base64String = await blobToBase64(datax);\n                    postbillboardData(datax, base64String);\n                  }\n                }\n              } catch {\n                console.log(\"upload profile pic\");\n              }\n            });\n          } else {\n            requestAnimationFrame(async () => {\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, crop.y, crop.x);\n\n              try {\n                if (upl === 1) {\n                  var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\n                  const res = await fetch(data);\n                  const datax = await res.blob();\n\n                  if (typex === \"Profile\") {\n                    var base64String = await blobToBase64(datax);\n                    postProfiledata(datax, base64String);\n                  } else {\n                    var base64String = await blobToBase64(datax);\n                    postbillboardData(datax, base64String);\n                  }\n                }\n              } catch {\n                console.log(\"upload profile pic\");\n              }\n            });\n          }\n        }\n\n        cropCanvasRefx.current.style.width = `${myCropWidth / hdcanvasvalue}px`;\n        cropCanvasRefx.current.style.height = `${myCropHeight / hdcanvasvalue}px`;\n      } else {\n        requestAnimationFrame(async () => {\n          draw(ctx, 0, 3, 0, crop.x);\n\n          try {\n            if (upl === 1) {\n              var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\n              const res = await fetch(data);\n              const datax = await res.blob();\n\n              if (typex === \"Profile\") {\n                var base64String = await blobToBase64(datax);\n                postProfiledata(datax, base64String);\n              } else {\n                var base64String = await blobToBase64(datax);\n                postbillboardData(datax, base64String);\n              }\n            }\n          } catch {\n            console.log(\"upload profile pic\");\n          }\n        });\n\n        if (matchTabletMobile && widelongboxmobileimage) {\n          cropCanvasRefx.current.style.width = `${getCropWidthMobile}px`;\n          cropCanvasRefx.current.style.height = `${newcropCSSHeight}px`;\n        } else {\n          cropCanvasRefx.current.style.width = `${newcropCSSWidth}px`;\n          cropCanvasRefx.current.style.height = `${getCropHeightRealImageRatio}px`;\n        }\n      }\n    }\n  };\n\n  useLayoutEffect(() => {\n    drawcropper(0);\n  }, [CropImageHolder, BoxCropActivated, OriginalImageWidth, OriginalImageHeight, widelongboxmobileimage, myCropHeight, crop, zoom]);\n\n  const done = () => {\n    drawcropper(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showModalUploadProfile ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: darkmodeReducer ? \"dialog-container\" : \"dialog-container\",\n      style: {\n        padding: \"0px\",\n        height: \"100vh\",\n        position: \"fixed\",\n        zIndex: 100,\n        cursor: \"default\",\n        overflow: \"hidden\"\n      },\n      children: [superLoadFadex ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          style: {\n            backgroundColor: darkmodeReducer ? \"rgba(50,50,50,0.65)\" : \"rgba(250,250,250,0.65)\",\n            position: \"fixed\",\n            top: \"0px\",\n            width: \"100%\",\n            height: \"100%\",\n            zIndex: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 15\n        }, this), \" \"]\n      }, void 0, true) : null, /*#__PURE__*/_jsxDEV(animated.div, {\n        ref: cropscrollRef,\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(DialogContent, {\n          ref: cropTOPLEVELScrollRef,\n          className: matchMobile || matchTablet ? darkmodeReducer ? \" dontallowhighlighting modal-containerDarkmob\" : \" dontallowhighlighting  modal-containerLightmob \" : darkmodeReducer ? \" dontallowhighlighting modal-containerDark  postscroll-dark \" : \" dontallowhighlighting  modal-containerLight  postscroll-light \",\n          style: {\n            padding: \"0px\",\n            height: \"100vh\",\n            overflow: \"hidden\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            style: {\n              padding: \"0px\",\n              bottom: typex === \"Profile\" ? \"13.6vh\" : WideImageCheck ? \"33vh\" : \"43vh\",\n              margin: \"auto\",\n              width: `100%`,\n              height: \"0px\",\n              position: \"absolute\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              alignContent: \"center\",\n              zIndex: 5,\n              alignSelf: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              style: {\n                padding: \"0px\",\n                height: \"0px\",\n                margin: \"auto\",\n                display: \"grid\",\n                alignItems: \"center\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              style: {\n                padding: \"0px\",\n                height: \"0px\",\n                margin: \"auto\",\n                display: \"grid\",\n                alignItems: \"center\"\n              },\n              children: optionscropshow ? /*#__PURE__*/_jsxDEV(CheckIcon, {\n                onClick: done,\n                className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \",\n                style: {\n                  margin: \"auto\",\n                  fontSize: matchTabletMobile ? \"4.8vh\" : \"2.9vw\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 852,\n                columnNumber: 21\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 840,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              style: {\n                padding: \"0px\",\n                height: \"0px\",\n                margin: \"auto\",\n                display: \"grid\",\n                alignItems: \"center\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            style: {\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: cropCanvasRefx,\n              style: {\n                padding: \"0px\",\n                margin: \"auto\",\n                zIndex: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 881,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        height: \"100%\",\n        position: \"fixed\",\n        top: \"-800vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getpreviewFixedWidthRef,\n          xs: 5,\n          style: {\n            padding: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getFixedCropWidthRef,\n          xs: 4,\n          style: {\n            padding: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropHeightRef,\n          xs: 12,\n          style: {\n            height: \"92%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropWidthMobileRef,\n          xs: 12,\n          style: {\n            padding: \"0px\",\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropWidthMobileReflong,\n          xs: 12,\n          style: {\n            padding: \"0px\",\n            width: \"150%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 939,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropWidthMobileRefHD,\n          style: {\n            padding: \"0px\",\n            width: \"150%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropHeightRefsingle,\n          xs: 12,\n          style: {\n            height: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UploadProfilePicx, \"ZnmYzdYtm3EK9pde8RNL3gZEG0g=\", false, function () {\n  return [useDispatch, useSpring, useSelector, useSelector];\n});\n\n_c = UploadProfilePicx;\nexport const UploadProfilePic = /*#__PURE__*/React.memo(UploadProfilePicx);\n_c2 = UploadProfilePic;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadProfilePicx\");\n$RefreshReg$(_c2, \"UploadProfilePic\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/super/src/upload/UploadProfilePic.tsx"],"names":["React","useRef","useCallback","useState","useLayoutEffect","Grid","DialogContent","matchTablet","matchMobile","useSpring","animated","useSelector","useDispatch","Axios","CheckIcon","date","UserInfoUpdatePROFILE","UserInfoUpdateBILLBOARD","UploadProfilePicx","showModalUploadProfile","cropimageProfile","profileimageSource","typex","uploadClose","cropCanvasRefx","quality","dispatch","CropImageHolder","setCropImageHolder","hdcanvasvalue","getpreviewFixedWidthRef","getCropHeightRef","getCropWidthMobileRef","getCropWidthMobileReflong","getCropWidthMobileRefHD","getCropHeightRefsingle","getFixedCropWidthRef","myCropWidth","setmyCropWidth","myCropHeight","setmyCropHeight","matchTabletMobile","setmatchTabletMobile","getpreviewFixedWidth","setgetpreviewFixedWidth","screenH","setscreenH","waitONLOAD","setwaitONLOAD","getCropHeightRealImageRatio","setgetCropHeightRealImageRatio","getCropWidthMobile","setgetCropWidthMobile","getCropWidthMobileHD","setgetCropWidthMobileHD","widelongboxmobileimage","setwidelongboxmobileimage","widelongboxmobileimagex","setwidelongboxmobileimagex","OriginalImageWidth","setOriginalImageWidth","OriginalImageHeight","setOriginalImageHeight","cropwidth","setcropwidth","cropheight","setcropheight","WideImageCheck","setWideImageCheck","SourceWidthForCropX","setSourceWidthForCropX","SourceWidthForCropY","setSourceWidthForCropY","BoxCropActivated","setBoxCropActivated","zoom","setzoom","crop","setcrop","x","y","optionscropshow","setoptionscropshow","superLoadFadex","setsuperLoadFadex","s3finaldatax","animation","config","duration","opacity","transform","padding","darkmode","state","GlobalReducer","darkmodeReducer","REACT_APP_SUPERSTARZ_URL","process","env","cropscrollRef","cropTOPLEVELScrollRef","current","clientWidth","clientHeight","length","draw","ctx","dimensions","type","axis","allowZoomedAxis","allowZoomedaxis","aa","drawImage","Newcropimage","Image","src","onload","data1","data2","RatioNewcropimageNaturalHeight","naturalHeight","NewcropimageWidth","naturalWidth","RatioNewcropimageNaturalWidth","NewcropimageHeight","RatioNewcropimageNaturalWidthxx","NewcropimageHeightxx","id","username","UserdataReducer","idReducer","usernameReducer","blobToBase64","blob","Promise","resolve","_","reader","FileReader","onloadend","result","readAsDataURL","postbillboardData","a","b","now","Date","datevalue","format","formData","FormData","datev","append","post","headers","then","response","data","message","billboard1","catch","error","alert","GetSecureURL","urlx","url","PutImageInS3WithURL","urla","allow","put","console","log","status","imagelink","split","index","canvasRefsticker","toDataURL","setduplicateItemupload","datak","imagedata","UpdateDatabaseStatus200","urlb","values","image","postProfiledata","drawcropper","upl","getContext","nn","RatiofromOriginalandfixedHeight","NewBoxRatioWidth_WIDEIMAGE","bb","RatiofromOriginalandfixedHeightx","NewBoxRatioWidth_LONGIMAGE","ratioh","ratiow","width","height","centerpreview","xtraZoom","centerCropCanvas","newcropCSSWidth","RatiofromOriginalandfixedWidth","newcropCSSHeight","xx","NewBoxRatioWidth_LONGIMAGEx","xxx","RatiofromOriginalandfixedWidthx","NewBoxRatioWidth_WIDEIMAGEx","xx2","RatiofromOriginalandfixedHeightx2","NewBoxRatioWidth_LONGIMAGEx2","xxx2","RatiofromOriginalandfixedWidthx2","NewBoxRatioWidth_WIDEIMAGEx2","requestAnimationFrame","res","fetch","datax","base64String","style","done","position","zIndex","cursor","overflow","backgroundColor","top","bottom","margin","display","justifyContent","alignItems","alignContent","alignSelf","fontSize","UploadProfilePic","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useRef,\r\n  useEffect,\r\n  useCallback,\r\n  useState,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport ControlPointDuplicateIcon from \"@mui/icons-material/ControlPointDuplicate\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport Axios from \"axios\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport date from \"date-and-time\";\r\nimport { UserInfoUpdatePROFILE } from \"../log/actions/UserdataAction\";\r\nimport { UserInfoUpdateBILLBOARD } from \"../log/actions/UserdataAction\";\r\n\r\nfunction UploadProfilePicx({\r\n  showModalUploadProfile,\r\n  cropimageProfile,\r\n  profileimageSource,\r\n  typex,\r\n  uploadClose,\r\n}: any): JSX.Element {\r\n  const cropCanvasRefx: any = useRef(null);\r\n\r\n  var quality: number = 1;\r\n\r\n  if (typex === \"Profile\") {\r\n    quality = 1.1;\r\n  } else {\r\n    quality = 1.5;\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [CropImageHolder, setCropImageHolder] = useState<any>(null);\r\n\r\n  const hdcanvasvalue = 1;\r\n\r\n  const getpreviewFixedWidthRef = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropHeightRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropWidthMobileRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropWidthMobileReflong: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropWidthMobileRefHD: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropHeightRefsingle: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getFixedCropWidthRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const [myCropWidth, setmyCropWidth] = useState(0);\r\n\r\n  const [myCropHeight, setmyCropHeight] = useState(0);\r\n\r\n  const [matchTabletMobile, setmatchTabletMobile] = useState<boolean>(false);\r\n\r\n  const [getpreviewFixedWidth, setgetpreviewFixedWidth] = useState(0);\r\n\r\n  const [screenH, setscreenH] = useState(0);\r\n\r\n  const [waitONLOAD, setwaitONLOAD] = useState<boolean>(true);\r\n\r\n  const [getCropHeightRealImageRatio, setgetCropHeightRealImageRatio] =\r\n    useState(0);\r\n\r\n  const [getCropWidthMobile, setgetCropWidthMobile] = useState(0);\r\n\r\n  const [getCropWidthMobileHD, setgetCropWidthMobileHD] = useState(0);\r\n\r\n  const [widelongboxmobileimage, setwidelongboxmobileimage] =\r\n    useState<boolean>(false);\r\n\r\n  const [widelongboxmobileimagex, setwidelongboxmobileimagex] =\r\n    useState<boolean>(false);\r\n\r\n  const [OriginalImageWidth, setOriginalImageWidth] = useState<number>(0);\r\n  const [OriginalImageHeight, setOriginalImageHeight] = useState<number>(0);\r\n\r\n  const [cropwidth, setcropwidth] = useState(0);\r\n\r\n  const [cropheight, setcropheight] = useState(0);\r\n\r\n  const [WideImageCheck, setWideImageCheck] = useState<boolean>(false);\r\n\r\n  const [SourceWidthForCropX, setSourceWidthForCropX] = useState(0);\r\n\r\n  const [SourceWidthForCropY, setSourceWidthForCropY] = useState(0);\r\n\r\n  const [BoxCropActivated, setBoxCropActivated] = useState<boolean>(true);\r\n\r\n  const [zoom, setzoom] = useState<any>(1);\r\n\r\n  const [crop, setcrop] = useState<any>({ x: 0, y: 0 });\r\n  const [optionscropshow, setoptionscropshow] = useState<boolean>(true);\r\n\r\n  const [superLoadFadex, setsuperLoadFadex] = useState<boolean>(false);\r\n\r\n\r\n  const s3finaldatax = [];\r\n   \r\n  //\r\n  //\r\n  //\r\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 600,\r\n    },\r\n    opacity: showModalUploadProfile ? 1 : 0,\r\n    transform: showModalUploadProfile ? `translateY(0%)` : `translateY(-100%)`,\r\n    padding: \"0px\",\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n  const cropscrollRef = useRef<any>(null);\r\n  const cropTOPLEVELScrollRef: any = useRef(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///GET DIMENSIONS AND  SCREEN HEIGHT\r\n  useLayoutEffect(() => {\r\n    if (matchTablet || matchMobile) {\r\n      setmatchTabletMobile(true);\r\n    }\r\n    if (\r\n      getpreviewFixedWidthRef.current &&\r\n      getpreviewFixedWidthRef.current.clientWidth\r\n    ) {\r\n      setgetpreviewFixedWidth(getpreviewFixedWidthRef.current.clientWidth);\r\n    }\r\n\r\n    if (\r\n      getCropHeightRefsingle.current &&\r\n      getCropHeightRefsingle.current.clientHeight\r\n    ) {\r\n      setscreenH(getCropHeightRefsingle.current.clientHeight);\r\n    }\r\n\r\n    if (profileimageSource.length === 1) {\r\n      setwaitONLOAD(false);\r\n      if (\r\n        (getCropHeightRefsingle.current &&\r\n          getCropHeightRefsingle.current.clientHeight) ||\r\n        getCropHeightRef.current\r\n      ) {\r\n        if (matchTabletMobile) {\r\n          setmyCropHeight(\r\n            getCropWidthMobileRef.current.clientWidth * hdcanvasvalue\r\n          );\r\n          setmyCropWidth(\r\n            getCropWidthMobileRef.current.clientWidth * hdcanvasvalue\r\n          );\r\n        } else {\r\n          if (typex === \"Profile\") {\r\n            setmyCropWidth(\r\n              getCropHeightRefsingle.current.clientHeight * hdcanvasvalue\r\n            );\r\n\r\n            setmyCropHeight(\r\n              getCropHeightRefsingle.current.clientHeight * hdcanvasvalue\r\n            );\r\n          } else {\r\n            if (WideImageCheck) {\r\n              setmyCropWidth(\r\n                getCropHeightRefsingle.current.clientHeight * hdcanvasvalue +\r\n                  getCropHeightRefsingle.current.clientHeight * 0\r\n              );\r\n\r\n              setmyCropHeight(\r\n                getCropHeightRefsingle.current.clientHeight * hdcanvasvalue -\r\n                  getCropHeightRefsingle.current.clientHeight * 0.22\r\n              );\r\n            } else {\r\n              setmyCropWidth(\r\n                getCropHeightRefsingle.current.clientHeight * hdcanvasvalue +\r\n                  getCropHeightRefsingle.current.clientHeight * 0.2\r\n              );\r\n\r\n              setmyCropHeight(\r\n                getCropHeightRefsingle.current.clientHeight * hdcanvasvalue -\r\n                  getCropHeightRefsingle.current.clientHeight * 0.32\r\n              );\r\n            }\r\n          }\r\n        }\r\n\r\n        setgetCropHeightRealImageRatio(\r\n          getCropHeightRefsingle.current.clientHeight * hdcanvasvalue\r\n        );\r\n      }\r\n    } else {\r\n      if (getCropHeightRef.current && getCropHeightRef.current.clientHeight) {\r\n        if (matchTabletMobile) {\r\n          setmyCropHeight(\r\n            getCropWidthMobileRef.current.clientWidth * hdcanvasvalue\r\n          );\r\n          setmyCropWidth(\r\n            getCropWidthMobileRef.current.clientWidth * hdcanvasvalue\r\n          );\r\n        } else {\r\n          setmyCropHeight(\r\n            getCropHeightRef.current.clientHeight * hdcanvasvalue\r\n          );\r\n          setmyCropWidth(getCropHeightRef.current.clientHeight * hdcanvasvalue);\r\n        }\r\n\r\n        setgetCropHeightRealImageRatio(getCropHeightRef.current.clientHeight);\r\n      }\r\n    }\r\n\r\n    if (\r\n      getCropWidthMobileRef.current &&\r\n      getCropWidthMobileRef.current.clientWidth\r\n    ) {\r\n      setgetCropWidthMobile(getCropWidthMobileRef.current.clientWidth);\r\n    }\r\n\r\n    if (\r\n      getCropWidthMobileRefHD.current &&\r\n      getCropWidthMobileRefHD.current.clientWidth\r\n    ) {\r\n      setgetCropWidthMobileHD(getCropWidthMobileRefHD.current.clientWidth);\r\n    }\r\n  }, [profileimageSource, typex, WideImageCheck]);\r\n\r\n  const draw = useCallback(\r\n    (\r\n      ctx: any,\r\n      dimensions: any,\r\n      type: number,\r\n      axis: number,\r\n      allowZoomedAxis: number\r\n    ) => {\r\n      var allowZoomedaxis, aa;\r\n\r\n      if (typex === \"Profile\") {\r\n        aa = -(dimensions * zoom) / 4;\r\n      } else {\r\n        aa = axis;\r\n      }\r\n\r\n      if (zoom === 1) {\r\n        allowZoomedaxis = 0;\r\n      } else {\r\n        allowZoomedaxis = allowZoomedAxis;\r\n      }\r\n      if (type === 1) {\r\n        ctx.drawImage(\r\n          CropImageHolder,\r\n          aa,\r\n          allowZoomedaxis,\r\n          dimensions * zoom,\r\n          myCropHeight * quality * zoom\r\n        );\r\n      } else if (type === 2) {\r\n        ctx.drawImage(\r\n          CropImageHolder,\r\n          allowZoomedaxis,\r\n          axis,\r\n          myCropWidth * quality * zoom,\r\n          dimensions * zoom\r\n        );\r\n      } else {\r\n        ctx.drawImage(\r\n          CropImageHolder,\r\n          0,\r\n          0,\r\n          OriginalImageWidth,\r\n          OriginalImageHeight\r\n        );\r\n      }\r\n    },\r\n    [\r\n      OriginalImageWidth,\r\n      OriginalImageHeight,\r\n      CropImageHolder,\r\n      myCropHeight,\r\n      myCropWidth,\r\n      zoom,\r\n      typex,\r\n    ]\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    const Newcropimage: any = new Image();\r\n\r\n    Newcropimage.src = cropimageProfile;\r\n    Newcropimage.onload = function () {\r\n      if (CropImageHolder === Newcropimage) {\r\n      } else {\r\n        setCropImageHolder(Newcropimage);\r\n      }\r\n\r\n      var data1: number = 0;\r\n      var data2: number = 0;\r\n\r\n      var RatioNewcropimageNaturalHeight =\r\n        Newcropimage.naturalHeight / myCropHeight;\r\n      var NewcropimageWidth =\r\n        Newcropimage.naturalWidth / RatioNewcropimageNaturalHeight;\r\n\r\n      var RatioNewcropimageNaturalWidth =\r\n        Newcropimage.naturalWidth / getCropWidthMobileHD;\r\n      var NewcropimageHeight =\r\n        Newcropimage.naturalHeight / RatioNewcropimageNaturalWidth;\r\n\r\n      var RatioNewcropimageNaturalWidthxx =\r\n        Newcropimage.naturalWidth / getCropWidthMobile;\r\n      var NewcropimageHeightxx =\r\n        Newcropimage.naturalHeight / RatioNewcropimageNaturalWidthxx;\r\n\r\n      ////// CANVAS  CROPPER DIMENSIONS  PC MOBILE(canvaswidth)\r\n\r\n      if (matchTabletMobile && NewcropimageHeightxx < screenH) {\r\n        setwidelongboxmobileimage(true);\r\n        setwidelongboxmobileimagex(true);\r\n\r\n        if (OriginalImageHeight === NewcropimageHeight) {\r\n        } else {\r\n          setOriginalImageHeight(NewcropimageHeight);\r\n          data2 = NewcropimageHeight;\r\n        }\r\n        //\r\n        if (OriginalImageWidth === getCropWidthMobileHD) {\r\n        } else {\r\n          setOriginalImageWidth(getCropWidthMobileHD);\r\n          data1 = getCropWidthMobileHD;\r\n        }\r\n      } else {\r\n        setwidelongboxmobileimage(false);\r\n        setwidelongboxmobileimagex(false);\r\n        if (OriginalImageWidth === NewcropimageWidth) {\r\n        } else {\r\n          setOriginalImageWidth(NewcropimageWidth);\r\n          data1 = NewcropimageWidth;\r\n        }\r\n        ///\r\n        if (OriginalImageHeight === myCropHeight) {\r\n        } else {\r\n          setOriginalImageHeight(myCropHeight);\r\n          data2 = myCropHeight;\r\n        }\r\n      }\r\n      ////// CANVAS  CROPPER DIMENSIONS  PC MOBILE(canvaswidth)\r\n\r\n      if (Newcropimage.naturalWidth > Newcropimage.naturalHeight) {\r\n        setWideImageCheck(true);\r\n      } else {\r\n        setWideImageCheck(false);\r\n      }\r\n\r\n      if (cropwidth === data1) {\r\n      } else {\r\n        setcropwidth(data1);\r\n      }\r\n\r\n      if (cropheight === data2) {\r\n      } else {\r\n        setcropheight(data2);\r\n      }\r\n    };\r\n  }, [cropimageProfile, showModalUploadProfile]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootUserdataReducer {\r\n    UserdataReducer: {\r\n      id:number;\r\n      username: string;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const { id, username } = useSelector((state: RootUserdataReducer) => ({\r\n    ...state.UserdataReducer,\r\n  }));\r\n\r\n  const idReducer = id;\r\n   const usernameReducer =  username;\r\n\r\n  function blobToBase64(blob: any) {\r\n    return new Promise((resolve, _) => {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => resolve(reader.result);\r\n      reader.readAsDataURL(blob);\r\n    });\r\n  }\r\n\r\n  const postbillboardData = useCallback(\r\n    (a: any, b: any) => {\r\n      setsuperLoadFadex(true);\r\n      // Creating object of current date and time\r\n      // by using Date()\r\n      const now = new Date();\r\n\r\n      // Formatting the date and time\r\n      // by using date.format() method\r\n      const datevalue = date.format(now, \"YYYY_MM_DD_HH_mm_ss\");\r\n      let formData = new FormData();\r\n      const datev = new Date();\r\n\r\n      formData.append(\"id\", `${idReducer}`);\r\n\r\n      formData.append(\"finalxxy\", a, `User${usernameReducer}${datevalue}`);\r\n\r\n      Axios.post(`${REACT_APP_SUPERSTARZ_URL}/billboard_upload`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n        \r\n          if (response.data.message === \"billboard image uploaded\") {\r\n            setsuperLoadFadex(false);\r\n           \r\n\r\n            const data = {\r\n              billboard1: b,\r\n            };\r\n            dispatch(UserInfoUpdateBILLBOARD(data));\r\n            uploadClose(3);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          alert(\"caption erroerrr\");\r\n        });\r\n    },\r\n    [idReducer, blobToBase64]\r\n  );\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const GetSecureURL=(a:any,b:any)=>{ Axios.post(`${REACT_APP_SUPERSTARZ_URL}/profile_upload`)\r\n        .then((response)=>{\r\n           setsuperLoadFadex(false);\r\n          var urlx = response.data.url;\r\n        setsuperLoadFadex(true);\r\n       PutImageInS3WithURL(urlx.urla,a,b,false);\r\n       \r\n\r\n        }) .catch(function (error) {\r\n            setsuperLoadFadex(false);\r\n          alert(\"caption erroerrr\");\r\n        })}\r\n\r\n\r\n\r\n\r\n\r\n   const PutImageInS3WithURL=(urlx:any,a:any,b:any,allow:boolean)=>{ Axios.put(urlx,a).then((response) => {\r\n           setsuperLoadFadex(false);\r\n             console.log(response);\r\n          if (response.status === 200) {       \r\nconst imagelink =urlx.split('?')[0];\r\n \r\n        setsuperLoadFadex(true);\r\n\r\n        s3finaldatax[index] = canvasRefsticker.current.toDataURL();\r\n        setduplicateItemupload(s3finaldatax);\r\n\r\n        \r\n        if(allow){\r\n          \r\n           var datak = {\r\n         imagedata: imagelink,\r\n          id: idReducer};\r\n          UpdateDatabaseStatus200(datak,b); }else{ PutImageInS3WithURL(urlx.urlb,a,b,true);}\r\n  \r\n\r\n  } }).catch(function (error) {\r\n            setsuperLoadFadex(false);\r\n          alert(\"caption erroerrr\");\r\n        });}\r\n\r\n\r\n\r\n      const UpdateDatabaseStatus200=(datak:any,b:any)=>{  Axios.put(\r\n        `${REACT_APP_SUPERSTARZ_URL}/profile_upload_data`,\r\n        { values: datak }).then((response) => {\r\n            setsuperLoadFadex(false);\r\n          if (response.data.message === \"profile image data updated\") {\r\n            const data = {\r\n              image: b,\r\n            };\r\n            dispatch(UserInfoUpdatePROFILE(data));\r\n            uploadClose(4);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n            setsuperLoadFadex(false);\r\n          alert(\" error\");\r\n        });}\r\n\r\n\r\n\r\n\r\n\r\n  const postProfiledata = useCallback(\r\n    (a: any,b: any) => {\r\n    setsuperLoadFadex(true);\r\nGetSecureURL(a,b);     \r\n    },\r\n    [idReducer]\r\n  );\r\n\r\n\r\n\r\n  const drawcropper = (upl: number) => {\r\n    if (CropImageHolder && cropCanvasRefx.current) {\r\n      const ctx = cropCanvasRefx.current.getContext(\"2d\");\r\n      var nn = myCropHeight * quality;\r\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / nn;\r\n      var NewBoxRatioWidth_WIDEIMAGE =\r\n        OriginalImageWidth / RatiofromOriginalandfixedHeight;\r\n\r\n      if (SourceWidthForCropX === NewBoxRatioWidth_WIDEIMAGE) {\r\n      } else {\r\n        setSourceWidthForCropX(NewBoxRatioWidth_WIDEIMAGE);\r\n      }\r\n      var bb = myCropWidth * quality;\r\n      var RatiofromOriginalandfixedHeightx = OriginalImageWidth / bb;\r\n      var NewBoxRatioWidth_LONGIMAGE =\r\n        OriginalImageHeight / RatiofromOriginalandfixedHeightx;\r\n\r\n      if (SourceWidthForCropY === NewBoxRatioWidth_LONGIMAGE) {\r\n      } else {\r\n        setSourceWidthForCropY(NewBoxRatioWidth_LONGIMAGE);\r\n      }\r\n\r\n      var ratioh = (OriginalImageWidth * 3) / OriginalImageWidth;\r\n      var ratiow = (OriginalImageHeight * 3) / OriginalImageHeight;\r\n\r\n      if (BoxCropActivated) {\r\n        cropCanvasRefx.current.width = myCropWidth * quality;\r\n        cropCanvasRefx.current.height = myCropHeight * quality;\r\n      } else {\r\n        cropCanvasRefx.current.width = OriginalImageWidth;\r\n        cropCanvasRefx.current.height = OriginalImageHeight;\r\n      }\r\n\r\n      var centerpreview =\r\n        cropCanvasRefx.current.width / 1.5 - NewBoxRatioWidth_LONGIMAGE / 1.5;\r\n\r\n      var xtraZoom = myCropHeight / NewBoxRatioWidth_WIDEIMAGE;\r\n\r\n      var centerCropCanvas =\r\n        cropCanvasRefx.current.width / 2 - NewBoxRatioWidth_WIDEIMAGE / 2;\r\n\r\n      //////////////////////////CSS CALCULATION MOBILE PC\r\n      var RatiofromOriginalandfixedHeight =\r\n        OriginalImageHeight / getCropHeightRealImageRatio;\r\n      var newcropCSSWidth =\r\n        OriginalImageWidth / RatiofromOriginalandfixedHeight;\r\n      ///\r\n      var RatiofromOriginalandfixedWidth =\r\n        OriginalImageWidth / getCropWidthMobile;\r\n      var newcropCSSHeight =\r\n        OriginalImageHeight / RatiofromOriginalandfixedWidth;\r\n      //////////////////////////CSS CALCULATION MOBILE PC\r\n\r\n      if (BoxCropActivated) {\r\n        var xx = myCropWidth * zoom;\r\n        var RatiofromOriginalandfixedHeightx = OriginalImageWidth / xx;\r\n        var NewBoxRatioWidth_LONGIMAGEx =\r\n          OriginalImageHeight / RatiofromOriginalandfixedHeightx;\r\n\r\n        var xxx = NewBoxRatioWidth_LONGIMAGE * zoom;\r\n        var RatiofromOriginalandfixedWidthx = OriginalImageHeight / xxx;\r\n        var NewBoxRatioWidth_WIDEIMAGEx =\r\n          OriginalImageWidth / RatiofromOriginalandfixedWidthx;\r\n\r\n        var xx2 = NewBoxRatioWidth_WIDEIMAGE * zoom;\r\n        var RatiofromOriginalandfixedHeightx2 = OriginalImageWidth / xx2;\r\n        var NewBoxRatioWidth_LONGIMAGEx2 =\r\n          OriginalImageHeight / RatiofromOriginalandfixedHeightx2;\r\n\r\n        var xxx2 = myCropHeight * zoom;\r\n        var RatiofromOriginalandfixedWidthx2 = OriginalImageHeight / xxx2;\r\n        var NewBoxRatioWidth_WIDEIMAGEx2 =\r\n          OriginalImageWidth / RatiofromOriginalandfixedWidthx2;\r\n\r\n        if (OriginalImageWidth > OriginalImageHeight) {\r\n          if (OriginalImageHeight === OriginalImageWidth) {\r\n            requestAnimationFrame(async () => {\r\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, 0, crop.x);\r\n              try {\r\n                if (upl === 1) {\r\n                  var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\r\n                  const res = await fetch(data);\r\n                  const datax = await res.blob();\r\n\r\n                  if (typex === \"Profile\") {\r\n                     var base64String = await blobToBase64(datax);\r\n                    postProfiledata(datax,base64String);\r\n                  } else {\r\n                    var base64String = await blobToBase64(datax);\r\n                    postbillboardData(datax, base64String);\r\n                  }\r\n                }\r\n              } catch {\r\n                console.log(\"upload profile pic\");\r\n              }\r\n            });\r\n          } else {\r\n            requestAnimationFrame(async () => {\r\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, crop.x, crop.y);\r\n              try {\r\n                if (upl === 1) {\r\n                  var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\r\n                  const res = await fetch(data);\r\n                  const datax = await res.blob();\r\n                  if (typex === \"Profile\") {\r\n                     var base64String = await blobToBase64(datax);\r\n                    postProfiledata(datax,base64String);\r\n                  } else {\r\n                    var base64String = await blobToBase64(datax);\r\n                    postbillboardData(datax, base64String);\r\n                  }\r\n                }\r\n              } catch {\r\n                console.log(\"upload profile pic\");\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          if (OriginalImageHeight === OriginalImageWidth) {\r\n            requestAnimationFrame(async () => {\r\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, 0, crop.x);\r\n\r\n              try {\r\n                if (upl === 1) {\r\n                  var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\r\n                  const res = await fetch(data);\r\n                  const datax = await res.blob();\r\n                  if (typex === \"Profile\") {\r\n                     var base64String = await blobToBase64(datax);\r\n                    postProfiledata(datax,base64String);\r\n                  } else {\r\n                    var base64String = await blobToBase64(datax);\r\n                    postbillboardData(datax, base64String);\r\n                  }\r\n                }\r\n              } catch {\r\n                console.log(\"upload profile pic\");\r\n              }\r\n            });\r\n          } else {\r\n            requestAnimationFrame(async () => {\r\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, crop.y, crop.x);\r\n\r\n              try {\r\n                if (upl === 1) {\r\n                  var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\r\n                  const res = await fetch(data);\r\n                  const datax = await res.blob();\r\n                  if (typex === \"Profile\") {\r\n                      var base64String = await blobToBase64(datax);\r\n                    postProfiledata(datax,base64String);\r\n                  } else {\r\n                    var base64String = await blobToBase64(datax);\r\n                    postbillboardData(datax, base64String);\r\n                  }\r\n                }\r\n              } catch {\r\n                console.log(\"upload profile pic\");\r\n              }\r\n            });\r\n          }\r\n        }\r\n\r\n        cropCanvasRefx.current.style.width = `${myCropWidth / hdcanvasvalue}px`;\r\n        cropCanvasRefx.current.style.height = `${\r\n          myCropHeight / hdcanvasvalue\r\n        }px`;\r\n      } else {\r\n        requestAnimationFrame(async () => {\r\n          draw(ctx, 0, 3, 0, crop.x);\r\n\r\n          try {\r\n            if (upl === 1) {\r\n              var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\r\n              const res = await fetch(data);\r\n              const datax = await res.blob();\r\n              if (typex === \"Profile\") {\r\n                 var base64String = await blobToBase64(datax);\r\n                    postProfiledata(datax,base64String);\r\n              } else {\r\n                var base64String = await blobToBase64(datax);\r\n                postbillboardData(datax, base64String);\r\n              }\r\n            }\r\n          } catch {\r\n            console.log(\"upload profile pic\");\r\n          }\r\n        });\r\n\r\n        if (matchTabletMobile && widelongboxmobileimage) {\r\n          cropCanvasRefx.current.style.width = `${getCropWidthMobile}px`;\r\n          cropCanvasRefx.current.style.height = `${newcropCSSHeight}px`;\r\n        } else {\r\n          cropCanvasRefx.current.style.width = `${newcropCSSWidth}px`;\r\n          cropCanvasRefx.current.style.height = `${getCropHeightRealImageRatio}px`;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    drawcropper(0);\r\n  }, [\r\n    CropImageHolder,\r\n    BoxCropActivated,\r\n    OriginalImageWidth,\r\n    OriginalImageHeight,\r\n    widelongboxmobileimage,\r\n    myCropHeight,\r\n    crop,\r\n    zoom,\r\n  ]);\r\n\r\n  const done = () => {\r\n    drawcropper(1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModalUploadProfile ? (\r\n        <DialogContent\r\n          className={darkmodeReducer ? \"dialog-container\" : \"dialog-container\"}\r\n          style={{\r\n            padding: \"0px\",\r\n            height: \"100vh\",\r\n            position: \"fixed\",\r\n            zIndex: 100,\r\n            cursor: \"default\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          {superLoadFadex ? (\r\n            <>\r\n              <Grid\r\n                container\r\n                style={{\r\n                  backgroundColor: darkmodeReducer\r\n                    ? \"rgba(50,50,50,0.65)\"\r\n                    : \"rgba(250,250,250,0.65)\",\r\n                  position: \"fixed\",\r\n                  top: \"0px\",\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  zIndex: 10,\r\n                }}\r\n              ></Grid>{\" \"}\r\n            </>\r\n          ) : null}\r\n\r\n          <animated.div ref={cropscrollRef} style={animation}>\r\n            <DialogContent\r\n              ref={cropTOPLEVELScrollRef}\r\n              className={\r\n                matchMobile || matchTablet\r\n                  ? darkmodeReducer\r\n                    ? \" dontallowhighlighting modal-containerDarkmob\"\r\n                    : \" dontallowhighlighting  modal-containerLightmob \"\r\n                  : darkmodeReducer\r\n                  ? \" dontallowhighlighting modal-containerDark  postscroll-dark \"\r\n                  : \" dontallowhighlighting  modal-containerLight  postscroll-light \"\r\n              }\r\n              style={{\r\n                padding: \"0px\",\r\n                height: \"100vh\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              <Grid\r\n                container\r\n                style={{\r\n                  padding: \"0px\",\r\n                  bottom:\r\n                    typex === \"Profile\"\r\n                      ? \"13.6vh\"\r\n                      : WideImageCheck\r\n                      ? \"33vh\"\r\n                      : \"43vh\",\r\n                  margin: \"auto\",\r\n                  width: `100%`,\r\n                  height: \"0px\",\r\n                  position: \"absolute\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  alignContent: \"center\",\r\n                  zIndex: 5,\r\n                  alignSelf: \"center\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={4}\r\n                  style={{\r\n                    padding: \"0px\",\r\n                    height: \"0px\",\r\n                    margin: \"auto\",\r\n                    display: \"grid\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                ></Grid>\r\n\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{\r\n                    padding: \"0px\",\r\n                    height: \"0px\",\r\n                    margin: \"auto\",\r\n                    display: \"grid\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  {optionscropshow ? (\r\n                    <CheckIcon\r\n                      onClick={done}\r\n                      className={\r\n                        darkmodeReducer\r\n                          ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \"\r\n                          : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \"\r\n                      }\r\n                      style={{\r\n                        margin: \"auto\",\r\n\r\n                        fontSize: matchTabletMobile ? \"4.8vh\" : \"2.9vw\",\r\n                      }}\r\n                    />\r\n                  ) : null}\r\n                </Grid>\r\n\r\n                <Grid\r\n                  item\r\n                  xs={4}\r\n                  style={{\r\n                    padding: \"0px\",\r\n                    height: \"0px\",\r\n                    margin: \"auto\",\r\n                    display: \"grid\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                ></Grid>\r\n              </Grid>\r\n              <Grid container style={{ width: \"100%\" }}>\r\n                <canvas\r\n                  ref={cropCanvasRefx}\r\n                  style={{\r\n                    padding: \"0px\",\r\n                    margin: \"auto\",\r\n\r\n                    zIndex: 2,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </DialogContent>\r\n          </animated.div>\r\n        </DialogContent>\r\n      ) : null}\r\n\r\n      <Grid\r\n        container\r\n        style={{ height: \"100%\", position: \"fixed\", top: \"-800vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            padding: \"0px\",\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            ref={getpreviewFixedWidthRef}\r\n            xs={5}\r\n            style={{\r\n              padding: \"0px\",\r\n            }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getFixedCropWidthRef}\r\n            xs={4}\r\n            style={{\r\n              padding: \"0px\",\r\n            }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropHeightRef}\r\n            xs={12}\r\n            style={{ height: \"92%\" }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropWidthMobileRef}\r\n            xs={12}\r\n            style={{ padding: \"0px\", width: \"100%\" }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropWidthMobileReflong}\r\n            xs={12}\r\n            style={{ padding: \"0px\", width: \"150%\" }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropWidthMobileRefHD}\r\n            style={{ padding: \"0px\", width: \"150%\" }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropHeightRefsingle}\r\n            xs={12}\r\n            style={{ height: \"100%\" }}\r\n          ></Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const UploadProfilePic = React.memo(UploadProfilePicx);\r\n"]},"metadata":{},"sourceType":"module"}