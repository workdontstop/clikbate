{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport \"typeface-roboto\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport Home from \"./Home\";\nimport Supercheck from \"./Supercheck\";\nimport { IsLoggedAction } from \"./log/actions/IsLoggedAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  ///\n  ///\n  /// TYPES FOR ISLOGGEDIN\n  const {\n    loggedIn\n  } = useSelector(state => ({ ...state.IsLoggedReducer\n  }));\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env;\n\n  const checkLoginStatus = () => {\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/checkIsLogged`, {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.message === \"logged in\") {\n        alert(\"logged in\");\n        console.log(response.data.gettingcookie);\n        dispatch(IsLoggedAction());\n      } else if (response.data.message === \"logged out\") {\n        alert(\"no account\");\n      }\n    }).catch(function (error) {\n      alert(\"Connection failure \");\n    });\n  }; ///\n  ///\n  ///MODAL ZOOMED STATE\n\n\n  useEffect(() => {\n    checkLoginStatus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loggedIn ? /*#__PURE__*/_jsxDEV(Supercheck, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 41\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"cGiPh8bDo8aaXfk0oXXAotBLrl0=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/App.tsx"],"names":["useEffect","Axios","useSelector","Home","Supercheck","IsLoggedAction","App","loggedIn","state","IsLoggedReducer","REACT_APP_SUPERSTARZ_URL","process","env","checkLoginStatus","post","withCredentials","then","response","data","message","alert","console","log","gettingcookie","dispatch","catch","error"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAO,iBAAP;AACA,SAA4BA,SAA5B,QAAkE,OAAlE;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AAcA,SAASC,WAAT,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,SAASC,cAAT,QAA+B,8BAA/B;;;;AAEA,SAASC,GAAT,GAA4B;AAAA;;AAC1B;AACA;AACA;AAOA,QAAM;AAAEC,IAAAA;AAAF,MAAeL,WAAW,CAAEM,KAAD,KAA+B,EAC9D,GAAGA,KAAK,CAACC;AADqD,GAA/B,CAAD,CAAhC;AAIA,QAAM;AAAEC,IAAAA;AAAF,MAA+BC,OAAO,CAACC,GAA7C;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BZ,IAAAA,KAAK,CAACa,IAAN,CAAY,UAASJ,wBAAyB,gBAA9C,EAA+D;AAC7DK,MAAAA,eAAe,EAAE;AAD4C,KAA/D,EAGGC,IAHH,CAGSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAd,KAA0B,WAA9B,EAA2C;AACzCC,QAAAA,KAAK,CAAC,WAAD,CAAL;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACC,IAAT,CAAcK,aAA1B;AAEAC,QAAAA,QAAQ,CAACnB,cAAc,EAAf,CAAR;AACD,OALD,MAKO,IAAIY,QAAQ,CAACC,IAAT,CAAcC,OAAd,KAA0B,YAA9B,EAA4C;AACjDC,QAAAA,KAAK,CAAC,YAAD,CAAL;AACD;AACF,KAZH,EAaGK,KAbH,CAaS,UAAUC,KAAV,EAAiB;AACtBN,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,KAfH;AAgBD,GAjBD,CAhB0B,CAmC1B;AACA;AACA;;;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBAAO;AAAA,cAAGN,QAAQ,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAoB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAA/B,mBAAP;AACD;;GA5CQD,G;UAUcJ,W;;;KAVdI,G;AA8CT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport \"typeface-roboto\";\nimport { useMemo, useState, useEffect, useRef, useCallback } from \"react\";\nimport SuperstarzIconLight from \"./images/s.png\";\nimport SuperstarzIconDark from \"./images/sd.png\";\nimport Axios from \"axios\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  createMuiTheme,\n  MuiThemeProvider,\n} from \"@material-ui/core\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Option } from \"./log/Option\";\nimport { LoginButtons } from \"./log/LogButtons\";\nimport * as CSS from \"csstype\";\nimport { ModalLog } from \"./log/ModalLog\";\nimport { isBrowser, isTablet } from \"react-device-detect\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Home from \"./Home\";\nimport Supercheck from \"./Supercheck\";\nimport IsLoggedReducer from \"./log/reducers/IsloggedReducer\";\nimport { IsLoggedAction } from \"./log/actions/IsLoggedAction\";\n\nfunction App(): JSX.Element {\n  ///\n  ///\n  /// TYPES FOR ISLOGGEDIN\n  interface RootStateIsLogged {\n    IsLoggedReducer: {\n      loggedIn: boolean;\n    };\n  }\n\n  const { loggedIn } = useSelector((state: RootStateIsLogged) => ({\n    ...state.IsLoggedReducer,\n  }));\n\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\n\n  const checkLoginStatus = () => {\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/checkIsLogged`, {\n      withCredentials: true,\n    })\n      .then((response) => {\n        if (response.data.message === \"logged in\") {\n          alert(\"logged in\");\n          console.log(response.data.gettingcookie);\n\n          dispatch(IsLoggedAction());\n        } else if (response.data.message === \"logged out\") {\n          alert(\"no account\");\n        }\n      })\n      .catch(function (error) {\n        alert(\"Connection failure \");\n      });\n  };\n\n  ///\n  ///\n  ///MODAL ZOOMED STATE\n\n  useEffect(() => {\n    checkLoginStatus();\n  }, []);\n\n  return <>{loggedIn ? <Supercheck /> : <Home />}</>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}