{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\Clikbate\\\\src\\\\upload\\\\CaptionText.tsx\";\nimport React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CaptionTextx({\n  sizex,\n  font1,\n  font2,\n  updatecaptiontop,\n  captionvalues,\n  transform,\n  width\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      size: sizex,\n      inputProps: {\n        style: {\n          fontSize: font1\n        }\n      },\n      InputLabelProps: {\n        style: {\n          fontSize: font2\n        }\n      },\n      onChange: updatecaptiontop,\n      value: captionvalues.topic,\n      style: {\n        transform: transform,\n        width: width,\n        paddingBottom: \"0px\",\n        position: \"fixed\",\n        bottom: \"7vh\",\n        left: \"36vw\",\n        zIndex: 26\n      },\n      label: \"Share Your Thoughts\",\n      type: \"text\",\n      name: \"topic\",\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true);\n}\n_c = CaptionTextx;\nexport const CaptionText = /*#__PURE__*/React.memo(CaptionTextx);\n_c2 = CaptionText;\nvar _c, _c2;\n$RefreshReg$(_c, \"CaptionTextx\");\n$RefreshReg$(_c2, \"CaptionText\");","map":{"version":3,"names":["React","TextField","jsxDEV","_jsxDEV","Fragment","_Fragment","CaptionTextx","sizex","font1","font2","updatecaptiontop","captionvalues","transform","width","children","size","inputProps","style","fontSize","InputLabelProps","onChange","value","topic","paddingBottom","position","bottom","left","zIndex","label","type","name","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","CaptionText","memo","_c2","$RefreshReg$"],"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/Clikbate/src/upload/CaptionText.tsx"],"sourcesContent":["import React, {\r\n    ChangeEvent,\r\n    useRef,\r\n    useState,\r\n    useCallback,\r\n    useEffect,\r\n    useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Grid, GridSize } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { FilterModeArrow } from \"./FilterModeArrow\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { convertHexToRGB } from \"material-ui/utils/colorManipulator\";\r\nimport InsertPhotoIcon from \"@mui/icons-material/InsertPhoto\";\r\nimport FormatColorTextIcon from \"@mui/icons-material/FormatColorText\";\r\nimport UndoIcon from \"@mui/icons-material/Undo\";\r\nimport LayersIcon from \"@mui/icons-material/Layers\";\r\nimport FormatSizeIcon from \"@mui/icons-material/FormatSize\";\r\nimport FontDownloadIcon from \"@mui/icons-material/FontDownload\";\r\nimport LightbulbIcon from \"@mui/icons-material/Lightbulb\";\r\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\r\nimport TextFormatIcon from \"@mui/icons-material/TextFormat\";\r\nimport HighlightIcon from \"@mui/icons-material/Highlight\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { HexColorPicker } from \"react-colorful\";\r\nimport ColorizeIcon from \"@mui/icons-material/Colorize\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport PhotoSizeSelectLargeIcon from \"@mui/icons-material/PhotoSizeSelectLarge\";\r\nimport CropRotateIcon from \"@mui/icons-material/CropRotate\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport RestoreIcon from \"@mui/icons-material/Restore\";\r\nimport SettingsBackupRestoreIcon from \"@mui/icons-material/SettingsBackupRestore\";\r\nimport date from \"date-and-time\";\r\nimport { UpdateNavFilterReducer } from \"../GlobalActions\";\r\nimport { UpdateNavCropReducer } from \"../GlobalActions\";\r\nimport { AudioEditor } from \"./AudioEditor\";\r\n\r\n\r\nfunction CaptionTextx({\r\n    sizex, font1, font2,\r\n    updatecaptiontop,\r\n    captionvalues,\r\n    transform, width\r\n\r\n}: any): JSX.Element {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <TextField\r\n                size={sizex}\r\n                inputProps={{ style: { fontSize: font1 } }}\r\n                InputLabelProps={{ style: { fontSize: font2 } }}\r\n                onChange={updatecaptiontop}\r\n                value={captionvalues.topic}\r\n                style={{\r\n                    transform: transform,\r\n                    width: width,\r\n                    paddingBottom: \"0px\",\r\n                    position: \"fixed\",\r\n                    bottom: \"7vh\",\r\n                    left: \"36vw\",\r\n                    zIndex: 26,\r\n                }}\r\n                label=\"Share Your Thoughts\"\r\n                type=\"text\"\r\n                name=\"topic\"\r\n                variant=\"standard\"\r\n            />{\" \"}\r\n        </>\r\n    );\r\n}\r\n\r\nexport const CaptionText = React.memo(CaptionTextx);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAOL,OAAO;AAEd,SAASC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AA6C9C,SAASC,YAAYA,CAAC;EAClBC,KAAK;EAAEC,KAAK;EAAEC,KAAK;EACnBC,gBAAgB;EAChBC,aAAa;EACbC,SAAS;EAAEC;AAEV,CAAC,EAAe;EAKjB,oBACIV,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACIX,OAAA,CAACF,SAAS;MACNc,IAAI,EAAER,KAAM;MACZS,UAAU,EAAE;QAAEC,KAAK,EAAE;UAAEC,QAAQ,EAAEV;QAAM;MAAE,CAAE;MAC3CW,eAAe,EAAE;QAAEF,KAAK,EAAE;UAAEC,QAAQ,EAAET;QAAM;MAAE,CAAE;MAChDW,QAAQ,EAAEV,gBAAiB;MAC3BW,KAAK,EAAEV,aAAa,CAACW,KAAM;MAC3BL,KAAK,EAAE;QACHL,SAAS,EAAEA,SAAS;QACpBC,KAAK,EAAEA,KAAK;QACZU,aAAa,EAAE,KAAK;QACpBC,QAAQ,EAAE,OAAO;QACjBC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAE,MAAM;QACZC,MAAM,EAAE;MACZ,CAAE;MACFC,KAAK,EAAC,qBAAqB;MAC3BC,IAAI,EAAC,MAAM;MACXC,IAAI,EAAC,OAAO;MACZC,OAAO,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,EAAC,GAAG;EAAA,eACR,CAAC;AAEX;AAACC,EAAA,GAnCQ9B,YAAY;AAqCrB,OAAO,MAAM+B,WAAW,gBAAGrC,KAAK,CAACsC,IAAI,CAAChC,YAAY,CAAC;AAACiC,GAAA,GAAvCF,WAAW;AAAA,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}