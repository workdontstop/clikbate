{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\DiscussionFeedBack.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport { Grid, DialogContent } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { matchPc } from \"../DetectDevice\";\nimport \"../log/logCss.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DiscussionFeedBackx({\n  Feedbackshow,\n  setFeedbackshow,\n  FeedBackData,\n  rememberTimer,\n  rememberMeType\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  ///USE SLIDE DOWN ANIMATION FROM REACT SPRING SERVER ERROR\n\n  const feedbackAnimation = useSpring({\n    config: {\n      duration: 500\n    },\n    opacity: Feedbackshow ? \"1\" : \"0\",\n    transform: Feedbackshow ? `translateY(0%)` : `translateY(-100%)`\n  });\n  var ErrorColor = \"\";\n  var Backtype = \"\";\n  var textback = \"\";\n  var severerrorData = \"\";\n  var severerrorEmoji = \"\";\n  var severerrorEmojiLeft = \"\"; ///\n  ///\n  ///\n  ///CONDITIONAL STATEMENT DEVICE TYPE\n\n  if (matchPc) {\n    severerrorData = \"1.25vw\";\n    severerrorEmoji = \"1.6vw\";\n    severerrorEmojiLeft = \"\";\n  } else {\n    severerrorData = \"2.2vh\";\n    severerrorEmoji = \"2.7vh\";\n    severerrorEmojiLeft = \"4vw\";\n  }\n\n  ErrorColor = \"rgb(34, 34, 34, 0.05)\"; ///\n  ///\n  ///\n  ///CONDITIONAL STATEMENT DARKMODE\n\n  if (darkmodeReducer) {\n    textback = \"caption-dark\";\n    ErrorColor = \"rgb(34, 34, 34, 0.05)\";\n  } else {\n    ErrorColor = \"rgb(238, 238, 238 0.09)\";\n    textback = \"caption-light\";\n  }\n\n  darkmodeReducer ? Backtype = \"error-background-dark\" : Backtype = \"error-background-light\"; ///\n  ///\n  ///\n  ///CLOSE FEEDBACK\n\n  const closefeedbackShow = () => {\n    if (rememberTimer.current) {\n      clearTimeout(rememberTimer.current);\n    }\n\n    setFeedbackshow(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Feedbackshow ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: () => {},\n      className: `dontallowhighlighting ${Backtype} server-error`,\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: feedbackAnimation,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: \"server-error-container\",\n          style: {\n            backgroundColor: ErrorColor\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            className: \"server-error-inner\",\n            style: {},\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              className: \"\",\n              style: {\n                fontSize: severerrorData,\n                paddingLeft: \"1px\"\n              },\n              xs: 11,\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: darkmodeReducer ? \"#ffffff\" : \"#0b1728\"\n                },\n                className: textback,\n                children: FeedBackData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"server-error-emoji-span\",\n                style: {\n                  fontSize: severerrorEmoji,\n                  marginLeft: severerrorEmojiLeft\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    display: sessionicon\n                  },\n                  children: \"\\uD83D\\uDD58 \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    display: forevericon\n                  },\n                  children: \" \\u2B55 \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(DiscussionFeedBackx, \"hy/xsMaFLMiUw3KQwSD3OYDi7fE=\", false, function () {\n  return [useSelector, useSpring];\n});\n\n_c = DiscussionFeedBackx;\nexport const DiscussionFeedBack = /*#__PURE__*/React.memo(DiscussionFeedBackx);\n_c2 = DiscussionFeedBack;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DiscussionFeedBackx\");\n$RefreshReg$(_c2, \"DiscussionFeedBack\");","map":{"version":3,"sources":["C:/Users/oghen/Documents/ClikBate/super/src/profile/DiscussionFeedBack.tsx"],"names":["React","animated","useSpring","Grid","DialogContent","useSelector","matchPc","DiscussionFeedBackx","Feedbackshow","setFeedbackshow","FeedBackData","rememberTimer","rememberMeType","darkmode","state","GlobalReducer","darkmodeReducer","feedbackAnimation","config","duration","opacity","transform","ErrorColor","Backtype","textback","severerrorData","severerrorEmoji","severerrorEmojiLeft","closefeedbackShow","current","clearTimeout","cursor","backgroundColor","fontSize","paddingLeft","color","marginLeft","display","sessionicon","forevericon","DiscussionFeedBack","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport { Grid, DialogContent } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { matchPc } from \"../DetectDevice\";\r\nimport \"../log/logCss.css\";\r\n\r\ninterface ISuperCheckFeedBack {\r\n  Feedbackshow: boolean;\r\n  setFeedbackshow: (Feedbackshow: boolean) => void;\r\n  FeedBackData: string;\r\n  rememberTimer: React.MutableRefObject<NodeJS.Timeout | null>;\r\n  rememberMeType: string;\r\n}\r\n\r\nfunction DiscussionFeedBackx({\r\n  Feedbackshow,\r\n  setFeedbackshow,\r\n  FeedBackData,\r\n  rememberTimer,\r\n  rememberMeType,\r\n}: any) {\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///USE SLIDE DOWN ANIMATION FROM REACT SPRING SERVER ERROR\r\n  const feedbackAnimation = useSpring({\r\n    config: {\r\n      duration: 500,\r\n    },\r\n    opacity: Feedbackshow ? \"1\" : \"0\",\r\n    transform: Feedbackshow ? `translateY(0%)` : `translateY(-100%)`,\r\n  });\r\n\r\n  var ErrorColor = \"\";\r\n\r\n  var Backtype = \"\";\r\n  var textback = \"\";\r\n\r\n  var severerrorData = \"\";\r\n  var severerrorEmoji = \"\";\r\n  var severerrorEmojiLeft = \"\";\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CONDITIONAL STATEMENT DEVICE TYPE\r\n  if (matchPc) {\r\n    severerrorData = \"1.25vw\";\r\n    severerrorEmoji = \"1.6vw\";\r\n    severerrorEmojiLeft = \"\";\r\n  } else {\r\n    severerrorData = \"2.2vh\";\r\n    severerrorEmoji = \"2.7vh\";\r\n    severerrorEmojiLeft = \"4vw\";\r\n  }\r\n\r\n  ErrorColor = \"rgb(34, 34, 34, 0.05)\";\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CONDITIONAL STATEMENT DARKMODE\r\n  if (darkmodeReducer) {\r\n    textback = \"caption-dark\";\r\n    ErrorColor = \"rgb(34, 34, 34, 0.05)\";\r\n  } else {\r\n    ErrorColor = \"rgb(238, 238, 238 0.09)\";\r\n    textback = \"caption-light\";\r\n  }\r\n\r\n  darkmodeReducer\r\n    ? (Backtype = \"error-background-dark\")\r\n    : (Backtype = \"error-background-light\");\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CLOSE FEEDBACK\r\n  const closefeedbackShow = () => {\r\n    if (rememberTimer.current) {\r\n      clearTimeout(rememberTimer.current);\r\n    }\r\n    setFeedbackshow(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {Feedbackshow ? (\r\n        <DialogContent\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={  ()=>{}  }\r\n          className={`dontallowhighlighting ${Backtype} server-error`}\r\n        >\r\n          <animated.div style={feedbackAnimation}>\r\n            <Grid\r\n              container\r\n              className=\"server-error-container\"\r\n              style={{\r\n                backgroundColor: ErrorColor,\r\n              }}\r\n            >\r\n              <Grid item xs={12} className=\"server-error-inner\" style={{}}>\r\n                <Grid\r\n                  item\r\n                  className=\"\"\r\n                  style={{ fontSize: severerrorData, paddingLeft: \"1px\" }}\r\n                  xs={11}\r\n                  sm={10}\r\n                >\r\n                  <span\r\n                    style={{\r\n                      color: darkmodeReducer ? \"#ffffff\" : \"#0b1728\",\r\n                    }}\r\n                    className={textback}\r\n                  >\r\n                    {FeedBackData}\r\n                  </span>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  <span\r\n                    className=\"server-error-emoji-span\"\r\n                    style={{\r\n                      fontSize: severerrorEmoji,\r\n                      marginLeft: severerrorEmojiLeft,\r\n                    }}\r\n                  >\r\n                    <span style={{ display: sessionicon }}>&#128344; </span>\r\n\r\n                    <span style={{ display: forevericon }}> &#11093; </span>\r\n                  </span>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </animated.div>\r\n        </DialogContent>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const DiscussionFeedBack = React.memo(DiscussionFeedBackx);\r\n"]},"metadata":{},"sourceType":"module"}