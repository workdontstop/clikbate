{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superlog\\\\src\\\\log\\\\LogButtons.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginButtonsx({\n  OpenModalForm\n}) {\n  _s();\n\n  ///\n  ///\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\n  var buttonFont = \"\";\n  var buttonTransform = \" \";\n  var pad = \"\";\n\n  if (matchPc) {\n    buttonFont = \"1vw\";\n    buttonTransform = \" \";\n    pad = \"14.5px\"; ///\n  } else if (matchTablet) {\n    pad = \"16px\";\n    buttonFont = \"2vw\";\n    buttonTransform = \" \"; ///\n  } else {\n    buttonFont = \"\";\n    buttonTransform = \"scale(0.95)\";\n    pad = \"16px\";\n  } ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  /// GET  SIGNUP BUTTON AND LOGIN BUTTON STYLE FROM REDUX\n\n  const {\n    MozBoxShadowSD,\n    WebkitBoxShadowSD,\n    boxShadowSD\n  } = useSelector(state => ({ ...state.ButtonsSignUpReducerDark\n  }));\n  const {\n    MozBoxShadowSL,\n    WebkitBoxShadowSL,\n    boxShadowSL\n  } = useSelector(state => ({ ...state.ButtonsSignUpReducerLight\n  }));\n  const {\n    MozBoxShadowLD,\n    WebkitBoxShadowLD,\n    boxShadowLD\n  } = useSelector(state => ({ ...state.ButtonsLoginReducerDark\n  }));\n  const {\n    MozBoxShadowLL,\n    WebkitBoxShadowLL,\n    boxShadowLL\n  } = useSelector(state => ({ ...state.ButtonsLoginReducerLight\n  }));\n  var MozBoxShadowReducerLogin = \" \";\n  var WebkitBoxShadowReducerLogin = \" \";\n  var boxShadowReducerLogin = \" \";\n  var MozBoxShadowReducerSign = \" \";\n  var WebkitBoxShadowReducerSign = \" \";\n  var boxShadowReducerSign = \" \";\n\n  if (darkmodeReducer) {\n    MozBoxShadowReducerLogin = MozBoxShadowLD;\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLD;\n    boxShadowReducerLogin = boxShadowLD;\n    MozBoxShadowReducerSign = MozBoxShadowSD;\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSD;\n    boxShadowReducerSign = boxShadowSD;\n  } else {\n    MozBoxShadowReducerLogin = MozBoxShadowLL;\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLL;\n    boxShadowReducerLogin = boxShadowLL;\n    MozBoxShadowReducerSign = MozBoxShadowSL;\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSL;\n    boxShadowReducerSign = boxShadowSL;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: matchPc ? \"containerloginpc\" : \"containerloginmobile \",\n    item: true,\n    style: {\n      marginTop: matchMobile ? \"1.5vh\" : \"0px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      md: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: \"buttonpad buttonshake\",\n      xs: 12,\n      sm: 6,\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => OpenModalForm(1),\n        style: {\n          fontSize: buttonFont,\n          transform: buttonTransform,\n          padding: \"11.5px\",\n          borderRadius: \"52px\",\n          MozBoxShadow: MozBoxShadowReducerLogin,\n          WebkitBoxShadow: WebkitBoxShadowReducerLogin,\n          boxShadow: boxShadowReducerLogin\n        },\n        fullWidth: true,\n        variant: \"outlined\",\n        size: \"large\",\n        color: \"primary\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 12,\n      style: {\n        padding: matchTablet ? \"9px\" : \"6px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      md: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: \"buttonpad buttonshake\",\n      xs: 12,\n      sm: 6,\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => OpenModalForm(0),\n        style: {\n          fontSize: buttonFont,\n          transform: buttonTransform,\n          padding: pad,\n          borderRadius: \"50px\",\n          MozBoxShadow: MozBoxShadowReducerSign,\n          WebkitBoxShadow: WebkitBoxShadowReducerSign,\n          boxShadow: boxShadowReducerSign\n        },\n        fullWidth: true,\n        variant: \"contained\",\n        size: \"large\",\n        color: \"secondary\",\n        children: [\" \", \"Sign Up\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginButtonsx, \"hxuaXMKPH+OBlcji41BljR6Pdj0=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = LoginButtonsx;\nexport const LoginButtons = /*#__PURE__*/React.memo(LoginButtonsx);\n_c2 = LoginButtons;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginButtonsx\");\n$RefreshReg$(_c2, \"LoginButtons\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superlog/src/log/LogButtons.tsx"],"names":["React","Grid","Button","matchPc","matchTablet","matchMobile","useSelector","LoginButtonsx","OpenModalForm","buttonFont","buttonTransform","pad","darkmode","state","GlobalReducer","darkmodeReducer","MozBoxShadowSD","WebkitBoxShadowSD","boxShadowSD","ButtonsSignUpReducerDark","MozBoxShadowSL","WebkitBoxShadowSL","boxShadowSL","ButtonsSignUpReducerLight","MozBoxShadowLD","WebkitBoxShadowLD","boxShadowLD","ButtonsLoginReducerDark","MozBoxShadowLL","WebkitBoxShadowLL","boxShadowLL","ButtonsLoginReducerLight","MozBoxShadowReducerLogin","WebkitBoxShadowReducerLogin","boxShadowReducerLogin","MozBoxShadowReducerSign","WebkitBoxShadowReducerSign","boxShadowReducerSign","marginTop","fontSize","transform","padding","borderRadius","MozBoxShadow","WebkitBoxShadow","boxShadow","LoginButtons","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\n\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { ILogButtons } from \"./log-Interfaces\";\r\nimport { RootStateOrAny, useSelector } from \"react-redux\";\r\n\r\nfunction LoginButtonsx({ OpenModalForm }: ILogButtons) {\r\n  ///\r\n  ///\r\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\r\n  var buttonFont = \"\";\r\n  var buttonTransform = \" \";\r\n  var pad = \"\";\r\n\r\n  if (matchPc) {\r\n    buttonFont = \"1vw\";\r\n    buttonTransform = \" \";\r\n    pad = \"14.5px\";\r\n    ///\r\n  } else if (matchTablet) {\r\n    pad = \"16px\";\r\n    buttonFont = \"2vw\";\r\n    buttonTransform = \" \";\r\n    ///\r\n  } else {\r\n    buttonFont = \"\";\r\n    buttonTransform = \"scale(0.95)\";\r\n    pad = \"16px\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET  SIGNUP BUTTON AND LOGIN BUTTON STYLE FROM REDUX\r\n  const { MozBoxShadowSD, WebkitBoxShadowSD, boxShadowSD } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.ButtonsSignUpReducerDark,\r\n    })\r\n  );\r\n\r\n  const { MozBoxShadowSL, WebkitBoxShadowSL, boxShadowSL } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.ButtonsSignUpReducerLight,\r\n    })\r\n  );\r\n\r\n  const { MozBoxShadowLD, WebkitBoxShadowLD, boxShadowLD } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.ButtonsLoginReducerDark,\r\n    })\r\n  );\r\n\r\n  const { MozBoxShadowLL, WebkitBoxShadowLL, boxShadowLL } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.ButtonsLoginReducerLight,\r\n    })\r\n  );\r\n\r\n  var MozBoxShadowReducerLogin = \" \";\r\n  var WebkitBoxShadowReducerLogin = \" \";\r\n  var boxShadowReducerLogin = \" \";\r\n\r\n  var MozBoxShadowReducerSign = \" \";\r\n  var WebkitBoxShadowReducerSign = \" \";\r\n  var boxShadowReducerSign = \" \";\r\n\r\n  if (darkmodeReducer) {\r\n    MozBoxShadowReducerLogin = MozBoxShadowLD;\r\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLD;\r\n    boxShadowReducerLogin = boxShadowLD;\r\n\r\n    MozBoxShadowReducerSign = MozBoxShadowSD;\r\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSD;\r\n    boxShadowReducerSign = boxShadowSD;\r\n  } else {\r\n    MozBoxShadowReducerLogin = MozBoxShadowLL;\r\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLL;\r\n    boxShadowReducerLogin = boxShadowLL;\r\n\r\n    MozBoxShadowReducerSign = MozBoxShadowSL;\r\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSL;\r\n    boxShadowReducerSign = boxShadowSL;\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      className={matchPc ? \"containerloginpc\" : \"containerloginmobile \"}\r\n      item\r\n      style={{ marginTop: matchMobile ? \"1.5vh\" : \"0px\" }}\r\n    >\r\n      <Grid item sm={3} md={5}></Grid>\r\n      <Grid item className=\"buttonpad buttonshake\" xs={12} sm={6} md={2}>\r\n        <Button\r\n          onClick={() => OpenModalForm(1)}\r\n          style={{\r\n            fontSize: buttonFont,\r\n            transform: buttonTransform,\r\n            padding: \"11.5px\",\r\n            borderRadius: \"52px\",\r\n            MozBoxShadow: MozBoxShadowReducerLogin,\r\n            WebkitBoxShadow: WebkitBoxShadowReducerLogin,\r\n            boxShadow: boxShadowReducerLogin,\r\n          }}\r\n          fullWidth={true}\r\n          variant=\"outlined\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n        >\r\n          Log In\r\n        </Button>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        sm={12}\r\n        style={{ padding: matchTablet ? \"9px\" : \"6px\" }}\r\n      ></Grid>\r\n\r\n      <Grid item sm={3} md={5}></Grid>\r\n      <Grid item className=\"buttonpad buttonshake\" xs={12} sm={6} md={2}>\r\n        <Button\r\n          onClick={() => OpenModalForm(0)}\r\n          style={{\r\n            fontSize: buttonFont,\r\n            transform: buttonTransform,\r\n            padding: pad,\r\n            borderRadius: \"50px\",\r\n            MozBoxShadow: MozBoxShadowReducerSign,\r\n            WebkitBoxShadow: WebkitBoxShadowReducerSign,\r\n            boxShadow: boxShadowReducerSign,\r\n          }}\r\n          fullWidth={true}\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"secondary\"\r\n        >\r\n          {\" \"}\r\n          Sign Up\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport const LoginButtons = React.memo(LoginButtonsx);\r\n"]},"metadata":{},"sourceType":"module"}