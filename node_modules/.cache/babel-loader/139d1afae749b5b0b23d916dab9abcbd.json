{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\TextFieldSignup.tsx\";\nimport React from \"react\";\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TextFieldSignupx({\n  updateSignvalues,\n  rawSignupValues,\n  signupShowPassword,\n  ShowSignupPasswordForaWhile,\n  size,\n  passwordType,\n  emailType\n}) {\n  var PcStyle = \"\";\n  var MobileStyle = \"\";\n  var WidthHolder = \"\";\n  var TextFieldStyle = \"\";\n  var PcStyle = {\n    width: WidthHolder,\n    paddingBottom: \"50px\"\n  };\n  var MobileStyle = {\n    transform: \"scale(0.93)\",\n    width: \"100%\",\n    paddingBottom: \"45px\"\n  };\n\n  switch (size) {\n    case \"small\":\n      TextFieldStyle = MobileStyle;\n      break;\n\n    default:\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: emailType ? /*#__PURE__*/_jsxDEV(TextField, {\n      size: size,\n      style: {},\n      label: \"Email\",\n      type: \"email\",\n      onChange: updateSignvalues,\n      name: \"inputedEmail\",\n      value: rawSignupValues.inputedEmail,\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : passwordType ? /*#__PURE__*/_jsxDEV(TextField, {\n      size: size,\n      style: {\n        transform: \"scale(0.93)\",\n        width: \"99%\",\n        paddingBottom: \"65px\"\n      },\n      label: \"Password\",\n      type: signupShowPassword ? \"text\" : \"password\",\n      onChange: updateSignvalues,\n      name: \"inputedPassword\",\n      value: rawSignupValues.inputedPassword,\n      variant: \"standard\",\n      InputProps: {\n        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"end\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: ShowSignupPasswordForaWhile,\n            onMouseDown: ShowSignupPasswordForaWhile,\n            \"aria-label\": \"toggle password visibility\",\n            children: signupShowPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n      size: size,\n      style: {\n        transform: \"scale(0.93)\",\n        width: \"99%\",\n        paddingBottom: \"65px\"\n      },\n      label: \"Username\",\n      type: \"text\",\n      onChange: updateSignvalues,\n      name: \"inputedUsername\",\n      value: rawSignupValues.inputedUsername,\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = TextFieldSignupx;\nexport const TextFieldSignup = /*#__PURE__*/React.memo(TextFieldSignupx);\n_c2 = TextFieldSignup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextFieldSignupx\");\n$RefreshReg$(_c2, \"TextFieldSignup\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/TextFieldSignup.tsx"],"names":["React","IconButton","InputAdornment","TextField","VisibilityOffIcon","VisibilityIcon","TextFieldSignupx","updateSignvalues","rawSignupValues","signupShowPassword","ShowSignupPasswordForaWhile","size","passwordType","emailType","PcStyle","MobileStyle","WidthHolder","TextFieldStyle","width","paddingBottom","transform","inputedEmail","inputedPassword","endAdornment","inputedUsername","TextFieldSignup","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport ModalFormLoginError from \"./ModalFormLoginError\";\r\nimport {\r\n  IconButton,\r\n  InputAdornment,\r\n  Grid,\r\n  DialogContent,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport { ItextfIeldSignup } from \"./appFolder-Interfaces\";\r\n\r\nfunction TextFieldSignupx({\r\n  updateSignvalues,\r\n  rawSignupValues,\r\n  signupShowPassword,\r\n  ShowSignupPasswordForaWhile,\r\n  size,\r\n  passwordType,\r\n  emailType,\r\n}: ItextfIeldSignup): JSX.Element {\r\n  var PcStyle = \"\";\r\n  var MobileStyle = \"\";\r\n  var WidthHolder = \"\";\r\n  var TextFieldStyle = \"\";\r\n\r\n  var PcStyle: CSS.Properties = {\r\n    width: WidthHolder,\r\n    paddingBottom: \"50px\",\r\n  };\r\n\r\n  var MobileStyle: CSS.Properties = {\r\n    transform: \"scale(0.93)\",\r\n    width: \"100%\",\r\n    paddingBottom: \"45px\",\r\n  };\r\n\r\n  switch (size) {\r\n    case \"small\":\r\n      TextFieldStyle = MobileStyle;\r\n      break;\r\n    default:\r\n  }\r\n  return (\r\n    <>\r\n      {emailType ? (\r\n        <TextField\r\n          size={size}\r\n          style={{}}\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          onChange={updateSignvalues}\r\n          name=\"inputedEmail\"\r\n          value={rawSignupValues.inputedEmail}\r\n          variant=\"standard\"\r\n        />\r\n      ) : passwordType ? (\r\n        <TextField\r\n          size={size}\r\n          style={{\r\n            transform: \"scale(0.93)\",\r\n            width: \"99%\",\r\n            paddingBottom: \"65px\",\r\n          }}\r\n          label=\"Password\"\r\n          type={signupShowPassword ? \"text\" : \"password\"}\r\n          onChange={updateSignvalues}\r\n          name=\"inputedPassword\"\r\n          value={rawSignupValues.inputedPassword}\r\n          variant=\"standard\"\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={ShowSignupPasswordForaWhile}\r\n                  onMouseDown={ShowSignupPasswordForaWhile}\r\n                  aria-label=\"toggle password visibility\"\r\n                >\r\n                  {signupShowPassword ? (\r\n                    <VisibilityIcon />\r\n                  ) : (\r\n                    <VisibilityOffIcon />\r\n                  )}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      ) : (\r\n        <TextField\r\n          size={size}\r\n          style={{\r\n            transform: \"scale(0.93)\",\r\n            width: \"99%\",\r\n            paddingBottom: \"65px\",\r\n          }}\r\n          label=\"Username\"\r\n          type=\"text\"\r\n          onChange={updateSignvalues}\r\n          name=\"inputedUsername\"\r\n          value={rawSignupValues.inputedUsername}\r\n          variant=\"standard\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const TextFieldSignup = React.memo(TextFieldSignupx);\r\n"]},"metadata":{},"sourceType":"module"}