{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\OptionsSlider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { matchPc, matchTablet } from \"../DetectDevice\";\nimport { useSpring } from \"react-spring\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { UploadMenu } from \".././GlobalActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction OptionsSliderx({\n  getSliderWidth,\n  typeTop,\n  sethaltedTop,\n  Openmodal,\n  OptionsSliderType\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  /// USE DISPATCH\n  const dispatch = useDispatch();\n  var getSliderWidthNew = matchPc ? getSliderWidth / 1.5 : matchTablet ? getSliderWidth / 1.02 : getSliderWidth / 0.77;\n  var optionsClickType = matchPc ? 1 : 0;\n  const optionsCollectImageRef = useRef(null);\n  const optionsImages = typeTop ? [\"5\", \"6\", \"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\"] : [\"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\", \"5\", \"6\"];\n  const [translate, setTranslate] = useState(0);\n  const [stalestate] = useState(1);\n  const [ActiveSlide, setActiveSlide] = useState(0);\n  const [ShowHideNegativeValue, setShowHideNegativeValue] = useState(\"-\");\n  const [touchPosition, setTouchPosition] = useState(null);\n  const handleTouchMoveTimer = useRef(null);\n  const [transitionFast, settransitionFast] = useState(false);\n  const prevJoltTimer = useRef(null);\n  const nextJoltTimer = useRef(null);\n  const [optionsShow, setoptionsShow] = useState(true); ///\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n\n  const {\n    optinstopshowing\n  } = useSelector(state => ({ ...state.OptionsTopShowReducer\n  }));\n  const optinstopshowingReducer = optinstopshowing;\n  var circleIdentify = typeTop ? 0 : 4;\n  var circleIdentify2 = typeTop ? 1 : 5; ///\n  ///\n  ///\n  ///OPTIONS SLIDER VARIABLES DISCRIBING ITEMS\n\n  var optionsNameData = typeTop ? [\"settings\", \"upload\", \"filter feeds\", \"albums\", \"playlist\", \"showroom\"] : [\"filter feeds\", \"albums\", \"playlist\", \"showroom\", \"settings\", \"upload\"]; ///\n  ///\n  ///\n  ///CREATE OPTIONS SLIDER ANIMATION WITH  REACT SPRING\n\n  const animationop = useSpring({\n    config: {\n      duration: typeTop ? 100 : 300\n    },\n    opacity: typeTop ? optinstopshowingReducer ? 1 : 0 : optinstopshowingReducer ? 0 : 1,\n    transform: typeTop ? optinstopshowingReducer ? `translateY(0%)` : \"translateY(-100%)\" : optinstopshowingReducer ? `translateY(-100%)` : \"translateY(0%)\"\n  }); ///\n  ///\n  ///\n  ///CREATE OPTIONS SLIDER ANIMATION WITH  REACT SPRING\n\n  const modalanimation = useSpring({\n    config: {\n      mass: 1,\n      tension: 120,\n      friction: 14\n    },\n    transform: `translateX(${ShowHideNegativeValue}${translate}px)`,\n    transition: transitionFast ? \"0s\" : \"0.15s\",\n    height: \"auto\",\n    display: \"flex\",\n    width: `auto`,\n    padding: \"0px\",\n    margin: \"auto\",\n    paddingLeft: typeTop ? matchPc ? \"0px\" : matchTablet ? \"22px\" : \"9px\" : \"0px\"\n  }); ///\n  ///\n  ///\n  /// ACTIVATES SLIDER ITEM TO BE VIEWED ON CLICK\n\n  const clickOptions = (i, type, source) => {\n    if (type === 1) {\n      setTranslate(stalestate + i);\n      setActiveSlide(i);\n    } else {\n      setTranslate(getSliderWidthNew * i + 1.5 * i);\n      setActiveSlide(i);\n    }\n\n    if (ActiveSlide === i && source === \"upload\") {\n      Openmodal();\n    }\n  }; ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype; ///\n  ///\n  ///\n  ///PUSH OPTIONS SLIDE A LITTLE BIT ON LAST SLIDE ITEM\n\n  const TouchJoltOnLastNEXT = () => {\n    setShowHideNegativeValue(\"-\");\n    var i = ActiveSlide;\n    var colorPaddingAllowance = 1.67 + i / 10;\n    var getSliderWidthNewx = getSliderWidthNew / 2;\n    setTranslate(getSliderWidthNew * i + getSliderWidthNewx);\n    nextJoltTimer.current = setTimeout(function () {\n      setTranslate(getSliderWidthNew * 0 + colorPaddingAllowance * 0);\n      setActiveSlide(ActiveSlide => 0);\n    }, 200);\n  }; ///\n  ///\n  ///\n  ///PUSH OPTIONS SLIDE A LITTLE BIT ON FIRST SLIDE ITEM\n\n\n  const TouchJoltOnLastPREV = () => {\n    setShowHideNegativeValue(\"\");\n    var i = ActiveSlide;\n    var colorPaddingAllowance = 1.67 + i / 10;\n    var ix = optionsImages.length - 1;\n    var getSliderWidthNewx = getSliderWidthNew / 2;\n    setTranslate(getSliderWidthNewx);\n    prevJoltTimer.current = setTimeout(function () {\n      setShowHideNegativeValue(\"-\");\n      setTranslate(getSliderWidthNew * ix + colorPaddingAllowance * ix);\n      setActiveSlide(ActiveSlide => ix);\n    }, 200);\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE  FOR PC\n\n\n  const nextSlidePc = () => {\n    if (typeTop) {\n      closeoptionsslide();\n    } else {\n      var i = ActiveSlide + 1;\n      setShowHideNegativeValue(\"-\"); ///set((state) => (state + 1) % slides.length)\n\n      if (ActiveSlide === optionsImages.length - 1) {\n        settransitionFast(true);\n        setTranslate(0);\n        setActiveSlide(0);\n      } else {\n        settransitionFast(false);\n        setTranslate(stalestate + i);\n        setActiveSlide(i);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE\n\n\n  const nextSlide = () => {\n    var i = ActiveSlide + 1;\n    var colorPaddingAllowance = 1.67 + i / 10; ///set((state) => (state + 1) % slides.length)\n\n    if (ActiveSlide === optionsImages.length - 1) {\n      settransitionFast(true);\n      TouchJoltOnLastNEXT();\n    } else {\n      if (nextJoltTimer.current) {\n        clearTimeout(nextJoltTimer.current);\n      }\n\n      setShowHideNegativeValue(\"-\");\n      settransitionFast(false);\n      setTranslate(getSliderWidthNew * i + colorPaddingAllowance * i);\n      setActiveSlide(ActiveSlide => ActiveSlide + 1);\n    }\n  }; ///\n  ///\n  ///\n  /// PREV SLIDE\n\n\n  const prevSlide = () => {\n    ///set((state) => (state + 1) % slides.length)\n    var i = ActiveSlide - 1;\n    var colorPaddingAllowance = 1.67 + i / 10;\n\n    if (ActiveSlide === 0) {\n      settransitionFast(true);\n\n      if (typeTop) {\n        closeoptionsslide();\n      } else {\n        TouchJoltOnLastPREV();\n      }\n    } else {\n      if (prevJoltTimer.current) {\n        clearTimeout(prevJoltTimer.current);\n      }\n\n      setShowHideNegativeValue(\"-\");\n      settransitionFast(false);\n      setTranslate(getSliderWidthNew * i + colorPaddingAllowance * i);\n      setActiveSlide(ActiveSlide => ActiveSlide - 1);\n    }\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n\n  const handleTouchStartOptions = e => {\n    ////onMouseDown onMouseMove\n    ////touchDown = e.clientX\n    const touchDown = e.touches[0].clientX;\n    setTouchPosition(touchDown);\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH MOVE EVENT\n\n\n  const handleTouchMoveOptions = e => {\n    if (handleTouchMoveTimer.current) {\n      clearTimeout(handleTouchMoveTimer.current);\n    }\n\n    handleTouchMoveTimer.current = setTimeout(function () {\n      const touchDown = touchPosition;\n\n      if (touchDown === null) {\n        return;\n      } ////currentTouch = e.clientX\n\n\n      const currentTouch = e.touches[0].clientX;\n      const diff = touchDown - currentTouch;\n\n      if (diff > 18) {\n        nextSlide();\n      } else if (diff < -18) {\n        prevSlide();\n      } else {}\n\n      setTouchPosition(null);\n      return false;\n    }, 50);\n    return false;\n  };\n\n  const closeoptionsslide = () => {\n    sethaltedTop(false);\n    dispatch(UpdateOptionsTop(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: OptionsSliderType === \"upload\" ? /*#__PURE__*/_jsxDEV(UploadMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 46\n    }, this) : /*#__PURE__*/_jsxDEV(MenuInner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 63\n    }, this)\n  }, void 0, false);\n}\n\n_s(OptionsSliderx, \"t09JELqeuI4kGe5DZTymejMP01k=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSpring, useSpring, useSelector];\n});\n\n_c = OptionsSliderx;\nexport const OptionsSlider = /*#__PURE__*/React.memo(OptionsSliderx);\n_c2 = OptionsSlider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OptionsSliderx\");\n$RefreshReg$(_c2, \"OptionsSlider\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/OptionsSlider.tsx"],"names":["React","useRef","useState","matchPc","matchTablet","useSpring","useSelector","useDispatch","UploadMenu","OptionsSliderx","getSliderWidth","typeTop","sethaltedTop","Openmodal","OptionsSliderType","dispatch","getSliderWidthNew","optionsClickType","optionsCollectImageRef","optionsImages","translate","setTranslate","stalestate","ActiveSlide","setActiveSlide","ShowHideNegativeValue","setShowHideNegativeValue","touchPosition","setTouchPosition","handleTouchMoveTimer","transitionFast","settransitionFast","prevJoltTimer","nextJoltTimer","optionsShow","setoptionsShow","darkmode","state","GlobalReducer","darkmodeReducer","optinstopshowing","OptionsTopShowReducer","optinstopshowingReducer","circleIdentify","circleIdentify2","optionsNameData","animationop","config","duration","opacity","transform","modalanimation","mass","tension","friction","transition","height","display","width","padding","margin","paddingLeft","clickOptions","i","type","source","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","TouchJoltOnLastNEXT","colorPaddingAllowance","getSliderWidthNewx","current","setTimeout","TouchJoltOnLastPREV","ix","length","nextSlidePc","closeoptionsslide","nextSlide","clearTimeout","prevSlide","handleTouchStartOptions","e","touchDown","touches","clientX","handleTouchMoveOptions","currentTouch","diff","UpdateOptionsTop","OptionsSlider","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { UploadMenu } from \".././GlobalActions\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\n\r\nfunction OptionsSliderx({\r\n  getSliderWidth,\r\n  typeTop,\r\n  sethaltedTop,\r\n  Openmodal,\r\n  OptionsSliderType,\r\n}: any) {\r\n  ///\r\n  ///\r\n  ///\r\n  /// USE DISPATCH\r\n  const dispatch = useDispatch();\r\n\r\n  var getSliderWidthNew = matchPc\r\n    ? getSliderWidth / 1.5\r\n    : matchTablet\r\n    ? getSliderWidth / 1.02\r\n    : getSliderWidth / 0.77;\r\n\r\n  var optionsClickType: number = matchPc ? 1 : 0;\r\n\r\n  const optionsCollectImageRef = useRef<HTMLDivElement>(null);\r\n  const optionsImages = typeTop\r\n    ? [\"5\", \"6\", \"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\"]\r\n    : [\"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\", \"5\", \"6\"];\r\n  const [translate, setTranslate] = useState(0);\r\n  const [stalestate] = useState(1);\r\n\r\n  const [ActiveSlide, setActiveSlide] = useState(0);\r\n  const [ShowHideNegativeValue, setShowHideNegativeValue] = useState(\"-\");\r\n\r\n  const [touchPosition, setTouchPosition] = useState(null);\r\n  const handleTouchMoveTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const [transitionFast, settransitionFast] = useState<boolean>(false);\r\n\r\n  const prevJoltTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const nextJoltTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const [optionsShow, setoptionsShow] = useState<boolean>(true);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootoptinstopshowingReducer {\r\n    OptionsTopShowReducer: {\r\n      optinstopshowing: boolean;\r\n    };\r\n  }\r\n  const { optinstopshowing } = useSelector(\r\n    (state: RootoptinstopshowingReducer) => ({\r\n      ...state.OptionsTopShowReducer,\r\n    })\r\n  );\r\n  const optinstopshowingReducer = optinstopshowing;\r\n\r\n  var circleIdentify = typeTop ? 0 : 4;\r\n  var circleIdentify2 = typeTop ? 1 : 5;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///OPTIONS SLIDER VARIABLES DISCRIBING ITEMS\r\n\r\n  var optionsNameData = typeTop\r\n    ? [\"settings\", \"upload\", \"filter feeds\", \"albums\", \"playlist\", \"showroom\"]\r\n    : [\"filter feeds\", \"albums\", \"playlist\", \"showroom\", \"settings\", \"upload\"];\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE OPTIONS SLIDER ANIMATION WITH  REACT SPRING\r\n\r\n  const animationop = useSpring({\r\n    config: {\r\n      duration: typeTop ? 100 : 300,\r\n    },\r\n    opacity: typeTop\r\n      ? optinstopshowingReducer\r\n        ? 1\r\n        : 0\r\n      : optinstopshowingReducer\r\n      ? 0\r\n      : 1,\r\n    transform: typeTop\r\n      ? optinstopshowingReducer\r\n        ? `translateY(0%)`\r\n        : \"translateY(-100%)\"\r\n      : optinstopshowingReducer\r\n      ? `translateY(-100%)`\r\n      : \"translateY(0%)\",\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE OPTIONS SLIDER ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      mass: 1,\r\n      tension: 120,\r\n      friction: 14,\r\n    },\r\n    transform: `translateX(${ShowHideNegativeValue}${translate}px)`,\r\n    transition: transitionFast ? \"0s\" : \"0.15s\",\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    width: `auto`,\r\n    padding: \"0px\",\r\n    margin: \"auto\",\r\n    paddingLeft: typeTop\r\n      ? matchPc\r\n        ? \"0px\"\r\n        : matchTablet\r\n        ? \"22px\"\r\n        : \"9px\"\r\n      : \"0px\",\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// ACTIVATES SLIDER ITEM TO BE VIEWED ON CLICK\r\n  const clickOptions = (i: number, type: number, source: string) => {\r\n    if (type === 1) {\r\n      setTranslate(stalestate + i);\r\n      setActiveSlide(i);\r\n    } else {\r\n      setTranslate(getSliderWidthNew * i + 1.5 * i);\r\n      setActiveSlide(i);\r\n    }\r\n\r\n    if (ActiveSlide === i && source === \"upload\") {\r\n      Openmodal();\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///PUSH OPTIONS SLIDE A LITTLE BIT ON LAST SLIDE ITEM\r\n  const TouchJoltOnLastNEXT = () => {\r\n    setShowHideNegativeValue(\"-\");\r\n    var i = ActiveSlide;\r\n    var colorPaddingAllowance = 1.67 + i / 10;\r\n    var getSliderWidthNewx = getSliderWidthNew / 2;\r\n    setTranslate(getSliderWidthNew * i + getSliderWidthNewx);\r\n    nextJoltTimer.current = setTimeout(function () {\r\n      setTranslate(getSliderWidthNew * 0 + colorPaddingAllowance * 0);\r\n      setActiveSlide((ActiveSlide) => 0);\r\n    }, 200);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///PUSH OPTIONS SLIDE A LITTLE BIT ON FIRST SLIDE ITEM\r\n  const TouchJoltOnLastPREV = () => {\r\n    setShowHideNegativeValue(\"\");\r\n    var i = ActiveSlide;\r\n    var colorPaddingAllowance = 1.67 + i / 10;\r\n    var ix = optionsImages.length - 1;\r\n    var getSliderWidthNewx = getSliderWidthNew / 2;\r\n    setTranslate(getSliderWidthNewx);\r\n    prevJoltTimer.current = setTimeout(function () {\r\n      setShowHideNegativeValue(\"-\");\r\n      setTranslate(getSliderWidthNew * ix + colorPaddingAllowance * ix);\r\n      setActiveSlide((ActiveSlide) => ix);\r\n    }, 200);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE  FOR PC\r\n  const nextSlidePc = () => {\r\n    if (typeTop) {\r\n      closeoptionsslide();\r\n    } else {\r\n      var i = ActiveSlide + 1;\r\n      setShowHideNegativeValue(\"-\");\r\n      ///set((state) => (state + 1) % slides.length)\r\n      if (ActiveSlide === optionsImages.length - 1) {\r\n        settransitionFast(true);\r\n        setTranslate(0);\r\n        setActiveSlide(0);\r\n      } else {\r\n        settransitionFast(false);\r\n        setTranslate(stalestate + i);\r\n        setActiveSlide(i);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const nextSlide = () => {\r\n    var i = ActiveSlide + 1;\r\n    var colorPaddingAllowance = 1.67 + i / 10;\r\n    ///set((state) => (state + 1) % slides.length)\r\n    if (ActiveSlide === optionsImages.length - 1) {\r\n      settransitionFast(true);\r\n      TouchJoltOnLastNEXT();\r\n    } else {\r\n      if (nextJoltTimer.current) {\r\n        clearTimeout(nextJoltTimer.current);\r\n      }\r\n      setShowHideNegativeValue(\"-\");\r\n      settransitionFast(false);\r\n      setTranslate(getSliderWidthNew * i + colorPaddingAllowance * i);\r\n      setActiveSlide((ActiveSlide) => ActiveSlide + 1);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PREV SLIDE\r\n  const prevSlide = () => {\r\n    ///set((state) => (state + 1) % slides.length)\r\n    var i = ActiveSlide - 1;\r\n    var colorPaddingAllowance = 1.67 + i / 10;\r\n    if (ActiveSlide === 0) {\r\n      settransitionFast(true);\r\n      if (typeTop) {\r\n        closeoptionsslide();\r\n      } else {\r\n        TouchJoltOnLastPREV();\r\n      }\r\n    } else {\r\n      if (prevJoltTimer.current) {\r\n        clearTimeout(prevJoltTimer.current);\r\n      }\r\n      setShowHideNegativeValue(\"-\");\r\n      settransitionFast(false);\r\n      setTranslate(getSliderWidthNew * i + colorPaddingAllowance * i);\r\n      setActiveSlide((ActiveSlide) => ActiveSlide - 1);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const handleTouchStartOptions = (e: any) => {\r\n    ////onMouseDown onMouseMove\r\n    ////touchDown = e.clientX\r\n    const touchDown = e.touches[0].clientX;\r\n    setTouchPosition(touchDown);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH MOVE EVENT\r\n  const handleTouchMoveOptions = (e: any) => {\r\n    if (handleTouchMoveTimer.current) {\r\n      clearTimeout(handleTouchMoveTimer.current);\r\n    }\r\n    handleTouchMoveTimer.current = setTimeout(function () {\r\n      const touchDown = touchPosition;\r\n\r\n      if (touchDown === null) {\r\n        return;\r\n      }\r\n      ////currentTouch = e.clientX\r\n      const currentTouch = e.touches[0].clientX;\r\n      const diff = touchDown - currentTouch;\r\n\r\n      if (diff > 18) {\r\n        nextSlide();\r\n      } else if (diff < -18) {\r\n        prevSlide();\r\n      } else {\r\n      }\r\n\r\n      setTouchPosition(null);\r\n      return false;\r\n    }, 50);\r\n\r\n    return false;\r\n  };\r\n\r\n  const closeoptionsslide = () => {\r\n    sethaltedTop(false);\r\n    dispatch(UpdateOptionsTop(false));\r\n  };\r\n\r\n  return <>{OptionsSliderType === \"upload\" ? <UploadMenu /> : <MenuInner />}</>;\r\n}\r\n\r\nexport const OptionsSlider = React.memo(OptionsSliderx);\r\n"]},"metadata":{},"sourceType":"module"}