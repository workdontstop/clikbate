{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\Superstickers.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useLayoutEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Superstickersx({\n  setstartSuperSticker,\n  startSuperSticker,\n  itemUploadRef,\n  index\n}) {\n  _s();\n\n  const [matchTabletMobile, setmatchTabletMobile] = useState(false);\n  var extendxy = 1;\n  extendxy = matchTabletMobile ? 2.5 : 2.4; ///\n  ///\n  ///DARKMODE FROM REDUX\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const [superImageHolder, setsuperImageHolder] = useState(null);\n  const [OriginalImageHeight, setOriginalImageHeight] = useState(0);\n  const [OriginalImageWidth, setOriginalImageWidth] = useState(0);\n  const canvasRefsticker = useRef(null);\n  const canvasRefstickerimage = useRef(null);\n  const [crop, setcrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [superDragAcivated, setsuperDragAcivated] = useState(false);\n  const [cropInitial, setcropInitial] = useState({\n    x: 0,\n    y: 0\n  });\n  const [optionscropshow, setoptionsStickershow] = useState(true);\n  const [cropOffset, setcropOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [Drag, setDrag] = useState(false);\n  const allowscrolltimer = useRef(null);\n\n  const handleTouchStart = (e, type) => {\n    if (superDragAcivated) {\n      ////mouseover(0);\n      setoptionsStickershow(false);\n\n      if (type === 0) {\n        setcropInitial({ ...cropInitial,\n          x: e.clientX * extendxy - cropOffset.x,\n          y: e.clientY * extendxy - cropOffset.y\n        });\n      } else {\n        setcropInitial({ ...cropInitial,\n          x: e.touches[0].clientX * extendxy - cropOffset.x,\n          y: e.touches[0].clientY * extendxy - cropOffset.y\n        });\n      }\n\n      if (e.target) {\n        setDrag(true);\n      }\n    } else {\n      setsuperDragAcivated(true);\n    }\n  };\n\n  const handleTouchEnd = () => {\n    if (allowscrolltimer.current) {\n      clearTimeout(allowscrolltimer.current);\n    }\n\n    allowscrolltimer.current = setTimeout(function () {////mouseover(1);\n    }, 1200);\n    setoptionsStickershow(true);\n    setcropInitial({ ...cropInitial,\n      x: crop.x,\n      y: crop.y\n    });\n    setDrag(false);\n  };\n\n  const handleTouchDrag = (e, type) => {\n    if (Drag) {\n      if (type === 0) {\n        setcrop({ ...crop,\n          x: e.clientX * extendxy - cropInitial.x,\n          y: e.clientY * extendxy - cropInitial.y\n        });\n      } else {\n        setcrop({ ...crop,\n          x: e.touches[0].clientX * extendxy - cropInitial.x,\n          y: e.touches[0].clientY * extendxy - cropInitial.y\n        });\n      }\n\n      setcropOffset({ ...cropOffset,\n        x: crop.x,\n        y: crop.y\n      });\n    }\n  };\n\n  useLayoutEffect(() => {\n    const Newstickfilter = new Image();\n    Newstickfilter.src = itemUploadRef.current[index].src;\n\n    Newstickfilter.onload = function () {\n      const ctx = canvasRefsticker.current.getContext(\"2d\");\n\n      if (superImageHolder === Newstickfilter) {} else {\n        setsuperImageHolder(Newstickfilter);\n      }\n\n      if (OriginalImageHeight === Newstickfilter.naturalHeight) {} else {\n        setOriginalImageHeight(Newstickfilter.naturalHeight);\n      } //\n\n\n      if (OriginalImageWidth === Newstickfilter.naturalWidth) {} else {\n        setOriginalImageWidth(Newstickfilter.naturalWidth);\n      }\n    };\n  }, [startSuperSticker]);\n  useLayoutEffect(() => {\n    if (superImageHolder && canvasRefsticker.current) {\n      const ctx = canvasRefsticker.current.getContext(\"2d\");\n      canvasRefsticker.current.width = OriginalImageWidth;\n      canvasRefsticker.current.height = OriginalImageHeight;\n      var scalehh = window.innerHeight / OriginalImageHeight;\n      var widthx = OriginalImageWidth * scalehh;\n      var xx2 = window.innerHeight;\n      var RatiofromOriginalandfixedHeightx2 = OriginalImageHeight / xx2;\n      var NewBoxRatioWidth_LONGIMAGEx2 = OriginalImageWidth / RatiofromOriginalandfixedHeightx2;\n      var dragDistanceY = OriginalImageWidth - window.innerHeight;\n      var dragDistanceX = NewBoxRatioWidth_LONGIMAGEx2 - OriginalImageWidth;\n      ;\n\n      if (crop.x < -dragDistanceX) {\n        setcrop({ ...crop,\n          x: -dragDistanceX\n        });\n      } else if (crop.x > 0) {\n        setcrop({ ...crop,\n          x: 0\n        });\n      } else {}\n\n      ctx.drawImage(superImageHolder, 0, 0);\n      ctx.drawImage(itemUploadRef.current[1], 0, 0, widthx * 3, window.innerHeight * 3, crop.x, crop.y, widthx, window.innerHeight); ////\n\n      canvasRefsticker.current.style.width = `${widthx}px`;\n      canvasRefsticker.current.style.height = `${window.innerHeight}px`;\n    }\n  }, [superImageHolder, OriginalImageWidth, OriginalImageHeight, crop]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        onClick: () => {\n          setstartSuperSticker(false);\n        },\n        xs: 12,\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          position: \"fixed\",\n          top: \"0vh\",\n          zIndex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: darkmodeReducer ? \"turlightpostdarkx\" : \"turlightpostlightx\",\n        onMouseOver: () => {/// mouseover(0);\n        },\n        onMouseDown: e => {\n          handleTouchStart(e, 0);\n        },\n        onTouchStart: e => {\n          handleTouchStart(e, 1);\n        },\n        onMouseMove: e => {\n          handleTouchDrag(e, 0);\n        },\n        onTouchMove: e => {\n          handleTouchDrag(e, 1);\n        },\n        onMouseUp: handleTouchEnd,\n        onTouchEnd: handleTouchEnd,\n        ref: canvasRefsticker,\n        style: {\n          padding: \"0px\",\n          margin: \"auto\",\n          zIndex: 10,\n          position: \"relative\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: darkmodeReducer ? \"turlightpostdarkx\" : \"turlightpostlightx\",\n        ref: canvasRefstickerimage,\n        style: {\n          padding: \"0px\",\n          margin: \"auto\",\n          zIndex: 10,\n          position: \"fixed\",\n          top: \"-200px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Superstickersx, \"cm3K+xw8udgXGtbKeiOVWIpz2uk=\", false, function () {\n  return [useSelector];\n});\n\n_c = Superstickersx;\nexport const Superstickers = /*#__PURE__*/React.memo(Superstickersx);\n_c2 = Superstickers;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Superstickersx\");\n$RefreshReg$(_c2, \"Superstickers\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/Superstickers.tsx"],"names":["React","useRef","useState","useLayoutEffect","Grid","useSelector","Superstickersx","setstartSuperSticker","startSuperSticker","itemUploadRef","index","matchTabletMobile","setmatchTabletMobile","extendxy","darkmode","state","GlobalReducer","darkmodeReducer","superImageHolder","setsuperImageHolder","OriginalImageHeight","setOriginalImageHeight","OriginalImageWidth","setOriginalImageWidth","canvasRefsticker","canvasRefstickerimage","crop","setcrop","x","y","superDragAcivated","setsuperDragAcivated","cropInitial","setcropInitial","optionscropshow","setoptionsStickershow","cropOffset","setcropOffset","Drag","setDrag","allowscrolltimer","handleTouchStart","e","type","clientX","clientY","touches","target","handleTouchEnd","current","clearTimeout","setTimeout","handleTouchDrag","Newstickfilter","Image","src","onload","ctx","getContext","naturalHeight","naturalWidth","width","height","scalehh","window","innerHeight","widthx","xx2","RatiofromOriginalandfixedHeightx2","NewBoxRatioWidth_LONGIMAGEx2","dragDistanceY","dragDistanceX","drawImage","style","position","top","zIndex","padding","margin","Superstickers","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { Grid, GridSize } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { ImageTobeFiltered } from \"./ImageTobeFiltered\";\r\nimport { FilterModeArrow } from \"./FilterModeArrow\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { convertHexToRGB } from \"material-ui/utils/colorManipulator\";\r\n\r\nfunction Superstickersx({\r\n  setstartSuperSticker,\r\n  startSuperSticker,\r\n  itemUploadRef,\r\n  index,\r\n}: any): JSX.Element {\r\n  const [matchTabletMobile, setmatchTabletMobile] = useState<boolean>(false);\r\n\r\n  var extendxy = 1;\r\n  extendxy = matchTabletMobile ? 2.5 : 2.4;\r\n\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  const [superImageHolder, setsuperImageHolder] = useState<any>(null);\r\n\r\n  const [OriginalImageHeight, setOriginalImageHeight] = useState<number>(0);\r\n\r\n  const [OriginalImageWidth, setOriginalImageWidth] = useState<number>(0);\r\n\r\n  const canvasRefsticker: any = useRef(null);\r\n\r\n  const canvasRefstickerimage: any = useRef(null);\r\n\r\n  const [crop, setcrop] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [superDragAcivated, setsuperDragAcivated] = useState<boolean>(false);\r\n\r\n  const [cropInitial, setcropInitial] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [optionscropshow, setoptionsStickershow] = useState<boolean>(true);\r\n\r\n  const [cropOffset, setcropOffset] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [Drag, setDrag] = useState<boolean>(false);\r\n\r\n  const allowscrolltimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const handleTouchStart = (e: any, type: any) => {\r\n    if (superDragAcivated) {\r\n      ////mouseover(0);\r\n\r\n      setoptionsStickershow(false);\r\n      if (type === 0) {\r\n        setcropInitial({\r\n          ...cropInitial,\r\n          x: e.clientX * extendxy - cropOffset.x,\r\n          y: e.clientY * extendxy - cropOffset.y,\r\n        });\r\n      } else {\r\n        setcropInitial({\r\n          ...cropInitial,\r\n          x: e.touches[0].clientX * extendxy - cropOffset.x,\r\n          y: e.touches[0].clientY * extendxy - cropOffset.y,\r\n        });\r\n      }\r\n      if (e.target) {\r\n        setDrag(true);\r\n      }\r\n    } else {\r\n      setsuperDragAcivated(true);\r\n    }\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    if (allowscrolltimer.current) {\r\n      clearTimeout(allowscrolltimer.current);\r\n    }\r\n\r\n    allowscrolltimer.current = setTimeout(function () {\r\n      ////mouseover(1);\r\n    }, 1200);\r\n\r\n    setoptionsStickershow(true);\r\n    setcropInitial({\r\n      ...cropInitial,\r\n      x: crop.x,\r\n      y: crop.y,\r\n    });\r\n    setDrag(false);\r\n  };\r\n\r\n  const handleTouchDrag = (e: any, type: any) => {\r\n    if (Drag) {\r\n      if (type === 0) {\r\n        setcrop({\r\n          ...crop,\r\n          x: e.clientX * extendxy - cropInitial.x,\r\n          y: e.clientY * extendxy - cropInitial.y,\r\n        });\r\n      } else {\r\n        setcrop({\r\n          ...crop,\r\n          x: e.touches[0].clientX * extendxy - cropInitial.x,\r\n          y: e.touches[0].clientY * extendxy - cropInitial.y,\r\n        });\r\n      }\r\n\r\n      setcropOffset({\r\n        ...cropOffset,\r\n        x: crop.x,\r\n        y: crop.y,\r\n      });\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    const Newstickfilter: any = new Image();\r\n\r\n    Newstickfilter.src = itemUploadRef.current[index].src;\r\n\r\n    Newstickfilter.onload = function () {\r\n      const ctx = canvasRefsticker.current.getContext(\"2d\");\r\n\r\n      if (superImageHolder === Newstickfilter) {\r\n      } else {\r\n        setsuperImageHolder(Newstickfilter);\r\n      }\r\n\r\n      if (OriginalImageHeight === Newstickfilter.naturalHeight) {\r\n      } else {\r\n        setOriginalImageHeight(Newstickfilter.naturalHeight);\r\n      }\r\n      //\r\n      if (OriginalImageWidth === Newstickfilter.naturalWidth) {\r\n      } else {\r\n        setOriginalImageWidth(Newstickfilter.naturalWidth);\r\n      }\r\n    };\r\n  }, [startSuperSticker]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (superImageHolder && canvasRefsticker.current) {\r\n      const ctx = canvasRefsticker.current.getContext(\"2d\");\r\n\r\n      canvasRefsticker.current.width = OriginalImageWidth;\r\n      canvasRefsticker.current.height = OriginalImageHeight;\r\n\r\n      var scalehh = window.innerHeight / OriginalImageHeight;\r\n      var widthx = OriginalImageWidth * scalehh;\r\n\r\n      var xx2 = window.innerHeight;\r\n      var RatiofromOriginalandfixedHeightx2 = OriginalImageHeight / xx2;\r\n      var NewBoxRatioWidth_LONGIMAGEx2 =\r\n        OriginalImageWidth / RatiofromOriginalandfixedHeightx2;\r\n\r\n      var dragDistanceY = OriginalImageWidth - window.innerHeight;\r\n      var dragDistanceX = NewBoxRatioWidth_LONGIMAGEx2 - OriginalImageWidth; ;\r\n      if (crop.x < -dragDistanceX) {\r\n        setcrop({ ...crop, x: -dragDistanceX });\r\n      } else if (crop.x > 0) {\r\n        setcrop({ ...crop, x: 0 });\r\n      } else {\r\n      }\r\n\r\n      ctx.drawImage(superImageHolder, 0, 0);\r\n\r\n      ctx.drawImage(\r\n        itemUploadRef.current[1],\r\n        0,\r\n        0,\r\n        widthx * 3,\r\n        window.innerHeight * 3,\r\n        crop.x,\r\n        crop.y,\r\n        widthx,\r\n        window.innerHeight\r\n      );\r\n      ////\r\n\r\n      canvasRefsticker.current.style.width = `${widthx}px`;\r\n      canvasRefsticker.current.style.height = `${window.innerHeight}px`;\r\n    }\r\n  }, [superImageHolder, OriginalImageWidth, OriginalImageHeight, crop]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          onClick={() => {\r\n            setstartSuperSticker(false);\r\n          }}\r\n          xs={12}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            position: \"fixed\",\r\n            top: \"0vh\",\r\n            zIndex: 1,\r\n          }}\r\n        ></Grid>\r\n        <canvas\r\n          className={\r\n            darkmodeReducer ? \"turlightpostdarkx\" : \"turlightpostlightx\"\r\n          }\r\n          onMouseOver={() => {\r\n            /// mouseover(0);\r\n          }}\r\n          onMouseDown={(e: any) => {\r\n            handleTouchStart(e, 0);\r\n          }}\r\n          onTouchStart={(e: any) => {\r\n            handleTouchStart(e, 1);\r\n          }}\r\n          onMouseMove={(e: any) => {\r\n            handleTouchDrag(e, 0);\r\n          }}\r\n          onTouchMove={(e: any) => {\r\n            handleTouchDrag(e, 1);\r\n          }}\r\n          onMouseUp={handleTouchEnd}\r\n          onTouchEnd={handleTouchEnd}\r\n          ref={canvasRefsticker}\r\n          style={{\r\n            padding: \"0px\",\r\n            margin: \"auto\",\r\n            zIndex: 10,\r\n            position: \"relative\",\r\n          }}\r\n        />\r\n        <canvas\r\n          className={\r\n            darkmodeReducer ? \"turlightpostdarkx\" : \"turlightpostlightx\"\r\n          }\r\n          ref={canvasRefstickerimage}\r\n          style={{\r\n            padding: \"0px\",\r\n            margin: \"auto\",\r\n            zIndex: 10,\r\n            position: \"fixed\",\r\n            top: \"-200px\",\r\n          }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Superstickers = React.memo(Superstickersx);\r\n"]},"metadata":{},"sourceType":"module"}