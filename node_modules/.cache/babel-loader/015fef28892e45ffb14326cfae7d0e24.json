{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\super\\\\src\\\\upload\\\\UploadProfilePic.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback, useState, useLayoutEffect } from \"react\";\nimport { Grid, DialogContent } from \"@material-ui/core\";\nimport { matchTablet, matchMobile } from \"../DetectDevice\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Axios from \"axios\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport { UserInfoUpdatePROFILE } from \"../log/actions/UserdataAction\";\nimport { UserInfoUpdateBILLBOARD } from \"../log/actions/UserdataAction\";\nimport { usePalette } from \"react-palette\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UploadProfilePicx({\n  showModalUploadProfile,\n  cropimageProfile,\n  profileimageSource,\n  typex,\n  uploadClose\n}) {\n  _s();\n\n  const cropCanvasRefx = useRef(null);\n  const dispatch = useDispatch();\n  const [CropImageHolder, setCropImageHolder] = useState(null);\n  const hdcanvasvalue = 1;\n  const getpreviewFixedWidthRef = useRef(null);\n  const getCropHeightRef = useRef(null);\n  const getCropWidthMobileRef = useRef(null);\n  const getCropWidthMobileReflong = useRef(null);\n  const getCropWidthMobileRefHD = useRef(null);\n  const getCropHeightRefsingle = useRef(null);\n  const getFixedCropWidthRef = useRef(null);\n  const [myCropWidth, setmyCropWidth] = useState(0);\n  const [myCropHeight, setmyCropHeight] = useState(0);\n  const [matchTabletMobile, setmatchTabletMobile] = useState(false);\n  const [getpreviewFixedWidth, setgetpreviewFixedWidth] = useState(0);\n  const [screenH, setscreenH] = useState(0);\n  const [waitONLOAD, setwaitONLOAD] = useState(true);\n  const [getCropHeightRealImageRatio, setgetCropHeightRealImageRatio] = useState(0);\n  const [getCropWidthMobile, setgetCropWidthMobile] = useState(0);\n  const [getCropWidthMobileHD, setgetCropWidthMobileHD] = useState(0);\n  const [widelongboxmobileimage, setwidelongboxmobileimage] = useState(false);\n  const [widelongboxmobileimagex, setwidelongboxmobileimagex] = useState(false);\n  const [OriginalImageWidth, setOriginalImageWidth] = useState(0);\n  const [OriginalImageHeight, setOriginalImageHeight] = useState(0);\n  const [cropwidth, setcropwidth] = useState(0);\n  const [cropheight, setcropheight] = useState(0);\n  const [WideImageCheck, setWideImageCheck] = useState(false);\n  const [SourceWidthForCropX, setSourceWidthForCropX] = useState(0);\n  const [SourceWidthForCropY, setSourceWidthForCropY] = useState(0);\n  const [BoxCropActivated, setBoxCropActivated] = useState(true);\n  const [zoom, setzoom] = useState(1);\n  const [crop, setcrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [optionscropshow, setoptionscropshow] = useState(true);\n  const [superLoadFadex, setsuperLoadFadex] = useState(false);\n  const [s3finaldata, sets3finaldata] = useState([0, 0]);\n  var s3finaldatax = [...s3finaldata];\n  const [quality, setquality] = useState(1);\n\n  const callQuality = () => {\n    if (typex === \"Profile\") {\n      setquality(1.1);\n    } else {\n      setquality(1.5);\n    }\n  };\n\n  useEffect(() => {\n    callQuality();\n  }, [typex]); //\n  //\n  //\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\n\n  const animation = useSpring({\n    config: {\n      duration: 600\n    },\n    opacity: showModalUploadProfile ? 1 : 0,\n    transform: showModalUploadProfile ? `translateY(0%)` : `translateY(-100%)`,\n    padding: \"0px\"\n  }); ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env;\n  const cropscrollRef = useRef(null);\n  const cropTOPLEVELScrollRef = useRef(null); ///\n  ///\n  ///\n  ///GET DIMENSIONS AND  SCREEN HEIGHT\n\n  useLayoutEffect(() => {\n    if (matchTablet || matchMobile) {\n      setmatchTabletMobile(true);\n    }\n\n    if (getpreviewFixedWidthRef.current && getpreviewFixedWidthRef.current.clientWidth) {\n      setgetpreviewFixedWidth(getpreviewFixedWidthRef.current.clientWidth);\n    }\n\n    if (getCropHeightRefsingle.current && getCropHeightRefsingle.current.clientHeight) {\n      setscreenH(getCropHeightRefsingle.current.clientHeight);\n    }\n\n    if (profileimageSource.length === 1) {\n      setwaitONLOAD(false);\n\n      if (getCropHeightRefsingle.current && getCropHeightRefsingle.current.clientHeight || getCropHeightRef.current) {\n        if (matchTabletMobile) {\n          setmyCropHeight(getCropWidthMobileRef.current.clientWidth * hdcanvasvalue);\n          setmyCropWidth(getCropWidthMobileRef.current.clientWidth * hdcanvasvalue);\n        } else {\n          if (typex === \"Profile\") {\n            setmyCropWidth(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue);\n            setmyCropHeight(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue);\n          } else {\n            if (WideImageCheck) {\n              setmyCropWidth(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue + getCropHeightRefsingle.current.clientHeight * 0);\n              setmyCropHeight(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue - getCropHeightRefsingle.current.clientHeight * 0.22);\n            } else {\n              setmyCropWidth(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue + getCropHeightRefsingle.current.clientHeight * 0.2);\n              setmyCropHeight(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue - getCropHeightRefsingle.current.clientHeight * 0.32);\n            }\n          }\n        }\n\n        setgetCropHeightRealImageRatio(getCropHeightRefsingle.current.clientHeight * hdcanvasvalue);\n      }\n    } else {\n      if (getCropHeightRef.current && getCropHeightRef.current.clientHeight) {\n        if (matchTabletMobile) {\n          setmyCropHeight(getCropWidthMobileRef.current.clientWidth * hdcanvasvalue);\n          setmyCropWidth(getCropWidthMobileRef.current.clientWidth * hdcanvasvalue);\n        } else {\n          setmyCropHeight(getCropHeightRef.current.clientHeight * hdcanvasvalue);\n          setmyCropWidth(getCropHeightRef.current.clientHeight * hdcanvasvalue);\n        }\n\n        setgetCropHeightRealImageRatio(getCropHeightRef.current.clientHeight);\n      }\n    }\n\n    if (getCropWidthMobileRef.current && getCropWidthMobileRef.current.clientWidth) {\n      setgetCropWidthMobile(getCropWidthMobileRef.current.clientWidth);\n    }\n\n    if (getCropWidthMobileRefHD.current && getCropWidthMobileRefHD.current.clientWidth) {\n      setgetCropWidthMobileHD(getCropWidthMobileRefHD.current.clientWidth);\n    }\n  }, [profileimageSource, typex, WideImageCheck]);\n  const draw = useCallback((ctx, dimensions, type, axis, allowZoomedAxis) => {\n    var allowZoomedaxis, aa;\n\n    if (typex === \"Profile\") {\n      aa = -(dimensions * zoom) / 4;\n    } else {\n      aa = axis;\n    }\n\n    if (zoom === 1) {\n      allowZoomedaxis = 0;\n    } else {\n      allowZoomedaxis = allowZoomedAxis;\n    }\n\n    if (type === 1) {\n      ctx.drawImage(CropImageHolder, aa, allowZoomedaxis, dimensions * zoom, myCropHeight * quality * zoom);\n    } else if (type === 2) {\n      ctx.drawImage(CropImageHolder, allowZoomedaxis, axis, myCropWidth * quality * zoom, dimensions * zoom);\n    } else {\n      ctx.drawImage(CropImageHolder, 0, 0, OriginalImageWidth, OriginalImageHeight);\n    }\n  }, [OriginalImageWidth, OriginalImageHeight, CropImageHolder, myCropHeight, myCropWidth, zoom, typex]);\n  useLayoutEffect(() => {\n    const Newcropimage = new Image();\n    Newcropimage.src = cropimageProfile;\n\n    Newcropimage.onload = function () {\n      if (CropImageHolder === Newcropimage) {} else {\n        setCropImageHolder(Newcropimage);\n      }\n\n      var data1 = 0;\n      var data2 = 0;\n      var RatioNewcropimageNaturalHeight = Newcropimage.naturalHeight / myCropHeight;\n      var NewcropimageWidth = Newcropimage.naturalWidth / RatioNewcropimageNaturalHeight;\n      var RatioNewcropimageNaturalWidth = Newcropimage.naturalWidth / getCropWidthMobileHD;\n      var NewcropimageHeight = Newcropimage.naturalHeight / RatioNewcropimageNaturalWidth;\n      var RatioNewcropimageNaturalWidthxx = Newcropimage.naturalWidth / getCropWidthMobile;\n      var NewcropimageHeightxx = Newcropimage.naturalHeight / RatioNewcropimageNaturalWidthxx; ////// CANVAS  CROPPER DIMENSIONS  PC MOBILE(canvaswidth)\n\n      if (matchTabletMobile && NewcropimageHeightxx < screenH) {\n        setwidelongboxmobileimage(true);\n        setwidelongboxmobileimagex(true);\n\n        if (OriginalImageHeight === NewcropimageHeight) {} else {\n          setOriginalImageHeight(NewcropimageHeight);\n          data2 = NewcropimageHeight;\n        } //\n\n\n        if (OriginalImageWidth === getCropWidthMobileHD) {} else {\n          setOriginalImageWidth(getCropWidthMobileHD);\n          data1 = getCropWidthMobileHD;\n        }\n      } else {\n        setwidelongboxmobileimage(false);\n        setwidelongboxmobileimagex(false);\n\n        if (OriginalImageWidth === NewcropimageWidth) {} else {\n          setOriginalImageWidth(NewcropimageWidth);\n          data1 = NewcropimageWidth;\n        } ///\n\n\n        if (OriginalImageHeight === myCropHeight) {} else {\n          setOriginalImageHeight(myCropHeight);\n          data2 = myCropHeight;\n        }\n      } ////// CANVAS  CROPPER DIMENSIONS  PC MOBILE(canvaswidth)\n\n\n      if (Newcropimage.naturalWidth > Newcropimage.naturalHeight) {\n        setWideImageCheck(true);\n      } else {\n        setWideImageCheck(false);\n      }\n\n      if (cropwidth === data1) {} else {\n        setcropwidth(data1);\n      }\n\n      if (cropheight === data2) {} else {\n        setcropheight(data2);\n      }\n    };\n  }, [cropimageProfile, showModalUploadProfile]); ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    id,\n    username\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const idReducer = id;\n  const usernameReducer = username;\n\n  function blobToBase64(blob) {\n    return new Promise((resolve, _) => {\n      const reader = new FileReader();\n\n      reader.onloadend = () => resolve(reader.result);\n\n      reader.readAsDataURL(blob);\n    });\n  }\n\n  const postbillboardData = useCallback((hdBlob, thumbBlob, hdBase64) => {\n    GetSecureURL(hdBlob, thumbBlob, hdBase64, true);\n  }, [idReducer, blobToBase64]);\n\n  const GetSecureURL = (hdBlob, thumbBlob, hdBase64, billboard) => {\n    Axios.post(`${REACT_APP_SUPERSTARZ_URL}/get_signed_url_4upload`).then(response => {\n      setsuperLoadFadex(false);\n      var url = response.data.url;\n      setsuperLoadFadex(true);\n      PutImageInS3WithURL(thumbBlob, url, url.urlHD, hdBlob, hdBase64, false, billboard);\n    }).catch(function (error) {\n      setsuperLoadFadex(false);\n      alert(\"caption erroerrr\");\n    });\n  };\n\n  const {\n    data,\n    loading,\n    error\n  } = usePalette(profileimageSource);\n  const PutImageInS3WithURL = useCallback((thumbBlob, ur, urlx, a, b, allow, billboard) => {\n    Axios.put(urlx, a).then(response => {\n      setsuperLoadFadex(false);\n      console.log(response);\n\n      if (response.status === 200) {\n        setsuperLoadFadex(true);\n\n        if (allow) {\n          let imagelink = urlx.split('?')[0];\n\n          if (billboard) {\n            var datak = {\n              imagedata: s3finaldatax[0],\n              imagedataThumb: imagelink,\n              id: idReducer\n            };\n            UpdateBillboardDatabaseStatus200(datak, b);\n          } else {\n            alert(data.darkVibrant);\n            var datak = {\n              imagedata: s3finaldatax[0],\n              imagedataThumb: imagelink,\n              id: idReducer\n            };\n            UpdateProfileDatabaseStatus200(datak, b);\n          }\n        } else {\n          let imagelinkx = urlx.split('?')[0];\n          s3finaldatax[0] = imagelinkx;\n          PutImageInS3WithURL(thumbBlob, ur, ur.urlThumb, thumbBlob, b, true, billboard);\n        }\n      }\n    }).catch(function (error) {\n      setsuperLoadFadex(false);\n      alert(\"caption erroerrr\");\n    });\n  }, [idReducer, s3finaldatax, data]);\n\n  const UpdateBillboardDatabaseStatus200 = (datak, b) => {\n    Axios.put(`${REACT_APP_SUPERSTARZ_URL}/billboard_upload_data`, {\n      values: datak\n    }).then(response => {\n      setsuperLoadFadex(false);\n\n      if (response.data.message === \"billboard image uploaded\") {\n        setsuperLoadFadex(false);\n        const data = {\n          billboard1: b\n        };\n        dispatch(UserInfoUpdateBILLBOARD(data));\n        uploadClose(3);\n      }\n    }).catch(function (error) {\n      setsuperLoadFadex(false);\n      alert(\" error\");\n    });\n  };\n\n  const UpdateProfileDatabaseStatus200 = (datak, b) => {\n    Axios.put(`${REACT_APP_SUPERSTARZ_URL}/profile_upload_data`, {\n      values: datak\n    }).then(response => {\n      setsuperLoadFadex(false);\n\n      if (response.data.message === \"profile image data updated\") {\n        const data = {\n          image: b\n        };\n        dispatch(UserInfoUpdatePROFILE(data));\n        uploadClose(4);\n      }\n    }).catch(function (error) {\n      setsuperLoadFadex(false);\n      alert(\" error\");\n    });\n  };\n\n  const postProfiledata = useCallback((hdBlob, thumbBlob, hdBase64) => {\n    setsuperLoadFadex(true);\n    GetSecureURL(hdBlob, thumbBlob, hdBase64, false);\n  }, [idReducer, s3finaldata]);\n\n  const drawcropper = upl => {\n    if (CropImageHolder && cropCanvasRefx.current) {\n      const ctx = cropCanvasRefx.current.getContext(\"2d\");\n      var nn = myCropHeight * quality;\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / nn;\n      var NewBoxRatioWidth_WIDEIMAGE = OriginalImageWidth / RatiofromOriginalandfixedHeight;\n\n      if (SourceWidthForCropX === NewBoxRatioWidth_WIDEIMAGE) {} else {\n        setSourceWidthForCropX(NewBoxRatioWidth_WIDEIMAGE);\n      }\n\n      var bb = myCropWidth * quality;\n      var RatiofromOriginalandfixedHeightx = OriginalImageWidth / bb;\n      var NewBoxRatioWidth_LONGIMAGE = OriginalImageHeight / RatiofromOriginalandfixedHeightx;\n\n      if (SourceWidthForCropY === NewBoxRatioWidth_LONGIMAGE) {} else {\n        setSourceWidthForCropY(NewBoxRatioWidth_LONGIMAGE);\n      }\n\n      var ratioh = OriginalImageWidth * 3 / OriginalImageWidth;\n      var ratiow = OriginalImageHeight * 3 / OriginalImageHeight;\n\n      if (BoxCropActivated) {\n        cropCanvasRefx.current.width = myCropWidth * quality;\n        cropCanvasRefx.current.height = myCropHeight * quality;\n      } else {\n        cropCanvasRefx.current.width = OriginalImageWidth;\n        cropCanvasRefx.current.height = OriginalImageHeight;\n      }\n\n      var centerpreview = cropCanvasRefx.current.width / 1.5 - NewBoxRatioWidth_LONGIMAGE / 1.5;\n      var xtraZoom = myCropHeight / NewBoxRatioWidth_WIDEIMAGE;\n      var centerCropCanvas = cropCanvasRefx.current.width / 2 - NewBoxRatioWidth_WIDEIMAGE / 2; //////////////////////////CSS CALCULATION MOBILE PC\n\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / getCropHeightRealImageRatio;\n      var newcropCSSWidth = OriginalImageWidth / RatiofromOriginalandfixedHeight; ///\n\n      var RatiofromOriginalandfixedWidth = OriginalImageWidth / getCropWidthMobile;\n      var newcropCSSHeight = OriginalImageHeight / RatiofromOriginalandfixedWidth; //////////////////////////CSS CALCULATION MOBILE PC\n\n      if (BoxCropActivated) {\n        var xx = myCropWidth * zoom;\n        var RatiofromOriginalandfixedHeightx = OriginalImageWidth / xx;\n        var NewBoxRatioWidth_LONGIMAGEx = OriginalImageHeight / RatiofromOriginalandfixedHeightx;\n        var xxx = NewBoxRatioWidth_LONGIMAGE * zoom;\n        var RatiofromOriginalandfixedWidthx = OriginalImageHeight / xxx;\n        var NewBoxRatioWidth_WIDEIMAGEx = OriginalImageWidth / RatiofromOriginalandfixedWidthx;\n        var xx2 = NewBoxRatioWidth_WIDEIMAGE * zoom;\n        var RatiofromOriginalandfixedHeightx2 = OriginalImageWidth / xx2;\n        var NewBoxRatioWidth_LONGIMAGEx2 = OriginalImageHeight / RatiofromOriginalandfixedHeightx2;\n        var xxx2 = myCropHeight * zoom;\n        var RatiofromOriginalandfixedWidthx2 = OriginalImageHeight / xxx2;\n        var NewBoxRatioWidth_WIDEIMAGEx2 = OriginalImageWidth / RatiofromOriginalandfixedWidthx2;\n\n        if (OriginalImageWidth > OriginalImageHeight) {\n          if (OriginalImageHeight === OriginalImageWidth) {\n            requestAnimationFrame(async () => {\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, 0, crop.x);\n\n              try {\n                if (upl === 1) {\n                  var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\n                  var datathumb = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 0.05);\n                  const res = await fetch(data);\n                  const datax = await res.blob();\n                  const resdatathumb = await fetch(datathumb);\n                  const datathumbx = await resdatathumb.blob();\n\n                  if (typex === \"Profile\") {\n                    var base64String = await blobToBase64(datax);\n                    postProfiledata(datax, datathumbx, base64String);\n                  } else {\n                    var base64String = await blobToBase64(datax);\n                    postbillboardData(datax, datathumbx, base64String);\n                  }\n                }\n              } catch {\n                console.log(\"upload profile pic\");\n              }\n            });\n          } else {\n            requestAnimationFrame(async () => {\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, crop.x, crop.y);\n\n              try {\n                if (upl === 1) {\n                  var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\n                  var datathumb = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 0.05);\n                  const res = await fetch(data);\n                  const datax = await res.blob();\n                  const resdatathumb = await fetch(datathumb);\n                  const datathumbx = await resdatathumb.blob();\n\n                  if (typex === \"Profile\") {\n                    var base64String = await blobToBase64(datax);\n                    postProfiledata(datax, datathumbx, base64String);\n                  } else {\n                    var base64String = await blobToBase64(datax);\n                    postbillboardData(datax, datathumbx, base64String);\n                  }\n                }\n              } catch {\n                console.log(\"upload profile pic\");\n              }\n            });\n          }\n        } else {\n          if (OriginalImageHeight === OriginalImageWidth) {\n            requestAnimationFrame(async () => {\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, 0, crop.x);\n\n              try {\n                if (upl === 1) {\n                  var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\n                  var datathumb = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 0.05);\n                  const res = await fetch(data);\n                  const datax = await res.blob();\n                  const resdatathumb = await fetch(datathumb);\n                  const datathumbx = await resdatathumb.blob();\n\n                  if (typex === \"Profile\") {\n                    var base64String = await blobToBase64(datax);\n                    postProfiledata(datax, datathumbx, base64String);\n                  } else {\n                    var base64String = await blobToBase64(datax);\n                    postbillboardData(datax, datathumbx, base64String);\n                  }\n                }\n              } catch {\n                console.log(\"upload profile pic\");\n              }\n            });\n          } else {\n            requestAnimationFrame(async () => {\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, crop.y, crop.x);\n\n              try {\n                if (upl === 1) {\n                  var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\n                  var datathumb = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 0.05);\n                  const res = await fetch(data);\n                  const datax = await res.blob();\n                  const resdatathumb = await fetch(datathumb);\n                  const datathumbx = await resdatathumb.blob();\n\n                  if (typex === \"Profile\") {\n                    var base64String = await blobToBase64(datax);\n                    postProfiledata(datax, datathumbx, base64String);\n                  } else {\n                    var base64String = await blobToBase64(datax);\n                    postbillboardData(datax, datathumbx, base64String);\n                  }\n                }\n              } catch {\n                console.log(\"upload profile pic\");\n              }\n            });\n          }\n        }\n      } else {\n        requestAnimationFrame(async () => {\n          draw(ctx, 0, 3, 0, crop.x);\n\n          try {\n            if (upl === 1) {\n              var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\n              var datathumb = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 0.05);\n              const res = await fetch(data);\n              const datax = await res.blob();\n              const resdatathumb = await fetch(datathumb);\n              const datathumbx = await resdatathumb.blob();\n\n              if (typex === \"Profile\") {\n                var base64String = await blobToBase64(datax);\n                postProfiledata(datax, datathumbx, base64String);\n              } else {\n                var base64String = await blobToBase64(datax);\n                postbillboardData(datax, datathumbx, base64String);\n              }\n            }\n          } catch {\n            console.log(\"upload profile pic\");\n          }\n        });\n      }\n    }\n  };\n\n  useLayoutEffect(() => {\n    drawcropper(0);\n  }, [CropImageHolder, BoxCropActivated, OriginalImageWidth, OriginalImageHeight, widelongboxmobileimage, myCropHeight, crop, zoom]);\n\n  const done = () => {\n    drawcropper(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showModalUploadProfile ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: darkmodeReducer ? \"dialog-container\" : \"dialog-container\",\n      style: {\n        padding: \"0px\",\n        height: \"100vh\",\n        position: \"fixed\",\n        zIndex: 100,\n        cursor: \"default\",\n        overflow: \"hidden\"\n      },\n      children: [superLoadFadex ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          style: {\n            backgroundColor: darkmodeReducer ? \"rgba(50,50,50,0.65)\" : \"rgba(250,250,250,0.65)\",\n            position: \"fixed\",\n            top: \"0px\",\n            width: \"100%\",\n            height: \"100%\",\n            zIndex: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 15\n        }, this), \" \"]\n      }, void 0, true) : null, /*#__PURE__*/_jsxDEV(animated.div, {\n        ref: cropscrollRef,\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(DialogContent, {\n          ref: cropTOPLEVELScrollRef,\n          className: matchMobile || matchTablet ? darkmodeReducer ? \" dontallowhighlighting modal-containerDarkmob\" : \" dontallowhighlighting  modal-containerLightmob \" : darkmodeReducer ? \" dontallowhighlighting modal-containerDark  postscroll-dark \" : \" dontallowhighlighting  modal-containerLight  postscroll-light \",\n          style: {\n            padding: \"0px\",\n            height: \"100vh\",\n            overflow: \"hidden\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            style: {\n              padding: \"0px\",\n              bottom: typex === \"Profile\" ? \"13.6vh\" : WideImageCheck ? \"33vh\" : \"43vh\",\n              margin: \"auto\",\n              width: `100%`,\n              height: \"0px\",\n              position: \"absolute\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              alignContent: \"center\",\n              zIndex: 5,\n              alignSelf: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              style: {\n                padding: \"0px\",\n                height: \"0px\",\n                margin: \"auto\",\n                display: \"grid\",\n                alignItems: \"center\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 860,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              style: {\n                padding: \"0px\",\n                height: \"0px\",\n                margin: \"auto\",\n                display: \"grid\",\n                alignItems: \"center\"\n              },\n              children: optionscropshow ? /*#__PURE__*/_jsxDEV(CheckIcon, {\n                onClick: done,\n                className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \",\n                style: {\n                  margin: \"auto\",\n                  fontSize: matchTabletMobile ? \"4.8vh\" : \"2.9vw\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 884,\n                columnNumber: 21\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 872,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              style: {\n                padding: \"0px\",\n                height: \"0px\",\n                margin: \"auto\",\n                display: \"grid\",\n                alignItems: \"center\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            style: {\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: cropCanvasRefx,\n              style: {\n                padding: \"0px\",\n                margin: \"auto\",\n                zIndex: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 913,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        height: \"100%\",\n        position: \"fixed\",\n        top: \"-800vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getpreviewFixedWidthRef,\n          xs: 5,\n          style: {\n            padding: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 939,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getFixedCropWidthRef,\n          xs: 4,\n          style: {\n            padding: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropHeightRef,\n          xs: 12,\n          style: {\n            height: \"92%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 957,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropWidthMobileRef,\n          xs: 12,\n          style: {\n            padding: \"0px\",\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 964,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropWidthMobileReflong,\n          xs: 12,\n          style: {\n            padding: \"0px\",\n            width: \"150%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 971,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropWidthMobileRefHD,\n          style: {\n            padding: \"0px\",\n            width: \"150%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropHeightRefsingle,\n          xs: 12,\n          style: {\n            height: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UploadProfilePicx, \"avatbwhJy5YRMsgHSs94f1BY108=\", false, function () {\n  return [useDispatch, useSpring, useSelector, useSelector, usePalette];\n});\n\n_c = UploadProfilePicx;\nexport const UploadProfilePic = /*#__PURE__*/React.memo(UploadProfilePicx);\n_c2 = UploadProfilePic;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadProfilePicx\");\n$RefreshReg$(_c2, \"UploadProfilePic\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/super/src/upload/UploadProfilePic.tsx"],"names":["React","useRef","useEffect","useCallback","useState","useLayoutEffect","Grid","DialogContent","matchTablet","matchMobile","useSpring","animated","useSelector","useDispatch","Axios","CheckIcon","UserInfoUpdatePROFILE","UserInfoUpdateBILLBOARD","usePalette","UploadProfilePicx","showModalUploadProfile","cropimageProfile","profileimageSource","typex","uploadClose","cropCanvasRefx","dispatch","CropImageHolder","setCropImageHolder","hdcanvasvalue","getpreviewFixedWidthRef","getCropHeightRef","getCropWidthMobileRef","getCropWidthMobileReflong","getCropWidthMobileRefHD","getCropHeightRefsingle","getFixedCropWidthRef","myCropWidth","setmyCropWidth","myCropHeight","setmyCropHeight","matchTabletMobile","setmatchTabletMobile","getpreviewFixedWidth","setgetpreviewFixedWidth","screenH","setscreenH","waitONLOAD","setwaitONLOAD","getCropHeightRealImageRatio","setgetCropHeightRealImageRatio","getCropWidthMobile","setgetCropWidthMobile","getCropWidthMobileHD","setgetCropWidthMobileHD","widelongboxmobileimage","setwidelongboxmobileimage","widelongboxmobileimagex","setwidelongboxmobileimagex","OriginalImageWidth","setOriginalImageWidth","OriginalImageHeight","setOriginalImageHeight","cropwidth","setcropwidth","cropheight","setcropheight","WideImageCheck","setWideImageCheck","SourceWidthForCropX","setSourceWidthForCropX","SourceWidthForCropY","setSourceWidthForCropY","BoxCropActivated","setBoxCropActivated","zoom","setzoom","crop","setcrop","x","y","optionscropshow","setoptionscropshow","superLoadFadex","setsuperLoadFadex","s3finaldata","sets3finaldata","s3finaldatax","quality","setquality","callQuality","animation","config","duration","opacity","transform","padding","darkmode","state","GlobalReducer","darkmodeReducer","REACT_APP_SUPERSTARZ_URL","process","env","cropscrollRef","cropTOPLEVELScrollRef","current","clientWidth","clientHeight","length","draw","ctx","dimensions","type","axis","allowZoomedAxis","allowZoomedaxis","aa","drawImage","Newcropimage","Image","src","onload","data1","data2","RatioNewcropimageNaturalHeight","naturalHeight","NewcropimageWidth","naturalWidth","RatioNewcropimageNaturalWidth","NewcropimageHeight","RatioNewcropimageNaturalWidthxx","NewcropimageHeightxx","id","username","UserdataReducer","idReducer","usernameReducer","blobToBase64","blob","Promise","resolve","_","reader","FileReader","onloadend","result","readAsDataURL","postbillboardData","hdBlob","thumbBlob","hdBase64","GetSecureURL","billboard","post","then","response","url","data","PutImageInS3WithURL","urlHD","catch","error","alert","loading","ur","urlx","a","b","allow","put","console","log","status","imagelink","split","datak","imagedata","imagedataThumb","UpdateBillboardDatabaseStatus200","darkVibrant","UpdateProfileDatabaseStatus200","imagelinkx","urlThumb","values","message","billboard1","image","postProfiledata","drawcropper","upl","getContext","nn","RatiofromOriginalandfixedHeight","NewBoxRatioWidth_WIDEIMAGE","bb","RatiofromOriginalandfixedHeightx","NewBoxRatioWidth_LONGIMAGE","ratioh","ratiow","width","height","centerpreview","xtraZoom","centerCropCanvas","newcropCSSWidth","RatiofromOriginalandfixedWidth","newcropCSSHeight","xx","NewBoxRatioWidth_LONGIMAGEx","xxx","RatiofromOriginalandfixedWidthx","NewBoxRatioWidth_WIDEIMAGEx","xx2","RatiofromOriginalandfixedHeightx2","NewBoxRatioWidth_LONGIMAGEx2","xxx2","RatiofromOriginalandfixedWidthx2","NewBoxRatioWidth_WIDEIMAGEx2","requestAnimationFrame","toDataURL","datathumb","res","fetch","datax","resdatathumb","datathumbx","base64String","done","position","zIndex","cursor","overflow","backgroundColor","top","bottom","margin","display","justifyContent","alignItems","alignContent","alignSelf","fontSize","UploadProfilePic","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useRef,\r\n  useEffect,\r\n  useCallback,\r\n  useState,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport ControlPointDuplicateIcon from \"@mui/icons-material/ControlPointDuplicate\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport Axios from \"axios\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport date from \"date-and-time\";\r\nimport { UserInfoUpdatePROFILE } from \"../log/actions/UserdataAction\";\r\nimport { UserInfoUpdateBILLBOARD } from \"../log/actions/UserdataAction\";\r\nimport { usePalette } from \"react-palette\";\r\n\r\n\r\nfunction UploadProfilePicx({\r\n  showModalUploadProfile,\r\n  cropimageProfile,\r\n  profileimageSource,\r\n  typex,\r\n  uploadClose,\r\n}: any): JSX.Element {\r\n  const cropCanvasRefx: any = useRef(null);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [CropImageHolder, setCropImageHolder] = useState<any>(null);\r\n\r\n  const hdcanvasvalue = 1;\r\n\r\n  const getpreviewFixedWidthRef = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropHeightRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropWidthMobileRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropWidthMobileReflong: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropWidthMobileRefHD: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropHeightRefsingle: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getFixedCropWidthRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const [myCropWidth, setmyCropWidth] = useState(0);\r\n\r\n  const [myCropHeight, setmyCropHeight] = useState(0);\r\n\r\n  const [matchTabletMobile, setmatchTabletMobile] = useState<boolean>(false);\r\n\r\n  const [getpreviewFixedWidth, setgetpreviewFixedWidth] = useState(0);\r\n\r\n  const [screenH, setscreenH] = useState(0);\r\n\r\n \r\n\r\n  const [waitONLOAD, setwaitONLOAD] = useState<boolean>(true);\r\n\r\n  const [getCropHeightRealImageRatio, setgetCropHeightRealImageRatio] =\r\n    useState(0);\r\n\r\n  const [getCropWidthMobile, setgetCropWidthMobile] = useState(0);\r\n\r\n  const [getCropWidthMobileHD, setgetCropWidthMobileHD] = useState(0);\r\n\r\n  const [widelongboxmobileimage, setwidelongboxmobileimage] =\r\n    useState<boolean>(false);\r\n\r\n  const [widelongboxmobileimagex, setwidelongboxmobileimagex] =\r\n    useState<boolean>(false);\r\n\r\n  const [OriginalImageWidth, setOriginalImageWidth] = useState<number>(0);\r\n  const [OriginalImageHeight, setOriginalImageHeight] = useState<number>(0);\r\n\r\n  const [cropwidth, setcropwidth] = useState(0);\r\n\r\n  const [cropheight, setcropheight] = useState(0);\r\n\r\n  const [WideImageCheck, setWideImageCheck] = useState<boolean>(false);\r\n\r\n  const [SourceWidthForCropX, setSourceWidthForCropX] = useState(0);\r\n\r\n  const [SourceWidthForCropY, setSourceWidthForCropY] = useState(0);\r\n\r\n  const [BoxCropActivated, setBoxCropActivated] = useState<boolean>(true);\r\n\r\n  const [zoom, setzoom] = useState<any>(1);\r\n\r\n  const [crop, setcrop] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [optionscropshow, setoptionscropshow] = useState<boolean>(true);\r\n\r\n  const [superLoadFadex, setsuperLoadFadex] = useState<boolean>(false);\r\n\r\n   const [s3finaldata, sets3finaldata]= useState<any>([0,0]);\r\n\r\n var s3finaldatax = [...s3finaldata];\r\n\r\n  const [quality, setquality] = useState(1);\r\n \r\n  \r\n  const callQuality=()=>{\r\n    \r\n  if (typex === \"Profile\") {\r\n    setquality(1.1);\r\n  } else {\r\n    setquality(1.5);\r\n  }\r\n    \r\n    \r\n  }\r\n\r\n\r\n   useEffect(() => {\r\n  callQuality();\r\n  }, [typex]);\r\n\r\n\r\n  //\r\n  //\r\n  //\r\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 600,\r\n    },\r\n    opacity: showModalUploadProfile ? 1 : 0,\r\n    transform: showModalUploadProfile ? `translateY(0%)` : `translateY(-100%)`,\r\n    padding: \"0px\",\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n  const cropscrollRef = useRef<any>(null);\r\n  const cropTOPLEVELScrollRef: any = useRef(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///GET DIMENSIONS AND  SCREEN HEIGHT\r\n  useLayoutEffect(() => {\r\n    if (matchTablet || matchMobile) {\r\n      setmatchTabletMobile(true);\r\n    }\r\n    if (\r\n      getpreviewFixedWidthRef.current &&\r\n      getpreviewFixedWidthRef.current.clientWidth\r\n    ) {\r\n      setgetpreviewFixedWidth(getpreviewFixedWidthRef.current.clientWidth);\r\n    }\r\n\r\n    if (\r\n      getCropHeightRefsingle.current &&\r\n      getCropHeightRefsingle.current.clientHeight\r\n    ) {\r\n      setscreenH(getCropHeightRefsingle.current.clientHeight);\r\n    }\r\n\r\n    if (profileimageSource.length === 1) {\r\n      setwaitONLOAD(false);\r\n      if (\r\n        (getCropHeightRefsingle.current &&\r\n          getCropHeightRefsingle.current.clientHeight) ||\r\n        getCropHeightRef.current\r\n      ) {\r\n        if (matchTabletMobile) {\r\n          setmyCropHeight(\r\n            getCropWidthMobileRef.current.clientWidth * hdcanvasvalue\r\n          );\r\n          setmyCropWidth(\r\n            getCropWidthMobileRef.current.clientWidth * hdcanvasvalue\r\n          );\r\n        } else {\r\n          if (typex === \"Profile\") {\r\n            setmyCropWidth(\r\n              getCropHeightRefsingle.current.clientHeight * hdcanvasvalue\r\n            );\r\n\r\n            setmyCropHeight(\r\n              getCropHeightRefsingle.current.clientHeight * hdcanvasvalue\r\n            );\r\n          } else {\r\n            if (WideImageCheck) {\r\n              setmyCropWidth(\r\n                getCropHeightRefsingle.current.clientHeight * hdcanvasvalue +\r\n                  getCropHeightRefsingle.current.clientHeight * 0\r\n              );\r\n\r\n              setmyCropHeight(\r\n                getCropHeightRefsingle.current.clientHeight * hdcanvasvalue -\r\n                  getCropHeightRefsingle.current.clientHeight * 0.22\r\n              );\r\n            } else {\r\n              setmyCropWidth(\r\n                getCropHeightRefsingle.current.clientHeight * hdcanvasvalue +\r\n                  getCropHeightRefsingle.current.clientHeight * 0.2\r\n              );\r\n\r\n              setmyCropHeight(\r\n                getCropHeightRefsingle.current.clientHeight * hdcanvasvalue -\r\n                  getCropHeightRefsingle.current.clientHeight * 0.32\r\n              );\r\n            }\r\n          }\r\n        }\r\n\r\n        setgetCropHeightRealImageRatio(\r\n          getCropHeightRefsingle.current.clientHeight * hdcanvasvalue\r\n        );\r\n      }\r\n    } else {\r\n      if (getCropHeightRef.current && getCropHeightRef.current.clientHeight) {\r\n        if (matchTabletMobile) {\r\n          setmyCropHeight(\r\n            getCropWidthMobileRef.current.clientWidth * hdcanvasvalue\r\n          );\r\n          setmyCropWidth(\r\n            getCropWidthMobileRef.current.clientWidth * hdcanvasvalue\r\n          );\r\n        } else {\r\n          setmyCropHeight(\r\n            getCropHeightRef.current.clientHeight * hdcanvasvalue\r\n          );\r\n          setmyCropWidth(getCropHeightRef.current.clientHeight * hdcanvasvalue);\r\n        }\r\n\r\n        setgetCropHeightRealImageRatio(getCropHeightRef.current.clientHeight);\r\n      }\r\n    }\r\n\r\n    if (\r\n      getCropWidthMobileRef.current &&\r\n      getCropWidthMobileRef.current.clientWidth\r\n    ) {\r\n      setgetCropWidthMobile(getCropWidthMobileRef.current.clientWidth);\r\n    }\r\n\r\n    if (\r\n      getCropWidthMobileRefHD.current &&\r\n      getCropWidthMobileRefHD.current.clientWidth\r\n    ) {\r\n      setgetCropWidthMobileHD(getCropWidthMobileRefHD.current.clientWidth);\r\n    }\r\n  }, [profileimageSource, typex, WideImageCheck]);\r\n\r\n  const draw = useCallback(\r\n    (\r\n      ctx: any,\r\n      dimensions: any,\r\n      type: number,\r\n      axis: number,\r\n      allowZoomedAxis: number\r\n    ) => {\r\n      var allowZoomedaxis, aa;\r\n\r\n      if (typex === \"Profile\") {\r\n        aa = -(dimensions * zoom) / 4;\r\n      } else {\r\n        aa = axis;\r\n      }\r\n\r\n      if (zoom === 1) {\r\n        allowZoomedaxis = 0;\r\n      } else {\r\n        allowZoomedaxis = allowZoomedAxis;\r\n      }\r\n      if (type === 1) {\r\n        ctx.drawImage(\r\n          CropImageHolder,\r\n          aa,\r\n          allowZoomedaxis,\r\n          dimensions * zoom,\r\n          myCropHeight * quality * zoom\r\n        );\r\n      } else if (type === 2) {\r\n        ctx.drawImage(\r\n          CropImageHolder,\r\n          allowZoomedaxis,\r\n          axis,\r\n          myCropWidth * quality * zoom,\r\n          dimensions * zoom\r\n        );\r\n      } else {\r\n        ctx.drawImage(\r\n          CropImageHolder,\r\n          0,\r\n          0,\r\n          OriginalImageWidth,\r\n          OriginalImageHeight\r\n        );\r\n      }\r\n    },\r\n    [\r\n      OriginalImageWidth,\r\n      OriginalImageHeight,\r\n      CropImageHolder,\r\n      myCropHeight,\r\n      myCropWidth,\r\n      zoom,\r\n      typex,\r\n    ]\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    const Newcropimage: any = new Image();\r\n\r\n    Newcropimage.src = cropimageProfile;\r\n    Newcropimage.onload = function () {\r\n      if (CropImageHolder === Newcropimage) {\r\n      } else {\r\n        setCropImageHolder(Newcropimage);\r\n      }\r\n\r\n      var data1: number = 0;\r\n      var data2: number = 0;\r\n\r\n      var RatioNewcropimageNaturalHeight =\r\n        Newcropimage.naturalHeight / myCropHeight;\r\n      var NewcropimageWidth =\r\n        Newcropimage.naturalWidth / RatioNewcropimageNaturalHeight;\r\n\r\n      var RatioNewcropimageNaturalWidth =\r\n        Newcropimage.naturalWidth / getCropWidthMobileHD;\r\n      var NewcropimageHeight =\r\n        Newcropimage.naturalHeight / RatioNewcropimageNaturalWidth;\r\n\r\n      var RatioNewcropimageNaturalWidthxx =\r\n        Newcropimage.naturalWidth / getCropWidthMobile;\r\n      var NewcropimageHeightxx =\r\n        Newcropimage.naturalHeight / RatioNewcropimageNaturalWidthxx;\r\n\r\n      ////// CANVAS  CROPPER DIMENSIONS  PC MOBILE(canvaswidth)\r\n\r\n      if (matchTabletMobile && NewcropimageHeightxx < screenH) {\r\n        setwidelongboxmobileimage(true);\r\n        setwidelongboxmobileimagex(true);\r\n\r\n        if (OriginalImageHeight === NewcropimageHeight) {\r\n        } else {\r\n          setOriginalImageHeight(NewcropimageHeight);\r\n          data2 = NewcropimageHeight;\r\n        }\r\n        //\r\n        if (OriginalImageWidth === getCropWidthMobileHD) {\r\n        } else {\r\n          setOriginalImageWidth(getCropWidthMobileHD);\r\n          data1 = getCropWidthMobileHD;\r\n        }\r\n      } else {\r\n        setwidelongboxmobileimage(false);\r\n        setwidelongboxmobileimagex(false);\r\n        if (OriginalImageWidth === NewcropimageWidth) {\r\n        } else {\r\n          setOriginalImageWidth(NewcropimageWidth);\r\n          data1 = NewcropimageWidth;\r\n        }\r\n        ///\r\n        if (OriginalImageHeight === myCropHeight) {\r\n        } else {\r\n          setOriginalImageHeight(myCropHeight);\r\n          data2 = myCropHeight;\r\n        }\r\n      }\r\n      ////// CANVAS  CROPPER DIMENSIONS  PC MOBILE(canvaswidth)\r\n\r\n      if (Newcropimage.naturalWidth > Newcropimage.naturalHeight) {\r\n        setWideImageCheck(true);\r\n      } else {\r\n        setWideImageCheck(false);\r\n      }\r\n\r\n      if (cropwidth === data1) {\r\n      } else {\r\n        setcropwidth(data1);\r\n      }\r\n\r\n      if (cropheight === data2) {\r\n      } else {\r\n        setcropheight(data2);\r\n      }\r\n    };\r\n  }, [cropimageProfile, showModalUploadProfile]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootUserdataReducer {\r\n    UserdataReducer: {\r\n      id:number;\r\n      username: string;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const { id, username } = useSelector((state: RootUserdataReducer) => ({\r\n    ...state.UserdataReducer,\r\n  }));\r\n\r\n  const idReducer = id;\r\n   const usernameReducer =  username;\r\n\r\n  function blobToBase64(blob: any) {\r\n    return new Promise((resolve, _) => {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => resolve(reader.result);\r\n      reader.readAsDataURL(blob);\r\n    });\r\n  }\r\n\r\n  const postbillboardData = useCallback(\r\n    (hdBlob:any,thumbBlob:any,hdBase64:any) => {\r\n\r\n      GetSecureURL(hdBlob,thumbBlob,hdBase64,true); \r\n\r\n    },\r\n    [idReducer, blobToBase64]\r\n  );\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const GetSecureURL=(hdBlob: any,thumbBlob:any,hdBase64: any,billboard:boolean)=>{ Axios.post(`${REACT_APP_SUPERSTARZ_URL}/get_signed_url_4upload`)\r\n        .then((response)=>{\r\n           setsuperLoadFadex(false);\r\n          var url = response.data.url;\r\n        setsuperLoadFadex(true);\r\n       PutImageInS3WithURL(thumbBlob,url,url.urlHD,hdBlob,hdBase64,false,billboard);\r\n        }) .catch(function (error) {\r\n            setsuperLoadFadex(false);\r\n          alert(\"caption erroerrr\");\r\n        })}\r\n\r\n\r\n\r\n\r\n\r\n\r\n   \r\n const { data, loading, error } = usePalette(profileimageSource);\r\n\r\n\r\n\r\n  \r\n  const PutImageInS3WithURL= useCallback(\r\n   (thumbBlob:any,ur:any,urlx:any,a:any,b:any,allow:boolean,billboard:boolean) => {\r\n  Axios.put(urlx,a).then((response) => {\r\n           setsuperLoadFadex(false);\r\n             console.log(response);\r\n          if (response.status === 200) {       \r\n\r\n        setsuperLoadFadex(true);\r\n        if(allow){\r\n          let imagelink =urlx.split('?')[0];\r\n         \r\n          \r\n\r\n          if(billboard){   var datak = {\r\n            imagedata: s3finaldatax[0],\r\n         imagedataThumb: imagelink,\r\n          id: idReducer};\r\n          \r\n          UpdateBillboardDatabaseStatus200(datak,b); }else{ \r\n            \r\n \r\n        \r\nalert(data.darkVibrant);\r\n              var datak = {\r\n            imagedata: s3finaldatax[0],\r\n         imagedataThumb: imagelink,\r\n          id: idReducer};\r\n          \r\n          UpdateProfileDatabaseStatus200(datak,b); }\r\n   \r\n        }else{ \r\n          let imagelinkx =urlx.split('?')[0];\r\n             s3finaldatax[0] = imagelinkx;\r\n       \r\n        PutImageInS3WithURL(thumbBlob,ur,ur.urlThumb,thumbBlob,b,true,billboard);\r\n      \r\n      }} }).catch(function (error) {\r\n            setsuperLoadFadex(false);\r\n          alert(\"caption erroerrr\");\r\n        });  \r\n    },\r\n    [idReducer,s3finaldatax,data]\r\n  );\r\n\r\n\r\n\r\n\r\n      const UpdateBillboardDatabaseStatus200=(datak:any,b:any)=>{  Axios.put(\r\n        `${REACT_APP_SUPERSTARZ_URL}/billboard_upload_data`,\r\n        { values: datak }).then((response) => {\r\n            setsuperLoadFadex(false);\r\n               if (response.data.message === \"billboard image uploaded\") {\r\n            setsuperLoadFadex(false);\r\n           \r\n\r\n            const data = {\r\n              billboard1: b,\r\n            };\r\n            dispatch(UserInfoUpdateBILLBOARD(data));\r\n            uploadClose(3);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n            setsuperLoadFadex(false);\r\n          alert(\" error\");\r\n        });}\r\n\r\n\r\n        \r\n      const UpdateProfileDatabaseStatus200=(datak:any,b:any)=>{  Axios.put(\r\n        `${REACT_APP_SUPERSTARZ_URL}/profile_upload_data`,\r\n        { values: datak }).then((response) => {\r\n            setsuperLoadFadex(false);\r\n          if (response.data.message === \"profile image data updated\") {\r\n            const data = {\r\n              image: b,\r\n            };\r\n            dispatch(UserInfoUpdatePROFILE(data));\r\n            uploadClose(4);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n            setsuperLoadFadex(false);\r\n          alert(\" error\");\r\n        });}\r\n\r\n\r\n\r\n\r\n  const postProfiledata = useCallback(\r\n    (hdBlob: any,thumbBlob: any,hdBase64: any) => {\r\n    setsuperLoadFadex(true);\r\nGetSecureURL(hdBlob,thumbBlob,hdBase64,false);     \r\n    },\r\n    [idReducer, s3finaldata]\r\n  );\r\n\r\n\r\n\r\n  const drawcropper = (upl: number) => {\r\n    if (CropImageHolder && cropCanvasRefx.current) {\r\n      const ctx = cropCanvasRefx.current.getContext(\"2d\");\r\n      var nn = myCropHeight * quality;\r\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / nn;\r\n      var NewBoxRatioWidth_WIDEIMAGE =\r\n        OriginalImageWidth / RatiofromOriginalandfixedHeight;\r\n\r\n      if (SourceWidthForCropX === NewBoxRatioWidth_WIDEIMAGE) {\r\n      } else {\r\n        setSourceWidthForCropX(NewBoxRatioWidth_WIDEIMAGE);\r\n      }\r\n      var bb = myCropWidth * quality;\r\n      var RatiofromOriginalandfixedHeightx = OriginalImageWidth / bb;\r\n      var NewBoxRatioWidth_LONGIMAGE =\r\n        OriginalImageHeight / RatiofromOriginalandfixedHeightx;\r\n\r\n      if (SourceWidthForCropY === NewBoxRatioWidth_LONGIMAGE) {\r\n      } else {\r\n        setSourceWidthForCropY(NewBoxRatioWidth_LONGIMAGE);\r\n      }\r\n\r\n      var ratioh = (OriginalImageWidth * 3) / OriginalImageWidth;\r\n      var ratiow = (OriginalImageHeight * 3) / OriginalImageHeight;\r\n\r\n      if (BoxCropActivated) {\r\n        cropCanvasRefx.current.width = myCropWidth * quality;\r\n        cropCanvasRefx.current.height = myCropHeight * quality;\r\n      } else {\r\n        cropCanvasRefx.current.width = OriginalImageWidth;\r\n        cropCanvasRefx.current.height = OriginalImageHeight;\r\n      }\r\n\r\n      var centerpreview =\r\n        cropCanvasRefx.current.width / 1.5 - NewBoxRatioWidth_LONGIMAGE / 1.5;\r\n\r\n      var xtraZoom = myCropHeight / NewBoxRatioWidth_WIDEIMAGE;\r\n\r\n      var centerCropCanvas =\r\n        cropCanvasRefx.current.width / 2 - NewBoxRatioWidth_WIDEIMAGE / 2;\r\n\r\n      //////////////////////////CSS CALCULATION MOBILE PC\r\n      var RatiofromOriginalandfixedHeight =\r\n        OriginalImageHeight / getCropHeightRealImageRatio;\r\n      var newcropCSSWidth =\r\n        OriginalImageWidth / RatiofromOriginalandfixedHeight;\r\n      ///\r\n      var RatiofromOriginalandfixedWidth =\r\n        OriginalImageWidth / getCropWidthMobile;\r\n      var newcropCSSHeight =\r\n        OriginalImageHeight / RatiofromOriginalandfixedWidth;\r\n      //////////////////////////CSS CALCULATION MOBILE PC\r\n\r\n      if (BoxCropActivated) {\r\n        var xx = myCropWidth * zoom;\r\n        var RatiofromOriginalandfixedHeightx = OriginalImageWidth / xx;\r\n        var NewBoxRatioWidth_LONGIMAGEx =\r\n          OriginalImageHeight / RatiofromOriginalandfixedHeightx;\r\n\r\n        var xxx = NewBoxRatioWidth_LONGIMAGE * zoom;\r\n        var RatiofromOriginalandfixedWidthx = OriginalImageHeight / xxx;\r\n        var NewBoxRatioWidth_WIDEIMAGEx =\r\n          OriginalImageWidth / RatiofromOriginalandfixedWidthx;\r\n\r\n        var xx2 = NewBoxRatioWidth_WIDEIMAGE * zoom;\r\n        var RatiofromOriginalandfixedHeightx2 = OriginalImageWidth / xx2;\r\n        var NewBoxRatioWidth_LONGIMAGEx2 =\r\n          OriginalImageHeight / RatiofromOriginalandfixedHeightx2;\r\n\r\n        var xxx2 = myCropHeight * zoom;\r\n        var RatiofromOriginalandfixedWidthx2 = OriginalImageHeight / xxx2;\r\n        var NewBoxRatioWidth_WIDEIMAGEx2 =\r\n          OriginalImageWidth / RatiofromOriginalandfixedWidthx2;\r\n\r\n        if (OriginalImageWidth > OriginalImageHeight) {\r\n          if (OriginalImageHeight === OriginalImageWidth) {\r\n            requestAnimationFrame(async () => {\r\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, 0, crop.x);\r\n              try {\r\n                if (upl === 1) {\r\n                var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\r\n                   var datathumb = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 0.05);\r\n                  const res = await fetch(data);\r\n                  const datax = await res.blob();\r\n                   const resdatathumb = await fetch(datathumb);\r\n                  const datathumbx = await resdatathumb.blob();\r\n                 if (typex === \"Profile\") {\r\n                     var base64String = await blobToBase64(datax);\r\n                    postProfiledata(datax,datathumbx,base64String);\r\n                  } else {\r\n                    var base64String = await blobToBase64(datax);\r\n                    postbillboardData(datax,datathumbx,base64String);\r\n                  }}\r\n              } catch {\r\n                console.log(\"upload profile pic\");\r\n              }\r\n            });\r\n          } else {\r\n            requestAnimationFrame(async () => {\r\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, crop.x, crop.y);\r\n              try {\r\n                  if (upl === 1) {\r\n                var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\r\n                   var datathumb = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 0.05);\r\n                  const res = await fetch(data);\r\n                  const datax = await res.blob();\r\n                   const resdatathumb = await fetch(datathumb);\r\n                  const datathumbx = await resdatathumb.blob();\r\n                 if (typex === \"Profile\") {\r\n                     var base64String = await blobToBase64(datax);\r\n                    postProfiledata(datax,datathumbx,base64String);\r\n                  } else {\r\n                    var base64String = await blobToBase64(datax);\r\n                    postbillboardData(datax,datathumbx,base64String);\r\n                  }}\r\n              } catch {\r\n                console.log(\"upload profile pic\");\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          if (OriginalImageHeight === OriginalImageWidth) {\r\n            requestAnimationFrame(async () => {\r\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, 0, crop.x);\r\n\r\n              try {\r\n                   if (upl === 1) {\r\n                var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\r\n                   var datathumb = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 0.05);\r\n                  const res = await fetch(data);\r\n                  const datax = await res.blob();\r\n                   const resdatathumb = await fetch(datathumb);\r\n                  const datathumbx = await resdatathumb.blob();\r\n                 if (typex === \"Profile\") {\r\n                     var base64String = await blobToBase64(datax);\r\n                    postProfiledata(datax,datathumbx,base64String);\r\n                  } else {\r\n                    var base64String = await blobToBase64(datax);\r\n                    postbillboardData(datax,datathumbx,base64String);\r\n                  }}\r\n              } catch {\r\n                console.log(\"upload profile pic\");\r\n              }\r\n            });\r\n          } else {\r\n            requestAnimationFrame(async () => {\r\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, crop.y, crop.x);\r\n\r\n              try {\r\n                if (upl === 1) {\r\n                var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\r\n                   var datathumb = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 0.05);\r\n                  const res = await fetch(data);\r\n                  const datax = await res.blob();\r\n                   const resdatathumb = await fetch(datathumb);\r\n                  const datathumbx = await resdatathumb.blob();\r\n                 if (typex === \"Profile\") {\r\n                     var base64String = await blobToBase64(datax);\r\n                    postProfiledata(datax,datathumbx,base64String);\r\n                  } else {\r\n                    var base64String = await blobToBase64(datax);\r\n                    postbillboardData(datax,datathumbx,base64String);\r\n                  }}\r\n              } catch {\r\n                console.log(\"upload profile pic\");\r\n              }\r\n            });\r\n          }\r\n        }\r\n\r\n     \r\n      } else {\r\n        requestAnimationFrame(async () => {\r\n          draw(ctx, 0, 3, 0, crop.x);\r\n\r\n          try {\r\n              if (upl === 1) {\r\n                var data = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 1.0);\r\n                   var datathumb = cropCanvasRefx.current.toDataURL(\"image/jpeg\", 0.05);\r\n                  const res = await fetch(data);\r\n                  const datax = await res.blob();\r\n                   const resdatathumb = await fetch(datathumb);\r\n                  const datathumbx = await resdatathumb.blob();\r\n                 if (typex === \"Profile\") {\r\n                     var base64String = await blobToBase64(datax);\r\n                    postProfiledata(datax,datathumbx,base64String);\r\n                  } else {\r\n                    var base64String = await blobToBase64(datax);\r\n                    postbillboardData(datax,datathumbx,base64String);\r\n                  }}\r\n          } catch {\r\n            console.log(\"upload profile pic\");\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    drawcropper(0);\r\n  }, [\r\n    CropImageHolder,\r\n    BoxCropActivated,\r\n    OriginalImageWidth,\r\n    OriginalImageHeight,\r\n    widelongboxmobileimage,\r\n    myCropHeight,\r\n    crop,\r\n    zoom,\r\n  ]);\r\n\r\n  const done = () => {\r\n  \r\n drawcropper(1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModalUploadProfile ? (\r\n        <DialogContent\r\n          className={darkmodeReducer ? \"dialog-container\" : \"dialog-container\"}\r\n          style={{\r\n            padding: \"0px\",\r\n            height: \"100vh\",\r\n            position: \"fixed\",\r\n            zIndex: 100,\r\n            cursor: \"default\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          {superLoadFadex ? (\r\n            <>\r\n              <Grid\r\n                container\r\n                style={{\r\n                  backgroundColor: darkmodeReducer\r\n                    ? \"rgba(50,50,50,0.65)\"\r\n                    : \"rgba(250,250,250,0.65)\",\r\n                  position: \"fixed\",\r\n                  top: \"0px\",\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  zIndex: 10,\r\n                }}\r\n              ></Grid>{\" \"}\r\n            </>\r\n          ) : null}\r\n\r\n          <animated.div ref={cropscrollRef} style={animation}>\r\n            <DialogContent\r\n              ref={cropTOPLEVELScrollRef}\r\n              className={\r\n                matchMobile || matchTablet\r\n                  ? darkmodeReducer\r\n                    ? \" dontallowhighlighting modal-containerDarkmob\"\r\n                    : \" dontallowhighlighting  modal-containerLightmob \"\r\n                  : darkmodeReducer\r\n                  ? \" dontallowhighlighting modal-containerDark  postscroll-dark \"\r\n                  : \" dontallowhighlighting  modal-containerLight  postscroll-light \"\r\n              }\r\n              style={{\r\n                padding: \"0px\",\r\n                height: \"100vh\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              <Grid\r\n                container\r\n                style={{\r\n                  padding: \"0px\",\r\n                  bottom:\r\n                    typex === \"Profile\"\r\n                      ? \"13.6vh\"\r\n                      : WideImageCheck\r\n                      ? \"33vh\"\r\n                      : \"43vh\",\r\n                  margin: \"auto\",\r\n                  width: `100%`,\r\n                  height: \"0px\",\r\n                  position: \"absolute\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  alignContent: \"center\",\r\n                  zIndex: 5,\r\n                  alignSelf: \"center\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={4}\r\n                  style={{\r\n                    padding: \"0px\",\r\n                    height: \"0px\",\r\n                    margin: \"auto\",\r\n                    display: \"grid\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                ></Grid>\r\n\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{\r\n                    padding: \"0px\",\r\n                    height: \"0px\",\r\n                    margin: \"auto\",\r\n                    display: \"grid\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  {optionscropshow ? (\r\n                    <CheckIcon\r\n                      onClick={done}\r\n                      className={\r\n                        darkmodeReducer\r\n                          ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \"\r\n                          : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \"\r\n                      }\r\n                      style={{\r\n                        margin: \"auto\",\r\n\r\n                        fontSize: matchTabletMobile ? \"4.8vh\" : \"2.9vw\",\r\n                      }}\r\n                    />\r\n                  ) : null}\r\n                </Grid>\r\n\r\n                <Grid\r\n                  item\r\n                  xs={4}\r\n                  style={{\r\n                    padding: \"0px\",\r\n                    height: \"0px\",\r\n                    margin: \"auto\",\r\n                    display: \"grid\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                ></Grid>\r\n              </Grid>\r\n              <Grid container style={{ width: \"100%\" }}>\r\n                <canvas\r\n                  ref={cropCanvasRefx}\r\n                  style={{\r\n                    padding: \"0px\",\r\n                    margin: \"auto\",\r\n\r\n                    zIndex: 2,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </DialogContent>\r\n          </animated.div>\r\n        </DialogContent>\r\n      ) : null}\r\n\r\n      <Grid\r\n        container\r\n        style={{ height: \"100%\", position: \"fixed\", top: \"-800vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            padding: \"0px\",\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            ref={getpreviewFixedWidthRef}\r\n            xs={5}\r\n            style={{\r\n              padding: \"0px\",\r\n            }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getFixedCropWidthRef}\r\n            xs={4}\r\n            style={{\r\n              padding: \"0px\",\r\n            }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropHeightRef}\r\n            xs={12}\r\n            style={{ height: \"92%\" }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropWidthMobileRef}\r\n            xs={12}\r\n            style={{ padding: \"0px\", width: \"100%\" }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropWidthMobileReflong}\r\n            xs={12}\r\n            style={{ padding: \"0px\", width: \"150%\" }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropWidthMobileRefHD}\r\n            style={{ padding: \"0px\", width: \"150%\" }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropHeightRefsingle}\r\n            xs={12}\r\n            style={{ height: \"100%\" }}\r\n          ></Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const UploadProfilePic = React.memo(UploadProfilePicx);\r\n"]},"metadata":{},"sourceType":"module"}