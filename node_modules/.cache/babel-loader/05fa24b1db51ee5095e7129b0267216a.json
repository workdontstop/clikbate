{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\log\\\\TextFieldSignup.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { DialogContent } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TextFieldSignupx({\n  updateSignvalues,\n  rawSignupValues,\n  signupShowPassword,\n  ShowSignupPasswordForaWhile,\n  size,\n  passwordType,\n  emailType,\n  withHolder,\n  focus,\n  setFocus,\n  showFocusTextFieldByHidePadding,\n  setShowFocusTextFieldByHidePadding,\n  checkSignupPasswordACTIVATE,\n  sourceType\n}) {\n  _s();\n\n  var width = \" \";\n  var sizex = undefined;\n  var zIndex = 0;\n  var zindexBackPlateP = 0;\n  var displayBackPlateP = \"none\";\n  var zindexU = 0;\n  var zindexBackPlateU = 0;\n  var displayBackPlateU = \"none\";\n  var zindexE = 0;\n  var zindexBackPlateE = 0;\n  var displayBackPlateE = \"none\";\n  var transform = \"\";\n  var paddingBottomE = \"\";\n  var paddingBottomP = \"\";\n  var paddingBottomU = \"\";\n  var font1 = \"\";\n  var font2 = \"\"; ///\n  ///\n  ///\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\n\n  switch (size) {\n    case \"small\":\n      sizex = \"small\";\n      width = \"100%\";\n      transform = \"scale(0.94)\";\n      paddingBottomE = \"48px\";\n      paddingBottomP = \"65px\";\n      paddingBottomU = \"75px\";\n      zIndex = 1;\n      font1 = \"\";\n      font2 = \"\";\n      break;\n\n    case \"smallTablet\":\n      sizex = \"small\";\n      width = \"62%\";\n      transform = \"scale(1)\";\n      paddingBottomE = \"82px\";\n      paddingBottomP = \"65px\";\n      paddingBottomU = \"78px\";\n      zIndex = 1;\n      font1 = \"2.6vh\";\n      font2 = \"2vh\";\n      break;\n\n    default:\n      width = withHolder;\n      transform = \"scale(1)\";\n      paddingBottomE = \"40px\";\n      paddingBottomP = \"27px\";\n      paddingBottomU = \"55px\";\n      zIndex = 1;\n      font1 = \"1.35vw\";\n      font2 = \"1vw\";\n  } ///\n  ///\n  ///\n  ///FOCUS TEXFIELD VARIABLES MOBILE/TAB\n\n\n  if (size === \"small\" || size === \"smallTablet\") {\n    if (emailType) {\n      if (focus) {\n        zindexE = 15;\n        zindexBackPlateE = 12;\n        displayBackPlateE = \"block\";\n      } else {\n        zindexE = 0;\n        zindexBackPlateE = 0;\n        displayBackPlateE = \"none\";\n      }\n    } else if (passwordType) {\n      if (focus) {\n        zIndex = 15;\n        zindexBackPlateP = 12;\n        displayBackPlateP = \"block\";\n      } else {\n        zIndex = 1;\n        zindexBackPlateP = 0;\n        displayBackPlateP = \"none\";\n      }\n    } else {\n      if (focus) {\n        zindexU = 15;\n        zindexBackPlateU = 12;\n        displayBackPlateU = \"block\";\n      } else {\n        zindexU = 0;\n        zindexBackPlateU = 0;\n        displayBackPlateU = \"none\";\n      }\n    }\n  } ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  ///TEXTFIELD BACK DROP ON FOCUS CLICK (MOBILE)\n\n  const focusTextfield = a => {\n    if (size === \"small\" || size === \"smallTablet\") {\n      if (a === 1) {\n        setFocus(true);\n        setShowFocusTextFieldByHidePadding(true);\n      } else {\n        setFocus(false);\n        setShowFocusTextFieldByHidePadding(false);\n      }\n    }\n  }; ///\n  ///\n  ///\n  ///TEXTFIELD BACK DROP ON FOCUS VARIABLES\n\n\n  var TextFieldOpacity = \"1\";\n\n  if (checkSignupPasswordACTIVATE) {\n    TextFieldOpacity = \"0\";\n  } else {\n    if (darkmodeReducer) {\n      if (focus) {\n        TextFieldOpacity = \"1\";\n      } else {\n        TextFieldOpacity = \"0.8\";\n      }\n    } else {\n      TextFieldOpacity = \"1\";\n    }\n  } ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n\n  const {\n    id,\n    username,\n    quote,\n    biography\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const idReducer = id;\n  const usernameReducer = username;\n  const quoteReducer = quote;\n  const biographyReducer = biography;\n  var usernameReducerx = \"\";\n\n  if (usernameReducer === \" \" || usernameReducer === null) {\n    usernameReducerx = \"username\";\n  } else {\n    usernameReducerx = usernameReducer;\n  }\n\n  var quoteReducerx = \"\";\n\n  if (quoteReducer === \" \" || quoteReducer === null) {\n    quoteReducerx = \"quote\";\n  } else {\n    quoteReducerx = quoteReducer;\n  }\n\n  var biographyReducerx = \"\";\n\n  if (biographyReducer === \" \" || biographyReducer === null) {\n    biographyReducerx = \"describe yourself\";\n  } else {\n    biographyReducerx = biographyReducer;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: sourceType === \"LOG\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: emailType ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(DialogContent, {\n          className: darkmodeReducer ? \"mobileTextfield-backplate dontallowhighlighting  mobileTextfield-backplateColorDark\" : \"mobileTextfield-backplate dontallowhighlighting  mobileTextfield-backplateColorLight \",\n          style: {\n            zIndex: zindexBackPlateE,\n            display: displayBackPlateE\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onFocus: () => focusTextfield(1),\n          onBlur: () => focusTextfield(0),\n          size: sizex,\n          inputProps: {\n            style: {\n              fontSize: font1\n            }\n          },\n          InputLabelProps: {\n            style: {\n              fontSize: font2\n            }\n          },\n          style: {\n            transform: transform,\n            width: width,\n            paddingBottom: showFocusTextFieldByHidePadding ? \"0px\" : paddingBottomE,\n            zIndex: zindexE,\n            opacity: TextFieldOpacity\n          },\n          label: \"Email\",\n          type: \"email\",\n          onChange: updateSignvalues,\n          name: \"inputedEmail\",\n          value: rawSignupValues.inputedEmail,\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : passwordType ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(DialogContent, {\n          className: darkmodeReducer ? \"mobileTextfield-backplate dontallowhighlighting  mobileTextfield-backplateColorDark\" : \"mobileTextfield-backplate dontallowhighlighting  mobileTextfield-backplateColorLight\",\n          style: {\n            zIndex: zindexBackPlateP,\n            display: displayBackPlateP\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onFocus: () => focusTextfield(1),\n          onBlur: () => focusTextfield(0),\n          size: sizex,\n          inputProps: {\n            style: {\n              fontSize: font1\n            }\n          },\n          InputLabelProps: {\n            style: {\n              fontSize: font2\n            }\n          },\n          style: {\n            transform: transform,\n            width: width,\n            paddingBottom: showFocusTextFieldByHidePadding ? \"0px\" : paddingBottomP,\n            zIndex: zIndex,\n            opacity: TextFieldOpacity\n          },\n          label: \"Password\",\n          type: signupShowPassword ? \"text\" : \"password\",\n          onChange: updateSignvalues,\n          name: \"inputedPassword\",\n          value: rawSignupValues.inputedPassword,\n          variant: \"standard\",\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onMouseDown: ShowSignupPasswordForaWhile,\n                \"aria-label\": \"toggle password visibility\",\n                children: signupShowPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 21\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(DialogContent, {\n          className: darkmodeReducer ? \"mobileTextfield-backplate dontallowhighlighting  mobileTextfield-backplateColorDark\" : \"mobileTextfield-backplate dontallowhighlighting   mobileTextfield-backplateColorLight\",\n          style: {\n            zIndex: zindexBackPlateU,\n            display: displayBackPlateU\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onFocus: () => focusTextfield(1),\n          onBlur: () => focusTextfield(0),\n          size: sizex,\n          inputProps: {\n            style: {\n              fontSize: font1\n            }\n          },\n          InputLabelProps: {\n            style: {\n              fontSize: font2\n            }\n          },\n          style: {\n            transform: transform,\n            width: width,\n            paddingBottom: showFocusTextFieldByHidePadding ? \"0px\" : paddingBottomU,\n            zIndex: zindexU,\n            opacity: TextFieldOpacity\n          },\n          label: \"Username\",\n          type: \"text\",\n          onChange: updateSignvalues,\n          name: \"inputedUsername\",\n          value: rawSignupValues.inputedUsername,\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", emailType ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(DialogContent, {\n          className: darkmodeReducer ? \"mobileTextfield-backplate dontallowhighlighting  mobileTextfield-backplateColorDark\" : \"mobileTextfield-backplate dontallowhighlighting   mobileTextfield-backplateColorLight\",\n          style: {\n            zIndex: zindexBackPlateU,\n            display: displayBackPlateU\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onFocus: () => focusTextfield(1),\n          onBlur: () => focusTextfield(0),\n          size: sizex,\n          inputProps: {\n            style: {\n              fontSize: font1\n            }\n          },\n          InputLabelProps: {\n            style: {\n              fontSize: font2\n            }\n          },\n          style: {\n            transform: transform,\n            width: width,\n            paddingBottom: showFocusTextFieldByHidePadding ? \"0px\" : \"0px\",\n            zIndex: zindexU,\n            opacity: TextFieldOpacity\n          },\n          label: \"Add a quote\",\n          type: \"text\",\n          onChange: updateSignvalues,\n          name: \"inputedQuote\",\n          value: rawSignupValues.inputedQuote,\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          inputProps: {\n            style: {\n              fontSize: font1\n            }\n          },\n          InputLabelProps: {\n            style: {\n              fontSize: font2\n            }\n          },\n          style: {\n            opacity: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : passwordType ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(DialogContent, {\n          className: darkmodeReducer ? \"mobileTextfield-backplate dontallowhighlighting  mobileTextfield-backplateColorDark\" : \"mobileTextfield-backplate dontallowhighlighting   mobileTextfield-backplateColorLight\",\n          style: {\n            zIndex: zindexBackPlateU,\n            display: displayBackPlateU\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onFocus: () => focusTextfield(1),\n          onBlur: () => focusTextfield(0),\n          size: sizex,\n          inputProps: {\n            style: {\n              fontSize: font1\n            }\n          },\n          InputLabelProps: {\n            style: {\n              fontSize: font2\n            }\n          },\n          style: {\n            transform: transform,\n            width: width,\n            paddingBottom: showFocusTextFieldByHidePadding ? \"0px\" : \"0px\",\n            zIndex: zindexU,\n            opacity: TextFieldOpacity\n          },\n          label: \"Add a short biography\",\n          type: \"text\",\n          onChange: updateSignvalues,\n          name: \"inputedDescription\",\n          value: rawSignupValues.inputedDescription,\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          inputProps: {\n            style: {\n              fontSize: font1\n            }\n          },\n          InputLabelProps: {\n            style: {\n              fontSize: font2\n            }\n          },\n          style: {\n            opacity: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(DialogContent, {\n          className: darkmodeReducer ? \"mobileTextfield-backplate dontallowhighlighting  mobileTextfield-backplateColorDark\" : \"mobileTextfield-backplate dontallowhighlighting   mobileTextfield-backplateColorLight\",\n          style: {\n            zIndex: zindexBackPlateU,\n            display: displayBackPlateU\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onFocus: () => focusTextfield(1),\n          onBlur: () => focusTextfield(0),\n          size: sizex,\n          inputProps: {\n            style: {\n              fontSize: font1\n            }\n          },\n          InputLabelProps: {\n            style: {\n              fontSize: font2\n            }\n          },\n          style: {\n            transform: transform,\n            width: width,\n            paddingBottom: showFocusTextFieldByHidePadding ? \"0px\" : \"0px\",\n            zIndex: zindexU,\n            opacity: TextFieldOpacity\n          },\n          label: \"Change username\",\n          type: \"text\",\n          onChange: updateSignvalues,\n          name: \"inputedUsername\",\n          value: rawSignupValues.inputedUsername,\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          inputProps: {\n            style: {\n              fontSize: font1\n            }\n          },\n          InputLabelProps: {\n            style: {\n              fontSize: font2\n            }\n          },\n          style: {\n            opacity: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), \" \"]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(TextFieldSignupx, \"CsQV8FrsILOPL+IrXDLpFF+Ants=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = TextFieldSignupx;\nexport const TextFieldSignup = /*#__PURE__*/React.memo(TextFieldSignupx);\n_c2 = TextFieldSignup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextFieldSignupx\");\n$RefreshReg$(_c2, \"TextFieldSignup\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/log/TextFieldSignup.tsx"],"names":["React","IconButton","InputAdornment","TextField","VisibilityOffIcon","VisibilityIcon","DialogContent","useSelector","TextFieldSignupx","updateSignvalues","rawSignupValues","signupShowPassword","ShowSignupPasswordForaWhile","size","passwordType","emailType","withHolder","focus","setFocus","showFocusTextFieldByHidePadding","setShowFocusTextFieldByHidePadding","checkSignupPasswordACTIVATE","sourceType","width","sizex","undefined","zIndex","zindexBackPlateP","displayBackPlateP","zindexU","zindexBackPlateU","displayBackPlateU","zindexE","zindexBackPlateE","displayBackPlateE","transform","paddingBottomE","paddingBottomP","paddingBottomU","font1","font2","darkmode","state","GlobalReducer","darkmodeReducer","focusTextfield","a","TextFieldOpacity","id","username","quote","biography","UserdataReducer","idReducer","usernameReducer","quoteReducer","biographyReducer","usernameReducerx","quoteReducerx","biographyReducerx","display","style","fontSize","paddingBottom","opacity","inputedEmail","inputedPassword","endAdornment","inputedUsername","inputedQuote","inputedDescription","TextFieldSignup","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport { ItextfIeldSignup } from \"./log-Interfaces\";\r\nimport { DialogContent } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction TextFieldSignupx({\r\n  updateSignvalues,\r\n  rawSignupValues,\r\n  signupShowPassword,\r\n  ShowSignupPasswordForaWhile,\r\n  size,\r\n  passwordType,\r\n  emailType,\r\n  withHolder,\r\n  focus,\r\n  setFocus,\r\n  showFocusTextFieldByHidePadding,\r\n  setShowFocusTextFieldByHidePadding,\r\n  checkSignupPasswordACTIVATE,\r\n  sourceType,\r\n}: ItextfIeldSignup): JSX.Element {\r\n  var width = \" \";\r\n  var sizex: \"small\" | \"medium\" | undefined = undefined;\r\n  var zIndex = 0;\r\n  var zindexBackPlateP = 0;\r\n  var displayBackPlateP = \"none\";\r\n  var zindexU = 0;\r\n  var zindexBackPlateU = 0;\r\n  var displayBackPlateU = \"none\";\r\n  var zindexE = 0;\r\n  var zindexBackPlateE = 0;\r\n  var displayBackPlateE = \"none\";\r\n\r\n  var transform = \"\";\r\n  var paddingBottomE = \"\";\r\n  var paddingBottomP = \"\";\r\n  var paddingBottomU = \"\";\r\n  var font1 = \"\";\r\n  var font2 = \"\";\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\r\n  switch (size) {\r\n    case \"small\":\r\n      sizex = \"small\";\r\n      width = \"100%\";\r\n      transform = \"scale(0.94)\";\r\n      paddingBottomE = \"48px\";\r\n      paddingBottomP = \"65px\";\r\n      paddingBottomU = \"75px\";\r\n      zIndex = 1;\r\n      font1 = \"\";\r\n      font2 = \"\";\r\n      break;\r\n    case \"smallTablet\":\r\n      sizex = \"small\";\r\n      width = \"62%\";\r\n      transform = \"scale(1)\";\r\n      paddingBottomE = \"82px\";\r\n      paddingBottomP = \"65px\";\r\n      paddingBottomU = \"78px\";\r\n      zIndex = 1;\r\n      font1 = \"2.6vh\";\r\n      font2 = \"2vh\";\r\n      break;\r\n    default:\r\n      width = withHolder;\r\n      transform = \"scale(1)\";\r\n      paddingBottomE = \"40px\";\r\n      paddingBottomP = \"27px\";\r\n      paddingBottomU = \"55px\";\r\n      zIndex = 1;\r\n      font1 = \"1.35vw\";\r\n      font2 = \"1vw\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///FOCUS TEXFIELD VARIABLES MOBILE/TAB\r\n  if (size === \"small\" || size === \"smallTablet\") {\r\n    if (emailType) {\r\n      if (focus) {\r\n        zindexE = 15;\r\n        zindexBackPlateE = 12;\r\n        displayBackPlateE = \"block\";\r\n      } else {\r\n        zindexE = 0;\r\n        zindexBackPlateE = 0;\r\n        displayBackPlateE = \"none\";\r\n      }\r\n    } else if (passwordType) {\r\n      if (focus) {\r\n        zIndex = 15;\r\n        zindexBackPlateP = 12;\r\n        displayBackPlateP = \"block\";\r\n      } else {\r\n        zIndex = 1;\r\n        zindexBackPlateP = 0;\r\n        displayBackPlateP = \"none\";\r\n      }\r\n    } else {\r\n      if (focus) {\r\n        zindexU = 15;\r\n        zindexBackPlateU = 12;\r\n        displayBackPlateU = \"block\";\r\n      } else {\r\n        zindexU = 0;\r\n        zindexBackPlateU = 0;\r\n        displayBackPlateU = \"none\";\r\n      }\r\n    }\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///TEXTFIELD BACK DROP ON FOCUS CLICK (MOBILE)\r\n  const focusTextfield = (a: number) => {\r\n    if (size === \"small\" || size === \"smallTablet\") {\r\n      if (a === 1) {\r\n        setFocus(true);\r\n        setShowFocusTextFieldByHidePadding(true);\r\n      } else {\r\n        setFocus(false);\r\n        setShowFocusTextFieldByHidePadding(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///TEXTFIELD BACK DROP ON FOCUS VARIABLES\r\n  var TextFieldOpacity = \"1\";\r\n\r\n  if (checkSignupPasswordACTIVATE) {\r\n    TextFieldOpacity = \"0\";\r\n  } else {\r\n    if (darkmodeReducer) {\r\n      if (focus) {\r\n        TextFieldOpacity = \"1\";\r\n      } else {\r\n        TextFieldOpacity = \"0.8\";\r\n      }\r\n    } else {\r\n      TextFieldOpacity = \"1\";\r\n    }\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      id: number;\r\n      username: string;\r\n      quote: string;\r\n      biography: string;\r\n    };\r\n  }\r\n  const { id, username, quote, biography } = useSelector(\r\n    (state: RootStateReducerImage) => ({\r\n      ...state.UserdataReducer,\r\n    })\r\n  );\r\n  const idReducer = id;\r\n  const usernameReducer = username;\r\n  const quoteReducer = quote;\r\n  const biographyReducer = biography;\r\n\r\n  var usernameReducerx = \"\";\r\n  if (usernameReducer === \" \" || usernameReducer === null) {\r\n    usernameReducerx = \"username\";\r\n  } else {\r\n    usernameReducerx = usernameReducer;\r\n  }\r\n\r\n  var quoteReducerx = \"\";\r\n  if (quoteReducer === \" \" || quoteReducer === null) {\r\n    quoteReducerx = \"quote\";\r\n  } else {\r\n    quoteReducerx = quoteReducer;\r\n  }\r\n\r\n  var biographyReducerx = \"\";\r\n  if (biographyReducer === \" \" || biographyReducer === null) {\r\n    biographyReducerx = \"describe yourself\";\r\n  } else {\r\n    biographyReducerx = biographyReducer;\r\n  }\r\n  return (\r\n    <>\r\n      {sourceType === \"LOG\" ? (\r\n        <>\r\n          {emailType ? (\r\n            <>\r\n              {\" \"}\r\n              <DialogContent\r\n                className={\r\n                  darkmodeReducer\r\n                    ? \"mobileTextfield-backplate dontallowhighlighting  mobileTextfield-backplateColorDark\"\r\n                    : \"mobileTextfield-backplate dontallowhighlighting  mobileTextfield-backplateColorLight \"\r\n                }\r\n                style={{\r\n                  zIndex: zindexBackPlateE,\r\n                  display: displayBackPlateE,\r\n                }}\r\n              ></DialogContent>\r\n              <TextField\r\n                onFocus={() => focusTextfield(1)}\r\n                onBlur={() => focusTextfield(0)}\r\n                size={sizex}\r\n                inputProps={{ style: { fontSize: font1 } }}\r\n                InputLabelProps={{ style: { fontSize: font2 } }}\r\n                style={{\r\n                  transform: transform,\r\n                  width: width,\r\n                  paddingBottom: showFocusTextFieldByHidePadding\r\n                    ? \"0px\"\r\n                    : paddingBottomE,\r\n                  zIndex: zindexE,\r\n                  opacity: TextFieldOpacity,\r\n                }}\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                onChange={updateSignvalues}\r\n                name=\"inputedEmail\"\r\n                value={rawSignupValues.inputedEmail}\r\n                variant=\"standard\"\r\n              />\r\n            </>\r\n          ) : passwordType ? (\r\n            <>\r\n              {\" \"}\r\n              <DialogContent\r\n                className={\r\n                  darkmodeReducer\r\n                    ? \"mobileTextfield-backplate dontallowhighlighting  mobileTextfield-backplateColorDark\"\r\n                    : \"mobileTextfield-backplate dontallowhighlighting  mobileTextfield-backplateColorLight\"\r\n                }\r\n                style={{\r\n                  zIndex: zindexBackPlateP,\r\n                  display: displayBackPlateP,\r\n                }}\r\n              ></DialogContent>\r\n              <TextField\r\n                onFocus={() => focusTextfield(1)}\r\n                onBlur={() => focusTextfield(0)}\r\n                size={sizex}\r\n                inputProps={{ style: { fontSize: font1 } }}\r\n                InputLabelProps={{ style: { fontSize: font2 } }}\r\n                style={{\r\n                  transform: transform,\r\n                  width: width,\r\n                  paddingBottom: showFocusTextFieldByHidePadding\r\n                    ? \"0px\"\r\n                    : paddingBottomP,\r\n                  zIndex: zIndex,\r\n                  opacity: TextFieldOpacity,\r\n                }}\r\n                label=\"Password\"\r\n                type={signupShowPassword ? \"text\" : \"password\"}\r\n                onChange={updateSignvalues}\r\n                name=\"inputedPassword\"\r\n                value={rawSignupValues.inputedPassword}\r\n                variant=\"standard\"\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onMouseDown={ShowSignupPasswordForaWhile}\r\n                        aria-label=\"toggle password visibility\"\r\n                      >\r\n                        {signupShowPassword ? (\r\n                          <VisibilityIcon />\r\n                        ) : (\r\n                          <VisibilityOffIcon />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            </>\r\n          ) : (\r\n            <>\r\n              {\" \"}\r\n              <DialogContent\r\n                className={\r\n                  darkmodeReducer\r\n                    ? \"mobileTextfield-backplate dontallowhighlighting  mobileTextfield-backplateColorDark\"\r\n                    : \"mobileTextfield-backplate dontallowhighlighting   mobileTextfield-backplateColorLight\"\r\n                }\r\n                style={{\r\n                  zIndex: zindexBackPlateU,\r\n                  display: displayBackPlateU,\r\n                }}\r\n              ></DialogContent>\r\n              <TextField\r\n                onFocus={() => focusTextfield(1)}\r\n                onBlur={() => focusTextfield(0)}\r\n                size={sizex}\r\n                inputProps={{ style: { fontSize: font1 } }}\r\n                InputLabelProps={{ style: { fontSize: font2 } }}\r\n                style={{\r\n                  transform: transform,\r\n                  width: width,\r\n                  paddingBottom: showFocusTextFieldByHidePadding\r\n                    ? \"0px\"\r\n                    : paddingBottomU,\r\n                  zIndex: zindexU,\r\n                  opacity: TextFieldOpacity,\r\n                }}\r\n                label=\"Username\"\r\n                type=\"text\"\r\n                onChange={updateSignvalues}\r\n                name=\"inputedUsername\"\r\n                value={rawSignupValues.inputedUsername}\r\n                variant=\"standard\"\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {\" \"}\r\n          {emailType ? (\r\n            <>\r\n              {\" \"}\r\n              <DialogContent\r\n                className={\r\n                  darkmodeReducer\r\n                    ? \"mobileTextfield-backplate dontallowhighlighting  mobileTextfield-backplateColorDark\"\r\n                    : \"mobileTextfield-backplate dontallowhighlighting   mobileTextfield-backplateColorLight\"\r\n                }\r\n                style={{\r\n                  zIndex: zindexBackPlateU,\r\n                  display: displayBackPlateU,\r\n                }}\r\n              ></DialogContent>\r\n              <TextField\r\n                onFocus={() => focusTextfield(1)}\r\n                onBlur={() => focusTextfield(0)}\r\n                size={sizex}\r\n                inputProps={{ style: { fontSize: font1 } }}\r\n                InputLabelProps={{ style: { fontSize: font2 } }}\r\n                style={{\r\n                  transform: transform,\r\n                  width: width,\r\n                  paddingBottom: showFocusTextFieldByHidePadding\r\n                    ? \"0px\"\r\n                    : \"0px\",\r\n                  zIndex: zindexU,\r\n                  opacity: TextFieldOpacity,\r\n                }}\r\n                label=\"Add a quote\"\r\n                type=\"text\"\r\n                onChange={updateSignvalues}\r\n                name=\"inputedQuote\"\r\n                value={rawSignupValues.inputedQuote}\r\n                variant=\"standard\"\r\n              />\r\n              <TextField\r\n                inputProps={{ style: { fontSize: font1 } }}\r\n                InputLabelProps={{ style: { fontSize: font2 } }}\r\n                style={{\r\n                  opacity: 0,\r\n                }}\r\n              />\r\n            </>\r\n          ) : passwordType ? (\r\n            <>\r\n              {\" \"}\r\n              <DialogContent\r\n                className={\r\n                  darkmodeReducer\r\n                    ? \"mobileTextfield-backplate dontallowhighlighting  mobileTextfield-backplateColorDark\"\r\n                    : \"mobileTextfield-backplate dontallowhighlighting   mobileTextfield-backplateColorLight\"\r\n                }\r\n                style={{\r\n                  zIndex: zindexBackPlateU,\r\n                  display: displayBackPlateU,\r\n                }}\r\n              ></DialogContent>\r\n              <TextField\r\n                onFocus={() => focusTextfield(1)}\r\n                onBlur={() => focusTextfield(0)}\r\n                size={sizex}\r\n                inputProps={{ style: { fontSize: font1 } }}\r\n                InputLabelProps={{ style: { fontSize: font2 } }}\r\n                style={{\r\n                  transform: transform,\r\n                  width: width,\r\n                  paddingBottom: showFocusTextFieldByHidePadding\r\n                    ? \"0px\"\r\n                    : \"0px\",\r\n                  zIndex: zindexU,\r\n                  opacity: TextFieldOpacity,\r\n                }}\r\n                label=\"Add a short biography\"\r\n                type=\"text\"\r\n                onChange={updateSignvalues}\r\n                name=\"inputedDescription\"\r\n                value={rawSignupValues.inputedDescription}\r\n                variant=\"standard\"\r\n              />\r\n              <TextField\r\n                inputProps={{ style: { fontSize: font1 } }}\r\n                InputLabelProps={{ style: { fontSize: font2 } }}\r\n                style={{\r\n                  opacity: 0,\r\n                }}\r\n              />\r\n            </>\r\n          ) : (\r\n            <>\r\n              {\" \"}\r\n              <DialogContent\r\n                className={\r\n                  darkmodeReducer\r\n                    ? \"mobileTextfield-backplate dontallowhighlighting  mobileTextfield-backplateColorDark\"\r\n                    : \"mobileTextfield-backplate dontallowhighlighting   mobileTextfield-backplateColorLight\"\r\n                }\r\n                style={{\r\n                  zIndex: zindexBackPlateU,\r\n                  display: displayBackPlateU,\r\n                }}\r\n              ></DialogContent>\r\n              <TextField\r\n                onFocus={() => focusTextfield(1)}\r\n                onBlur={() => focusTextfield(0)}\r\n                size={sizex}\r\n                inputProps={{ style: { fontSize: font1 } }}\r\n                InputLabelProps={{ style: { fontSize: font2 } }}\r\n                style={{\r\n                  transform: transform,\r\n                  width: width,\r\n                  paddingBottom: showFocusTextFieldByHidePadding\r\n                    ? \"0px\"\r\n                    : \"0px\",\r\n                  zIndex: zindexU,\r\n                  opacity: TextFieldOpacity,\r\n                }}\r\n                label=\"Change username\"\r\n                type=\"text\"\r\n                onChange={updateSignvalues}\r\n                name=\"inputedUsername\"\r\n                value={rawSignupValues.inputedUsername}\r\n                variant=\"standard\"\r\n              />\r\n              <TextField\r\n                inputProps={{ style: { fontSize: font1 } }}\r\n                InputLabelProps={{ style: { fontSize: font2 } }}\r\n                style={{\r\n                  opacity: 0,\r\n                }}\r\n              />\r\n            </>\r\n          )}{\" \"}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const TextFieldSignup = React.memo(TextFieldSignupx);\r\n"]},"metadata":{},"sourceType":"module"}