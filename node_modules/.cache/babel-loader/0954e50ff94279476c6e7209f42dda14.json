{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\TaskbarSuperphoto.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskbarSuperphotox({\n  finalImage\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        justifyContent: 'center',\n        display: 'flex',\n        height: '85vh'\n      },\n      children: finalImage.length === 1 ? /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          cursor: 'pointer',\n          width: '50%',\n          objectFit: 'contain'\n        },\n        src: finalImage[0],\n        alt: `Image`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 44\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            cursor: 'pointer',\n            position: 'relative',\n            padding: '0px',\n            width: '100%',\n            objectFit: 'contain'\n          },\n          src: finalImage[0],\n          alt: `Image`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            cursor: 'pointer',\n            position: 'relative',\n            padding: '0px',\n            width: '100%',\n            objectFit: 'contain'\n          },\n          src: finalImage[1],\n          alt: `Image`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(TaskbarSuperphotox, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TaskbarSuperphotox;\nexport const TaskbarSuperphoto = /*#__PURE__*/React.memo(TaskbarSuperphotox);\n_c2 = TaskbarSuperphoto;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskbarSuperphotox\");\n$RefreshReg$(_c2, \"TaskbarSuperphoto\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/TaskbarSuperphoto.tsx"],"names":["React","useDispatch","TaskbarSuperphotox","finalImage","dispatch","width","justifyContent","display","height","length","cursor","objectFit","position","padding","TaskbarSuperphoto","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAMO,OANP;AAYA,SAAsCC,WAAtC,QAAyD,aAAzD;;;;AAyBA,SAASC,kBAAT,CAA4B;AACxBC,EAAAA;AADwB,CAA5B,EACoC;AAAA;;AAChC,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAKA,sBACI;AAAA,2BAEI;AAAK,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,cAAc,EAAE,QAAjC;AAA2CC,QAAAA,OAAO,EAAE,MAApD;AAA4DC,QAAAA,MAAM,EAAE;AAApE,OAAZ;AAAA,gBAEKL,UAAU,CAACM,MAAX,KAAsB,CAAtB,gBAA0B;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,SAAV;AAAqBL,UAAAA,KAAK,EAAE,KAA5B;AAAmCM,UAAAA,SAAS,EAAE;AAA9C,SAAZ;AAAwE,QAAA,GAAG,EAAER,UAAU,CAAC,CAAD,CAAvF;AAA4F,QAAA,GAAG,EAAG;AAAlG;AAAA;AAAA;AAAA;AAAA,cAA1B,gBAAyI;AAAA,gCAEtI;AAAK,UAAA,KAAK,EAAE;AAAEO,YAAAA,MAAM,EAAE,SAAV;AAAqBE,YAAAA,QAAQ,EAAE,UAA/B;AAA2CC,YAAAA,OAAO,EAAE,KAApD;AAA2DR,YAAAA,KAAK,EAAE,MAAlE;AAA0EM,YAAAA,SAAS,EAAE;AAArF,WAAZ;AAA+G,UAAA,GAAG,EAAER,UAAU,CAAC,CAAD,CAA9H;AAAmI,UAAA,GAAG,EAAG;AAAzI;AAAA;AAAA;AAAA;AAAA,gBAFsI,eAItI;AAAK,UAAA,KAAK,EAAE;AAAEO,YAAAA,MAAM,EAAE,SAAV;AAAqBE,YAAAA,QAAQ,EAAE,UAA/B;AAA2CC,YAAAA,OAAO,EAAE,KAApD;AAA2DR,YAAAA,KAAK,EAAE,MAAlE;AAA0EM,YAAAA,SAAS,EAAE;AAArF,WAAZ;AAA+G,UAAA,GAAG,EAAER,UAAU,CAAC,CAAD,CAA9H;AAAmI,UAAA,GAAG,EAAG;AAAzI;AAAA;AAAA;AAAA;AAAA,gBAJsI;AAAA;AAF9I;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AA0BH;;GAjCQD,kB;UAEYD,W;;;KAFZC,kB;AAmCT,OAAO,MAAMY,iBAAiB,gBAAGd,KAAK,CAACe,IAAN,CAAWb,kBAAX,CAA1B;MAAMY,iB","sourcesContent":["import React, {\r\n    useRef,\r\n    useEffect,\r\n    useCallback,\r\n    useState,\r\n    useLayoutEffect,\r\n} from \"react\";\r\nimport ControlPointDuplicateIcon from \"@mui/icons-material/ControlPointDuplicate\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport Axios from \"axios\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport date from \"date-and-time\";\r\nimport { UserInfoUpdatePROFILE } from \"../log/actions/UserdataAction\";\r\nimport { UserInfoUpdateBILLBOARD } from \"../log/actions/UserdataAction\";\r\nimport { usePalette } from \"react-palette\";\r\nimport { UpdateColorAction } from \"../GlobalActions\";\r\nimport EditTwoToneIcon from \"@mui/icons-material/EditTwoTone\";\r\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\r\nimport { UpdateUploadData } from \"../GlobalActions\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\nimport CropIcon from '@mui/icons-material/Crop';\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { TaskbarCrop } from \"./TaskbarCrop\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TaskbarSuperphotox({\r\n    finalImage }: any): JSX.Element {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div style={{ width: '100%', justifyContent: 'center', display: 'flex', height: '85vh' }}>\r\n\r\n                {finalImage.length === 1 ? <img style={{ cursor: 'pointer', width: '50%', objectFit: 'contain', }} src={finalImage[0]} alt={`Image`} /> : <>\r\n\r\n                    <img style={{ cursor: 'pointer', position: 'relative', padding: '0px', width: '100%', objectFit: 'contain', }} src={finalImage[0]} alt={`Image`} />\r\n\r\n                    <img style={{ cursor: 'pointer', position: 'relative', padding: '0px', width: '100%', objectFit: 'contain', }} src={finalImage[1]} alt={`Image`} />\r\n\r\n                </>}{ }\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport const TaskbarSuperphoto = React.memo(TaskbarSuperphotox);\r\n"]},"metadata":{},"sourceType":"module"}