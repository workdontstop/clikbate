{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\UploadProfilePic.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { DialogContent } from \"@material-ui/core\";\nimport { matchTablet, matchMobile } from \"../DetectDevice\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UploadProfilePicx({\n  showModalUpload,\n  closeUploadModal,\n  OpenUploadModal,\n  getSliderWidth,\n  setShowModalUpload,\n  setStopBodyScroll\n}) {\n  _s();\n\n  //\n  //\n  //\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\n  const animation = useSpring({\n    config: {\n      duration: 600\n    },\n    opacity: showModalUpload ? 1 : 0,\n    transform: showModalUpload ? `translateY(0%)` : `translateY(-100%)`,\n    padding: \"0px\"\n  }); ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env;\n  const cropscrollRef = useRef(null);\n  const cropTOPLEVELScrollRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModalUpload ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: darkmodeReducer ? \"dialog-container\" : \"dialog-container\",\n      style: {\n        padding: \"0px\",\n        height: \"100vh\",\n        position: \"fixed\",\n        zIndex: 100,\n        cursor: \"default\",\n        overflow: \"hidden\"\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        ref: cropscrollRef,\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(DialogContent, {\n          ref: cropTOPLEVELScrollRef,\n          className: matchMobile || matchTablet ? darkmodeReducer ? \" dontallowhighlighting modal-containerDarkmob\" : \" dontallowhighlighting  modal-containerLightmob \" : darkmodeReducer ? \" dontallowhighlighting modal-containerDark  postscroll-dark \" : \" dontallowhighlighting  modal-containerLight  postscroll-light \",\n          style: {\n            padding: \"0px\",\n            height: \"100vh\",\n            overflow: \"hidden\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(UploadProfilePicx, \"cUySMdPrU88/BgTrx0PyKyzGVyw=\", false, function () {\n  return [useSpring, useSelector];\n});\n\n_c = UploadProfilePicx;\nexport const UploadProfilePic = /*#__PURE__*/React.memo(UploadProfilePicx);\n_c2 = UploadProfilePic;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadProfilePicx\");\n$RefreshReg$(_c2, \"UploadProfilePic\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/UploadProfilePic.tsx"],"names":["React","useRef","DialogContent","matchTablet","matchMobile","useSpring","animated","useSelector","UploadProfilePicx","showModalUpload","closeUploadModal","OpenUploadModal","getSliderWidth","setShowModalUpload","setStopBodyScroll","animation","config","duration","opacity","transform","padding","darkmode","state","GlobalReducer","darkmodeReducer","REACT_APP_SUPERSTARZ_URL","process","env","cropscrollRef","cropTOPLEVELScrollRef","height","position","zIndex","cursor","overflow","UploadProfilePic","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAAgE,OAAhE;AAEA,SAAuBC,aAAvB,QAA4C,mBAA5C;AACA,SAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,iBAAlD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AAEA,SAAyBC,WAAzB,QAAyD,aAAzD;;;;AAIA,SAASC,iBAAT,CAA2B;AACzBC,EAAAA,eADyB;AAEzBC,EAAAA,gBAFyB;AAGzBC,EAAAA,eAHyB;AAIzBC,EAAAA,cAJyB;AAKzBC,EAAAA,kBALyB;AAMzBC,EAAAA;AANyB,CAA3B,EAOqB;AAAA;;AACnB;AACA;AACA;AACA;AACA,QAAMC,SAAS,GAAGV,SAAS,CAAC;AAC1BW,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADkB;AAI1BC,IAAAA,OAAO,EAAET,eAAe,GAAG,CAAH,GAAO,CAJL;AAK1BU,IAAAA,SAAS,EAAEV,eAAe,GAAI,gBAAJ,GAAuB,mBALvB;AAM1BW,IAAAA,OAAO,EAAE;AANiB,GAAD,CAA3B,CALmB,CAcnB;AACA;AACA;AACA;;AAMA,QAAM;AAAEC,IAAAA;AAAF,MAAed,WAAW,CAAEe,KAAD,KAAoC,EACnE,GAAGA,KAAK,CAACC;AAD0D,GAApC,CAAD,CAAhC;AAIA,QAAMC,eAAe,GAAGH,QAAxB;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAA+BC,OAAO,CAACC,GAA7C;AACA,QAAMC,aAAa,GAAG3B,MAAM,CAAM,IAAN,CAA5B;AACA,QAAM4B,qBAA0B,GAAG5B,MAAM,CAAC,IAAD,CAAzC;AACA,sBACE;AAAA,cACGQ,eAAe,gBACd,QAAC,aAAD;AACE,MAAA,SAAS,EAAEe,eAAe,GAAG,kBAAH,GAAwB,kBADpD;AAEE,MAAA,KAAK,EAAE;AACLJ,QAAAA,OAAO,EAAE,KADJ;AAELU,QAAAA,MAAM,EAAE,OAFH;AAGLC,QAAAA,QAAQ,EAAE,OAHL;AAILC,QAAAA,MAAM,EAAE,GAJH;AAKLC,QAAAA,MAAM,EAAE,SALH;AAMLC,QAAAA,QAAQ,EAAE;AANL,OAFT;AAAA,6BAWE,QAAC,QAAD,CAAU,GAAV;AAAc,QAAA,GAAG,EAAEN,aAAnB;AAAkC,QAAA,KAAK,EAAEb,SAAzC;AAAA,+BACE,QAAC,aAAD;AACE,UAAA,GAAG,EAAEc,qBADP;AAEE,UAAA,SAAS,EACPzB,WAAW,IAAID,WAAf,GACIqB,eAAe,GACb,+CADa,GAEb,kDAHN,GAIIA,eAAe,GACf,8DADe,GAEf,iEATR;AAWE,UAAA,KAAK,EAAE;AACLJ,YAAAA,OAAO,EAAE,KADJ;AAELU,YAAAA,MAAM,EAAE,OAFH;AAGLI,YAAAA,QAAQ,EAAE;AAHL;AAXT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,YADc,GAgCZ;AAjCN,mBADF;AAqCD;;GA5EQ1B,iB;UAYWH,S,EAkBGE,W;;;KA9BdC,iB;AA8ET,OAAO,MAAM2B,gBAAgB,gBAAGnC,KAAK,CAACoC,IAAN,CAAW5B,iBAAX,CAAzB;MAAM2B,gB","sourcesContent":["import React, { useRef, useEffect, useCallback, useState } from \"react\";\r\nimport ControlPointDuplicateIcon from \"@mui/icons-material/ControlPointDuplicate\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport Axios from \"axios\";\r\n\r\nfunction UploadProfilePicx({\r\n  showModalUpload,\r\n  closeUploadModal,\r\n  OpenUploadModal,\r\n  getSliderWidth,\r\n  setShowModalUpload,\r\n  setStopBodyScroll,\r\n}: any): JSX.Element {\r\n  //\r\n  //\r\n  //\r\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 600,\r\n    },\r\n    opacity: showModalUpload ? 1 : 0,\r\n    transform: showModalUpload ? `translateY(0%)` : `translateY(-100%)`,\r\n    padding: \"0px\",\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n  const cropscrollRef = useRef<any>(null);\r\n  const cropTOPLEVELScrollRef: any = useRef(null);\r\n  return (\r\n    <>\r\n      {showModalUpload ? (\r\n        <DialogContent\r\n          className={darkmodeReducer ? \"dialog-container\" : \"dialog-container\"}\r\n          style={{\r\n            padding: \"0px\",\r\n            height: \"100vh\",\r\n            position: \"fixed\",\r\n            zIndex: 100,\r\n            cursor: \"default\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          <animated.div ref={cropscrollRef} style={animation}>\r\n            <DialogContent\r\n              ref={cropTOPLEVELScrollRef}\r\n              className={\r\n                matchMobile || matchTablet\r\n                  ? darkmodeReducer\r\n                    ? \" dontallowhighlighting modal-containerDarkmob\"\r\n                    : \" dontallowhighlighting  modal-containerLightmob \"\r\n                  : darkmodeReducer\r\n                  ? \" dontallowhighlighting modal-containerDark  postscroll-dark \"\r\n                  : \" dontallowhighlighting  modal-containerLight  postscroll-light \"\r\n              }\r\n              style={{\r\n                padding: \"0px\",\r\n                height: \"100vh\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            ></DialogContent>\r\n          </animated.div>\r\n        </DialogContent>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const UploadProfilePic = React.memo(UploadProfilePicx);\r\n"]},"metadata":{},"sourceType":"module"}