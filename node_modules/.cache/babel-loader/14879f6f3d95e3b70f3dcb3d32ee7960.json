{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\PcModalLog.tsx\",\n    _s = $RefreshSig$();\n\nimport ModalFormSignupError from \"./ModalFormSignupError\";\nimport ModalFormLoginError from \"./ModalFormLoginError\";\nimport ServerError from \"./ServerError\";\nimport { useSpring, animated } from \"react-spring\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { IconButton, InputAdornment, Grid, DialogContent, Paper, makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PcModalLog(DialogeData) {\n  _s();\n\n  ///\n  ///\n  ///\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n  const modalanimation = useSpring({\n    config: {\n      duration: 1000\n    },\n    opacity: DialogeData.showModalForm ? 1 : 0.9,\n    transform: DialogeData.showModalForm ? `translateY(0%)` : `translateY(100%)`\n  });\n  const modalanimationTwo = useSpring({\n    config: {\n      duration: 900\n    },\n    opacity: DialogeData.showModalForm ? 1 : 0.9,\n    transform: DialogeData.showModalForm ? `translateY(0%)` : `translateY(100%)`\n  }); ///\n  ///\n  ///\n  /// MATERIAL UI  CUSTOM STYLES\n\n  var useStyleModal = makeStyles(() => ({\n    containerStyle: {\n      width: DialogeData.imageReal,\n      height: \"auto\",\n      boxShadow: \"0 5px 16px rgba(0, 0, 0, 0.2)\",\n      color: \"#000000\",\n      position: \"relative\",\n      zIndex: 10,\n      borderRadius: DialogeData.borderGrid\n    },\n    imageStyle: {\n      opacity: DialogeData.opacityFixedModalImage,\n      cursor: \"pointer\",\n      objectFit: \"cover\",\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: \"0px\",\n      borderTopLeftRadius: DialogeData.borderGrid,\n      borderBottomLeftRadius: DialogeData.borderGrid\n    },\n    imageStylex: {\n      opacity: DialogeData.opacitySlidingModalImage,\n      cursor: \"pointer\",\n      width: \"100%\",\n      height: \"auto\",\n      borderRadius: \"0px\"\n    }\n  }));\n  var classes = useStyleModal();\n  return /*#__PURE__*/_jsxDEV(DialogContent, {\n    style: {\n      paddingLeft: \"0px\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n      className: \"fadermodal-imageslider modalImageCustomSlider FormDialog-containerx dontallowhighlighting\",\n      onClick: DialogeData.onBackgroundFocus,\n      style: {\n        display: DialogeData.slidingModalImageBack,\n        overflow: \"auto\",\n        cursor: \"pointer\",\n        height: \"101%\",\n        padding: \"0px\",\n        width: DialogeData.slidingImageWidth\n      },\n      ref: DialogeData.ModalBackgroundRef,\n      children: [\" \", /*#__PURE__*/_jsxDEV(animated.div, {\n        style: modalanimationTwo,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: DialogeData.zoomlogmodal,\n          src: DialogeData.showimage,\n          className: classes.imageStylex,\n          alt: \"Logzoom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: \"fadermodal FormDialog-container dontallowhighlighting\",\n      onClick: DialogeData.onBackgroundFocus,\n      style: {\n        overflow: \"hidden\",\n        cursor: \"pointer\"\n      },\n      ref: DialogeData.ModalBackgroundRef,\n      children: [/*#__PURE__*/_jsxDEV(ServerError, {\n        serverEmojiplain: DialogeData.serverEmojiplain,\n        setServerErrorData: DialogeData.setServerErrorData,\n        serverErrorDisplay: DialogeData.serverErrorDisplay,\n        serverErrorData: DialogeData.serverErrorData,\n        darkmode: DialogeData.darkmode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n        style: modalanimation,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: DialogeData.PaperStyle,\n          style: {\n            borderRadius: DialogeData.borderGrid,\n            cursor: \"default\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            className: classes.containerStyle,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: DialogeData.GridHolderA,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                onClick: DialogeData.iconclicked,\n                className: DialogeData.zoomedModal ? \"hide-logo\" : \"log-logo  make-small-icons-clickable-neutralB\",\n                src: DialogeData.SuperIcon,\n                alt: \"SuperstarZ logosmallmode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                onClick: DialogeData.zoomlogmodal,\n                onLoad: DialogeData.onimageload,\n                src: DialogeData.showimage,\n                className: classes.imageStyle,\n                alt: \"Logsmall\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), DialogeData.formtype ? /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: DialogeData.GridHolderB,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                xs: 12,\n                item: true,\n                className: \"formholder\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  className: \"center-content-vertically\",\n                  style: {\n                    marginTop: \"-5px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: DialogeData.iconclicked,\n                    className: DialogeData.zoomedModal ? \"zoom-login-logo  make-small-icons-clickable-neutral\" : \"hide-logo \",\n                    src: DialogeData.SuperIcon,\n                    alt: \"SuperstarZ logo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: DialogeData.logout,\n                    style: {\n                      cursor: \"pointer\",\n                      opacity: 0.1,\n                      position: \"fixed\",\n                      top: \"0.5em\",\n                      borderRadius: \"50%\"\n                    },\n                    children: [\" \", \"....\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n                    type: true,\n                    ErrorDisplay: DialogeData.errorsLoginInputedUsername,\n                    darkmode: DialogeData.darkmode,\n                    WidthHolder: DialogeData.WidthHolder\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    style: {\n                      width: DialogeData.WidthHolder,\n                      paddingBottom: \"60px\"\n                    },\n                    inputProps: {\n                      style: {\n                        fontSize: \"2.5vh\"\n                      }\n                    },\n                    InputLabelProps: {\n                      style: {\n                        fontSize: \"1.8vh\"\n                      }\n                    },\n                    label: \"Username\",\n                    type: \"text\",\n                    onChange: DialogeData.updateLoginvalues,\n                    name: \"inputedUsername\",\n                    value: DialogeData.rawLogininputedUsername,\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    style: {\n                      width: DialogeData.WidthHolder,\n                      paddingBottom: \"40px\",\n                      zIndex: 1\n                    },\n                    inputProps: {\n                      style: {\n                        fontSize: \"2.5vh\"\n                      }\n                    },\n                    InputLabelProps: {\n                      style: {\n                        fontSize: \"1.8vh\"\n                      }\n                    },\n                    label: \"Password\",\n                    onChange: DialogeData.updateLoginvalues,\n                    type: DialogeData.loginShowPassword ? \"text\" : \"password\",\n                    name: \"inputedPassword\",\n                    value: DialogeData.rawLogininputedPassword,\n                    variant: \"filled\",\n                    InputProps: {\n                      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                        position: \"end\",\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          onClick: DialogeData.ShowLoginPasswordForaWhile,\n                          onMouseDown: DialogeData.ShowLoginPasswordForaWhile,\n                          \"aria-label\": \"toggle password visibility\",\n                          children: DialogeData.loginShowPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 236,\n                            columnNumber: 35\n                          }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 238,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 228,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 29\n                      }, this)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(ModalFormLoginError, {\n                    type: false,\n                    ErrorDisplay: DialogeData.errorsLoginInputedPassword,\n                    darkmode: DialogeData.darkmode,\n                    WidthHolder: DialogeData.WidthHolder\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    style: {\n                      marginTop: \"70px\",\n                      zIndex: 300\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 4\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      className: \"buttonpad buttonshake\",\n                      xs: 4,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: DialogeData.logmein,\n                        className: DialogeData.loginclass,\n                        fullWidth: true,\n                        variant: \"outlined\",\n                        size: \"large\",\n                        color: \"primary\",\n                        children: \"Log In\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 25\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n              xs: DialogeData.GridHolderB,\n              item: true,\n              className: \"formholder\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                className: \"center-content-vertically\",\n                style: {\n                  padding: \"0px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  onClick: DialogeData.iconclicked,\n                  className: DialogeData.zoomedModal ? \"zoom-signup-logo make-small-icons-clickable-neutral\" : \"hide-logo make-small-icons-clickable-neutral \",\n                  src: DialogeData.SuperIcon,\n                  alt: \"SuperstarZ logo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n                  ErrorType: 0,\n                  textField: \"email\",\n                  errorFormChecking: DialogeData.errorFormCheckinginputedEmail,\n                  WidthHolder: DialogeData.WidthHolder,\n                  darkmode: DialogeData.darkmode,\n                  type: true,\n                  cantPassBadEmail: DialogeData.cantPassBadEmail,\n                  ErrorDisplay: DialogeData.emailErrorDisplay,\n                  ErrorData: DialogeData.emailErrorData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: DialogeData.WidthHolder,\n                    paddingBottom: \"45px\"\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Email\",\n                  type: \"email\",\n                  onChange: DialogeData.updateSignvalues,\n                  name: \"inputedEmail\",\n                  value: DialogeData.rawSignupValuesinputedEmail,\n                  variant: \"filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n                  ErrorType: DialogeData.errorsSignupValuesinputedUsername,\n                  textField: \"username\",\n                  errorFormChecking: DialogeData.errorFormCheckinginputedUsername,\n                  WidthHolder: DialogeData.WidthHolder,\n                  darkmode: DialogeData.darkmode,\n                  type: true,\n                  cantPassBadEmail: DialogeData.cantPassBadEmail,\n                  ErrorDisplay: DialogeData.usernameErrorDisplay,\n                  ErrorData: DialogeData.usernameErrorData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: DialogeData.WidthHolder,\n                    paddingBottom: \"45px\"\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Username\",\n                  type: \"text\",\n                  onChange: DialogeData.updateSignvalues,\n                  name: \"inputedUsername\",\n                  value: DialogeData.rawSignupValuesinputedUsername,\n                  variant: \"filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: DialogeData.WidthHolder,\n                    paddingBottom: \"30px\",\n                    zIndex: 1\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Password\",\n                  type: DialogeData.signupShowPassword ? \"text\" : \"password\",\n                  onChange: DialogeData.updateSignvalues,\n                  name: \"inputedPassword\",\n                  value: DialogeData.rawSignupValuesinputedPassword,\n                  variant: \"filled\",\n                  InputProps: {\n                    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"end\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: DialogeData.ShowSignupPasswordForaWhile,\n                        onMouseDown: DialogeData.ShowSignupPasswordForaWhile,\n                        \"aria-label\": \"toggle password visibility\",\n                        children: DialogeData.signupShowPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 373,\n                          columnNumber: 33\n                        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 375,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 365,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 27\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ModalFormSignupError, {\n                  ErrorType: 0,\n                  textField: \"password\",\n                  errorFormChecking: DialogeData.errorFormCheckinginputedPassword,\n                  darkmode: DialogeData.darkmode,\n                  WidthHolder: DialogeData.WidthHolder,\n                  type: false,\n                  cantPassBadEmail: DialogeData.cantPassBadEmail,\n                  ErrorDisplay: DialogeData.passwordErrorDisplay,\n                  ErrorData: DialogeData.passwordErrorData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  className: \"modal-hold-signup\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    className: \"buttonpad buttonshake\",\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      className: DialogeData.signupclass,\n                      onClick: DialogeData.signmeup,\n                      fullWidth: true,\n                      variant: \"contained\",\n                      size: \"large\",\n                      color: \"secondary\",\n                      children: \"Sign Up\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 399,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 23\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PcModalLog, \"vJdsVWLRLsHhP67BoMr6LLED6eY=\", false, function () {\n  return [useSpring, useSpring, useStyleModal];\n});\n\n_c = PcModalLog;\nexport default PcModalLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"PcModalLog\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/PcModalLog.tsx"],"names":["ModalFormSignupError","ModalFormLoginError","ServerError","useSpring","animated","VisibilityOffIcon","VisibilityIcon","IconButton","InputAdornment","Grid","DialogContent","Paper","makeStyles","TextField","Button","PcModalLog","DialogeData","modalanimation","config","duration","opacity","showModalForm","transform","modalanimationTwo","useStyleModal","containerStyle","width","imageReal","height","boxShadow","color","position","zIndex","borderRadius","borderGrid","imageStyle","opacityFixedModalImage","cursor","objectFit","borderTopLeftRadius","borderBottomLeftRadius","imageStylex","opacitySlidingModalImage","classes","paddingLeft","onBackgroundFocus","display","slidingModalImageBack","overflow","padding","slidingImageWidth","ModalBackgroundRef","zoomlogmodal","showimage","serverEmojiplain","setServerErrorData","serverErrorDisplay","serverErrorData","darkmode","PaperStyle","GridHolderA","iconclicked","zoomedModal","SuperIcon","onimageload","formtype","GridHolderB","marginTop","logout","top","errorsLoginInputedUsername","WidthHolder","paddingBottom","style","fontSize","updateLoginvalues","rawLogininputedUsername","loginShowPassword","rawLogininputedPassword","endAdornment","ShowLoginPasswordForaWhile","errorsLoginInputedPassword","logmein","loginclass","errorFormCheckinginputedEmail","cantPassBadEmail","emailErrorDisplay","emailErrorData","updateSignvalues","rawSignupValuesinputedEmail","errorsSignupValuesinputedUsername","errorFormCheckinginputedUsername","usernameErrorDisplay","usernameErrorData","rawSignupValuesinputedUsername","signupShowPassword","rawSignupValuesinputedPassword","ShowSignupPasswordForaWhile","errorFormCheckinginputedPassword","passwordErrorDisplay","passwordErrorData","signupclass","signmeup"],"mappings":"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","sourcesContent":["import ModalFormSignupError from \"./ModalFormSignupError\";\r\nimport ModalFormLoginError from \"./ModalFormLoginError\";\r\nimport ServerError from \"./ServerError\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport {\r\n  IconButton,\r\n  InputAdornment,\r\n  Grid,\r\n  DialogContent,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { IDialogeDataPc } from \"./appFolder-Interfaces\";\r\n\r\nfunction PcModalLog(DialogeData: IDialogeDataPc) {\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      duration: 1000,\r\n    },\r\n    opacity: DialogeData.showModalForm ? 1 : 0.9,\r\n    transform: DialogeData.showModalForm\r\n      ? `translateY(0%)`\r\n      : `translateY(100%)`,\r\n  });\r\n\r\n  const modalanimationTwo = useSpring({\r\n    config: {\r\n      duration: 900,\r\n    },\r\n    opacity: DialogeData.showModalForm ? 1 : 0.9,\r\n    transform: DialogeData.showModalForm\r\n      ? `translateY(0%)`\r\n      : `translateY(100%)`,\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// MATERIAL UI  CUSTOM STYLES\r\n  var useStyleModal = makeStyles(() => ({\r\n    containerStyle: {\r\n      width: DialogeData.imageReal,\r\n      height: \"auto\",\r\n      boxShadow: \"0 5px 16px rgba(0, 0, 0, 0.2)\",\r\n      color: \"#000000\",\r\n      position: \"relative\",\r\n      zIndex: 10,\r\n      borderRadius: DialogeData.borderGrid,\r\n    },\r\n    imageStyle: {\r\n      opacity: DialogeData.opacityFixedModalImage,\r\n      cursor: \"pointer\",\r\n      objectFit: \"cover\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"0px\",\r\n      borderTopLeftRadius: DialogeData.borderGrid,\r\n      borderBottomLeftRadius: DialogeData.borderGrid,\r\n    },\r\n    imageStylex: {\r\n      opacity: DialogeData.opacitySlidingModalImage,\r\n      cursor: \"pointer\",\r\n      width: \"100%\",\r\n      height: \"auto\",\r\n      borderRadius: \"0px\",\r\n    },\r\n  }));\r\n  var classes = useStyleModal();\r\n\r\n  return (\r\n    <DialogContent\r\n      style={{\r\n        paddingLeft: \"0px\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <DialogContent\r\n        className=\"fadermodal-imageslider modalImageCustomSlider FormDialog-containerx dontallowhighlighting\"\r\n        onClick={DialogeData.onBackgroundFocus}\r\n        style={{\r\n          display: DialogeData.slidingModalImageBack,\r\n          overflow: \"auto\",\r\n          cursor: \"pointer\",\r\n          height: \"101%\",\r\n          padding: \"0px\",\r\n          width: DialogeData.slidingImageWidth,\r\n        }}\r\n        ref={DialogeData.ModalBackgroundRef}\r\n      >\r\n        {\" \"}\r\n        <animated.div style={modalanimationTwo}>\r\n          {\" \"}\r\n          <img\r\n            onClick={DialogeData.zoomlogmodal}\r\n            src={DialogeData.showimage}\r\n            className={classes.imageStylex}\r\n            alt=\"Logzoom\"\r\n          />\r\n        </animated.div>\r\n      </DialogContent>\r\n\r\n      <DialogContent\r\n        className=\"fadermodal FormDialog-container dontallowhighlighting\"\r\n        onClick={DialogeData.onBackgroundFocus}\r\n        style={{ overflow: \"hidden\", cursor: \"pointer\" }}\r\n        ref={DialogeData.ModalBackgroundRef}\r\n      >\r\n        <ServerError\r\n          serverEmojiplain={DialogeData.serverEmojiplain}\r\n          setServerErrorData={DialogeData.setServerErrorData}\r\n          serverErrorDisplay={DialogeData.serverErrorDisplay}\r\n          serverErrorData={DialogeData.serverErrorData}\r\n          darkmode={DialogeData.darkmode}\r\n        />\r\n        <animated.div style={modalanimation}>\r\n          <Paper\r\n            className={DialogeData.PaperStyle}\r\n            style={{\r\n              borderRadius: DialogeData.borderGrid,\r\n              cursor: \"default\",\r\n            }}\r\n          >\r\n            <Grid container className={classes.containerStyle}>\r\n              <Grid item xs={DialogeData.GridHolderA}>\r\n                <img\r\n                  onClick={DialogeData.iconclicked}\r\n                  className={\r\n                    DialogeData.zoomedModal\r\n                      ? \"hide-logo\"\r\n                      : \"log-logo  make-small-icons-clickable-neutralB\"\r\n                  }\r\n                  src={DialogeData.SuperIcon}\r\n                  alt=\"SuperstarZ logosmallmode\"\r\n                />\r\n\r\n                <img\r\n                  onClick={DialogeData.zoomlogmodal}\r\n                  onLoad={DialogeData.onimageload}\r\n                  src={DialogeData.showimage}\r\n                  className={classes.imageStyle}\r\n                  alt=\"Logsmall\"\r\n                />\r\n              </Grid>\r\n\r\n              {DialogeData.formtype ? (\r\n                <Grid item xs={DialogeData.GridHolderB}>\r\n                  <Grid xs={12} item className=\"formholder\">\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      className=\"center-content-vertically\"\r\n                      style={{ marginTop: \"-5px\" }}\r\n                    >\r\n                      <img\r\n                        onClick={DialogeData.iconclicked}\r\n                        className={\r\n                          DialogeData.zoomedModal\r\n                            ? \"zoom-login-logo  make-small-icons-clickable-neutral\"\r\n                            : \"hide-logo \"\r\n                        }\r\n                        src={DialogeData.SuperIcon}\r\n                        alt=\"SuperstarZ logo\"\r\n                      />\r\n\r\n                      <button\r\n                        onClick={DialogeData.logout}\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                          opacity: 0.1,\r\n                          position: \"fixed\",\r\n                          top: \"0.5em\",\r\n                          borderRadius: \"50%\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        ....\r\n                      </button>\r\n                      <ModalFormLoginError\r\n                        type={true}\r\n                        ErrorDisplay={DialogeData.errorsLoginInputedUsername}\r\n                        darkmode={DialogeData.darkmode}\r\n                        WidthHolder={DialogeData.WidthHolder}\r\n                      />\r\n\r\n                      <TextField\r\n                        style={{\r\n                          width: DialogeData.WidthHolder,\r\n                          paddingBottom: \"60px\",\r\n                        }}\r\n                        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                        label=\"Username\"\r\n                        type=\"text\"\r\n                        onChange={DialogeData.updateLoginvalues}\r\n                        name=\"inputedUsername\"\r\n                        value={DialogeData.rawLogininputedUsername}\r\n                        variant=\"filled\"\r\n                      />\r\n\r\n                      <TextField\r\n                        style={{\r\n                          width: DialogeData.WidthHolder,\r\n                          paddingBottom: \"40px\",\r\n                          zIndex: 1,\r\n                        }}\r\n                        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                        label=\"Password\"\r\n                        onChange={DialogeData.updateLoginvalues}\r\n                        type={\r\n                          DialogeData.loginShowPassword ? \"text\" : \"password\"\r\n                        }\r\n                        name=\"inputedPassword\"\r\n                        value={DialogeData.rawLogininputedPassword}\r\n                        variant=\"filled\"\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              <IconButton\r\n                                onClick={DialogeData.ShowLoginPasswordForaWhile}\r\n                                onMouseDown={\r\n                                  DialogeData.ShowLoginPasswordForaWhile\r\n                                }\r\n                                aria-label=\"toggle password visibility\"\r\n                              >\r\n                                {DialogeData.loginShowPassword ? (\r\n                                  <VisibilityIcon />\r\n                                ) : (\r\n                                  <VisibilityOffIcon />\r\n                                )}\r\n                              </IconButton>\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                      <ModalFormLoginError\r\n                        type={false}\r\n                        ErrorDisplay={DialogeData.errorsLoginInputedPassword}\r\n                        darkmode={DialogeData.darkmode}\r\n                        WidthHolder={DialogeData.WidthHolder}\r\n                      />\r\n\r\n                      <Grid\r\n                        container\r\n                        style={{ marginTop: \"70px\", zIndex: 300 }}\r\n                      >\r\n                        <Grid item xs={4}></Grid>\r\n                        <Grid item className=\"buttonpad buttonshake\" xs={4}>\r\n                          <Button\r\n                            onClick={DialogeData.logmein}\r\n                            className={DialogeData.loginclass}\r\n                            fullWidth={true}\r\n                            variant=\"outlined\"\r\n                            size=\"large\"\r\n                            color=\"primary\"\r\n                          >\r\n                            Log In\r\n                          </Button>\r\n                        </Grid>{\" \"}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              ) : (\r\n                <Grid xs={DialogeData.GridHolderB} item className=\"formholder\">\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    className=\"center-content-vertically\"\r\n                    style={{ padding: \"0px\" }}\r\n                  >\r\n                    <img\r\n                      onClick={DialogeData.iconclicked}\r\n                      className={\r\n                        DialogeData.zoomedModal\r\n                          ? \"zoom-signup-logo make-small-icons-clickable-neutral\"\r\n                          : \"hide-logo make-small-icons-clickable-neutral \"\r\n                      }\r\n                      src={DialogeData.SuperIcon}\r\n                      alt=\"SuperstarZ logo\"\r\n                    />\r\n                    <ModalFormSignupError\r\n                      ErrorType={0}\r\n                      textField=\"email\"\r\n                      errorFormChecking={\r\n                        DialogeData.errorFormCheckinginputedEmail\r\n                      }\r\n                      WidthHolder={DialogeData.WidthHolder}\r\n                      darkmode={DialogeData.darkmode}\r\n                      type={true}\r\n                      cantPassBadEmail={DialogeData.cantPassBadEmail}\r\n                      ErrorDisplay={DialogeData.emailErrorDisplay}\r\n                      ErrorData={DialogeData.emailErrorData}\r\n                    />\r\n                    <TextField\r\n                      style={{\r\n                        width: DialogeData.WidthHolder,\r\n                        paddingBottom: \"45px\",\r\n                      }}\r\n                      inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                      InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      onChange={DialogeData.updateSignvalues}\r\n                      name=\"inputedEmail\"\r\n                      value={DialogeData.rawSignupValuesinputedEmail}\r\n                      variant=\"filled\"\r\n                    />\r\n                    <ModalFormSignupError\r\n                      ErrorType={DialogeData.errorsSignupValuesinputedUsername}\r\n                      textField=\"username\"\r\n                      errorFormChecking={\r\n                        DialogeData.errorFormCheckinginputedUsername\r\n                      }\r\n                      WidthHolder={DialogeData.WidthHolder}\r\n                      darkmode={DialogeData.darkmode}\r\n                      type={true}\r\n                      cantPassBadEmail={DialogeData.cantPassBadEmail}\r\n                      ErrorDisplay={DialogeData.usernameErrorDisplay}\r\n                      ErrorData={DialogeData.usernameErrorData}\r\n                    />\r\n                    <TextField\r\n                      style={{\r\n                        width: DialogeData.WidthHolder,\r\n                        paddingBottom: \"45px\",\r\n                      }}\r\n                      inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                      InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                      label=\"Username\"\r\n                      type=\"text\"\r\n                      onChange={DialogeData.updateSignvalues}\r\n                      name=\"inputedUsername\"\r\n                      value={DialogeData.rawSignupValuesinputedUsername}\r\n                      variant=\"filled\"\r\n                    />\r\n\r\n                    <TextField\r\n                      style={{\r\n                        width: DialogeData.WidthHolder,\r\n                        paddingBottom: \"30px\",\r\n                        zIndex: 1,\r\n                      }}\r\n                      inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                      InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                      label=\"Password\"\r\n                      type={\r\n                        DialogeData.signupShowPassword ? \"text\" : \"password\"\r\n                      }\r\n                      onChange={DialogeData.updateSignvalues}\r\n                      name=\"inputedPassword\"\r\n                      value={DialogeData.rawSignupValuesinputedPassword}\r\n                      variant=\"filled\"\r\n                      InputProps={{\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              onClick={DialogeData.ShowSignupPasswordForaWhile}\r\n                              onMouseDown={\r\n                                DialogeData.ShowSignupPasswordForaWhile\r\n                              }\r\n                              aria-label=\"toggle password visibility\"\r\n                            >\r\n                              {DialogeData.signupShowPassword ? (\r\n                                <VisibilityIcon />\r\n                              ) : (\r\n                                <VisibilityOffIcon />\r\n                              )}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                    <ModalFormSignupError\r\n                      ErrorType={0}\r\n                      textField=\"password\"\r\n                      errorFormChecking={\r\n                        DialogeData.errorFormCheckinginputedPassword\r\n                      }\r\n                      darkmode={DialogeData.darkmode}\r\n                      WidthHolder={DialogeData.WidthHolder}\r\n                      type={false}\r\n                      cantPassBadEmail={DialogeData.cantPassBadEmail}\r\n                      ErrorDisplay={DialogeData.passwordErrorDisplay}\r\n                      ErrorData={DialogeData.passwordErrorData}\r\n                    />\r\n\r\n                    <Grid container className=\"modal-hold-signup\">\r\n                      <Grid item xs={4}></Grid>\r\n                      <Grid item className=\"buttonpad buttonshake\" xs={4}>\r\n                        <Button\r\n                          className={DialogeData.signupclass}\r\n                          onClick={DialogeData.signmeup}\r\n                          fullWidth={true}\r\n                          variant=\"contained\"\r\n                          size=\"large\"\r\n                          color=\"secondary\"\r\n                        >\r\n                          Sign Up\r\n                        </Button>\r\n                      </Grid>{\" \"}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </Paper>\r\n        </animated.div>\r\n      </DialogContent>\r\n    </DialogContent>\r\n  );\r\n}\r\n\r\nexport default PcModalLog;\r\n"]},"metadata":{},"sourceType":"module"}