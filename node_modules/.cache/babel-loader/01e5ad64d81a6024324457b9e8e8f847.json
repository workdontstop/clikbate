{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\Profile.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Billboard } from \"./Billboard\";\nimport { Post } from \"./Post\";\nimport { OptionsSlider } from \"./OptionsSlider\";\nimport { CommentTemplate } from \"../CommentTemplate\";\nimport { matchPc, matchTablet } from \"../DetectDevice\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, Box } from \"@material-ui/core\";\nimport Masonry from \"@mui/lab/Masonry\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Profilex({\n  OpenModalForm,\n  getSliderWidthRef,\n  getSliderWidth,\n  postData,\n  addPostItemsRef,\n  onPostsItemload,\n  itemheight,\n  itemheighthold,\n  postbackheight,\n  formtype,\n  showModalForm,\n  CloseModalForm,\n  aboutTemplateGo,\n  commentTemplateGo,\n  itemcroptype,\n  itemFinalPostHeight,\n  onPostsItemClicked,\n  itemCLICKED\n}) {\n  _s();\n\n  ///\n  ///\n  ///TYPES FOR ISLOGGEDIN\n  ///\n  ///LOGGED IN DATA FROM REDUX\n  const {\n    loggedIn\n  } = useSelector(state => ({ ...state.IsLoggedReducer\n  }));\n  const loggedInReducer = loggedIn; ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///MUI PAPER STYLES FROM REDUX\n\n  const {\n    PaperStyleLight,\n    PaperStyleDark\n  } = useSelector(state => ({ ...state.PaperReducerLightnDark\n  }));\n  var PaperStyleReducer = \"\";\n\n  if (darkmodeReducer) {\n    PaperStyleReducer = PaperStyleDark;\n  } else {\n    PaperStyleReducer = PaperStyleLight;\n  } ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n\n  const {\n    color,\n    colordark\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  var widthProfilePic = matchPc ? \"18%\" : matchTablet ? \"42%\" : \"44vw\";\n  var topProfilePic = matchPc ? \"50vh\" : matchTablet ? \"31em\" : \"10.2em\";\n  var leftProfilePic = matchPc ? \"1vw\" : matchTablet ? \"3vw\" : \"2.6vw\";\n  var optionsClass = \"\";\n  var fontOptions = \"\";\n\n  if (matchPc) {\n    optionsClass = \"profile-optionsImagePc\";\n    fontOptions = \"2.7vw\";\n  } else if (matchTablet) {\n    optionsClass = \"profile-optionsImageTablet\";\n    fontOptions = \"5rem\";\n  } else {\n    optionsClass = \"profile-optionsImageMobile\";\n    fontOptions = \"1.9rem\";\n  } ///\n  ///\n  ///\n  /// GET LOGGED USER DATA FROM REDUX STORE\n\n\n  const {\n    image\n  } = useSelector(state => ({ ...state.UserdataReducer\n  }));\n  const imageReducer = image; ///\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Billboard, {\n      OpenModalForm: OpenModalForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"dontallowhighlighting\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        component: Box,\n        display: {\n          xs: \"none\",\n          md: \"block\"\n        },\n        md: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        ref: getSliderWidthRef,\n        xs: 2,\n        md: 1,\n        style: {\n          padding: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        md: 2,\n        style: {\n          padding: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 7,\n        md: 4,\n        style: {\n          position: \"relative\",\n          height: \"19.5vh\",\n          paddingLeft: matchPc ? \"20px\" : matchTablet ? \"42px\" : \"24px\",\n          marginTop: \"-4px\",\n          zIndex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(OptionsSlider, {\n          getSliderWidth: getSliderWidth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\",\n          height: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Masonry, {\n        columns: 2,\n        spacing: 0,\n        children: postData.map((post, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Post, {\n            pey: i,\n            refy: addPostItemsRef,\n            onPostsItemload: onPostsItemload,\n            post: post,\n            itemheight: itemheight,\n            itemheighthold: itemheighthold,\n            postbackheight: postbackheight,\n            itemcroptype: itemcroptype,\n            length: postData.length,\n            itemFinalPostHeight: itemFinalPostHeight,\n            onPostsItemClicked: onPostsItemClicked,\n            itemCLICKED: itemCLICKED\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\",\n          height: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentTemplate, {\n      formtype: formtype,\n      showModalForm: showModalForm,\n      CloseModalForm: CloseModalForm,\n      aboutTemp: aboutTemplateGo,\n      commentTemp: commentTemplateGo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Profilex, \"A0WGyonmZRRjlQePEzn/cHoCIOQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Profilex;\nexport const Profile = /*#__PURE__*/React.memo(Profilex);\n_c2 = Profile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Profilex\");\n$RefreshReg$(_c2, \"Profile\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/Profile.tsx"],"names":["React","Billboard","Post","OptionsSlider","CommentTemplate","matchPc","matchTablet","useSelector","Grid","Box","Masonry","Profilex","OpenModalForm","getSliderWidthRef","getSliderWidth","postData","addPostItemsRef","onPostsItemload","itemheight","itemheighthold","postbackheight","formtype","showModalForm","CloseModalForm","aboutTemplateGo","commentTemplateGo","itemcroptype","itemFinalPostHeight","onPostsItemClicked","itemCLICKED","loggedIn","state","IsLoggedReducer","loggedInReducer","darkmode","GlobalReducer","darkmodeReducer","PaperStyleLight","PaperStyleDark","PaperReducerLightnDark","PaperStyleReducer","color","colordark","GlobalReducerColor","colorReducer","colorReducerdark","widthProfilePic","topProfilePic","leftProfilePic","optionsClass","fontOptions","image","UserdataReducer","imageReducer","xs","md","padding","position","height","paddingLeft","marginTop","zIndex","map","post","i","length","Profile","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAgE,OAAhE;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,iBAArC;AACA,SAAyBC,WAAzB,QAA4C,aAA5C;AACA,SAAgBC,IAAhB,EAAsBC,GAAtB,QAAiC,mBAAjC;AAEA,OAAOC,OAAP,MAAoB,kBAApB;;;;AAGA,SAASC,QAAT,CAAkB;AAChBC,EAAAA,aADgB;AAEhBC,EAAAA,iBAFgB;AAGhBC,EAAAA,cAHgB;AAIhBC,EAAAA,QAJgB;AAKhBC,EAAAA,eALgB;AAMhBC,EAAAA,eANgB;AAOhBC,EAAAA,UAPgB;AAQhBC,EAAAA,cARgB;AAShBC,EAAAA,cATgB;AAUhBC,EAAAA,QAVgB;AAWhBC,EAAAA,aAXgB;AAYhBC,EAAAA,cAZgB;AAahBC,EAAAA,eAbgB;AAchBC,EAAAA,iBAdgB;AAehBC,EAAAA,YAfgB;AAgBhBC,EAAAA,mBAhBgB;AAiBhBC,EAAAA,kBAjBgB;AAkBhBC,EAAAA;AAlBgB,CAAlB,EAmBQ;AAAA;;AACN;AACA;AACA;AAOA;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAevB,WAAW,CAAEwB,KAAD,KAA+B,EAC9D,GAAGA,KAAK,CAACC;AADqD,GAA/B,CAAD,CAAhC;AAGA,QAAMC,eAAe,GAAGH,QAAxB,CAfM,CAiBN;AACA;AACA;AACA;;AAMA,QAAM;AAAEI,IAAAA;AAAF,MAAe3B,WAAW,CAAEwB,KAAD,KAAoC,EACnE,GAAGA,KAAK,CAACI;AAD0D,GAApC,CAAD,CAAhC;AAIA,QAAMC,eAAe,GAAGF,QAAxB,CA9BM,CAgCN;AACA;AACA;;AACA,QAAM;AAAEG,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAsC/B,WAAW,CACpDwB,KAAD,KAA4B,EAC1B,GAAGA,KAAK,CAACQ;AADiB,GAA5B,CADqD,CAAvD;AAKA,MAAIC,iBAAiB,GAAG,EAAxB;;AAEA,MAAIJ,eAAJ,EAAqB;AACnBI,IAAAA,iBAAiB,GAAGF,cAApB;AACD,GAFD,MAEO;AACLE,IAAAA,iBAAiB,GAAGH,eAApB;AACD,GA9CK,CAgDN;AACA;AACA;;;AAOA,QAAM;AAAEI,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBnC,WAAW,CAAEwB,KAAD,KAAmC,EAC1E,GAAGA,KAAK,CAACY;AADiE,GAAnC,CAAD,CAAxC;AAGA,QAAMC,YAAY,GAAGH,KAArB;AACA,QAAMI,gBAAgB,GAAGH,SAAzB;AAEA,MAAII,eAAe,GAAGzC,OAAO,GAAG,KAAH,GAAWC,WAAW,GAAG,KAAH,GAAW,MAA9D;AACA,MAAIyC,aAAa,GAAG1C,OAAO,GAAG,MAAH,GAAYC,WAAW,GAAG,MAAH,GAAY,QAA9D;AACA,MAAI0C,cAAc,GAAG3C,OAAO,GAAG,KAAH,GAAWC,WAAW,GAAG,KAAH,GAAW,OAA7D;AAEA,MAAI2C,YAAY,GAAG,EAAnB;AACA,MAAIC,WAAW,GAAG,EAAlB;;AAEA,MAAI7C,OAAJ,EAAa;AACX4C,IAAAA,YAAY,GAAG,wBAAf;AACAC,IAAAA,WAAW,GAAG,OAAd;AACD,GAHD,MAGO,IAAI5C,WAAJ,EAAiB;AACtB2C,IAAAA,YAAY,GAAG,4BAAf;AACAC,IAAAA,WAAW,GAAG,MAAd;AACD,GAHM,MAGA;AACLD,IAAAA,YAAY,GAAG,4BAAf;AACAC,IAAAA,WAAW,GAAG,QAAd;AACD,GA/EK,CAiFN;AACA;AACA;AACA;;;AAMA,QAAM;AAAEC,IAAAA;AAAF,MAAY5C,WAAW,CAAEwB,KAAD,KAAmC,EAC/D,GAAGA,KAAK,CAACqB;AADsD,GAAnC,CAAD,CAA7B;AAGA,QAAMC,YAAY,GAAGF,KAArB,CA7FM,CA+FN;;AAEA,sBACE;AAAA,eACG,GADH,eAEE,QAAC,SAAD;AAAW,MAAA,aAAa,EAAEvC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,uBAA1B;AAAA,8BACE,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,SAAS,EAAEH,GAFb;AAGE,QAAA,OAAO,EAAE;AAAE6C,UAAAA,EAAE,EAAE,MAAN;AAAcC,UAAAA,EAAE,EAAE;AAAlB,SAHX;AAIE,QAAA,EAAE,EAAE;AAJN;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,GAAG,EAAE1C,iBAFP;AAGE,QAAA,EAAE,EAAE,CAHN;AAIE,QAAA,EAAE,EAAE,CAJN;AAKE,QAAA,KAAK,EAAE;AAAE2C,UAAAA,OAAO,EAAE;AAAX;AALT;AAAA;AAAA;AAAA;AAAA,cARF,eAgBE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,KAAK,EAAE;AAAEA,UAAAA,OAAO,EAAE;AAAX;AAAhC;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,EAAE,EAAE,CAFN;AAGE,QAAA,EAAE,EAAE,CAHN;AAIE,QAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,MAAM,EAAE,QAFH;AAGLC,UAAAA,WAAW,EAAEtD,OAAO,GAAG,MAAH,GAAYC,WAAW,GAAG,MAAH,GAAY,MAHlD;AAILsD,UAAAA,SAAS,EAAE,MAJN;AAKLC,UAAAA,MAAM,EAAE;AALH,SAJT;AAAA,+BAYE,QAAC,aAAD;AAAe,UAAA,cAAc,EAAE/C;AAA/B;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,cAjBF,eAgCE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,KAAK,EAAE;AAAE0C,UAAAA,OAAO,EAAE,KAAX;AAAkBE,UAAAA,MAAM,EAAE;AAA1B;AAA1B;AAAA;AAAA;AAAA;AAAA,cAhCF,eAiCE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAE,CAAlB;AAAqB,QAAA,OAAO,EAAE,CAA9B;AAAA,kBACG3C,QAAQ,CAAC+C,GAAT,CAAa,CAACC,IAAD,EAAYC,CAAZ,kBACZ;AAAA,iCACE,QAAC,IAAD;AAEE,YAAA,GAAG,EAAEA,CAFP;AAGE,YAAA,IAAI,EAAEhD,eAHR;AAIE,YAAA,eAAe,EAAEC,eAJnB;AAKE,YAAA,IAAI,EAAE8C,IALR;AAME,YAAA,UAAU,EAAE7C,UANd;AAOE,YAAA,cAAc,EAAEC,cAPlB;AAQE,YAAA,cAAc,EAAEC,cARlB;AASE,YAAA,YAAY,EAAEM,YAThB;AAUE,YAAA,MAAM,EAAEX,QAAQ,CAACkD,MAVnB;AAWE,YAAA,mBAAmB,EAAEtC,mBAXvB;AAYE,YAAA,kBAAkB,EAAEC,kBAZtB;AAaE,YAAA,WAAW,EAAEC;AAbf,aACOmC,CADP;AAAA;AAAA;AAAA;AAAA;AADF,WAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAjCF,eAuDE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,KAAK,EAAE;AAAER,UAAAA,OAAO,EAAE,KAAX;AAAkBE,UAAAA,MAAM,EAAE;AAA1B;AAA1B;AAAA;AAAA;AAAA;AAAA,cAvDF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eA4DE,QAAC,eAAD;AACE,MAAA,QAAQ,EAAErC,QADZ;AAEE,MAAA,aAAa,EAAEC,aAFjB;AAGE,MAAA,cAAc,EAAEC,cAHlB;AAIE,MAAA,SAAS,EAAEC,eAJb;AAKE,MAAA,WAAW,EAAEC;AALf;AAAA;AAAA;AAAA;AAAA,YA5DF;AAAA,kBADF;AAsED;;GA1LQd,Q;UA+BcJ,W,EAcAA,W,EASuBA,W,EAsBfA,W,EAiCXA,W;;;KA7GXI,Q;AA4LT,OAAO,MAAMuD,OAAO,gBAAGlE,KAAK,CAACmE,IAAN,CAAWxD,QAAX,CAAhB;MAAMuD,O","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport { Scrollbars } from \"react-custom-scrollbars-2\";\r\nimport { Billboard } from \"./Billboard\";\r\nimport { Post } from \"./Post\";\r\nimport { OptionsSlider } from \"./OptionsSlider\";\r\nimport { CommentTemplate } from \"../CommentTemplate\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector } from \"react-redux\";\r\nimport { Paper, Grid, Box } from \"@material-ui/core\";\r\nimport ImagePhotoSizeSelectSmall from \"material-ui/svg-icons/image/photo-size-select-small\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nfunction Profilex({\r\n  OpenModalForm,\r\n  getSliderWidthRef,\r\n  getSliderWidth,\r\n  postData,\r\n  addPostItemsRef,\r\n  onPostsItemload,\r\n  itemheight,\r\n  itemheighthold,\r\n  postbackheight,\r\n  formtype,\r\n  showModalForm,\r\n  CloseModalForm,\r\n  aboutTemplateGo,\r\n  commentTemplateGo,\r\n  itemcroptype,\r\n  itemFinalPostHeight,\r\n  onPostsItemClicked,\r\n  itemCLICKED,\r\n}: any) {\r\n  ///\r\n  ///\r\n  ///TYPES FOR ISLOGGEDIN\r\n  interface RootStateIsLogged {\r\n    IsLoggedReducer: {\r\n      loggedIn: boolean;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///LOGGED IN DATA FROM REDUX\r\n  const { loggedIn } = useSelector((state: RootStateIsLogged) => ({\r\n    ...state.IsLoggedReducer,\r\n  }));\r\n  const loggedInReducer = loggedIn;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///MUI PAPER STYLES FROM REDUX\r\n  const { PaperStyleLight, PaperStyleDark } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.PaperReducerLightnDark,\r\n    })\r\n  );\r\n  var PaperStyleReducer = \"\";\r\n\r\n  if (darkmodeReducer) {\r\n    PaperStyleReducer = PaperStyleDark;\r\n  } else {\r\n    PaperStyleReducer = PaperStyleLight;\r\n  }\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n    };\r\n  }\r\n  const { color, colordark } = useSelector((state: RootStateReducerColor) => ({\r\n    ...state.GlobalReducerColor,\r\n  }));\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n\r\n  var widthProfilePic = matchPc ? \"18%\" : matchTablet ? \"42%\" : \"44vw\";\r\n  var topProfilePic = matchPc ? \"50vh\" : matchTablet ? \"31em\" : \"10.2em\";\r\n  var leftProfilePic = matchPc ? \"1vw\" : matchTablet ? \"3vw\" : \"2.6vw\";\r\n\r\n  var optionsClass = \"\";\r\n  var fontOptions = \"\";\r\n\r\n  if (matchPc) {\r\n    optionsClass = \"profile-optionsImagePc\";\r\n    fontOptions = \"2.7vw\";\r\n  } else if (matchTablet) {\r\n    optionsClass = \"profile-optionsImageTablet\";\r\n    fontOptions = \"5rem\";\r\n  } else {\r\n    optionsClass = \"profile-optionsImageMobile\";\r\n    fontOptions = \"1.9rem\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET LOGGED USER DATA FROM REDUX STORE\r\n  interface RootStateReducerImage {\r\n    UserdataReducer: {\r\n      image: string;\r\n    };\r\n  }\r\n  const { image } = useSelector((state: RootStateReducerImage) => ({\r\n    ...state.UserdataReducer,\r\n  }));\r\n  const imageReducer = image;\r\n\r\n  ///\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <Billboard OpenModalForm={OpenModalForm} />\r\n      <Grid container className=\"dontallowhighlighting\">\r\n        <Grid\r\n          item\r\n          component={Box}\r\n          display={{ xs: \"none\", md: \"block\" }}\r\n          md={3}\r\n        ></Grid>\r\n\r\n        <Grid\r\n          item\r\n          ref={getSliderWidthRef}\r\n          xs={2}\r\n          md={1}\r\n          style={{ padding: \"0px\" }}\r\n        ></Grid>\r\n\r\n        <Grid item xs={3} md={2} style={{ padding: \"0px\" }}></Grid>\r\n        <Grid\r\n          item\r\n          xs={7}\r\n          md={4}\r\n          style={{\r\n            position: \"relative\",\r\n            height: \"19.5vh\",\r\n            paddingLeft: matchPc ? \"20px\" : matchTablet ? \"42px\" : \"24px\",\r\n            marginTop: \"-4px\",\r\n            zIndex: 1,\r\n          }}\r\n        >\r\n          <OptionsSlider getSliderWidth={getSliderWidth} />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} style={{ padding: \"0px\", height: \"20px\" }}></Grid>\r\n        <Masonry columns={2} spacing={0}>\r\n          {postData.map((post: any, i: any) => (\r\n            <div key={i}>\r\n              <Post\r\n                key={i}\r\n                pey={i}\r\n                refy={addPostItemsRef}\r\n                onPostsItemload={onPostsItemload}\r\n                post={post}\r\n                itemheight={itemheight}\r\n                itemheighthold={itemheighthold}\r\n                postbackheight={postbackheight}\r\n                itemcroptype={itemcroptype}\r\n                length={postData.length}\r\n                itemFinalPostHeight={itemFinalPostHeight}\r\n                onPostsItemClicked={onPostsItemClicked}\r\n                itemCLICKED={itemCLICKED}\r\n              />\r\n            </div>\r\n          ))}\r\n        </Masonry>\r\n\r\n        <Grid item xs={12} style={{ padding: \"0px\", height: \"20px\" }}></Grid>\r\n      </Grid>\r\n      <CommentTemplate\r\n        formtype={formtype}\r\n        showModalForm={showModalForm}\r\n        CloseModalForm={CloseModalForm}\r\n        aboutTemp={aboutTemplateGo}\r\n        commentTemp={commentTemplateGo}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Profile = React.memo(Profilex);\r\n"]},"metadata":{},"sourceType":"module"}