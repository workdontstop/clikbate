{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\OptionsSlider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\nimport { useSpring } from \"react-spring\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { UpdateOptionsTop } from \".././GlobalActions\";\nimport { UploadMenu } from \"../upload/UploadMenu\";\nimport { MenuInner } from \"./MenuInner\";\nimport { ImageFilterinner } from \"./ImageFilterinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction OptionsSliderx({\n  getSliderWidth,\n  getSliderWidthNewx,\n  getSliderWidthA,\n  typeTop,\n  sethaltedTop,\n  OpenUploadModal,\n  showModalUpload,\n  typeUpload,\n  cropTOPLEVELScrollRef,\n  refWithimageData,\n  setallowOverflow,\n  itemUploadRef,\n  ApplyImageFilter,\n  addimageFiltersRef,\n  imageFiltersRef,\n  getImageWidth,\n  length,\n  closeUploadModal,\n  cropscrollRef,\n  allowOverflow,\n  itemUploadRefThumb,\n  duplicateItemupload,\n  activeSticker,\n  startSuperSticker,\n  setactiveSticker,\n  seteffectMode,\n  effectMode,\n  setcallfilter,\n  callfilter,\n  regimageholdfilter,\n  setregimageholdfilter,\n  FilterUnderStickerStopFiltering,\n  trapfilters,\n  settrapfilters,\n  sethdfilter,\n  hdfilter,\n  superstickerIndex,\n  superzeroeffect,\n  setfinalImageData,\n  finalImageData,\n  setfinalImageDataSD,\n  finalImageDataSD,\n  setfinalImageDataBASE64,\n  finalImageDataBASE64,\n  setstartTopicCap,\n  setShowModalUpload,\n  setStopBodyScroll,\n  itemUploadRefSD,\n  setsupeFilterLoadFade,\n  setsuperSettings,\n  selectedImage,\n  setselectedImage,\n  setcropimage\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  /// USE DISPATCH\n  const dispatch = useDispatch();\n  var optionsClickType = matchPc ? 1 : 0;\n  const optionsCollectImageRef = useRef(null);\n  const [translate, setTranslate] = useState(0);\n  const [stalestate] = useState(1);\n  const [ActiveSlide, setActiveSlide] = useState(0);\n  const [presentactive, setpresentactive] = useState(0);\n  const [Gotoactive, setGotoactive] = useState(0);\n  const [ShowHideNegativeValue, setShowHideNegativeValue] = useState(\"-\");\n  const [touchPosition, setTouchPosition] = useState(null);\n  const handleTouchMoveTimer = useRef(null);\n  const [transitionFast, settransitionFast] = useState(false);\n  const prevJoltTimer = useRef(null);\n  const nextJoltTimer = useRef(null);\n  const [optionsShow, setoptionsShow] = useState(true);\n  var getSliderWidthNew = getSliderWidth;\n  var xq;\n  xq = matchTablet || matchMobile ? 1 : 2;\n  var marginadd = Math.ceil(window.innerWidth * xq / 100);\n\n  if (typeUpload === 2) {\n    var addedwidth;\n    addedwidth = matchTablet || matchMobile ? 10.6 : 25;\n    getSliderWidthNew = getSliderWidthA + marginadd + addedwidth;\n  } else {\n    getSliderWidthNew = matchPc ? getSliderWidth / 1.5 : matchTablet ? getSliderWidth / 1.02 : getSliderWidth / 0.77;\n  } ///\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n\n\n  const {\n    optinstopshowing\n  } = useSelector(state => ({ ...state.OptionsTopShowReducer\n  }));\n  const optinstopshowingReducer = optinstopshowing; ///\n  ///\n  ///\n  ///OPTIONS SLIDER VARIABLES DISCRIBING ITEMS\n\n  var optionsNameData = typeTop ? [\"SETTINGS\", \"UPLOAD\", \"FILTER\", \"ALBUMS\", \"PLAYLIST\", \"SHOWROOM\"] : [\"FILTER\", \"ALBUMS\", \"PLAYLIST\", \"SHOWROOM\", \"SETTINGS\", \"UPLOAD\"];\n  var UploadOptionsNameData = [\"audio\", \"images\", \"interaction\", \"Continue\"];\n  var UploadFilterNameData = [\"normal\", \"lift\", \"juice\", \"superstar\", \"futurama\", \"tentacion\", \"floyd\", \"nebula\", \"jentle\", \"mint\", \"moonshine\", \"vintage\", \"continue\"]; ///\n  ///\n  ///OPTIONS SLIDER VARIABLES DISCRIBING ITEMS\n\n  const [CropSaved, setCropSaved] = useState(false);\n  const optionsImages = typeUpload === 2 ? [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\"] : typeUpload === 1 ? [\"1\", \"2\", \"3\", \"4\"] : typeUpload === 0 ? typeTop ? [\"5\", \"6\", \"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\"] : [\"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\", \"5\", \"6\"] : [\"1\"]; ///\n  ///\n  ///\n  ///\n  ///CREATE OPTIONS SLIDER ANIMATION WITH  REACT SPRING\n\n  const animationop = useSpring({\n    config: {\n      duration: typeTop ? 100 : 300\n    },\n    opacity: typeTop ? optinstopshowingReducer ? 1 : 0 : optinstopshowingReducer ? 0 : 1,\n    transform: typeTop ? optinstopshowingReducer ? `translateY(0%)` : \"translateY(-100%)\" : optinstopshowingReducer ? `translateY(-100%)` : \"translateY(0%)\"\n  }); ///\n  ///\n  ///\n  ///CREATE OPTIONS SLIDER ANIMATION WITH  REACT SPRING\n\n  const modalanimation = useSpring({\n    config: {\n      mass: 2,\n      tension: 250,\n      friction: 12\n    },\n    transform: `translateX(${ShowHideNegativeValue}${translate}px)`,\n    height: \"auto\",\n    display: \"flex\",\n    width: `auto`,\n    padding: \"0px\",\n    margin: \"auto\",\n    paddingLeft: typeTop ? matchPc ? \"0px\" : matchTablet ? \"22px\" : \"9px\" : \"0px\"\n  }); ///\n  ///\n  ///\n  /// ACTIVATES SLIDER ITEM TO BE VIEWED ON CLICK\n\n  const clickOptions = (i, type, source) => {\n    if (matchMobile && typeUpload === 1) {\n      setTranslate(stalestate + i);\n      setActiveSlide(i);\n    } else {\n      if (source === \"filter2\") {\n        if (ActiveSlide === i) {} else {\n          setTranslate(getSliderWidthNew * 7);\n        }\n\n        setActiveSlide(optionsImages.length - 1);\n      } else if (source === \"filter\") {\n        if (i === 1 || i === 0) {\n          if (ActiveSlide === i) {} else {\n            setTranslate(getSliderWidthNew * 0);\n          }\n\n          setActiveSlide(i);\n        } else {\n          var numberoffilterthumbs = optionsImages.length - 1;\n\n          if (i === numberoffilterthumbs) {\n            setActiveSlide(i);\n          } else {\n            if (i === optionsImages.length) {\n              if (ActiveSlide === i) {} else {\n                setTranslate(translate => 7);\n              }\n\n              setActiveSlide(7);\n            } else {\n              if (i > ActiveSlide) {\n                if (translate + getSliderWidthNew > getSliderWidthNew * 7) {\n                  setActiveSlide(i);\n                } else {\n                  if (ActiveSlide === i) {} else {\n                    setTranslate(translate => translate + getSliderWidthNew);\n                  }\n\n                  setActiveSlide(i);\n                }\n              } else {\n                if (translate - getSliderWidthNew < 0) {\n                  setActiveSlide(i);\n                } else {\n                  if (ActiveSlide === i) {} else {\n                    setTranslate(translate => translate - getSliderWidthNew);\n                  }\n\n                  setActiveSlide(i);\n                }\n              }\n            }\n          }\n        }\n      } else {\n        if (type === 1) {\n          setTranslate(stalestate + i);\n          setActiveSlide(i);\n        } else {\n          setTranslate(getSliderWidthNew * i + 1.5 * i);\n          setActiveSlide(i);\n        }\n\n        var circleIdentify = typeTop ? 0 : 4;\n        var circleIdentify2 = typeTop ? 1 : 5;\n\n        if (ActiveSlide === i && source === \"upload\" && i === circleIdentify2) {//OpenUploadModal(0);\n        } else if (ActiveSlide === i && source === \"upload\" && i === circleIdentify) {\n          setsuperSettings(true);\n        }\n      }\n    }\n  }; ///\n  ///\n  ///\n  ///PUSH OPTIONS SLIDE A LITTLE BIT ON LAST SLIDE ITEM\n\n\n  const TouchJoltOnLastNEXT = () => {\n    setShowHideNegativeValue(\"-\");\n    var i = ActiveSlide;\n    var colorPaddingAllowance = 1.67 + i / 10;\n    var getSliderWidthNewx = getSliderWidthNew / 2;\n\n    if (typeUpload === 1) {\n      setTranslate(0 + getSliderWidthNewx);\n    } else {\n      setTranslate(getSliderWidthNew * i + getSliderWidthNewx);\n    }\n\n    nextJoltTimer.current = setTimeout(function () {\n      if (typeUpload === 1) {\n        setTranslate(0);\n      } else {\n        setTranslate(getSliderWidthNew * 0 + colorPaddingAllowance * 0);\n      }\n\n      setActiveSlide(ActiveSlide => 0);\n    }, 200);\n  }; ///\n  ///\n  ///\n  ///PUSH OPTIONS SLIDE A LITTLE BIT ON FIRST SLIDE ITEM\n\n\n  const TouchJoltOnLastPREV = () => {\n    setShowHideNegativeValue(\"\");\n    var i = ActiveSlide;\n    var colorPaddingAllowance = 1.67 + i / 10;\n    var ix = optionsImages.length - 1;\n    var getSliderWidthNewx = getSliderWidthNew / 2;\n    setTranslate(getSliderWidthNewx);\n    prevJoltTimer.current = setTimeout(function () {\n      setShowHideNegativeValue(\"-\");\n\n      if (typeUpload === 1) {\n        setTranslate(0);\n      } else {\n        setTranslate(getSliderWidthNew * ix + colorPaddingAllowance * ix);\n      }\n\n      setActiveSlide(ActiveSlide => ix);\n    }, 200);\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE  FOR PC\n\n\n  const nextSlidePc = () => {\n    if (typeTop) {\n      closeoptionsslide();\n    } else {\n      var i = ActiveSlide + 1;\n      setShowHideNegativeValue(\"-\"); ///set((state) => (state + 1) % slides.length)\n\n      if (ActiveSlide === optionsImages.length - 1) {\n        settransitionFast(true);\n        setTranslate(0);\n        setActiveSlide(0);\n      } else {\n        settransitionFast(false);\n        setTranslate(stalestate + i);\n        setActiveSlide(i);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE\n\n\n  const nextSlide = () => {\n    var i = ActiveSlide + 1;\n    var colorPaddingAllowance = 1.67 + i / 10; ///set((state) => (state + 1) % slides.length)\n\n    if (ActiveSlide === optionsImages.length - 1) {\n      settransitionFast(true);\n      TouchJoltOnLastNEXT();\n    } else {\n      if (nextJoltTimer.current) {\n        clearTimeout(nextJoltTimer.current);\n      }\n\n      setShowHideNegativeValue(\"-\");\n      settransitionFast(false);\n      setActiveSlide(ActiveSlide => ActiveSlide + 1);\n\n      if (typeUpload === 1) {\n        setTranslate(stalestate + i);\n      } else {\n        setTranslate(getSliderWidthNew * i + colorPaddingAllowance * i);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// PREV SLIDE\n\n\n  const prevSlide = () => {\n    ///set((state) => (state + 1) % slides.length)\n    var i = ActiveSlide - 1;\n    var colorPaddingAllowance = 1.67 + i / 10;\n\n    if (ActiveSlide === 0) {\n      settransitionFast(true);\n\n      if (typeTop) {\n        closeoptionsslide();\n      } else {\n        TouchJoltOnLastPREV();\n      }\n    } else {\n      if (prevJoltTimer.current) {\n        clearTimeout(prevJoltTimer.current);\n      }\n\n      setShowHideNegativeValue(\"-\");\n      settransitionFast(false);\n      setActiveSlide(ActiveSlide => ActiveSlide - 1);\n\n      if (typeUpload === 1) {\n        setTranslate(stalestate - i);\n      } else {\n        setTranslate(getSliderWidthNew * i + colorPaddingAllowance * i);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n\n  const handleTouchStartOptions = e => {\n    ////onMouseDown onMouseMove\n    ////touchDown = e.clientX\n    const touchDown = e.touches[0].clientX;\n    setTouchPosition(touchDown);\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH MOVE EVENT\n\n\n  const handleTouchMoveOptions = e => {\n    if (handleTouchMoveTimer.current) {\n      clearTimeout(handleTouchMoveTimer.current);\n    }\n\n    handleTouchMoveTimer.current = setTimeout(function () {\n      const touchDown = touchPosition;\n\n      if (touchDown === null) {\n        return;\n      } ////currentTouch = e.clientX\n\n\n      const currentTouch = e.touches[0].clientX;\n      const diff = touchDown - currentTouch;\n\n      if (diff > 18) {\n        nextSlide();\n      } else if (diff < -18) {\n        prevSlide();\n      } else {}\n\n      setTouchPosition(null);\n      return false;\n    }, 50);\n    return false;\n  };\n\n  const closeoptionsslide = () => {\n    sethaltedTop(false);\n    dispatch(UpdateOptionsTop(false));\n  };\n\n  useEffect(() => {\n    if (typeUpload === 1) {\n      setActiveSlide(1);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: typeUpload === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(UploadMenu, {\n        selectedImage: selectedImage,\n        setselectedImage: setselectedImage,\n        setShowModalUpload: setShowModalUpload,\n        setStopBodyScroll: setStopBodyScroll,\n        allowOverflow: allowOverflow,\n        cropscrollRef: cropscrollRef,\n        optionsShow: optionsShow,\n        optinstopshowingReducer: optinstopshowingReducer,\n        typeTop: false,\n        closeoptionsslide: closeoptionsslide,\n        animationop: animationop,\n        optionsCollectImageRef: optionsCollectImageRef,\n        handleTouchStartOptions: handleTouchStartOptions,\n        handleTouchMoveOptions: handleTouchMoveOptions,\n        modalanimation: modalanimation,\n        nextSlidePc: nextSlidePc,\n        optionsImages: optionsImages,\n        ActiveSlide: ActiveSlide,\n        optionsNameData: UploadOptionsNameData,\n        clickOptions: clickOptions,\n        optionsClickType: optionsClickType,\n        getSliderWidthNew: getSliderWidthNew,\n        cropTOPLEVELScrollRef: cropTOPLEVELScrollRef,\n        refWithimageData: refWithimageData,\n        CropSaved: CropSaved,\n        setCropSaved: setCropSaved,\n        setallowOverflow: setallowOverflow,\n        closeUploadModal: closeUploadModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true) : typeUpload === 0 ? /*#__PURE__*/_jsxDEV(MenuInner, {\n      selectedImage: selectedImage,\n      setselectedImage: setselectedImage,\n      setcropimage: setcropimage,\n      OpenUploadModal: OpenUploadModal,\n      optionsShow: optionsShow,\n      optinstopshowingReducer: optinstopshowingReducer,\n      typeTop: typeTop,\n      closeoptionsslide: closeoptionsslide,\n      animationop: animationop,\n      optionsCollectImageRef: optionsCollectImageRef,\n      handleTouchStartOptions: handleTouchStartOptions,\n      handleTouchMoveOptions: handleTouchMoveOptions,\n      modalanimation: modalanimation,\n      nextSlidePc: nextSlidePc,\n      optionsImages: optionsImages,\n      ActiveSlide: ActiveSlide,\n      optionsNameData: optionsNameData,\n      clickOptions: clickOptions,\n      optionsClickType: optionsClickType,\n      getSliderWidthNew: getSliderWidthNew\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ImageFilterinner, {\n      setstartTopicCap: setstartTopicCap,\n      finalImageData: finalImageData,\n      setfinalImageData: setfinalImageData,\n      finalImageDataSD: finalImageDataSD,\n      setfinalImageDataSD: setfinalImageDataSD,\n      finalImageDataBASE64: finalImageDataBASE64,\n      setfinalImageDataBASE64: setfinalImageDataBASE64,\n      superzeroeffect: superzeroeffect,\n      superstickerIndex: superstickerIndex,\n      sethdfilter: sethdfilter,\n      hdfilter: hdfilter,\n      settrapfilters: settrapfilters,\n      trapfilters: trapfilters,\n      FilterUnderStickerStopFiltering: FilterUnderStickerStopFiltering,\n      regimageholdfilter: regimageholdfilter,\n      setregimageholdfilter: setregimageholdfilter,\n      setcallfilter: setcallfilter,\n      callfilter: callfilter,\n      seteffectMode: seteffectMode,\n      effectMode: effectMode,\n      setactiveSticker: setactiveSticker,\n      activeSticker: activeSticker,\n      startSuperSticker: startSuperSticker,\n      duplicateItemupload: duplicateItemupload,\n      itemUploadRefThumb: itemUploadRefThumb,\n      selectedImage: selectedImage,\n      length: length,\n      ActiveSlide: ActiveSlide,\n      getImageWidth: getImageWidth,\n      imageFiltersRef: imageFiltersRef,\n      getSliderWidthNew: getSliderWidthA,\n      optionsShow: optionsShow,\n      optinstopshowingReducer: optinstopshowingReducer,\n      typeTop: typeTop,\n      itemUploadRef: itemUploadRef,\n      closeoptionsslide: closeoptionsslide,\n      animationop: animationop,\n      optionsCollectImageRef: optionsCollectImageRef,\n      handleTouchStartOptions: handleTouchStartOptions,\n      handleTouchMoveOptions: handleTouchMoveOptions,\n      modalanimation: modalanimation,\n      nextSlidePc: nextSlidePc,\n      optionsImages: optionsImages,\n      optionsNameData: UploadFilterNameData,\n      clickOptions: clickOptions,\n      optionsClickType: optionsClickType,\n      itemUploadRefSD: itemUploadRefSD,\n      setsupeFilterLoadFade: setsupeFilterLoadFade\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(OptionsSliderx, \"maN5ugVdkaj/D3Bzd9ZUfcEu08k=\", false, function () {\n  return [useDispatch, useSelector, useSpring, useSpring];\n});\n\n_c = OptionsSliderx;\nexport const OptionsSlider = /*#__PURE__*/React.memo(OptionsSliderx);\n_c2 = OptionsSlider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OptionsSliderx\");\n$RefreshReg$(_c2, \"OptionsSlider\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/OptionsSlider.tsx"],"names":["React","useRef","useState","useEffect","matchPc","matchTablet","matchMobile","useSpring","useSelector","useDispatch","UpdateOptionsTop","UploadMenu","MenuInner","ImageFilterinner","OptionsSliderx","getSliderWidth","getSliderWidthNewx","getSliderWidthA","typeTop","sethaltedTop","OpenUploadModal","showModalUpload","typeUpload","cropTOPLEVELScrollRef","refWithimageData","setallowOverflow","itemUploadRef","ApplyImageFilter","addimageFiltersRef","imageFiltersRef","getImageWidth","length","closeUploadModal","cropscrollRef","allowOverflow","itemUploadRefThumb","duplicateItemupload","activeSticker","startSuperSticker","setactiveSticker","seteffectMode","effectMode","setcallfilter","callfilter","regimageholdfilter","setregimageholdfilter","FilterUnderStickerStopFiltering","trapfilters","settrapfilters","sethdfilter","hdfilter","superstickerIndex","superzeroeffect","setfinalImageData","finalImageData","setfinalImageDataSD","finalImageDataSD","setfinalImageDataBASE64","finalImageDataBASE64","setstartTopicCap","setShowModalUpload","setStopBodyScroll","itemUploadRefSD","setsupeFilterLoadFade","setsuperSettings","selectedImage","setselectedImage","setcropimage","dispatch","optionsClickType","optionsCollectImageRef","translate","setTranslate","stalestate","ActiveSlide","setActiveSlide","presentactive","setpresentactive","Gotoactive","setGotoactive","ShowHideNegativeValue","setShowHideNegativeValue","touchPosition","setTouchPosition","handleTouchMoveTimer","transitionFast","settransitionFast","prevJoltTimer","nextJoltTimer","optionsShow","setoptionsShow","getSliderWidthNew","xq","marginadd","Math","ceil","window","innerWidth","addedwidth","optinstopshowing","state","OptionsTopShowReducer","optinstopshowingReducer","optionsNameData","UploadOptionsNameData","UploadFilterNameData","CropSaved","setCropSaved","optionsImages","animationop","config","duration","opacity","transform","modalanimation","mass","tension","friction","height","display","width","padding","margin","paddingLeft","clickOptions","i","type","source","numberoffilterthumbs","circleIdentify","circleIdentify2","TouchJoltOnLastNEXT","colorPaddingAllowance","current","setTimeout","TouchJoltOnLastPREV","ix","nextSlidePc","closeoptionsslide","nextSlide","clearTimeout","prevSlide","handleTouchStartOptions","e","touchDown","touches","clientX","handleTouchMoveOptions","currentTouch","diff","OptionsSlider","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useCallback, useEffect } from \"react\";\r\n\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { UpdateOptionsTop } from \".././GlobalActions\";\r\nimport { UploadMenu } from \"../upload/UploadMenu\";\r\nimport { MenuInner } from \"./MenuInner\";\r\nimport { ImageFilterinner } from \"./ImageFilterinner\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\r\n\r\n\r\nfunction OptionsSliderx({\r\n  getSliderWidth,\r\n  getSliderWidthNewx,\r\n  getSliderWidthA,\r\n  typeTop,\r\n  sethaltedTop,\r\n  OpenUploadModal,\r\n  showModalUpload,\r\n  typeUpload,\r\n  cropTOPLEVELScrollRef,\r\n  refWithimageData,\r\n  setallowOverflow,\r\n  itemUploadRef,\r\n  ApplyImageFilter,\r\n  addimageFiltersRef,\r\n  imageFiltersRef,\r\n  getImageWidth,\r\n  length,\r\n  closeUploadModal,\r\n  cropscrollRef,\r\n  allowOverflow,\r\n  itemUploadRefThumb,\r\n  duplicateItemupload,\r\n  activeSticker,\r\n  startSuperSticker,\r\n  setactiveSticker,\r\n  seteffectMode,\r\n  effectMode,\r\n  setcallfilter,\r\n  callfilter,\r\n  regimageholdfilter,\r\n  setregimageholdfilter,\r\n  FilterUnderStickerStopFiltering,\r\n  trapfilters,\r\n  settrapfilters,\r\n  sethdfilter,\r\n  hdfilter,\r\n  superstickerIndex,\r\n  superzeroeffect,\r\n  setfinalImageData,\r\n  finalImageData,\r\n  setfinalImageDataSD,\r\n  finalImageDataSD,\r\n  setfinalImageDataBASE64,\r\n  finalImageDataBASE64,\r\n  setstartTopicCap,\r\n  setShowModalUpload,\r\n  setStopBodyScroll,\r\n  itemUploadRefSD,\r\n  setsupeFilterLoadFade,\r\n  setsuperSettings,\r\n  selectedImage,\r\n  setselectedImage,\r\n  setcropimage\r\n}: any) {\r\n  ///\r\n  ///\r\n  ///\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// USE DISPATCH\r\n  const dispatch = useDispatch();\r\n\r\n  var optionsClickType: number = matchPc ? 1 : 0;\r\n\r\n  const optionsCollectImageRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [translate, setTranslate] = useState(0);\r\n  const [stalestate] = useState(1);\r\n\r\n  const [ActiveSlide, setActiveSlide] = useState(0);\r\n\r\n  const [presentactive, setpresentactive] = useState(0);\r\n\r\n  const [Gotoactive, setGotoactive] = useState(0);\r\n\r\n  const [ShowHideNegativeValue, setShowHideNegativeValue] = useState(\"-\");\r\n\r\n  const [touchPosition, setTouchPosition] = useState(null);\r\n  const handleTouchMoveTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const [transitionFast, settransitionFast] = useState<boolean>(false);\r\n\r\n  const prevJoltTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const nextJoltTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const [optionsShow, setoptionsShow] = useState<boolean>(true);\r\n\r\n  var getSliderWidthNew: number = getSliderWidth;\r\n\r\n  var xq;\r\n  xq = matchTablet || matchMobile ? 1 : 2;\r\n  var marginadd = Math.ceil((window.innerWidth * xq) / 100);\r\n\r\n  if (typeUpload === 2) {\r\n    var addedwidth;\r\n    addedwidth = matchTablet || matchMobile ? 10.6 : 25;\r\n    getSliderWidthNew = getSliderWidthA + marginadd + addedwidth;\r\n  } else {\r\n    getSliderWidthNew = matchPc\r\n      ? getSliderWidth / 1.5\r\n      : matchTablet\r\n        ? getSliderWidth / 1.02\r\n        : getSliderWidth / 0.77;\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootoptinstopshowingReducer {\r\n    OptionsTopShowReducer: {\r\n      optinstopshowing: boolean;\r\n    };\r\n  }\r\n  const { optinstopshowing } = useSelector(\r\n    (state: RootoptinstopshowingReducer) => ({\r\n      ...state.OptionsTopShowReducer,\r\n    })\r\n  );\r\n  const optinstopshowingReducer = optinstopshowing;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///OPTIONS SLIDER VARIABLES DISCRIBING ITEMS\r\n  var optionsNameData = typeTop\r\n    ? [\"SETTINGS\", \"UPLOAD\", \"FILTER\", \"ALBUMS\", \"PLAYLIST\", \"SHOWROOM\"]\r\n    : [\"FILTER\", \"ALBUMS\", \"PLAYLIST\", \"SHOWROOM\", \"SETTINGS\", \"UPLOAD\"];\r\n\r\n  var UploadOptionsNameData = [\"audio\", \"images\", \"interaction\", \"Continue\"];\r\n\r\n  var UploadFilterNameData = [\r\n    \"normal\",\r\n    \"lift\",\r\n    \"juice\",\r\n    \"superstar\",\r\n    \"futurama\",\r\n    \"tentacion\",\r\n    \"floyd\",\r\n    \"nebula\",\r\n    \"jentle\",\r\n    \"mint\",\r\n    \"moonshine\",\r\n    \"vintage\",\r\n    \"continue\",\r\n  ];\r\n\r\n  ///\r\n  ///\r\n  ///OPTIONS SLIDER VARIABLES DISCRIBING ITEMS\r\n  const [CropSaved, setCropSaved] = useState(false);\r\n\r\n  const optionsImages =\r\n    typeUpload === 2\r\n      ? [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\"]\r\n      : typeUpload === 1\r\n        ? [\"1\", \"2\", \"3\", \"4\"]\r\n        : typeUpload === 0\r\n          ? typeTop\r\n            ? [\"5\", \"6\", \"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\"]\r\n            : [\"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\", \"5\", \"6\"]\r\n          : [\"1\"];\r\n\r\n  ///\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE OPTIONS SLIDER ANIMATION WITH  REACT SPRING\r\n\r\n  const animationop = useSpring({\r\n    config: {\r\n      duration: typeTop ? 100 : 300,\r\n    },\r\n    opacity: typeTop\r\n      ? optinstopshowingReducer\r\n        ? 1\r\n        : 0\r\n      : optinstopshowingReducer\r\n        ? 0\r\n        : 1,\r\n    transform: typeTop\r\n      ? optinstopshowingReducer\r\n        ? `translateY(0%)`\r\n        : \"translateY(-100%)\"\r\n      : optinstopshowingReducer\r\n        ? `translateY(-100%)`\r\n        : \"translateY(0%)\",\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE OPTIONS SLIDER ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      mass: 2,\r\n      tension: 250,\r\n      friction: 12,\r\n    },\r\n    transform: `translateX(${ShowHideNegativeValue}${translate}px)`,\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    width: `auto`,\r\n    padding: \"0px\",\r\n    margin: \"auto\",\r\n    paddingLeft: typeTop\r\n      ? matchPc\r\n        ? \"0px\"\r\n        : matchTablet\r\n          ? \"22px\"\r\n          : \"9px\"\r\n      : \"0px\",\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// ACTIVATES SLIDER ITEM TO BE VIEWED ON CLICK\r\n  const clickOptions = (i: number, type: number, source: string) => {\r\n    if (matchMobile && typeUpload === 1) {\r\n      setTranslate(stalestate + i);\r\n      setActiveSlide(i);\r\n    } else {\r\n      if (source === \"filter2\") {\r\n        if (ActiveSlide === i) {\r\n        } else {\r\n          setTranslate(getSliderWidthNew * 7);\r\n        }\r\n        setActiveSlide(optionsImages.length - 1);\r\n      } else if (source === \"filter\") {\r\n        if (i === 1 || i === 0) {\r\n          if (ActiveSlide === i) {\r\n          } else {\r\n            setTranslate(getSliderWidthNew * 0);\r\n          }\r\n          setActiveSlide(i);\r\n        } else {\r\n          var numberoffilterthumbs = optionsImages.length - 1;\r\n          if (i === numberoffilterthumbs) {\r\n            setActiveSlide(i);\r\n          } else {\r\n            if (i === optionsImages.length) {\r\n              if (ActiveSlide === i) {\r\n              } else {\r\n                setTranslate((translate) => 7);\r\n              }\r\n\r\n              setActiveSlide(7);\r\n            } else {\r\n              if (i > ActiveSlide) {\r\n                if (translate + getSliderWidthNew > getSliderWidthNew * 7) {\r\n                  setActiveSlide(i);\r\n                } else {\r\n                  if (ActiveSlide === i) {\r\n                  } else {\r\n                    setTranslate((translate) => translate + getSliderWidthNew);\r\n                  }\r\n\r\n                  setActiveSlide(i);\r\n                }\r\n              } else {\r\n                if (translate - getSliderWidthNew < 0) {\r\n                  setActiveSlide(i);\r\n                } else {\r\n                  if (ActiveSlide === i) {\r\n                  } else {\r\n                    setTranslate((translate) => translate - getSliderWidthNew);\r\n                  }\r\n\r\n                  setActiveSlide(i);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (type === 1) {\r\n          setTranslate(stalestate + i);\r\n          setActiveSlide(i);\r\n        } else {\r\n          setTranslate(getSliderWidthNew * i + 1.5 * i);\r\n          setActiveSlide(i);\r\n        }\r\n\r\n        var circleIdentify = typeTop ? 0 : 4;\r\n        var circleIdentify2 = typeTop ? 1 : 5;\r\n\r\n        if (ActiveSlide === i && source === \"upload\" && i === circleIdentify2) {\r\n\r\n          //OpenUploadModal(0);\r\n\r\n        } else if (\r\n          ActiveSlide === i &&\r\n          source === \"upload\" &&\r\n          i === circleIdentify\r\n        ) {\r\n          setsuperSettings(true);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///PUSH OPTIONS SLIDE A LITTLE BIT ON LAST SLIDE ITEM\r\n  const TouchJoltOnLastNEXT = () => {\r\n    setShowHideNegativeValue(\"-\");\r\n    var i = ActiveSlide;\r\n    var colorPaddingAllowance = 1.67 + i / 10;\r\n    var getSliderWidthNewx = getSliderWidthNew / 2;\r\n\r\n    if (typeUpload === 1) {\r\n      setTranslate(0 + getSliderWidthNewx);\r\n    } else {\r\n      setTranslate(getSliderWidthNew * i + getSliderWidthNewx);\r\n    }\r\n    nextJoltTimer.current = setTimeout(function () {\r\n      if (typeUpload === 1) {\r\n        setTranslate(0);\r\n      } else {\r\n        setTranslate(getSliderWidthNew * 0 + colorPaddingAllowance * 0);\r\n      }\r\n      setActiveSlide((ActiveSlide) => 0);\r\n    }, 200);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///PUSH OPTIONS SLIDE A LITTLE BIT ON FIRST SLIDE ITEM\r\n  const TouchJoltOnLastPREV = () => {\r\n    setShowHideNegativeValue(\"\");\r\n    var i = ActiveSlide;\r\n    var colorPaddingAllowance = 1.67 + i / 10;\r\n    var ix = optionsImages.length - 1;\r\n    var getSliderWidthNewx = getSliderWidthNew / 2;\r\n    setTranslate(getSliderWidthNewx);\r\n    prevJoltTimer.current = setTimeout(function () {\r\n      setShowHideNegativeValue(\"-\");\r\n      if (typeUpload === 1) {\r\n        setTranslate(0);\r\n      } else {\r\n        setTranslate(getSliderWidthNew * ix + colorPaddingAllowance * ix);\r\n      }\r\n      setActiveSlide((ActiveSlide) => ix);\r\n    }, 200);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE  FOR PC\r\n  const nextSlidePc = () => {\r\n    if (typeTop) {\r\n      closeoptionsslide();\r\n    } else {\r\n      var i = ActiveSlide + 1;\r\n      setShowHideNegativeValue(\"-\");\r\n      ///set((state) => (state + 1) % slides.length)\r\n      if (ActiveSlide === optionsImages.length - 1) {\r\n        settransitionFast(true);\r\n        setTranslate(0);\r\n        setActiveSlide(0);\r\n      } else {\r\n        settransitionFast(false);\r\n        setTranslate(stalestate + i);\r\n        setActiveSlide(i);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const nextSlide = () => {\r\n    var i = ActiveSlide + 1;\r\n    var colorPaddingAllowance = 1.67 + i / 10;\r\n    ///set((state) => (state + 1) % slides.length)\r\n    if (ActiveSlide === optionsImages.length - 1) {\r\n      settransitionFast(true);\r\n      TouchJoltOnLastNEXT();\r\n    } else {\r\n      if (nextJoltTimer.current) {\r\n        clearTimeout(nextJoltTimer.current);\r\n      }\r\n      setShowHideNegativeValue(\"-\");\r\n      settransitionFast(false);\r\n      setActiveSlide((ActiveSlide) => ActiveSlide + 1);\r\n      if (typeUpload === 1) {\r\n        setTranslate(stalestate + i);\r\n      } else {\r\n        setTranslate(getSliderWidthNew * i + colorPaddingAllowance * i);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PREV SLIDE\r\n  const prevSlide = () => {\r\n    ///set((state) => (state + 1) % slides.length)\r\n    var i = ActiveSlide - 1;\r\n    var colorPaddingAllowance = 1.67 + i / 10;\r\n    if (ActiveSlide === 0) {\r\n      settransitionFast(true);\r\n      if (typeTop) {\r\n        closeoptionsslide();\r\n      } else {\r\n        TouchJoltOnLastPREV();\r\n      }\r\n    } else {\r\n      if (prevJoltTimer.current) {\r\n        clearTimeout(prevJoltTimer.current);\r\n      }\r\n      setShowHideNegativeValue(\"-\");\r\n      settransitionFast(false);\r\n      setActiveSlide((ActiveSlide) => ActiveSlide - 1);\r\n      if (typeUpload === 1) {\r\n        setTranslate(stalestate - i);\r\n      } else {\r\n        setTranslate(getSliderWidthNew * i + colorPaddingAllowance * i);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const handleTouchStartOptions = (e: any) => {\r\n    ////onMouseDown onMouseMove\r\n    ////touchDown = e.clientX\r\n    const touchDown = e.touches[0].clientX;\r\n    setTouchPosition(touchDown);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH MOVE EVENT\r\n  const handleTouchMoveOptions = (e: any) => {\r\n    if (handleTouchMoveTimer.current) {\r\n      clearTimeout(handleTouchMoveTimer.current);\r\n    }\r\n    handleTouchMoveTimer.current = setTimeout(function () {\r\n      const touchDown = touchPosition;\r\n\r\n      if (touchDown === null) {\r\n        return;\r\n      }\r\n      ////currentTouch = e.clientX\r\n      const currentTouch = e.touches[0].clientX;\r\n      const diff = touchDown - currentTouch;\r\n\r\n      if (diff > 18) {\r\n        nextSlide();\r\n      } else if (diff < -18) {\r\n        prevSlide();\r\n      } else {\r\n      }\r\n\r\n      setTouchPosition(null);\r\n      return false;\r\n    }, 50);\r\n\r\n    return false;\r\n  };\r\n\r\n  const closeoptionsslide = () => {\r\n    sethaltedTop(false);\r\n    dispatch(UpdateOptionsTop(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (typeUpload === 1) {\r\n      setActiveSlide(1);\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n      {typeUpload === 1 ? (\r\n        <>\r\n          <UploadMenu\r\n            selectedImage={selectedImage}\r\n            setselectedImage={setselectedImage}\r\n            setShowModalUpload={setShowModalUpload}\r\n            setStopBodyScroll={setStopBodyScroll}\r\n            allowOverflow={allowOverflow}\r\n            cropscrollRef={cropscrollRef}\r\n            optionsShow={optionsShow}\r\n            optinstopshowingReducer={optinstopshowingReducer}\r\n            typeTop={false}\r\n            closeoptionsslide={closeoptionsslide}\r\n            animationop={animationop}\r\n            optionsCollectImageRef={optionsCollectImageRef}\r\n            handleTouchStartOptions={handleTouchStartOptions}\r\n            handleTouchMoveOptions={handleTouchMoveOptions}\r\n            modalanimation={modalanimation}\r\n            nextSlidePc={nextSlidePc}\r\n            optionsImages={optionsImages}\r\n            ActiveSlide={ActiveSlide}\r\n            optionsNameData={UploadOptionsNameData}\r\n            clickOptions={clickOptions}\r\n            optionsClickType={optionsClickType}\r\n            getSliderWidthNew={getSliderWidthNew}\r\n            cropTOPLEVELScrollRef={cropTOPLEVELScrollRef}\r\n            refWithimageData={refWithimageData}\r\n            CropSaved={CropSaved}\r\n            setCropSaved={setCropSaved}\r\n            setallowOverflow={setallowOverflow}\r\n            closeUploadModal={closeUploadModal}\r\n          />{\" \"}\r\n        </>\r\n      ) : typeUpload === 0 ? (\r\n        <MenuInner\r\n          selectedImage={selectedImage}\r\n          setselectedImage={setselectedImage}\r\n          setcropimage={setcropimage}\r\n          OpenUploadModal={OpenUploadModal}\r\n          optionsShow={optionsShow}\r\n          optinstopshowingReducer={optinstopshowingReducer}\r\n          typeTop={typeTop}\r\n          closeoptionsslide={closeoptionsslide}\r\n          animationop={animationop}\r\n          optionsCollectImageRef={optionsCollectImageRef}\r\n          handleTouchStartOptions={handleTouchStartOptions}\r\n          handleTouchMoveOptions={handleTouchMoveOptions}\r\n          modalanimation={modalanimation}\r\n          nextSlidePc={nextSlidePc}\r\n          optionsImages={optionsImages}\r\n          ActiveSlide={ActiveSlide}\r\n          optionsNameData={optionsNameData}\r\n          clickOptions={clickOptions}\r\n          optionsClickType={optionsClickType}\r\n          getSliderWidthNew={getSliderWidthNew}\r\n        />\r\n      ) : (\r\n        <ImageFilterinner\r\n          setstartTopicCap={setstartTopicCap}\r\n          finalImageData={finalImageData}\r\n          setfinalImageData={setfinalImageData}\r\n          finalImageDataSD={finalImageDataSD}\r\n          setfinalImageDataSD={setfinalImageDataSD}\r\n          finalImageDataBASE64={finalImageDataBASE64}\r\n          setfinalImageDataBASE64={setfinalImageDataBASE64}\r\n          superzeroeffect={superzeroeffect}\r\n          superstickerIndex={superstickerIndex}\r\n          sethdfilter={sethdfilter}\r\n          hdfilter={hdfilter}\r\n          settrapfilters={settrapfilters}\r\n          trapfilters={trapfilters}\r\n          FilterUnderStickerStopFiltering={FilterUnderStickerStopFiltering}\r\n          regimageholdfilter={regimageholdfilter}\r\n          setregimageholdfilter={setregimageholdfilter}\r\n          setcallfilter={setcallfilter}\r\n          callfilter={callfilter}\r\n          seteffectMode={seteffectMode}\r\n          effectMode={effectMode}\r\n          setactiveSticker={setactiveSticker}\r\n          activeSticker={activeSticker}\r\n          startSuperSticker={startSuperSticker}\r\n          duplicateItemupload={duplicateItemupload}\r\n          itemUploadRefThumb={itemUploadRefThumb}\r\n          selectedImage={selectedImage}\r\n          length={length}\r\n          ActiveSlide={ActiveSlide}\r\n          getImageWidth={getImageWidth}\r\n          imageFiltersRef={imageFiltersRef}\r\n          getSliderWidthNew={getSliderWidthA}\r\n          optionsShow={optionsShow}\r\n          optinstopshowingReducer={optinstopshowingReducer}\r\n          typeTop={typeTop}\r\n          itemUploadRef={itemUploadRef}\r\n          closeoptionsslide={closeoptionsslide}\r\n          animationop={animationop}\r\n          optionsCollectImageRef={optionsCollectImageRef}\r\n          handleTouchStartOptions={handleTouchStartOptions}\r\n          handleTouchMoveOptions={handleTouchMoveOptions}\r\n          modalanimation={modalanimation}\r\n          nextSlidePc={nextSlidePc}\r\n          optionsImages={optionsImages}\r\n          optionsNameData={UploadFilterNameData}\r\n          clickOptions={clickOptions}\r\n          optionsClickType={optionsClickType}\r\n          itemUploadRefSD={itemUploadRefSD}\r\n          setsupeFilterLoadFade={setsupeFilterLoadFade}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const OptionsSlider = React.memo(OptionsSliderx);\r\n"]},"metadata":{},"sourceType":"module"}