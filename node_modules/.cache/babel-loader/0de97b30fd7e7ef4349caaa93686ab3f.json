{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\Menu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Menux({\n  paperPostScrollRef\n}) {\n  _s();\n\n  const [shownav, setShownav] = useState(true); ///\n  ///\n  ///\n  ///\n\n  const jayme = useCallback(() => {\n    alert(paperPostScrollRef.current.scrollTop);\n\n    if (paperPostScrollRef.current.scrollTop > 100) {\n      setShownav(true);\n    } else {\n      setShownav(false);\n    }\n  }, [paperPostScrollRef.current]);\n  useEffect(() => {\n    paperPostScrollRef.current.addEventListener(\"scroll\", jayme);\n    return () => {\n      paperPostScrollRef.current.removeEventListener(\"scroll\", jayme);\n    };\n  }, [jayme]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `nav  ${shownav && \"navblack\"} `,\n    style: {\n      top: \"0vh\",\n      position: \"fixed\",\n      width: \"100%\",\n      zIndex: 9\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"superstarZ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Menux, \"Tj2j3ycDgJJjVWWFw/CYO9EVrO0=\");\n\n_c = Menux;\nexport const Menu = /*#__PURE__*/React.memo(Menux);\n_c2 = Menu;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Menux\");\n$RefreshReg$(_c2, \"Menu\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/Menu.tsx"],"names":["React","useState","useEffect","useCallback","Menux","paperPostScrollRef","shownav","setShownav","jayme","alert","current","scrollTop","addEventListener","removeEventListener","top","position","width","zIndex","Menu","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,WAA7C,QAAgE,OAAhE;;;AAOA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA4C;AAAA;;AAC1C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAU,IAAV,CAAtC,CAD0C,CAG1C;AACA;AACA;AACA;;AACA,QAAMO,KAAK,GAAGL,WAAW,CAAC,MAAM;AAC9BM,IAAAA,KAAK,CAACJ,kBAAkB,CAACK,OAAnB,CAA2BC,SAA5B,CAAL;;AACA,QAAIN,kBAAkB,CAACK,OAAnB,CAA2BC,SAA3B,GAAuC,GAA3C,EAAgD;AAC9CJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAPwB,EAOtB,CAACF,kBAAkB,CAACK,OAApB,CAPsB,CAAzB;AASAR,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,kBAAkB,CAACK,OAAnB,CAA2BE,gBAA3B,CAA4C,QAA5C,EAAsDJ,KAAtD;AACA,WAAO,MAAM;AACXH,MAAAA,kBAAkB,CAACK,OAAnB,CAA2BG,mBAA3B,CAA+C,QAA/C,EAAyDL,KAAzD;AACD,KAFD;AAGD,GALQ,EAKN,CAACA,KAAD,CALM,CAAT;AAOA,sBACE;AACE,IAAA,SAAS,EAAG,QAAOF,OAAO,IAAI,UAAW,GAD3C;AAEE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,GAAG,EAAE,KAAP;AAAcC,MAAAA,QAAQ,EAAE,OAAxB;AAAiCC,MAAAA,KAAK,EAAE,MAAxC;AAAgDC,MAAAA,MAAM,EAAE;AAAxD,KAFT;AAAA,2BAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA/BQb,K;;KAAAA,K;AAiCT,OAAO,MAAMc,IAAI,gBAAGlB,KAAK,CAACmB,IAAN,CAAWf,KAAX,CAAb;MAAMc,I","sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\n\r\nfunction Menux({ paperPostScrollRef }: any) {\r\n  const [shownav, setShownav] = useState<boolean>(true);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n  const jayme = useCallback(() => {\r\n    alert(paperPostScrollRef.current.scrollTop);\r\n    if (paperPostScrollRef.current.scrollTop > 100) {\r\n      setShownav(true);\r\n    } else {\r\n      setShownav(false);\r\n    }\r\n  }, [paperPostScrollRef.current]);\r\n\r\n  useEffect(() => {\r\n    paperPostScrollRef.current.addEventListener(\"scroll\", jayme);\r\n    return () => {\r\n      paperPostScrollRef.current.removeEventListener(\"scroll\", jayme);\r\n    };\r\n  }, [jayme]);\r\n\r\n  return (\r\n    <div\r\n      className={`nav  ${shownav && \"navblack\"} `}\r\n      style={{ top: \"0vh\", position: \"fixed\", width: \"100%\", zIndex: 9 }}\r\n    >\r\n      <h1>superstarZ</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const Menu = React.memo(Menux);\r\n"]},"metadata":{},"sourceType":"module"}