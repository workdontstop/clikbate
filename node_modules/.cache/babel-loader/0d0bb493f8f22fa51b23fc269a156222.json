{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\ModalLog.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSpring } from \"react-spring\";\nimport \"./ModalLog.css\";\nimport Axios from \"axios\";\nimport { MobileModalLog } from \"./MobileModalLog\";\nimport { useTheme, useMediaQuery } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nAxios.defaults.withCredentials = true;\n\nfunction ModalLogx({\n  screenHeight,\n  CloseModalForm,\n  showModalForm,\n  PaperStyle,\n  signupstyle,\n  loginstyle,\n  darkmode\n}) {\n  _s();\n\n  var usetheme = useTheme();\n  var matchPc = useMediaQuery(usetheme.breakpoints.up(\"md\"));\n  var matchTablet = useMediaQuery(usetheme.breakpoints.up(\"sm\")); ///\n  ///\n  ///\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n\n  const modalanimation = useSpring({\n    config: {\n      duration: 400\n    },\n    opacity: showModalForm ? 1 : 0.9,\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`\n  });\n  const modalanimationTwo = useSpring({\n    config: {\n      duration: 350\n    },\n    opacity: showModalForm ? 1 : 0.9,\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`\n  });\n  const DialogeData = {\n    darkmode: darkmode,\n    PaperStyle: PaperStyle,\n    loginstyle: loginstyle,\n    signupstyle: signupstyle,\n    showModalForm: showModalForm,\n    modalanimation: modalanimation,\n    modalanimationTwo: modalanimationTwo,\n    screenHeight: screenHeight,\n    CloseModalForm: CloseModalForm\n  };\n  const DialogeDataMobile = {\n    darkmode: darkmode,\n    PaperStyle: PaperStyle,\n    formtype: formtype,\n    loginstyle: loginstyle,\n    signupstyle: signupstyle,\n    showModalForm: showModalForm,\n    modalanimation: modalanimation,\n    screenHeight: screenHeight,\n    CloseModalForm: CloseModalForm\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModalForm ? matchPc ? null : matchTablet ? /*#__PURE__*/_jsxDEV(MobileModalLog, { ...DialogeDataMobile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(MobileModalLog, { ...DialogeDataMobile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(ModalLogx, \"7h3FH6dSgJciRc05Cgtz1dPSRpA=\", false, function () {\n  return [useTheme, useMediaQuery, useMediaQuery, useSpring, useSpring];\n});\n\n_c = ModalLogx;\nexport const ModalLog = /*#__PURE__*/React.memo(ModalLogx);\n_c2 = ModalLog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalLogx\");\n$RefreshReg$(_c2, \"ModalLog\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/ModalLog.tsx"],"names":["React","useSpring","Axios","MobileModalLog","useTheme","useMediaQuery","defaults","withCredentials","ModalLogx","screenHeight","CloseModalForm","showModalForm","PaperStyle","signupstyle","loginstyle","darkmode","usetheme","matchPc","breakpoints","up","matchTablet","modalanimation","config","duration","opacity","transform","modalanimationTwo","DialogeData","DialogeDataMobile","formtype","ModalLog","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAgE,OAAhE;AAOA,SAASC,SAAT,QAAoC,cAApC;AAKA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SACEC,QADF,EAGEC,aAHF,QASO,mBATP;;;AAYAH,KAAK,CAACI,QAAN,CAAeC,eAAf,GAAiC,IAAjC;;AAEA,SAASC,SAAT,CAAmB;AACjBC,EAAAA,YADiB;AAEjBC,EAAAA,cAFiB;AAGjBC,EAAAA,aAHiB;AAIjBC,EAAAA,UAJiB;AAKjBC,EAAAA,WALiB;AAMjBC,EAAAA,UANiB;AAOjBC,EAAAA;AAPiB,CAAnB,EAQ2B;AAAA;;AACzB,MAAIC,QAAQ,GAAGZ,QAAQ,EAAvB;AACA,MAAIa,OAAO,GAAGZ,aAAa,CAACW,QAAQ,CAACE,WAAT,CAAqBC,EAArB,CAAwB,IAAxB,CAAD,CAA3B;AACA,MAAIC,WAAW,GAAGf,aAAa,CAACW,QAAQ,CAACE,WAAT,CAAqBC,EAArB,CAAwB,IAAxB,CAAD,CAA/B,CAHyB,CAIzB;AACA;AACA;AACA;;AACA,QAAME,cAAc,GAAGpB,SAAS,CAAC;AAC/BqB,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADuB;AAI/BC,IAAAA,OAAO,EAAEb,aAAa,GAAG,CAAH,GAAO,GAJE;AAK/Bc,IAAAA,SAAS,EAAEd,aAAa,GAAI,gBAAJ,GAAuB;AALhB,GAAD,CAAhC;AAQA,QAAMe,iBAAiB,GAAGzB,SAAS,CAAC;AAClCqB,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD0B;AAIlCC,IAAAA,OAAO,EAAEb,aAAa,GAAG,CAAH,GAAO,GAJK;AAKlCc,IAAAA,SAAS,EAAEd,aAAa,GAAI,gBAAJ,GAAuB;AALb,GAAD,CAAnC;AAQA,QAAMgB,WAAW,GAAG;AAClBZ,IAAAA,QAAQ,EAAEA,QADQ;AAElBH,IAAAA,UAAU,EAAEA,UAFM;AAGlBE,IAAAA,UAAU,EAAEA,UAHM;AAIlBD,IAAAA,WAAW,EAAEA,WAJK;AAKlBF,IAAAA,aAAa,EAAEA,aALG;AAMlBU,IAAAA,cAAc,EAAEA,cANE;AAOlBK,IAAAA,iBAAiB,EAAEA,iBAPD;AAQlBjB,IAAAA,YAAY,EAAEA,YARI;AASlBC,IAAAA,cAAc,EAAEA;AATE,GAApB;AAYA,QAAMkB,iBAAiB,GAAG;AACxBb,IAAAA,QAAQ,EAAEA,QADc;AAExBH,IAAAA,UAAU,EAAEA,UAFY;AAGxBiB,IAAAA,QAAQ,EAAEA,QAHc;AAIxBf,IAAAA,UAAU,EAAEA,UAJY;AAKxBD,IAAAA,WAAW,EAAEA,WALW;AAMxBF,IAAAA,aAAa,EAAEA,aANS;AAOxBU,IAAAA,cAAc,EAAEA,cAPQ;AAQxBZ,IAAAA,YAAY,EAAEA,YARU;AASxBC,IAAAA,cAAc,EAAEA;AATQ,GAA1B;AAYA,sBACE;AAAA,cACGC,aAAa,GACZM,OAAO,GAAG,IAAH,GAAUG,WAAW,gBAC1B,QAAC,cAAD,OAAoBQ;AAApB;AAAA;AAAA;AAAA;AAAA,YAD0B,gBAG1B,QAAC,cAAD,OAAoBA;AAApB;AAAA;AAAA;AAAA;AAAA,YAJU,GAMV;AAPN,mBADF;AAWD;;GAnEQpB,S;UASQJ,Q,EACDC,a,EACIA,a,EAKKJ,S,EAQGA,S;;;KAxBnBO,S;AAqET,OAAO,MAAMsB,QAAQ,gBAAG9B,KAAK,CAAC+B,IAAN,CAAWvB,SAAX,CAAjB;MAAMsB,Q","sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\n\r\nimport image1 from \"./images/modalpic1.jpg\";\r\nimport image2 from \"./images/modalpic2.jpg\";\r\nimport image3 from \"./images/modalpic3.png\";\r\nimport image4 from \"./images/modalpic4.jpg\";\r\nimport image5 from \"./images/modalpic5.jpg\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport image6 from \"./images/modalpic6.jpg\";\r\nimport { DialogContent } from \"@material-ui/core\";\r\n\r\nimport { ImodalLog, IGrid } from \"./appFolder-Interfaces\";\r\nimport \"./ModalLog.css\";\r\nimport Axios from \"axios\";\r\nimport { PcModalLog } from \"./PcModalLog\";\r\nimport { MobileModalLog } from \"./MobileModalLog\";\r\nimport {\r\n  useTheme,\r\n  Paper,\r\n  useMediaQuery,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nAxios.defaults.withCredentials = true;\r\n\r\nfunction ModalLogx({\r\n  screenHeight,\r\n  CloseModalForm,\r\n  showModalForm,\r\n  PaperStyle,\r\n  signupstyle,\r\n  loginstyle,\r\n  darkmode,\r\n}: ImodalLog): JSX.Element {\r\n  var usetheme = useTheme();\r\n  var matchPc = useMediaQuery(usetheme.breakpoints.up(\"md\"));\r\n  var matchTablet = useMediaQuery(usetheme.breakpoints.up(\"sm\"));\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      duration: 400,\r\n    },\r\n    opacity: showModalForm ? 1 : 0.9,\r\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`,\r\n  });\r\n\r\n  const modalanimationTwo = useSpring({\r\n    config: {\r\n      duration: 350,\r\n    },\r\n    opacity: showModalForm ? 1 : 0.9,\r\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`,\r\n  });\r\n\r\n  const DialogeData = {\r\n    darkmode: darkmode,\r\n    PaperStyle: PaperStyle,\r\n    loginstyle: loginstyle,\r\n    signupstyle: signupstyle,\r\n    showModalForm: showModalForm,\r\n    modalanimation: modalanimation,\r\n    modalanimationTwo: modalanimationTwo,\r\n    screenHeight: screenHeight,\r\n    CloseModalForm: CloseModalForm,\r\n  };\r\n\r\n  const DialogeDataMobile = {\r\n    darkmode: darkmode,\r\n    PaperStyle: PaperStyle,\r\n    formtype: formtype,\r\n    loginstyle: loginstyle,\r\n    signupstyle: signupstyle,\r\n    showModalForm: showModalForm,\r\n    modalanimation: modalanimation,\r\n    screenHeight: screenHeight,\r\n    CloseModalForm: CloseModalForm,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModalForm ? (\r\n        matchPc ? null : matchTablet ? (\r\n          <MobileModalLog {...DialogeDataMobile} />\r\n        ) : (\r\n          <MobileModalLog {...DialogeDataMobile} />\r\n        )\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const ModalLog = React.memo(ModalLogx);\r\n"]},"metadata":{},"sourceType":"module"}