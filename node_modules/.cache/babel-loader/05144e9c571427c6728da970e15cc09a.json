{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\log\\\\LogButtons.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\nimport { UpdateSign } from \".././GlobalActions\";\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LoginButtonsx({\n  OpenModalForm\n}) {\n  _s();\n\n  ///\n  ///\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\n  var buttonFont = \"\";\n  var buttonTransform = \" \";\n  var pad = \"\"; ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n\n  if (matchPc) {\n    buttonFont = \"1vw\";\n    buttonTransform = \" \";\n    pad = darkmodeReducer ? \"25px\" : \"27px\"; ///\n  } else if (matchTablet) {\n    pad = \"21.5px\";\n    buttonFont = \"2vw\";\n    buttonTransform = \" \"; ///\n  } else {\n    buttonFont = \"\";\n    buttonTransform = \"scale(0.95)\";\n    pad = \"25px\";\n  } ///\n  ///\n  ///\n  /// GET  SIGNUP BUTTON AND LOGIN BUTTON STYLE FROM REDUX\n\n\n  const {\n    MozBoxShadowSD,\n    WebkitBoxShadowSD,\n    boxShadowSD\n  } = useSelector(state => ({ ...state.ButtonsSignUpReducerDark\n  }));\n  const {\n    MozBoxShadowSL,\n    WebkitBoxShadowSL,\n    boxShadowSL\n  } = useSelector(state => ({ ...state.ButtonsSignUpReducerLight\n  }));\n  const {\n    MozBoxShadowLD,\n    WebkitBoxShadowLD,\n    boxShadowLD\n  } = useSelector(state => ({ ...state.ButtonsLoginReducerDark\n  }));\n  const {\n    MozBoxShadowLL,\n    WebkitBoxShadowLL,\n    boxShadowLL\n  } = useSelector(state => ({ ...state.ButtonsLoginReducerLight\n  }));\n  var MozBoxShadowReducerLogin = \" \";\n  var WebkitBoxShadowReducerLogin = \" \";\n  var boxShadowReducerLogin = \" \";\n  var MozBoxShadowReducerSign = \" \";\n  var WebkitBoxShadowReducerSign = \" \";\n  var boxShadowReducerSign = \" \";\n\n  if (darkmodeReducer) {\n    MozBoxShadowReducerLogin = MozBoxShadowLD;\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLD;\n    boxShadowReducerLogin = boxShadowLD;\n    MozBoxShadowReducerSign = MozBoxShadowSD;\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSD;\n    boxShadowReducerSign = boxShadowSD;\n  } else {\n    MozBoxShadowReducerLogin = MozBoxShadowLL;\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLL;\n    boxShadowReducerLogin = boxShadowLL;\n    MozBoxShadowReducerSign = MozBoxShadowSL;\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSL;\n    boxShadowReducerSign = boxShadowSL;\n  }\n\n  const dispatch = useDispatch();\n  const Timervv = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: matchPc ? \"containerloginpc\" : \"containerloginmobile \",\n      item: true,\n      style: {\n        marginTop: matchMobile ? \"-2.5vh\" : \"0px\",\n        padding: \"0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CancelIcon, {\n        onClick: () => {\n          dispatch(UpdateSign(false));\n        },\n        className: `${darkmodeReducer ? \"make-small-icons-clickable-darkMenu dontallowhighlighting zuperkingIcon\" : \"make-small-icons-clickable-lightMenu dontallowhighlighting zuperking\"} `,\n        style: {\n          fontSize: matchMobile ? '8vh' : '3.8vw',\n          color: darkmodeReducer ? '#ffffff' : '#000000',\n          position: 'absolute',\n          right: '1vw',\n          top: matchMobile ? '0vh' : '0px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        sm: 3,\n        md: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: \"buttonpad buttonshake\",\n        xs: 10,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            OpenModalForm(8000);\n          },\n          style: {\n            fontSize: buttonFont,\n            transform: buttonTransform,\n            padding: \"21.5px\",\n            borderRadius: \"52px\",\n            MozBoxShadow: MozBoxShadowReducerLogin,\n            WebkitBoxShadow: WebkitBoxShadowReducerLogin,\n            boxShadow: boxShadowReducerLogin\n          },\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"large\",\n          color: \"primary\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), matchMobile ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 24\n      }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        sm: 3,\n        md: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: \"buttonpad buttonshake\",\n        xs: 10,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => OpenModalForm(9000),\n          style: {\n            fontSize: buttonFont,\n            transform: buttonTransform,\n            padding: pad,\n            borderRadius: \"50px\",\n            MozBoxShadow: MozBoxShadowReducerSign,\n            WebkitBoxShadow: WebkitBoxShadowReducerSign,\n            boxShadow: boxShadowReducerSign\n          },\n          fullWidth: true,\n          variant: \"contained\",\n          size: \"large\",\n          color: \"secondary\",\n          children: [\" \", \"Sign Up\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        sm: 3,\n        md: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(LoginButtonsx, \"+Ri61tr6wPvdfo3qyIhLNL0y+8Y=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = LoginButtonsx;\nexport const LoginButtons = /*#__PURE__*/React.memo(LoginButtonsx);\n_c2 = LoginButtons;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginButtonsx\");\n$RefreshReg$(_c2, \"LoginButtons\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/log/LogButtons.tsx"],"names":["React","Grid","Button","matchPc","matchTablet","matchMobile","UpdateSign","CancelIcon","useRef","useSelector","useDispatch","LoginButtonsx","OpenModalForm","buttonFont","buttonTransform","pad","darkmode","state","GlobalReducer","darkmodeReducer","MozBoxShadowSD","WebkitBoxShadowSD","boxShadowSD","ButtonsSignUpReducerDark","MozBoxShadowSL","WebkitBoxShadowSL","boxShadowSL","ButtonsSignUpReducerLight","MozBoxShadowLD","WebkitBoxShadowLD","boxShadowLD","ButtonsLoginReducerDark","MozBoxShadowLL","WebkitBoxShadowLL","boxShadowLL","ButtonsLoginReducerLight","MozBoxShadowReducerLogin","WebkitBoxShadowReducerLogin","boxShadowReducerLogin","MozBoxShadowReducerSign","WebkitBoxShadowReducerSign","boxShadowReducerSign","dispatch","Timervv","marginTop","padding","fontSize","color","position","right","top","transform","borderRadius","MozBoxShadow","WebkitBoxShadow","boxShadow","LoginButtons","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AAEA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,iBAAlD;AAEA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,MAAT,QAAyD,OAAzD;AACA,SAAyBC,WAAzB,EAAsCC,WAAtC,QAAyD,aAAzD;;;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA+C;AAAA;;AAC7C;AACA;AACA;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,eAAe,GAAG,GAAtB;AACA,MAAIC,GAAG,GAAG,EAAV,CAN6C,CAQ7C;AACA;AACA;AACA;;AAMA,QAAM;AAAEC,IAAAA;AAAF,MAAeP,WAAW,CAAEQ,KAAD,KAAoC,EACnE,GAAGA,KAAK,CAACC;AAD0D,GAApC,CAAD,CAAhC;AAGA,QAAMC,eAAe,GAAGH,QAAxB;;AAEA,MAAIb,OAAJ,EAAa;AACXU,IAAAA,UAAU,GAAG,KAAb;AACAC,IAAAA,eAAe,GAAG,GAAlB;AACAC,IAAAA,GAAG,GAAGI,eAAe,GAAG,MAAH,GAAY,MAAjC,CAHW,CAIX;AACD,GALD,MAKO,IAAIf,WAAJ,EAAiB;AACtBW,IAAAA,GAAG,GAAG,QAAN;AACAF,IAAAA,UAAU,GAAG,KAAb;AACAC,IAAAA,eAAe,GAAG,GAAlB,CAHsB,CAItB;AACD,GALM,MAKA;AACLD,IAAAA,UAAU,GAAG,EAAb;AACAC,IAAAA,eAAe,GAAG,aAAlB;AACAC,IAAAA,GAAG,GAAG,MAAN;AACD,GApC4C,CAsC7C;AACA;AACA;AACA;;;AACA,QAAM;AAAEK,IAAAA,cAAF;AAAkBC,IAAAA,iBAAlB;AAAqCC,IAAAA;AAArC,MAAqDb,WAAW,CACnEQ,KAAD,KAA4B,EAC1B,GAAGA,KAAK,CAACM;AADiB,GAA5B,CADoE,CAAtE;AAMA,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,iBAAlB;AAAqCC,IAAAA;AAArC,MAAqDjB,WAAW,CACnEQ,KAAD,KAA4B,EAC1B,GAAGA,KAAK,CAACU;AADiB,GAA5B,CADoE,CAAtE;AAMA,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,iBAAlB;AAAqCC,IAAAA;AAArC,MAAqDrB,WAAW,CACnEQ,KAAD,KAA4B,EAC1B,GAAGA,KAAK,CAACc;AADiB,GAA5B,CADoE,CAAtE;AAMA,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,iBAAlB;AAAqCC,IAAAA;AAArC,MAAqDzB,WAAW,CACnEQ,KAAD,KAA4B,EAC1B,GAAGA,KAAK,CAACkB;AADiB,GAA5B,CADoE,CAAtE;AAMA,MAAIC,wBAAwB,GAAG,GAA/B;AACA,MAAIC,2BAA2B,GAAG,GAAlC;AACA,MAAIC,qBAAqB,GAAG,GAA5B;AAEA,MAAIC,uBAAuB,GAAG,GAA9B;AACA,MAAIC,0BAA0B,GAAG,GAAjC;AACA,MAAIC,oBAAoB,GAAG,GAA3B;;AAEA,MAAItB,eAAJ,EAAqB;AACnBiB,IAAAA,wBAAwB,GAAGR,cAA3B;AACAS,IAAAA,2BAA2B,GAAGR,iBAA9B;AACAS,IAAAA,qBAAqB,GAAGR,WAAxB;AAEAS,IAAAA,uBAAuB,GAAGnB,cAA1B;AACAoB,IAAAA,0BAA0B,GAAGnB,iBAA7B;AACAoB,IAAAA,oBAAoB,GAAGnB,WAAvB;AACD,GARD,MAQO;AACLc,IAAAA,wBAAwB,GAAGJ,cAA3B;AACAK,IAAAA,2BAA2B,GAAGJ,iBAA9B;AACAK,IAAAA,qBAAqB,GAAGJ,WAAxB;AAEAK,IAAAA,uBAAuB,GAAGf,cAA1B;AACAgB,IAAAA,0BAA0B,GAAGf,iBAA7B;AACAgB,IAAAA,oBAAoB,GAAGf,WAAvB;AACD;;AAGD,QAAMgB,QAAQ,GAAGhC,WAAW,EAA5B;AAEA,QAAMiC,OAAO,GAAGnC,MAAM,CAAuC,IAAvC,CAAtB;AAEA,sBAEE;AAAA,2BAEE,QAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,SAAS,EAAEL,OAAO,GAAG,kBAAH,GAAwB,uBAF5C;AAGE,MAAA,IAAI,MAHN;AAIE,MAAA,KAAK,EAAE;AAAEyC,QAAAA,SAAS,EAAEvC,WAAW,GAAG,QAAH,GAAc,KAAtC;AAA6CwC,QAAAA,OAAO,EAAE;AAAtD,OAJT;AAAA,8BASE,QAAC,UAAD;AACE,QAAA,OAAO,EAAE,MAAM;AAEbH,UAAAA,QAAQ,CAACpC,UAAU,CAAC,KAAD,CAAX,CAAR;AACD,SAJH;AAKE,QAAA,SAAS,EAAG,GAAEa,eAAe,GACzB,yEADyB,GAEzB,sEACD,GARL;AASE,QAAA,KAAK,EAAE;AACL2B,UAAAA,QAAQ,EAAEzC,WAAW,GAAG,KAAH,GAAW,OAD3B;AAEL0C,UAAAA,KAAK,EAAE5B,eAAe,GAAG,SAAH,GAAe,SAFhC;AAGL6B,UAAAA,QAAQ,EAAE,UAHL;AAILC,UAAAA,KAAK,EAAE,KAJF;AAKLC,UAAAA,GAAG,EAAE7C,WAAW,GAAG,KAAH,GAAW;AALtB;AATT;AAAA;AAAA;AAAA;AAAA,cATF,eA6BE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA,cA7BF,eA+BE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,SAAS,EAAC,uBAArB;AAA6C,QAAA,EAAE,EAAE,EAAjD;AAAqD,QAAA,EAAE,EAAE,CAAzD;AAA4D,QAAA,EAAE,EAAE,CAAhE;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAE,MAAM;AAIbO,YAAAA,aAAa,CAAC,IAAD,CAAb;AACD,WANH;AAQE,UAAA,KAAK,EAAE;AACLkC,YAAAA,QAAQ,EAAEjC,UADL;AAELsC,YAAAA,SAAS,EAAErC,eAFN;AAGL+B,YAAAA,OAAO,EAAE,QAHJ;AAILO,YAAAA,YAAY,EAAE,MAJT;AAKLC,YAAAA,YAAY,EAAEjB,wBALT;AAMLkB,YAAAA,eAAe,EAAEjB,2BANZ;AAOLkB,YAAAA,SAAS,EAAEjB;AAPN,WART;AAiBE,UAAA,SAAS,EAAE,IAjBb;AAkBE,UAAA,OAAO,EAAC,UAlBV;AAmBE,UAAA,IAAI,EAAC,OAnBP;AAoBE,UAAA,KAAK,EAAC,SApBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA/BF,EA0DGjC,WAAW,gBAAG,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA,cAAH,GAA2C,IA1DzD,eA6DE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA,cA7DF,eA+DE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,SAAS,EAAC,uBAArB;AAA6C,QAAA,EAAE,EAAE,EAAjD;AAAqD,QAAA,EAAE,EAAE,CAAzD;AAA4D,QAAA,EAAE,EAAE,CAAhE;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAE,MAAMO,aAAa,CAAC,IAAD,CAD9B;AAEE,UAAA,KAAK,EAAE;AACLkC,YAAAA,QAAQ,EAAEjC,UADL;AAELsC,YAAAA,SAAS,EAAErC,eAFN;AAGL+B,YAAAA,OAAO,EAAE9B,GAHJ;AAILqC,YAAAA,YAAY,EAAE,MAJT;AAKLC,YAAAA,YAAY,EAAEd,uBALT;AAMLe,YAAAA,eAAe,EAAEd,0BANZ;AAOLe,YAAAA,SAAS,EAAEd;AAPN,WAFT;AAWE,UAAA,SAAS,EAAE,IAXb;AAYE,UAAA,OAAO,EAAC,WAZV;AAaE,UAAA,IAAI,EAAC,OAbP;AAcE,UAAA,KAAK,EAAC,WAdR;AAAA,qBAgBG,GAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA/DF,eAoFE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA,cApFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,mBAFF;AA6FD;;GA9LQ9B,a;UAiBcF,W,EAyBsCA,W,EAMAA,W,EAMAA,W,EAMAA,W,EAiC1CC,W;;;KA7FVC,a;AAgMT,OAAO,MAAM6C,YAAY,gBAAGxD,KAAK,CAACyD,IAAN,CAAW9C,aAAX,CAArB;MAAM6C,Y","sourcesContent":["import React from \"react\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\n\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { ILogButtons } from \"./log-Interfaces\";\r\nimport { UpdateSign } from \".././GlobalActions\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction LoginButtonsx({ OpenModalForm }: any) {\r\n  ///\r\n  ///\r\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\r\n  var buttonFont = \"\";\r\n  var buttonTransform = \" \";\r\n  var pad = \"\";\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  if (matchPc) {\r\n    buttonFont = \"1vw\";\r\n    buttonTransform = \" \";\r\n    pad = darkmodeReducer ? \"25px\" : \"27px\";\r\n    ///\r\n  } else if (matchTablet) {\r\n    pad = \"21.5px\";\r\n    buttonFont = \"2vw\";\r\n    buttonTransform = \" \";\r\n    ///\r\n  } else {\r\n    buttonFont = \"\";\r\n    buttonTransform = \"scale(0.95)\";\r\n    pad = \"25px\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET  SIGNUP BUTTON AND LOGIN BUTTON STYLE FROM REDUX\r\n  const { MozBoxShadowSD, WebkitBoxShadowSD, boxShadowSD } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.ButtonsSignUpReducerDark,\r\n    })\r\n  );\r\n\r\n  const { MozBoxShadowSL, WebkitBoxShadowSL, boxShadowSL } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.ButtonsSignUpReducerLight,\r\n    })\r\n  );\r\n\r\n  const { MozBoxShadowLD, WebkitBoxShadowLD, boxShadowLD } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.ButtonsLoginReducerDark,\r\n    })\r\n  );\r\n\r\n  const { MozBoxShadowLL, WebkitBoxShadowLL, boxShadowLL } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.ButtonsLoginReducerLight,\r\n    })\r\n  );\r\n\r\n  var MozBoxShadowReducerLogin = \" \";\r\n  var WebkitBoxShadowReducerLogin = \" \";\r\n  var boxShadowReducerLogin = \" \";\r\n\r\n  var MozBoxShadowReducerSign = \" \";\r\n  var WebkitBoxShadowReducerSign = \" \";\r\n  var boxShadowReducerSign = \" \";\r\n\r\n  if (darkmodeReducer) {\r\n    MozBoxShadowReducerLogin = MozBoxShadowLD;\r\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLD;\r\n    boxShadowReducerLogin = boxShadowLD;\r\n\r\n    MozBoxShadowReducerSign = MozBoxShadowSD;\r\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSD;\r\n    boxShadowReducerSign = boxShadowSD;\r\n  } else {\r\n    MozBoxShadowReducerLogin = MozBoxShadowLL;\r\n    WebkitBoxShadowReducerLogin = WebkitBoxShadowLL;\r\n    boxShadowReducerLogin = boxShadowLL;\r\n\r\n    MozBoxShadowReducerSign = MozBoxShadowSL;\r\n    WebkitBoxShadowReducerSign = WebkitBoxShadowSL;\r\n    boxShadowReducerSign = boxShadowSL;\r\n  }\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const Timervv = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  return (\r\n\r\n    <>\r\n\r\n      <Grid\r\n        container\r\n        className={matchPc ? \"containerloginpc\" : \"containerloginmobile \"}\r\n        item\r\n        style={{ marginTop: matchMobile ? \"-2.5vh\" : \"0px\", padding: \"0px\" }}\r\n\r\n      >\r\n\r\n\r\n        <CancelIcon\r\n          onClick={() => {\r\n\r\n            dispatch(UpdateSign(false));\r\n          }}\r\n          className={`${darkmodeReducer\r\n            ? \"make-small-icons-clickable-darkMenu dontallowhighlighting zuperkingIcon\"\r\n            : \"make-small-icons-clickable-lightMenu dontallowhighlighting zuperking\"\r\n            } `}\r\n          style={{\r\n            fontSize: matchMobile ? '8vh' : '3.8vw',\r\n            color: darkmodeReducer ? '#ffffff' : '#000000',\r\n            position: 'absolute',\r\n            right: '1vw',\r\n            top: matchMobile ? '0vh' : '0px',\r\n          }}\r\n        />\r\n\r\n\r\n\r\n        <Grid item xs={1} sm={3} md={2}></Grid>\r\n\r\n        <Grid item className=\"buttonpad buttonshake\" xs={10} sm={6} md={3}>\r\n          <Button\r\n            onClick={() => {\r\n\r\n\r\n\r\n              OpenModalForm(8000)\r\n            }}\r\n\r\n            style={{\r\n              fontSize: buttonFont,\r\n              transform: buttonTransform,\r\n              padding: \"21.5px\",\r\n              borderRadius: \"52px\",\r\n              MozBoxShadow: MozBoxShadowReducerLogin,\r\n              WebkitBoxShadow: WebkitBoxShadowReducerLogin,\r\n              boxShadow: boxShadowReducerLogin,\r\n            }}\r\n            fullWidth={true}\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n          >\r\n            Log In\r\n          </Button>\r\n        </Grid>\r\n\r\n        {matchMobile ? <Grid item xs={12} md={false}></Grid> : null}\r\n\r\n\r\n        <Grid item xs={1} sm={3} md={2}></Grid>\r\n\r\n        <Grid item className=\"buttonpad buttonshake\" xs={10} sm={6} md={3}>\r\n          <Button\r\n            onClick={() => OpenModalForm(9000)}\r\n            style={{\r\n              fontSize: buttonFont,\r\n              transform: buttonTransform,\r\n              padding: pad,\r\n              borderRadius: \"50px\",\r\n              MozBoxShadow: MozBoxShadowReducerSign,\r\n              WebkitBoxShadow: WebkitBoxShadowReducerSign,\r\n              boxShadow: boxShadowReducerSign,\r\n            }}\r\n            fullWidth={true}\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            color=\"secondary\"\r\n          >\r\n            {\" \"}\r\n            Sign Up\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={1} sm={3} md={2}></Grid>\r\n      </Grid>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport const LoginButtons = React.memo(LoginButtonsx);\r\n"]},"metadata":{},"sourceType":"module"}