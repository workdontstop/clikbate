{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\ModalLog.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState, useCallback } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { Grid, DialogContent, Paper } from \"@material-ui/core\";\nimport im1 from \"./images/modalpic1.jpg\";\nimport im2 from \"./images/modalpic2.jpg\";\nimport im3 from \"./images/modalpic3.png\";\nimport im4 from \"./images/modalpic4.jpg\";\nimport \"./ModalLog.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Modalx({\n  CloseModalForm,\n  showModalForm,\n  setShowModalForm,\n  PaperStyle\n}) {\n  _s();\n\n  const [showimage, setShowimage] = useState(\" \");\n  const [zoomedModal, setZoomedModal] = useState(false);\n  const [wideImage, setWideImage] = useState(false); //\n  //\n  //\n  //CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n\n  const animation = useSpring({\n    config: {\n      duration: 1000\n    },\n    opacity: showModalForm ? 1 : 0.9,\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`\n  }); //\n  //\n  //\n  // USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\n\n  const ModalBackgroundRef = useRef(null);\n\n  const onBackgroundFocus = e => {\n    if (ModalBackgroundRef.current === e.target) {\n      CloseModalForm(0);\n    }\n  }; //\n  //\n  //\n  // ESCAPE KEY CLOSE MODAL\n\n\n  const escapePress = useCallback(e => {\n    if (e.key === \"Escape\" && showModalForm) {\n      CloseModalForm(0);\n    }\n  }, [setShowModalForm, showModalForm]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escapePress);\n    return () => document.removeEventListener(\"keydown\", escapePress);\n  }, [escapePress]); //\n  //\n  //\n  // RANDOMISE IMAGE\n\n  useEffect(() => {\n    let imagecontrol = [1, 2, 3, 4];\n    var randomimage = imagecontrol[Math.floor(Math.random() * imagecontrol.length)];\n\n    if (randomimage == 1) {\n      setShowimage(im1);\n    } else if (randomimage == 2) {\n      setShowimage(im2);\n    } else if (randomimage == 3) {\n      setShowimage(im3);\n    } else {\n      setShowimage(im4);\n    }\n  }, []); //\n  //\n  //\n  // GET IMAGE WIDTH ,HEIGHT AND SET WIDE IMAGE\n\n  const onimageload = e => {\n    const imageHeight = e.target.clientHeight;\n    const imageWidth = e.target.clientWidth;\n\n    if (imageWidth > imageHeight) {\n      setWideImage(true);\n    }\n  }; //\n  //\n  //\n  // SHOW A FULLSCREEN MODAL VIEW\n\n\n  const zoomlogmodal = () => {\n    setZoomedModal(!zoomedModal);\n  }; //\n  //\n  //\n  // DYNAMIC MODAL LAYOUT VARIABLES\n\n\n  const wideImageControlTrue = \"75vw\";\n  const wideImageControlfalse = \"70vw\";\n  const zoomImageControl = \"100vw\";\n  const GridMiniAwide = 8;\n  const GridMiniBwide = 4;\n  const GridMiniAlong = 7;\n  const GridMiniBlong = 5;\n  const GridZoomAwide = 8;\n  const GridZoomBwide = 4;\n  const GridZoomAlong = 6;\n  const GridZoomBlong = 6;\n  let GridHolderA = 7;\n  let GridHolderB = 5;\n  let GridxA = 7;\n  let GridxB = 5;\n  let GridyA = 7;\n  let GridyB = 5;\n  let wideImageControl = \"70vw\";\n  let imageReal = \"75vw\";\n  let borderGrid = \"11px\";\n\n  if (zoomedModal) {\n    borderGrid = \"0px\";\n\n    if (wideImage) {\n      wideImageControl = wideImageControlTrue;\n      GridxA = GridZoomAwide;\n      GridxB = GridZoomBwide;\n    } else {\n      wideImageControl = wideImageControlfalse;\n      GridxA = GridZoomAlong;\n      GridxB = GridZoomBlong;\n    }\n\n    imageReal = zoomImageControl;\n    GridHolderA = GridxA;\n    GridHolderB = GridxB;\n  } else {\n    borderGrid = \"11px\";\n\n    if (wideImage) {\n      wideImageControl = wideImageControlTrue;\n      GridyA = GridMiniAwide;\n      GridyB = GridMiniBwide;\n    } else {\n      wideImageControl = wideImageControlfalse;\n      GridyA = GridMiniAlong;\n      GridyB = GridMiniBlong;\n    }\n\n    imageReal = wideImageControl;\n    GridHolderA = GridyA;\n    GridHolderB = GridyB;\n  } //\n  //\n  //\n  // DYNAMIC MODAL LAYOUT VARIABLES\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModalForm ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: \"dialog-container dontallowhighlighting \",\n      onClick: onBackgroundFocus,\n      style: {\n        overflow: \"hidden\",\n        height: \"100vh\",\n        width: \"100%\",\n        position: \"fixed\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        top: \"0em\",\n        zIndex: 8,\n        marginTop: \"-3px\",\n        backgroundImage: \"linear-gradient(to bottom,rgb(160, 160, 160, 1),rgb(160, 160, 160, 0.95),rgb(160, 160, 160, 0.9),rgb(160, 160, 160, 0.85),rgb(160, 160, 160, 0.8)\"\n      },\n      ref: ModalBackgroundRef,\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: PaperStyle,\n          style: {\n            borderRadius: borderGrid\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            xs: 12,\n            style: {\n              width: imageReal,\n              height: \"auto\",\n              boxShadow: \"0 5px 16px rgba(0, 0, 0, 0.2)\",\n              color: \"#000000\",\n              position: \"relative\",\n              zIndex: 10,\n              borderRadius: borderGrid\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: GridHolderA,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                onClick: zoomlogmodal,\n                onLoad: onimageload,\n                src: showimage,\n                style: {\n                  objectFit: \"cover\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  borderRadius: `${borderGrid} 0 0 10px`,\n                  background: \"#000000\"\n                },\n                alt: \"camera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              xs: GridHolderB,\n              item: true,\n              style: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                lineHeight: \"1.8\",\n                textAlign: \"center\",\n                color: \"#141414\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Camera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"get access\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"join\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(Modalx, \"Kk/jdlY47ILIjiG7pNE+YrzWkGc=\", false, function () {\n  return [useSpring];\n});\n\n_c = Modalx;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modalx\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/ModalLog.tsx"],"names":["useRef","useEffect","useState","useCallback","useSpring","animated","Grid","DialogContent","Paper","im1","im2","im3","im4","Modalx","CloseModalForm","showModalForm","setShowModalForm","PaperStyle","showimage","setShowimage","zoomedModal","setZoomedModal","wideImage","setWideImage","animation","config","duration","opacity","transform","ModalBackgroundRef","onBackgroundFocus","e","current","target","escapePress","key","document","addEventListener","removeEventListener","imagecontrol","randomimage","Math","floor","random","length","onimageload","imageHeight","clientHeight","imageWidth","clientWidth","zoomlogmodal","wideImageControlTrue","wideImageControlfalse","zoomImageControl","GridMiniAwide","GridMiniBwide","GridMiniAlong","GridMiniBlong","GridZoomAwide","GridZoomBwide","GridZoomAlong","GridZoomBlong","GridHolderA","GridHolderB","GridxA","GridxB","GridyA","GridyB","wideImageControl","imageReal","borderGrid","overflow","height","width","position","display","justifyContent","alignItems","top","zIndex","marginTop","backgroundImage","borderRadius","boxShadow","color","objectFit","background","flexDirection","lineHeight","textAlign"],"mappings":"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","sourcesContent":["import { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { Grid, DialogContent, Paper } from \"@material-ui/core\";\r\nimport im1 from \"./images/modalpic1.jpg\";\r\nimport im2 from \"./images/modalpic2.jpg\";\r\nimport im3 from \"./images/modalpic3.png\";\r\nimport im4 from \"./images/modalpic4.jpg\";\r\nimport { ImodalForm, IGrid } from \"./appFolder-Interfaces\";\r\nimport \"./ModalLog.css\";\r\n\r\nexport default function Modalx({\r\n  CloseModalForm,\r\n  showModalForm,\r\n  setShowModalForm,\r\n  PaperStyle,\r\n}: ImodalForm): JSX.Element {\r\n  const [showimage, setShowimage] = useState<string>(\" \");\r\n  const [zoomedModal, setZoomedModal] = useState<boolean>(false);\r\n  const [wideImage, setWideImage] = useState<boolean>(false);\r\n\r\n  //\r\n  //\r\n  //\r\n  //CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 1000,\r\n    },\r\n    opacity: showModalForm ? 1 : 0.9,\r\n    transform: showModalForm ? `translateY(0%)` : `translateY(100%)`,\r\n  });\r\n\r\n  //\r\n  //\r\n  //\r\n  // USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\r\n  const ModalBackgroundRef = useRef<HTMLInputElement>(null);\r\n  const onBackgroundFocus = (e: any): void => {\r\n    if (ModalBackgroundRef.current === e.target) {\r\n      CloseModalForm(0);\r\n    }\r\n  };\r\n  //\r\n  //\r\n  //\r\n  // ESCAPE KEY CLOSE MODAL\r\n  const escapePress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Escape\" && showModalForm) {\r\n        CloseModalForm(0);\r\n      }\r\n    },\r\n    [setShowModalForm, showModalForm]\r\n  );\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escapePress);\r\n    return () => document.removeEventListener(\"keydown\", escapePress);\r\n  }, [escapePress]);\r\n  //\r\n  //\r\n  //\r\n  // RANDOMISE IMAGE\r\n  useEffect(() => {\r\n    let imagecontrol: number[] = [1, 2, 3, 4];\r\n    var randomimage =\r\n      imagecontrol[Math.floor(Math.random() * imagecontrol.length)];\r\n\r\n    if (randomimage == 1) {\r\n      setShowimage(im1);\r\n    } else if (randomimage == 2) {\r\n      setShowimage(im2);\r\n    } else if (randomimage == 3) {\r\n      setShowimage(im3);\r\n    } else {\r\n      setShowimage(im4);\r\n    }\r\n  }, []);\r\n  //\r\n  //\r\n  //\r\n  // GET IMAGE WIDTH ,HEIGHT AND SET WIDE IMAGE\r\n  const onimageload = (e: any) => {\r\n    const imageHeight = e.target.clientHeight;\r\n    const imageWidth = e.target.clientWidth;\r\n    if (imageWidth > imageHeight) {\r\n      setWideImage(true);\r\n    }\r\n  };\r\n  //\r\n  //\r\n  //\r\n  // SHOW A FULLSCREEN MODAL VIEW\r\n  const zoomlogmodal = () => {\r\n    setZoomedModal(!zoomedModal);\r\n  };\r\n  //\r\n  //\r\n  //\r\n  // DYNAMIC MODAL LAYOUT VARIABLES\r\n  const wideImageControlTrue: string = \"75vw\";\r\n  const wideImageControlfalse: string = \"70vw\";\r\n  const zoomImageControl: string = \"100vw\";\r\n  const GridMiniAwide: IGrid = 8;\r\n  const GridMiniBwide: IGrid = 4;\r\n  const GridMiniAlong: IGrid = 7;\r\n  const GridMiniBlong: IGrid = 5;\r\n  const GridZoomAwide: IGrid = 8;\r\n  const GridZoomBwide: IGrid = 4;\r\n  const GridZoomAlong: IGrid = 6;\r\n  const GridZoomBlong: IGrid = 6;\r\n\r\n  let GridHolderA: IGrid = 7;\r\n  let GridHolderB: IGrid = 5;\r\n\r\n  let GridxA: IGrid = 7;\r\n  let GridxB: IGrid = 5;\r\n\r\n  let GridyA: IGrid = 7;\r\n  let GridyB: IGrid = 5;\r\n\r\n  let wideImageControl: string = \"70vw\";\r\n  let imageReal: string = \"75vw\";\r\n\r\n  let borderGrid: string = \"11px\";\r\n\r\n  if (zoomedModal) {\r\n    borderGrid = \"0px\";\r\n    if (wideImage) {\r\n      wideImageControl = wideImageControlTrue;\r\n      GridxA = GridZoomAwide;\r\n      GridxB = GridZoomBwide;\r\n    } else {\r\n      wideImageControl = wideImageControlfalse;\r\n      GridxA = GridZoomAlong;\r\n      GridxB = GridZoomBlong;\r\n    }\r\n    imageReal = zoomImageControl;\r\n    GridHolderA = GridxA;\r\n    GridHolderB = GridxB;\r\n  } else {\r\n    borderGrid = \"11px\";\r\n    if (wideImage) {\r\n      wideImageControl = wideImageControlTrue;\r\n      GridyA = GridMiniAwide;\r\n      GridyB = GridMiniBwide;\r\n    } else {\r\n      wideImageControl = wideImageControlfalse;\r\n      GridyA = GridMiniAlong;\r\n      GridyB = GridMiniBlong;\r\n    }\r\n    imageReal = wideImageControl;\r\n    GridHolderA = GridyA;\r\n    GridHolderB = GridyB;\r\n  }\r\n  //\r\n  //\r\n  //\r\n  // DYNAMIC MODAL LAYOUT VARIABLES\r\n\r\n  return (\r\n    <>\r\n      {showModalForm ? (\r\n        <DialogContent\r\n          className=\"dialog-container dontallowhighlighting \"\r\n          onClick={onBackgroundFocus}\r\n          style={{\r\n            overflow: \"hidden\",\r\n            height: \"100vh\",\r\n            width: \"100%\",\r\n            position: \"fixed\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            top: \"0em\",\r\n            zIndex: 8,\r\n            marginTop: \"-3px\",\r\n            backgroundImage:\r\n              \"linear-gradient(to bottom,rgb(160, 160, 160, 1),rgb(160, 160, 160, 0.95),rgb(160, 160, 160, 0.9),rgb(160, 160, 160, 0.85),rgb(160, 160, 160, 0.8)\",\r\n          }}\r\n          ref={ModalBackgroundRef}\r\n        >\r\n          <animated.div style={animation}>\r\n            <Paper className={PaperStyle} style={{ borderRadius: borderGrid }}>\r\n              <Grid\r\n                container\r\n                xs={12}\r\n                style={{\r\n                  width: imageReal,\r\n                  height: \"auto\",\r\n                  boxShadow: \"0 5px 16px rgba(0, 0, 0, 0.2)\",\r\n                  color: \"#000000\",\r\n                  position: \"relative\",\r\n                  zIndex: 10,\r\n                  borderRadius: borderGrid,\r\n                }}\r\n              >\r\n                <Grid item xs={GridHolderA}>\r\n                  <img\r\n                    onClick={zoomlogmodal}\r\n                    onLoad={onimageload}\r\n                    src={showimage}\r\n                    style={{\r\n                      objectFit: \"cover\",\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      borderRadius: `${borderGrid} 0 0 10px`,\r\n                      background: \"#000000\",\r\n                    }}\r\n                    alt=\"camera\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid\r\n                  xs={GridHolderB}\r\n                  item\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    lineHeight: \"1.8\",\r\n                    textAlign: \"center\",\r\n                    color: \"#141414\",\r\n                  }}\r\n                >\r\n                  <h1>Camera</h1>\r\n                  <p>get access</p>\r\n                  <button>join</button>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </animated.div>\r\n        </DialogContent>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}