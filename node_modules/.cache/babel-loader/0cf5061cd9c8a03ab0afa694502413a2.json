{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\OneDrive\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\Slider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback, useEffect, useLayoutEffect } from \"react\";\nimport { Arrow } from \"./Arrow\";\nimport { Dots } from \"./Dots\";\nimport { SliderNumber } from \"./SliderNumber\";\nimport { Grid } from \"@material-ui/core\";\nimport { animated, useTransition } from \"react-spring\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ZoomOutIcon from \"@mui/icons-material/ZoomOut\";\nimport { Loader } from \"./Loader\";\nimport { UpdateInteract } from \".././GlobalActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Sliderx({\n  slides,\n  slidesThumb,\n  pey,\n  addPostItemsRef,\n  itemheight,\n  onPostsItemClicked,\n  onPostsItemload,\n  post,\n  itemFinalPostHeight,\n  itemOriginalPostHeight,\n  itemcroptype,\n  itemCLICKED,\n  setActiveAutoPlay,\n  AUTOSlideLongImages,\n  clickslider,\n  stopSlider,\n  SliderAutoPlay,\n  showSliderLoader,\n  setshowSliderLoader,\n  autoPlayTimer,\n  sliderIndex,\n  setSliderIndex,\n  sliderIndexSlow,\n  setSliderIndexSlow,\n  length,\n  startSlider,\n  ActiveAutoPlay,\n  type,\n  setminiProfile,\n  miniProfile,\n  setzoomClickedIndex,\n  setsliderIndexMini,\n  postDatainnerInteraction1,\n  postDatainnerInteraction2,\n  postItemsRef,\n  ActiveCanvas\n}) {\n  _s();\n\n  const [sliderDuration] = useState(1500);\n  const aRef = useRef(null);\n  var allow4dev = \"\";\n  const {\n    REACT_APP_APPX_STATE\n  } = process.env;\n\n  if (REACT_APP_APPX_STATE === \"dev\") {\n    allow4dev = \"http://localhost:1000\";\n  } else {\n    allow4dev = \"\";\n  }\n\n  const dispatch = useDispatch(); /// const getWidth = () => window.innerWidth;\n  ///var newGetWidth = getWidth() * slides.length;\n\n  const waitChangeIndexTimer = useRef(null);\n  const handleTouchMoveTimerss = useRef(null);\n  const handleTouchMoveTimer = useRef(null);\n  const callAutoPlayAgainTimer = useRef(null);\n  const SlideimageRef = useRef(null);\n  const SlideimageRefthumb = useRef(null);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [touchPosition, setTouchPosition] = useState(null);\n  const [ShowInteract1, setShowInteract1] = useState(false);\n  const [ShowInteract2, setShowInteract2] = useState(false);\n  const [ZoomOutBigger, setZoomOutBigger] = useState(false);\n  const [miniH, setminiH] = useState(50); ///\n  ///\n  ///\n  ///\n\n  const {\n    ActiveId\n  } = useSelector(state => ({ ...state.ActiveAutoPlayReducer\n  }));\n  const ActiveIdReducer = ActiveId; ///\n  ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    screenHeight,\n    darkmode,\n    snapStart,\n    activateLoader,\n    historyscroll,\n    interactContent,\n    interact\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const screenHeightReducer = screenHeight;\n  const darkmodeReducer = darkmode;\n  const snapStartReducer = snapStart;\n  const activateLoaderReducer = activateLoader;\n  const historyscrollReducer = historyscroll;\n  const interactContentReducer = interactContent;\n  const interactReducer = interact;\n  const interacttime = useRef(null);\n  const interacttime2 = useRef(null);\n  const [fadeout, setfadeout] = useState(false);\n  useEffect(() => {\n    if (interactReducer) {\n      if (interacttime.current) {\n        clearTimeout(interacttime.current);\n      }\n\n      if (interacttime2.current) {\n        clearTimeout(interacttime2.current);\n      }\n\n      interacttime.current = setTimeout(() => {\n        setfadeout(true);\n\n        if (interacttime2.current) {\n          clearTimeout(interacttime2.current);\n        }\n\n        interacttime2.current = setTimeout(() => {\n          dispatch(UpdateInteract('', false));\n          setfadeout(false);\n        }, 1800);\n      }, 4000);\n    }\n  }, [interactReducer]); ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype;\n  var colorx = colortypeReducer === 0 ? darkmodeReducer ? colorReducerdark : colorReducer : colorReducer;\n  useEffect(() => {\n    if (ActiveAutoPlay[pey]) {\n      setTimeout(function () {\n        stopSlider(0);\n      }, 1500);\n    }\n  }, [ActiveAutoPlay[pey]]);\n  var autoSlideDisplay = \"none\";\n  var sliderLoader = \"\";\n\n  if (showSliderLoader) {\n    autoSlideDisplay = \"none\";\n    sliderLoader = \"\";\n  } else {\n    autoSlideDisplay = \"block\";\n    sliderLoader = \"superloaderAutoSlider\";\n  }\n\n  useEffect(() => {}, [sliderIndex]); ///\n  ///\n  ///\n  /// SPRING TRANSITION WITH INDEX\n\n  const transitions = useTransition(sliderIndex, {\n    key: sliderIndex,\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    config: {\n      duration: sliderDuration - 50\n    }\n  }); ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\n\n  const sliderFirstImageOnLoad = item => {\n    if (item === 0) {\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\n        setImageHeight(SlideimageRef.current.clientHeight);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\n\n\n  const sliderFirstImageOnLoadthumb = item => {\n    if (item === 0 && imageHeight === 0) {\n      if (SlideimageRefthumb.current && SlideimageRefthumb.current.clientHeight) {\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\n      }\n    }\n  };\n\n  const tiim = useRef(null);\n  const TouchTimer = useRef(null);\n  const TouchTimer22 = useRef(null);\n  const [Touched, setTouched] = useState(0);\n  const [cropInitialIn, setcropInitialIn] = useState([{\n    x: post.interact1ax,\n    y: post.interact1ay\n  }, {\n    x: post.interact2ax,\n    y: post.interact2ay\n  }, {\n    x: post.interact3ax,\n    y: post.interact3ay\n  }]);\n  const [cropInitialIn2, setcropInitialIn2] = useState([{\n    x: post.interact1bx,\n    y: post.interact1by\n  }, {\n    x: post.interact2bx,\n    y: post.interact2by\n  }, {\n    x: post.interact3bx,\n    y: post.interact3by\n  }]);\n  const [showIntImage, setshowIntImage] = useState(false);\n  const [startInteractivity, setstartInteractivity] = useState(true);\n\n  const containsURL = str => {\n    // Regular expression pattern to match URLs (simplified, not covering all cases)\n    const urlPattern = /(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*/i; // Test if the string contains a URL using the regular expression\n\n    return urlPattern.test(str);\n  };\n\n  const [data, setdata] = useState(null);\n  const [canvasInteractWidth, setcanvasInteractWidth] = useState(0);\n  const [imageWidthcss, setimageWidthcss] = useState(0);\n  const [imageHeightcss, setimageHeightcss] = useState(0);\n  const handleTouchStartIn = useCallback((event, type) => {\n    if (data) {///drawInteraction(0, event, 1);\n    }\n  }, [data]);\n  const ScaleCoOrdinates = useCallback((event, type) => {\n    if (postcanvasRef.current[sliderIndex]) {\n      const rect = postcanvasRef.current[sliderIndex].getBoundingClientRect();\n      const scaleX = postcanvasRef.current[sliderIndex].width / rect.width;\n      const scaleY = postcanvasRef.current[sliderIndex].height / rect.height;\n      return {\n        x: (event.clientX - rect.left) * scaleX,\n        y: (event.clientY - rect.top) * scaleY\n      };\n    } else {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n  }, []);\n  const acttii = useRef(null);\n  const [InteractClicked, setInteractClicked] = useState(false);\n  const postcanvasRef = useRef([]); ///\n  ///\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\n\n  const addPostCanvasRef = itemsRef => {\n    if (itemsRef && !postcanvasRef.current.includes(itemsRef)) {\n      postcanvasRef.current.push(itemsRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  };\n\n  const [HasInt, setHasInt] = useState(1000);\n  useLayoutEffect(() => {\n    if (itemCLICKED[pey]) {\n      if (post.interact1a) {\n        setHasInt(0);\n      }\n\n      if (post.interact2a) {\n        setHasInt(1);\n      }\n\n      if (post.interact3a) {\n        setHasInt(2);\n      }\n\n      if (HasInt === 1000) {} else {\n        setTimeout(() => {\n          setInteractClicked(true); ///  callInteract();\n        }, 500);\n      } ////check for interaction and display canvas image flip\n\n    }\n  }, [itemCLICKED[pey], showIntImage]);\n  const callInteract = useCallback(() => {\n    if (!postcanvasRef.current[0]) return;\n    const context = postcanvasRef.current[0].getContext(\"2d\");\n    context.clearRect(0, 0, postcanvasRef.current[0].width, postcanvasRef.current[0].height);\n    const previewFileReadimage = new Image();\n    previewFileReadimage.src = slides[0];\n\n    previewFileReadimage.onload = () => {\n      if (data !== previewFileReadimage) {\n        setdata(previewFileReadimage);\n        alert('jj');\n      }\n\n      const ratio = previewFileReadimage.naturalHeight / previewFileReadimage.naturalWidth;\n      const width = window.innerHeight / ratio;\n      setcanvasInteractWidth(width);\n      setimageWidthcss(postItemsRef.current[pey].clientWidth);\n      setimageHeightcss(postItemsRef.current[pey].clientHeight);\n    };\n  }, [slides, postItemsRef]);\n  useLayoutEffect(() => {\n    if (data) {\n      drawInteraction(0, 0, 0);\n    }\n  }, [data, imageWidthcss, imageHeightcss, postcanvasRef]);\n  const drawInteraction = useCallback((typex, event, clicked) => {\n    const adjustedPos = ScaleCoOrdinates(event, 0);\n    const xnew = adjustedPos.x;\n    const ynew = adjustedPos.y;\n\n    if (postcanvasRef.current[0]) {\n      const context = postcanvasRef.current[0].getContext(\"2d\");\n      postcanvasRef.current[0].height = window.innerHeight;\n      postcanvasRef.current[0].width = canvasInteractWidth;\n      requestAnimationFrame(() => {\n        context.drawImage(data, 0, 0, canvasInteractWidth, window.innerHeight);\n        const screenWidth = window.innerWidth * 0.94;\n        const pictureWidth = canvasInteractWidth;\n        const offsetX = (screenWidth - pictureWidth) / 2;\n        const xx = cropInitialIn[0].x - offsetX;\n        const yy = cropInitialIn[0].y;\n        const r = 35;\n        context.beginPath();\n        context.arc(xnew, ynew, 5, 0, Math.PI * 2);\n        context.fillStyle = \"rgba(250, 250,250,0)\";\n        context.fill();\n        context.closePath();\n        var clikarc1 = context.isPointInPath(xnew, ynew);\n        var intdata1 = HasInt === 0 ? post.interact1a : HasInt === 1 ? post.interact2a : post.interact3a;\n\n        if (intdata1) {\n          //alert('jj');\n          if ([0, 3].includes(typex)) {\n            context.beginPath();\n            context.arc(xx, yy, r, 0, Math.PI * 2);\n            clikarc1 = context.isPointInPath(xnew, ynew);\n            context.fillStyle = darkmodeReducer ? \"rgba(50, 50,50,0.3)\" : 'rgba(250, 250,250,0.3)';\n            context.closePath();\n            context.fill();\n            context.lineWidth = 2;\n            context.strokeStyle = darkmodeReducer ? \"#ffffff\" : '#333333';\n            context.stroke();\n          } else if (typex === 1) {\n            context.beginPath();\n            context.arc(xx, yy, r, 0, Math.PI * 2);\n            clikarc1 = context.isPointInPath(xnew, ynew);\n            context.fillStyle = `rgba(250, 250,250,0.0)`;\n            context.closePath();\n            context.fill();\n          }\n\n          if (typex === 3) {} else {\n            if (tiim.current) {\n              clearTimeout(tiim.current);\n            }\n\n            tiim.current = setTimeout(() => {\n              if (typex === 0 || typex === 3) {\n                drawInteraction(1, event, 0);\n              } else {\n                drawInteraction(0, event, 0);\n              }\n            }, 1000);\n          }\n\n          if (clicked === 1 && clikarc1) {\n            /// setShowInteract1(true);\n            dispatch(UpdateInteract(intdata1, true));\n          } else if (clicked === 1) {\n            /// context.clearRect(0, 0, canvasRefIn.current.width, canvasRefIn.current.height);\n            setstartInteractivity(false);\n\n            if (handleTouchMoveTimerss.current) {\n              clearTimeout(handleTouchMoveTimerss.current);\n            }\n\n            handleTouchMoveTimerss.current = setTimeout(() => {\n              setstartInteractivity(true);\n            }, 4000);\n          } else {}\n\n          postcanvasRef.current[0].style.width = `${imageWidthcss}px`;\n          postcanvasRef.current[0].style.height = `${imageHeightcss}px`;\n        }\n      });\n    }\n  }, [data, imageWidthcss, imageHeightcss, postcanvasRef]); ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n  const In = e => {\n    if (itemCLICKED[pey]) {\n      ////onMouseDown onMouseMove\n      ////touchDown = e.clientX\n      const touchDown = e.touches[0].clientX;\n      setTouchPosition(touchDown);\n    }\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH MOVE EVENT\n\n\n  const handleTouchMove = e => {\n    if (itemCLICKED[pey]) {\n      if (handleTouchMoveTimer.current) {\n        clearTimeout(handleTouchMoveTimer.current);\n      }\n\n      handleTouchMoveTimer.current = setTimeout(function () {\n        const touchDown = touchPosition;\n\n        if (touchDown === null) {\n          return;\n        } ////currentTouch = e.clientX\n\n\n        const currentTouch = e.touches[0].clientX;\n        const diff = touchDown - currentTouch;\n\n        if (diff > 40) {\n          nextSlide();\n        } else if (diff < -40) {\n          prevSlide();\n        } else {}\n\n        setTouchPosition(null);\n        return false;\n      }, 200);\n      return false;\n    }\n  }; ///\n  ///\n  ///\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\n\n\n  const waitChangeIndex = (data, state) => {\n    if (waitChangeIndexTimer.current) {\n      clearTimeout(waitChangeIndexTimer.current);\n    }\n\n    waitChangeIndexTimer.current = setTimeout(function () {\n      setSliderIndexSlow(state => data);\n    }, 500);\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE\n\n\n  const nextSlide = () => {\n    AUTOSlideLongImages(pey);\n\n    if (ActiveAutoPlay[pey]) {} else {\n      setshowSliderLoader(true);\n\n      if (autoPlayTimer.current) {\n        clearTimeout(autoPlayTimer.current);\n      }\n    } ///set((state) => (state + 1) % slides.length);\n\n\n    if (sliderIndex === slides.length - 1) {\n      setSliderIndex(sliderIndex => 0);\n      waitChangeIndex(0, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex + 1);\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\n    }\n\n    if (ActiveAutoPlay[pey]) {} else {\n      if (callAutoPlayAgainTimer.current) {\n        clearTimeout(callAutoPlayAgainTimer.current);\n      }\n\n      callAutoPlayAgainTimer.current = setTimeout(function () {\n        SliderAutoPlay(1);\n      }, sliderDuration);\n    }\n  }; ///\n  ///\n  ///\n  /// PREV SLIDE\n\n\n  const prevSlide = () => {\n    AUTOSlideLongImages(pey);\n\n    if (ActiveAutoPlay[pey]) {} else {\n      setshowSliderLoader(true);\n\n      if (autoPlayTimer.current) {\n        clearTimeout(autoPlayTimer.current);\n      }\n    }\n\n    if (sliderIndex === 0) {\n      setSliderIndex(sliderIndex => slides.length - 1);\n      waitChangeIndex(slides.length - 1, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex - 1);\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\n    }\n\n    if (ActiveAutoPlay[pey]) {} else {\n      if (callAutoPlayAgainTimer.current) {\n        clearTimeout(callAutoPlayAgainTimer.current);\n      }\n\n      callAutoPlayAgainTimer.current = setTimeout(function () {\n        SliderAutoPlay(1);\n      }, sliderDuration);\n    }\n  }; ///\n  ///\n  ///\n  /// CHANGE SLIDER CONTENT USING  DOTS\n\n\n  const GotoDots = clickedDot => {\n    setSliderIndex(sliderIndex => clickedDot);\n    waitChangeIndex(clickedDot, sliderIndex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      onTouchStart: In,\n      onTouchMove: handleTouchMove,\n      xs: 12,\n      style: {\n        position: \"relative\",\n        height: itemCLICKED[pey] ? `${itemOriginalPostHeight[pey]}px` : type === 1 ? `${itemOriginalPostHeight[pey]}px` : `${itemFinalPostHeight[pey]}px`,\n        padding: \"0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Loader, {\n        post: post,\n        autoSlideDisplay: autoSlideDisplay,\n        sliderLoader: sliderLoader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseOver: () => {\n          setZoomOutBigger(true);\n        },\n        onMouseOut: () => {\n          setZoomOutBigger(false);\n        },\n        style: {\n          position: \"absolute\",\n          zIndex: 30,\n          left: slides.length > 1 ? 165 : 25,\n          cursor: \"pointer\",\n          top: slides.length > 1 ? \"2.4vh\" : \"2.4vh\",\n          fontFamily: \"Arial, Helvetica, sans-serif\",\n          fontWeight: \"bolder\",\n          opacity: \"0.7\",\n          height: \"0px\",\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            setsliderIndexMini(sliderIndex);\n            setzoomClickedIndex(pey + 1);\n            type === 1 ? setminiProfile(false) : setminiProfile(true);\n          },\n          className: darkmodeReducer ? \"turlight\" : \"turdark\",\n          style: {\n            padding: \"1px\",\n            color: \"#ffffff\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ZoomOutIcon, {\n            className: darkmodeReducer ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-lightab  dontallowhighlighting zuperkingIcon  \",\n            style: {\n              fontSize: \"2.2vw\",\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 9\n      }, this), \" \", slides.length > 0 ? /*#__PURE__*/_jsxDEV(SliderNumber, {\n        post: post,\n        HasInt: HasInt,\n        startInteractivity: startInteractivity,\n        postDatainnerInteraction1: postDatainnerInteraction1,\n        postDatainnerInteraction2: postDatainnerInteraction2,\n        startSlider: startSlider,\n        ActiveAutoPlay: ActiveAutoPlay,\n        stopSlider: stopSlider,\n        activeSlide: sliderIndexSlow,\n        total: slides.length,\n        itemCLICKED: itemCLICKED,\n        pey: pey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Arrow, {\n        itemCLICKED: itemCLICKED,\n        pey: pey,\n        total: slides.length,\n        direction: \"left\",\n        clickSlideprev: prevSlide,\n        clickSlidenext: nextSlide,\n        itemOriginalPostHeight: itemOriginalPostHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 9\n      }, this), transitions((style, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(animated.img, {\n          onLoad: e => {\n            onPostsItemload(e, pey, i);\n          },\n          onMouseDown: clickslider,\n          ref: addPostItemsRef,\n          className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n          src: slidesThumb[i],\n          alt: \"a superstarz post \",\n          style: { ...style,\n            cursor: \"pointer\",\n            width: \"100%\",\n            height: type === 1 ? `auto` : itemheight[pey],\n            position: \"absolute\",\n            padding: \"0px\",\n            objectFit: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"cover\" : \"cover\",\n            objectPosition: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"50% top\" : \"50% 50\",\n            zIndex: 0,\n            float: \"left\",\n            filter: \"blur(0px)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(animated.img, {\n          onLoad: e => {\n            onPostsItemload(e, pey, i);\n          },\n          onMouseDown: clickslider,\n          className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n          src: slides[i],\n          alt: \"a superstarz post \",\n          style: { ...style,\n            cursor: \"pointer\",\n            width: \"100%\",\n            height: type === 1 ? `auto` : itemheight[pey],\n            position: \"absolute\",\n            padding: \"0px\",\n            objectFit: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"cover\" : \"cover\",\n            objectPosition: itemcroptype[pey] === 1 || itemcroptype[pey] === 2 ? \"50% top\" : \"50% 50\",\n            zIndex: 1,\n            float: \"left\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 13\n        }, this), HasInt === i && ActiveCanvas === pey ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n          onMouseUp: e => {\n            handleTouchStartIn(e, 0);\n          },\n          onTouchEnd: e => {\n            handleTouchStartIn(e, 1);\n          },\n          ref: addPostCanvasRef,\n          style: {\n            cursor: \"pointer\",\n            padding: \"0px\",\n            position: \"fixed\",\n            zIndex: 11,\n            top: \"0vh\",\n            margin: \"auto\",\n            backgroundColor: 'red',\n            display: itemCLICKED[pey] && InteractClicked ? startInteractivity ? \"block\" : \"none\" : \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 15\n        }, this) : null]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 11\n      }, this)), \" \", /*#__PURE__*/_jsxDEV(Dots, {\n        total: slides.length,\n        itemCLICKED: itemCLICKED,\n        pey: pey,\n        GotoDots: GotoDots,\n        slides: slides,\n        activeSlide: sliderIndexSlow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Sliderx, \"OBG/1GXzgjl2wlT8K8MsHyL+12g=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useTransition];\n});\n\n_c = Sliderx;\nexport const Slider = /*#__PURE__*/React.memo(Sliderx);\n_c2 = Slider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Sliderx\");\n$RefreshReg$(_c2, \"Slider\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/Slider.tsx"],"names":["React","useState","useRef","useCallback","useEffect","useLayoutEffect","Arrow","Dots","SliderNumber","Grid","animated","useTransition","useSelector","useDispatch","ZoomOutIcon","Loader","UpdateInteract","Sliderx","slides","slidesThumb","pey","addPostItemsRef","itemheight","onPostsItemClicked","onPostsItemload","post","itemFinalPostHeight","itemOriginalPostHeight","itemcroptype","itemCLICKED","setActiveAutoPlay","AUTOSlideLongImages","clickslider","stopSlider","SliderAutoPlay","showSliderLoader","setshowSliderLoader","autoPlayTimer","sliderIndex","setSliderIndex","sliderIndexSlow","setSliderIndexSlow","length","startSlider","ActiveAutoPlay","type","setminiProfile","miniProfile","setzoomClickedIndex","setsliderIndexMini","postDatainnerInteraction1","postDatainnerInteraction2","postItemsRef","ActiveCanvas","sliderDuration","aRef","allow4dev","REACT_APP_APPX_STATE","process","env","dispatch","waitChangeIndexTimer","handleTouchMoveTimerss","handleTouchMoveTimer","callAutoPlayAgainTimer","SlideimageRef","SlideimageRefthumb","imageHeight","setImageHeight","touchPosition","setTouchPosition","ShowInteract1","setShowInteract1","ShowInteract2","setShowInteract2","ZoomOutBigger","setZoomOutBigger","miniH","setminiH","ActiveId","state","ActiveAutoPlayReducer","ActiveIdReducer","screenHeight","darkmode","snapStart","activateLoader","historyscroll","interactContent","interact","GlobalReducer","screenHeightReducer","darkmodeReducer","snapStartReducer","activateLoaderReducer","historyscrollReducer","interactContentReducer","interactReducer","interacttime","interacttime2","fadeout","setfadeout","current","clearTimeout","setTimeout","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","colorx","autoSlideDisplay","sliderLoader","transitions","key","from","opacity","enter","leave","config","duration","sliderFirstImageOnLoad","item","clientHeight","sliderFirstImageOnLoadthumb","tiim","TouchTimer","TouchTimer22","Touched","setTouched","cropInitialIn","setcropInitialIn","x","interact1ax","y","interact1ay","interact2ax","interact2ay","interact3ax","interact3ay","cropInitialIn2","setcropInitialIn2","interact1bx","interact1by","interact2bx","interact2by","interact3bx","interact3by","showIntImage","setshowIntImage","startInteractivity","setstartInteractivity","containsURL","str","urlPattern","test","data","setdata","canvasInteractWidth","setcanvasInteractWidth","imageWidthcss","setimageWidthcss","imageHeightcss","setimageHeightcss","handleTouchStartIn","event","ScaleCoOrdinates","postcanvasRef","rect","getBoundingClientRect","scaleX","width","scaleY","height","clientX","left","clientY","top","acttii","InteractClicked","setInteractClicked","addPostCanvasRef","itemsRef","includes","push","HasInt","setHasInt","interact1a","interact2a","interact3a","callInteract","context","getContext","clearRect","previewFileReadimage","Image","src","onload","alert","ratio","naturalHeight","naturalWidth","window","innerHeight","clientWidth","drawInteraction","typex","clicked","adjustedPos","xnew","ynew","requestAnimationFrame","drawImage","screenWidth","innerWidth","pictureWidth","offsetX","xx","yy","r","beginPath","arc","Math","PI","fillStyle","fill","closePath","clikarc1","isPointInPath","intdata1","lineWidth","strokeStyle","stroke","style","In","e","touchDown","touches","handleTouchMove","currentTouch","diff","nextSlide","prevSlide","waitChangeIndex","GotoDots","clickedDot","position","padding","zIndex","cursor","fontFamily","fontWeight","fontSize","display","i","objectFit","objectPosition","float","filter","margin","backgroundColor","Slider","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useEffect, useLayoutEffect } from \"react\";\r\nimport { Arrow } from \"./Arrow\";\r\nimport { Dots } from \"./Dots\";\r\nimport { SliderNumber } from \"./SliderNumber\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { animated, useTransition } from \"react-spring\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport { matchMobile, matchPc, matchTablet } from \"../DetectDevice\";\r\nimport ZoomOutIcon from \"@mui/icons-material/ZoomOut\";\r\nimport { Loader } from \"./Loader\";\r\nimport { UpdateInteract } from \".././GlobalActions\";\r\n\r\n\r\n\r\nfunction Sliderx({\r\n  slides,\r\n  slidesThumb,\r\n  pey,\r\n  addPostItemsRef,\r\n  itemheight,\r\n  onPostsItemClicked,\r\n  onPostsItemload,\r\n  post,\r\n  itemFinalPostHeight,\r\n  itemOriginalPostHeight,\r\n  itemcroptype,\r\n  itemCLICKED,\r\n  setActiveAutoPlay,\r\n  AUTOSlideLongImages,\r\n  clickslider,\r\n  stopSlider,\r\n  SliderAutoPlay,\r\n  showSliderLoader,\r\n  setshowSliderLoader,\r\n  autoPlayTimer,\r\n  sliderIndex,\r\n  setSliderIndex,\r\n  sliderIndexSlow,\r\n  setSliderIndexSlow,\r\n  length,\r\n  startSlider,\r\n  ActiveAutoPlay,\r\n  type,\r\n  setminiProfile,\r\n  miniProfile,\r\n  setzoomClickedIndex,\r\n  setsliderIndexMini,\r\n  postDatainnerInteraction1,\r\n  postDatainnerInteraction2,\r\n  postItemsRef,\r\n  ActiveCanvas\r\n}: any): JSX.Element {\r\n  const [sliderDuration] = useState(1500);\r\n\r\n  const aRef: any = useRef(null);\r\n\r\n  var allow4dev = \"\";\r\n  const { REACT_APP_APPX_STATE } = process.env;\r\n\r\n  if (REACT_APP_APPX_STATE === \"dev\") {\r\n    allow4dev = \"http://localhost:1000\";\r\n  } else {\r\n    allow4dev = \"\";\r\n  }\r\n\r\n\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  /// const getWidth = () => window.innerWidth;\r\n  ///var newGetWidth = getWidth() * slides.length;\r\n\r\n  const waitChangeIndexTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n\r\n  const handleTouchMoveTimerss = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const handleTouchMoveTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const callAutoPlayAgainTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const SlideimageRef = useRef<HTMLImageElement>(null);\r\n\r\n  const SlideimageRefthumb = useRef<HTMLImageElement>(null);\r\n\r\n  const [imageHeight, setImageHeight] = useState(0);\r\n  const [touchPosition, setTouchPosition] = useState(null);\r\n\r\n\r\n  const [ShowInteract1, setShowInteract1] = useState(false);\r\n\r\n  const [ShowInteract2, setShowInteract2] = useState(false);\r\n\r\n  const [ZoomOutBigger, setZoomOutBigger] = useState<boolean>(false);\r\n\r\n  const [miniH, setminiH] = useState<number>(50);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n  interface RootStateActiveAutoPlayReducer {\r\n    ActiveAutoPlayReducer: {\r\n      ActiveId: number;\r\n    };\r\n  }\r\n  const { ActiveId } = useSelector((state: RootStateActiveAutoPlayReducer) => ({\r\n    ...state.ActiveAutoPlayReducer,\r\n  }));\r\n\r\n  const ActiveIdReducer = ActiveId;\r\n\r\n\r\n  ///\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      snapStart: boolean;\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n      activateLoader: boolean;\r\n      historyscroll: number;\r\n      interactContent: any;\r\n      interact: boolean;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const { screenHeight, darkmode, snapStart, activateLoader, historyscroll, interactContent, interact } =\r\n    useSelector((state: RootStateGlobalReducer) => ({\r\n      ...state.GlobalReducer,\r\n    }));\r\n  const screenHeightReducer = screenHeight;\r\n  const darkmodeReducer = darkmode;\r\n  const snapStartReducer = snapStart;\r\n  const activateLoaderReducer = activateLoader;\r\n  const historyscrollReducer = historyscroll;\r\n  const interactContentReducer: any = interactContent;\r\n  const interactReducer = interact;\r\n\r\n  const interacttime = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const interacttime2 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const [fadeout, setfadeout] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (interactReducer) {\r\n      if (interacttime.current) {\r\n        clearTimeout(interacttime.current);\r\n      }\r\n      if (interacttime2.current) {\r\n        clearTimeout(interacttime2.current);\r\n      }\r\n\r\n\r\n      interacttime.current = setTimeout(() => {\r\n\r\n        setfadeout(true);\r\n\r\n        if (interacttime2.current) {\r\n          clearTimeout(interacttime2.current);\r\n        }\r\n\r\n        interacttime2.current = setTimeout(() => {\r\n          dispatch(UpdateInteract('', false));\r\n\r\n\r\n          setfadeout(false);\r\n\r\n\r\n        }, 1800)\r\n\r\n\r\n\r\n      }, 4000)\r\n\r\n\r\n    }\r\n\r\n  }, [interactReducer]);\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  var colorx =\r\n    colortypeReducer === 0\r\n      ? darkmodeReducer\r\n        ? colorReducerdark\r\n        : colorReducer\r\n      : colorReducer;\r\n\r\n  useEffect(() => {\r\n    if (ActiveAutoPlay[pey]) {\r\n      setTimeout(function () {\r\n        stopSlider(0);\r\n      }, 1500);\r\n\r\n    }\r\n  }, [ActiveAutoPlay[pey]]);\r\n\r\n  var autoSlideDisplay = \"none\";\r\n  var sliderLoader = \"\";\r\n\r\n  if (showSliderLoader) {\r\n    autoSlideDisplay = \"none\";\r\n    sliderLoader = \"\";\r\n  } else {\r\n    autoSlideDisplay = \"block\";\r\n    sliderLoader = \"superloaderAutoSlider\";\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }, [sliderIndex]);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SPRING TRANSITION WITH INDEX\r\n  const transitions = useTransition(sliderIndex, {\r\n    key: sliderIndex,\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n    config: { duration: sliderDuration - 50 },\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\r\n  const sliderFirstImageOnLoad = (item: number) => {\r\n    if (item === 0) {\r\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\r\n        setImageHeight(SlideimageRef.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\r\n  const sliderFirstImageOnLoadthumb = (item: number) => {\r\n    if (item === 0 && imageHeight === 0) {\r\n      if (\r\n        SlideimageRefthumb.current &&\r\n        SlideimageRefthumb.current.clientHeight\r\n      ) {\r\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const tiim = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const TouchTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const TouchTimer22 = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const [Touched, setTouched] = useState(0);\r\n\r\n  const [cropInitialIn, setcropInitialIn] = useState([{ x: post.interact1ax, y: post.interact1ay }, { x: post.interact2ax, y: post.interact2ay }, { x: post.interact3ax, y: post.interact3ay }]);\r\n\r\n  const [cropInitialIn2, setcropInitialIn2] = useState([{ x: post.interact1bx, y: post.interact1by }, { x: post.interact2bx, y: post.interact2by }, { x: post.interact3bx, y: post.interact3by }]);\r\n\r\n  const [showIntImage, setshowIntImage] = useState(false)\r\n\r\n\r\n\r\n  const [startInteractivity, setstartInteractivity] = useState(true);\r\n\r\n  const containsURL = (str: any) => {\r\n    // Regular expression pattern to match URLs (simplified, not covering all cases)\r\n    const urlPattern = /(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*/i;\r\n\r\n    // Test if the string contains a URL using the regular expression\r\n    return urlPattern.test(str);\r\n  };\r\n\r\n\r\n\r\n  const [data, setdata] = useState(null);\r\n  const [canvasInteractWidth, setcanvasInteractWidth] = useState(0);\r\n  const [imageWidthcss, setimageWidthcss] = useState(0);\r\n  const [imageHeightcss, setimageHeightcss] = useState(0);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleTouchStartIn = useCallback((event: any, type: any) => {\r\n    if (data) {\r\n      ///drawInteraction(0, event, 1);\r\n    }\r\n  }, [data])\r\n\r\n\r\n\r\n  const ScaleCoOrdinates = useCallback((event: any, type: any) => {\r\n    if (postcanvasRef.current[sliderIndex]) {\r\n      const rect = postcanvasRef.current[sliderIndex].getBoundingClientRect();\r\n      const scaleX = postcanvasRef.current[sliderIndex].width / rect.width;\r\n      const scaleY = postcanvasRef.current[sliderIndex].height / rect.height;\r\n      return {\r\n        x: (event.clientX - rect.left) * scaleX,\r\n        y: (event.clientY - rect.top) * scaleY\r\n      };\r\n    } else {\r\n      return {\r\n        x: 0,\r\n        y: 0\r\n      };\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const acttii = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  const [InteractClicked, setInteractClicked] = useState(false);\r\n\r\n\r\n\r\n  const postcanvasRef = useRef<any>([]);\r\n  ///\r\n  ///\r\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\r\n  const addPostCanvasRef = (itemsRef: any) => {\r\n    if (itemsRef && !postcanvasRef.current.includes(itemsRef)) {\r\n      postcanvasRef.current.push(itemsRef);\r\n    }\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n\r\n\r\n  const [HasInt, setHasInt] = useState<number>(1000);\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    if (itemCLICKED[pey]) {\r\n\r\n      if (post.interact1a) {\r\n\r\n        setHasInt(0);\r\n      }\r\n\r\n\r\n      if (post.interact2a) {\r\n\r\n        setHasInt(1);\r\n      }\r\n\r\n\r\n      if (post.interact3a) {\r\n\r\n        setHasInt(2);\r\n      }\r\n\r\n      if (HasInt === 1000) { } else {\r\n        setTimeout(() => {\r\n          setInteractClicked(true);\r\n          ///  callInteract();\r\n        }, 500)\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n      ////check for interaction and display canvas image flip\r\n    }\r\n  }, [itemCLICKED[pey], showIntImage]);\r\n\r\n\r\n\r\n\r\n  const callInteract = useCallback(() => {\r\n    if (!postcanvasRef.current[0]) return;\r\n\r\n    const context = postcanvasRef.current[0].getContext(\"2d\");\r\n    context.clearRect(\r\n      0,\r\n      0,\r\n      postcanvasRef.current[0].width,\r\n      postcanvasRef.current[0].height\r\n    );\r\n    const previewFileReadimage: any = new Image();\r\n\r\n    previewFileReadimage.src = slides[0];\r\n\r\n    previewFileReadimage.onload = () => {\r\n      if (data !== previewFileReadimage) {\r\n        setdata(previewFileReadimage);\r\n        alert('jj');\r\n      }\r\n      const ratio =\r\n        previewFileReadimage.naturalHeight / previewFileReadimage.naturalWidth;\r\n      const width = window.innerHeight / ratio;\r\n      setcanvasInteractWidth(width);\r\n      setimageWidthcss(postItemsRef.current[pey].clientWidth);\r\n      setimageHeightcss(postItemsRef.current[pey].clientHeight);\r\n    };\r\n  }, [slides, postItemsRef]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (data) {\r\n      drawInteraction(0, 0, 0);\r\n    }\r\n  }, [data, imageWidthcss, imageHeightcss, postcanvasRef]);\r\n\r\n\r\n  const drawInteraction = useCallback((typex: any, event: any, clicked: number) => {\r\n\r\n    const adjustedPos = ScaleCoOrdinates(event, 0);\r\n    const xnew = adjustedPos.x;\r\n    const ynew = adjustedPos.y;\r\n\r\n    if (postcanvasRef.current[0]) {\r\n      const context = postcanvasRef.current[0].getContext(\"2d\");\r\n\r\n      postcanvasRef.current[0].height = window.innerHeight;\r\n      postcanvasRef.current[0].width = canvasInteractWidth;\r\n\r\n      requestAnimationFrame(() => {\r\n        context.drawImage(data, 0, 0, canvasInteractWidth, window.innerHeight);\r\n\r\n        const screenWidth = window.innerWidth * 0.94;\r\n        const pictureWidth = canvasInteractWidth;\r\n        const offsetX = (screenWidth - pictureWidth) / 2;\r\n\r\n        const xx = cropInitialIn[0].x - offsetX;\r\n        const yy = cropInitialIn[0].y;\r\n        const r = 35;\r\n\r\n        context.beginPath();\r\n        context.arc(xnew, ynew, 5, 0, Math.PI * 2);\r\n        context.fillStyle = \"rgba(250, 250,250,0)\";\r\n        context.fill();\r\n        context.closePath();\r\n\r\n        var clikarc1 = context.isPointInPath(xnew, ynew);\r\n\r\n\r\n\r\n        var intdata1 = HasInt === 0 ? post.interact1a : HasInt === 1 ? post.interact2a : post.interact3a;\r\n\r\n\r\n\r\n        if (intdata1) {\r\n\r\n          //alert('jj');\r\n          if ([0, 3].includes(typex)) {\r\n            context.beginPath();\r\n            context.arc(xx, yy, r, 0, Math.PI * 2);\r\n\r\n            clikarc1 = context.isPointInPath(xnew, ynew);\r\n            context.fillStyle = darkmodeReducer ? \"rgba(50, 50,50,0.3)\" : 'rgba(250, 250,250,0.3)';\r\n            context.closePath();\r\n            context.fill();\r\n            context.lineWidth = 2;\r\n            context.strokeStyle = darkmodeReducer ? \"#ffffff\" : '#333333';\r\n            context.stroke();\r\n\r\n\r\n          }\r\n          else if (typex === 1) {\r\n            context.beginPath();\r\n            context.arc(xx, yy, r, 0, Math.PI * 2);\r\n            clikarc1 = context.isPointInPath(xnew, ynew);\r\n\r\n\r\n            context.fillStyle = `rgba(250, 250,250,0.0)`;\r\n            context.closePath();\r\n            context.fill();\r\n          }\r\n\r\n          if (typex === 3) {\r\n          } else {\r\n\r\n            if (tiim.current) {\r\n              clearTimeout(tiim.current);\r\n            }\r\n            tiim.current = setTimeout(() => {\r\n\r\n\r\n\r\n              if (typex === 0 || typex === 3) {\r\n                drawInteraction(1, event, 0);\r\n              } else { drawInteraction(0, event, 0); }\r\n\r\n            }, 1000)\r\n\r\n          }\r\n\r\n\r\n\r\n          if (clicked === 1 && clikarc1) {\r\n            /// setShowInteract1(true);\r\n\r\n            dispatch(UpdateInteract(intdata1, true));\r\n\r\n\r\n\r\n          } else if (clicked === 1) {\r\n\r\n\r\n\r\n            /// context.clearRect(0, 0, canvasRefIn.current.width, canvasRefIn.current.height);\r\n            setstartInteractivity(false);\r\n\r\n\r\n            if (handleTouchMoveTimerss.current) {\r\n              clearTimeout(handleTouchMoveTimerss.current);\r\n            }\r\n\r\n            handleTouchMoveTimerss.current = setTimeout(() => { setstartInteractivity(true); }, 4000)\r\n\r\n\r\n\r\n\r\n          } else { }\r\n\r\n\r\n          postcanvasRef.current[0].style.width = `${imageWidthcss}px`;\r\n          postcanvasRef.current[0].style.height = `${imageHeightcss}px`;\r\n\r\n        }\r\n\r\n      });\r\n    }\r\n  }, [data, imageWidthcss, imageHeightcss, postcanvasRef]);\r\n\r\n\r\n\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const In = (e: any) => {\r\n    if (itemCLICKED[pey]) {\r\n      ////onMouseDown onMouseMove\r\n      ////touchDown = e.clientX\r\n      const touchDown = e.touches[0].clientX;\r\n      setTouchPosition(touchDown);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH MOVE EVENT\r\n  const handleTouchMove = (e: any) => {\r\n    if (itemCLICKED[pey]) {\r\n      if (handleTouchMoveTimer.current) {\r\n        clearTimeout(handleTouchMoveTimer.current);\r\n      }\r\n      handleTouchMoveTimer.current = setTimeout(function () {\r\n        const touchDown = touchPosition;\r\n\r\n        if (touchDown === null) {\r\n          return;\r\n        }\r\n        ////currentTouch = e.clientX\r\n        const currentTouch = e.touches[0].clientX;\r\n        const diff = touchDown - currentTouch;\r\n\r\n        if (diff > 40) {\r\n          nextSlide();\r\n        } else if (diff < -40) {\r\n          prevSlide();\r\n        } else {\r\n        }\r\n\r\n        setTouchPosition(null);\r\n        return false;\r\n      }, 200);\r\n\r\n      return false;\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\r\n  const waitChangeIndex = (data: number, state: any) => {\r\n    if (waitChangeIndexTimer.current) {\r\n      clearTimeout(waitChangeIndexTimer.current);\r\n    }\r\n    waitChangeIndexTimer.current = setTimeout(function () {\r\n      setSliderIndexSlow((state: any) => data);\r\n    }, 500);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const nextSlide = () => {\r\n    AUTOSlideLongImages(pey);\r\n\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      setshowSliderLoader(true);\r\n      if (autoPlayTimer.current) {\r\n        clearTimeout(autoPlayTimer.current);\r\n      }\r\n    }\r\n\r\n    ///set((state) => (state + 1) % slides.length);\r\n    if (sliderIndex === slides.length - 1) {\r\n      setSliderIndex((sliderIndex: any) => 0);\r\n      waitChangeIndex(0, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex: any) => sliderIndex + 1);\r\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\r\n    }\r\n\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      if (callAutoPlayAgainTimer.current) {\r\n        clearTimeout(callAutoPlayAgainTimer.current);\r\n      }\r\n      callAutoPlayAgainTimer.current = setTimeout(function () {\r\n        SliderAutoPlay(1);\r\n      }, sliderDuration);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PREV SLIDE\r\n  const prevSlide = () => {\r\n    AUTOSlideLongImages(pey);\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      setshowSliderLoader(true);\r\n      if (autoPlayTimer.current) {\r\n        clearTimeout(autoPlayTimer.current);\r\n      }\r\n    }\r\n\r\n    if (sliderIndex === 0) {\r\n      setSliderIndex((sliderIndex: any) => slides.length - 1);\r\n      waitChangeIndex(slides.length - 1, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex: any) => sliderIndex - 1);\r\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\r\n    }\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      if (callAutoPlayAgainTimer.current) {\r\n        clearTimeout(callAutoPlayAgainTimer.current);\r\n      }\r\n      callAutoPlayAgainTimer.current = setTimeout(function () {\r\n        SliderAutoPlay(1);\r\n      }, sliderDuration);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// CHANGE SLIDER CONTENT USING  DOTS\r\n  const GotoDots = (clickedDot: number) => {\r\n    setSliderIndex((sliderIndex: any) => clickedDot);\r\n    waitChangeIndex(clickedDot, sliderIndex);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        item\r\n        onTouchStart={In}\r\n        onTouchMove={handleTouchMove}\r\n        xs={12}\r\n        style={{\r\n          position: \"relative\",\r\n          height: itemCLICKED[pey]\r\n            ? `${itemOriginalPostHeight[pey]}px`\r\n            : type === 1\r\n              ? `${itemOriginalPostHeight[pey]}px`\r\n              : `${itemFinalPostHeight[pey]}px`,\r\n          padding: \"0px\",\r\n        }}\r\n      >\r\n        <Loader\r\n          post={post}\r\n          autoSlideDisplay={autoSlideDisplay}\r\n          sliderLoader={sliderLoader}\r\n        />\r\n        <div\r\n          onMouseOver={() => {\r\n            setZoomOutBigger(true);\r\n          }}\r\n          onMouseOut={() => {\r\n            setZoomOutBigger(false);\r\n          }}\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 30,\r\n            left: slides.length > 1 ? 165 : 25,\r\n            cursor: \"pointer\",\r\n            top: slides.length > 1 ? \"2.4vh\" : \"2.4vh\",\r\n            fontFamily: \"Arial, Helvetica, sans-serif\",\r\n            fontWeight: \"bolder\",\r\n            opacity: \"0.7\",\r\n            height: \"0px\",\r\n            padding: \"0px\",\r\n          }}\r\n        >\r\n          <span\r\n            onClick={() => {\r\n              setsliderIndexMini(sliderIndex);\r\n              setzoomClickedIndex(pey + 1);\r\n              type === 1 ? setminiProfile(false) : setminiProfile(true);\r\n            }}\r\n            className={darkmodeReducer ? \"turlight\" : \"turdark\"}\r\n            style={{\r\n              padding: \"1px\",\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            <ZoomOutIcon\r\n              className={\r\n                darkmodeReducer\r\n                  ? \"make-small-icons-clickable-darkab dontallowhighlighting zuperkingIcon \"\r\n                  : \"make-small-icons-clickable-lightab  dontallowhighlighting zuperkingIcon  \"\r\n              }\r\n              style={{\r\n                fontSize: \"2.2vw\",\r\n                display: \"none\",\r\n              }}\r\n            />\r\n          </span>\r\n        </div>{\" \"}\r\n        {slides.length > 0 ? (\r\n          <SliderNumber\r\n            post={post}\r\n            HasInt={HasInt}\r\n            startInteractivity={startInteractivity}\r\n\r\n            postDatainnerInteraction1={postDatainnerInteraction1}\r\n            postDatainnerInteraction2={postDatainnerInteraction2}\r\n            startSlider={startSlider}\r\n            ActiveAutoPlay={ActiveAutoPlay}\r\n            stopSlider={stopSlider}\r\n            activeSlide={sliderIndexSlow}\r\n            total={slides.length}\r\n            itemCLICKED={itemCLICKED}\r\n            pey={pey}\r\n\r\n          />\r\n        ) : null}\r\n        <Arrow\r\n          itemCLICKED={itemCLICKED}\r\n          pey={pey}\r\n          total={slides.length}\r\n          direction=\"left\"\r\n          clickSlideprev={prevSlide}\r\n          clickSlidenext={nextSlide}\r\n          itemOriginalPostHeight={itemOriginalPostHeight}\r\n        />\r\n        {transitions((style, i) => (\r\n          <div key={i}>\r\n            <animated.img\r\n              onLoad={(e: any) => {\r\n                onPostsItemload(e, pey, i);\r\n              }}\r\n              onMouseDown={clickslider}\r\n              ref={addPostItemsRef}\r\n              className={\r\n                darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n              }\r\n              src={slidesThumb[i]}\r\n              alt=\"a superstarz post \"\r\n              style={{\r\n                ...style,\r\n                cursor: \"pointer\",\r\n                width: \"100%\",\r\n                height: type === 1 ? `auto` : itemheight[pey],\r\n                position: \"absolute\",\r\n                padding: \"0px\",\r\n                objectFit:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"cover\"\r\n                    : \"cover\",\r\n                objectPosition:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"50% top\"\r\n                    : \"50% 50\",\r\n                zIndex: 0,\r\n                float: \"left\",\r\n                filter: \"blur(0px)\",\r\n              }}\r\n            />\r\n            <animated.img\r\n              onLoad={(e: any) => {\r\n                onPostsItemload(e, pey, i);\r\n              }}\r\n              onMouseDown={clickslider}\r\n              className={\r\n                darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n              }\r\n              src={slides[i]}\r\n              alt=\"a superstarz post \"\r\n              style={{\r\n                ...style,\r\n                cursor: \"pointer\",\r\n                width: \"100%\",\r\n                height: type === 1 ? `auto` : itemheight[pey],\r\n                position: \"absolute\",\r\n                padding: \"0px\",\r\n                objectFit:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"cover\"\r\n                    : \"cover\",\r\n                objectPosition:\r\n                  itemcroptype[pey] === 1 || itemcroptype[pey] === 2\r\n                    ? \"50% top\"\r\n                    : \"50% 50\",\r\n                zIndex: 1,\r\n                float: \"left\",\r\n              }}\r\n            />\r\n\r\n\r\n            {HasInt === i && ActiveCanvas === pey ? (\r\n              <canvas\r\n                onMouseUp={(e: any) => {\r\n                  handleTouchStartIn(e, 0);\r\n                }}\r\n                onTouchEnd={(e: any) => {\r\n                  handleTouchStartIn(e, 1);\r\n                }}\r\n                ref={addPostCanvasRef}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  padding: \"0px\",\r\n                  position: \"fixed\",\r\n                  zIndex: 11,\r\n                  top: \"0vh\",\r\n                  margin: \"auto\",\r\n                  backgroundColor: 'red',\r\n\r\n                  display:\r\n                    itemCLICKED[pey] && InteractClicked\r\n                      ? startInteractivity\r\n                        ? \"block\"\r\n                        : \"none\"\r\n                      : \"none\",\r\n                }}\r\n              />\r\n            ) : null}\r\n\r\n\r\n          </div>\r\n        ))}{\" \"}\r\n        <Dots\r\n          total={slides.length}\r\n          itemCLICKED={itemCLICKED}\r\n          pey={pey}\r\n          GotoDots={GotoDots}\r\n          slides={slides}\r\n          activeSlide={sliderIndexSlow}\r\n        />\r\n\r\n\r\n\r\n\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Slider = React.memo(Sliderx);\r\n"]},"metadata":{},"sourceType":"module"}