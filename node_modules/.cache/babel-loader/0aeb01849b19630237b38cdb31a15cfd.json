{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\ImageTobeFiltered.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ImageTobeFilteredx({\n  filterImage,\n  index,\n  itemUploadRef,\n  setActivatefilterImage\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  const filterbaseimageRef = useRef(null);\n\n  const gg = () => {\n    setActivatefilterImage(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: itemUploadRef.current[index] ? /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: filterbaseimageRef,\n      onClick: gg,\n      src: itemUploadRef.current ? itemUploadRef.current[index].src : null,\n      style: {\n        width: \"30%\",\n        height: \"auto\",\n        position: \"relative\",\n        margin: \"auto\",\n        marginRight: index === 0 ? \"20px\" : \"0px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(ImageTobeFilteredx, \"WwMgEvMJs41DZSxO9g8pYf0H4Qo=\");\n\n_c = ImageTobeFilteredx;\nexport const ImageTobeFiltered = /*#__PURE__*/React.memo(ImageTobeFilteredx);\n_c2 = ImageTobeFiltered;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImageTobeFilteredx\");\n$RefreshReg$(_c2, \"ImageTobeFiltered\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/ImageTobeFiltered.tsx"],"names":["React","useRef","ImageTobeFilteredx","filterImage","index","itemUploadRef","setActivatefilterImage","filterbaseimageRef","gg","current","src","width","height","position","margin","marginRight","ImageTobeFiltered","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,MADF,QAMO,OANP;;;;AAyBA,SAASC,kBAAT,CAA4B;AAC1BC,EAAAA,WAD0B;AAE1BC,EAAAA,KAF0B;AAG1BC,EAAAA,aAH0B;AAI1BC,EAAAA;AAJ0B,CAA5B,EAKqB;AAAA;;AACnB;AACA;AACA;AACA,QAAMC,kBAAuB,GAAGN,MAAM,CAAC,IAAD,CAAtC;;AAEA,QAAMO,EAAE,GAAE,MAAK;AAACF,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AAA+B,GAA/C;;AACA,sBACE;AAAA,cACGD,aAAa,CAACI,OAAd,CAAsBL,KAAtB,iBACC;AACE,MAAA,GAAG,EAAEG,kBADP;AAEE,MAAA,OAAO,EAAEC,EAFX;AAGE,MAAA,GAAG,EAAEH,aAAa,CAACI,OAAd,GAAwBJ,aAAa,CAACI,OAAd,CAAsBL,KAAtB,EAA6BM,GAArD,GAA2D,IAHlE;AAIE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,KADF;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,QAAQ,EAAE,UAHL;AAILC,QAAAA,MAAM,EAAE,MAJH;AAKLC,QAAAA,WAAW,EAAEX,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuB;AAL/B;AAJT;AAAA;AAAA;AAAA;AAAA,YADD,GAaG;AAdN,mBADF;AAkBD;;GA9BQF,kB;;KAAAA,kB;AAgCT,OAAO,MAAMc,iBAAiB,gBAAGhB,KAAK,CAACiB,IAAN,CAAWf,kBAAX,CAA1B;MAAMc,iB","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { PreviewCanvas } from \"./PreviewCanvas\";\r\n\r\nfunction ImageTobeFilteredx({\r\n  filterImage,\r\n  index,\r\n  itemUploadRef,\r\n  setActivatefilterImage,\r\n}: any): JSX.Element {\r\n  ///\r\n  ///\r\n  ///\r\n  const filterbaseimageRef: any = useRef(null);\r\n\r\n  const gg =() =>{setActivatefilterImage(false);}\r\n  return (\r\n    <>\r\n      {itemUploadRef.current[index] ? (\r\n        <img\r\n          ref={filterbaseimageRef}\r\n          onClick={gg}\r\n          src={itemUploadRef.current ? itemUploadRef.current[index].src : null}\r\n          style={{\r\n            width: \"30%\",\r\n            height: \"auto\",\r\n            position: \"relative\",\r\n            margin: \"auto\",\r\n            marginRight: index === 0 ? \"20px\" : \"0px\",\r\n          }}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const ImageTobeFiltered = React.memo(ImageTobeFilteredx);\r\n"]},"metadata":{},"sourceType":"module"}