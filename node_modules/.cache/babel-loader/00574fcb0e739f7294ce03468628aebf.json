{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\SuperLoader.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SuperLoaderx() {\n  _s();\n\n  ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n  const {\n    loader,\n    loaderLength\n  } = useSelector(state => ({ ...state.GlobalReducerLoader\n  }));\n  const loaderReducer = loader;\n  const loaderLengthReducer = loaderLength; ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  var superloader = \"\";\n  var superloaderDisplay = \"none\";\n\n  if (loaderReducer) {\n    if (loaderLengthReducer === \"full\") {\n      superloader = \"superloader\";\n    } else {\n      superloader = \"superloader\";\n    }\n\n    superloaderDisplay = \"block\";\n  } else {\n    superloader = \"\";\n    superloaderDisplay = \"none\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: darkmodeReducer ? `${superloader} turdark` : `${superloader} turlight`,\n      style: {\n        boxShadow: `0 0 3px ${colorReducer}`,\n        backgroundColor: colorReducer,\n        height: \"3px\",\n        position: \"fixed\",\n        display: superloaderDisplay,\n        zIndex: 100000,\n        top: \"0em\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SuperLoaderx, \"n3oZeC1NXXIjI1m+iRyRX+ShROg=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = SuperLoaderx;\nexport const SuperLoader = /*#__PURE__*/React.memo(SuperLoaderx);\n_c2 = SuperLoader;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SuperLoaderx\");\n$RefreshReg$(_c2, \"SuperLoader\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/SuperLoader.tsx"],"names":["React","Grid","useSelector","SuperLoaderx","loader","loaderLength","state","GlobalReducerLoader","loaderReducer","loaderLengthReducer","darkmode","GlobalReducer","darkmodeReducer","color","GlobalReducerColor","colorReducer","superloader","superloaderDisplay","boxShadow","backgroundColor","height","position","display","zIndex","top","SuperLoader","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,mBAArB;AAEA,SAASC,WAAT,QAA4B,aAA5B;;;;AAEA,SAASC,YAAT,GAAqC;AAAA;;AACnC;AACA;AACA;AACA;AAOA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA2BH,WAAW,CACzCI,KAAD,KAAoC,EAClC,GAAGA,KAAK,CAACC;AADyB,GAApC,CAD0C,CAA5C;AAKA,QAAMC,aAAa,GAAGJ,MAAtB;AACA,QAAMK,mBAAmB,GAAGJ,YAA5B,CAjBmC,CAmBnC;AACA;AACA;AACA;;AAMA,QAAM;AAAEK,IAAAA;AAAF,MAAeR,WAAW,CAAEI,KAAD,KAAoC,EACnE,GAAGA,KAAK,CAACK;AAD0D,GAApC,CAAD,CAAhC;AAGA,QAAMC,eAAe,GAAGF,QAAxB,CA/BmC,CAiCnC;AACA;AACA;AACA;;AAMA,QAAM;AAAEG,IAAAA;AAAF,MAAYX,WAAW,CAAEI,KAAD,KAAmC,EAC/D,GAAGA,KAAK,CAACQ;AADsD,GAAnC,CAAD,CAA7B;AAGA,QAAMC,YAAY,GAAGF,KAArB;AAEA,MAAIG,WAAW,GAAG,EAAlB;AACA,MAAIC,kBAAkB,GAAG,MAAzB;;AAEA,MAAIT,aAAJ,EAAmB;AACjB,QAAIC,mBAAmB,KAAK,MAA5B,EAAoC;AAClCO,MAAAA,WAAW,GAAG,aAAd;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,GAAG,aAAd;AACD;;AACDC,IAAAA,kBAAkB,GAAG,OAArB;AACD,GAPD,MAOO;AACLD,IAAAA,WAAW,GAAG,EAAd;AACAC,IAAAA,kBAAkB,GAAG,MAArB;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,SAAS,EACPL,eAAe,GAAI,GAAEI,WAAY,UAAlB,GAA+B,GAAEA,WAAY,WAHhE;AAKE,MAAA,KAAK,EAAE;AACLE,QAAAA,SAAS,EAAG,WAAUH,YAAa,EAD9B;AAELI,QAAAA,eAAe,EAAEJ,YAFZ;AAGLK,QAAAA,MAAM,EAAE,KAHH;AAILC,QAAAA,QAAQ,EAAE,OAJL;AAKLC,QAAAA,OAAO,EAAEL,kBALJ;AAMLM,QAAAA,MAAM,EAAE,MANH;AAOLC,QAAAA,GAAG,EAAE;AAPA;AALT;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmBD;;GAjFQrB,Y;UAW0BD,W,EAiBZA,W,EAcHA,W;;;KA1CXC,Y;AAmFT,OAAO,MAAMsB,WAAW,gBAAGzB,KAAK,CAAC0B,IAAN,CAAWvB,YAAX,CAApB;MAAMsB,W","sourcesContent":["import React from \"react\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction SuperLoaderx(): JSX.Element {\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateLoaderReducer {\r\n    GlobalReducerLoader: {\r\n      loader: boolean;\r\n      loaderLength: string;\r\n    };\r\n  }\r\n  const { loader, loaderLength } = useSelector(\r\n    (state: RootStateLoaderReducer) => ({\r\n      ...state.GlobalReducerLoader,\r\n    })\r\n  );\r\n  const loaderReducer = loader;\r\n  const loaderLengthReducer = loaderLength;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n    };\r\n  }\r\n  const { color } = useSelector((state: RootStateReducerColor) => ({\r\n    ...state.GlobalReducerColor,\r\n  }));\r\n  const colorReducer = color;\r\n\r\n  var superloader = \"\";\r\n  var superloaderDisplay = \"none\";\r\n\r\n  if (loaderReducer) {\r\n    if (loaderLengthReducer === \"full\") {\r\n      superloader = \"superloader\";\r\n    } else {\r\n      superloader = \"superloader\";\r\n    }\r\n    superloaderDisplay = \"block\";\r\n  } else {\r\n    superloader = \"\";\r\n    superloaderDisplay = \"none\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        className={\r\n          darkmodeReducer ? `${superloader} turdark` : `${superloader} turlight`\r\n        }\r\n        style={{\r\n          boxShadow: `0 0 3px ${colorReducer}`,\r\n          backgroundColor: colorReducer,\r\n          height: \"3px\",\r\n          position: \"fixed\",\r\n          display: superloaderDisplay,\r\n          zIndex: 100000,\r\n          top: \"0em\",\r\n        }}\r\n      ></Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const SuperLoader = React.memo(SuperLoaderx);\r\n"]},"metadata":{},"sourceType":"module"}