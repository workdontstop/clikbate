{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\CropUploadMode.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useCallback, useLayoutEffect } from \"react\";\nimport { matchPc } from \"../DetectDevice\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { useSpring, animated } from \"react-spring\";\nimport Masonry from \"@mui/lab/Masonry\";\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\nimport PhotoIcon from \"@mui/icons-material/Photo\";\nimport GifIcon from \"@mui/icons-material/Gif\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport Axios from \"axios\";\nimport CropIcon from \"@mui/icons-material/Crop\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\nimport { PreviewCanvas } from \"./PreviewCanvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CropUploadModex({\n  CropSaved,\n  ActiveSlide,\n  handleTouchStartOptions,\n  handleTouchMoveOptions,\n  optionsCollectImageRef,\n  modalanimation,\n  getSliderWidthNew,\n  optionsClickType,\n  clickOptions,\n  optionsImages,\n  optionsNameData,\n  cropTOPLEVELScrollRef,\n  refWithimageData,\n  filterImage,\n  setfilterImage,\n  setActivatefilterImage,\n  selectedImage,\n  setselectedImage,\n  itemUploadRef\n}) {\n  _s();\n\n  const [superCropLoadFade, setsuperCropLoadFade] = useState(false);\n  const [allowFilters, setallowFilters] = useState(false);\n  const [allowCropAllCanvas, setallowCropAllCanvas] = useState(true);\n  var k1 = CropSaved ? 3 : 2;\n  var k2 = CropSaved ? 4 : 3; ///\n  ///\n  ///\n  ///DARKMODE FROM REDUX\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env; ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype;\n  const [cropimage, setcropimage] = useState(\"\");\n  const [showCrop, setshowCrop] = useState(false);\n  const [selectedImageUpload, setselectedImageUpload] = useState(null);\n  const updateColor = useCallback(formData => {\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/upload`, formData).then(response => {\n      if (response.data.message === \"ok\") {}\n    }).catch(function (error) {\n      alert(\"about color error\");\n    });\n  }, [REACT_APP_SUPERSTARZ_URL]); ///\n  ///\n  ///\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\n\n  const addUploadItemsRef = UploadRef => {\n    if (UploadRef && !itemUploadRef.current.includes(UploadRef)) {\n      itemUploadRef.current.push(UploadRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  };\n\n  const imageHandleChange = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const FileArray = Array.from(e.target.files).map(file => URL.createObjectURL(file));\n      setselectedImage(prevImages => prevImages.concat(FileArray));\n      setcropimage(FileArray[0]);\n      const formData = new FormData();\n\n      for (let i = 0; i < e.target.files.length; i++) {\n        formData.append(\"superImages\", e.target.files[i]);\n      }\n\n      setshowCrop(true);\n    }\n  }; ///////////////////////////////////////////////////////SUPER CROP ///////////////////////////////////\n\n\n  const cropCanvasRef = useRef(null); ////\n  ////\n  ////\n\n  const [cropArea, setcropArea] = useState(null); //\n\n  const [crop, setcrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [cropToo, setcropToo] = useState({\n    x: 0,\n    y: 0\n  });\n  const [cropInitial, setcropInitial] = useState({\n    x: 0,\n    y: 0\n  });\n  const [cropOffset, setcropOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [Drag, setDrag] = useState(false);\n  const [SourceWidthForCropX, setSourceWidthForCropX] = useState(0);\n  const [SourceWidthForCropY, setSourceWidthForCropY] = useState(0);\n  const [cropwidth, setcropwidth] = useState(0);\n  const [cropheight, setcropheight] = useState(0);\n  const [canvasToimage, setcanvasToimage] = useState(false);\n  const getpreviewFixedWidthRef = useRef(null);\n  const getCropHeightRef = useRef(null);\n  const getFixedCropWidthRef = useRef(null);\n  const [getCropHeight, setgetCropHeight] = useState(0);\n  const [getCropHeightRealImageRatio, setgetCropHeightRealImageRatio] = useState(0);\n  const [getFixedCropWidth, setgetFixedCropWidth] = useState(0);\n  const [getpreviewFixedWidth, setgetpreviewFixedWidth] = useState(0);\n  const [CropImageHolder, setCropImageHolder] = useState(null);\n  const [OriginalImageWidth, setOriginalImageWidth] = useState(0);\n  const [OriginalImageHeight, setOriginalImageHeight] = useState(0);\n  const [WideImageCheck, setWideImageCheck] = useState(false);\n  const hdcanvasvalue = 1.2;\n  const [BoxCropActivated, setBoxCropActivated] = useState(false);\n  const cropScrollRef = useRef(null);\n  const [widecheckhold, setwidecheckhold] = useState(true); ///\n  ///\n  ///\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\n\n  useLayoutEffect(() => {\n    if (getpreviewFixedWidthRef.current && getpreviewFixedWidthRef.current.clientWidth) {\n      setgetpreviewFixedWidth(getpreviewFixedWidthRef.current.clientWidth);\n    }\n\n    if (getCropHeightRef.current && getCropHeightRef.current.clientWidth) {\n      setgetCropHeight(getCropHeightRef.current.clientHeight * hdcanvasvalue);\n      setgetCropHeightRealImageRatio(getCropHeightRef.current.clientHeight);\n    }\n\n    if (getFixedCropWidthRef.current && getFixedCropWidthRef.current.clientWidth) {\n      setgetFixedCropWidth(getFixedCropWidthRef.current.clientWidth);\n    }\n  }, []); ///\n  ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n  const handleTouchStart = (e, type) => {\n    if (BoxCropActivated) {\n      if (type === 0) {\n        setcropInitial({ ...cropInitial,\n          x: e.clientX * 1.9 - cropOffset.x,\n          y: e.clientY * 1.9 - cropOffset.y\n        });\n      } else {\n        setcropInitial({ ...cropInitial,\n          x: e.touches[0].clientX * 1.9 - cropOffset.x,\n          y: e.touches[0].clientY * 1.9 - cropOffset.y\n        });\n      }\n\n      if (e.target) {\n        setDrag(true);\n      }\n    } else {}\n  };\n\n  const handleTouchEnd = () => {\n    setcropInitial({ ...cropInitial,\n      x: crop.x,\n      y: crop.y\n    });\n    setDrag(false);\n  };\n\n  const handleTouchDrag = (e, type) => {\n    if (Drag) {\n      if (type === 0) {\n        setcrop({ ...crop,\n          x: e.clientX * 1.9 - cropInitial.x,\n          y: e.clientY * 1.9 - cropInitial.y\n        });\n      } else {\n        setcrop({ ...crop,\n          x: e.touches[0].clientX * 1.9 - cropInitial.x,\n          y: e.touches[0].clientY * 1.9 - cropInitial.y\n        });\n      }\n\n      setcropOffset({ ...cropOffset,\n        x: crop.x,\n        y: crop.y\n      });\n    }\n  };\n\n  const draw = useCallback((ctx, dimensions, type, axis) => {\n    if (type === 1) {\n      ctx.drawImage(CropImageHolder, axis, 0, dimensions, getCropHeight);\n    } else if (type === 2) {\n      ctx.drawImage(CropImageHolder, 0, axis, getCropHeight, dimensions);\n    } else {\n      ctx.drawImage(CropImageHolder, 0, 0, OriginalImageWidth, OriginalImageHeight);\n    }\n  }, [OriginalImageWidth, OriginalImageHeight, CropImageHolder, getCropHeight]);\n  useLayoutEffect(() => {\n    const Newcropimage = new Image();\n    Newcropimage.src = cropimage;\n\n    Newcropimage.onload = function () {\n      if (CropImageHolder === Newcropimage) {} else {\n        setCropImageHolder(Newcropimage);\n      }\n\n      var reducequality;\n\n      if (Newcropimage.naturalWidth >= 1800) {\n        if (Newcropimage.naturalWidth >= 2600) {\n          var hold = Newcropimage.naturalWidth;\n          var dynamicCuttter = hold / 1800;\n          reducequality = 4 + dynamicCuttter;\n        } else {\n          reducequality = 3.1;\n        }\n      } else {\n        reducequality = 2.1;\n      }\n\n      var data1 = Newcropimage.naturalWidth / reducequality;\n      var data2 = Newcropimage.naturalHeight / reducequality;\n      var RatioNewcropimageNaturalHeight = Newcropimage.naturalHeight / getCropHeight;\n      var NewBoxRatioWidth_WIDEIMAGE = OriginalImageWidth / RatioNewcropimageNaturalHeight;\n\n      if (OriginalImageWidth === data1) {} else {\n        setOriginalImageWidth(data1);\n      }\n\n      if (OriginalImageHeight === data2) {} else {\n        setOriginalImageHeight(data2);\n      }\n\n      if (widecheckhold) {\n        if (Newcropimage.naturalWidth > Newcropimage.naturalHeight) {\n          setWideImageCheck(true);\n        } else {\n          setWideImageCheck(false);\n        }\n\n        setwidecheckhold(false);\n      } else {}\n\n      if (cropwidth === data1) {} else {\n        setcropwidth(data1);\n      }\n\n      if (cropheight === data2) {} else {\n        setcropheight(data2);\n      }\n    };\n  }, [showCrop, cropimage]);\n  useLayoutEffect(() => {\n    if (CropImageHolder && cropCanvasRef.current) {\n      const ctx = cropCanvasRef.current.getContext(\"2d\");\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / getCropHeight;\n      var NewBoxRatioWidth_WIDEIMAGE = OriginalImageWidth / RatiofromOriginalandfixedHeight;\n\n      if (SourceWidthForCropX === NewBoxRatioWidth_WIDEIMAGE) {} else {\n        setSourceWidthForCropX(NewBoxRatioWidth_WIDEIMAGE);\n      }\n\n      var RatiofromOriginalandfixedHeightx = OriginalImageWidth / getCropHeight;\n      var NewBoxRatioWidth_LONGIMAGE = OriginalImageHeight / RatiofromOriginalandfixedHeightx;\n\n      if (SourceWidthForCropY === NewBoxRatioWidth_LONGIMAGE) {} else {\n        setSourceWidthForCropY(NewBoxRatioWidth_LONGIMAGE);\n      }\n\n      var ratioh = OriginalImageWidth * 3 / OriginalImageWidth;\n      var ratiow = OriginalImageHeight * 3 / OriginalImageHeight;\n\n      if (BoxCropActivated) {\n        cropCanvasRef.current.width = getCropHeight;\n        cropCanvasRef.current.height = getCropHeight;\n      } else {\n        cropCanvasRef.current.width = OriginalImageWidth;\n        cropCanvasRef.current.height = OriginalImageHeight;\n      }\n\n      var centerpreview = cropCanvasRef.current.width / 1.5 - NewBoxRatioWidth_LONGIMAGE / 1.5;\n      var xtraZoom = getCropHeight / NewBoxRatioWidth_WIDEIMAGE;\n      var centerCropCanvas = cropCanvasRef.current.width / 2 - NewBoxRatioWidth_WIDEIMAGE / 2;\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / getCropHeightRealImageRatio;\n      var newcropCSSWidth = OriginalImageWidth / RatiofromOriginalandfixedHeight;\n\n      if (BoxCropActivated) {\n        var dragDistanceY = NewBoxRatioWidth_LONGIMAGE - getCropHeight;\n        var dragDistanceX = NewBoxRatioWidth_WIDEIMAGE - getCropHeight;\n\n        if (OriginalImageWidth > OriginalImageHeight) {\n          if (OriginalImageHeight === OriginalImageWidth) {\n            requestAnimationFrame(() => {\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, 0);\n            });\n          } else {\n            if (Drag) {\n              if (crop.x < -dragDistanceX) {\n                setcrop({ ...crop,\n                  x: -dragDistanceX\n                });\n              } else if (crop.x > 0) {\n                setcrop({ ...crop,\n                  x: 0\n                });\n              } else {}\n            }\n\n            requestAnimationFrame(() => {\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, crop.x);\n            });\n          }\n        } else {\n          if (OriginalImageHeight === OriginalImageWidth) {\n            requestAnimationFrame(() => {\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, 0);\n            });\n          } else {\n            if (Drag) {\n              if (crop.y < -dragDistanceY) {\n                setcrop({ ...crop,\n                  y: -dragDistanceY\n                });\n              } else if (crop.y > 0) {\n                setcrop({ ...crop,\n                  y: 0\n                });\n              } else {}\n            }\n\n            requestAnimationFrame(() => {\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, crop.y);\n            });\n          }\n        }\n\n        cropCanvasRef.current.style.width = `${getCropHeight / hdcanvasvalue}px`;\n        cropCanvasRef.current.style.height = `${getCropHeight / hdcanvasvalue}px`;\n      } else {\n        requestAnimationFrame(() => {\n          draw(ctx, 0, 3, 0);\n        });\n        cropCanvasRef.current.style.width = `${newcropCSSWidth}px`;\n        cropCanvasRef.current.style.height = `${getCropHeightRealImageRatio}px`;\n      }\n    }\n  }, [CropImageHolder, BoxCropActivated, OriginalImageWidth, OriginalImageHeight, crop]);\n\n  const gg = () => {};\n\n  const cropaspectchange = () => {\n    setBoxCropActivated(BoxCropActivated => !BoxCropActivated);\n  };\n\n  const complete = () => {\n    setTimeout(function () {\n      setcropToo({ ...cropToo,\n        x: crop.x,\n        y: crop.y\n      });\n      setsuperCropLoadFade(true);\n      setTimeout(function () {\n        setshowCrop(false);\n        setcanvasToimage(true);\n      }, 100);\n    }, 100);\n  };\n\n  const blank = () => {}; ///\n  ///\n  ///\n  /// CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\n\n\n  const ClickMonster = useCallback(ii => {\n    clickOptions(ii, optionsClickType, \"\");\n\n    if (ActiveSlide === 3 && ii === 3) {\n      if (allowFilters) {\n        setActivatefilterImage(true);\n        setallowCropAllCanvas(false);\n      }\n    }\n  }, [allowFilters, ActiveSlide, optionsClickType]); //\n  //\n  //\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\n\n  const animation = useSpring({\n    config: {\n      duration: 2000\n    },\n    opacity: showCrop ? 1 : 0\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [superCropLoadFade ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          backgroundColor: darkmodeReducer ? \"rgba(50,50,50,0.62)\" : \"rgba(250,250,250,0.6)\",\n          position: \"fixed\",\n          top: \"0px\",\n          width: \"100%\",\n          height: \"100%\",\n          zIndex: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(animated.div, {\n      style: { ...animation,\n        position: showCrop ? \"relative\" : \"fixed\",\n        top: showCrop ? \"0px\" : \"-800vh\",\n        backgroundColor: \"rgba(20,20,20,0.3)\",\n        width: \"100%\",\n        height: \"70%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          padding: \"0px\"\n        },\n        children: [\" \", allowCropAllCanvas ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n          onMouseDown: e => {\n            handleTouchStart(e, 0);\n          },\n          onTouchStart: e => {\n            handleTouchStart(e, 1);\n          },\n          onMouseMove: e => {\n            handleTouchDrag(e, 0);\n          },\n          onTouchMove: e => {\n            handleTouchDrag(e, 1);\n          },\n          onMouseUp: handleTouchEnd,\n          onTouchEnd: handleTouchEnd,\n          className: darkmodeReducer ? \"turdarkCrop topcanvas\" : \"turdarkCrop topcanvas\",\n          ref: cropCanvasRef,\n          style: {\n            padding: \"0px\",\n            margin: \"auto\",\n            cursor: \"pointer\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          style: {\n            padding: \"0px\",\n            bottom: \"13.6vh\",\n            margin: \"auto\",\n            width: `100%`,\n            height: \"0px\",\n            position: \"absolute\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            alignContent: \"center\",\n            alignSelf: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            style: {\n              padding: \"0px\",\n              height: \"0px\",\n              margin: \"auto\",\n              display: \"grid\",\n              alignItems: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CropIcon, {\n              onClick: cropaspectchange,\n              className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \",\n              style: {\n                margin: \"auto\",\n                marginRight: \"9%\",\n                fontSize: \"2.9vw\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            style: {\n              padding: \"0px\",\n              height: \"0px\",\n              margin: \"auto\",\n              display: \"grid\",\n              alignItems: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n              onClick: complete,\n              className: darkmodeReducer ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \" : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \",\n              style: {\n                margin: \"auto\",\n                marginLeft: \"9%\",\n                fontSize: \"2.9vw\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 7\n    }, this), showCrop ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: imageHandleChange,\n        type: \"file\",\n        name: \"superImages\",\n        accept: \"image/*\",\n        multiple: true,\n        id: \"file\",\n        style: {\n          visibility: \"hidden\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        onTouchStart: handleTouchStartOptions,\n        onTouchMove: handleTouchMoveOptions,\n        style: {\n          zIndex: 1,\n          padding: \"0px\",\n          top: matchPc ? \"-2vh\" : \"0vh\",\n          position: \"relative\",\n          margin: \"0 auto\",\n          overflow: \"hidden\",\n          left: \"0px\",\n          height: matchPc ? \"24.4vh\" : \"20.5vh\",\n          paddingBottom: \"1px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(animated.div, {\n          ref: optionsCollectImageRef,\n          style: modalanimation,\n          children: optionsImages.map((im, i) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [ActiveSlide === 1 && i === 1 ? /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"file\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => {\n                  clickOptions(i, optionsClickType, \"\");\n                },\n                style: {\n                  cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\n                  width: `${getSliderWidthNew}px`,\n                  height: `${getSliderWidthNew}px`,\n                  backgroundColor: darkmodeReducer ? \"rgba(010,010,010, 0.68)\" : \"rgba(220,220,220, 0.7)\",\n                  borderRadius: \"50%\",\n                  marginTop: \"2.15vh\",\n                  textAlign: \"center\",\n                  alignItems: \"center\",\n                  display: \"grid\",\n                  justifyContent: \"center\",\n                  boxShadow: darkmodeReducer ? ActiveSlide === i ? colortypeReducer === 0 ? `0 0 5.5px ${colorReducerdark}` : `0 0 5.5px ${colorReducer}` : \"0 0 5.5px#aaaaaa\" : ActiveSlide === i ? `0 0 5.5px ${colorReducer}` : \"0 0 5.45px#222222\"\n                },\n                children: /*#__PURE__*/_jsxDEV(PhotoIcon, {\n                  style: {\n                    fontSize: matchPc ? \"2vw\" : \"5vh\",\n                    color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                  },\n                  className: \"zuperkinginfo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 730,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: blank,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => {\n                    ClickMonster(i);\n                  },\n                  style: {\n                    cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\n                    width: `${getSliderWidthNew}px`,\n                    height: `${getSliderWidthNew}px`,\n                    backgroundColor: darkmodeReducer ? \"rgba(010,010,010, 0.68)\" : \"rgba(220,220,220, 0.7)\",\n                    borderRadius: \"50%\",\n                    marginTop: \"2.15vh\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    display: \"grid\",\n                    justifyContent: \"center\",\n                    boxShadow: darkmodeReducer ? ActiveSlide === i ? colortypeReducer === 0 ? `0 0 5.5px ${colorReducerdark}` : `0 0 5.5px ${colorReducer}` : \"0 0 5.5px#aaaaaa\" : ActiveSlide === i ? `0 0 5.5px ${colorReducer}` : \"0 0 5.45px#222222\"\n                  },\n                  children: [i === 0 ? /*#__PURE__*/_jsxDEV(MusicNoteIcon, {\n                    style: {\n                      fontSize: matchPc ? \"2vw\" : \"5vh\",\n                      color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                    },\n                    className: \"zuperkinginfo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 773,\n                    columnNumber: 29\n                  }, this) : null, i === 1 ? /*#__PURE__*/_jsxDEV(PhotoIcon, {\n                    style: {\n                      fontSize: matchPc ? \"2vw\" : \"5vh\",\n                      color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                    },\n                    className: \"zuperkinginfo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 782,\n                    columnNumber: 29\n                  }, this) : null, i === 2 ? /*#__PURE__*/_jsxDEV(GifIcon, {\n                    style: {\n                      fontSize: matchPc ? \"2.5vw\" : \"5vh\",\n                      color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                    },\n                    className: \"zuperkinginfo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 792,\n                    columnNumber: 29\n                  }, this) : null, i === 3 ? /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n                    style: {\n                      fontSize: matchPc ? \"2.3vw\" : \"5vh\",\n                      color: darkmodeReducer ? \"#eeeeee\" : \"#222222\"\n                    },\n                    className: \"zuperkinginfo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 801,\n                    columnNumber: 29\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 742,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              style: {\n                margin: \"auto\",\n                textAlign: \"center\",\n                position: \"relative\",\n                bottom: \"-0.5em\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                style: {\n                  fontSize: matchPc ? \"1.1vw\" : \"2vh\",\n                  fontWeight: \"bolder\",\n                  fontFamily: \"Arial, Helvetica, sans-serif\",\n                  visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\n                  color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\"\n                },\n                children: [\" \", optionsNameData[i]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [showCrop ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(animated.div, {\n            style: animation,\n            children: selectedImage.length > 0 ? /*#__PURE__*/_jsxDEV(Masonry, {\n              columns: matchPc ? selectedImage.length > 2 ? 3 : 2 : 1,\n              spacing: 0,\n              style: {\n                overflowX: \"hidden\",\n                position: \"relative\",\n                zIndex: 2\n              },\n              children: [selectedImage.map((photo, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(PreviewCanvas, {\n                    image: photo,\n                    cropTOPLEVELScrollRef: cropTOPLEVELScrollRef,\n                    index: index,\n                    setcropimage: setcropimage,\n                    setcrop: setcrop,\n                    crop: crop\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 863,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 862,\n                  columnNumber: 25\n                }, this);\n              }), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 19\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true) : null, /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: selectedImage.length > 0 ? /*#__PURE__*/_jsxDEV(Masonry, {\n            columns: matchPc ? selectedImage.length > 2 ? 3 : 2 : 1,\n            spacing: 0,\n            style: {\n              overflowX: \"hidden\",\n              zIndex: 2,\n              position: showCrop ? \"fixed\" : \"relative\",\n              top: showCrop ? \"-800vh\" : \"0px\"\n            },\n            children: [selectedImage.map((photo, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(PreviewCanvasCropAll, {\n                  allowCropAllCanvas: allowCropAllCanvas,\n                  showCrop: showCrop,\n                  WideImageCheck: WideImageCheck,\n                  SourceWidthForCropX: SourceWidthForCropX,\n                  SourceWidthForCropY: SourceWidthForCropY,\n                  hdcanvasvalue: hdcanvasvalue,\n                  BoxCropActivated: BoxCropActivated,\n                  cropheight: cropheight,\n                  cropwidth: cropwidth,\n                  CropImageHolder: CropImageHolder,\n                  cropCanvasRef: cropCanvasRef,\n                  crop: cropToo,\n                  image: photo,\n                  index: index,\n                  getpreviewFixedWidth: getpreviewFixedWidth,\n                  getCropHeight: getCropHeight,\n                  canvasToimage: canvasToimage,\n                  refWithimageData: refWithimageData,\n                  addUploadItemsRef: addUploadItemsRef,\n                  itemUploadRef: itemUploadRef,\n                  setsuperCropLoadFade: setsuperCropLoadFade,\n                  length: selectedImage.length,\n                  filterImage: filterImage,\n                  setfilterImage: setfilterImage,\n                  setallowFilters: setallowFilters\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 895,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 894,\n                columnNumber: 21\n              }, this);\n            }), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 15\n          }, this) : null\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        height: \"100%\",\n        position: \"fixed\",\n        top: \"-800vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getpreviewFixedWidthRef,\n          xs: 5,\n          style: {\n            padding: \"0px\",\n            height: \"40%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getFixedCropWidthRef,\n          xs: 4,\n          style: {\n            padding: \"0px\",\n            height: \"35%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          ref: getCropHeightRef,\n          xs: 12,\n          style: {\n            height: \"85%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CropUploadModex, \"Rw8g0dDMn9kiuQPGfPTxKj3U6RA=\", false, function () {\n  return [useSelector, useSelector, useSpring];\n});\n\n_c = CropUploadModex;\nexport const CropUploadMode = /*#__PURE__*/React.memo(CropUploadModex);\n_c2 = CropUploadMode;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CropUploadModex\");\n$RefreshReg$(_c2, \"CropUploadMode\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/CropUploadMode.tsx"],"names":["React","useRef","useState","useCallback","useLayoutEffect","matchPc","Grid","useSelector","useSpring","animated","Masonry","MusicNoteIcon","PhotoIcon","GifIcon","ChevronRightIcon","Axios","CropIcon","CheckIcon","PreviewCanvasCropAll","PreviewCanvas","CropUploadModex","CropSaved","ActiveSlide","handleTouchStartOptions","handleTouchMoveOptions","optionsCollectImageRef","modalanimation","getSliderWidthNew","optionsClickType","clickOptions","optionsImages","optionsNameData","cropTOPLEVELScrollRef","refWithimageData","filterImage","setfilterImage","setActivatefilterImage","selectedImage","setselectedImage","itemUploadRef","superCropLoadFade","setsuperCropLoadFade","allowFilters","setallowFilters","allowCropAllCanvas","setallowCropAllCanvas","k1","k2","darkmode","state","GlobalReducer","darkmodeReducer","REACT_APP_SUPERSTARZ_URL","process","env","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","cropimage","setcropimage","showCrop","setshowCrop","selectedImageUpload","setselectedImageUpload","updateColor","formData","post","then","response","data","message","catch","error","alert","addUploadItemsRef","UploadRef","current","includes","push","imageHandleChange","e","target","files","length","FileArray","Array","from","map","file","URL","createObjectURL","prevImages","concat","FormData","i","append","cropCanvasRef","cropArea","setcropArea","crop","setcrop","x","y","cropToo","setcropToo","cropInitial","setcropInitial","cropOffset","setcropOffset","Drag","setDrag","SourceWidthForCropX","setSourceWidthForCropX","SourceWidthForCropY","setSourceWidthForCropY","cropwidth","setcropwidth","cropheight","setcropheight","canvasToimage","setcanvasToimage","getpreviewFixedWidthRef","getCropHeightRef","getFixedCropWidthRef","getCropHeight","setgetCropHeight","getCropHeightRealImageRatio","setgetCropHeightRealImageRatio","getFixedCropWidth","setgetFixedCropWidth","getpreviewFixedWidth","setgetpreviewFixedWidth","CropImageHolder","setCropImageHolder","OriginalImageWidth","setOriginalImageWidth","OriginalImageHeight","setOriginalImageHeight","WideImageCheck","setWideImageCheck","hdcanvasvalue","BoxCropActivated","setBoxCropActivated","cropScrollRef","widecheckhold","setwidecheckhold","clientWidth","clientHeight","handleTouchStart","type","clientX","clientY","touches","handleTouchEnd","handleTouchDrag","draw","ctx","dimensions","axis","drawImage","Newcropimage","Image","src","onload","reducequality","naturalWidth","hold","dynamicCuttter","data1","data2","naturalHeight","RatioNewcropimageNaturalHeight","NewBoxRatioWidth_WIDEIMAGE","getContext","RatiofromOriginalandfixedHeight","RatiofromOriginalandfixedHeightx","NewBoxRatioWidth_LONGIMAGE","ratioh","ratiow","width","height","centerpreview","xtraZoom","centerCropCanvas","newcropCSSWidth","dragDistanceY","dragDistanceX","requestAnimationFrame","style","gg","cropaspectchange","complete","setTimeout","blank","ClickMonster","ii","animation","config","duration","opacity","backgroundColor","position","top","zIndex","padding","margin","cursor","bottom","display","justifyContent","alignItems","alignContent","alignSelf","marginRight","fontSize","marginLeft","visibility","overflow","left","paddingBottom","im","borderRadius","marginTop","textAlign","boxShadow","fontWeight","fontFamily","overflowX","photo","index","CropUploadMode","memo"],"mappings":"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","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { PreviewCanvas } from \"./PreviewCanvas\";\r\n\r\nfunction CropUploadModex({\r\n  CropSaved,\r\n  ActiveSlide,\r\n  handleTouchStartOptions,\r\n  handleTouchMoveOptions,\r\n  optionsCollectImageRef,\r\n  modalanimation,\r\n  getSliderWidthNew,\r\n  optionsClickType,\r\n  clickOptions,\r\n  optionsImages,\r\n  optionsNameData,\r\n  cropTOPLEVELScrollRef,\r\n  refWithimageData,\r\n  filterImage,\r\n  setfilterImage,\r\n  setActivatefilterImage,\r\n  selectedImage,\r\n  setselectedImage,\r\n  itemUploadRef,\r\n}: any): JSX.Element {\r\n  const [superCropLoadFade, setsuperCropLoadFade] = useState<boolean>(false);\r\n\r\n  const [allowFilters, setallowFilters] = useState<boolean>(false);\r\n\r\n  const [allowCropAllCanvas, setallowCropAllCanvas] = useState<boolean>(true);\r\n\r\n  var k1 = CropSaved ? 3 : 2;\r\n  var k2 = CropSaved ? 4 : 3;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///DARKMODE FROM REDUX\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n\r\n  const darkmodeReducer = darkmode;\r\n\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  const [cropimage, setcropimage] = useState<string | undefined>(\"\");\r\n  const [showCrop, setshowCrop] = useState<boolean>(false);\r\n\r\n  const [selectedImageUpload, setselectedImageUpload] = useState<any>(null);\r\n\r\n  const updateColor = useCallback(\r\n    (formData: any) => {\r\n      Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/upload`, formData)\r\n        .then((response) => {\r\n          if (response.data.message === \"ok\") {\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          alert(\"about color error\");\r\n        });\r\n    },\r\n    [REACT_APP_SUPERSTARZ_URL]\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\r\n  const addUploadItemsRef = (UploadRef: any) => {\r\n    if (UploadRef && !itemUploadRef.current.includes(UploadRef)) {\r\n      itemUploadRef.current.push(UploadRef);\r\n    }\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  const imageHandleChange = (e: any) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const FileArray = Array.from(e.target.files).map((file: any) =>\r\n        URL.createObjectURL(file)\r\n      );\r\n\r\n      setselectedImage((prevImages: any) => prevImages.concat(FileArray));\r\n\r\n      setcropimage(FileArray[0]);\r\n\r\n      const formData = new FormData();\r\n\r\n      for (let i = 0; i < e.target.files.length; i++) {\r\n        formData.append(\"superImages\", e.target.files[i]);\r\n      }\r\n\r\n      setshowCrop(true);\r\n    }\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////SUPER CROP ///////////////////////////////////\r\n\r\n  const cropCanvasRef: any = useRef(null);\r\n\r\n  ////\r\n  ////\r\n  ////\r\n  const [cropArea, setcropArea] = useState<any>(null);\r\n\r\n  //\r\n  const [crop, setcrop] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [cropToo, setcropToo] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [cropInitial, setcropInitial] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [cropOffset, setcropOffset] = useState<any>({ x: 0, y: 0 });\r\n\r\n  const [Drag, setDrag] = useState<boolean>(false);\r\n\r\n  const [SourceWidthForCropX, setSourceWidthForCropX] = useState(0);\r\n\r\n  const [SourceWidthForCropY, setSourceWidthForCropY] = useState(0);\r\n\r\n  const [cropwidth, setcropwidth] = useState(0);\r\n\r\n  const [cropheight, setcropheight] = useState(0);\r\n\r\n  const [canvasToimage, setcanvasToimage] = useState<boolean>(false);\r\n\r\n  const getpreviewFixedWidthRef = useRef<HTMLDivElement>(null);\r\n\r\n  const getCropHeightRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const getFixedCropWidthRef: any = useRef<HTMLDivElement>(null);\r\n\r\n  const [getCropHeight, setgetCropHeight] = useState(0);\r\n\r\n  const [getCropHeightRealImageRatio, setgetCropHeightRealImageRatio] =\r\n    useState(0);\r\n\r\n  const [getFixedCropWidth, setgetFixedCropWidth] = useState(0);\r\n\r\n  const [getpreviewFixedWidth, setgetpreviewFixedWidth] = useState(0);\r\n\r\n  const [CropImageHolder, setCropImageHolder] = useState<any>(null);\r\n\r\n  const [OriginalImageWidth, setOriginalImageWidth] = useState<number>(0);\r\n  const [OriginalImageHeight, setOriginalImageHeight] = useState<number>(0);\r\n\r\n  const [WideImageCheck, setWideImageCheck] = useState<boolean>(false);\r\n\r\n  const hdcanvasvalue = 1.2;\r\n\r\n  const [BoxCropActivated, setBoxCropActivated] = useState<boolean>(false);\r\n\r\n  const cropScrollRef: any = useRef(null);\r\n\r\n  const [widecheckhold, setwidecheckhold] = useState<boolean>(true);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\r\n  useLayoutEffect(() => {\r\n    if (\r\n      getpreviewFixedWidthRef.current &&\r\n      getpreviewFixedWidthRef.current.clientWidth\r\n    ) {\r\n      setgetpreviewFixedWidth(getpreviewFixedWidthRef.current.clientWidth);\r\n    }\r\n\r\n    if (getCropHeightRef.current && getCropHeightRef.current.clientWidth) {\r\n      setgetCropHeight(getCropHeightRef.current.clientHeight * hdcanvasvalue);\r\n      setgetCropHeightRealImageRatio(getCropHeightRef.current.clientHeight);\r\n    }\r\n\r\n    if (\r\n      getFixedCropWidthRef.current &&\r\n      getFixedCropWidthRef.current.clientWidth\r\n    ) {\r\n      setgetFixedCropWidth(getFixedCropWidthRef.current.clientWidth);\r\n    }\r\n  }, []);\r\n  ///\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const handleTouchStart = (e: any, type: any) => {\r\n    if (BoxCropActivated) {\r\n      if (type === 0) {\r\n        setcropInitial({\r\n          ...cropInitial,\r\n          x: e.clientX * 1.9 - cropOffset.x,\r\n          y: e.clientY * 1.9 - cropOffset.y,\r\n        });\r\n      } else {\r\n        setcropInitial({\r\n          ...cropInitial,\r\n          x: e.touches[0].clientX * 1.9 - cropOffset.x,\r\n          y: e.touches[0].clientY * 1.9 - cropOffset.y,\r\n        });\r\n      }\r\n      if (e.target) {\r\n        setDrag(true);\r\n      }\r\n    } else {\r\n    }\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    setcropInitial({\r\n      ...cropInitial,\r\n      x: crop.x,\r\n      y: crop.y,\r\n    });\r\n    setDrag(false);\r\n  };\r\n\r\n  const handleTouchDrag = (e: any, type: any) => {\r\n    if (Drag) {\r\n      if (type === 0) {\r\n        setcrop({\r\n          ...crop,\r\n          x: e.clientX * 1.9 - cropInitial.x,\r\n          y: e.clientY * 1.9 - cropInitial.y,\r\n        });\r\n      } else {\r\n        setcrop({\r\n          ...crop,\r\n          x: e.touches[0].clientX * 1.9 - cropInitial.x,\r\n          y: e.touches[0].clientY * 1.9 - cropInitial.y,\r\n        });\r\n      }\r\n\r\n      setcropOffset({\r\n        ...cropOffset,\r\n        x: crop.x,\r\n        y: crop.y,\r\n      });\r\n    }\r\n  };\r\n\r\n  const draw = useCallback(\r\n    (ctx: any, dimensions: any, type: number, axis: number) => {\r\n      if (type === 1) {\r\n        ctx.drawImage(CropImageHolder, axis, 0, dimensions, getCropHeight);\r\n      } else if (type === 2) {\r\n        ctx.drawImage(CropImageHolder, 0, axis, getCropHeight, dimensions);\r\n      } else {\r\n        ctx.drawImage(\r\n          CropImageHolder,\r\n          0,\r\n          0,\r\n          OriginalImageWidth,\r\n          OriginalImageHeight\r\n        );\r\n      }\r\n    },\r\n    [OriginalImageWidth, OriginalImageHeight, CropImageHolder, getCropHeight]\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    const Newcropimage: any = new Image();\r\n\r\n    Newcropimage.src = cropimage;\r\n    Newcropimage.onload = function () {\r\n      if (CropImageHolder === Newcropimage) {\r\n      } else {\r\n        setCropImageHolder(Newcropimage);\r\n      }\r\n\r\n      var reducequality;\r\n      if (Newcropimage.naturalWidth >= 1800) {\r\n        if (Newcropimage.naturalWidth >= 2600) {\r\n          var hold = Newcropimage.naturalWidth;\r\n          var dynamicCuttter = hold / 1800;\r\n\r\n          reducequality = 4 + dynamicCuttter;\r\n        } else {\r\n          reducequality = 3.1;\r\n        }\r\n      } else {\r\n        reducequality = 2.1;\r\n      }\r\n\r\n      var data1 = Newcropimage.naturalWidth / reducequality;\r\n      var data2 = Newcropimage.naturalHeight / reducequality;\r\n\r\n      var RatioNewcropimageNaturalHeight =\r\n        Newcropimage.naturalHeight / getCropHeight;\r\n      var NewBoxRatioWidth_WIDEIMAGE =\r\n        OriginalImageWidth / RatioNewcropimageNaturalHeight;\r\n\r\n      if (OriginalImageWidth === data1) {\r\n      } else {\r\n        setOriginalImageWidth(data1);\r\n      }\r\n\r\n      if (OriginalImageHeight === data2) {\r\n      } else {\r\n        setOriginalImageHeight(data2);\r\n      }\r\n\r\n      if (widecheckhold) {\r\n        if (Newcropimage.naturalWidth > Newcropimage.naturalHeight) {\r\n          setWideImageCheck(true);\r\n        } else {\r\n          setWideImageCheck(false);\r\n        }\r\n        setwidecheckhold(false);\r\n      } else {\r\n      }\r\n\r\n      if (cropwidth === data1) {\r\n      } else {\r\n        setcropwidth(data1);\r\n      }\r\n\r\n      if (cropheight === data2) {\r\n      } else {\r\n        setcropheight(data2);\r\n      }\r\n    };\r\n  }, [showCrop, cropimage]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (CropImageHolder && cropCanvasRef.current) {\r\n      const ctx = cropCanvasRef.current.getContext(\"2d\");\r\n\r\n      var RatiofromOriginalandfixedHeight = OriginalImageHeight / getCropHeight;\r\n      var NewBoxRatioWidth_WIDEIMAGE =\r\n        OriginalImageWidth / RatiofromOriginalandfixedHeight;\r\n\r\n      if (SourceWidthForCropX === NewBoxRatioWidth_WIDEIMAGE) {\r\n      } else {\r\n        setSourceWidthForCropX(NewBoxRatioWidth_WIDEIMAGE);\r\n      }\r\n\r\n      var RatiofromOriginalandfixedHeightx = OriginalImageWidth / getCropHeight;\r\n      var NewBoxRatioWidth_LONGIMAGE =\r\n        OriginalImageHeight / RatiofromOriginalandfixedHeightx;\r\n\r\n      if (SourceWidthForCropY === NewBoxRatioWidth_LONGIMAGE) {\r\n      } else {\r\n        setSourceWidthForCropY(NewBoxRatioWidth_LONGIMAGE);\r\n      }\r\n\r\n      var ratioh = (OriginalImageWidth * 3) / OriginalImageWidth;\r\n      var ratiow = (OriginalImageHeight * 3) / OriginalImageHeight;\r\n\r\n      if (BoxCropActivated) {\r\n        cropCanvasRef.current.width = getCropHeight;\r\n        cropCanvasRef.current.height = getCropHeight;\r\n      } else {\r\n        cropCanvasRef.current.width = OriginalImageWidth;\r\n        cropCanvasRef.current.height = OriginalImageHeight;\r\n      }\r\n\r\n      var centerpreview =\r\n        cropCanvasRef.current.width / 1.5 - NewBoxRatioWidth_LONGIMAGE / 1.5;\r\n\r\n      var xtraZoom = getCropHeight / NewBoxRatioWidth_WIDEIMAGE;\r\n\r\n      var centerCropCanvas =\r\n        cropCanvasRef.current.width / 2 - NewBoxRatioWidth_WIDEIMAGE / 2;\r\n\r\n      var RatiofromOriginalandfixedHeight =\r\n        OriginalImageHeight / getCropHeightRealImageRatio;\r\n      var newcropCSSWidth =\r\n        OriginalImageWidth / RatiofromOriginalandfixedHeight;\r\n\r\n      if (BoxCropActivated) {\r\n        var dragDistanceY = NewBoxRatioWidth_LONGIMAGE - getCropHeight;\r\n        var dragDistanceX = NewBoxRatioWidth_WIDEIMAGE - getCropHeight;\r\n\r\n        if (OriginalImageWidth > OriginalImageHeight) {\r\n          if (OriginalImageHeight === OriginalImageWidth) {\r\n            requestAnimationFrame(() => {\r\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, 0);\r\n            });\r\n          } else {\r\n            if (Drag) {\r\n              if (crop.x < -dragDistanceX) {\r\n                setcrop({ ...crop, x: -dragDistanceX });\r\n              } else if (crop.x > 0) {\r\n                setcrop({ ...crop, x: 0 });\r\n              } else {\r\n              }\r\n            }\r\n\r\n            requestAnimationFrame(() => {\r\n              draw(ctx, NewBoxRatioWidth_WIDEIMAGE, 1, crop.x);\r\n            });\r\n          }\r\n        } else {\r\n          if (OriginalImageHeight === OriginalImageWidth) {\r\n            requestAnimationFrame(() => {\r\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, 0);\r\n            });\r\n          } else {\r\n            if (Drag) {\r\n              if (crop.y < -dragDistanceY) {\r\n                setcrop({ ...crop, y: -dragDistanceY });\r\n              } else if (crop.y > 0) {\r\n                setcrop({ ...crop, y: 0 });\r\n              } else {\r\n              }\r\n            }\r\n            requestAnimationFrame(() => {\r\n              draw(ctx, NewBoxRatioWidth_LONGIMAGE, 2, crop.y);\r\n            });\r\n          }\r\n        }\r\n\r\n        cropCanvasRef.current.style.width = `${\r\n          getCropHeight / hdcanvasvalue\r\n        }px`;\r\n        cropCanvasRef.current.style.height = `${\r\n          getCropHeight / hdcanvasvalue\r\n        }px`;\r\n      } else {\r\n        requestAnimationFrame(() => {\r\n          draw(ctx, 0, 3, 0);\r\n        });\r\n\r\n        cropCanvasRef.current.style.width = `${newcropCSSWidth}px`;\r\n        cropCanvasRef.current.style.height = `${getCropHeightRealImageRatio}px`;\r\n      }\r\n    }\r\n  }, [\r\n    CropImageHolder,\r\n    BoxCropActivated,\r\n    OriginalImageWidth,\r\n    OriginalImageHeight,\r\n    crop,\r\n  ]);\r\n  const gg = () => {};\r\n\r\n  const cropaspectchange = () => {\r\n    setBoxCropActivated((BoxCropActivated) => !BoxCropActivated);\r\n  };\r\n\r\n  const complete = () => {\r\n    setTimeout(function () {\r\n      setcropToo({\r\n        ...cropToo,\r\n        x: crop.x,\r\n        y: crop.y,\r\n      });\r\n      setsuperCropLoadFade(true);\r\n      setTimeout(function () {\r\n        setshowCrop(false);\r\n        setcanvasToimage(true);\r\n      }, 100);\r\n    }, 100);\r\n  };\r\n\r\n  const blank = () => {};\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// CLOSE MODAL (STARTS AN ONPOPSTATE EVENT)\r\n  const ClickMonster = useCallback(\r\n    (ii: any) => {\r\n      clickOptions(ii, optionsClickType, \"\");\r\n      if (ActiveSlide === 3 && ii === 3) {\r\n        if (allowFilters) {\r\n          setActivatefilterImage(true);\r\n          setallowCropAllCanvas(false);\r\n        }\r\n      }\r\n    },\r\n    [allowFilters, ActiveSlide, optionsClickType]\r\n  );\r\n\r\n  //\r\n  //\r\n  //\r\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 2000,\r\n    },\r\n    opacity: showCrop ? 1 : 0,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {superCropLoadFade ? (\r\n        <>\r\n          <Grid\r\n            container\r\n            style={{\r\n              backgroundColor: darkmodeReducer\r\n                ? \"rgba(50,50,50,0.62)\"\r\n                : \"rgba(250,250,250,0.6)\",\r\n              position: \"fixed\",\r\n              top: \"0px\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              zIndex: 10,\r\n            }}\r\n          ></Grid>{\" \"}\r\n        </>\r\n      ) : null}\r\n\r\n      <animated.div\r\n        style={{\r\n          ...animation,\r\n          position: showCrop ? \"relative\" : \"fixed\",\r\n          top: showCrop ? \"0px\" : \"-800vh\",\r\n          backgroundColor: \"rgba(20,20,20,0.3)\",\r\n          width: \"100%\",\r\n          height: \"70%\",\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          style={{\r\n            padding: \"0px\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          {allowCropAllCanvas ? (\r\n            <canvas\r\n              onMouseDown={(e: any) => {\r\n                handleTouchStart(e, 0);\r\n              }}\r\n              onTouchStart={(e: any) => {\r\n                handleTouchStart(e, 1);\r\n              }}\r\n              onMouseMove={(e: any) => {\r\n                handleTouchDrag(e, 0);\r\n              }}\r\n              onTouchMove={(e: any) => {\r\n                handleTouchDrag(e, 1);\r\n              }}\r\n              onMouseUp={handleTouchEnd}\r\n              onTouchEnd={handleTouchEnd}\r\n              className={\r\n                darkmodeReducer\r\n                  ? \"turdarkCrop topcanvas\"\r\n                  : \"turdarkCrop topcanvas\"\r\n              }\r\n              ref={cropCanvasRef}\r\n              style={{\r\n                padding: \"0px\",\r\n                margin: \"auto\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            />\r\n          ) : null}\r\n          <Grid\r\n            container\r\n            style={{\r\n              padding: \"0px\",\r\n              bottom: \"13.6vh\",\r\n              margin: \"auto\",\r\n              width: `100%`,\r\n              height: \"0px\",\r\n              position: \"absolute\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              alignContent: \"center\",\r\n              alignSelf: \"center\",\r\n            }}\r\n          >\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              style={{\r\n                padding: \"0px\",\r\n                height: \"0px\",\r\n                margin: \"auto\",\r\n                display: \"grid\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <CropIcon\r\n                onClick={cropaspectchange}\r\n                className={\r\n                  darkmodeReducer\r\n                    ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \"\r\n                    : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \"\r\n                }\r\n                style={{\r\n                  margin: \"auto\",\r\n                  marginRight: \"9%\",\r\n                  fontSize: \"2.9vw\",\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              style={{\r\n                padding: \"0px\",\r\n                height: \"0px\",\r\n                margin: \"auto\",\r\n                display: \"grid\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <CheckIcon\r\n                onClick={complete}\r\n                className={\r\n                  darkmodeReducer\r\n                    ? \"make-small-icons-clickable-lightCrop turdark dontallowhighlighting zuperkingIcon \"\r\n                    : \"make-small-icons-clickable-darkCrop  turdark dontallowhighlighting zuperkingIcon  \"\r\n                }\r\n                style={{\r\n                  margin: \"auto\",\r\n                  marginLeft: \"9%\",\r\n                  fontSize: \"2.9vw\",\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </animated.div>\r\n\r\n      {showCrop ? null : (\r\n        <>\r\n          {\" \"}\r\n          <input\r\n            onChange={imageHandleChange}\r\n            type=\"file\"\r\n            name=\"superImages\"\r\n            accept=\"image/*\"\r\n            multiple\r\n            id=\"file\"\r\n            style={{ visibility: \"hidden\" }}\r\n          />\r\n          <Grid\r\n            container\r\n            onTouchStart={handleTouchStartOptions}\r\n            onTouchMove={handleTouchMoveOptions}\r\n            style={{\r\n              zIndex: 1,\r\n              padding: \"0px\",\r\n              top: matchPc ? \"-2vh\" : \"0vh\",\r\n              position: \"relative\",\r\n              margin: \"0 auto\",\r\n              overflow: \"hidden\",\r\n              left: \"0px\",\r\n              height: matchPc ? \"24.4vh\" : \"20.5vh\",\r\n              paddingBottom: \"1px\",\r\n            }}\r\n          >\r\n            <animated.div ref={optionsCollectImageRef} style={modalanimation}>\r\n              {optionsImages.map((im: any, i: any) => (\r\n                <Grid key={i} item xs={12}>\r\n                  {ActiveSlide === 1 && i === 1 ? (\r\n                    <label htmlFor=\"file\">\r\n                      <div\r\n                        onClick={() => {\r\n                          clickOptions(i, optionsClickType, \"\");\r\n                        }}\r\n                        style={{\r\n                          cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\r\n                          width: `${getSliderWidthNew}px`,\r\n                          height: `${getSliderWidthNew}px`,\r\n                          backgroundColor: darkmodeReducer\r\n                            ? \"rgba(010,010,010, 0.68)\"\r\n                            : \"rgba(220,220,220, 0.7)\",\r\n                          borderRadius: \"50%\",\r\n                          marginTop: \"2.15vh\",\r\n                          textAlign: \"center\",\r\n                          alignItems: \"center\",\r\n                          display: \"grid\",\r\n                          justifyContent: \"center\",\r\n                          boxShadow: darkmodeReducer\r\n                            ? ActiveSlide === i\r\n                              ? colortypeReducer === 0\r\n                                ? `0 0 5.5px ${colorReducerdark}`\r\n                                : `0 0 5.5px ${colorReducer}`\r\n                              : \"0 0 5.5px#aaaaaa\"\r\n                            : ActiveSlide === i\r\n                            ? `0 0 5.5px ${colorReducer}`\r\n                            : \"0 0 5.45px#222222\",\r\n                        }}\r\n                      >\r\n                        <PhotoIcon\r\n                          style={{\r\n                            fontSize: matchPc ? \"2vw\" : \"5vh\",\r\n                            color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                          }}\r\n                          className=\"zuperkinginfo\"\r\n                        />\r\n                      </div>\r\n                    </label>\r\n                  ) : (\r\n                    <>\r\n                      {\" \"}\r\n                      <span onClick={blank}>\r\n                        <div\r\n                          onClick={() => {\r\n                            ClickMonster(i);\r\n                          }}\r\n                          style={{\r\n                            cursor: ActiveSlide === i ? \"pointer\" : \"alias\",\r\n                            width: `${getSliderWidthNew}px`,\r\n                            height: `${getSliderWidthNew}px`,\r\n                            backgroundColor: darkmodeReducer\r\n                              ? \"rgba(010,010,010, 0.68)\"\r\n                              : \"rgba(220,220,220, 0.7)\",\r\n                            borderRadius: \"50%\",\r\n                            marginTop: \"2.15vh\",\r\n                            textAlign: \"center\",\r\n                            alignItems: \"center\",\r\n                            display: \"grid\",\r\n\r\n                            justifyContent: \"center\",\r\n                            boxShadow: darkmodeReducer\r\n                              ? ActiveSlide === i\r\n                                ? colortypeReducer === 0\r\n                                  ? `0 0 5.5px ${colorReducerdark}`\r\n                                  : `0 0 5.5px ${colorReducer}`\r\n                                : \"0 0 5.5px#aaaaaa\"\r\n                              : ActiveSlide === i\r\n                              ? `0 0 5.5px ${colorReducer}`\r\n                              : \"0 0 5.45px#222222\",\r\n                          }}\r\n                        >\r\n                          {i === 0 ? (\r\n                            <MusicNoteIcon\r\n                              style={{\r\n                                fontSize: matchPc ? \"2vw\" : \"5vh\",\r\n                                color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                              }}\r\n                              className=\"zuperkinginfo\"\r\n                            />\r\n                          ) : null}\r\n                          {i === 1 ? (\r\n                            <PhotoIcon\r\n                              style={{\r\n                                fontSize: matchPc ? \"2vw\" : \"5vh\",\r\n                                color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                              }}\r\n                              className=\"zuperkinginfo\"\r\n                            />\r\n                          ) : null}\r\n\r\n                          {i === 2 ? (\r\n                            <GifIcon\r\n                              style={{\r\n                                fontSize: matchPc ? \"2.5vw\" : \"5vh\",\r\n                                color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                              }}\r\n                              className=\"zuperkinginfo\"\r\n                            />\r\n                          ) : null}\r\n                          {i === 3 ? (\r\n                            <ChevronRightIcon\r\n                              style={{\r\n                                fontSize: matchPc ? \"2.3vw\" : \"5vh\",\r\n                                color: darkmodeReducer ? \"#eeeeee\" : \"#222222\",\r\n                              }}\r\n                              className=\"zuperkinginfo\"\r\n                            />\r\n                          ) : null}\r\n                        </div>\r\n                      </span>\r\n                    </>\r\n                  )}\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                      margin: \"auto\",\r\n                      textAlign: \"center\",\r\n                      position: \"relative\",\r\n                      bottom: \"-0.5em\",\r\n                    }}\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      style={{\r\n                        fontSize: matchPc ? \"1.1vw\" : \"2vh\",\r\n                        fontWeight: \"bolder\",\r\n                        fontFamily: \"Arial, Helvetica, sans-serif\",\r\n                        visibility: ActiveSlide === i ? \"visible\" : \"hidden\",\r\n                        color: darkmodeReducer ? \"#dddddd\" : \"#0b111b\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      {optionsNameData[i]}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              ))}\r\n            </animated.div>\r\n          </Grid>{\" \"}\r\n        </>\r\n      )}\r\n\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          {showCrop ? (\r\n            <>\r\n              <animated.div style={animation}>\r\n                {selectedImage.length > 0 ? (\r\n                  <Masonry\r\n                    columns={matchPc ? (selectedImage.length > 2 ? 3 : 2) : 1}\r\n                    spacing={0}\r\n                    style={{\r\n                      overflowX: \"hidden\",\r\n                      position: \"relative\",\r\n                      zIndex: 2,\r\n                    }}\r\n                  >\r\n                    {selectedImage.map((photo: any, index: any) => {\r\n                      return (\r\n                        <div key={index}>\r\n                          <PreviewCanvas\r\n                            image={photo}\r\n                            cropTOPLEVELScrollRef={cropTOPLEVELScrollRef}\r\n                            index={index}\r\n                            setcropimage={setcropimage}\r\n                            setcrop={setcrop}\r\n                            crop={crop}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })}{\" \"}\r\n                  </Masonry>\r\n                ) : null}\r\n              </animated.div>{\" \"}\r\n            </>\r\n          ) : null}\r\n\r\n          <>\r\n            {selectedImage.length > 0 ? (\r\n              <Masonry\r\n                columns={matchPc ? (selectedImage.length > 2 ? 3 : 2) : 1}\r\n                spacing={0}\r\n                style={{\r\n                  overflowX: \"hidden\",\r\n                  zIndex: 2,\r\n                  position: showCrop ? \"fixed\" : \"relative\",\r\n                  top: showCrop ? \"-800vh\" : \"0px\",\r\n                }}\r\n              >\r\n                {selectedImage.map((photo: any, index: any) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <PreviewCanvasCropAll\r\n                        allowCropAllCanvas={allowCropAllCanvas}\r\n                        showCrop={showCrop}\r\n                        WideImageCheck={WideImageCheck}\r\n                        SourceWidthForCropX={SourceWidthForCropX}\r\n                        SourceWidthForCropY={SourceWidthForCropY}\r\n                        hdcanvasvalue={hdcanvasvalue}\r\n                        BoxCropActivated={BoxCropActivated}\r\n                        cropheight={cropheight}\r\n                        cropwidth={cropwidth}\r\n                        CropImageHolder={CropImageHolder}\r\n                        cropCanvasRef={cropCanvasRef}\r\n                        crop={cropToo}\r\n                        image={photo}\r\n                        index={index}\r\n                        getpreviewFixedWidth={getpreviewFixedWidth}\r\n                        getCropHeight={getCropHeight}\r\n                        canvasToimage={canvasToimage}\r\n                        refWithimageData={refWithimageData}\r\n                        addUploadItemsRef={addUploadItemsRef}\r\n                        itemUploadRef={itemUploadRef}\r\n                        setsuperCropLoadFade={setsuperCropLoadFade}\r\n                        length={selectedImage.length}\r\n                        filterImage={filterImage}\r\n                        setfilterImage={setfilterImage}\r\n                        setallowFilters={setallowFilters}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}{\" \"}\r\n              </Masonry>\r\n            ) : null}\r\n          </>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        style={{ height: \"100%\", position: \"fixed\", top: \"-800vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            padding: \"0px\",\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            ref={getpreviewFixedWidthRef}\r\n            xs={5}\r\n            style={{\r\n              padding: \"0px\",\r\n              height: \"40%\",\r\n            }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getFixedCropWidthRef}\r\n            xs={4}\r\n            style={{\r\n              padding: \"0px\",\r\n              height: \"35%\",\r\n            }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            ref={getCropHeightRef}\r\n            xs={12}\r\n            style={{ height: \"85%\" }}\r\n          ></Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const CropUploadMode = React.memo(CropUploadModex);\r\n"]},"metadata":{},"sourceType":"module"}