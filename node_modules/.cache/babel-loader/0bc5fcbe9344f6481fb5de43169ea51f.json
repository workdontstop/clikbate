{"ast":null,"code":"import _objectSpread from\"C:/Users/oghen/OneDrive/Documents/ClikBate/super/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{Grid}from\"@material-ui/core\";import{useSelector}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Loaderx(_ref){var sliderLoader=_ref.sliderLoader,autoSlideDisplay=_ref.autoSlideDisplay,post=_ref.post;var _useSelector=useSelector(function(state){return _objectSpread({},state.GlobalReducer);}),darkmode=_useSelector.darkmode;var darkmodeReducer=darkmode;///\n///\n/// GET COLOR FROM REDUX STORE\nvar _useSelector2=useSelector(function(state){return _objectSpread({},state.GlobalReducerColor);}),color=_useSelector2.color,colordark=_useSelector2.colordark,colortype=_useSelector2.colortype;var colorReducer=color;var colorReducerdark=colordark;var colortypeReducer=colortype;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Grid,{container:true,className:darkmodeReducer?\"\".concat(sliderLoader,\" turLight\"):\"\".concat(sliderLoader,\" turlight\"),style:{backgroundColor:post?post.color1:colorReducer,height:\"0.7vh\",position:\"absolute\",display:autoSlideDisplay,zIndex:100000,top:\"0em\"}})});}export var Loader=/*#__PURE__*/React.memo(Loaderx);","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/Loader.tsx"],"names":["React","Grid","useSelector","Loaderx","sliderLoader","autoSlideDisplay","post","state","GlobalReducer","darkmode","darkmodeReducer","GlobalReducerColor","color","colordark","colortype","colorReducer","colorReducerdark","colortypeReducer","backgroundColor","color1","height","position","display","zIndex","top","Loader","memo"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,KAAgE,OAAhE,CAIA,OAASC,IAAT,KAAqB,mBAArB,CAEA,OAAyBC,WAAzB,KAA4C,aAA5C,C,gGAIA,QAASC,CAAAA,OAAT,MAA6E,IAA1DC,CAAAA,YAA0D,MAA1DA,YAA0D,CAA5CC,gBAA4C,MAA5CA,gBAA4C,CAA1BC,IAA0B,MAA1BA,IAA0B,kBAUtDJ,WAAW,CAAC,SAACK,KAAD,0BAC5BA,KAAK,CAACC,aADsB,GAAD,CAV2C,CAUnEC,QAVmE,cAUnEA,QAVmE,CAa3E,GAAMC,CAAAA,eAAe,CAAGD,QAAxB,CAEA;AACA;AACA;AAjB2E,kBAyBnCP,WAAW,CACjD,SAACK,KAAD,0BACKA,KAAK,CAACI,kBADX,GADiD,CAzBwB,CAyBnEC,KAzBmE,eAyBnEA,KAzBmE,CAyB5DC,SAzB4D,eAyB5DA,SAzB4D,CAyBjDC,SAzBiD,eAyBjDA,SAzBiD,CA8B3E,GAAMC,CAAAA,YAAY,CAAGH,KAArB,CACA,GAAMI,CAAAA,gBAAgB,CAAGH,SAAzB,CACA,GAAMI,CAAAA,gBAAgB,CAAGH,SAAzB,CAEA,mBACE,sCACE,KAAC,IAAD,EACE,SAAS,KADX,CAEE,SAAS,CACPJ,eAAe,WACRN,YADQ,wBAERA,YAFQ,aAHnB,CAOE,KAAK,CAAE,CACLc,eAAe,CAAEZ,IAAI,CAAGA,IAAI,CAACa,MAAR,CAAiBJ,YADjC,CAELK,MAAM,CAAE,OAFH,CAGLC,QAAQ,CAAE,UAHL,CAILC,OAAO,CAAEjB,gBAJJ,CAKLkB,MAAM,CAAE,MALH,CAMLC,GAAG,CAAE,KANA,CAPT,EADF,EADF,CAoBD,CAED,MAAO,IAAMC,CAAAA,MAAM,cAAGzB,KAAK,CAAC0B,IAAN,CAAWvB,OAAX,CAAf","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport { Arrow } from \"./Arrow\";\r\nimport { Dots } from \"./Dots\";\r\nimport { SliderNumber } from \"./SliderNumber\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { animated, useTransition } from \"react-spring\";\r\nimport { RootStateOrAny, useSelector } from \"react-redux\";\r\nimport { matchMobile, matchPc, matchTablet } from \"../DetectDevice\";\r\nimport ZoomOutIcon from \"@mui/icons-material/ZoomOut\";\r\n\r\nfunction Loaderx({ sliderLoader, autoSlideDisplay, post }: any): JSX.Element {\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        className={\r\n          darkmodeReducer\r\n            ? `${sliderLoader} turLight`\r\n            : `${sliderLoader} turlight`\r\n        }\r\n        style={{\r\n          backgroundColor: post ? post.color1 : colorReducer,\r\n          height: \"0.7vh\",\r\n          position: \"absolute\",\r\n          display: autoSlideDisplay,\r\n          zIndex: 100000,\r\n          top: \"0em\",\r\n        }}\r\n      ></Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Loader = React.memo(Loaderx);\r\n"]},"metadata":{},"sourceType":"module"}