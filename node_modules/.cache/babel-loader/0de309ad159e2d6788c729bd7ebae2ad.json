{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\TextFieldSignup.tsx\";\nimport React from \"react\";\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TextFieldSignupx({\n  updateSignvalues,\n  rawSignupValues,\n  signupShowPassword,\n  ShowSignupPasswordForaWhile,\n  size,\n  passwordType,\n  emailType\n}) {\n  const withHolder = \"\";\n\n  switch (size) {\n    case \"small\":\n      var width = \"99%\";\n      var transform = \"scale(0.93)\";\n      var paddingBottomE = \"45px\";\n      var paddingBottomP = \"65px\";\n      var paddingBottomU = \"65px\";\n      var zIndexP = \"0\";\n      var zIndex = \"0\";\n      break;\n\n    default:\n      var width = withHolder;\n      var transform = \"scale(1)\";\n      var paddingBottomE = \"34px\";\n      var paddingBottomP = \"30px\";\n      var paddingBottomU = \"50px\";\n      var zIndexP = \"1\";\n      var zIndex = \"0\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: emailType ? /*#__PURE__*/_jsxDEV(TextField, {\n      size: size,\n      style: {\n        transform: transform,\n        width: width,\n        paddingBottom: paddingBottomE\n      },\n      label: \"Email\",\n      type: \"email\",\n      onChange: updateSignvalues,\n      name: \"inputedEmail\",\n      value: rawSignupValues.inputedEmail,\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : passwordType ? /*#__PURE__*/_jsxDEV(TextField, {\n      size: size,\n      style: {\n        transform: transform,\n        width: width,\n        paddingBottom: paddingBottomE,\n        zIndex: zIndex\n      },\n      label: \"Password\",\n      type: signupShowPassword ? \"text\" : \"password\",\n      onChange: updateSignvalues,\n      name: \"inputedPassword\",\n      value: rawSignupValues.inputedPassword,\n      variant: \"standard\",\n      InputProps: {\n        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"end\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: ShowSignupPasswordForaWhile,\n            onMouseDown: ShowSignupPasswordForaWhile,\n            \"aria-label\": \"toggle password visibility\",\n            children: signupShowPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n      size: size,\n      style: {\n        transform: \"scale(0.93)\",\n        width: \"99%\",\n        paddingBottom: \"65px\"\n      },\n      label: \"Username\",\n      type: \"text\",\n      onChange: updateSignvalues,\n      name: \"inputedUsername\",\n      value: rawSignupValues.inputedUsername,\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = TextFieldSignupx;\nexport const TextFieldSignup = /*#__PURE__*/React.memo(TextFieldSignupx);\n_c2 = TextFieldSignup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextFieldSignupx\");\n$RefreshReg$(_c2, \"TextFieldSignup\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/TextFieldSignup.tsx"],"names":["React","IconButton","InputAdornment","TextField","VisibilityOffIcon","VisibilityIcon","TextFieldSignupx","updateSignvalues","rawSignupValues","signupShowPassword","ShowSignupPasswordForaWhile","size","passwordType","emailType","withHolder","width","transform","paddingBottomE","paddingBottomP","paddingBottomU","zIndexP","zIndex","paddingBottom","inputedEmail","inputedPassword","endAdornment","inputedUsername","TextFieldSignup","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport ModalFormLoginError from \"./ModalFormLoginError\";\r\nimport {\r\n  IconButton,\r\n  InputAdornment,\r\n  Grid,\r\n  DialogContent,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport { ItextfIeldSignup } from \"./appFolder-Interfaces\";\r\n\r\nfunction TextFieldSignupx({\r\n  updateSignvalues,\r\n  rawSignupValues,\r\n  signupShowPassword,\r\n  ShowSignupPasswordForaWhile,\r\n  size,\r\n  passwordType,\r\n  emailType,\r\n}: ItextfIeldSignup): JSX.Element {\r\n  const withHolder = \"\";\r\n  switch (size) {\r\n    case \"small\":\r\n      var width = \"99%\";\r\n      var transform = \"scale(0.93)\";\r\n      var paddingBottomE = \"45px\";\r\n      var paddingBottomP = \"65px\";\r\n      var paddingBottomU = \"65px\";\r\n      var zIndexP = \"0\";\r\n      var zIndex = \"0\";\r\n      break;\r\n    default:\r\n      var width = withHolder;\r\n      var transform = \"scale(1)\";\r\n      var paddingBottomE = \"34px\";\r\n      var paddingBottomP = \"30px\";\r\n      var paddingBottomU = \"50px\";\r\n      var zIndexP = \"1\";\r\n      var zIndex = \"0\";\r\n  }\r\n  return (\r\n    <>\r\n      {emailType ? (\r\n        <TextField\r\n          size={size}\r\n          style={{\r\n            transform: transform,\r\n            width: width,\r\n            paddingBottom: paddingBottomE,\r\n          }}\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          onChange={updateSignvalues}\r\n          name=\"inputedEmail\"\r\n          value={rawSignupValues.inputedEmail}\r\n          variant=\"standard\"\r\n        />\r\n      ) : passwordType ? (\r\n        <TextField\r\n          size={size}\r\n          style={{\r\n            transform: transform,\r\n            width: width,\r\n            paddingBottom: paddingBottomE,\r\n            zIndex: zIndex,\r\n          }}\r\n          label=\"Password\"\r\n          type={signupShowPassword ? \"text\" : \"password\"}\r\n          onChange={updateSignvalues}\r\n          name=\"inputedPassword\"\r\n          value={rawSignupValues.inputedPassword}\r\n          variant=\"standard\"\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={ShowSignupPasswordForaWhile}\r\n                  onMouseDown={ShowSignupPasswordForaWhile}\r\n                  aria-label=\"toggle password visibility\"\r\n                >\r\n                  {signupShowPassword ? (\r\n                    <VisibilityIcon />\r\n                  ) : (\r\n                    <VisibilityOffIcon />\r\n                  )}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      ) : (\r\n        <TextField\r\n          size={size}\r\n          style={{\r\n            transform: \"scale(0.93)\",\r\n            width: \"99%\",\r\n            paddingBottom: \"65px\",\r\n          }}\r\n          label=\"Username\"\r\n          type=\"text\"\r\n          onChange={updateSignvalues}\r\n          name=\"inputedUsername\"\r\n          value={rawSignupValues.inputedUsername}\r\n          variant=\"standard\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const TextFieldSignup = React.memo(TextFieldSignupx);\r\n"]},"metadata":{},"sourceType":"module"}