{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\OptionsSlider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSpring, animated } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction OptionsSliderx({\n  getSliderWidth\n}) {\n  _s();\n\n  var getSliderWidthNew = getSliderWidth / 1.4;\n  var dot = getSliderWidthNew / 1.7;\n  const optionsCollectImageRef = useRef(null);\n  const optionsImages = [\"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\", \"5.jpg\", \"6.jpg\"];\n  const [translate, setTranslate] = useState(0);\n  const [stalestate, setstalestate] = useState(1);\n  const [ActiveSlide, setActiveSlide] = useState(0); ///\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n\n  const modalanimation = useSpring({\n    config: {\n      duration: 300\n    },\n    transform: `translateX(-${translate}px)`,\n    transition: \"0.45s\",\n    height: \"auto\",\n    display: \"flex\",\n    width: `auto`\n  }); ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\n\n  const clickOptions = (i, type) => {\n    if (type === 1) {\n      setTranslate(stalestate + i);\n      setActiveSlide(i);\n    } else {\n      setTranslate(getSliderWidthNew * i + 1.5 * i);\n      setActiveSlide(i);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        position: \"relative\",\n        margin: \"0 auto\",\n        overflow: \"hidden\",\n        left: \"0px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        ref: optionsCollectImageRef,\n        style: modalanimation,\n        children: optionsImages.map((im, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: () => {\n              clickOptions(i, 1);\n            },\n            className: \"turprofileLight\",\n            style: {\n              width: `${getSliderWidthNew}px`,\n              height: `${getSliderWidthNew}px`,\n              borderRadius: \"50%\",\n              padding: \"3px\",\n              objectFit: \"cover\",\n              marginLeft: \"2px\",\n              marginTop: \"14px\",\n              boxShadow: \"0 0 3px red\",\n              marginBottom: \"2px\"\n            },\n            src: `./images/options/${im}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            style: {\n              margin: \"auto\",\n              backgroundColor: ActiveSlide === i ? \"#00ccff\" : \"\",\n              position: \"absolute\",\n              bottom: \"0em\",\n              left: `${dot}px`\n            },\n            children: \"x hh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true);\n}\n\n_s(OptionsSliderx, \"Z9cAbXoHSfH/WMBAEioe4DHOtUQ=\", false, function () {\n  return [useSpring];\n});\n\n_c = OptionsSliderx;\nexport const OptionsSlider = /*#__PURE__*/React.memo(OptionsSliderx);\n_c2 = OptionsSlider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OptionsSliderx\");\n$RefreshReg$(_c2, \"OptionsSlider\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/OptionsSlider.tsx"],"names":["React","useRef","useState","Grid","useSpring","animated","OptionsSliderx","getSliderWidth","getSliderWidthNew","dot","optionsCollectImageRef","optionsImages","translate","setTranslate","stalestate","setstalestate","ActiveSlide","setActiveSlide","modalanimation","config","duration","transform","transition","height","display","width","clickOptions","i","type","position","margin","overflow","left","map","im","borderRadius","padding","objectFit","marginLeft","marginTop","boxShadow","marginBottom","backgroundColor","bottom","OptionsSlider","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { Paper, Grid, Box } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nfunction OptionsSliderx({ getSliderWidth }: any) {\r\n  var getSliderWidthNew = getSliderWidth / 1.4;\r\n  var dot = getSliderWidthNew / 1.7;\r\n  const optionsCollectImageRef = useRef<HTMLDivElement>(null);\r\n  const optionsImages = [\"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\", \"5.jpg\", \"6.jpg\"];\r\n  const [translate, setTranslate] = useState(0);\r\n  const [stalestate, setstalestate] = useState(1);\r\n\r\n  const [ActiveSlide, setActiveSlide] = useState(0);\r\n\r\n  ///\r\n  ///CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const modalanimation = useSpring({\r\n    config: {\r\n      duration: 300,\r\n    },\r\n    transform: `translateX(-${translate}px)`,\r\n    transition: \"0.45s\",\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    width: `auto`,\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\r\n  const clickOptions = (i: number, type: number) => {\r\n    if (type === 1) {\r\n      setTranslate(stalestate + i);\r\n      setActiveSlide(i);\r\n    } else {\r\n      setTranslate(getSliderWidthNew * i + 1.5 * i);\r\n      setActiveSlide(i);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        style={{\r\n          position: \"relative\",\r\n          margin: \"0 auto\",\r\n          overflow: \"hidden\",\r\n          left: \"0px\",\r\n        }}\r\n      >\r\n        <animated.div ref={optionsCollectImageRef} style={modalanimation}>\r\n          {optionsImages.map((im: any, i: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  clickOptions(i, 1);\r\n                }}\r\n                className=\"turprofileLight\"\r\n                style={{\r\n                  width: `${getSliderWidthNew}px`,\r\n                  height: `${getSliderWidthNew}px`,\r\n                  borderRadius: \"50%\",\r\n                  padding: \"3px\",\r\n                  objectFit: \"cover\",\r\n                  marginLeft: \"2px\",\r\n                  marginTop: \"14px\",\r\n                  boxShadow: \"0 0 3px red\",\r\n                  marginBottom: \"2px\",\r\n                }}\r\n                src={`./images/options/${im}`}\r\n              />\r\n              <Grid\r\n                item\r\n                xs={10}\r\n                style={{\r\n                  margin: \"auto\",\r\n                  backgroundColor: ActiveSlide === i ? \"#00ccff\" : \"\",\r\n                  position: \"absolute\",\r\n                  bottom: \"0em\",\r\n                  left: `${dot}px`,\r\n                }}\r\n              >\r\n                x hh\r\n              </Grid>\r\n            </>\r\n          ))}\r\n        </animated.div>\r\n      </Grid>{\" \"}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const OptionsSlider = React.memo(OptionsSliderx);\r\n"]},"metadata":{},"sourceType":"module"}