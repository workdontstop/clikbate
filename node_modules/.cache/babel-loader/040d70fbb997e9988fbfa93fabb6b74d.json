{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oghen\\\\Documents\\\\ClikBate\\\\super\\\\src\\\\profile\\\\Slider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Arrow } from \"./Arrow\";\nimport { Dots } from \"./Dots\";\nimport { SliderNumber } from \"./SliderNumber\";\nimport { Grid } from \"@material-ui/core\";\nimport { animated, useTransition } from \"react-spring\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Sliderx({\n  slides,\n  slidesThumb,\n  pey,\n  addPostItemsRef,\n  itemheight,\n  onPostsItemClicked,\n  onPostsItemload,\n  post,\n  itemFinalPostHeight,\n  itemOriginalPostHeight,\n  itemcroptype,\n  itemCLICKED,\n  setActiveAutoPlay,\n  AUTOSlideLongImages,\n  clickslider,\n  stopSlider,\n  SliderAutoPlay,\n  showSliderLoader,\n  setshowSliderLoader,\n  autoPlayTimer,\n  sliderIndex,\n  setSliderIndex,\n  sliderIndexSlow,\n  setSliderIndexSlow,\n  length,\n  startSlider,\n  ActiveAutoPlay\n}) {\n  _s();\n\n  const [sliderDuration] = useState(1500);\n  var allow4dev = \"\";\n  const {\n    REACT_APP_APPX_STATE\n  } = process.env;\n\n  if (REACT_APP_APPX_STATE === \"dev\") {\n    allow4dev = \"http://localhost:1000\";\n  } else {\n    allow4dev = \"\";\n  } /// const getWidth = () => window.innerWidth;\n  ///var newGetWidth = getWidth() * slides.length;\n\n\n  const waitChangeIndexTimer = useRef(null);\n  const handleTouchMoveTimer = useRef(null);\n  const callAutoPlayAgainTimer = useRef(null);\n  const SlideimageRef = useRef(null);\n  const SlideimageRefthumb = useRef(null);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [touchPosition, setTouchPosition] = useState(null); ///\n  ///\n  ///\n  ///\n\n  const {\n    ActiveId\n  } = useSelector(state => ({ ...state.ActiveAutoPlayReducer\n  }));\n  const ActiveIdReducer = ActiveId; ///\n  ///\n  ///\n  /// GET DARKMODE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode; ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color,\n    colordark,\n    colortype\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const colortypeReducer = colortype;\n  var colorx = colortypeReducer === 0 ? darkmodeReducer ? colorReducerdark : colorReducer : colorReducer;\n  useEffect(() => {\n    if (ActiveAutoPlay[pey]) {\n      setTimeout(function () {\n        stopSlider(0);\n      }, 1500);\n    }\n  }, [ActiveAutoPlay[pey]]);\n  var autoSlideDisplay = \"none\";\n  var sliderLoader = \"\";\n\n  if (showSliderLoader) {\n    autoSlideDisplay = \"none\";\n    sliderLoader = \"\";\n  } else {\n    autoSlideDisplay = \"block\";\n    sliderLoader = \"superloaderAutoSlider\";\n  } ///\n  ///\n  ///\n  /// SPRING TRANSITION WITH INDEX\n\n\n  const transitions = useTransition(sliderIndex, {\n    key: sliderIndex,\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    config: {\n      duration: sliderDuration - 50\n    }\n  }); ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\n\n  const sliderFirstImageOnLoad = item => {\n    if (item === 0) {\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\n        setImageHeight(SlideimageRef.current.clientHeight);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\n\n\n  const sliderFirstImageOnLoadthumb = item => {\n    if (item === 0 && imageHeight === 0) {\n      if (SlideimageRefthumb.current && SlideimageRefthumb.current.clientHeight) {\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\n      }\n    }\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH START EVENT\n\n\n  const handleTouchStart = e => {\n    if (itemCLICKED[pey]) {\n      ////onMouseDown onMouseMove\n      ////touchDown = e.clientX\n      const touchDown = e.touches[0].clientX;\n      setTouchPosition(touchDown);\n    }\n  }; ///\n  ///\n  ///\n  /// HANDLE TOUCH MOVE EVENT\n\n\n  const handleTouchMove = e => {\n    if (itemCLICKED[pey]) {\n      if (handleTouchMoveTimer.current) {\n        clearTimeout(handleTouchMoveTimer.current);\n      }\n\n      handleTouchMoveTimer.current = setTimeout(function () {\n        const touchDown = touchPosition;\n\n        if (touchDown === null) {\n          return;\n        } ////currentTouch = e.clientX\n\n\n        const currentTouch = e.touches[0].clientX;\n        const diff = touchDown - currentTouch;\n\n        if (diff > 40) {\n          nextSlide();\n        } else if (diff < -40) {\n          prevSlide();\n        } else {}\n\n        setTouchPosition(null);\n        return false;\n      }, 200);\n      return false;\n    }\n  }; ///\n  ///\n  ///\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\n\n\n  const waitChangeIndex = (data, state) => {\n    if (waitChangeIndexTimer.current) {\n      clearTimeout(waitChangeIndexTimer.current);\n    }\n\n    waitChangeIndexTimer.current = setTimeout(function () {\n      setSliderIndexSlow(state => data);\n    }, 500);\n  }; ///\n  ///\n  ///\n  /// NEXT SLIDE\n\n\n  const nextSlide = () => {\n    AUTOSlideLongImages(pey);\n\n    if (ActiveAutoPlay[pey]) {} else {\n      setshowSliderLoader(true);\n\n      if (autoPlayTimer.current) {\n        clearTimeout(autoPlayTimer.current);\n      }\n    } ///set((state) => (state + 1) % slides.length);\n\n\n    if (sliderIndex === slides.length - 1) {\n      setSliderIndex(sliderIndex => 0);\n      waitChangeIndex(0, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex + 1);\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\n    }\n\n    if (ActiveAutoPlay[pey]) {} else {\n      if (callAutoPlayAgainTimer.current) {\n        clearTimeout(callAutoPlayAgainTimer.current);\n      }\n\n      callAutoPlayAgainTimer.current = setTimeout(function () {\n        SliderAutoPlay(1);\n      }, sliderDuration);\n    }\n  }; ///\n  ///\n  ///\n  /// PREV SLIDE\n\n\n  const prevSlide = () => {\n    AUTOSlideLongImages(pey);\n\n    if (ActiveAutoPlay[pey]) {} else {\n      setshowSliderLoader(true);\n\n      if (autoPlayTimer.current) {\n        clearTimeout(autoPlayTimer.current);\n      }\n    }\n\n    if (sliderIndex === 0) {\n      setSliderIndex(sliderIndex => slides.length - 1);\n      waitChangeIndex(slides.length - 1, sliderIndex);\n    } else {\n      setSliderIndex(sliderIndex => sliderIndex - 1);\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\n    }\n\n    if (ActiveAutoPlay[pey]) {} else {\n      if (callAutoPlayAgainTimer.current) {\n        clearTimeout(callAutoPlayAgainTimer.current);\n      }\n\n      callAutoPlayAgainTimer.current = setTimeout(function () {\n        SliderAutoPlay(1);\n      }, sliderDuration);\n    }\n  }; ///\n  ///\n  ///\n  /// CHANGE SLIDER CONTENT USING  DOTS\n\n\n  const GotoDots = clickedDot => {\n    setSliderIndex(sliderIndex => clickedDot);\n    waitChangeIndex(clickedDot, sliderIndex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      xs: 12,\n      style: {\n        position: \"relative\",\n        height: itemCLICKED[pey] ? `${itemFinalPostHeight[pey]}px` : `${itemFinalPostHeight[pey]}px`,\n        padding: \"0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: darkmodeReducer ? `${sliderLoader} turdark` : `${sliderLoader} turlight`,\n        style: {\n          backgroundColor: colorx,\n          height: \"4.2px\",\n          position: \"absolute\",\n          display: autoSlideDisplay,\n          zIndex: 100000,\n          top: \"0em\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), slides.length > 0 ? /*#__PURE__*/_jsxDEV(SliderNumber, {\n        startSlider: startSlider,\n        ActiveAutoPlay: ActiveAutoPlay,\n        stopSlider: stopSlider,\n        activeSlide: sliderIndexSlow,\n        total: slides.length,\n        itemCLICKED: itemCLICKED,\n        pey: pey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Arrow, {\n        itemCLICKED: itemCLICKED,\n        pey: pey,\n        total: slides.length,\n        direction: \"left\",\n        clickSlideprev: prevSlide,\n        clickSlidenext: nextSlide,\n        itemOriginalPostHeight: itemOriginalPostHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), transitions((style, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(animated.img, {\n          onLoad: e => {\n            onPostsItemload(e, pey, i);\n          },\n          onMouseDown: clickslider,\n          ref: addPostItemsRef,\n          className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n          src: slidesThumb[i],\n          alt: \"a superstarz post \",\n          style: { ...style,\n            cursor: \"pointer\",\n            width: \"100%\",\n            height: \"auto\",\n            position: \"absolute\",\n            padding: \"0px\",\n            objectFit: \"cover\",\n            zIndex: 0,\n            float: \"left\",\n            filter: \"blur(7px)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(animated.img, {\n          onMouseDown: clickslider,\n          className: darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\",\n          src: slides[i],\n          alt: \"a superstarz post \",\n          style: { ...style,\n            cursor: \"pointer\",\n            width: \"100%\",\n            height: \"auto\",\n            position: \"absolute\",\n            padding: \"0px\",\n            objectFit: \"cover\",\n            zIndex: 1,\n            float: \"left\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this)), \" \", /*#__PURE__*/_jsxDEV(Dots, {\n        total: slides.length,\n        itemCLICKED: itemCLICKED,\n        pey: pey,\n        GotoDots: GotoDots,\n        slides: slides,\n        activeSlide: sliderIndexSlow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Sliderx, \"GhfGdS/Eh6iYXOeKHG457BbvANs=\", false, function () {\n  return [useSelector, useSelector, useSelector, useTransition];\n});\n\n_c = Sliderx;\nexport const Slider = /*#__PURE__*/React.memo(Sliderx);\n_c2 = Slider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Sliderx\");\n$RefreshReg$(_c2, \"Slider\");","map":{"version":3,"sources":["C:/Users/oghen/Documents/ClikBate/super/src/profile/Slider.tsx"],"names":["React","useState","useRef","useEffect","Arrow","Dots","SliderNumber","Grid","animated","useTransition","useSelector","Sliderx","slides","slidesThumb","pey","addPostItemsRef","itemheight","onPostsItemClicked","onPostsItemload","post","itemFinalPostHeight","itemOriginalPostHeight","itemcroptype","itemCLICKED","setActiveAutoPlay","AUTOSlideLongImages","clickslider","stopSlider","SliderAutoPlay","showSliderLoader","setshowSliderLoader","autoPlayTimer","sliderIndex","setSliderIndex","sliderIndexSlow","setSliderIndexSlow","length","startSlider","ActiveAutoPlay","sliderDuration","allow4dev","REACT_APP_APPX_STATE","process","env","waitChangeIndexTimer","handleTouchMoveTimer","callAutoPlayAgainTimer","SlideimageRef","SlideimageRefthumb","imageHeight","setImageHeight","touchPosition","setTouchPosition","ActiveId","state","ActiveAutoPlayReducer","ActiveIdReducer","darkmode","GlobalReducer","darkmodeReducer","color","colordark","colortype","GlobalReducerColor","colorReducer","colorReducerdark","colortypeReducer","colorx","setTimeout","autoSlideDisplay","sliderLoader","transitions","key","from","opacity","enter","leave","config","duration","sliderFirstImageOnLoad","item","current","clientHeight","sliderFirstImageOnLoadthumb","handleTouchStart","e","touchDown","touches","clientX","handleTouchMove","clearTimeout","currentTouch","diff","nextSlide","prevSlide","waitChangeIndex","data","GotoDots","clickedDot","position","height","padding","backgroundColor","display","zIndex","top","style","i","cursor","width","objectFit","float","filter","Slider","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport { Arrow } from \"./Arrow\";\r\nimport { Dots } from \"./Dots\";\r\nimport { SliderNumber } from \"./SliderNumber\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { animated, useTransition } from \"react-spring\";\r\nimport { RootStateOrAny, useSelector } from \"react-redux\";\r\nimport { matchMobile, matchPc, matchTablet } from \"../DetectDevice\";\r\n\r\nfunction Sliderx({\r\n  slides,\r\n  slidesThumb,\r\n  pey,\r\n  addPostItemsRef,\r\n  itemheight,\r\n  onPostsItemClicked,\r\n  onPostsItemload,\r\n  post,\r\n  itemFinalPostHeight,\r\n  itemOriginalPostHeight,\r\n  itemcroptype,\r\n  itemCLICKED,\r\n  setActiveAutoPlay,\r\n  AUTOSlideLongImages,\r\n  clickslider,\r\n  stopSlider,\r\n  SliderAutoPlay,\r\n  showSliderLoader,\r\n  setshowSliderLoader,\r\n  autoPlayTimer,\r\n  sliderIndex,\r\n  setSliderIndex,\r\n  sliderIndexSlow,\r\n  setSliderIndexSlow,\r\n  length,\r\n  startSlider,\r\n  ActiveAutoPlay,\r\n}: any): JSX.Element {\r\n  const [sliderDuration] = useState(1500);\r\n\r\n  var allow4dev = \"\";\r\n  const { REACT_APP_APPX_STATE } = process.env;\r\n\r\n  if (REACT_APP_APPX_STATE === \"dev\") {\r\n    allow4dev = \"http://localhost:1000\";\r\n  } else {\r\n    allow4dev = \"\";\r\n  }\r\n\r\n  /// const getWidth = () => window.innerWidth;\r\n  ///var newGetWidth = getWidth() * slides.length;\r\n\r\n  const waitChangeIndexTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const handleTouchMoveTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n  const callAutoPlayAgainTimer = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const SlideimageRef = useRef<HTMLImageElement>(null);\r\n\r\n  const SlideimageRefthumb = useRef<HTMLImageElement>(null);\r\n\r\n  const [imageHeight, setImageHeight] = useState(0);\r\n  const [touchPosition, setTouchPosition] = useState(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n  interface RootStateActiveAutoPlayReducer {\r\n    ActiveAutoPlayReducer: {\r\n      ActiveId: number;\r\n    };\r\n  }\r\n  const { ActiveId } = useSelector((state: RootStateActiveAutoPlayReducer) => ({\r\n    ...state.ActiveAutoPlayReducer,\r\n  }));\r\n\r\n  const ActiveIdReducer = ActiveId;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET DARKMODE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n      colortype: number;\r\n    };\r\n  }\r\n  const { color, colordark, colortype } = useSelector(\r\n    (state: RootStateReducerColor) => ({\r\n      ...state.GlobalReducerColor,\r\n    })\r\n  );\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n  const colortypeReducer = colortype;\r\n\r\n  var colorx =\r\n    colortypeReducer === 0\r\n      ? darkmodeReducer\r\n        ? colorReducerdark\r\n        : colorReducer\r\n      : colorReducer;\r\n\r\n  useEffect(() => {\r\n    if (ActiveAutoPlay[pey]) {\r\n      setTimeout(function () {\r\n        stopSlider(0);\r\n      }, 1500);\r\n    }\r\n  }, [ActiveAutoPlay[pey]]);\r\n\r\n  var autoSlideDisplay = \"none\";\r\n  var sliderLoader = \"\";\r\n\r\n  if (showSliderLoader) {\r\n    autoSlideDisplay = \"none\";\r\n    sliderLoader = \"\";\r\n  } else {\r\n    autoSlideDisplay = \"block\";\r\n    sliderLoader = \"superloaderAutoSlider\";\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SPRING TRANSITION WITH INDEX\r\n  const transitions = useTransition(sliderIndex, {\r\n    key: sliderIndex,\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n    config: { duration: sliderDuration - 50 },\r\n  });\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM IMAGE\r\n  const sliderFirstImageOnLoad = (item: number) => {\r\n    if (item === 0) {\r\n      if (SlideimageRef.current && SlideimageRef.current.clientHeight) {\r\n        setImageHeight(SlideimageRef.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PROVIDES DYNAMIC HEIGHT FOR SLIDER CONTENT FROM THUMBS IF IMAGE DOES NOT LOAD\r\n  const sliderFirstImageOnLoadthumb = (item: number) => {\r\n    if (item === 0 && imageHeight === 0) {\r\n      if (\r\n        SlideimageRefthumb.current &&\r\n        SlideimageRefthumb.current.clientHeight\r\n      ) {\r\n        setImageHeight(SlideimageRefthumb.current.clientHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH START EVENT\r\n  const handleTouchStart = (e: any) => {\r\n    if (itemCLICKED[pey]) {\r\n      ////onMouseDown onMouseMove\r\n      ////touchDown = e.clientX\r\n      const touchDown = e.touches[0].clientX;\r\n      setTouchPosition(touchDown);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// HANDLE TOUCH MOVE EVENT\r\n  const handleTouchMove = (e: any) => {\r\n    if (itemCLICKED[pey]) {\r\n      if (handleTouchMoveTimer.current) {\r\n        clearTimeout(handleTouchMoveTimer.current);\r\n      }\r\n      handleTouchMoveTimer.current = setTimeout(function () {\r\n        const touchDown = touchPosition;\r\n\r\n        if (touchDown === null) {\r\n          return;\r\n        }\r\n        ////currentTouch = e.clientX\r\n        const currentTouch = e.touches[0].clientX;\r\n        const diff = touchDown - currentTouch;\r\n\r\n        if (diff > 40) {\r\n          nextSlide();\r\n        } else if (diff < -40) {\r\n          prevSlide();\r\n        } else {\r\n        }\r\n\r\n        setTouchPosition(null);\r\n        return false;\r\n      }, 200);\r\n\r\n      return false;\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// WAITS FOR SOME SECS BEFORE CHANGING SLIDE IDENTIFIER(DOTS,ACTIVESLIDES)\r\n  const waitChangeIndex = (data: number, state: any) => {\r\n    if (waitChangeIndexTimer.current) {\r\n      clearTimeout(waitChangeIndexTimer.current);\r\n    }\r\n    waitChangeIndexTimer.current = setTimeout(function () {\r\n      setSliderIndexSlow((state: any) => data);\r\n    }, 500);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// NEXT SLIDE\r\n  const nextSlide = () => {\r\n    AUTOSlideLongImages(pey);\r\n\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      setshowSliderLoader(true);\r\n      if (autoPlayTimer.current) {\r\n        clearTimeout(autoPlayTimer.current);\r\n      }\r\n    }\r\n\r\n    ///set((state) => (state + 1) % slides.length);\r\n    if (sliderIndex === slides.length - 1) {\r\n      setSliderIndex((sliderIndex: any) => 0);\r\n      waitChangeIndex(0, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex: any) => sliderIndex + 1);\r\n      waitChangeIndex(sliderIndex + 1, sliderIndex);\r\n    }\r\n\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      if (callAutoPlayAgainTimer.current) {\r\n        clearTimeout(callAutoPlayAgainTimer.current);\r\n      }\r\n      callAutoPlayAgainTimer.current = setTimeout(function () {\r\n        SliderAutoPlay(1);\r\n      }, sliderDuration);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// PREV SLIDE\r\n  const prevSlide = () => {\r\n    AUTOSlideLongImages(pey);\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      setshowSliderLoader(true);\r\n      if (autoPlayTimer.current) {\r\n        clearTimeout(autoPlayTimer.current);\r\n      }\r\n    }\r\n\r\n    if (sliderIndex === 0) {\r\n      setSliderIndex((sliderIndex: any) => slides.length - 1);\r\n      waitChangeIndex(slides.length - 1, sliderIndex);\r\n    } else {\r\n      setSliderIndex((sliderIndex: any) => sliderIndex - 1);\r\n      waitChangeIndex(sliderIndex - 1, sliderIndex);\r\n    }\r\n    if (ActiveAutoPlay[pey]) {\r\n    } else {\r\n      if (callAutoPlayAgainTimer.current) {\r\n        clearTimeout(callAutoPlayAgainTimer.current);\r\n      }\r\n      callAutoPlayAgainTimer.current = setTimeout(function () {\r\n        SliderAutoPlay(1);\r\n      }, sliderDuration);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// CHANGE SLIDER CONTENT USING  DOTS\r\n  const GotoDots = (clickedDot: number) => {\r\n    setSliderIndex((sliderIndex: any) => clickedDot);\r\n    waitChangeIndex(clickedDot, sliderIndex);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        item\r\n        onTouchStart={handleTouchStart}\r\n        onTouchMove={handleTouchMove}\r\n        xs={12}\r\n        style={{\r\n          position: \"relative\",\r\n          height: itemCLICKED[pey]\r\n            ? `${itemFinalPostHeight[pey]}px`\r\n            : `${itemFinalPostHeight[pey]}px`,\r\n          padding: \"0px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          className={\r\n            darkmodeReducer\r\n              ? `${sliderLoader} turdark`\r\n              : `${sliderLoader} turlight`\r\n          }\r\n          style={{\r\n            backgroundColor: colorx,\r\n            height: \"4.2px\",\r\n            position: \"absolute\",\r\n            display: autoSlideDisplay,\r\n            zIndex: 100000,\r\n            top: \"0em\",\r\n          }}\r\n        ></Grid>\r\n        {slides.length > 0 ? (\r\n          <SliderNumber\r\n            startSlider={startSlider}\r\n            ActiveAutoPlay={ActiveAutoPlay}\r\n            stopSlider={stopSlider}\r\n            activeSlide={sliderIndexSlow}\r\n            total={slides.length}\r\n            itemCLICKED={itemCLICKED}\r\n            pey={pey}\r\n          />\r\n        ) : null}\r\n        <Arrow\r\n          itemCLICKED={itemCLICKED}\r\n          pey={pey}\r\n          total={slides.length}\r\n          direction=\"left\"\r\n          clickSlideprev={prevSlide}\r\n          clickSlidenext={nextSlide}\r\n          itemOriginalPostHeight={itemOriginalPostHeight}\r\n        />\r\n        {transitions((style, i) => (\r\n          <div key={i}>\r\n            <animated.img\r\n              onLoad={(e: any) => {\r\n                onPostsItemload(e, pey, i);\r\n              }}\r\n              onMouseDown={clickslider}\r\n              ref={addPostItemsRef}\r\n              className={\r\n                darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n              }\r\n              src={slidesThumb[i]}\r\n              alt=\"a superstarz post \"\r\n              style={{\r\n                ...style,\r\n                cursor: \"pointer\",\r\n                width: \"100%\",\r\n                height: \"auto\",\r\n                position: \"absolute\",\r\n                padding: \"0px\",\r\n                objectFit: \"cover\",\r\n                zIndex: 0,\r\n                float: \"left\",\r\n                filter: \"blur(7px)\",\r\n              }}\r\n            />\r\n            <animated.img\r\n              onMouseDown={clickslider}\r\n              className={\r\n                darkmodeReducer ? \"turlightpostdark\" : \"turlightpostlight\"\r\n              }\r\n              src={slides[i]}\r\n              alt=\"a superstarz post \"\r\n              style={{\r\n                ...style,\r\n                cursor: \"pointer\",\r\n                width: \"100%\",\r\n                height: \"auto\",\r\n                position: \"absolute\",\r\n                padding: \"0px\",\r\n                objectFit: \"cover\",\r\n                zIndex: 1,\r\n                float: \"left\",\r\n              }}\r\n            />\r\n          </div>\r\n        ))}{\" \"}\r\n        <Dots\r\n          total={slides.length}\r\n          itemCLICKED={itemCLICKED}\r\n          pey={pey}\r\n          GotoDots={GotoDots}\r\n          slides={slides}\r\n          activeSlide={sliderIndexSlow}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Slider = React.memo(Sliderx);\r\n"]},"metadata":{},"sourceType":"module"}