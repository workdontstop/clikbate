{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskbarSuperphotoImageViewx({\n  AddMainImageRef,\n  index,\n  MainImageFiltersRef,\n  finalImage,\n  ray,\n  Originalray,\n  setOriginalRay\n}) {\n  _s();\n\n  const [fade, setfade] = useState(false);\n  useEffect(() => {\n    setfade(true);\n    setTimeout(() => {\n      setfade(false);\n    }, 2000);\n  }, [MainImageFiltersRef.current]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Originalray[index] === 1 ? null : null\n  }, void 0, false);\n}\n\n_s(TaskbarSuperphotoImageViewx, \"LMBYZRQHo9XKSzAhZUp+Rtpw/Js=\");\n\n_c = TaskbarSuperphotoImageViewx;\nexport const TaskbarSuperphotoImageView = /*#__PURE__*/React.memo(TaskbarSuperphotoImageViewx);\n_c2 = TaskbarSuperphotoImageView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskbarSuperphotoImageViewx\");\n$RefreshReg$(_c2, \"TaskbarSuperphotoImageView\");","map":{"version":3,"sources":["C:/Users/oghen/OneDrive/Documents/ClikBate/super/src/profile/TaskbarSuperphotoImageView.tsx"],"names":["React","useEffect","useState","TaskbarSuperphotoImageViewx","AddMainImageRef","index","MainImageFiltersRef","finalImage","ray","Originalray","setOriginalRay","fade","setfade","setTimeout","current","TaskbarSuperphotoImageView","memo"],"mappings":";;AAAA,OAAOA,KAAP,IAEIC,SAFJ,EAIIC,QAJJ,QAMO,OANP;;;;AAqCA,SAASC,2BAAT,CAAqC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA,mBAA1B;AAA+CC,EAAAA,UAA/C;AAA2DC,EAAAA,GAA3D;AAAgEC,EAAAA,WAAhE;AAA6EC,EAAAA;AAA7E,CAArC,EAAsJ;AAAA;;AAGlJ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;AAKAD,EAAAA,SAAS,CAAC,MAAM;AAEZW,IAAAA,OAAO,CAAC,IAAD,CAAP;AAEAC,IAAAA,UAAU,CAAC,MAAM;AAEbD,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAHS,EAGP,IAHO,CAAV;AAOH,GAXQ,EAWN,CAACN,mBAAmB,CAACQ,OAArB,CAXM,CAAT;AAeA,sBACI;AAAA,cAKKL,WAAW,CAACJ,KAAD,CAAX,KAAuB,CAAvB,GAA2B,IAA3B,GAAkC;AALvC,mBADJ;AAWH;;GAlCQF,2B;;KAAAA,2B;AAoCT,OAAO,MAAMY,0BAA0B,gBAAGf,KAAK,CAACgB,IAAN,CAAWb,2BAAX,CAAnC;MAAMY,0B","sourcesContent":["import React, {\r\n    useRef,\r\n    useEffect,\r\n    useCallback,\r\n    useState,\r\n    useLayoutEffect,\r\n} from \"react\";\r\nimport ControlPointDuplicateIcon from \"@mui/icons-material/ControlPointDuplicate\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet, matchMobile } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { OptionsSlider } from \"../profile/OptionsSlider\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport Axios from \"axios\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport date from \"date-and-time\";\r\nimport { UserInfoUpdatePROFILE } from \"../log/actions/UserdataAction\";\r\nimport { UserInfoUpdateBILLBOARD } from \"../log/actions/UserdataAction\";\r\nimport { usePalette } from \"react-palette\";\r\nimport { UpdateColorAction } from \"../GlobalActions\";\r\nimport EditTwoToneIcon from \"@mui/icons-material/EditTwoTone\";\r\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\r\nimport { UpdateUploadData } from \"../GlobalActions\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\nimport CropIcon from '@mui/icons-material/Crop';\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { TaskbarCrop } from \"./TaskbarCrop\";\r\nimport set from \"date-fns/set/index.js\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TaskbarSuperphotoImageViewx({ AddMainImageRef, index, MainImageFiltersRef, finalImage, ray, Originalray, setOriginalRay }: any): JSX.Element {\r\n\r\n\r\n    const [fade, setfade] = useState(false);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setfade(true)\r\n\r\n        setTimeout(() => {\r\n\r\n            setfade(false)\r\n        }, 2000);\r\n\r\n\r\n\r\n    }, [MainImageFiltersRef.current])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n\r\n            {Originalray[index] === 1 ? null : null}\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport const TaskbarSuperphotoImageView = React.memo(TaskbarSuperphotoImageViewx);\r\n"]},"metadata":{},"sourceType":"module"}