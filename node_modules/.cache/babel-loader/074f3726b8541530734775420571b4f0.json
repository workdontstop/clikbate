{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\ProfileOutter.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { matchPc, matchTablet } from \"../DetectDevice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./profile.css\";\nimport { Profile } from \"./Profile\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ProfileOutter() {\n  _s();\n\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env;\n  const dispatch = useDispatch();\n  const [postData, setPostData] = useState([]);\n  const [postDatainner, setpostDatainner] = useState([[]]);\n  const getSliderWidthRef = useRef(null);\n  const [formtype] = useState(1);\n  const [showModalForm, setShowModalForm] = useState(false);\n  const [getSliderWidth, setgetSliderWidth] = useState(0);\n  const [aboutTemplateGo] = useState(true);\n  const [commentTemplateGo] = useState(false);\n  const [itemheight, setitemheight] = useState([]);\n  const [itemheighthold, setitemheighthold] = useState([]);\n  const [itemcroptype, setitemcroptype] = useState([]);\n  const [itemFinalPostHeight, setitemFinalPostHeight] = useState([]);\n  const [itemOriginalPostHeight, setitemOriginalPostHeight] = useState([]);\n  const [itemCLICKED, setitemCLICKED] = useState([]);\n  const [onLoadDataOnce, setonLoadDataOnce] = useState([]);\n  const [ActiveAutoPlay, setActiveAutoPlay] = useState([]);\n  const postDivRef = useRef([]);\n  const postItemsRef = useRef([]);\n  var heightplus = matchPc ? 0.31 : matchTablet ? 0.245 : 0.19;\n  var postbackheighthold = document.documentElement.clientHeight * heightplus;\n  const [postbackheight] = useState(postbackheighthold);\n  const scrollTypeTimer = useRef(null); ///\n  ///\n  ///\n  ///TYPES FOR ISLOGGEDIN\n\n  /////////////////////////////\n  ///\n  ///\n  ///LOGGED IN DATA FROM REDUX\n  const {\n    scroller\n  } = useSelector(state => ({ ...state.ScrollTypeReducer\n  }));\n  const scrollerReducer = scroller; ///\n  ///\n  ///CLOSE LOG MODAL\n\n  const [OpenModalFormOnce, setOpenModalFormOnce] = useState(false);\n  const CloseModalForm = useCallback(DeviceBackButtonClicked => {\n    ///onpopstate fires when back and forward buttons used\n    if (DeviceBackButtonClicked === 1) {\n      window.onpopstate = () => {\n        setShowModalForm(false);\n        setOpenModalFormOnce(false);\n      };\n    } else {\n      setShowModalForm(false);\n      setOpenModalFormOnce(false); ///Replace modal history state with previous history state\n\n      window.history.back();\n    }\n  }, []);\n  const OpenModalForm = useCallback(formtypedata => {\n    setShowModalForm(true); ///Replace current history state (since opening a modal Level 2 grid)...\n    /// if this was a level 1 grid (profile-info page use Pushstate to create new history state)\n\n    let modalName = \"Biography\";\n\n    if (!OpenModalFormOnce) {\n      window.history.pushState(null, \"\", modalName);\n      setOpenModalFormOnce(true);\n      CloseModalForm(1);\n    }\n  }, [OpenModalFormOnce, CloseModalForm]); ///\n  ///\n  ///\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\n\n  useEffect(() => {\n    if (getSliderWidthRef.current && getSliderWidthRef.current.clientWidth) {\n      setgetSliderWidth(getSliderWidthRef.current.clientWidth);\n    }\n  }, []); ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    screenHeight,\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const screenHeightReducer = screenHeight;\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  ///MUI PAPER STYLES FROM REDUX\n\n  const {\n    PaperStyleLight,\n    PaperStyleDark\n  } = useSelector(state => ({ ...state.PaperReducerLightnDark\n  }));\n  var PaperStyleReducer = \"\";\n\n  if (darkmodeReducer) {\n    PaperStyleReducer = PaperStyleDark;\n  } else {\n    PaperStyleReducer = PaperStyleLight;\n  }\n\n  function percentage(num, per) {\n    return num / 100 * per;\n  } ////////////////////////////////////////////////////////////////////\n  ///\n  ///\n  ///\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\n\n\n  const addPostItemsRef = itemsRef => {\n    if (itemsRef && !postItemsRef.current.includes(itemsRef)) {\n      postItemsRef.current.push(itemsRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  }; ///\n  ///\n  ///\n  ///CREATE div REFS FROM POSTS AND ADD THEM TO ARRAY\n\n\n  const addpostDivRef = divRef => {\n    if (divRef && !postDivRef.current.includes(divRef)) {\n      postDivRef.current.push(divRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  }; ///\n  ///\n  ///\n  ///DOT ENV DATA\n  ///\n  ///\n  ///MODAL ZOOMED STATE\n\n\n  useEffect(() => {\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/feeds_chronological`, {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.message === \"feeds fetched\") {\n        var postdataRep = response.data.payload;\n        postdataRep.forEach(obj => {\n          obj.itemheight = \"auto\";\n          obj.itemrealheighthold = \"0\";\n          obj.itemcroptype = \"0\";\n          obj.itemFinalPostHeight = \"0\";\n          obj.itemOriginalPostHeight = \"0\";\n          obj.itemCLICKED = false;\n          obj.onLoadDataOnce = false;\n          obj.ActiveAutoPlay = true;\n        });\n        const newArrxt = [[...postDatainner]];\n        postdataRep.map((obj, index) => {\n          const newArrxtq = [];\n\n          for (let i = 0; i < postdataRep[index].post_count; i++) {\n            ///////////////////////////////\n            if (i === 0) {\n              newArrxtq[i] = `${postdataRep[index].item1}`;\n            } else if (i === 1) {\n              newArrxtq[i] = `${postdataRep[index].item2}`;\n            } else if (i === 2) {\n              newArrxtq[i] = `${postdataRep[index].item3}`;\n            } else if (i === 3) {\n              newArrxtq[i] = `${postdataRep[index].item4}`;\n            } else if (i === 4) {\n              newArrxtq[i] = `${postdataRep[index].item5}`;\n            } else if (i === 5) {\n              newArrxtq[i] = `${postdataRep[index].item6}`;\n            } else if (i === 6) {\n              newArrxtq[i] = `${postdataRep[index].item7}`;\n            } else if (i === 7) {\n              newArrxtq[i] = `${postdataRep[index].item8}`;\n            } else if (i === 8) {\n              newArrxtq[i] = `${postdataRep[index].item9}`;\n            } else if (i === 9) {\n              newArrxtq[i] = `${postdataRep[index].item10}`;\n            } else if (i === 10) {\n              newArrxtq[i] = `${postdataRep[index].item11}`;\n            } else if (i === 11) {\n              newArrxtq[i] = `${postdataRep[index].item12}`;\n            } else if (i === 12) {\n              newArrxtq[i] = `${postdataRep[index].item13}`;\n            } else if (i === 13) {\n              newArrxtq[i] = `${postdataRep[index].item14}`;\n            } else if (i === 14) {\n              newArrxtq[i] = `${postdataRep[index].item15}`;\n            } else if (i === 15) {\n              newArrxtq[i] = `${postdataRep[index].item16}`;\n            } else {}\n\n            if (i + 1 === postdataRep[index].post_count) {\n              newArrxt[index] = newArrxtq;\n              setpostDatainner(newArrxt);\n            } /////\n            ///////////////////////////////\n\n          }\n        });\n        setPostData(postdataRep);\n      } else if (response.data.message === \"error in fetching feeds\") {\n        alert(\"Connection malfunction profile outter\");\n      }\n    }).catch(function (error) {\n      alert(\"Connection malfunction profile outter 2\");\n    });\n  }, [REACT_APP_SUPERSTARZ_URL]);\n  useEffect(() => {\n    if (postData.length > 0) {\n      const initialItemheight = postData.map(obj => obj.itemheight);\n      setitemheight(initialItemheight);\n      const initialItemrealheighthold = postData.map(obj => obj.itemrealheighthold);\n      setitemheighthold(initialItemrealheighthold);\n      const initialtemcroptype = postData.map(obj => obj.itemcroptype);\n      setitemcroptype(initialtemcroptype);\n      const initialitemFinalPostHeight = postData.map(obj => obj.itemFinalPostHeight);\n      setitemFinalPostHeight(initialitemFinalPostHeight);\n      const initialitemOriginalPostHeight = postData.map(obj => obj.itemOriginalPostHeight);\n      setitemOriginalPostHeight(initialitemOriginalPostHeight);\n      const initialitemCLICKED = postData.map(obj => obj.itemCLICKED);\n      setitemCLICKED(initialitemCLICKED);\n      const initialsetonLoadDataOnce = postData.map(obj => obj.onLoadDataOnce);\n      setonLoadDataOnce(initialsetonLoadDataOnce);\n      const initialsetActiveAutoPlay = postData.map(obj => obj.ActiveAutoPlay);\n      setActiveAutoPlay(initialsetActiveAutoPlay);\n    }\n  }, [postData]); ///\n  ///\n\n  const onPostsItemload = useCallback((e, index, itemnum) => {\n    if (onLoadDataOnce[index]) {} else {\n      if (itemnum === 0) {\n        if (postItemsRef.current[index]) {\n          var imageHeight = postItemsRef.current[index].clientHeight; ///////////////////////////////\n\n          const newArraa = [...itemheight];\n          newArraa[index] = `${imageHeight}px`;\n          setitemheight(newArraa); ///////////////////////////////\n          ///////////////////////////////\n\n          const newArrx = [...itemheighthold];\n          var newh = imageHeight / 1.042 - postbackheighthold;\n          newArrx[index] = `${newh}`;\n          setitemheighthold(newArrx); ///////////////////////////////\n\n          const newArrayFinalPostHeight = [...itemFinalPostHeight];\n          newArrayFinalPostHeight[index] = imageHeight;\n          setitemFinalPostHeight(newArrayFinalPostHeight); ///////////////////////////////\n\n          const newArrayitemOriginalPostHeight = [...itemOriginalPostHeight];\n          newArrayitemOriginalPostHeight[index] = imageHeight;\n          setitemOriginalPostHeight(newArrayitemOriginalPostHeight); ///////////////////////////////\n\n          var choppedHeight = percentage(screenHeightReducer, 100);\n          var choppedwidth = percentage(screenHeightReducer, matchPc ? 55 : matchTablet ? 52 : 40);\n\n          if (imageHeight < choppedwidth) {\n            /////WIDE IMAGE SET\n            const newArr = [...itemheight];\n            newArr[index] = `${choppedwidth}px`;\n            setitemheight(newArr); ///////////////////////////////\n\n            const newArrx = [...itemheighthold];\n            var newh = choppedwidth / 1.015 - postbackheighthold;\n            newArrx[index] = `${newh}`;\n            setitemheighthold(newArrx); ////////////////////////////\n            ///////////////////////////////\n\n            const newArrxq = [...itemcroptype];\n            newArrxq[index] = 1;\n            setitemcroptype(newArrxq); ////////////////////////////\n            ///////////////////////////////\n\n            const newArrayFinalPostHeight = [...itemFinalPostHeight];\n            newArrayFinalPostHeight[index] = choppedwidth;\n            setitemFinalPostHeight(newArrayFinalPostHeight);\n          } else if (imageHeight > choppedHeight) {\n            /////LONG IMAGE SET\n            const newArr = [...itemheight];\n            newArr[index] = `${choppedHeight}px`;\n            setitemheight(newArr); ///////////////////////////////\n\n            const newArrx = [...itemheighthold];\n            var newh = choppedHeight / 1 - postbackheighthold;\n            newArrx[index] = `${newh}`;\n            setitemheighthold(newArrx); ////////////////////////////////\n            ///////////////////////////////\n\n            const newArrxq = [...itemcroptype];\n            newArrxq[index] = 2;\n            setitemcroptype(newArrxq); ///////////////////////////////\n\n            const newArrayFinalPostHeight = [...itemFinalPostHeight];\n            newArrayFinalPostHeight[index] = choppedHeight;\n            setitemFinalPostHeight(newArrayFinalPostHeight); ///////////////////////////////\n          } else {\n            var imageWidth = postItemsRef.current[index].clientWidth;\n\n            if (imageWidth > imageHeight) {\n              ///////////////////////////////\n              const newArrx = [...itemheighthold];\n              var newh = imageHeight / 1.066 - postbackheighthold;\n              newArrx[index] = `${newh}`;\n              setitemheighthold(newArrx); ///////////////////////////////\n              ///////////////////////////////\n\n              const newArrxq = [...itemcroptype];\n              newArrxq[index] = 3;\n              setitemcroptype(newArrxq); ///////////////////////////////\n            } else {\n              ///////////////////////////////\n              const newArrxq = [...itemcroptype];\n              newArrxq[index] = 4;\n              setitemcroptype(newArrxq); ///////////////////////////////\n            }\n          } ///////////////////////////////\n\n\n          const newArrxy = [...onLoadDataOnce];\n          newArrxy[index] = true;\n          setonLoadDataOnce(newArrxy); ///////////////////////////////\n        }\n      }\n    }\n  }, [screenHeightReducer, itemheight, itemheighthold, itemFinalPostHeight]);\n\n  const scrollToPost = index => {\n    postDivRef.current[index].scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\"\n    });\n  };\n\n  const postitemSHOWFULLHEIGHT = (index, type) => {\n    if (itemcroptype[index] === 1 || itemcroptype[index] === 2) {\n      if (type === 0) {\n        const newitemHeight = [...itemheight];\n        newitemHeight[index] = `auto`;\n        setitemheight(newitemHeight);\n      } else {\n        const newitemHeight = [...itemheight];\n        newitemHeight[index] = `${itemFinalPostHeight[index]}px`;\n        setitemheight(newitemHeight);\n      }\n    }\n  };\n\n  const scrollLongPicTimer = useRef(null);\n  const scrollLongPicTimerx = useRef(null);\n\n  const AUTOSlideLongImages = index => {\n    if (itemcroptype[index] === 2) {\n      scrollLongPicTimerx.current = setTimeout(() => {\n        if (paperPostScrollRef.current) {\n          paperPostScrollRef.current.scrollTo({\n            top: paperPostScrollRef.current.scrollTop + itemOriginalPostHeight[index] / 3,\n            behavior: \"smooth\"\n          });\n        }\n      }, 500);\n      scrollLongPicTimer.current = setTimeout(() => {\n        postDivRef.current[index].scrollIntoView({\n          behavior: \"smooth\",\n          block: \"start\"\n        });\n      }, 1300);\n    }\n  }; ///\n  ///\n  ///\n  /// SLIDER DISPATCH\n\n\n  const onPostsItemClicked = index => {\n    if (itemCLICKED[index]) {\n      const newclickArray = [...itemCLICKED];\n      newclickArray[index] = false;\n      setitemCLICKED(newclickArray);\n      postitemSHOWFULLHEIGHT(index, 1);\n      scrollToPost(index);\n    } else {\n      AUTOSlideLongImages(index);\n\n      if (scrollTypeTimer.current) {\n        clearTimeout(scrollTypeTimer.current);\n      }\n\n      const newclickArray = [...itemCLICKED];\n      newclickArray[index] = true;\n      setitemCLICKED(newclickArray);\n      postitemSHOWFULLHEIGHT(index, 0);\n      scrollToPost(index);\n    }\n  };\n\n  const breakPoints = {\n    default: 2,\n    960: 2,\n    600: 1\n  }; ///\n  ///\n  ///TYPES FOR ISLOGGEDIN\n\n  ///\n  ///LOGGED IN DATA FROM REDUX\n  const {\n    loggedIn\n  } = useSelector(state => ({ ...state.IsLoggedReducer\n  }));\n  const loggedInReducer = loggedIn; ///\n  ///\n  ///\n  /// GET COLOR FROM REDUX STORE\n\n  const {\n    color,\n    colordark\n  } = useSelector(state => ({ ...state.GlobalReducerColor\n  }));\n  const colorReducer = color;\n  const colorReducerdark = colordark;\n  const paperPostScrollRef = useRef(null);\n  console.log(postData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loggedInReducer ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: matchPc ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Paper, {\n          ref: paperPostScrollRef,\n          className: darkmodeReducer ? \"postscroll-dark\" : \"postscroll-light\",\n          style: {\n            backgroundImage: PaperStyleReducer,\n            borderRadius: \"0px\",\n            height: \"100vh\",\n            overflowY: \"auto\",\n            overflowX: \"hidden\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Profile, {\n            getSliderWidthRef: getSliderWidthRef,\n            OpenModalForm: OpenModalForm,\n            getSliderWidth: getSliderWidth,\n            postData: postData,\n            addPostItemsRef: addPostItemsRef,\n            postDivRef: postDivRef,\n            onPostsItemload: onPostsItemload,\n            itemheight: itemheight,\n            itemheighthold: itemheighthold,\n            postbackheight: postbackheight,\n            formtype: formtype,\n            showModalForm: showModalForm,\n            CloseModalForm: CloseModalForm,\n            aboutTemplateGo: aboutTemplateGo,\n            commentTemplateGo: commentTemplateGo,\n            itemcroptype: itemcroptype,\n            itemFinalPostHeight: itemFinalPostHeight,\n            onPostsItemClicked: onPostsItemClicked,\n            itemCLICKED: itemCLICKED,\n            addpostDivRef: addpostDivRef,\n            postDatainner: postDatainner,\n            itemOriginalPostHeight: itemOriginalPostHeight,\n            ActiveAutoPlay: ActiveAutoPlay,\n            setActiveAutoPlay: setActiveAutoPlay,\n            AUTOSlideLongImages: AUTOSlideLongImages,\n            paperPostScrollRef: paperPostScrollRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Paper, {\n        ref: paperPostScrollRef,\n        style: {\n          backgroundImage: PaperStyleReducer,\n          borderRadius: \"0px\",\n          minHeight: \"100vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Profile, {\n          getSliderWidthRef: getSliderWidthRef,\n          OpenModalForm: OpenModalForm,\n          getSliderWidth: getSliderWidth,\n          postData: postData,\n          addPostItemsRef: addPostItemsRef,\n          postDivRef: postDivRef,\n          onPostsItemload: onPostsItemload,\n          itemheight: itemheight,\n          itemheighthold: itemheighthold,\n          postbackheight: postbackheight,\n          formtype: formtype,\n          showModalForm: showModalForm,\n          CloseModalForm: CloseModalForm,\n          aboutTemplateGo: aboutTemplateGo,\n          commentTemplateGo: commentTemplateGo,\n          itemcroptype: itemcroptype,\n          itemFinalPostHeight: itemFinalPostHeight,\n          onPostsItemClicked: onPostsItemClicked,\n          itemCLICKED: itemCLICKED,\n          addpostDivRef: addpostDivRef,\n          postDatainner: postDatainner,\n          itemOriginalPostHeight: itemOriginalPostHeight,\n          ActiveAutoPlay: ActiveAutoPlay,\n          setActiveAutoPlay: setActiveAutoPlay,\n          AUTOSlideLongImages: AUTOSlideLongImages,\n          paperPostScrollRef: paperPostScrollRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : null\n  }, void 0, false);\n}\n\n_s(ProfileOutter, \"LuOsjNWDsFSz+j1Z4ddLIQcSWmw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileOutter;\nexport default ProfileOutter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileOutter\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/ProfileOutter.tsx"],"names":["React","useRef","useState","useEffect","useCallback","Paper","matchPc","matchTablet","useSelector","useDispatch","Profile","Axios","ProfileOutter","REACT_APP_SUPERSTARZ_URL","process","env","dispatch","postData","setPostData","postDatainner","setpostDatainner","getSliderWidthRef","formtype","showModalForm","setShowModalForm","getSliderWidth","setgetSliderWidth","aboutTemplateGo","commentTemplateGo","itemheight","setitemheight","itemheighthold","setitemheighthold","itemcroptype","setitemcroptype","itemFinalPostHeight","setitemFinalPostHeight","itemOriginalPostHeight","setitemOriginalPostHeight","itemCLICKED","setitemCLICKED","onLoadDataOnce","setonLoadDataOnce","ActiveAutoPlay","setActiveAutoPlay","postDivRef","postItemsRef","heightplus","postbackheighthold","document","documentElement","clientHeight","postbackheight","scrollTypeTimer","scroller","state","ScrollTypeReducer","scrollerReducer","OpenModalFormOnce","setOpenModalFormOnce","CloseModalForm","DeviceBackButtonClicked","window","onpopstate","history","back","OpenModalForm","formtypedata","modalName","pushState","current","clientWidth","screenHeight","darkmode","GlobalReducer","screenHeightReducer","darkmodeReducer","PaperStyleLight","PaperStyleDark","PaperReducerLightnDark","PaperStyleReducer","percentage","num","per","addPostItemsRef","itemsRef","includes","push","addpostDivRef","divRef","post","withCredentials","then","response","data","message","postdataRep","payload","forEach","obj","itemrealheighthold","newArrxt","map","index","newArrxtq","i","post_count","item1","item2","item3","item4","item5","item6","item7","item8","item9","item10","item11","item12","item13","item14","item15","item16","alert","catch","error","length","initialItemheight","initialItemrealheighthold","initialtemcroptype","initialitemFinalPostHeight","initialitemOriginalPostHeight","initialitemCLICKED","initialsetonLoadDataOnce","initialsetActiveAutoPlay","onPostsItemload","e","itemnum","imageHeight","newArraa","newArrx","newh","newArrayFinalPostHeight","newArrayitemOriginalPostHeight","choppedHeight","choppedwidth","newArr","newArrxq","imageWidth","newArrxy","scrollToPost","scrollIntoView","behavior","block","postitemSHOWFULLHEIGHT","type","newitemHeight","scrollLongPicTimer","scrollLongPicTimerx","AUTOSlideLongImages","setTimeout","paperPostScrollRef","scrollTo","top","scrollTop","onPostsItemClicked","newclickArray","clearTimeout","breakPoints","default","loggedIn","IsLoggedReducer","loggedInReducer","color","colordark","GlobalReducerColor","colorReducer","colorReducerdark","console","log","backgroundImage","borderRadius","height","overflowY","overflowX","minHeight"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport { Paper, Grid, Box } from \"@material-ui/core\";\r\nimport { matchMobile, matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport \"./profile.css\";\r\nimport { Profile } from \"./Profile\";\r\nimport Axios from \"axios\";\r\n\r\nfunction ProfileOutter() {\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [postData, setPostData] = useState<Array<any>>([]);\r\n  const [postDatainner, setpostDatainner] = useState<Array<any>>([[]]);\r\n\r\n  const getSliderWidthRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [formtype] = useState<number>(1);\r\n  const [showModalForm, setShowModalForm] = useState<boolean>(false);\r\n\r\n  const [getSliderWidth, setgetSliderWidth] = useState(0);\r\n\r\n  const [aboutTemplateGo] = useState<boolean>(true);\r\n  const [commentTemplateGo] = useState<boolean>(false);\r\n\r\n  const [itemheight, setitemheight] = useState<Array<string>>([]);\r\n  const [itemheighthold, setitemheighthold] = useState<Array<string>>([]);\r\n  const [itemcroptype, setitemcroptype] = useState<Array<number>>([]);\r\n  const [itemFinalPostHeight, setitemFinalPostHeight] = useState<Array<number>>(\r\n    []\r\n  );\r\n  const [itemOriginalPostHeight, setitemOriginalPostHeight] = useState<\r\n    Array<number>\r\n  >([]);\r\n\r\n  const [itemCLICKED, setitemCLICKED] = useState<Array<boolean>>([]);\r\n  const [onLoadDataOnce, setonLoadDataOnce] = useState<Array<boolean>>([]);\r\n  const [ActiveAutoPlay, setActiveAutoPlay] = useState<Array<boolean>>([]);\r\n\r\n  const postDivRef = useRef<any>([]);\r\n\r\n  const postItemsRef = useRef<any>([]);\r\n\r\n  var heightplus = matchPc ? 0.31 : matchTablet ? 0.245 : 0.19;\r\n  var postbackheighthold = document.documentElement.clientHeight * heightplus;\r\n\r\n  const [postbackheight] = useState<number>(postbackheighthold);\r\n\r\n  const scrollTypeTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///TYPES FOR ISLOGGEDIN\r\n  interface RootStateScrollType {\r\n    ScrollTypeReducer: {\r\n      scroller: string;\r\n    };\r\n  }\r\n\r\n  /////////////////////////////\r\n  ///\r\n  ///\r\n  ///LOGGED IN DATA FROM REDUX\r\n  const { scroller } = useSelector((state: RootStateScrollType) => ({\r\n    ...state.ScrollTypeReducer,\r\n  }));\r\n  const scrollerReducer = scroller;\r\n\r\n  ///\r\n  ///\r\n  ///CLOSE LOG MODAL\r\n  const [OpenModalFormOnce, setOpenModalFormOnce] = useState<boolean>(false);\r\n  const CloseModalForm = useCallback((DeviceBackButtonClicked: number) => {\r\n    ///onpopstate fires when back and forward buttons used\r\n    if (DeviceBackButtonClicked === 1) {\r\n      window.onpopstate = () => {\r\n        setShowModalForm(false);\r\n        setOpenModalFormOnce(false);\r\n      };\r\n    } else {\r\n      setShowModalForm(false);\r\n      setOpenModalFormOnce(false);\r\n      ///Replace modal history state with previous history state\r\n      window.history.back();\r\n    }\r\n  }, []);\r\n\r\n  const OpenModalForm = useCallback(\r\n    (formtypedata: number) => {\r\n      setShowModalForm(true);\r\n      ///Replace current history state (since opening a modal Level 2 grid)...\r\n      /// if this was a level 1 grid (profile-info page use Pushstate to create new history state)\r\n      let modalName = \"Biography\";\r\n\r\n      if (!OpenModalFormOnce) {\r\n        window.history.pushState(null, \"\", modalName);\r\n        setOpenModalFormOnce(true);\r\n        CloseModalForm(1);\r\n      }\r\n    },\r\n    [OpenModalFormOnce, CloseModalForm]\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\r\n  useEffect(() => {\r\n    if (getSliderWidthRef.current && getSliderWidthRef.current.clientWidth) {\r\n      setgetSliderWidth(getSliderWidthRef.current.clientWidth);\r\n    }\r\n  }, []);\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const { screenHeight, darkmode } = useSelector(\r\n    (state: RootStateGlobalReducer) => ({\r\n      ...state.GlobalReducer,\r\n    })\r\n  );\r\n  const screenHeightReducer = screenHeight;\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///MUI PAPER STYLES FROM REDUX\r\n  const { PaperStyleLight, PaperStyleDark } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.PaperReducerLightnDark,\r\n    })\r\n  );\r\n  var PaperStyleReducer = \"\";\r\n\r\n  if (darkmodeReducer) {\r\n    PaperStyleReducer = PaperStyleDark;\r\n  } else {\r\n    PaperStyleReducer = PaperStyleLight;\r\n  }\r\n\r\n  function percentage(num: number, per: number) {\r\n    return (num / 100) * per;\r\n  }\r\n\r\n  ////////////////////////////////////////////////////////////////////\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\r\n  const addPostItemsRef = (itemsRef: any) => {\r\n    if (itemsRef && !postItemsRef.current.includes(itemsRef)) {\r\n      postItemsRef.current.push(itemsRef);\r\n    }\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE div REFS FROM POSTS AND ADD THEM TO ARRAY\r\n  const addpostDivRef = (divRef: any) => {\r\n    if (divRef && !postDivRef.current.includes(divRef)) {\r\n      postDivRef.current.push(divRef);\r\n    }\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///DOT ENV DATA\r\n\r\n  ///\r\n  ///\r\n  ///MODAL ZOOMED STATE\r\n  useEffect(() => {\r\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/feeds_chronological`, {\r\n      withCredentials: true,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.message === \"feeds fetched\") {\r\n          var postdataRep = response.data.payload;\r\n\r\n          postdataRep.forEach((obj: any) => {\r\n            obj.itemheight = \"auto\";\r\n            obj.itemrealheighthold = \"0\";\r\n            obj.itemcroptype = \"0\";\r\n            obj.itemFinalPostHeight = \"0\";\r\n            obj.itemOriginalPostHeight = \"0\";\r\n            obj.itemCLICKED = false;\r\n            obj.onLoadDataOnce = false;\r\n            obj.ActiveAutoPlay = true;\r\n          });\r\n\r\n          const newArrxt: any = [[...postDatainner]];\r\n          postdataRep.map((obj: any, index: any) => {\r\n            const newArrxtq: any = [];\r\n            for (let i = 0; i < postdataRep[index].post_count; i++) {\r\n              ///////////////////////////////\r\n\r\n              if (i === 0) {\r\n                newArrxtq[i] = `${postdataRep[index].item1}`;\r\n              } else if (i === 1) {\r\n                newArrxtq[i] = `${postdataRep[index].item2}`;\r\n              } else if (i === 2) {\r\n                newArrxtq[i] = `${postdataRep[index].item3}`;\r\n              } else if (i === 3) {\r\n                newArrxtq[i] = `${postdataRep[index].item4}`;\r\n              } else if (i === 4) {\r\n                newArrxtq[i] = `${postdataRep[index].item5}`;\r\n              } else if (i === 5) {\r\n                newArrxtq[i] = `${postdataRep[index].item6}`;\r\n              } else if (i === 6) {\r\n                newArrxtq[i] = `${postdataRep[index].item7}`;\r\n              } else if (i === 7) {\r\n                newArrxtq[i] = `${postdataRep[index].item8}`;\r\n              } else if (i === 8) {\r\n                newArrxtq[i] = `${postdataRep[index].item9}`;\r\n              } else if (i === 9) {\r\n                newArrxtq[i] = `${postdataRep[index].item10}`;\r\n              } else if (i === 10) {\r\n                newArrxtq[i] = `${postdataRep[index].item11}`;\r\n              } else if (i === 11) {\r\n                newArrxtq[i] = `${postdataRep[index].item12}`;\r\n              } else if (i === 12) {\r\n                newArrxtq[i] = `${postdataRep[index].item13}`;\r\n              } else if (i === 13) {\r\n                newArrxtq[i] = `${postdataRep[index].item14}`;\r\n              } else if (i === 14) {\r\n                newArrxtq[i] = `${postdataRep[index].item15}`;\r\n              } else if (i === 15) {\r\n                newArrxtq[i] = `${postdataRep[index].item16}`;\r\n              } else {\r\n              }\r\n\r\n              if (i + 1 === postdataRep[index].post_count) {\r\n                newArrxt[index] = newArrxtq;\r\n                setpostDatainner(newArrxt);\r\n              }\r\n              /////\r\n              ///////////////////////////////\r\n            }\r\n          });\r\n\r\n          setPostData(postdataRep);\r\n        } else if (response.data.message === \"error in fetching feeds\") {\r\n          alert(\"Connection malfunction profile outter\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"Connection malfunction profile outter 2\");\r\n      });\r\n  }, [REACT_APP_SUPERSTARZ_URL]);\r\n\r\n  useEffect(() => {\r\n    if (postData.length > 0) {\r\n      const initialItemheight = postData.map((obj) => obj.itemheight);\r\n      setitemheight(initialItemheight);\r\n\r\n      const initialItemrealheighthold = postData.map(\r\n        (obj) => obj.itemrealheighthold\r\n      );\r\n      setitemheighthold(initialItemrealheighthold);\r\n\r\n      const initialtemcroptype = postData.map((obj) => obj.itemcroptype);\r\n      setitemcroptype(initialtemcroptype);\r\n\r\n      const initialitemFinalPostHeight = postData.map(\r\n        (obj) => obj.itemFinalPostHeight\r\n      );\r\n      setitemFinalPostHeight(initialitemFinalPostHeight);\r\n\r\n      const initialitemOriginalPostHeight = postData.map(\r\n        (obj) => obj.itemOriginalPostHeight\r\n      );\r\n      setitemOriginalPostHeight(initialitemOriginalPostHeight);\r\n\r\n      const initialitemCLICKED = postData.map((obj) => obj.itemCLICKED);\r\n      setitemCLICKED(initialitemCLICKED);\r\n\r\n      const initialsetonLoadDataOnce = postData.map(\r\n        (obj) => obj.onLoadDataOnce\r\n      );\r\n      setonLoadDataOnce(initialsetonLoadDataOnce);\r\n\r\n      const initialsetActiveAutoPlay = postData.map(\r\n        (obj) => obj.ActiveAutoPlay\r\n      );\r\n      setActiveAutoPlay(initialsetActiveAutoPlay);\r\n    }\r\n  }, [postData]);\r\n\r\n  ///\r\n  ///\r\n  const onPostsItemload = useCallback(\r\n    (e: any, index: number, itemnum: number) => {\r\n      if (onLoadDataOnce[index]) {\r\n      } else {\r\n        if (itemnum === 0) {\r\n          if (postItemsRef.current[index]) {\r\n            var imageHeight = postItemsRef.current[index].clientHeight;\r\n\r\n            ///////////////////////////////\r\n            const newArraa = [...itemheight];\r\n            newArraa[index] = `${imageHeight}px`;\r\n            setitemheight(newArraa);\r\n            ///////////////////////////////\r\n\r\n            ///////////////////////////////\r\n            const newArrx = [...itemheighthold];\r\n            var newh = imageHeight / 1.042 - postbackheighthold;\r\n            newArrx[index] = `${newh}`;\r\n            setitemheighthold(newArrx);\r\n            ///////////////////////////////\r\n            const newArrayFinalPostHeight = [...itemFinalPostHeight];\r\n            newArrayFinalPostHeight[index] = imageHeight;\r\n            setitemFinalPostHeight(newArrayFinalPostHeight);\r\n\r\n            ///////////////////////////////\r\n            const newArrayitemOriginalPostHeight = [...itemOriginalPostHeight];\r\n            newArrayitemOriginalPostHeight[index] = imageHeight;\r\n            setitemOriginalPostHeight(newArrayitemOriginalPostHeight);\r\n            ///////////////////////////////\r\n\r\n            var choppedHeight = percentage(screenHeightReducer, 100);\r\n\r\n            var choppedwidth = percentage(\r\n              screenHeightReducer,\r\n              matchPc ? 55 : matchTablet ? 52 : 40\r\n            );\r\n\r\n            if (imageHeight < choppedwidth) {\r\n              /////WIDE IMAGE SET\r\n              const newArr = [...itemheight];\r\n              newArr[index] = `${choppedwidth}px`;\r\n              setitemheight(newArr);\r\n              ///////////////////////////////\r\n              const newArrx = [...itemheighthold];\r\n              var newh = choppedwidth / 1.015 - postbackheighthold;\r\n              newArrx[index] = `${newh}`;\r\n              setitemheighthold(newArrx);\r\n              ////////////////////////////\r\n              ///////////////////////////////\r\n              const newArrxq = [...itemcroptype];\r\n              newArrxq[index] = 1;\r\n              setitemcroptype(newArrxq);\r\n              ////////////////////////////\r\n              ///////////////////////////////\r\n              const newArrayFinalPostHeight = [...itemFinalPostHeight];\r\n              newArrayFinalPostHeight[index] = choppedwidth;\r\n              setitemFinalPostHeight(newArrayFinalPostHeight);\r\n            } else if (imageHeight > choppedHeight) {\r\n              /////LONG IMAGE SET\r\n              const newArr = [...itemheight];\r\n              newArr[index] = `${choppedHeight}px`;\r\n              setitemheight(newArr);\r\n              ///////////////////////////////\r\n              const newArrx = [...itemheighthold];\r\n              var newh = choppedHeight / 1 - postbackheighthold;\r\n              newArrx[index] = `${newh}`;\r\n              setitemheighthold(newArrx);\r\n              ////////////////////////////////\r\n              ///////////////////////////////\r\n              const newArrxq = [...itemcroptype];\r\n              newArrxq[index] = 2;\r\n              setitemcroptype(newArrxq);\r\n              ///////////////////////////////\r\n              const newArrayFinalPostHeight = [...itemFinalPostHeight];\r\n              newArrayFinalPostHeight[index] = choppedHeight;\r\n              setitemFinalPostHeight(newArrayFinalPostHeight);\r\n              ///////////////////////////////\r\n            } else {\r\n              var imageWidth = postItemsRef.current[index].clientWidth;\r\n              if (imageWidth > imageHeight) {\r\n                ///////////////////////////////\r\n                const newArrx = [...itemheighthold];\r\n                var newh = imageHeight / 1.066 - postbackheighthold;\r\n                newArrx[index] = `${newh}`;\r\n                setitemheighthold(newArrx);\r\n                ///////////////////////////////\r\n                ///////////////////////////////\r\n                const newArrxq = [...itemcroptype];\r\n                newArrxq[index] = 3;\r\n                setitemcroptype(newArrxq);\r\n                ///////////////////////////////\r\n              } else {\r\n                ///////////////////////////////\r\n                const newArrxq = [...itemcroptype];\r\n                newArrxq[index] = 4;\r\n                setitemcroptype(newArrxq);\r\n                ///////////////////////////////\r\n              }\r\n            }\r\n            ///////////////////////////////\r\n            const newArrxy = [...onLoadDataOnce];\r\n            newArrxy[index] = true;\r\n            setonLoadDataOnce(newArrxy);\r\n            ///////////////////////////////\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [screenHeightReducer, itemheight, itemheighthold, itemFinalPostHeight]\r\n  );\r\n\r\n  const scrollToPost = (index: any) => {\r\n    postDivRef.current[index].scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\",\r\n    });\r\n  };\r\n\r\n  const postitemSHOWFULLHEIGHT = (index: any, type: number) => {\r\n    if (itemcroptype[index] === 1 || itemcroptype[index] === 2) {\r\n      if (type === 0) {\r\n        const newitemHeight = [...itemheight];\r\n        newitemHeight[index] = `auto`;\r\n        setitemheight(newitemHeight);\r\n      } else {\r\n        const newitemHeight = [...itemheight];\r\n        newitemHeight[index] = `${itemFinalPostHeight[index]}px`;\r\n        setitemheight(newitemHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  const scrollLongPicTimer = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const scrollLongPicTimerx = useRef<ReturnType<typeof setTimeout> | null>(\r\n    null\r\n  );\r\n\r\n  const AUTOSlideLongImages = (index: number) => {\r\n    if (itemcroptype[index] === 2) {\r\n      scrollLongPicTimerx.current = setTimeout(() => {\r\n        if (paperPostScrollRef.current) {\r\n          paperPostScrollRef.current.scrollTo({\r\n            top:\r\n              paperPostScrollRef.current.scrollTop +\r\n              itemOriginalPostHeight[index] / 3,\r\n            behavior: \"smooth\",\r\n          });\r\n        }\r\n      }, 500);\r\n      scrollLongPicTimer.current = setTimeout(() => {\r\n        postDivRef.current[index].scrollIntoView({\r\n          behavior: \"smooth\",\r\n          block: \"start\",\r\n        });\r\n      }, 1300);\r\n    }\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// SLIDER DISPATCH\r\n\r\n  const onPostsItemClicked = (index: number) => {\r\n    if (itemCLICKED[index]) {\r\n      const newclickArray = [...itemCLICKED];\r\n      newclickArray[index] = false;\r\n      setitemCLICKED(newclickArray);\r\n      postitemSHOWFULLHEIGHT(index, 1);\r\n      scrollToPost(index);\r\n    } else {\r\n      AUTOSlideLongImages(index);\r\n      if (scrollTypeTimer.current) {\r\n        clearTimeout(scrollTypeTimer.current);\r\n      }\r\n\r\n      const newclickArray = [...itemCLICKED];\r\n      newclickArray[index] = true;\r\n      setitemCLICKED(newclickArray);\r\n      postitemSHOWFULLHEIGHT(index, 0);\r\n      scrollToPost(index);\r\n    }\r\n  };\r\n\r\n  const breakPoints = {\r\n    default: 2,\r\n    960: 2,\r\n    600: 1,\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///TYPES FOR ISLOGGEDIN\r\n  interface RootStateIsLogged {\r\n    IsLoggedReducer: {\r\n      loggedIn: boolean;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///LOGGED IN DATA FROM REDUX\r\n  const { loggedIn } = useSelector((state: RootStateIsLogged) => ({\r\n    ...state.IsLoggedReducer,\r\n  }));\r\n  const loggedInReducer = loggedIn;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET COLOR FROM REDUX STORE\r\n  interface RootStateReducerColor {\r\n    GlobalReducerColor: {\r\n      color: string;\r\n      colordark: string;\r\n    };\r\n  }\r\n  const { color, colordark } = useSelector((state: RootStateReducerColor) => ({\r\n    ...state.GlobalReducerColor,\r\n  }));\r\n  const colorReducer = color;\r\n  const colorReducerdark = colordark;\r\n\r\n  const paperPostScrollRef = useRef<any>(null);\r\n\r\n  console.log(postData);\r\n\r\n  return (\r\n    <>\r\n      {loggedInReducer ? (\r\n        <>\r\n          {matchPc ? (\r\n            <>\r\n              {\" \"}\r\n              <Paper\r\n                ref={paperPostScrollRef}\r\n                className={\r\n                  darkmodeReducer ? \"postscroll-dark\" : \"postscroll-light\"\r\n                }\r\n                style={{\r\n                  backgroundImage: PaperStyleReducer,\r\n                  borderRadius: \"0px\",\r\n                  height: \"100vh\",\r\n                  overflowY: \"auto\",\r\n                  overflowX: \"hidden\",\r\n                }}\r\n              >\r\n                <Profile\r\n                  getSliderWidthRef={getSliderWidthRef}\r\n                  OpenModalForm={OpenModalForm}\r\n                  getSliderWidth={getSliderWidth}\r\n                  postData={postData}\r\n                  addPostItemsRef={addPostItemsRef}\r\n                  postDivRef={postDivRef}\r\n                  onPostsItemload={onPostsItemload}\r\n                  itemheight={itemheight}\r\n                  itemheighthold={itemheighthold}\r\n                  postbackheight={postbackheight}\r\n                  formtype={formtype}\r\n                  showModalForm={showModalForm}\r\n                  CloseModalForm={CloseModalForm}\r\n                  aboutTemplateGo={aboutTemplateGo}\r\n                  commentTemplateGo={commentTemplateGo}\r\n                  itemcroptype={itemcroptype}\r\n                  itemFinalPostHeight={itemFinalPostHeight}\r\n                  onPostsItemClicked={onPostsItemClicked}\r\n                  itemCLICKED={itemCLICKED}\r\n                  addpostDivRef={addpostDivRef}\r\n                  postDatainner={postDatainner}\r\n                  itemOriginalPostHeight={itemOriginalPostHeight}\r\n                  ActiveAutoPlay={ActiveAutoPlay}\r\n                  setActiveAutoPlay={setActiveAutoPlay}\r\n                  AUTOSlideLongImages={AUTOSlideLongImages}\r\n                  paperPostScrollRef={paperPostScrollRef}\r\n                />\r\n              </Paper>\r\n            </>\r\n          ) : (\r\n            <Paper\r\n              ref={paperPostScrollRef}\r\n              style={{\r\n                backgroundImage: PaperStyleReducer,\r\n                borderRadius: \"0px\",\r\n                minHeight: \"100vh\",\r\n              }}\r\n            >\r\n              <Profile\r\n                getSliderWidthRef={getSliderWidthRef}\r\n                OpenModalForm={OpenModalForm}\r\n                getSliderWidth={getSliderWidth}\r\n                postData={postData}\r\n                addPostItemsRef={addPostItemsRef}\r\n                postDivRef={postDivRef}\r\n                onPostsItemload={onPostsItemload}\r\n                itemheight={itemheight}\r\n                itemheighthold={itemheighthold}\r\n                postbackheight={postbackheight}\r\n                formtype={formtype}\r\n                showModalForm={showModalForm}\r\n                CloseModalForm={CloseModalForm}\r\n                aboutTemplateGo={aboutTemplateGo}\r\n                commentTemplateGo={commentTemplateGo}\r\n                itemcroptype={itemcroptype}\r\n                itemFinalPostHeight={itemFinalPostHeight}\r\n                onPostsItemClicked={onPostsItemClicked}\r\n                itemCLICKED={itemCLICKED}\r\n                addpostDivRef={addpostDivRef}\r\n                postDatainner={postDatainner}\r\n                itemOriginalPostHeight={itemOriginalPostHeight}\r\n                ActiveAutoPlay={ActiveAutoPlay}\r\n                setActiveAutoPlay={setActiveAutoPlay}\r\n                AUTOSlideLongImages={AUTOSlideLongImages}\r\n                paperPostScrollRef={paperPostScrollRef}\r\n              />\r\n            </Paper>\r\n          )}\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileOutter;\r\n"]},"metadata":{},"sourceType":"module"}