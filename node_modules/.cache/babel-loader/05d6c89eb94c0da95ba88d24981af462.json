{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\OptionInnerModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from \"react\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\nimport { useSpring, animated } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar toggleDarkMode = false;\nexport default function OptionInnerModal({\n  closemodal,\n  showModal,\n  setShowModal,\n  darkmode,\n  setDarkmode,\n  marginData,\n  fontData,\n  switchsize\n}) {\n  _s();\n\n  /*USE SLIDE DOWN ANIMATION FROM REACT SPRING */\n  const animation = useSpring({\n    config: {\n      duration: 2500\n    },\n    opacity: showModal ? 1 : 0.9,\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n  /*SETS DARKMODE FORM LOCAL STORAGE IF NOT EMPTY */\n\n  useEffect(() => {\n    let themelocaldata = JSON.parse(localStorage.getItem(\"darkmode\"));\n\n    if (themelocaldata !== null) {\n      setDarkmode(themelocaldata);\n    }\n  }, [setDarkmode]);\n  /*ESCAPE KEY CLOSE MODAL */\n\n  const escapePress = useCallback(e => {\n    if (e.key === \"Escape\" && showModal) {\n      closemodal(0);\n    }\n  }, [setShowModal, showModal]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escapePress);\n    return () => document.removeEventListener(\"keydown\", escapePress);\n  }, [escapePress]);\n  /*ESCAPE */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModal ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      style: {\n        backgroundColor: \"#00ccff\",\n        height: \"100vh\",\n        width: \"100%\",\n        zIndex: 100,\n        top: \"0em\",\n        padding: \"0px\",\n        position: \"fixed\"\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          xs: 12,\n          style: {\n            backgroundColor: \"\",\n            paddingTop: \"3.3rem\"\n          },\n          className: \"theme-more-contain\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 10,\n            xs: 7\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            sm: 1,\n            className: \"switchopacity  zuperking\",\n            style: marginData,\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              size: switchsize,\n              checked: darkmode,\n              onChange: () => {\n                toggleDarkMode = !darkmode;\n                setDarkmode(!darkmode);\n                localStorage.setItem(\"darkmode\", toggleDarkMode.toString());\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            className: \"dontallowselect\",\n            sm: 1,\n            style: {\n              textAlign: \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(AddRoundedIcon, {\n              className: darkmode ? \"make-small-icons-clickable-dark  dontallowselect  \" : \"make-small-icons-clickable-light  dontallowselect  \",\n              fontSize: \"large\",\n              style: fontData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(OptionInnerModal, \"W7o/8JIkkqZG5pBpKQ4d2ra15ww=\", false, function () {\n  return [useSpring];\n});\n\n_c = OptionInnerModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionInnerModal\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/OptionInnerModal.tsx"],"names":["React","useEffect","useCallback","AddRoundedIcon","Grid","Switch","DialogContent","useSpring","animated","toggleDarkMode","OptionInnerModal","closemodal","showModal","setShowModal","darkmode","setDarkmode","marginData","fontData","switchsize","animation","config","duration","opacity","transform","themelocaldata","JSON","parse","localStorage","getItem","escapePress","e","key","document","addEventListener","removeEventListener","backgroundColor","height","width","zIndex","top","padding","position","paddingTop","setItem","toString","textAlign"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport * as CSS from \"csstype\";\r\n\r\ninterface IOption {\r\n  closemodal: (backbutton: number) => void;\r\n  showModal: boolean;\r\n  setShowModal: (showModal: boolean) => void;\r\n  darkmode: boolean;\r\n  setDarkmode: (darkmodex: boolean) => void;\r\n  marginData: CSS.Properties;\r\n  fontData: CSS.Properties;\r\n  switchsize: \"medium\" | \"small\" | undefined;\r\n}\r\n\r\nvar toggleDarkMode: boolean = false;\r\n\r\nexport default function OptionInnerModal({\r\n  closemodal,\r\n  showModal,\r\n  setShowModal,\r\n  darkmode,\r\n  setDarkmode,\r\n  marginData,\r\n  fontData,\r\n  switchsize,\r\n}: IOption): JSX.Element {\r\n  /*USE SLIDE DOWN ANIMATION FROM REACT SPRING */\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 2500,\r\n    },\r\n    opacity: showModal ? 1 : 0.9,\r\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`,\r\n  });\r\n\r\n  /*SETS DARKMODE FORM LOCAL STORAGE IF NOT EMPTY */\r\n  useEffect(() => {\r\n    let themelocaldata = JSON.parse(localStorage.getItem(\"darkmode\")!);\r\n    if (themelocaldata !== null) {\r\n      setDarkmode(themelocaldata);\r\n    }\r\n  }, [setDarkmode]);\r\n\r\n  /*ESCAPE KEY CLOSE MODAL */\r\n  const escapePress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Escape\" && showModal) {\r\n        closemodal(0);\r\n      }\r\n    },\r\n    [setShowModal, showModal]\r\n  );\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escapePress);\r\n    return () => document.removeEventListener(\"keydown\", escapePress);\r\n  }, [escapePress]);\r\n  /*ESCAPE */\r\n\r\n  return (\r\n    <>\r\n      {showModal ? (\r\n        <DialogContent\r\n          style={{\r\n            backgroundColor: \"#00ccff\",\r\n            height: \"100vh\",\r\n            width: \"100%\",\r\n            zIndex: 100,\r\n            top: \"0em\",\r\n            padding: \"0px\",\r\n            position: \"fixed\",\r\n          }}\r\n        >\r\n          <animated.div style={animation}>\r\n            <Grid\r\n              container\r\n              xs={12}\r\n              style={{\r\n                backgroundColor: \"\",\r\n                paddingTop: \"3.3rem\",\r\n              }}\r\n              className=\"theme-more-contain\"\r\n            >\r\n              <Grid item sm={10} xs={7}></Grid>\r\n              <Grid\r\n                item\r\n                xs={2}\r\n                sm={1}\r\n                className=\"switchopacity  zuperking\"\r\n                style={marginData}\r\n              >\r\n                <Switch\r\n                  size={switchsize}\r\n                  checked={darkmode}\r\n                  onChange={() => {\r\n                    toggleDarkMode = !darkmode;\r\n                    setDarkmode(!darkmode);\r\n                    localStorage.setItem(\"darkmode\", toggleDarkMode.toString());\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                xs={3}\r\n                className=\"dontallowselect\"\r\n                sm={1}\r\n                style={{ textAlign: \"right\" }}\r\n              >\r\n                <AddRoundedIcon\r\n                  className={\r\n                    darkmode\r\n                      ? \"make-small-icons-clickable-dark  dontallowselect  \"\r\n                      : \"make-small-icons-clickable-light  dontallowselect  \"\r\n                  }\r\n                  fontSize=\"large\"\r\n                  style={fontData}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </animated.div>\r\n        </DialogContent>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}