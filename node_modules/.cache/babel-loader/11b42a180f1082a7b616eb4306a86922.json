{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\SupercheckOptions.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport CakeIcon from \"@material-ui/icons/Cake\";\nimport SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\nimport { useSpring, animated } from \"react-spring\";\nimport { matchPc, matchTablet } from \"./DetectDevice\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, DialogContent } from \"@material-ui/core\";\nimport \"./log/logCss.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SupercheckOptionsx({\n  showModal,\n  closemodal\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  /// GET KEEP ME LOGGED IN STATE FROM REDUX STORE\n  const {\n    rememberMe\n  } = useSelector(state => ({ ...state.GlobalReducerKeepMeLoggedIn\n  }));\n  const rememberMeReducer = rememberMe;\n  var opacityremember = \"\"; ///\n  ///\n  ///\n  /// GET KEEP ME LOGGED IN  STATE FROM REDUX STORE\n\n  const {\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const darkmodeReducer = darkmode;\n  var marginData;\n  var fontData;\n  const fontDataPc = {\n    fontSize: \"2.4vw\",\n    opacity: opacityremember\n  };\n  const fontDataTablet = {\n    fontSize: \"3.9vh\",\n    opacity: opacityremember\n  };\n  const fontDataMobile = {\n    fontSize: \"4.1vh\",\n    opacity: opacityremember\n  };\n  const marginDataPc = {\n    marginLeft: \"-35px\"\n  };\n  const marginDataMobile = {\n    marginLeft: \"-15.5px\",\n    marginTop: \"5px\"\n  };\n  var paddingttop = \"\"; ///\n  ///\n  ///\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\n\n  if (matchPc) {\n    marginData = marginDataPc;\n    fontData = fontDataPc;\n    paddingttop = \"2.1rem\"; ///\n  } else if (matchTablet) {\n    marginData = marginDataPc;\n    fontData = fontDataTablet;\n    paddingttop = \"5.5rem\"; ///\n  } else {\n    marginData = marginDataMobile;\n    fontData = fontDataMobile;\n    paddingttop = \"2.1rem\";\n  } //\n  //\n  //\n  //USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\n\n\n  const inputRef = useRef(null);\n\n  const onBackgroundFocus = e => {\n    if (inputRef.current === e.target) {\n      closemodal(0);\n    }\n  }; //\n  //\n  //\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\n\n\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0.0,\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    style: {},\n    children: showModal ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: \"dialog-container dontallowhighlighting \",\n      onClick: onBackgroundFocus,\n      ref: inputRef,\n      style: {\n        padding: \"0px\",\n        height: \"100vh\",\n        position: \"fixed\",\n        opacity: rememberMeReducer ? \" \" : \" \"\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          style: {\n            paddingTop: paddingttop\n          },\n          className: darkmodeReducer ? \"Background-header-dark theme-more-container\" : \"Background-header-light theme-more-container\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 8,\n            md: 10,\n            xs: 7\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            sm: 2,\n            md: 1,\n            className: \"zuperking\",\n            style: marginData,\n            children: /*#__PURE__*/_jsxDEV(SettingsBackupRestoreIcon, {\n              className: darkmodeReducer ? \"icon-color-dark dontallowhighlighting  \" : \"icon-color-light  dontallowhighlighting  \",\n              style: fontData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            className: \"dontallowhighlighting add-rounded-icon-right\",\n            sm: 2,\n            md: 1,\n            children: /*#__PURE__*/_jsxDEV(CakeIcon, {\n              className: darkmodeReducer ? \"make-small-icons-clickable-dark  dontallowhighlighting  \" : \"make-small-icons-clickable-light  dontallowhighlighting  \",\n              style: fontData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SupercheckOptionsx, \"FuxM2HaGtA+XgI+9Na9rrMQ0tbo=\", false, function () {\n  return [useSelector, useSelector, useSpring];\n});\n\n_c = SupercheckOptionsx;\nexport const SupercheckOptions = /*#__PURE__*/React.memo(SupercheckOptionsx);\n_c2 = SupercheckOptions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SupercheckOptionsx\");\n$RefreshReg$(_c2, \"SupercheckOptions\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/SupercheckOptions.tsx"],"names":["React","useRef","CakeIcon","SettingsBackupRestoreIcon","useSpring","animated","matchPc","matchTablet","useSelector","Grid","DialogContent","SupercheckOptionsx","showModal","closemodal","rememberMe","state","GlobalReducerKeepMeLoggedIn","rememberMeReducer","opacityremember","darkmode","GlobalReducer","darkmodeReducer","marginData","fontData","fontDataPc","fontSize","opacity","fontDataTablet","fontDataMobile","marginDataPc","marginLeft","marginDataMobile","marginTop","paddingttop","inputRef","onBackgroundFocus","e","current","target","animation","config","duration","transform","padding","height","position","paddingTop","SupercheckOptions","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\n\r\nimport CakeIcon from \"@material-ui/icons/Cake\";\r\nimport SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\r\nimport { OptionInnerModal } from \"./log/OptionInnerModal\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nimport { matchPc, matchTablet } from \"./DetectDevice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\n\r\nimport \"./log/logCss.css\";\r\nimport * as CSS from \"csstype\";\r\n\r\nfunction SupercheckOptionsx({ showModal, closemodal }: any): JSX.Element {\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET KEEP ME LOGGED IN STATE FROM REDUX STORE\r\n  interface RootStateReducerKeepMeLoggedIn {\r\n    GlobalReducerKeepMeLoggedIn: {\r\n      rememberMe: boolean;\r\n    };\r\n  }\r\n\r\n  const { rememberMe } = useSelector(\r\n    (state: RootStateReducerKeepMeLoggedIn) => ({\r\n      ...state.GlobalReducerKeepMeLoggedIn,\r\n    })\r\n  );\r\n  const rememberMeReducer = rememberMe;\r\n  var opacityremember = \"\";\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET KEEP ME LOGGED IN  STATE FROM REDUX STORE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n    };\r\n  }\r\n  const { darkmode } = useSelector((state: RootStateGlobalReducer) => ({\r\n    ...state.GlobalReducer,\r\n  }));\r\n  const darkmodeReducer = darkmode;\r\n\r\n  var marginData: CSS.Properties;\r\n  var fontData: CSS.Properties;\r\n\r\n  const fontDataPc: CSS.Properties = {\r\n    fontSize: \"2.4vw\",\r\n    opacity: opacityremember,\r\n  };\r\n  const fontDataTablet: CSS.Properties = {\r\n    fontSize: \"3.9vh\",\r\n    opacity: opacityremember,\r\n  };\r\n  const fontDataMobile: CSS.Properties = {\r\n    fontSize: \"4.1vh\",\r\n    opacity: opacityremember,\r\n  };\r\n\r\n  const marginDataPc: CSS.Properties = { marginLeft: \"-35px\" };\r\n  const marginDataMobile: CSS.Properties = {\r\n    marginLeft: \"-15.5px\",\r\n    marginTop: \"5px\",\r\n  };\r\n  var paddingttop = \"\";\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CONDITIONAL STATEMENT FOR DEVICE TYPE\r\n  if (matchPc) {\r\n    marginData = marginDataPc;\r\n    fontData = fontDataPc;\r\n    paddingttop = \"2.1rem\";\r\n    ///\r\n  } else if (matchTablet) {\r\n    marginData = marginDataPc;\r\n    fontData = fontDataTablet;\r\n    paddingttop = \"5.5rem\";\r\n    ///\r\n  } else {\r\n    marginData = marginDataMobile;\r\n    fontData = fontDataMobile;\r\n    paddingttop = \"2.1rem\";\r\n  }\r\n\r\n  //\r\n  //\r\n  //\r\n  //USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const onBackgroundFocus = (e: any): void => {\r\n    if (inputRef.current === e.target) {\r\n      closemodal(0);\r\n    }\r\n  };\r\n\r\n  //\r\n  //\r\n  //\r\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 250,\r\n    },\r\n    opacity: showModal ? 1 : 0.0,\r\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`,\r\n  });\r\n\r\n  return (\r\n    <Grid container style={{}}>\r\n      {showModal ? (\r\n        <DialogContent\r\n          className=\"dialog-container dontallowhighlighting \"\r\n          onClick={onBackgroundFocus}\r\n          ref={inputRef}\r\n          style={{\r\n            padding: \"0px\",\r\n            height: \"100vh\",\r\n            position: \"fixed\",\r\n            opacity: rememberMeReducer ? \" \" : \" \",\r\n          }}\r\n        >\r\n          <animated.div style={animation}>\r\n            <Grid\r\n              container\r\n              style={{ paddingTop: paddingttop }}\r\n              className={\r\n                darkmodeReducer\r\n                  ? \"Background-header-dark theme-more-container\"\r\n                  : \"Background-header-light theme-more-container\"\r\n              }\r\n            >\r\n              <Grid item sm={8} md={10} xs={7}></Grid>\r\n              <Grid\r\n                item\r\n                xs={2}\r\n                sm={2}\r\n                md={1}\r\n                className=\"zuperking\"\r\n                style={marginData}\r\n              >\r\n                <SettingsBackupRestoreIcon\r\n                  className={\r\n                    darkmodeReducer\r\n                      ? \"icon-color-dark dontallowhighlighting  \"\r\n                      : \"icon-color-light  dontallowhighlighting  \"\r\n                  }\r\n                  style={fontData}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                xs={3}\r\n                className=\"dontallowhighlighting add-rounded-icon-right\"\r\n                sm={2}\r\n                md={1}\r\n              >\r\n                <CakeIcon\r\n                  className={\r\n                    darkmodeReducer\r\n                      ? \"make-small-icons-clickable-dark  dontallowhighlighting  \"\r\n                      : \"make-small-icons-clickable-light  dontallowhighlighting  \"\r\n                  }\r\n                  style={fontData}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </animated.div>\r\n        </DialogContent>\r\n      ) : null}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport const SupercheckOptions = React.memo(SupercheckOptionsx);\r\n"]},"metadata":{},"sourceType":"module"}