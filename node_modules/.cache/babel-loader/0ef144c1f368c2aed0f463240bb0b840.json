{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\FilterMode.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { ImageTobeFiltered } from \"./ImageTobeFiltered\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FilterModex({\n  filterImage\n}) {\n  _s();\n\n  const filterbaseimageRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filterImage.map((data, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ImageTobeFiltered, {\n          filterbaseimageRef: filterbaseimageRef,\n          filterImage: data,\n          index: index\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(FilterModex, \"WwMgEvMJs41DZSxO9g8pYf0H4Qo=\");\n\n_c = FilterModex;\nexport const FilterMode = /*#__PURE__*/React.memo(FilterModex);\n_c2 = FilterMode;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FilterModex\");\n$RefreshReg$(_c2, \"FilterMode\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/FilterMode.tsx"],"names":["React","useRef","ImageTobeFiltered","FilterModex","filterImage","filterbaseimageRef","map","data","index","FilterMode","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,MADF,QAMO,OANP;AAuBA,SAASC,iBAAT,QAAkC,qBAAlC;;;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAwD;AAAA;;AACtD,QAAMC,kBAAuB,GAAGJ,MAAM,CAAC,IAAD,CAAtC;AAEA,sBACE;AAAA,cACGG,WAAW,CAACE,GAAZ,CAAgB,CAACC,IAAD,EAAYC,KAAZ,KAA2B;AAC1C,0BACE;AAAA,+BACE,QAAC,iBAAD;AAEE,UAAA,kBAAkB,EAAEH,kBAFtB;AAGE,UAAA,WAAW,EAAEE,IAHf;AAIE,UAAA,KAAK,EAAEC;AAJT,WACOA,KADP;AAAA;AAAA;AAAA;AAAA;AADF,SAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXA;AADH,mBADF;AAgBD;;GAnBQL,W;;KAAAA,W;AAqBT,OAAO,MAAMM,UAAU,gBAAGT,KAAK,CAACU,IAAN,CAAWP,WAAX,CAAnB;MAAMM,U","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport { SuperCrop } from \"./SuperCrop\";\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport PhotoIcon from \"@mui/icons-material/Photo\";\r\nimport GifIcon from \"@mui/icons-material/Gif\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Axios from \"axios\";\r\nimport CropIcon from \"@mui/icons-material/Crop\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { PreviewCanvasCropAll } from \"./PreviewCanvasCropAll\";\r\nimport { ImageTobeFiltered } from \"./ImageTobeFiltered\";\r\n\r\nfunction FilterModex({ filterImage }: any): JSX.Element {\r\n  const filterbaseimageRef: any = useRef(null);\r\n\r\n  return (\r\n    <>\r\n      {filterImage.map((data: any, index: any) => {\r\n        return (\r\n          <div key={index}>\r\n            <ImageTobeFiltered\r\n              key={index}\r\n              filterbaseimageRef={filterbaseimageRef}\r\n              filterImage={data}\r\n              index={index}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const FilterMode = React.memo(FilterModex);\r\n"]},"metadata":{},"sourceType":"module"}