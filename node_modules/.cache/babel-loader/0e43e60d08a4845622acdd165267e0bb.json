{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\ImageTobeFiltered.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ImageTobeFilteredx({\n  itemUploadRef,\n  FilterSliderWidth,\n  index\n}) {\n  _s();\n\n  ///\n  ///\n  ///\n  const [imageHeight, setimageHeight] = useState(0);\n  const [imageWidth, setimageWidth] = useState(0);\n  const getimageDimensions = useRef(null);\n  const [wideimage, setwideimage] = useState(false); ///\n  ///\n  ///\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\n\n  useEffect(() => {\n    if (itemUploadRef.current[index].width > itemUploadRef.current[index].height) {\n      setwideimage(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      id: itemUploadRef.current[index],\n      src: itemUploadRef.current[index] ? itemUploadRef.current[index].src : null,\n      style: {\n        width: wideimage ? `${FilterSliderWidth}px` : \"auto\",\n        height: wideimage ? \"auto\" : `${FilterSliderHeight}px`,\n        position: \"relative\",\n        margin: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ImageTobeFilteredx, \"BqYItLdzBNty/cRNDgpDi7f/Nys=\");\n\n_c = ImageTobeFilteredx;\nexport const ImageTobeFiltered = /*#__PURE__*/React.memo(ImageTobeFilteredx);\n_c2 = ImageTobeFiltered;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImageTobeFilteredx\");\n$RefreshReg$(_c2, \"ImageTobeFiltered\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/ImageTobeFiltered.tsx"],"names":["React","useRef","useState","useEffect","ImageTobeFilteredx","itemUploadRef","FilterSliderWidth","index","imageHeight","setimageHeight","imageWidth","setimageWidth","getimageDimensions","wideimage","setwideimage","current","width","height","src","FilterSliderHeight","position","margin","ImageTobeFiltered","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;;;;AAKA,SAASC,kBAAT,CAA4B;AAC1BC,EAAAA,aAD0B;AAE1BC,EAAAA,iBAF0B;AAG1BC,EAAAA;AAH0B,CAA5B,EAIqB;AAAA;;AACnB;AACA;AACA;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAMU,kBAAuB,GAAGX,MAAM,CAAmB,IAAnB,CAAtC;AAEA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C,CARmB,CAUnB;AACA;AACA;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QACEE,aAAa,CAACU,OAAd,CAAsBR,KAAtB,EAA6BS,KAA7B,GAAqCX,aAAa,CAACU,OAAd,CAAsBR,KAAtB,EAA6BU,MADpE,EAEE;AACAH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAA,2BACE;AACE,MAAA,EAAE,EAAET,aAAa,CAACU,OAAd,CAAsBR,KAAtB,CADN;AAEE,MAAA,GAAG,EACDF,aAAa,CAACU,OAAd,CAAsBR,KAAtB,IAA+BF,aAAa,CAACU,OAAd,CAAsBR,KAAtB,EAA6BW,GAA5D,GAAkE,IAHtE;AAKE,MAAA,KAAK,EAAE;AACLF,QAAAA,KAAK,EAAEH,SAAS,GAAI,GAAEP,iBAAkB,IAAxB,GAA8B,MADzC;AAELW,QAAAA,MAAM,EAAEJ,SAAS,GAAG,MAAH,GAAa,GAAEM,kBAAmB,IAF9C;AAGLC,QAAAA,QAAQ,EAAE,UAHL;AAILC,QAAAA,MAAM,EAAE;AAJH;AALT;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgBD;;GA1CQjB,kB;;KAAAA,kB;AA4CT,OAAO,MAAMkB,iBAAiB,gBAAGtB,KAAK,CAACuB,IAAN,CAAWnB,kBAAX,CAA1B;MAAMkB,iB","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction ImageTobeFilteredx({\r\n  itemUploadRef,\r\n  FilterSliderWidth,\r\n  index,\r\n}: any): JSX.Element {\r\n  ///\r\n  ///\r\n  ///\r\n  const [imageHeight, setimageHeight] = useState(0);\r\n  const [imageWidth, setimageWidth] = useState(0);\r\n  const getimageDimensions: any = useRef<HTMLImageElement>(null);\r\n\r\n  const [wideimage, setwideimage] = useState(false);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\r\n  useEffect(() => {\r\n    if (\r\n      itemUploadRef.current[index].width > itemUploadRef.current[index].height\r\n    ) {\r\n      setwideimage(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <img\r\n        id={itemUploadRef.current[index]}\r\n        src={\r\n          itemUploadRef.current[index] ? itemUploadRef.current[index].src : null\r\n        }\r\n        style={{\r\n          width: wideimage ? `${FilterSliderWidth}px` : \"auto\",\r\n          height: wideimage ? \"auto\" : `${FilterSliderHeight}px`,\r\n          position: \"relative\",\r\n          margin: \"auto\",\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport const ImageTobeFiltered = React.memo(ImageTobeFilteredx);\r\n"]},"metadata":{},"sourceType":"module"}