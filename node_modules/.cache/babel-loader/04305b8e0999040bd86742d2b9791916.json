{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\app-folder\\\\ModalLog.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRef, useEffect, useState, useCallback } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { Grid, DialogContent, Paper, makeStyles, createMuiTheme, TextField, Button } from \"@material-ui/core\";\nimport im1 from \"./images/modalpic1.jpg\";\nimport im2 from \"./images/modalpic2.jpg\";\nimport im3 from \"./images/modalpic3.png\";\nimport \"./ModalLog.css\";\nimport Axios from \"axios\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Modalx({\n  formtype,\n  CloseModalForm,\n  showModalForm,\n  setShowModalForm,\n  PaperStyle,\n  signupclass,\n  loginclass\n}) {\n  _s();\n\n  //\n  ///\n  ///\n  const initialLogValue = {\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const [showimage, setShowimage] = useState(\" \");\n  const [zoomedModal, setZoomedModal] = useState(false);\n  const [wideImage, setWideImage] = useState(false);\n  const [loginvalues, setLoginvalues] = useState(initialLogValue); /////////////////////////////////////////////////////////////////////////////\n  //\n  //SIGN UP FORM VARIABLES\n\n  const initialRawSignValue = {\n    inputedEmail: \"\",\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialCleanSignValue = {\n    inputedEmail: \"\",\n    inputedUsername: \"\",\n    inputedPassword: \"\"\n  };\n  const initialErrorSignValue = {\n    inputedEmail: 0,\n    inputedUsername: 0\n  };\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\n  const [cleanSignupValues, setCleanSignupValues] = useState(initialCleanSignValue);\n  const [errorsSignupValues, setErrorsSignupValues] = useState(initialErrorSignValue);\n  let usernameErrorData = null;\n  let usernameErrorDisplay = 0;\n\n  switch (errorsSignupValues.inputedUsername) {\n    case 1:\n      usernameErrorData = \"Usernames can only use letters, numbers, underscores and periods\";\n      usernameErrorDisplay = 1;\n      break;\n\n    default:\n      usernameErrorData = null;\n      usernameErrorDisplay = 0;\n      break;\n  } ///////////////////////////////////////////////////////////////////////////////\n  //\n  //\n  //\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\n\n\n  const animationxx = useSpring({\n    config: {\n      duration: 100\n    },\n    opacity: usernameErrorDisplay,\n    transform: usernameErrorData ? `translateY(0%)` : `translateY(100%)`\n  }); //\n  //\n  //\n  //CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\n\n  const animation = useSpring({\n    config: {\n      duration: 1000\n    },\n    opacity: showModalForm ? 1 : 0.9,\n    transform: showModalForm ? `scale(0)` : `scale(1)`\n  }); //\n  //\n  //\n  // USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\n\n  const ModalBackgroundRef = useRef(null);\n\n  const onBackgroundFocus = e => {\n    if (ModalBackgroundRef.current === e.target) {\n      CloseModalForm(0);\n    }\n  }; //\n  //\n  //\n  // ESCAPE KEY CLOSE MODAL\n\n\n  const escapePress = useCallback(e => {\n    if (e.key === \"Escape\" && showModalForm) {\n      CloseModalForm(0);\n    }\n  }, [setShowModalForm, showModalForm]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escapePress);\n    return () => document.removeEventListener(\"keydown\", escapePress);\n  }, [escapePress]); //\n  //\n  //\n  // RANDOMISE IMAGE\n\n  useEffect(() => {\n    let imagecontrol = [1, 2, 3];\n    var randomimage = imagecontrol[Math.floor(Math.random() * imagecontrol.length)];\n\n    if (randomimage == 1) {\n      setShowimage(im1);\n    } else if (randomimage == 2) {\n      setShowimage(im2);\n    } else {\n      setShowimage(im3);\n    }\n  }, []); //\n  //\n  //\n  // GET IMAGE WIDTH ,HEIGHT AND SET WIDE IMAGE\n\n  const onimageload = e => {\n    const imageHeight = e.target.clientHeight;\n    const imageWidth = e.target.clientWidth;\n\n    if (imageWidth > imageHeight) {\n      setWideImage(true);\n    }\n  }; //\n  //\n  //\n  // SHOW A FULLSCREEN MODAL VIEW\n\n\n  const zoomlogmodal = () => {\n    setZoomedModal(!zoomedModal);\n  }; //\n  //\n  //\n  // DYNAMIC MODAL LAYOUT VARIABLES\n\n\n  const wideImageControlTrue = \"75vw\";\n  const wideImageControlfalse = \"70vw\";\n  const zoomImageControl = \"100vw\";\n  const GridMiniAwide = 8;\n  const GridMiniBwide = 4;\n  const GridMiniAlong = 7;\n  const GridMiniBlong = 5;\n  const GridZoomAwide = 8;\n  const GridZoomBwide = 4;\n  const GridZoomAlong = 6;\n  const GridZoomBlong = 6;\n  let GridHolderA = 7;\n  let GridHolderB = 5;\n  let GridxA = 7;\n  let GridxB = 5;\n  let GridyA = 7;\n  let GridyB = 5;\n  let wideImageControl = \"70vw\";\n  let imageReal = \"75vw\";\n  let borderGrid = \"11px\";\n  let AnimatedModal = animation;\n\n  if (zoomedModal) {\n    AnimatedModal = animation;\n    borderGrid = \"0px\";\n\n    if (wideImage) {\n      wideImageControl = wideImageControlTrue;\n      GridxA = GridZoomAwide;\n      GridxB = GridZoomBwide;\n    } else {\n      wideImageControl = wideImageControlfalse;\n      GridxA = GridZoomAlong;\n      GridxB = GridZoomBlong;\n    }\n\n    imageReal = zoomImageControl;\n    GridHolderA = GridxA;\n    GridHolderB = GridxB;\n  } else {\n    AnimatedModal = animation;\n    borderGrid = \"11px\";\n\n    if (wideImage) {\n      wideImageControl = wideImageControlTrue;\n      GridyA = GridMiniAwide;\n      GridyB = GridMiniBwide;\n    } else {\n      wideImageControl = wideImageControlfalse;\n      GridyA = GridMiniAlong;\n      GridyB = GridMiniBlong;\n    }\n\n    imageReal = wideImageControl;\n    GridHolderA = GridyA;\n    GridHolderB = GridyB;\n  } //   DYNAMIC MODAL LAYOUT VARIABLES\n  //\n  //\n  //\n\n\n  let themeGeneralSettingsModal = createMuiTheme({});\n  var useStyleModal = makeStyles(themeGeneralSettingsModal => ({\n    containerStyle: {\n      width: imageReal,\n      height: \"auto\",\n      boxShadow: \"0 5px 16px rgba(0, 0, 0, 0.2)\",\n      color: \"#000000\",\n      position: \"relative\",\n      zIndex: 10,\n      borderRadius: borderGrid\n    },\n    imageStyle: {\n      objectFit: \"cover\",\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: `${borderGrid} 0 0 10px`,\n      background: \"#000000\"\n    }\n  }));\n  var classes = useStyleModal();\n\n  const updateSignvalues = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"inputedUsername\") {\n      let usernameCleaner = /[^a-z0-9áéíóúñü \\.'_]/gim;\n      let cleanValue = value.replace(usernameCleaner, \"\");\n      let usernameLimiter = /^.{24}$/;\n      let finalUsername = cleanValue.replace(usernameLimiter, \"\");\n      let checkUsernameClean = usernameCleaner.test(value);\n      let checkUsernameLimited = usernameLimiter.test(cleanValue);\n      checkUsernameClean ? setErrorsSignupValues({ ...errorsSignupValues,\n        [name]: 1\n      }) : setErrorsSignupValues({ ...errorsSignupValues,\n        [name]: 0\n      });\n\n      if (!checkUsernameLimited) {\n        setRawSignupValues({ ...rawSignupValues,\n          [name]: finalUsername\n        });\n      }\n    } else if (name === \"inputedEmail\") {\n      const emailValidation = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      const emailLimiter = /[^$%#+@a-z0-9áéíóúñü \\.'_]/gim;\n      let finalEmail = value.replace(emailLimiter, \"\");\n      let checkEmail = emailValidation.test(String(value).toLowerCase());\n\n      if (!checkEmail) {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 1\n        });\n      } else {\n        setErrorsSignupValues({ ...errorsSignupValues,\n          [name]: 0\n        });\n      }\n\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: finalEmail\n      });\n    } else {\n      setRawSignupValues({ ...rawSignupValues,\n        [name]: value\n      });\n    }\n  };\n\n  const updateLoginvalues = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginvalues({ ...loginvalues,\n      [name]: value\n    });\n  };\n\n  const signmeup = () => {\n    Axios.post(\"http://localhost:3001/registration\", {\n      values: rawSignupValues\n    }).then(response => {\n      if (response.data.message === \"username not unique\") {\n        console.log(\"Username is Not Availabe\");\n        alert(response.data.message);\n      } else {\n        console.log(response.status);\n        alert(\"REGISTRATION COMPLETE\");\n      }\n    }).catch(function (error) {\n      if (error.response) {\n        // Request made and server responded\n        //express typo can activate this\n        console.log(error.response);\n      } else if (error.request) {\n        // The request was made but no response was received Or request not made\n        // Axios.post(\"http://localhost:3003/reg\" can activate this error\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log(\"Error\", error.message);\n      }\n    });\n  };\n\n  const logmein = () => {\n    Axios.post(\"http://localhost:3001/logging\", {\n      values: loginvalues\n    }).then(response => {\n      console.log(response.status);\n\n      if (response.data.message === \"Wrong, Password and Username combination\") {\n        alert(response.data.message);\n      } else {\n        if (response.data.message === \"Wrong username\") {\n          alert(response.data.message);\n        } else {\n          alert(\"LOGGED IN\");\n        }\n      }\n    }).catch(function (error) {\n      if (error.response) {\n        alert(\"1\"); // Request made and server responded\n        //express typo can activate this\n\n        console.log(error.response);\n      } else if (error.request) {\n        alert(\"2\"); // The request was made but no response was received Or request not made\n        // Axios.post(\"http://localhost:3003/reg\" can activate this error\n\n        console.log(error.request);\n      } else {\n        alert(\"3\"); // Something happened in setting up the request that triggered an Error\n\n        console.log(\"Error\", error.message);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModalForm ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: \"FormDialog-container dontallowhighlighting \",\n      onClick: onBackgroundFocus,\n      style: {\n        overflow: \"hidden\"\n      },\n      ref: ModalBackgroundRef,\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: AnimatedModal,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: PaperStyle,\n          style: {\n            borderRadius: borderGrid\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            xs: 12,\n            className: classes.containerStyle,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: GridHolderA,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                onClick: zoomlogmodal,\n                onLoad: onimageload,\n                src: showimage,\n                className: classes.imageStyle,\n                alt: \"Login Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this), formtype ? /*#__PURE__*/_jsxDEV(Grid, {\n              xs: GridHolderB,\n              item: true,\n              className: \"formholder\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                xs: 12,\n                className: \"vv\",\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: \"82%\",\n                    paddingBottom: \"30px\",\n                    color: \"#00cccff\"\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Username\",\n                  onChange: updateLoginvalues,\n                  name: \"inputedUsername\",\n                  value: loginvalues.inputedUsername,\n                  variant: \"filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: \"82%\",\n                    paddingBottom: \"30px\"\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Password\",\n                  onChange: updateLoginvalues,\n                  name: \"inputedPassword\",\n                  value: loginvalues.inputedPassword,\n                  variant: \"filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    xs: 4\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    className: \"buttonpad buttonshake\",\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: logmein,\n                      className: loginclass,\n                      fullWidth: true,\n                      variant: \"outlined\",\n                      size: \"large\",\n                      color: \"primary\",\n                      children: \"Log In\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 429,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 25\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n              xs: GridHolderB,\n              item: true,\n              className: \"formholder\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                xs: 12,\n                className: \"vv\",\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: \"82%\",\n                    paddingBottom: \"60px\"\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Email\",\n                  onChange: updateSignvalues,\n                  name: \"inputedEmail\",\n                  value: rawSignupValues.inputedEmail,\n                  variant: \"filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n                  style: animationxx,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    xs: 12,\n                    style: {\n                      width: \"82%\",\n                      height: \"34px\",\n                      color: \"#ffffff\",\n                      backgroundColor: \"#222222\",\n                      margin: \"auto\",\n                      borderTopLeftRadius: \"20px\",\n                      borderTopRightRadius: \"20px\",\n                      marginBottom: \"-1.5px\",\n                      display: \"flex\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      xs: 12,\n                      style: {\n                        color: \"#eeeeee\",\n                        fontSize: \"0.85vw\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        paddingRight: \"15px\",\n                        justifyContent: \"flex-end\",\n                        textAlign: \"left\",\n                        fontWeight: \"bold\",\n                        fontFamily: \"sans-serif\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(ErrorOutlineIcon, {\n                        style: {\n                          marginLeft: \"8px\",\n                          marginRight: \"12px\",\n                          color: \"orange \"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 486,\n                        columnNumber: 29\n                      }, this), usernameErrorData]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 472,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 25\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: \"82%\",\n                    paddingBottom: \"30px\"\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Username\",\n                  onChange: updateSignvalues,\n                  name: \"inputedUsername\",\n                  value: rawSignupValues.inputedUsername,\n                  variant: \"filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: \"82%\",\n                    paddingBottom: \"30px\"\n                  },\n                  inputProps: {\n                    style: {\n                      fontSize: \"2.5vh\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"1.8vh\"\n                    }\n                  },\n                  label: \"Password\",\n                  onChange: updateSignvalues,\n                  name: \"inputedPassword\",\n                  value: rawSignupValues.inputedPassword,\n                  variant: \"filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    xs: 4\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    className: \"buttonpad buttonshake\",\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      className: signupclass,\n                      onClick: signmeup,\n                      fullWidth: true,\n                      variant: \"contained\",\n                      size: \"large\",\n                      color: \"secondary\",\n                      children: \"Sign Up\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 522,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 25\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(Modalx, \"7oIyEUORiY+5o1VnLadT5FMBJsI=\", true, function () {\n  return [useSpring, useSpring];\n});\n\n_c = Modalx;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modalx\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/app-folder/ModalLog.tsx"],"names":["React","useRef","useEffect","useState","useCallback","useSpring","animated","Grid","DialogContent","Paper","makeStyles","createMuiTheme","TextField","Button","im1","im2","im3","Axios","ErrorOutlineIcon","Modalx","formtype","CloseModalForm","showModalForm","setShowModalForm","PaperStyle","signupclass","loginclass","initialLogValue","inputedUsername","inputedPassword","showimage","setShowimage","zoomedModal","setZoomedModal","wideImage","setWideImage","loginvalues","setLoginvalues","initialRawSignValue","inputedEmail","initialCleanSignValue","initialErrorSignValue","rawSignupValues","setRawSignupValues","cleanSignupValues","setCleanSignupValues","errorsSignupValues","setErrorsSignupValues","usernameErrorData","usernameErrorDisplay","animationxx","config","duration","opacity","transform","animation","ModalBackgroundRef","onBackgroundFocus","e","current","target","escapePress","key","document","addEventListener","removeEventListener","imagecontrol","randomimage","Math","floor","random","length","onimageload","imageHeight","clientHeight","imageWidth","clientWidth","zoomlogmodal","wideImageControlTrue","wideImageControlfalse","zoomImageControl","GridMiniAwide","GridMiniBwide","GridMiniAlong","GridMiniBlong","GridZoomAwide","GridZoomBwide","GridZoomAlong","GridZoomBlong","GridHolderA","GridHolderB","GridxA","GridxB","GridyA","GridyB","wideImageControl","imageReal","borderGrid","AnimatedModal","themeGeneralSettingsModal","useStyleModal","containerStyle","width","height","boxShadow","color","position","zIndex","borderRadius","imageStyle","objectFit","background","classes","updateSignvalues","name","value","usernameCleaner","cleanValue","replace","usernameLimiter","finalUsername","checkUsernameClean","test","checkUsernameLimited","emailValidation","emailLimiter","finalEmail","checkEmail","String","toLowerCase","updateLoginvalues","signmeup","post","values","then","response","data","message","console","log","alert","status","catch","error","request","logmein","overflow","paddingBottom","style","fontSize","backgroundColor","margin","borderTopLeftRadius","borderTopRightRadius","marginBottom","display","alignItems","paddingRight","justifyContent","textAlign","fontWeight","fontFamily","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport { useSpring, animated, update } from \"react-spring\";\r\nimport {\r\n  Grid,\r\n  DialogContent,\r\n  Paper,\r\n  makeStyles,\r\n  createMuiTheme,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport im1 from \"./images/modalpic1.jpg\";\r\nimport im2 from \"./images/modalpic2.jpg\";\r\nimport im3 from \"./images/modalpic3.png\";\r\nimport { ImodalLog, IGrid } from \"./appFolder-Interfaces\";\r\nimport \"./ModalLog.css\";\r\nimport Axios from \"axios\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\n\r\nexport default function Modalx({\r\n  formtype,\r\n  CloseModalForm,\r\n  showModalForm,\r\n  setShowModalForm,\r\n  PaperStyle,\r\n  signupclass,\r\n  loginclass,\r\n}: ImodalLog): JSX.Element {\r\n  //\r\n  ///\r\n  ///\r\n\r\n  const initialLogValue = {\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n  const [showimage, setShowimage] = useState<string>(\" \");\r\n  const [zoomedModal, setZoomedModal] = useState<boolean>(false);\r\n  const [wideImage, setWideImage] = useState<boolean>(false);\r\n  const [loginvalues, setLoginvalues] = useState(initialLogValue);\r\n\r\n  /////////////////////////////////////////////////////////////////////////////\r\n  //\r\n  //SIGN UP FORM VARIABLES\r\n\r\n  const initialRawSignValue = {\r\n    inputedEmail: \"\",\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n\r\n  const initialCleanSignValue = {\r\n    inputedEmail: \"\",\r\n    inputedUsername: \"\",\r\n    inputedPassword: \"\",\r\n  };\r\n\r\n  const initialErrorSignValue = {\r\n    inputedEmail: 0,\r\n    inputedUsername: 0,\r\n  };\r\n  const [rawSignupValues, setRawSignupValues] = useState(initialRawSignValue);\r\n  const [cleanSignupValues, setCleanSignupValues] = useState(\r\n    initialCleanSignValue\r\n  );\r\n  const [errorsSignupValues, setErrorsSignupValues] = useState(\r\n    initialErrorSignValue\r\n  );\r\n\r\n  let usernameErrorData = null;\r\n  let usernameErrorDisplay = 0;\r\n\r\n  switch (errorsSignupValues.inputedUsername) {\r\n    case 1:\r\n      usernameErrorData =\r\n        \"Usernames can only use letters, numbers, underscores and periods\";\r\n      usernameErrorDisplay = 1;\r\n      break;\r\n\r\n    default:\r\n      usernameErrorData = null;\r\n      usernameErrorDisplay = 0;\r\n      break;\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n  //\r\n  //\r\n  //\r\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\r\n  const animationxx = useSpring({\r\n    config: {\r\n      duration: 100,\r\n    },\r\n    opacity: usernameErrorDisplay,\r\n    transform: usernameErrorData ? `translateY(0%)` : `translateY(100%)`,\r\n  });\r\n\r\n  //\r\n  //\r\n  //\r\n  //CREATE A SLIDE UP ANIMATION WITH  REACT SPRING\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 1000,\r\n    },\r\n    opacity: showModalForm ? 1 : 0.9,\r\n\r\n    transform: showModalForm ? `scale(0)` : `scale(1)`,\r\n  });\r\n\r\n  //\r\n  //\r\n  //\r\n  // USEREF TARGETS A DIV(BACKGROUND) AND CLOSES MODAL ON CLICK\r\n  const ModalBackgroundRef = useRef<HTMLInputElement>(null);\r\n  const onBackgroundFocus = (e: any): void => {\r\n    if (ModalBackgroundRef.current === e.target) {\r\n      CloseModalForm(0);\r\n    }\r\n  };\r\n  //\r\n  //\r\n  //\r\n  // ESCAPE KEY CLOSE MODAL\r\n  const escapePress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Escape\" && showModalForm) {\r\n        CloseModalForm(0);\r\n      }\r\n    },\r\n    [setShowModalForm, showModalForm]\r\n  );\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escapePress);\r\n    return () => document.removeEventListener(\"keydown\", escapePress);\r\n  }, [escapePress]);\r\n  //\r\n  //\r\n  //\r\n  // RANDOMISE IMAGE\r\n  useEffect(() => {\r\n    let imagecontrol: number[] = [1, 2, 3];\r\n    var randomimage =\r\n      imagecontrol[Math.floor(Math.random() * imagecontrol.length)];\r\n\r\n    if (randomimage == 1) {\r\n      setShowimage(im1);\r\n    } else if (randomimage == 2) {\r\n      setShowimage(im2);\r\n    } else {\r\n      setShowimage(im3);\r\n    }\r\n  }, []);\r\n  //\r\n  //\r\n  //\r\n  // GET IMAGE WIDTH ,HEIGHT AND SET WIDE IMAGE\r\n  const onimageload = (e: any) => {\r\n    const imageHeight = e.target.clientHeight;\r\n    const imageWidth = e.target.clientWidth;\r\n    if (imageWidth > imageHeight) {\r\n      setWideImage(true);\r\n    }\r\n  };\r\n  //\r\n  //\r\n  //\r\n  // SHOW A FULLSCREEN MODAL VIEW\r\n  const zoomlogmodal = () => {\r\n    setZoomedModal(!zoomedModal);\r\n  };\r\n  //\r\n  //\r\n  //\r\n  // DYNAMIC MODAL LAYOUT VARIABLES\r\n  const wideImageControlTrue: string = \"75vw\";\r\n  const wideImageControlfalse: string = \"70vw\";\r\n  const zoomImageControl: string = \"100vw\";\r\n  const GridMiniAwide: IGrid = 8;\r\n  const GridMiniBwide: IGrid = 4;\r\n  const GridMiniAlong: IGrid = 7;\r\n  const GridMiniBlong: IGrid = 5;\r\n  const GridZoomAwide: IGrid = 8;\r\n  const GridZoomBwide: IGrid = 4;\r\n  const GridZoomAlong: IGrid = 6;\r\n  const GridZoomBlong: IGrid = 6;\r\n\r\n  let GridHolderA: IGrid = 7;\r\n  let GridHolderB: IGrid = 5;\r\n\r\n  let GridxA: IGrid = 7;\r\n  let GridxB: IGrid = 5;\r\n\r\n  let GridyA: IGrid = 7;\r\n  let GridyB: IGrid = 5;\r\n\r\n  let wideImageControl: string = \"70vw\";\r\n  let imageReal: string = \"75vw\";\r\n\r\n  let borderGrid: string = \"11px\";\r\n\r\n  let AnimatedModal = animation;\r\n\r\n  if (zoomedModal) {\r\n    AnimatedModal = animation;\r\n    borderGrid = \"0px\";\r\n    if (wideImage) {\r\n      wideImageControl = wideImageControlTrue;\r\n      GridxA = GridZoomAwide;\r\n      GridxB = GridZoomBwide;\r\n    } else {\r\n      wideImageControl = wideImageControlfalse;\r\n      GridxA = GridZoomAlong;\r\n      GridxB = GridZoomBlong;\r\n    }\r\n    imageReal = zoomImageControl;\r\n    GridHolderA = GridxA;\r\n    GridHolderB = GridxB;\r\n  } else {\r\n    AnimatedModal = animation;\r\n    borderGrid = \"11px\";\r\n    if (wideImage) {\r\n      wideImageControl = wideImageControlTrue;\r\n      GridyA = GridMiniAwide;\r\n      GridyB = GridMiniBwide;\r\n    } else {\r\n      wideImageControl = wideImageControlfalse;\r\n      GridyA = GridMiniAlong;\r\n      GridyB = GridMiniBlong;\r\n    }\r\n    imageReal = wideImageControl;\r\n    GridHolderA = GridyA;\r\n    GridHolderB = GridyB;\r\n  }\r\n  //   DYNAMIC MODAL LAYOUT VARIABLES\r\n  //\r\n  //\r\n  //\r\n\r\n  let themeGeneralSettingsModal = createMuiTheme({});\r\n\r\n  var useStyleModal = makeStyles((themeGeneralSettingsModal) => ({\r\n    containerStyle: {\r\n      width: imageReal,\r\n      height: \"auto\",\r\n      boxShadow: \"0 5px 16px rgba(0, 0, 0, 0.2)\",\r\n      color: \"#000000\",\r\n      position: \"relative\",\r\n      zIndex: 10,\r\n      borderRadius: borderGrid,\r\n    },\r\n    imageStyle: {\r\n      objectFit: \"cover\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: `${borderGrid} 0 0 10px`,\r\n      background: \"#000000\",\r\n    },\r\n  }));\r\n\r\n  var classes = useStyleModal();\r\n\r\n  const updateSignvalues = (e: any) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"inputedUsername\") {\r\n      let usernameCleaner = /[^a-z0-9áéíóúñü \\.'_]/gim;\r\n      let cleanValue = value.replace(usernameCleaner, \"\");\r\n      let usernameLimiter = /^.{24}$/;\r\n      let finalUsername = cleanValue.replace(usernameLimiter, \"\");\r\n\r\n      let checkUsernameClean = usernameCleaner.test(value);\r\n      let checkUsernameLimited = usernameLimiter.test(cleanValue);\r\n\r\n      checkUsernameClean\r\n        ? setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 })\r\n        : setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n\r\n      if (!checkUsernameLimited) {\r\n        setRawSignupValues({ ...rawSignupValues, [name]: finalUsername });\r\n      }\r\n    } else if (name === \"inputedEmail\") {\r\n      const emailValidation = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      const emailLimiter = /[^$%#+@a-z0-9áéíóúñü \\.'_]/gim;\r\n\r\n      let finalEmail = value.replace(emailLimiter, \"\");\r\n\r\n      let checkEmail = emailValidation.test(String(value).toLowerCase());\r\n      if (!checkEmail) {\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 1 });\r\n      } else {\r\n        setErrorsSignupValues({ ...errorsSignupValues, [name]: 0 });\r\n      }\r\n      setRawSignupValues({ ...rawSignupValues, [name]: finalEmail });\r\n    } else {\r\n      setRawSignupValues({ ...rawSignupValues, [name]: value });\r\n    }\r\n  };\r\n\r\n  const updateLoginvalues = (e: any) => {\r\n    const { name, value } = e.target;\r\n    setLoginvalues({ ...loginvalues, [name]: value });\r\n  };\r\n\r\n  const signmeup = () => {\r\n    Axios.post(\"http://localhost:3001/registration\", {\r\n      values: rawSignupValues,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.message === \"username not unique\") {\r\n          console.log(\"Username is Not Availabe\");\r\n          alert(response.data.message);\r\n        } else {\r\n          console.log(response.status);\r\n          alert(\"REGISTRATION COMPLETE\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        if (error.response) {\r\n          // Request made and server responded\r\n          //express typo can activate this\r\n          console.log(error.response);\r\n        } else if (error.request) {\r\n          // The request was made but no response was received Or request not made\r\n          // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n          console.log(error.request);\r\n        } else {\r\n          // Something happened in setting up the request that triggered an Error\r\n          console.log(\"Error\", error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const logmein = () => {\r\n    Axios.post(\"http://localhost:3001/logging\", {\r\n      values: loginvalues,\r\n    })\r\n      .then((response) => {\r\n        console.log(response.status);\r\n        if (\r\n          response.data.message === \"Wrong, Password and Username combination\"\r\n        ) {\r\n          alert(response.data.message);\r\n        } else {\r\n          if (response.data.message === \"Wrong username\") {\r\n            alert(response.data.message);\r\n          } else {\r\n            alert(\"LOGGED IN\");\r\n          }\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        if (error.response) {\r\n          alert(\"1\");\r\n          // Request made and server responded\r\n          //express typo can activate this\r\n          console.log(error.response);\r\n        } else if (error.request) {\r\n          alert(\"2\");\r\n          // The request was made but no response was received Or request not made\r\n          // Axios.post(\"http://localhost:3003/reg\" can activate this error\r\n          console.log(error.request);\r\n        } else {\r\n          alert(\"3\");\r\n          // Something happened in setting up the request that triggered an Error\r\n          console.log(\"Error\", error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModalForm ? (\r\n        <DialogContent\r\n          className=\"FormDialog-container dontallowhighlighting \"\r\n          onClick={onBackgroundFocus}\r\n          style={{ overflow: \"hidden\" }}\r\n          ref={ModalBackgroundRef}\r\n        >\r\n          <animated.div style={AnimatedModal}>\r\n            <Paper className={PaperStyle} style={{ borderRadius: borderGrid }}>\r\n              <Grid container xs={12} className={classes.containerStyle}>\r\n                <Grid item xs={GridHolderA}>\r\n                  <img\r\n                    onClick={zoomlogmodal}\r\n                    onLoad={onimageload}\r\n                    src={showimage}\r\n                    className={classes.imageStyle}\r\n                    alt=\"Login Image\"\r\n                  />\r\n                </Grid>\r\n\r\n                {formtype ? (\r\n                  <Grid xs={GridHolderB} item className=\"formholder\">\r\n                    <Grid xs={12} className=\"vv\">\r\n                      <TextField\r\n                        style={{\r\n                          width: \"82%\",\r\n                          paddingBottom: \"30px\",\r\n                          color: \"#00cccff\",\r\n                        }}\r\n                        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                        label=\"Username\"\r\n                        onChange={updateLoginvalues}\r\n                        name=\"inputedUsername\"\r\n                        value={loginvalues.inputedUsername}\r\n                        variant=\"filled\"\r\n                      />\r\n                      <TextField\r\n                        style={{ width: \"82%\", paddingBottom: \"30px\" }}\r\n                        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                        label=\"Password\"\r\n                        onChange={updateLoginvalues}\r\n                        name=\"inputedPassword\"\r\n                        value={loginvalues.inputedPassword}\r\n                        variant=\"filled\"\r\n                      />\r\n\r\n                      <Grid container xs={12}>\r\n                        <Grid xs={4}></Grid>\r\n                        <Grid item className=\"buttonpad buttonshake\" xs={4}>\r\n                          <Button\r\n                            onClick={logmein}\r\n                            className={loginclass}\r\n                            fullWidth={true}\r\n                            variant=\"outlined\"\r\n                            size=\"large\"\r\n                            color=\"primary\"\r\n                          >\r\n                            Log In\r\n                          </Button>\r\n                        </Grid>{\" \"}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                ) : (\r\n                  <Grid xs={GridHolderB} item className=\"formholder\">\r\n                    <Grid xs={12} className=\"vv\">\r\n                      <TextField\r\n                        style={{ width: \"82%\", paddingBottom: \"60px\" }}\r\n                        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                        label=\"Email\"\r\n                        onChange={updateSignvalues}\r\n                        name=\"inputedEmail\"\r\n                        value={rawSignupValues.inputedEmail}\r\n                        variant=\"filled\"\r\n                      />\r\n\r\n                      <animated.div style={animationxx}>\r\n                        <Grid\r\n                          xs={12}\r\n                          style={{\r\n                            width: \"82%\",\r\n                            height: \"34px\",\r\n                            color: \"#ffffff\",\r\n                            backgroundColor: \"#222222\",\r\n                            margin: \"auto\",\r\n                            borderTopLeftRadius: \"20px\",\r\n                            borderTopRightRadius: \"20px\",\r\n                            marginBottom: \"-1.5px\",\r\n                            display: \"flex\",\r\n                          }}\r\n                        >\r\n                          <Grid\r\n                            xs={12}\r\n                            style={{\r\n                              color: \"#eeeeee\",\r\n                              fontSize: \"0.85vw\",\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              paddingRight: \"15px\",\r\n                              justifyContent: \"flex-end\",\r\n                              textAlign: \"left\",\r\n                              fontWeight: \"bold\",\r\n                              fontFamily: \"sans-serif\",\r\n                            }}\r\n                          >\r\n                            <ErrorOutlineIcon\r\n                              style={{\r\n                                marginLeft: \"8px\",\r\n                                marginRight: \"12px\",\r\n                                color: \"orange \",\r\n                              }}\r\n                            />\r\n\r\n                            {usernameErrorData}\r\n                          </Grid>\r\n                        </Grid>{\" \"}\r\n                      </animated.div>\r\n                      <TextField\r\n                        style={{ width: \"82%\", paddingBottom: \"30px\" }}\r\n                        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                        label=\"Username\"\r\n                        onChange={updateSignvalues}\r\n                        name=\"inputedUsername\"\r\n                        value={rawSignupValues.inputedUsername}\r\n                        variant=\"filled\"\r\n                      />\r\n                      <TextField\r\n                        style={{ width: \"82%\", paddingBottom: \"30px\" }}\r\n                        inputProps={{ style: { fontSize: \"2.5vh\" } }}\r\n                        InputLabelProps={{ style: { fontSize: \"1.8vh\" } }}\r\n                        label=\"Password\"\r\n                        onChange={updateSignvalues}\r\n                        name=\"inputedPassword\"\r\n                        value={rawSignupValues.inputedPassword}\r\n                        variant=\"filled\"\r\n                      />\r\n\r\n                      <Grid container xs={12}>\r\n                        <Grid xs={4}></Grid>\r\n                        <Grid item className=\"buttonpad buttonshake\" xs={4}>\r\n                          <Button\r\n                            className={signupclass}\r\n                            onClick={signmeup}\r\n                            fullWidth={true}\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            color=\"secondary\"\r\n                          >\r\n                            Sign Up\r\n                          </Button>\r\n                        </Grid>{\" \"}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </Paper>\r\n          </animated.div>\r\n        </DialogContent>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}