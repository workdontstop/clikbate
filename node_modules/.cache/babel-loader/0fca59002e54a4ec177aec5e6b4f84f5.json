{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\upload\\\\Upload.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { DialogContent } from \"@material-ui/core\";\nimport { useSpring, animated } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Uploadx({\n  showModalUpload,\n  closeUploadModal\n}) {\n  _s();\n\n  //\n  //\n  //\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModalUpload ? 1 : 0.0,\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModal ? /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: \"dialog-container dontallowhighlighting \",\n      style: {\n        padding: \"0px\",\n        height: \"100vh\",\n        position: \"fixed\",\n        backgroundColor: \"#00ccff\"\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: animation,\n        children: \"jjj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(Uploadx, \"84dvVC8rOQE1LXpTrRxuus6xoA8=\", false, function () {\n  return [useSpring];\n});\n\n_c = Uploadx;\nexport const Upload = /*#__PURE__*/React.memo(Uploadx);\n_c2 = Upload;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Uploadx\");\n$RefreshReg$(_c2, \"Upload\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/upload/Upload.tsx"],"names":["React","DialogContent","useSpring","animated","Uploadx","showModalUpload","closeUploadModal","animation","config","duration","opacity","transform","showModal","padding","height","position","backgroundColor","Upload","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAsD,OAAtD;AAEA,SAAuBC,aAAvB,QAA4C,mBAA5C;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;;;;AAIA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAjB,EAA0E;AAAA;;AACxE;AACA;AACA;AACA;AACA,QAAMC,SAAS,GAAGL,SAAS,CAAC;AAC1BM,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADkB;AAI1BC,IAAAA,OAAO,EAAEL,eAAe,GAAG,CAAH,GAAO,GAJL;AAK1BM,IAAAA,SAAS,EAAEC,SAAS,GAAI,gBAAJ,GAAuB;AALjB,GAAD,CAA3B;AAQA,sBACE;AAAA,cACGA,SAAS,gBACR,QAAC,aAAD;AACE,MAAA,SAAS,EAAC,yCADZ;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,MAAM,EAAE,OAFH;AAGLC,QAAAA,QAAQ,EAAE,OAHL;AAILC,QAAAA,eAAe,EAAE;AAJZ,OAFT;AAAA,6BASE,QAAC,QAAD,CAAU,GAAV;AAAc,QAAA,KAAK,EAAET,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,YADQ,GAYN;AAbN,mBADF;AAiBD;;GA9BQH,O;UAKWF,S;;;KALXE,O;AAgCT,OAAO,MAAMa,MAAM,gBAAGjB,KAAK,CAACkB,IAAN,CAAWd,OAAX,CAAf;MAAMa,M","sourcesContent":["import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport ControlPointDuplicateIcon from \"@mui/icons-material/ControlPointDuplicate\";\r\nimport { Grid, Switch, DialogContent } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction Uploadx({ showModalUpload, closeUploadModal }: any): JSX.Element {\r\n  //\r\n  //\r\n  //\r\n  //USE SLIDE DOWN ANIMATION FROM REACT SPRING\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 250,\r\n    },\r\n    opacity: showModalUpload ? 1 : 0.0,\r\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {showModal ? (\r\n        <DialogContent\r\n          className=\"dialog-container dontallowhighlighting \"\r\n          style={{\r\n            padding: \"0px\",\r\n            height: \"100vh\",\r\n            position: \"fixed\",\r\n            backgroundColor: \"#00ccff\",\r\n          }}\r\n        >\r\n          <animated.div style={animation}>jjj</animated.div>\r\n        </DialogContent>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Upload = React.memo(Uploadx);\r\n"]},"metadata":{},"sourceType":"module"}