{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King\\\\Desktop\\\\batcave\\\\superstarztype\\\\src\\\\profile\\\\ProfileOutter.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport { matchPc } from \"../DetectDevice\";\nimport { useSelector } from \"react-redux\";\nimport \"./profile.css\";\nimport { Profile } from \"./Profile\";\nimport Axios from \"axios\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileOutter() {\n  _s();\n\n  const getSliderWidthRef = useRef(null);\n  const [formtype] = useState(1);\n  const [showModalForm, setShowModalForm] = useState(false);\n  const [getSliderWidth, setgetSliderWidth] = useState(0);\n  const [aboutTemplateGo] = useState(true);\n  const [commentTemplateGo] = useState(false);\n  const [postData, setPostData] = useState([]);\n  const postItemsRef = useRef([]);\n  var postbackheighthold = document.documentElement.clientHeight * 0.3;\n  const [postbackheight] = useState(postbackheighthold); ///\n  ///\n  ///\n  ///CLOSE LOG MODAL\n\n  const [OpenModalFormOnce, setOpenModalFormOnce] = useState(false);\n  const CloseModalForm = useCallback(DeviceBackButtonClicked => {\n    ///onpopstate fires when back and forward buttons used\n    if (DeviceBackButtonClicked === 1) {\n      window.onpopstate = () => {\n        setShowModalForm(false);\n        setOpenModalFormOnce(false);\n      };\n    } else {\n      setShowModalForm(false);\n      setOpenModalFormOnce(false); ///Replace modal history state with previous history state\n\n      window.history.back();\n    }\n  }, []);\n  const OpenModalForm = useCallback(formtypedata => {\n    setShowModalForm(true); ///Replace current history state (since opening a modal Level 2 grid)...\n    /// if this was a level 1 grid (profile-info page use Pushstate to create new history state)\n\n    let modalName = \"Biography\";\n\n    if (!OpenModalFormOnce) {\n      window.history.pushState(null, \"\", modalName);\n      setOpenModalFormOnce(true);\n      CloseModalForm(1);\n    }\n  }, [OpenModalFormOnce, CloseModalForm]); ///\n  ///\n  ///\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\n\n  useEffect(() => {\n    if (getSliderWidthRef.current && getSliderWidthRef.current.clientWidth) {\n      setgetSliderWidth(getSliderWidthRef.current.clientWidth);\n    }\n  }, []); ///\n  ///\n  ///\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\n\n  ///\n  ///\n  ///\n  /// GET SCREENHEIGHT FROM REDUX STORE\n  const {\n    screenHeight,\n    darkmode\n  } = useSelector(state => ({ ...state.GlobalReducer\n  }));\n  const screenHeightReducer = screenHeight;\n  const darkmodeReducer = darkmode; ///\n  ///\n  ///\n  ///MUI PAPER STYLES FROM REDUX\n\n  const {\n    PaperStyleLight,\n    PaperStyleDark\n  } = useSelector(state => ({ ...state.PaperReducerLightnDark\n  }));\n  var PaperStyleReducer = \"\";\n\n  if (darkmodeReducer) {\n    PaperStyleReducer = PaperStyleDark;\n  } else {\n    PaperStyleReducer = PaperStyleLight;\n  }\n\n  function percentage(num, per) {\n    return num / 100 * per;\n  } ////////////////////////////////////////////////////////////////////\n  ///\n  ///\n  ///\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\n\n\n  const addPostItemsRef = itemsRef => {\n    if (itemsRef && !postItemsRef.current.includes(itemsRef)) {\n      postItemsRef.current.push(itemsRef);\n    } ////console.log(postItemsRef.current[1]);\n\n  }; ///\n  ///\n  ///\n  ///DOT ENV DATA\n\n\n  const {\n    REACT_APP_SUPERSTARZ_URL\n  } = process.env;\n  const [itemheight, setitemheight] = useState([]);\n  const [itemheighthold, setitemheighthold] = useState([]); ///\n  ///\n  ///MODAL ZOOMED STATE\n\n  useEffect(() => {\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/feeds_chronological`, {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.message === \"feeds fetched\") {\n        var postdataRep = response.data.payload;\n        postdataRep.forEach(obj => {\n          obj.itemheight = \"auto\";\n          obj.itemrealheighthold = \"0\";\n        }); ///////////////RE-ORDER ARRAY THEN SETPOST DATA\n\n        const cols = 2;\n        const out = [];\n        let col = 0;\n\n        while (col < cols) {\n          for (let i = 0; i < postdataRep.length; i += cols) {\n            let _val = postdataRep[i + col];\n            if (_val !== undefined) out.push(_val);\n          }\n\n          col++;\n        }\n\n        setPostData(out); //////////////RE-ORDER ARRAY THEN SETPOST DATA\n      } else if (response.data.message === \"error in fetching feeds\") {\n        alert(\"Connection malfunction\");\n      }\n    }).catch(function (error) {});\n  }, [REACT_APP_SUPERSTARZ_URL]);\n  useEffect(() => {\n    if (postData.length > 0) {\n      const initialItemheight = postData.map(obj => obj.itemheight);\n      setitemheight(initialItemheight);\n      const initialItemrealheighthold = postData.map(obj => obj.itemrealheighthold);\n      setitemheighthold(initialItemrealheighthold);\n    }\n  }, [postData]); ///\n  ///\n\n  const handleClick = e => {\n    const i = e.currentTarget.dataset.id;\n    const newArr = [...itemheight];\n    newArr[i] = \"0%\";\n    setitemheight(newArr);\n  };\n\n  const onPostsItemload = useCallback((e, index) => {\n    if (postItemsRef.current[index]) {\n      var imageHeight = postItemsRef.current[index].clientHeight;\n      const newArrx = [...itemheighthold];\n      var newh = imageHeight / 1.02 - postbackheighthold;\n      newArrx[index] = `${newh}`;\n      setitemheighthold(newArrx); //console.log(screenHeightReducer);\n      ///console.log(\"jj\");\n      ///console.log(imageHeight);\n\n      var choppedHeight = percentage(screenHeightReducer, 100);\n      var choppedwidth = percentage(screenHeightReducer, 55);\n\n      if (imageHeight < choppedwidth) {\n        postItemsRef.current[index].style.objectFit = \"cover\"; /////WIDE IMAGE SET\n\n        const newArr = [...itemheight];\n        newArr[index] = `${choppedwidth}px`;\n        setitemheight(newArr); ///////////////////////////////\n\n        const newArrx = [...itemheighthold];\n        var newh = choppedwidth / 1.04 - postbackheighthold;\n        newArrx[index] = `${newh}`;\n        setitemheighthold(newArrx); ////////////////////////////\n      } else if (imageHeight > choppedHeight) {\n        postItemsRef.current[index].style.objectFit = \"cover\"; /////LONG IMAGE SET\n\n        const newArr = [...itemheight];\n        newArr[index] = `${choppedHeight}px`;\n        setitemheight(newArr); ///////////////////////////////\n\n        const newArrx = [...itemheighthold];\n        var newh = choppedHeight / 1.02 - postbackheighthold;\n        newArrx[index] = `${newh}`;\n        setitemheighthold(newArrx); ////////////////////////////////\n      } else {}\n    }\n  }, [screenHeightReducer, itemheight, itemheighthold]);\n  console.log(itemheighthold); /// {menu[i]}\n\n  const breakPoints = {\n    default: 2,\n    960: 2,\n    600: 1\n  }; ///\n  ///\n  ///TYPES FOR ISLOGGEDIN\n\n  ///\n  ///LOGGED IN DATA FROM REDUX\n  const {\n    loggedIn\n  } = useSelector(state => ({ ...state.IsLoggedReducer\n  }));\n  const loggedInReducer = loggedIn;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"loggedInReducer ? \", /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: matchPc ? null : null\n    }, void 0, false), \" : null; loggedInReducer ?\", \" \", /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), \" : null;\"]\n  }, void 0, true);\n}\n\n_s(ProfileOutter, \"YE2vGx0e889JWdEZ2h/6NSD+4YU=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = ProfileOutter;\nexport default ProfileOutter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileOutter\");","map":{"version":3,"sources":["C:/Users/King/Desktop/batcave/superstarztype/src/profile/ProfileOutter.tsx"],"names":["React","useRef","useState","useEffect","useCallback","matchPc","useSelector","Profile","Axios","ProfileOutter","getSliderWidthRef","formtype","showModalForm","setShowModalForm","getSliderWidth","setgetSliderWidth","aboutTemplateGo","commentTemplateGo","postData","setPostData","postItemsRef","postbackheighthold","document","documentElement","clientHeight","postbackheight","OpenModalFormOnce","setOpenModalFormOnce","CloseModalForm","DeviceBackButtonClicked","window","onpopstate","history","back","OpenModalForm","formtypedata","modalName","pushState","current","clientWidth","screenHeight","darkmode","state","GlobalReducer","screenHeightReducer","darkmodeReducer","PaperStyleLight","PaperStyleDark","PaperReducerLightnDark","PaperStyleReducer","percentage","num","per","addPostItemsRef","itemsRef","includes","push","REACT_APP_SUPERSTARZ_URL","process","env","itemheight","setitemheight","itemheighthold","setitemheighthold","post","withCredentials","then","response","data","message","postdataRep","payload","forEach","obj","itemrealheighthold","cols","out","col","i","length","_val","undefined","alert","catch","error","initialItemheight","map","initialItemrealheighthold","handleClick","e","currentTarget","dataset","id","newArr","onPostsItemload","index","imageHeight","newArrx","newh","choppedHeight","choppedwidth","style","objectFit","console","log","breakPoints","default","loggedIn","IsLoggedReducer","loggedInReducer"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport { Paper, Grid, Box } from \"@material-ui/core\";\r\nimport { matchPc, matchTablet } from \"../DetectDevice\";\r\nimport { RootStateOrAny, useSelector } from \"react-redux\";\r\nimport \"./profile.css\";\r\nimport { Billboard } from \"./Billboard\";\r\nimport { Post } from \"./Post\";\r\nimport { OptionsSlider } from \"./OptionsSlider\";\r\nimport { CommentTemplate } from \"../CommentTemplate\";\r\nimport { Scrollbars } from \"react-custom-scrollbars-2\";\r\nimport { Profile } from \"./Profile\";\r\nimport Axios from \"axios\";\r\n\r\nfunction ProfileOutter() {\r\n  const getSliderWidthRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [formtype] = useState<number>(1);\r\n  const [showModalForm, setShowModalForm] = useState<boolean>(false);\r\n\r\n  const [getSliderWidth, setgetSliderWidth] = useState(0);\r\n\r\n  const [aboutTemplateGo] = useState<boolean>(true);\r\n  const [commentTemplateGo] = useState<boolean>(false);\r\n\r\n  const [postData, setPostData] = useState<Array<any>>([]);\r\n\r\n  const postItemsRef = useRef<any>([]);\r\n\r\n  var postbackheighthold = document.documentElement.clientHeight * 0.3;\r\n  const [postbackheight] = useState<number>(postbackheighthold);\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CLOSE LOG MODAL\r\n  const [OpenModalFormOnce, setOpenModalFormOnce] = useState<boolean>(false);\r\n  const CloseModalForm = useCallback((DeviceBackButtonClicked: number) => {\r\n    ///onpopstate fires when back and forward buttons used\r\n    if (DeviceBackButtonClicked === 1) {\r\n      window.onpopstate = () => {\r\n        setShowModalForm(false);\r\n        setOpenModalFormOnce(false);\r\n      };\r\n    } else {\r\n      setShowModalForm(false);\r\n      setOpenModalFormOnce(false);\r\n      ///Replace modal history state with previous history state\r\n      window.history.back();\r\n    }\r\n  }, []);\r\n\r\n  const OpenModalForm = useCallback(\r\n    (formtypedata: number) => {\r\n      setShowModalForm(true);\r\n      ///Replace current history state (since opening a modal Level 2 grid)...\r\n      /// if this was a level 1 grid (profile-info page use Pushstate to create new history state)\r\n      let modalName = \"Biography\";\r\n\r\n      if (!OpenModalFormOnce) {\r\n        window.history.pushState(null, \"\", modalName);\r\n        setOpenModalFormOnce(true);\r\n        CloseModalForm(1);\r\n      }\r\n    },\r\n    [OpenModalFormOnce, CloseModalForm]\r\n  );\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///GET OPTIONS SLIDER IMAGE WIDTH FROM MATERIAL UI GRID\r\n  useEffect(() => {\r\n    if (getSliderWidthRef.current && getSliderWidthRef.current.clientWidth) {\r\n      setgetSliderWidth(getSliderWidthRef.current.clientWidth);\r\n    }\r\n  }, []);\r\n  ///\r\n  ///\r\n  ///\r\n  /// INTERFACE/TYPES FOR SCREENHEIGHT AND DARKMODE\r\n  interface RootStateGlobalReducer {\r\n    GlobalReducer: {\r\n      darkmode: boolean;\r\n      screenHeight: number;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  /// GET SCREENHEIGHT FROM REDUX STORE\r\n  const { screenHeight, darkmode } = useSelector(\r\n    (state: RootStateGlobalReducer) => ({\r\n      ...state.GlobalReducer,\r\n    })\r\n  );\r\n  const screenHeightReducer = screenHeight;\r\n  const darkmodeReducer = darkmode;\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///MUI PAPER STYLES FROM REDUX\r\n  const { PaperStyleLight, PaperStyleDark } = useSelector(\r\n    (state: RootStateOrAny) => ({\r\n      ...state.PaperReducerLightnDark,\r\n    })\r\n  );\r\n  var PaperStyleReducer = \"\";\r\n\r\n  if (darkmodeReducer) {\r\n    PaperStyleReducer = PaperStyleDark;\r\n  } else {\r\n    PaperStyleReducer = PaperStyleLight;\r\n  }\r\n\r\n  function percentage(num: number, per: number) {\r\n    return (num / 100) * per;\r\n  }\r\n\r\n  ////////////////////////////////////////////////////////////////////\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///CREATE REFS FROM POSTS AND ADD THEM TO ARRAY\r\n  const addPostItemsRef = (itemsRef: any) => {\r\n    if (itemsRef && !postItemsRef.current.includes(itemsRef)) {\r\n      postItemsRef.current.push(itemsRef);\r\n    }\r\n    ////console.log(postItemsRef.current[1]);\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///DOT ENV DATA\r\n  const { REACT_APP_SUPERSTARZ_URL } = process.env;\r\n\r\n  const [itemheight, setitemheight] = useState<Array<string>>([]);\r\n  const [itemheighthold, setitemheighthold] = useState<Array<string>>([]);\r\n\r\n  ///\r\n  ///\r\n  ///MODAL ZOOMED STATE\r\n  useEffect(() => {\r\n    Axios.post(`http://${REACT_APP_SUPERSTARZ_URL}/feeds_chronological`, {\r\n      withCredentials: true,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.message === \"feeds fetched\") {\r\n          var postdataRep = response.data.payload;\r\n\r\n          postdataRep.forEach((obj: any) => {\r\n            obj.itemheight = \"auto\";\r\n            obj.itemrealheighthold = \"0\";\r\n          });\r\n\r\n          ///////////////RE-ORDER ARRAY THEN SETPOST DATA\r\n          const cols = 2;\r\n          const out = [];\r\n          let col = 0;\r\n          while (col < cols) {\r\n            for (let i = 0; i < postdataRep.length; i += cols) {\r\n              let _val = postdataRep[i + col];\r\n              if (_val !== undefined) out.push(_val);\r\n            }\r\n            col++;\r\n          }\r\n          setPostData(out);\r\n          //////////////RE-ORDER ARRAY THEN SETPOST DATA\r\n        } else if (response.data.message === \"error in fetching feeds\") {\r\n          alert(\"Connection malfunction\");\r\n        }\r\n      })\r\n      .catch(function (error) {});\r\n  }, [REACT_APP_SUPERSTARZ_URL]);\r\n\r\n  useEffect(() => {\r\n    if (postData.length > 0) {\r\n      const initialItemheight = postData.map((obj) => obj.itemheight);\r\n      setitemheight(initialItemheight);\r\n\r\n      const initialItemrealheighthold = postData.map(\r\n        (obj) => obj.itemrealheighthold\r\n      );\r\n      setitemheighthold(initialItemrealheighthold);\r\n    }\r\n  }, [postData]);\r\n\r\n  ///\r\n  ///\r\n\r\n  const handleClick = (e: any) => {\r\n    const i = e.currentTarget.dataset.id;\r\n    const newArr = [...itemheight];\r\n    newArr[i] = \"0%\";\r\n    setitemheight(newArr);\r\n  };\r\n\r\n  const onPostsItemload = useCallback(\r\n    (e: any, index: number) => {\r\n      if (postItemsRef.current[index]) {\r\n        var imageHeight = postItemsRef.current[index].clientHeight;\r\n        const newArrx = [...itemheighthold];\r\n        var newh = imageHeight / 1.02 - postbackheighthold;\r\n        newArrx[index] = `${newh}`;\r\n        setitemheighthold(newArrx);\r\n\r\n        //console.log(screenHeightReducer);\r\n        ///console.log(\"jj\");\r\n        ///console.log(imageHeight);\r\n\r\n        var choppedHeight = percentage(screenHeightReducer, 100);\r\n\r\n        var choppedwidth = percentage(screenHeightReducer, 55);\r\n\r\n        if (imageHeight < choppedwidth) {\r\n          postItemsRef.current[index].style.objectFit = \"cover\";\r\n          /////WIDE IMAGE SET\r\n          const newArr = [...itemheight];\r\n          newArr[index] = `${choppedwidth}px`;\r\n          setitemheight(newArr);\r\n          ///////////////////////////////\r\n          const newArrx = [...itemheighthold];\r\n          var newh = choppedwidth / 1.04 - postbackheighthold;\r\n          newArrx[index] = `${newh}`;\r\n          setitemheighthold(newArrx);\r\n          ////////////////////////////\r\n        } else if (imageHeight > choppedHeight) {\r\n          postItemsRef.current[index].style.objectFit = \"cover\";\r\n          /////LONG IMAGE SET\r\n          const newArr = [...itemheight];\r\n          newArr[index] = `${choppedHeight}px`;\r\n          setitemheight(newArr);\r\n          ///////////////////////////////\r\n          const newArrx = [...itemheighthold];\r\n          var newh = choppedHeight / 1.02 - postbackheighthold;\r\n          newArrx[index] = `${newh}`;\r\n          setitemheighthold(newArrx);\r\n          ////////////////////////////////\r\n        } else {\r\n        }\r\n      }\r\n    },\r\n    [screenHeightReducer, itemheight, itemheighthold]\r\n  );\r\n\r\n  console.log(itemheighthold);\r\n  /// {menu[i]}\r\n\r\n  const breakPoints = {\r\n    default: 2,\r\n    960: 2,\r\n    600: 1,\r\n  };\r\n\r\n  ///\r\n  ///\r\n  ///TYPES FOR ISLOGGEDIN\r\n  interface RootStateIsLogged {\r\n    IsLoggedReducer: {\r\n      loggedIn: boolean;\r\n    };\r\n  }\r\n\r\n  ///\r\n  ///LOGGED IN DATA FROM REDUX\r\n  const { loggedIn } = useSelector((state: RootStateIsLogged) => ({\r\n    ...state.IsLoggedReducer,\r\n  }));\r\n  const loggedInReducer = loggedIn;\r\n\r\n  return (\r\n    <>\r\n      loggedInReducer ? <>{matchPc ? null : null}</> : null; loggedInReducer ?{\" \"}\r\n      <Profile /> : null;\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileOutter;\r\n"]},"metadata":{},"sourceType":"module"}